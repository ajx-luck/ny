
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"SRC\user_style.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_KEY_Proess
                                    1-   15     	extern	_ScanKey_Config
                                    1-   16     	extern	_ScanKey
                                    1-   17     	extern	_WS281x_Style_Process
                                    1-   18     	extern	_WS281x_Style_1
                                    1-   19     	extern	_WS281x_Style_2
                                    1-   20     	extern	_WS281x_Style_3
                                    1-   21     	extern	_WS281x_Style_All
                                    1-   22     	extern	_WS281x_RGB
                                    1-   23     	extern	_IR_Decode_Time_Process
                                    1-   24     	extern	_IR_Decode
                                    1-   25     	extern	_IR_KEY_Proess
                                    1-   26     	extern	_WS281x_Drive_Write_Byte
                                    1-   27     	extern	_GPIO_Init
                                    1-   28     	extern	_KEY_GPIO_Init
                                    1-   29     	extern	_Timer1_Init
                                    1-   30     	extern	_Timer3_Init
                                    1-   31     	extern	_INT1_Init
                                    1-   32     	extern	_delay
                                    1-   33     	extern	_PORTAbits
                                    1-   34     	extern	_PORTBbits
                                    1-   35     	extern	_PCONbits
                                    1-   36     	extern	_BWUCONbits
                                    1-   37     	extern	_ABPLCONbits
                                    1-   38     	extern	_BPHCONbits
                                    1-   39     	extern	_INTEbits
                                    1-   40     	extern	_INTFbits
                                    1-   41     	extern	_AWUCONbits
                                    1-   42     	extern	_INTEDGbits
                                    1-   43     	extern	_RFCbits
                                    1-   44     	extern	_INTE2bits
                                    1-   45     	extern	_K1_struct
                                    1-   46     	extern	_stylePhase
                                    1-   47     	extern	_styleIndex
                                    1-   48     	extern	_styleIndexMax
                                    1-   49     	extern	_currentStream
                                    1-   50     	extern	_styleNum
                                    1-   51     	extern	_styleTime
                                    1-   52     	extern	_userPhase
                                    1-   53     	extern	_accColor
                                    1-   54     	extern	_backdropColor
                                    1-   55     	extern	_irDeCodeTimeOverFlow
                                    1-   56     	extern	_irDeCodeDat
                                    1-   57     	extern	_irDeCodeBitTime
                                    1-   58     	extern	_irDeCodeBitIndex
                                    1-   59     	extern	_INDF
                                    1-   60     	extern	_TMR0
                                    1-   61     	extern	_PCL
                                    1-   62     	extern	_STATUS
                                    1-   63     	extern	_FSR
                                    1-   64     	extern	_PORTA
                                    1-   65     	extern	_PORTB
                                    1-   66     	extern	_PCON
                                    1-   67     	extern	_BWUCON
                                    1-   68     	extern	_PCHBUF
                                    1-   69     	extern	_ABPLCON
                                    1-   70     	extern	_BPHCON
                                    1-   71     	extern	_INTE
                                    1-   72     	extern	_INTF
                                    1-   73     	extern	_AWUCON
                                    1-   74     	extern	_INTEDG
                                    1-   75     	extern	_TMRH
                                    1-   76     	extern	_RFC
                                    1-   77     	extern	_TM34RH
                                    1-   78     	extern	_INTE2
                                    1-   79     	extern	_TMR1
                                    1-   80     	extern	_T1CR1
                                    1-   81     	extern	_T1CR2
                                    1-   82     	extern	_PWM1DUTY
                                    1-   83     	extern	_PS1CV
                                    1-   84     	extern	_BZ1CR
                                    1-   85     	extern	_IRCR
                                    1-   86     	extern	_TBHP
                                    1-   87     	extern	_TBHD
                                    1-   88     	extern	_P2CR1
                                    1-   89     	extern	_PWM2DUTY
                                    1-   90     	extern	_OSCCR
                                    1-   91     	extern	_TMR3
                                    1-   92     	extern	_T3CR1
                                    1-   93     	extern	_T3CR2
                                    1-   94     	extern	_PWM3DUTY
                                    1-   95     	extern	_PS3CV
                                    1-   96     	extern	_P4CR1
                                    1-   97     	extern	_PWM4DUTY
                                    1-   98     	extern	_P5CR1
                                    1-   99     	extern	_PWM5DUTY
                                    1-  100     	extern	_PWM5RH
                                    1-  101     	extern	_IOSTA
                                    1-  102     	extern	_IOSTB
                                    1-  103     	extern	_APHCON
                                    1-  104     	extern	_PS0CV
                                    1-  105     	extern	_BODCON
                                    1-  106     	extern	_CMPCR
                                    1-  107     	extern	_PCON1
                                    1-  108     	extern	_T0MD
                                    1-  110     	extern PSAVE
                                    1-  111     	extern SSAVE
                                    1-  112     	extern WSAVE
                                    1-  113     	extern STK12
                                    1-  114     	extern STK11
                                    1-  115     	extern STK10
                                    1-  116     	extern STK09
                                    1-  117     	extern STK08
                                    1-  118     	extern STK07
                                    1-  119     	extern STK06
                                    1-  120     	extern STK05
                                    1-  121     	extern STK04
                                    1-  122     	extern STK03
                                    1-  123     	extern STK02
                                    1-  124     	extern STK01
                                    1-  125     	extern STK00
                                    1-  126     ;--------------------------------------------------------
                                    1-  127     ; global declarations
                                    1-  128     ;--------------------------------------------------------
                                    1-  129     	extern	_User_Style_Collision_Process
                                    1-  130     	extern	_User_Style_Collision_Start
                                    1-  131     	extern	_User_Style_Sweep_Process
                                    1-  132     	extern	_User_Style_Sweep_Start
                                    1-  133     	extern	_User_Style_Breath_Process
                                    1-  134     	extern	_User_Style_Breath_Start
                                    1-  135     	extern	_User_Style_Time_SET
                                    1-  137     ;--------------------------------------------------------
                                    1-  138     ; global definitions
                                    1-  139     ;--------------------------------------------------------
                                    1-  140     .segment "uninit"
     0000                           1-  141     _User_Style_Time_SET:
                                    1-  142     	.res	2
                                    1-  145     ;--------------------------------------------------------
                                    1-  146     ; absolute symbol definitions
                                    1-  147     ;--------------------------------------------------------
                                    1-  148     ;--------------------------------------------------------
                                    1-  149     ; compiler-defined variables
                                    1-  150     ;--------------------------------------------------------
                                    1-  151     ;--------------------------------------------------------
                                    1-  152     ; initialized data
                                    1-  153     ;--------------------------------------------------------
                                    1-  154     ;--------------------------------------------------------
                                    1-  155     ; overlayable items in internal ram 
                                    1-  156     ;--------------------------------------------------------
                                    1-  157     ;	udata_ovr
                                    1-  158     ;--------------------------------------------------------
                                    1-  159     ; code
                                    1-  160     ;--------------------------------------------------------
                                    1-  161     ;***
                                    1-  162     ;  pBlock Stats: dbName = C
                                    1-  163     ;***
                                    1-  164     ;has an exit
                                    1-  165     ;functions called:
                                    1-  166     ;   _WS281x_Style_2
                                    1-  167     ;   _WS281x_Style_2
                                    1-  168     ;   _WS281x_Style_2
                                    1-  169     ;   _WS281x_Style_2
                                    1-  170     ;   _WS281x_Style_2
                                    1-  171     ;   _WS281x_Style_2
                                    1-  172     ;   _WS281x_Style_2
                                    1-  173     ;   _WS281x_Style_2
                                    1-  174     ;; Starting pCode block
                                    1-  175     .segment "code"; module=user_style, function=_User_Style_Collision_Process
     0000                           1-  177     _User_Style_Collision_Process:
                                    1-  178     ; 2 exit points
                                    1-  179     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  180     ;;unsigned compare: left >= lit (0x4=4), size=1
                                    1-  181     	.line	166, "SRC\user_style.c"; 	switch(userPhase) {
     0000 2104                      1-  182     	MOVIA	0x04
                                    1-  183     	BANKSEL	_userPhase
     0001 04rr                      1-  184     	SUBAR	_userPhase,W
     0002 0C03                      1-  185     	BTRSC	STATUS,0
     0003 3rrr                      1-  186     	LGOTO	_00250_DS_
     0004 21rr                      1-  187     	MOVIA	((_00280_DS_ >> 8) & 0xff)
     0005 008A                      1-  188     	MOVAR	PCHBUF
     0006 01rr                      1-  189     	MOVR	_userPhase,W
     0007 25rr                      1-  190     	ADDIA	_00280_DS_
     0008 0C03                      1-  191     	BTRSC	STATUS,0
     0009 058A                      1-  192     	INCR	PCHBUF,F
     000A 0082                      1-  193     	MOVAR	PCL
     000B                           1-  194     _00280_DS_:
     000B 3rrr                      1-  195     	LGOTO	_00229_DS_
     000C 3rrr                      1-  196     	LGOTO	_00234_DS_
     000D 3rrr                      1-  197     	LGOTO	_00239_DS_
     000E 3rrr                      1-  198     	LGOTO	_00244_DS_
     000F                           1-  199     _00229_DS_:
                                    1-  200     	.line	168, "SRC\user_style.c"; 	if(styleTime == 0) {
                                    1-  201     	BANKSEL	_styleTime
     000F 01rr                      1-  202     	MOVR	_styleTime,W
     0010 11rr                      1-  203     	IORAR	(_styleTime + 1),W
     0011 0903                      1-  204     	BTRSS	STATUS,2
     0012 3rrr                      1-  205     	LGOTO	_00250_DS_
                                    1-  206     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  207     	.line	169, "SRC\user_style.c"; 	accColor[_R_] = 255;
     0013 21FF                      1-  208     	MOVIA	0xff
                                    1-  209     	BANKSEL	_accColor
     0014 00rr                      1-  210     	MOVAR	(_accColor + 0)
                                    1-  211     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  212     	.line	170, "SRC\user_style.c"; 	accColor[_G_] = 0;
     0015 02rr                      1-  213     	CLRR	(_accColor + 1)
                                    1-  214     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  215     	.line	171, "SRC\user_style.c"; 	accColor[_B_] = 0;
     0016 02rr                      1-  216     	CLRR	(_accColor + 2)
                                    1-  217     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  218     	.line	172, "SRC\user_style.c"; 	backdropColor[_R_] = 0;
                                    1-  219     	BANKSEL	_backdropColor
     0017 02rr                      1-  220     	CLRR	(_backdropColor + 0)
                                    1-  221     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  222     	.line	173, "SRC\user_style.c"; 	backdropColor[_G_] = 0;
     0018 02rr                      1-  223     	CLRR	(_backdropColor + 1)
                                    1-  224     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  225     	.line	174, "SRC\user_style.c"; 	backdropColor[_B_] = 0;
     0019 02rr                      1-  226     	CLRR	(_backdropColor + 2)
                                    1-  227     	.line	175, "SRC\user_style.c"; 	WS281x_Style_2(_Style_2_Dir_Positive_);
     001A 2121                      1-  228     	MOVIA	0x21
     001B 2rrr                      1-  229     	LCALL	_WS281x_Style_2
                                    1-  230     	.line	176, "SRC\user_style.c"; 	if(stylePhase == _Style_Idle_Phase_) {
                                    1-  231     	BANKSEL	_stylePhase
     001C 01rr                      1-  232     	MOVR	_stylePhase,W
     001D 2463                      1-  233     	XORIA	0x63
     001E 0903                      1-  234     	BTRSS	STATUS,2
     001F 3rrr                      1-  235     	LGOTO	_00250_DS_
                                    1-  236     	.line	177, "SRC\user_style.c"; 	styleTime = User_Style_Time_SET;		// 切换间隔时间
                                    1-  237     	BANKSEL	_User_Style_Time_SET
     0020 01rr                      1-  238     	MOVR	_User_Style_Time_SET,W
                                    1-  239     	BANKSEL	_styleTime
     0021 00rr                      1-  240     	MOVAR	_styleTime
                                    1-  241     	BANKSEL	_User_Style_Time_SET
     0022 01rr                      1-  242     	MOVR	(_User_Style_Time_SET + 1),W
                                    1-  243     	BANKSEL	_styleTime
     0023 00rr                      1-  244     	MOVAR	(_styleTime + 1)
                                    1-  245     	.line	178, "SRC\user_style.c"; 	stylePhase = 0;
                                    1-  246     	BANKSEL	_stylePhase
     0024 02rr                      1-  247     	CLRR	_stylePhase
                                    1-  248     	.line	179, "SRC\user_style.c"; 	userPhase++;
                                    1-  249     	BANKSEL	_userPhase
     0025 05rr                      1-  250     	INCR	_userPhase,F
                                    1-  251     	.line	182, "SRC\user_style.c"; 	} break;
     0026 3rrr                      1-  252     	LGOTO	_00250_DS_
     0027                           1-  253     _00234_DS_:
                                    1-  254     	.line	184, "SRC\user_style.c"; 	if(styleTime == 0) {
                                    1-  255     	BANKSEL	_styleTime
     0027 01rr                      1-  256     	MOVR	_styleTime,W
     0028 11rr                      1-  257     	IORAR	(_styleTime + 1),W
     0029 0903                      1-  258     	BTRSS	STATUS,2
     002A 3rrr                      1-  259     	LGOTO	_00250_DS_
                                    1-  260     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  261     	.line	185, "SRC\user_style.c"; 	accColor[_R_] = 0;
                                    1-  262     	BANKSEL	_accColor
     002B 02rr                      1-  263     	CLRR	(_accColor + 0)
                                    1-  264     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  265     	.line	186, "SRC\user_style.c"; 	accColor[_G_] = 255;
     002C 21FF                      1-  266     	MOVIA	0xff
     002D 00rr                      1-  267     	MOVAR	(_accColor + 1)
                                    1-  268     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  269     	.line	187, "SRC\user_style.c"; 	accColor[_B_] = 0;
     002E 02rr                      1-  270     	CLRR	(_accColor + 2)
                                    1-  271     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  272     	.line	188, "SRC\user_style.c"; 	backdropColor[_R_] = 255;
     002F 21FF                      1-  273     	MOVIA	0xff
                                    1-  274     	BANKSEL	_backdropColor
     0030 00rr                      1-  275     	MOVAR	(_backdropColor + 0)
                                    1-  276     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  277     	.line	189, "SRC\user_style.c"; 	backdropColor[_G_] = 0;
     0031 02rr                      1-  278     	CLRR	(_backdropColor + 1)
                                    1-  279     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  280     	.line	190, "SRC\user_style.c"; 	backdropColor[_B_] = 0;
     0032 02rr                      1-  281     	CLRR	(_backdropColor + 2)
                                    1-  282     	.line	191, "SRC\user_style.c"; 	WS281x_Style_2(_Style_2_Dir_Negative_);
     0033 2122                      1-  283     	MOVIA	0x22
     0034 2rrr                      1-  284     	LCALL	_WS281x_Style_2
                                    1-  285     	.line	192, "SRC\user_style.c"; 	if(stylePhase == _Style_Idle_Phase_) {
                                    1-  286     	BANKSEL	_stylePhase
     0035 01rr                      1-  287     	MOVR	_stylePhase,W
     0036 2463                      1-  288     	XORIA	0x63
     0037 0903                      1-  289     	BTRSS	STATUS,2
     0038 3rrr                      1-  290     	LGOTO	_00250_DS_
                                    1-  291     	.line	193, "SRC\user_style.c"; 	styleTime = User_Style_Time_SET;		// 切换间隔时间
                                    1-  292     	BANKSEL	_User_Style_Time_SET
     0039 01rr                      1-  293     	MOVR	_User_Style_Time_SET,W
                                    1-  294     	BANKSEL	_styleTime
     003A 00rr                      1-  295     	MOVAR	_styleTime
                                    1-  296     	BANKSEL	_User_Style_Time_SET
     003B 01rr                      1-  297     	MOVR	(_User_Style_Time_SET + 1),W
                                    1-  298     	BANKSEL	_styleTime
     003C 00rr                      1-  299     	MOVAR	(_styleTime + 1)
                                    1-  300     	.line	194, "SRC\user_style.c"; 	stylePhase = 0;
                                    1-  301     	BANKSEL	_stylePhase
     003D 02rr                      1-  302     	CLRR	_stylePhase
                                    1-  303     	.line	195, "SRC\user_style.c"; 	userPhase++;
                                    1-  304     	BANKSEL	_userPhase
     003E 05rr                      1-  305     	INCR	_userPhase,F
                                    1-  306     	.line	198, "SRC\user_style.c"; 	} break;
     003F 3rrr                      1-  307     	LGOTO	_00250_DS_
     0040                           1-  308     _00239_DS_:
                                    1-  309     	.line	200, "SRC\user_style.c"; 	if(styleTime == 0) {
                                    1-  310     	BANKSEL	_styleTime
     0040 01rr                      1-  311     	MOVR	_styleTime,W
     0041 11rr                      1-  312     	IORAR	(_styleTime + 1),W
     0042 0903                      1-  313     	BTRSS	STATUS,2
     0043 3rrr                      1-  314     	LGOTO	_00250_DS_
                                    1-  315     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  316     	.line	201, "SRC\user_style.c"; 	accColor[_R_] = 0;
                                    1-  317     	BANKSEL	_accColor
     0044 02rr                      1-  318     	CLRR	(_accColor + 0)
                                    1-  319     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  320     	.line	202, "SRC\user_style.c"; 	accColor[_G_] = 0;
     0045 02rr                      1-  321     	CLRR	(_accColor + 1)
                                    1-  322     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  323     	.line	203, "SRC\user_style.c"; 	accColor[_B_] = 255;
     0046 21FF                      1-  324     	MOVIA	0xff
     0047 00rr                      1-  325     	MOVAR	(_accColor + 2)
                                    1-  326     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  327     	.line	204, "SRC\user_style.c"; 	backdropColor[_R_] = 0;
                                    1-  328     	BANKSEL	_backdropColor
     0048 02rr                      1-  329     	CLRR	(_backdropColor + 0)
                                    1-  330     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  331     	.line	205, "SRC\user_style.c"; 	backdropColor[_G_] = 255;
     0049 21FF                      1-  332     	MOVIA	0xff
     004A 00rr                      1-  333     	MOVAR	(_backdropColor + 1)
                                    1-  334     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  335     	.line	206, "SRC\user_style.c"; 	backdropColor[_B_] = 0;
     004B 02rr                      1-  336     	CLRR	(_backdropColor + 2)
                                    1-  337     	.line	207, "SRC\user_style.c"; 	WS281x_Style_2(_Style_2_Dir_Positive_);
     004C 2121                      1-  338     	MOVIA	0x21
     004D 2rrr                      1-  339     	LCALL	_WS281x_Style_2
                                    1-  340     	.line	208, "SRC\user_style.c"; 	if(stylePhase == _Style_Idle_Phase_) {
                                    1-  341     	BANKSEL	_stylePhase
     004E 01rr                      1-  342     	MOVR	_stylePhase,W
     004F 2463                      1-  343     	XORIA	0x63
     0050 0903                      1-  344     	BTRSS	STATUS,2
     0051 3rrr                      1-  345     	LGOTO	_00250_DS_
                                    1-  346     	.line	209, "SRC\user_style.c"; 	styleTime = User_Style_Time_SET;		// 切换间隔时间
                                    1-  347     	BANKSEL	_User_Style_Time_SET
     0052 01rr                      1-  348     	MOVR	_User_Style_Time_SET,W
                                    1-  349     	BANKSEL	_styleTime
     0053 00rr                      1-  350     	MOVAR	_styleTime
                                    1-  351     	BANKSEL	_User_Style_Time_SET
     0054 01rr                      1-  352     	MOVR	(_User_Style_Time_SET + 1),W
                                    1-  353     	BANKSEL	_styleTime
     0055 00rr                      1-  354     	MOVAR	(_styleTime + 1)
                                    1-  355     	.line	210, "SRC\user_style.c"; 	stylePhase = 0;
                                    1-  356     	BANKSEL	_stylePhase
     0056 02rr                      1-  357     	CLRR	_stylePhase
                                    1-  358     	.line	211, "SRC\user_style.c"; 	userPhase++;
                                    1-  359     	BANKSEL	_userPhase
     0057 05rr                      1-  360     	INCR	_userPhase,F
                                    1-  361     	.line	214, "SRC\user_style.c"; 	} break;
     0058 3rrr                      1-  362     	LGOTO	_00250_DS_
     0059                           1-  363     _00244_DS_:
                                    1-  364     	.line	216, "SRC\user_style.c"; 	if(styleTime == 0) {
                                    1-  365     	BANKSEL	_styleTime
     0059 01rr                      1-  366     	MOVR	_styleTime,W
     005A 11rr                      1-  367     	IORAR	(_styleTime + 1),W
     005B 0903                      1-  368     	BTRSS	STATUS,2
     005C 3rrr                      1-  369     	LGOTO	_00250_DS_
                                    1-  370     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  371     	.line	217, "SRC\user_style.c"; 	accColor[_R_] = 255;
     005D 21FF                      1-  372     	MOVIA	0xff
                                    1-  373     	BANKSEL	_accColor
     005E 00rr                      1-  374     	MOVAR	(_accColor + 0)
                                    1-  375     	.line	218, "SRC\user_style.c"; 	accColor[_G_] = 255;
     005F 00rr                      1-  376     	MOVAR	(_accColor + 1)
                                    1-  377     	.line	219, "SRC\user_style.c"; 	accColor[_B_] = 255;
     0060 00rr                      1-  378     	MOVAR	(_accColor + 2)
                                    1-  379     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  380     	.line	220, "SRC\user_style.c"; 	backdropColor[_R_] = 0;
                                    1-  381     	BANKSEL	_backdropColor
     0061 02rr                      1-  382     	CLRR	(_backdropColor + 0)
                                    1-  383     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  384     	.line	221, "SRC\user_style.c"; 	backdropColor[_G_] = 0;
     0062 02rr                      1-  385     	CLRR	(_backdropColor + 1)
                                    1-  386     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  387     	.line	222, "SRC\user_style.c"; 	backdropColor[_B_] = 255;
     0063 21FF                      1-  388     	MOVIA	0xff
     0064 00rr                      1-  389     	MOVAR	(_backdropColor + 2)
                                    1-  390     	.line	223, "SRC\user_style.c"; 	WS281x_Style_2(_Style_2_Dir_Negative_);
     0065 2122                      1-  391     	MOVIA	0x22
     0066 2rrr                      1-  392     	LCALL	_WS281x_Style_2
                                    1-  393     	.line	224, "SRC\user_style.c"; 	if(stylePhase == _Style_Idle_Phase_) {
                                    1-  394     	BANKSEL	_stylePhase
     0067 01rr                      1-  395     	MOVR	_stylePhase,W
     0068 2463                      1-  396     	XORIA	0x63
     0069 0903                      1-  397     	BTRSS	STATUS,2
     006A 3rrr                      1-  398     	LGOTO	_00250_DS_
                                    1-  399     	.line	225, "SRC\user_style.c"; 	styleTime = User_Style_Time_SET;		// 切换间隔时间
                                    1-  400     	BANKSEL	_User_Style_Time_SET
     006B 01rr                      1-  401     	MOVR	_User_Style_Time_SET,W
                                    1-  402     	BANKSEL	_styleTime
     006C 00rr                      1-  403     	MOVAR	_styleTime
                                    1-  404     	BANKSEL	_User_Style_Time_SET
     006D 01rr                      1-  405     	MOVR	(_User_Style_Time_SET + 1),W
                                    1-  406     	BANKSEL	_styleTime
     006E 00rr                      1-  407     	MOVAR	(_styleTime + 1)
                                    1-  408     	.line	226, "SRC\user_style.c"; 	stylePhase = 0;
                                    1-  409     	BANKSEL	_stylePhase
     006F 02rr                      1-  410     	CLRR	_stylePhase
                                    1-  411     	.line	227, "SRC\user_style.c"; 	userPhase = 0;			// 无限循环
                                    1-  412     	BANKSEL	_userPhase
     0070 02rr                      1-  413     	CLRR	_userPhase
     0071                           1-  414     _00250_DS_:
                                    1-  415     	.line	233, "SRC\user_style.c"; 	}
                                    1-  416     	RETURN	
     0071 0010                      3-   26 m1      ret
                                    1-  417     ; exit point of _User_Style_Collision_Process
                                    1-  419     ;***
                                    1-  420     ;  pBlock Stats: dbName = C
                                    1-  421     ;***
                                    1-  422     ;has an exit
                                    1-  423     ;; Starting pCode block
                                    1-  424     .segment "code"; module=user_style, function=_User_Style_Collision_Start
     0000                           1-  426     _User_Style_Collision_Start:
                                    1-  427     ; 2 exit points
                                    1-  428     	.line	161, "SRC\user_style.c"; 	styleNum |= (1 << 7);
     0000 2182                      1-  429     	MOVIA	0x82
                                    1-  430     	BANKSEL	_styleNum
     0001 00rr                      1-  431     	MOVAR	_styleNum
                                    1-  432     	.line	162, "SRC\user_style.c"; 	}
                                    1-  433     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  434     ; exit point of _User_Style_Collision_Start
                                    1-  436     ;***
                                    1-  437     ;  pBlock Stats: dbName = C
                                    1-  438     ;***
                                    1-  439     ;has an exit
                                    1-  440     ;functions called:
                                    1-  441     ;   _WS281x_Style_2
                                    1-  442     ;   _WS281x_Style_2
                                    1-  443     ;   _WS281x_Style_2
                                    1-  444     ;   _WS281x_Style_2
                                    1-  445     ;   _WS281x_Style_2
                                    1-  446     ;   _WS281x_Style_2
                                    1-  447     ;   _WS281x_Style_2
                                    1-  448     ;   _WS281x_Style_2
                                    1-  449     ;; Starting pCode block
                                    1-  450     .segment "code"; module=user_style, function=_User_Style_Sweep_Process
     0000                           1-  452     _User_Style_Sweep_Process:
                                    1-  453     ; 2 exit points
                                    1-  454     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  455     ;;unsigned compare: left >= lit (0x4=4), size=1
                                    1-  456     	.line	86, "SRC\user_style.c"; 	switch(userPhase) {
     0000 2104                      1-  457     	MOVIA	0x04
                                    1-  458     	BANKSEL	_userPhase
     0001 04rr                      1-  459     	SUBAR	_userPhase,W
     0002 0C03                      1-  460     	BTRSC	STATUS,0
     0003 3rrr                      1-  461     	LGOTO	_00190_DS_
     0004 21rr                      1-  462     	MOVIA	((_00220_DS_ >> 8) & 0xff)
     0005 008A                      1-  463     	MOVAR	PCHBUF
     0006 01rr                      1-  464     	MOVR	_userPhase,W
     0007 25rr                      1-  465     	ADDIA	_00220_DS_
     0008 0C03                      1-  466     	BTRSC	STATUS,0
     0009 058A                      1-  467     	INCR	PCHBUF,F
     000A 0082                      1-  468     	MOVAR	PCL
     000B                           1-  469     _00220_DS_:
     000B 3rrr                      1-  470     	LGOTO	_00169_DS_
     000C 3rrr                      1-  471     	LGOTO	_00174_DS_
     000D 3rrr                      1-  472     	LGOTO	_00179_DS_
     000E 3rrr                      1-  473     	LGOTO	_00184_DS_
     000F                           1-  474     _00169_DS_:
                                    1-  475     	.line	88, "SRC\user_style.c"; 	if(styleTime == 0) {
                                    1-  476     	BANKSEL	_styleTime
     000F 01rr                      1-  477     	MOVR	_styleTime,W
     0010 11rr                      1-  478     	IORAR	(_styleTime + 1),W
     0011 0903                      1-  479     	BTRSS	STATUS,2
     0012 3rrr                      1-  480     	LGOTO	_00190_DS_
                                    1-  481     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  482     	.line	89, "SRC\user_style.c"; 	accColor[_R_] = 255;
     0013 21FF                      1-  483     	MOVIA	0xff
                                    1-  484     	BANKSEL	_accColor
     0014 00rr                      1-  485     	MOVAR	(_accColor + 0)
                                    1-  486     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  487     	.line	90, "SRC\user_style.c"; 	accColor[_G_] = 0;
     0015 02rr                      1-  488     	CLRR	(_accColor + 1)
                                    1-  489     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  490     	.line	91, "SRC\user_style.c"; 	accColor[_B_] = 0;
     0016 02rr                      1-  491     	CLRR	(_accColor + 2)
                                    1-  492     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  493     	.line	92, "SRC\user_style.c"; 	backdropColor[_R_] = 0;
                                    1-  494     	BANKSEL	_backdropColor
     0017 02rr                      1-  495     	CLRR	(_backdropColor + 0)
                                    1-  496     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  497     	.line	93, "SRC\user_style.c"; 	backdropColor[_G_] = 0;
     0018 02rr                      1-  498     	CLRR	(_backdropColor + 1)
                                    1-  499     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  500     	.line	94, "SRC\user_style.c"; 	backdropColor[_B_] = 0;
     0019 02rr                      1-  501     	CLRR	(_backdropColor + 2)
                                    1-  502     	.line	95, "SRC\user_style.c"; 	WS281x_Style_2(_Style_2_Dir_Positive_);
     001A 2121                      1-  503     	MOVIA	0x21
     001B 2rrr                      1-  504     	LCALL	_WS281x_Style_2
                                    1-  505     	.line	96, "SRC\user_style.c"; 	if(stylePhase == _Style_Idle_Phase_) {
                                    1-  506     	BANKSEL	_stylePhase
     001C 01rr                      1-  507     	MOVR	_stylePhase,W
     001D 2463                      1-  508     	XORIA	0x63
     001E 0903                      1-  509     	BTRSS	STATUS,2
     001F 3rrr                      1-  510     	LGOTO	_00190_DS_
                                    1-  511     	.line	97, "SRC\user_style.c"; 	styleTime = User_Style_Time_SET;		// 切换间隔时间
                                    1-  512     	BANKSEL	_User_Style_Time_SET
     0020 01rr                      1-  513     	MOVR	_User_Style_Time_SET,W
                                    1-  514     	BANKSEL	_styleTime
     0021 00rr                      1-  515     	MOVAR	_styleTime
                                    1-  516     	BANKSEL	_User_Style_Time_SET
     0022 01rr                      1-  517     	MOVR	(_User_Style_Time_SET + 1),W
                                    1-  518     	BANKSEL	_styleTime
     0023 00rr                      1-  519     	MOVAR	(_styleTime + 1)
                                    1-  520     	.line	98, "SRC\user_style.c"; 	stylePhase = 0;
                                    1-  521     	BANKSEL	_stylePhase
     0024 02rr                      1-  522     	CLRR	_stylePhase
                                    1-  523     	.line	99, "SRC\user_style.c"; 	userPhase++;
                                    1-  524     	BANKSEL	_userPhase
     0025 05rr                      1-  525     	INCR	_userPhase,F
                                    1-  526     	.line	102, "SRC\user_style.c"; 	} break;
     0026 3rrr                      1-  527     	LGOTO	_00190_DS_
     0027                           1-  528     _00174_DS_:
                                    1-  529     	.line	104, "SRC\user_style.c"; 	if(styleTime == 0) {
                                    1-  530     	BANKSEL	_styleTime
     0027 01rr                      1-  531     	MOVR	_styleTime,W
     0028 11rr                      1-  532     	IORAR	(_styleTime + 1),W
     0029 0903                      1-  533     	BTRSS	STATUS,2
     002A 3rrr                      1-  534     	LGOTO	_00190_DS_
                                    1-  535     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  536     	.line	105, "SRC\user_style.c"; 	accColor[_R_] = 0;
                                    1-  537     	BANKSEL	_accColor
     002B 02rr                      1-  538     	CLRR	(_accColor + 0)
                                    1-  539     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  540     	.line	106, "SRC\user_style.c"; 	accColor[_G_] = 255;
     002C 21FF                      1-  541     	MOVIA	0xff
     002D 00rr                      1-  542     	MOVAR	(_accColor + 1)
                                    1-  543     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  544     	.line	107, "SRC\user_style.c"; 	accColor[_B_] = 0;
     002E 02rr                      1-  545     	CLRR	(_accColor + 2)
                                    1-  546     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  547     	.line	108, "SRC\user_style.c"; 	backdropColor[_R_] = 255;
     002F 21FF                      1-  548     	MOVIA	0xff
                                    1-  549     	BANKSEL	_backdropColor
     0030 00rr                      1-  550     	MOVAR	(_backdropColor + 0)
                                    1-  551     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  552     	.line	109, "SRC\user_style.c"; 	backdropColor[_G_] = 0;
     0031 02rr                      1-  553     	CLRR	(_backdropColor + 1)
                                    1-  554     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  555     	.line	110, "SRC\user_style.c"; 	backdropColor[_B_] = 0;
     0032 02rr                      1-  556     	CLRR	(_backdropColor + 2)
                                    1-  557     	.line	111, "SRC\user_style.c"; 	WS281x_Style_2(_Style_2_Dir_Positive_);
     0033 2121                      1-  558     	MOVIA	0x21
     0034 2rrr                      1-  559     	LCALL	_WS281x_Style_2
                                    1-  560     	.line	112, "SRC\user_style.c"; 	if(stylePhase == _Style_Idle_Phase_) {
                                    1-  561     	BANKSEL	_stylePhase
     0035 01rr                      1-  562     	MOVR	_stylePhase,W
     0036 2463                      1-  563     	XORIA	0x63
     0037 0903                      1-  564     	BTRSS	STATUS,2
     0038 3rrr                      1-  565     	LGOTO	_00190_DS_
                                    1-  566     	.line	113, "SRC\user_style.c"; 	styleTime = User_Style_Time_SET;		// 切换间隔时间
                                    1-  567     	BANKSEL	_User_Style_Time_SET
     0039 01rr                      1-  568     	MOVR	_User_Style_Time_SET,W
                                    1-  569     	BANKSEL	_styleTime
     003A 00rr                      1-  570     	MOVAR	_styleTime
                                    1-  571     	BANKSEL	_User_Style_Time_SET
     003B 01rr                      1-  572     	MOVR	(_User_Style_Time_SET + 1),W
                                    1-  573     	BANKSEL	_styleTime
     003C 00rr                      1-  574     	MOVAR	(_styleTime + 1)
                                    1-  575     	.line	114, "SRC\user_style.c"; 	stylePhase = 0;
                                    1-  576     	BANKSEL	_stylePhase
     003D 02rr                      1-  577     	CLRR	_stylePhase
                                    1-  578     	.line	115, "SRC\user_style.c"; 	userPhase++;
                                    1-  579     	BANKSEL	_userPhase
     003E 05rr                      1-  580     	INCR	_userPhase,F
                                    1-  581     	.line	118, "SRC\user_style.c"; 	} break;
     003F 3rrr                      1-  582     	LGOTO	_00190_DS_
     0040                           1-  583     _00179_DS_:
                                    1-  584     	.line	120, "SRC\user_style.c"; 	if(styleTime == 0) {
                                    1-  585     	BANKSEL	_styleTime
     0040 01rr                      1-  586     	MOVR	_styleTime,W
     0041 11rr                      1-  587     	IORAR	(_styleTime + 1),W
     0042 0903                      1-  588     	BTRSS	STATUS,2
     0043 3rrr                      1-  589     	LGOTO	_00190_DS_
                                    1-  590     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  591     	.line	121, "SRC\user_style.c"; 	accColor[_R_] = 0;
                                    1-  592     	BANKSEL	_accColor
     0044 02rr                      1-  593     	CLRR	(_accColor + 0)
                                    1-  594     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  595     	.line	122, "SRC\user_style.c"; 	accColor[_G_] = 0;
     0045 02rr                      1-  596     	CLRR	(_accColor + 1)
                                    1-  597     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  598     	.line	123, "SRC\user_style.c"; 	accColor[_B_] = 255;
     0046 21FF                      1-  599     	MOVIA	0xff
     0047 00rr                      1-  600     	MOVAR	(_accColor + 2)
                                    1-  601     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  602     	.line	124, "SRC\user_style.c"; 	backdropColor[_R_] = 0;
                                    1-  603     	BANKSEL	_backdropColor
     0048 02rr                      1-  604     	CLRR	(_backdropColor + 0)
                                    1-  605     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  606     	.line	125, "SRC\user_style.c"; 	backdropColor[_G_] = 255;
     0049 21FF                      1-  607     	MOVIA	0xff
     004A 00rr                      1-  608     	MOVAR	(_backdropColor + 1)
                                    1-  609     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  610     	.line	126, "SRC\user_style.c"; 	backdropColor[_B_] = 0;
     004B 02rr                      1-  611     	CLRR	(_backdropColor + 2)
                                    1-  612     	.line	127, "SRC\user_style.c"; 	WS281x_Style_2(_Style_2_Dir_Positive_);
     004C 2121                      1-  613     	MOVIA	0x21
     004D 2rrr                      1-  614     	LCALL	_WS281x_Style_2
                                    1-  615     	.line	128, "SRC\user_style.c"; 	if(stylePhase == _Style_Idle_Phase_) {
                                    1-  616     	BANKSEL	_stylePhase
     004E 01rr                      1-  617     	MOVR	_stylePhase,W
     004F 2463                      1-  618     	XORIA	0x63
     0050 0903                      1-  619     	BTRSS	STATUS,2
     0051 3rrr                      1-  620     	LGOTO	_00190_DS_
                                    1-  621     	.line	129, "SRC\user_style.c"; 	styleTime = User_Style_Time_SET;		// 切换间隔时间
                                    1-  622     	BANKSEL	_User_Style_Time_SET
     0052 01rr                      1-  623     	MOVR	_User_Style_Time_SET,W
                                    1-  624     	BANKSEL	_styleTime
     0053 00rr                      1-  625     	MOVAR	_styleTime
                                    1-  626     	BANKSEL	_User_Style_Time_SET
     0054 01rr                      1-  627     	MOVR	(_User_Style_Time_SET + 1),W
                                    1-  628     	BANKSEL	_styleTime
     0055 00rr                      1-  629     	MOVAR	(_styleTime + 1)
                                    1-  630     	.line	130, "SRC\user_style.c"; 	stylePhase = 0;
                                    1-  631     	BANKSEL	_stylePhase
     0056 02rr                      1-  632     	CLRR	_stylePhase
                                    1-  633     	.line	131, "SRC\user_style.c"; 	userPhase++;
                                    1-  634     	BANKSEL	_userPhase
     0057 05rr                      1-  635     	INCR	_userPhase,F
                                    1-  636     	.line	134, "SRC\user_style.c"; 	} break;
     0058 3rrr                      1-  637     	LGOTO	_00190_DS_
     0059                           1-  638     _00184_DS_:
                                    1-  639     	.line	136, "SRC\user_style.c"; 	if(styleTime == 0) {
                                    1-  640     	BANKSEL	_styleTime
     0059 01rr                      1-  641     	MOVR	_styleTime,W
     005A 11rr                      1-  642     	IORAR	(_styleTime + 1),W
     005B 0903                      1-  643     	BTRSS	STATUS,2
     005C 3rrr                      1-  644     	LGOTO	_00190_DS_
                                    1-  645     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  646     	.line	137, "SRC\user_style.c"; 	accColor[_R_] = 255;
     005D 21FF                      1-  647     	MOVIA	0xff
                                    1-  648     	BANKSEL	_accColor
     005E 00rr                      1-  649     	MOVAR	(_accColor + 0)
                                    1-  650     	.line	138, "SRC\user_style.c"; 	accColor[_G_] = 255;
     005F 00rr                      1-  651     	MOVAR	(_accColor + 1)
                                    1-  652     	.line	139, "SRC\user_style.c"; 	accColor[_B_] = 255;
     0060 00rr                      1-  653     	MOVAR	(_accColor + 2)
                                    1-  654     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  655     	.line	140, "SRC\user_style.c"; 	backdropColor[_R_] = 0;
                                    1-  656     	BANKSEL	_backdropColor
     0061 02rr                      1-  657     	CLRR	(_backdropColor + 0)
                                    1-  658     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  659     	.line	141, "SRC\user_style.c"; 	backdropColor[_G_] = 0;
     0062 02rr                      1-  660     	CLRR	(_backdropColor + 1)
                                    1-  661     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  662     	.line	142, "SRC\user_style.c"; 	backdropColor[_B_] = 255;
     0063 21FF                      1-  663     	MOVIA	0xff
     0064 00rr                      1-  664     	MOVAR	(_backdropColor + 2)
                                    1-  665     	.line	143, "SRC\user_style.c"; 	WS281x_Style_2(_Style_2_Dir_Positive_);
     0065 2121                      1-  666     	MOVIA	0x21
     0066 2rrr                      1-  667     	LCALL	_WS281x_Style_2
                                    1-  668     	.line	144, "SRC\user_style.c"; 	if(stylePhase == _Style_Idle_Phase_) {
                                    1-  669     	BANKSEL	_stylePhase
     0067 01rr                      1-  670     	MOVR	_stylePhase,W
     0068 2463                      1-  671     	XORIA	0x63
     0069 0903                      1-  672     	BTRSS	STATUS,2
     006A 3rrr                      1-  673     	LGOTO	_00190_DS_
                                    1-  674     	.line	145, "SRC\user_style.c"; 	styleTime = User_Style_Time_SET;		// 切换间隔时间
                                    1-  675     	BANKSEL	_User_Style_Time_SET
     006B 01rr                      1-  676     	MOVR	_User_Style_Time_SET,W
                                    1-  677     	BANKSEL	_styleTime
     006C 00rr                      1-  678     	MOVAR	_styleTime
                                    1-  679     	BANKSEL	_User_Style_Time_SET
     006D 01rr                      1-  680     	MOVR	(_User_Style_Time_SET + 1),W
                                    1-  681     	BANKSEL	_styleTime
     006E 00rr                      1-  682     	MOVAR	(_styleTime + 1)
                                    1-  683     	.line	146, "SRC\user_style.c"; 	stylePhase = 0;
                                    1-  684     	BANKSEL	_stylePhase
     006F 02rr                      1-  685     	CLRR	_stylePhase
                                    1-  686     	.line	147, "SRC\user_style.c"; 	userPhase = 0;			// 无限循环
                                    1-  687     	BANKSEL	_userPhase
     0070 02rr                      1-  688     	CLRR	_userPhase
     0071                           1-  689     _00190_DS_:
                                    1-  690     	.line	153, "SRC\user_style.c"; 	}
                                    1-  691     	RETURN	
     0071 0010                      3-   26 m1      ret
                                    1-  692     ; exit point of _User_Style_Sweep_Process
                                    1-  694     ;***
                                    1-  695     ;  pBlock Stats: dbName = C
                                    1-  696     ;***
                                    1-  697     ;has an exit
                                    1-  698     ;; Starting pCode block
                                    1-  699     .segment "code"; module=user_style, function=_User_Style_Sweep_Start
     0000                           1-  701     _User_Style_Sweep_Start:
                                    1-  702     ; 2 exit points
                                    1-  703     	.line	81, "SRC\user_style.c"; 	styleNum |= (1 << 7);
     0000 2184                      1-  704     	MOVIA	0x84
                                    1-  705     	BANKSEL	_styleNum
     0001 00rr                      1-  706     	MOVAR	_styleNum
                                    1-  707     	.line	82, "SRC\user_style.c"; 	}
                                    1-  708     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  709     ; exit point of _User_Style_Sweep_Start
                                    1-  711     ;***
                                    1-  712     ;  pBlock Stats: dbName = C
                                    1-  713     ;***
                                    1-  714     ;has an exit
                                    1-  715     ;functions called:
                                    1-  716     ;   _WS281x_Style_3
                                    1-  717     ;   _WS281x_Style_3
                                    1-  718     ;   _WS281x_Style_3
                                    1-  719     ;   _WS281x_Style_3
                                    1-  720     ;   _WS281x_Style_3
                                    1-  721     ;   _WS281x_Style_3
                                    1-  722     ;   _WS281x_Style_3
                                    1-  723     ;   _WS281x_Style_3
                                    1-  724     ;; Starting pCode block
                                    1-  725     .segment "code"; module=user_style, function=_User_Style_Breath_Process
     0000                           1-  727     _User_Style_Breath_Process:
                                    1-  728     ; 2 exit points
                                    1-  729     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  730     ;;unsigned compare: left >= lit (0x4=4), size=1
                                    1-  731     	.line	14, "SRC\user_style.c"; 	switch(userPhase) {
     0000 2104                      1-  732     	MOVIA	0x04
                                    1-  733     	BANKSEL	_userPhase
     0001 04rr                      1-  734     	SUBAR	_userPhase,W
     0002 0C03                      1-  735     	BTRSC	STATUS,0
     0003 3rrr                      1-  736     	LGOTO	_00130_DS_
     0004 21rr                      1-  737     	MOVIA	((_00160_DS_ >> 8) & 0xff)
     0005 008A                      1-  738     	MOVAR	PCHBUF
     0006 01rr                      1-  739     	MOVR	_userPhase,W
     0007 25rr                      1-  740     	ADDIA	_00160_DS_
     0008 0C03                      1-  741     	BTRSC	STATUS,0
     0009 058A                      1-  742     	INCR	PCHBUF,F
     000A 0082                      1-  743     	MOVAR	PCL
     000B                           1-  744     _00160_DS_:
     000B 3rrr                      1-  745     	LGOTO	_00109_DS_
     000C 3rrr                      1-  746     	LGOTO	_00114_DS_
     000D 3rrr                      1-  747     	LGOTO	_00119_DS_
     000E 3rrr                      1-  748     	LGOTO	_00124_DS_
     000F                           1-  749     _00109_DS_:
                                    1-  750     	.line	16, "SRC\user_style.c"; 	if(styleTime == 0) {
                                    1-  751     	BANKSEL	_styleTime
     000F 01rr                      1-  752     	MOVR	_styleTime,W
     0010 11rr                      1-  753     	IORAR	(_styleTime + 1),W
     0011 0903                      1-  754     	BTRSS	STATUS,2
     0012 3rrr                      1-  755     	LGOTO	_00130_DS_
                                    1-  756     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  757     	.line	17, "SRC\user_style.c"; 	accColor[_R_] = 255;
     0013 21FF                      1-  758     	MOVIA	0xff
                                    1-  759     	BANKSEL	_accColor
     0014 00rr                      1-  760     	MOVAR	(_accColor + 0)
                                    1-  761     	.line	18, "SRC\user_style.c"; 	accColor[_G_] = 255;
     0015 00rr                      1-  762     	MOVAR	(_accColor + 1)
                                    1-  763     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  764     	.line	19, "SRC\user_style.c"; 	accColor[_B_] = 0;
     0016 02rr                      1-  765     	CLRR	(_accColor + 2)
                                    1-  766     	.line	20, "SRC\user_style.c"; 	WS281x_Style_3();
     0017 2rrr                      1-  767     	LCALL	_WS281x_Style_3
                                    1-  768     	.line	21, "SRC\user_style.c"; 	if(stylePhase == _Style_Idle_Phase_) {
                                    1-  769     	BANKSEL	_stylePhase
     0018 01rr                      1-  770     	MOVR	_stylePhase,W
     0019 2463                      1-  771     	XORIA	0x63
     001A 0903                      1-  772     	BTRSS	STATUS,2
     001B 3rrr                      1-  773     	LGOTO	_00130_DS_
                                    1-  774     	.line	22, "SRC\user_style.c"; 	styleTime = User_Style_Time_SET;		// 切换间隔时间
                                    1-  775     	BANKSEL	_User_Style_Time_SET
     001C 01rr                      1-  776     	MOVR	_User_Style_Time_SET,W
                                    1-  777     	BANKSEL	_styleTime
     001D 00rr                      1-  778     	MOVAR	_styleTime
                                    1-  779     	BANKSEL	_User_Style_Time_SET
     001E 01rr                      1-  780     	MOVR	(_User_Style_Time_SET + 1),W
                                    1-  781     	BANKSEL	_styleTime
     001F 00rr                      1-  782     	MOVAR	(_styleTime + 1)
                                    1-  783     	.line	23, "SRC\user_style.c"; 	stylePhase = 0;
                                    1-  784     	BANKSEL	_stylePhase
     0020 02rr                      1-  785     	CLRR	_stylePhase
                                    1-  786     	.line	24, "SRC\user_style.c"; 	userPhase++;
                                    1-  787     	BANKSEL	_userPhase
     0021 05rr                      1-  788     	INCR	_userPhase,F
                                    1-  789     	.line	27, "SRC\user_style.c"; 	} break;
     0022 3rrr                      1-  790     	LGOTO	_00130_DS_
     0023                           1-  791     _00114_DS_:
                                    1-  792     	.line	29, "SRC\user_style.c"; 	if(styleTime == 0) {
                                    1-  793     	BANKSEL	_styleTime
     0023 01rr                      1-  794     	MOVR	_styleTime,W
     0024 11rr                      1-  795     	IORAR	(_styleTime + 1),W
     0025 0903                      1-  796     	BTRSS	STATUS,2
     0026 3rrr                      1-  797     	LGOTO	_00130_DS_
                                    1-  798     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  799     	.line	30, "SRC\user_style.c"; 	accColor[_R_] = 255;
     0027 21FF                      1-  800     	MOVIA	0xff
                                    1-  801     	BANKSEL	_accColor
     0028 00rr                      1-  802     	MOVAR	(_accColor + 0)
                                    1-  803     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  804     	.line	31, "SRC\user_style.c"; 	accColor[_G_] = 0;
     0029 02rr                      1-  805     	CLRR	(_accColor + 1)
                                    1-  806     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  807     	.line	32, "SRC\user_style.c"; 	accColor[_B_] = 255;
     002A 21FF                      1-  808     	MOVIA	0xff
     002B 00rr                      1-  809     	MOVAR	(_accColor + 2)
                                    1-  810     	.line	33, "SRC\user_style.c"; 	WS281x_Style_3();
     002C 2rrr                      1-  811     	LCALL	_WS281x_Style_3
                                    1-  812     	.line	34, "SRC\user_style.c"; 	if(stylePhase == _Style_Idle_Phase_) {
                                    1-  813     	BANKSEL	_stylePhase
     002D 01rr                      1-  814     	MOVR	_stylePhase,W
     002E 2463                      1-  815     	XORIA	0x63
     002F 0903                      1-  816     	BTRSS	STATUS,2
     0030 3rrr                      1-  817     	LGOTO	_00130_DS_
                                    1-  818     	.line	35, "SRC\user_style.c"; 	styleTime = User_Style_Time_SET;		// 切换间隔时间
                                    1-  819     	BANKSEL	_User_Style_Time_SET
     0031 01rr                      1-  820     	MOVR	_User_Style_Time_SET,W
                                    1-  821     	BANKSEL	_styleTime
     0032 00rr                      1-  822     	MOVAR	_styleTime
                                    1-  823     	BANKSEL	_User_Style_Time_SET
     0033 01rr                      1-  824     	MOVR	(_User_Style_Time_SET + 1),W
                                    1-  825     	BANKSEL	_styleTime
     0034 00rr                      1-  826     	MOVAR	(_styleTime + 1)
                                    1-  827     	.line	36, "SRC\user_style.c"; 	stylePhase = 0;
                                    1-  828     	BANKSEL	_stylePhase
     0035 02rr                      1-  829     	CLRR	_stylePhase
                                    1-  830     	.line	37, "SRC\user_style.c"; 	userPhase++;
                                    1-  831     	BANKSEL	_userPhase
     0036 05rr                      1-  832     	INCR	_userPhase,F
                                    1-  833     	.line	40, "SRC\user_style.c"; 	} break;
     0037 3rrr                      1-  834     	LGOTO	_00130_DS_
     0038                           1-  835     _00119_DS_:
                                    1-  836     	.line	42, "SRC\user_style.c"; 	if(styleTime == 0) {
                                    1-  837     	BANKSEL	_styleTime
     0038 01rr                      1-  838     	MOVR	_styleTime,W
     0039 11rr                      1-  839     	IORAR	(_styleTime + 1),W
     003A 0903                      1-  840     	BTRSS	STATUS,2
     003B 3rrr                      1-  841     	LGOTO	_00130_DS_
                                    1-  842     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  843     	.line	43, "SRC\user_style.c"; 	accColor[_R_] = 0;
                                    1-  844     	BANKSEL	_accColor
     003C 02rr                      1-  845     	CLRR	(_accColor + 0)
                                    1-  846     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  847     	.line	44, "SRC\user_style.c"; 	accColor[_G_] = 255;
     003D 21FF                      1-  848     	MOVIA	0xff
     003E 00rr                      1-  849     	MOVAR	(_accColor + 1)
                                    1-  850     	.line	45, "SRC\user_style.c"; 	accColor[_B_] = 255;
     003F 00rr                      1-  851     	MOVAR	(_accColor + 2)
                                    1-  852     	.line	46, "SRC\user_style.c"; 	WS281x_Style_3();
     0040 2rrr                      1-  853     	LCALL	_WS281x_Style_3
                                    1-  854     	.line	47, "SRC\user_style.c"; 	if(stylePhase == _Style_Idle_Phase_) {
                                    1-  855     	BANKSEL	_stylePhase
     0041 01rr                      1-  856     	MOVR	_stylePhase,W
     0042 2463                      1-  857     	XORIA	0x63
     0043 0903                      1-  858     	BTRSS	STATUS,2
     0044 3rrr                      1-  859     	LGOTO	_00130_DS_
                                    1-  860     	.line	48, "SRC\user_style.c"; 	styleTime = User_Style_Time_SET;		// 切换间隔时间
                                    1-  861     	BANKSEL	_User_Style_Time_SET
     0045 01rr                      1-  862     	MOVR	_User_Style_Time_SET,W
                                    1-  863     	BANKSEL	_styleTime
     0046 00rr                      1-  864     	MOVAR	_styleTime
                                    1-  865     	BANKSEL	_User_Style_Time_SET
     0047 01rr                      1-  866     	MOVR	(_User_Style_Time_SET + 1),W
                                    1-  867     	BANKSEL	_styleTime
     0048 00rr                      1-  868     	MOVAR	(_styleTime + 1)
                                    1-  869     	.line	49, "SRC\user_style.c"; 	stylePhase = 0;
                                    1-  870     	BANKSEL	_stylePhase
     0049 02rr                      1-  871     	CLRR	_stylePhase
                                    1-  872     	.line	50, "SRC\user_style.c"; 	userPhase++;
                                    1-  873     	BANKSEL	_userPhase
     004A 05rr                      1-  874     	INCR	_userPhase,F
                                    1-  875     	.line	53, "SRC\user_style.c"; 	} break;
     004B 3rrr                      1-  876     	LGOTO	_00130_DS_
     004C                           1-  877     _00124_DS_:
                                    1-  878     	.line	55, "SRC\user_style.c"; 	if(styleTime == 0) {
                                    1-  879     	BANKSEL	_styleTime
     004C 01rr                      1-  880     	MOVR	_styleTime,W
     004D 11rr                      1-  881     	IORAR	(_styleTime + 1),W
     004E 0903                      1-  882     	BTRSS	STATUS,2
     004F 3rrr                      1-  883     	LGOTO	_00130_DS_
                                    1-  884     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
                                    1-  885     	.line	56, "SRC\user_style.c"; 	accColor[_R_] = 255;
     0050 21FF                      1-  886     	MOVIA	0xff
                                    1-  887     	BANKSEL	_accColor
     0051 00rr                      1-  888     	MOVAR	(_accColor + 0)
                                    1-  889     	.line	57, "SRC\user_style.c"; 	accColor[_G_] = 255;
     0052 00rr                      1-  890     	MOVAR	(_accColor + 1)
                                    1-  891     	.line	58, "SRC\user_style.c"; 	accColor[_B_] = 255;
     0053 00rr                      1-  892     	MOVAR	(_accColor + 2)
                                    1-  893     	.line	59, "SRC\user_style.c"; 	WS281x_Style_3();
     0054 2rrr                      1-  894     	LCALL	_WS281x_Style_3
                                    1-  895     	.line	60, "SRC\user_style.c"; 	if(stylePhase == _Style_Idle_Phase_) {
                                    1-  896     	BANKSEL	_stylePhase
     0055 01rr                      1-  897     	MOVR	_stylePhase,W
     0056 2463                      1-  898     	XORIA	0x63
     0057 0903                      1-  899     	BTRSS	STATUS,2
     0058 3rrr                      1-  900     	LGOTO	_00130_DS_
                                    1-  901     	.line	61, "SRC\user_style.c"; 	styleTime = User_Style_Time_SET;		// 切换间隔时间
                                    1-  902     	BANKSEL	_User_Style_Time_SET
     0059 01rr                      1-  903     	MOVR	_User_Style_Time_SET,W
                                    1-  904     	BANKSEL	_styleTime
     005A 00rr                      1-  905     	MOVAR	_styleTime
                                    1-  906     	BANKSEL	_User_Style_Time_SET
     005B 01rr                      1-  907     	MOVR	(_User_Style_Time_SET + 1),W
                                    1-  908     	BANKSEL	_styleTime
     005C 00rr                      1-  909     	MOVAR	(_styleTime + 1)
                                    1-  910     	.line	62, "SRC\user_style.c"; 	stylePhase = 0;
                                    1-  911     	BANKSEL	_stylePhase
     005D 02rr                      1-  912     	CLRR	_stylePhase
                                    1-  913     	.line	63, "SRC\user_style.c"; 	userPhase = 0;			// 无限循环
                                    1-  914     	BANKSEL	_userPhase
     005E 02rr                      1-  915     	CLRR	_userPhase
     005F                           1-  916     _00130_DS_:
                                    1-  917     	.line	69, "SRC\user_style.c"; 	}
                                    1-  918     	RETURN	
     005F 0010                      3-   26 m1      ret
                                    1-  919     ; exit point of _User_Style_Breath_Process
                                    1-  921     ;***
                                    1-  922     ;  pBlock Stats: dbName = C
                                    1-  923     ;***
                                    1-  924     ;has an exit
                                    1-  925     ;; Starting pCode block
                                    1-  926     .segment "code"; module=user_style, function=_User_Style_Breath_Start
     0000                           1-  928     _User_Style_Breath_Start:
                                    1-  929     ; 2 exit points
                                    1-  930     	.line	9, "SRC\user_style.c"; 	styleNum |= (1 << 7);
     0000 2185                      1-  931     	MOVIA	0x85
                                    1-  932     	BANKSEL	_styleNum
     0001 00rr                      1-  933     	MOVAR	_styleNum
                                    1-  934     	.line	10, "SRC\user_style.c"; 	}
                                    1-  935     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  936     ; exit point of _User_Style_Breath_Start
                                    1-  939     ;	code size estimation:
                                    1-  940     ;	  333+  122 =   455 instructions ( 1154 byte)
                                    1-  942     	end
                                    1-  942     	end

SYMBOL TABLE            TYPE     VALUE
__CHECKSUM_ADDR__       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
_00109_DS_              Label    0000000F
_00114_DS_              Label    00000023
_00119_DS_              Label    00000038
_00124_DS_              Label    0000004C
_00130_DS_              Label    0000005F
_00160_DS_              Label    0000000B
_00169_DS_              Label    0000000F
_00174_DS_              Label    00000027
_00179_DS_              Label    00000040
_00184_DS_              Label    00000059
_00190_DS_              Label    00000071
_00220_DS_              Label    0000000B
_00229_DS_              Label    0000000F
_00234_DS_              Label    00000027
_00239_DS_              Label    00000040
_00244_DS_              Label    00000059
_00250_DS_              Label    00000071
_00280_DS_              Label    0000000B
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_accColor               Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_backdropColor          Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_CMPCR                  Label    00000000
_currentStream          Label    00000000
_delay                  Label    00000000
_FSR                    Label    00000000
_GPIO_Init              Label    00000000
_INDF                   Label    00000000
_INT1_Init              Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IR_Decode              Label    00000000
_IR_Decode_Time_Process Label    00000000
_IR_KEY_Proess          Label    00000000
_IRCR                   Label    00000000
_irDeCodeBitIndex       Label    00000000
_irDeCodeBitTime        Label    00000000
_irDeCodeDat            Label    00000000
_irDeCodeTimeOverFlow   Label    00000000
_K1_struct              Label    00000000
_KEY_GPIO_Init          Label    00000000
_KEY_Proess             Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_ScanKey                Label    00000000
_ScanKey_Config         Label    00000000
_STATUS                 Label    00000000
_styleIndex             Label    00000000
_styleIndexMax          Label    00000000
_styleNum               Label    00000000
_stylePhase             Label    00000000
_styleTime              Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_Timer1_Init            Label    00000000
_Timer3_Init            Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_User_Style_Breath_Process Label    00000000
_User_Style_Breath_Start Label    00000000
_User_Style_Collision_Process Label    00000000
_User_Style_Collision_Start Label    00000000
_User_Style_Sweep_Process Label    00000000
_User_Style_Sweep_Start Label    00000000
_User_Style_Time_SET    Label    00000000
_userPhase              Label    00000000
_WS281x_Drive_Write_Byte Label    00000000
_WS281x_RGB             Label    00000000
_WS281x_Style_1         Label    00000000
_WS281x_Style_2         Label    00000000
_WS281x_Style_3         Label    00000000
_WS281x_Style_All       Label    00000000
_WS281x_Style_Process   Label    00000000
ENABLE_RAM_BANK         Variable 00000000
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
SSAVE                   Label    00000000
STATUS                  Constant 00000003
STK00                   Label    00000000
STK01                   Label    00000000
STK02                   Label    00000000
STK03                   Label    00000000
STK04                   Label    00000000
STK05                   Label    00000000
STK06                   Label    00000000
STK07                   Label    00000000
STK08                   Label    00000000
STK09                   Label    00000000
STK10                   Label    00000000
STK11                   Label    00000000
STK12                   Label    00000000
W                       Constant 00000000
WSAVE                   Label    00000000


SOURCE FILE TABLE
001 SRC\user_style.s
002 ny8a054d.inc
003 common.inc
004 SRC\user_style.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
