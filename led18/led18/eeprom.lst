
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"eeprom.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_AWUCONbits
                                    1-   23     	extern	_INTEDGbits
                                    1-   24     	extern	_RFCbits
                                    1-   25     	extern	_INTE2bits
                                    1-   26     	extern	_INDF
                                    1-   27     	extern	_TMR0
                                    1-   28     	extern	_PCL
                                    1-   29     	extern	_STATUS
                                    1-   30     	extern	_FSR
                                    1-   31     	extern	_PORTA
                                    1-   32     	extern	_PORTB
                                    1-   33     	extern	_PCON
                                    1-   34     	extern	_BWUCON
                                    1-   35     	extern	_PCHBUF
                                    1-   36     	extern	_ABPLCON
                                    1-   37     	extern	_BPHCON
                                    1-   38     	extern	_INTE
                                    1-   39     	extern	_INTF
                                    1-   40     	extern	_AWUCON
                                    1-   41     	extern	_INTEDG
                                    1-   42     	extern	_TMRH
                                    1-   43     	extern	_RFC
                                    1-   44     	extern	_TM34RH
                                    1-   45     	extern	_INTE2
                                    1-   46     	extern	_TMR1
                                    1-   47     	extern	_T1CR1
                                    1-   48     	extern	_T1CR2
                                    1-   49     	extern	_PWM1DUTY
                                    1-   50     	extern	_PS1CV
                                    1-   51     	extern	_BZ1CR
                                    1-   52     	extern	_IRCR
                                    1-   53     	extern	_TBHP
                                    1-   54     	extern	_TBHD
                                    1-   55     	extern	_P2CR1
                                    1-   56     	extern	_PWM2DUTY
                                    1-   57     	extern	_OSCCR
                                    1-   58     	extern	_TMR3
                                    1-   59     	extern	_T3CR1
                                    1-   60     	extern	_T3CR2
                                    1-   61     	extern	_PWM3DUTY
                                    1-   62     	extern	_PS3CV
                                    1-   63     	extern	_P4CR1
                                    1-   64     	extern	_PWM4DUTY
                                    1-   65     	extern	_P5CR1
                                    1-   66     	extern	_PWM5DUTY
                                    1-   67     	extern	_PWM5RH
                                    1-   68     	extern	_IOSTA
                                    1-   69     	extern	_IOSTB
                                    1-   70     	extern	_APHCON
                                    1-   71     	extern	_PS0CV
                                    1-   72     	extern	_BODCON
                                    1-   73     	extern	_CMPCR
                                    1-   74     	extern	_PCON1
                                    1-   75     	extern	_T0MD
                                    1-   76     	extern	__gptrput1
                                    1-   77     	extern	__gptrget1
                                    1-   79     	extern PSAVE
                                    1-   80     	extern SSAVE
                                    1-   81     	extern WSAVE
                                    1-   82     	extern STK12
                                    1-   83     	extern STK11
                                    1-   84     	extern STK10
                                    1-   85     	extern STK09
                                    1-   86     	extern STK08
                                    1-   87     	extern STK07
                                    1-   88     	extern STK06
                                    1-   89     	extern STK05
                                    1-   90     	extern STK04
                                    1-   91     	extern STK03
                                    1-   92     	extern STK02
                                    1-   93     	extern STK01
                                    1-   94     	extern STK00
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     ; global declarations
                                    1-   97     ;--------------------------------------------------------
                                    1-   98     	extern	_writeWordStep
                                    1-   99     	extern	_readWordStep
                                    1-  100     	extern	_ReadByte
                                    1-  101     	extern	_SendByte
                                    1-  102     	extern	_RecvAck
                                    1-  103     	extern	_SendNoAck
                                    1-  104     	extern	_SendAck
                                    1-  105     	extern	_Stop24C02
                                    1-  106     	extern	_Start24C02
                                    1-  107     	extern	_SDAInput
                                    1-  108     	extern	_SDAOutput
                                    1-  109     	extern	_Delay10Us
                                    1-  111     ;--------------------------------------------------------
                                    1-  112     ; global definitions
                                    1-  113     ;--------------------------------------------------------
                                    1-  114     ;--------------------------------------------------------
                                    1-  115     ; absolute symbol definitions
                                    1-  116     ;--------------------------------------------------------
                                    1-  117     ;--------------------------------------------------------
                                    1-  118     ; compiler-defined variables
                                    1-  119     ;--------------------------------------------------------
                                    1-  120     .segment "uninit"
     0000                           1-  121     r0x1000:
                                    1-  122     	.res	1
                                    1-  123     .segment "uninit"
     0000                           1-  124     r0x1001:
                                    1-  125     	.res	1
                                    1-  126     .segment "uninit"
     0000                           1-  127     r0x1003:
                                    1-  128     	.res	1
                                    1-  129     .segment "uninit"
     0000                           1-  130     r0x1004:
                                    1-  131     	.res	1
                                    1-  132     .segment "uninit"
     0000                           1-  133     r0x1005:
                                    1-  134     	.res	1
                                    1-  135     .segment "uninit"
     0000                           1-  136     r0x1006:
                                    1-  137     	.res	1
                                    1-  138     .segment "uninit"
     0000                           1-  139     r0x1009:
                                    1-  140     	.res	1
                                    1-  141     .segment "uninit"
     0000                           1-  142     r0x1008:
                                    1-  143     	.res	1
                                    1-  144     .segment "uninit"
     0000                           1-  145     r0x1007:
                                    1-  146     	.res	1
                                    1-  147     .segment "uninit"
     0000                           1-  148     r0x100A:
                                    1-  149     	.res	1
                                    1-  150     .segment "uninit"
     0000                           1-  151     r0x1002:
                                    1-  152     	.res	1
                                    1-  153     ;--------------------------------------------------------
                                    1-  154     ; initialized data
                                    1-  155     ;--------------------------------------------------------
                                    1-  156     ;--------------------------------------------------------
                                    1-  157     ; overlayable items in internal ram 
                                    1-  158     ;--------------------------------------------------------
                                    1-  159     ;	udata_ovr
                                    1-  160     ;--------------------------------------------------------
                                    1-  161     ; code
                                    1-  162     ;--------------------------------------------------------
                                    1-  163     ;***
                                    1-  164     ;  pBlock Stats: dbName = C
                                    1-  165     ;***
                                    1-  166     ;has an exit
                                    1-  167     ;functions called:
                                    1-  168     ;   _Start24C02
                                    1-  169     ;   _SendByte
                                    1-  170     ;   _RecvAck
                                    1-  171     ;   _SendByte
                                    1-  172     ;   _RecvAck
                                    1-  173     ;   _SendByte
                                    1-  174     ;   _RecvAck
                                    1-  175     ;   _Stop24C02
                                    1-  176     ;   _Start24C02
                                    1-  177     ;   _SendByte
                                    1-  178     ;   _RecvAck
                                    1-  179     ;   _SendByte
                                    1-  180     ;   _RecvAck
                                    1-  181     ;   _SendByte
                                    1-  182     ;   _RecvAck
                                    1-  183     ;   _Stop24C02
                                    1-  184     ;1 compiler assigned register :
                                    1-  185     ;   r0x1002
                                    1-  186     ;; Starting pCode block
                                    1-  187     .segment "code"; module=eeprom, function=_writeWordStep
                                    1-  189     ;local variable name mapping:
     0000                           1-  191     _writeWordStep:
                                    1-  192     ; 2 exit points
                                    1-  193     	.line	130, "eeprom.c"; 	void writeWordStep(u8t workStep)
                                    1-  194     	BANKSEL	r0x1002
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  195     	MOVAR	r0x1002
                                    1-  196     	.line	132, "eeprom.c"; 	BPHCON = 0x7F;	//打开PB7的上拉电阻(SDA)
     0002 217F                      1-  197     	MOVIA	0x7f
     0003 00rr                      1-  198     	MOVAR	_BPHCON
                                    1-  199     	.line	133, "eeprom.c"; 	IOSTA = 0;
     0004 0200                      1-  200     	CLRA	
     0005 000r                      1-  201     	IOST	_IOSTA
                                    1-  202     	.line	134, "eeprom.c"; 	IOSTB = C_PB0_Input;
     0006 2101                      1-  203     	MOVIA	0x01
     0007 000r                      1-  204     	IOST	_IOSTB
                                    1-  205     	.line	135, "eeprom.c"; 	SCL = 0;
                                    1-  206     	BANKSEL	_PORTA
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 1Crr                      1-  207     	BCR	_PORTA,0
                                    1-  208     	.line	137, "eeprom.c"; 	Start24C02();
     000A 2rrr                      1-  209     	LCALL	_Start24C02
                                    1-  210     	.line	138, "eeprom.c"; 	SendByte(0xA0);		//发送器件地址和写动作
     000B 21A0                      1-  211     	MOVIA	0xa0
     000C 2rrr                      1-  212     	LCALL	_SendByte
                                    1-  213     	.line	139, "eeprom.c"; 	RecvAck();
     000D 2rrr                      1-  214     	LCALL	_RecvAck
                                    1-  215     	.line	140, "eeprom.c"; 	SendByte(0X00);		//发送写地址
     000E 2100                      1-  216     	MOVIA	0x00
     000F 2rrr                      1-  217     	LCALL	_SendByte
                                    1-  218     	.line	141, "eeprom.c"; 	RecvAck();
     0010 2rrr                      1-  219     	LCALL	_RecvAck
                                    1-  220     	.line	142, "eeprom.c"; 	SendByte(workStep);		//发送数据到地址
                                    1-  221     	BANKSEL	r0x1002
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1-  222     	MOVR	r0x1002,W
     0013 2rrr                      1-  223     	LCALL	_SendByte
                                    1-  224     	.line	143, "eeprom.c"; 	RecvAck();
     0014 2rrr                      1-  225     	LCALL	_RecvAck
                                    1-  226     	.line	144, "eeprom.c"; 	Stop24C02();
     0015 2rrr                      1-  227     	LCALL	_Stop24C02
                                    1-  228     	.line	145, "eeprom.c"; 	}
                                    1-  229     	RETURN	
     0016 0010                      3-   26 m1      ret
                                    1-  230     ; exit point of _writeWordStep
                                    1-  232     ;***
                                    1-  233     ;  pBlock Stats: dbName = C
                                    1-  234     ;***
                                    1-  235     ;has an exit
                                    1-  236     ;functions called:
                                    1-  237     ;   _Start24C02
                                    1-  238     ;   _SendByte
                                    1-  239     ;   _RecvAck
                                    1-  240     ;   _SendByte
                                    1-  241     ;   _RecvAck
                                    1-  242     ;   _Start24C02
                                    1-  243     ;   _SendByte
                                    1-  244     ;   _RecvAck
                                    1-  245     ;   _ReadByte
                                    1-  246     ;   __gptrput1
                                    1-  247     ;   _SendNoAck
                                    1-  248     ;   _Stop24C02
                                    1-  249     ;   __gptrget1
                                    1-  250     ;   __gptrput1
                                    1-  251     ;   _Start24C02
                                    1-  252     ;   _SendByte
                                    1-  253     ;   _RecvAck
                                    1-  254     ;   _SendByte
                                    1-  255     ;   _RecvAck
                                    1-  256     ;   _Start24C02
                                    1-  257     ;   _SendByte
                                    1-  258     ;   _RecvAck
                                    1-  259     ;   _ReadByte
                                    1-  260     ;   __gptrput1
                                    1-  261     ;   _SendNoAck
                                    1-  262     ;   _Stop24C02
                                    1-  263     ;   __gptrget1
                                    1-  264     ;   __gptrput1
                                    1-  265     ;7 compiler assigned registers:
                                    1-  266     ;   r0x1007
                                    1-  267     ;   STK00
                                    1-  268     ;   r0x1008
                                    1-  269     ;   STK01
                                    1-  270     ;   r0x1009
                                    1-  271     ;   r0x100A
                                    1-  272     ;   STK02
                                    1-  273     ;; Starting pCode block
                                    1-  274     .segment "code"; module=eeprom, function=_readWordStep
                                    1-  276     ;local variable name mapping:
     0000                           1-  280     _readWordStep:
                                    1-  281     ; 2 exit points
                                    1-  282     	.line	109, "eeprom.c"; 	void readWordStep(unsigned char *workStep)
                                    1-  283     	BANKSEL	r0x1007
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  284     	MOVAR	r0x1007
     0002 01rr                      1-  285     	MOVR	STK00,W
                                    1-  286     	BANKSEL	r0x1008
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  287     	MOVAR	r0x1008
     0005 01rr                      1-  288     	MOVR	STK01,W
                                    1-  289     	BANKSEL	r0x1009
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  290     	MOVAR	r0x1009
                                    1-  291     	.line	111, "eeprom.c"; 	BPHCON = 0x7F;	//打开PB7的上拉电阻(SDA)
     0008 217F                      1-  292     	MOVIA	0x7f
     0009 00rr                      1-  293     	MOVAR	_BPHCON
                                    1-  294     	.line	112, "eeprom.c"; 	IOSTA = 0;
     000A 0200                      1-  295     	CLRA	
     000B 000r                      1-  296     	IOST	_IOSTA
                                    1-  297     	.line	113, "eeprom.c"; 	IOSTB = C_PB0_Input;
     000C 2101                      1-  298     	MOVIA	0x01
     000D 000r                      1-  299     	IOST	_IOSTB
                                    1-  300     	.line	114, "eeprom.c"; 	SCL = 0;
                                    1-  301     	BANKSEL	_PORTA
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 1Crr                      1-  302     	BCR	_PORTA,0
                                    1-  303     	.line	115, "eeprom.c"; 	Start24C02();
     0010 2rrr                      1-  304     	LCALL	_Start24C02
                                    1-  305     	.line	116, "eeprom.c"; 	SendByte(0xA0);		//发送器件地址和写动作
     0011 21A0                      1-  306     	MOVIA	0xa0
     0012 2rrr                      1-  307     	LCALL	_SendByte
                                    1-  308     	.line	117, "eeprom.c"; 	RecvAck();
     0013 2rrr                      1-  309     	LCALL	_RecvAck
                                    1-  310     	.line	118, "eeprom.c"; 	SendByte(0X00);		//发送读地址
     0014 2100                      1-  311     	MOVIA	0x00
     0015 2rrr                      1-  312     	LCALL	_SendByte
                                    1-  313     	.line	119, "eeprom.c"; 	RecvAck();
     0016 2rrr                      1-  314     	LCALL	_RecvAck
                                    1-  315     	.line	120, "eeprom.c"; 	Start24C02();
     0017 2rrr                      1-  316     	LCALL	_Start24C02
                                    1-  317     	.line	121, "eeprom.c"; 	SendByte(0xA1);		//发送器件地址和读动作
     0018 21A1                      1-  318     	MOVIA	0xa1
     0019 2rrr                      1-  319     	LCALL	_SendByte
                                    1-  320     	.line	122, "eeprom.c"; 	RecvAck();
     001A 2rrr                      1-  321     	LCALL	_RecvAck
                                    1-  322     	.line	123, "eeprom.c"; 	*workStep = ReadByte();
     001B 2rrr                      1-  323     	LCALL	_ReadByte
                                    1-  324     	BANKSEL	r0x100A
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  325     	MOVAR	r0x100A
     001E 00rr                      1-  326     	MOVAR	STK02
                                    1-  327     	BANKSEL	r0x1009
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  328     	MOVR	r0x1009,W
     0021 00rr                      1-  329     	MOVAR	STK01
                                    1-  330     	BANKSEL	r0x1008
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  331     	MOVR	r0x1008,W
     0024 00rr                      1-  332     	MOVAR	STK00
                                    1-  333     	BANKSEL	r0x1007
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1-  334     	MOVR	r0x1007,W
     0027 2rrr                      1-  335     	LCALL	__gptrput1
                                    1-  336     	.line	124, "eeprom.c"; 	SendNoAck();
     0028 2rrr                      1-  337     	LCALL	_SendNoAck
                                    1-  338     	.line	125, "eeprom.c"; 	Stop24C02();
     0029 2rrr                      1-  339     	LCALL	_Stop24C02
                                    1-  340     	.line	126, "eeprom.c"; 	if(*workStep >= 19 || *workStep == 0)
                                    1-  341     	BANKSEL	r0x1009
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  342     	MOVR	r0x1009,W
     002C 00rr                      1-  343     	MOVAR	STK01
                                    1-  344     	BANKSEL	r0x1008
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  345     	MOVR	r0x1008,W
     002F 00rr                      1-  346     	MOVAR	STK00
                                    1-  347     	BANKSEL	r0x1007
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1-  348     	MOVR	r0x1007,W
     0032 2rrr                      1-  349     	LCALL	__gptrget1
                                    1-  350     	BANKSEL	r0x100A
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1-  351     	MOVAR	r0x100A
                                    1-  352     ;;unsigned compare: left < lit (0x13=19), size=1
     0035 2113                      1-  353     	MOVIA	0x13
     0036 04rr                      1-  354     	SUBAR	r0x100A,W
     0037 0C03                      1-  355     	BTRSC	STATUS,0
     0038 3rrr                      1-  356     	LGOTO	_00153_DS_
     0039 01rr                      1-  357     	MOVR	r0x100A,W
     003A 0903                      1-  358     	BTRSS	STATUS,2
     003B 3rrr                      1-  359     	LGOTO	_00156_DS_
     003C                           1-  360     _00153_DS_:
                                    1-  361     	.line	127, "eeprom.c"; 	*workStep = 1;
     003C 2101                      1-  362     	MOVIA	0x01
     003D 00rr                      1-  363     	MOVAR	STK02
                                    1-  364     	BANKSEL	r0x1009
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1-  365     	MOVR	r0x1009,W
     0040 00rr                      1-  366     	MOVAR	STK01
                                    1-  367     	BANKSEL	r0x1008
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1-  368     	MOVR	r0x1008,W
     0043 00rr                      1-  369     	MOVAR	STK00
                                    1-  370     	BANKSEL	r0x1007
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  371     	MOVR	r0x1007,W
     0046 2rrr                      1-  372     	LCALL	__gptrput1
     0047                           1-  373     _00156_DS_:
                                    1-  374     	.line	128, "eeprom.c"; 	}
                                    1-  375     	RETURN	
     0047 0010                      3-   26 m1      ret
                                    1-  376     ; exit point of _readWordStep
                                    1-  378     ;***
                                    1-  379     ;  pBlock Stats: dbName = C
                                    1-  380     ;***
                                    1-  381     ;has an exit
                                    1-  382     ;functions called:
                                    1-  383     ;   _SDAInput
                                    1-  384     ;   _Delay10Us
                                    1-  385     ;   _Delay10Us
                                    1-  386     ;   _SDAOutput
                                    1-  387     ;   _SDAInput
                                    1-  388     ;   _Delay10Us
                                    1-  389     ;   _Delay10Us
                                    1-  390     ;   _SDAOutput
                                    1-  391     ;4 compiler assigned registers:
                                    1-  392     ;   r0x1003
                                    1-  393     ;   r0x1004
                                    1-  394     ;   r0x1005
                                    1-  395     ;   r0x1006
                                    1-  396     ;; Starting pCode block
                                    1-  397     .segment "code"; module=eeprom, function=_ReadByte
                                    1-  399     ;local variable name mapping:
     0000                           1-  402     _ReadByte:
                                    1-  403     ; 2 exit points
                                    1-  404     	.line	92, "eeprom.c"; 	u8t data=0;
                                    1-  405     	BANKSEL	r0x1003
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  406     	CLRR	r0x1003
                                    1-  407     	.line	93, "eeprom.c"; 	SDAInput();
     0002 2rrr                      1-  408     	LCALL	_SDAInput
                                    1-  409     	.line	95, "eeprom.c"; 	for(u8t i=8;i>0;i--){
     0003 2108                      1-  410     	MOVIA	0x08
                                    1-  411     	BANKSEL	r0x1004
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  412     	MOVAR	r0x1004
     0006                           1-  413     _00148_DS_:
                                    1-  414     	BANKSEL	r0x1004
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1-  415     	MOVR	r0x1004,W
     0008 0D03                      1-  416     	BTRSC	STATUS,2
     0009 3rrr                      1-  417     	LGOTO	_00146_DS_
                                    1-  418     	.line	96, "eeprom.c"; 	SCL = 1;
                                    1-  419     	BANKSEL	_PORTA
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 18rr                      1-  420     	BSR	_PORTA,0
                                    1-  421     	.line	97, "eeprom.c"; 	Delay10Us();
     000C 2rrr                      1-  422     	LCALL	_Delay10Us
                                    1-  423     	.line	98, "eeprom.c"; 	data = data<<1;
     000D 1C03                      1-  424     	BCR	STATUS,0
                                    1-  425     	BANKSEL	r0x1003
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 14rr                      1-  426     	RLR	r0x1003,F
                                    1-  427     	.line	99, "eeprom.c"; 	data |= SDA;
     0010 01rr                      1-  428     	MOVR	r0x1003,W
                                    1-  429     	BANKSEL	r0x1005
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1-  430     	MOVAR	r0x1005
                                    1-  431     	BANKSEL	r0x1006
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1-  432     	CLRR	r0x1006
                                    1-  433     	BANKSEL	_PORTB
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 0Brr                      1-  434     	BTRSS	_PORTB,7
     0017 3rrr                      1-  435     	LGOTO	_00001_DS_
                                    1-  436     	BANKSEL	r0x1006
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 05rr                      1-  437     	INCR	r0x1006,F
     001A                           1-  438     _00001_DS_:
                                    1-  439     	BANKSEL	r0x1006
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  440     	MOVR	r0x1006,W
                                    1-  441     	BANKSEL	r0x1005
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 11rr                      1-  442     	IORAR	r0x1005,W
                                    1-  443     	BANKSEL	r0x1003
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  444     	MOVAR	r0x1003
                                    1-  445     	.line	100, "eeprom.c"; 	SCL = 0;
                                    1-  446     	BANKSEL	_PORTA
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 1Crr                      1-  447     	BCR	_PORTA,0
                                    1-  448     	.line	101, "eeprom.c"; 	Delay10Us();
     0022 2rrr                      1-  449     	LCALL	_Delay10Us
                                    1-  450     	.line	95, "eeprom.c"; 	for(u8t i=8;i>0;i--){
                                    1-  451     	BANKSEL	r0x1004
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 06rr                      1-  452     	DECR	r0x1004,F
     0025 3rrr                      1-  453     	LGOTO	_00148_DS_
     0026                           1-  454     _00146_DS_:
                                    1-  455     	.line	103, "eeprom.c"; 	SDAOutput();
     0026 2rrr                      1-  456     	LCALL	_SDAOutput
                                    1-  457     	.line	104, "eeprom.c"; 	return	data;
                                    1-  458     	BANKSEL	r0x1003
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  459     	MOVR	r0x1003,W
                                    1-  460     	.line	105, "eeprom.c"; 	}
                                    1-  461     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1-  462     ; exit point of _ReadByte
                                    1-  464     ;***
                                    1-  465     ;  pBlock Stats: dbName = C
                                    1-  466     ;***
                                    1-  467     ;has an exit
                                    1-  468     ;functions called:
                                    1-  469     ;   _Delay10Us
                                    1-  470     ;   _Delay10Us
                                    1-  471     ;   _Delay10Us
                                    1-  472     ;   _Delay10Us
                                    1-  473     ;   _Delay10Us
                                    1-  474     ;   _Delay10Us
                                    1-  475     ;2 compiler assigned registers:
                                    1-  476     ;   r0x1000
                                    1-  477     ;   r0x1001
                                    1-  478     ;; Starting pCode block
                                    1-  479     .segment "code"; module=eeprom, function=_SendByte
                                    1-  481     ;local variable name mapping:
     0000                           1-  484     _SendByte:
                                    1-  485     ; 2 exit points
                                    1-  486     	.line	79, "eeprom.c"; 	void SendByte(u8t data){
                                    1-  487     	BANKSEL	r0x1000
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  488     	MOVAR	r0x1000
                                    1-  489     	.line	80, "eeprom.c"; 	for(u8t i=8;i>0;i--){
     0002 2108                      1-  490     	MOVIA	0x08
                                    1-  491     	BANKSEL	r0x1001
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  492     	MOVAR	r0x1001
     0005                           1-  493     _00139_DS_:
                                    1-  494     	BANKSEL	r0x1001
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1-  495     	MOVR	r0x1001,W
     0007 0D03                      1-  496     	BTRSC	STATUS,2
     0008 3rrr                      1-  497     	LGOTO	_00141_DS_
                                    1-  498     	.line	81, "eeprom.c"; 	data = data<<1;
     0009 1C03                      1-  499     	BCR	STATUS,0
                                    1-  500     	BANKSEL	r0x1000
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 14rr                      1-  501     	RLR	r0x1000,F
                                    1-  502     	.line	82, "eeprom.c"; 	SDA = C;
     000C 0C03                      1-  503     	BTRSC	STATUS,0
     000D 3rrr                      1-  504     	LGOTO	_00002_DS_
                                    1-  505     	BANKSEL	_PORTB
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 1Frr                      1-  506     	BCR	_PORTB,7
     0010                           1-  507     _00002_DS_:
     0010 0803                      1-  508     	BTRSS	STATUS,0
     0011 3rrr                      1-  509     	LGOTO	_00003_DS_
                                    1-  510     	BANKSEL	_PORTB
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 1Brr                      1-  511     	BSR	_PORTB,7
     0014                           1-  512     _00003_DS_:
                                    1-  513     	.line	83, "eeprom.c"; 	Delay10Us();
     0014 2rrr                      1-  514     	LCALL	_Delay10Us
                                    1-  515     	.line	84, "eeprom.c"; 	SCL = 1;
                                    1-  516     	BANKSEL	_PORTA
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 18rr                      1-  517     	BSR	_PORTA,0
                                    1-  518     	.line	85, "eeprom.c"; 	Delay10Us();
     0017 2rrr                      1-  519     	LCALL	_Delay10Us
                                    1-  520     	.line	86, "eeprom.c"; 	SCL = 0;
                                    1-  521     	BANKSEL	_PORTA
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 1Crr                      1-  522     	BCR	_PORTA,0
                                    1-  523     	.line	87, "eeprom.c"; 	Delay10Us();
     001A 2rrr                      1-  524     	LCALL	_Delay10Us
                                    1-  525     	.line	80, "eeprom.c"; 	for(u8t i=8;i>0;i--){
                                    1-  526     	BANKSEL	r0x1001
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 06rr                      1-  527     	DECR	r0x1001,F
     001D 3rrr                      1-  528     	LGOTO	_00139_DS_
     001E                           1-  529     _00141_DS_:
                                    1-  530     	.line	89, "eeprom.c"; 	}
                                    1-  531     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1-  532     ; exit point of _SendByte
                                    1-  534     ;***
                                    1-  535     ;  pBlock Stats: dbName = C
                                    1-  536     ;***
                                    1-  537     ;has an exit
                                    1-  538     ;functions called:
                                    1-  539     ;   _SDAInput
                                    1-  540     ;   _Delay10Us
                                    1-  541     ;   _Delay10Us
                                    1-  542     ;   _Delay10Us
                                    1-  543     ;   _SDAOutput
                                    1-  544     ;   _Delay10Us
                                    1-  545     ;   _SDAInput
                                    1-  546     ;   _Delay10Us
                                    1-  547     ;   _Delay10Us
                                    1-  548     ;   _Delay10Us
                                    1-  549     ;   _SDAOutput
                                    1-  550     ;   _Delay10Us
                                    1-  551     ;; Starting pCode block
                                    1-  552     .segment "code"; module=eeprom, function=_RecvAck
     0000                           1-  554     _RecvAck:
                                    1-  555     ; 2 exit points
                                    1-  556     	.line	68, "eeprom.c"; 	SDAInput();
     0000 2rrr                      1-  557     	LCALL	_SDAInput
                                    1-  558     	.line	69, "eeprom.c"; 	Delay10Us();
     0001 2rrr                      1-  559     	LCALL	_Delay10Us
                                    1-  560     	.line	70, "eeprom.c"; 	SCL = 1;
                                    1-  561     	BANKSEL	_PORTA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 18rr                      1-  562     	BSR	_PORTA,0
                                    1-  563     	.line	71, "eeprom.c"; 	Delay10Us();
     0004 2rrr                      1-  564     	LCALL	_Delay10Us
                                    1-  565     	.line	72, "eeprom.c"; 	SCL = 0;
                                    1-  566     	BANKSEL	_PORTA
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 1Crr                      1-  567     	BCR	_PORTA,0
                                    1-  568     	.line	73, "eeprom.c"; 	Delay10Us();
     0007 2rrr                      1-  569     	LCALL	_Delay10Us
                                    1-  570     	.line	74, "eeprom.c"; 	SDAOutput();
     0008 2rrr                      1-  571     	LCALL	_SDAOutput
                                    1-  572     	.line	75, "eeprom.c"; 	SDA = 0;
                                    1-  573     	BANKSEL	_PORTB
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 1Frr                      1-  574     	BCR	_PORTB,7
                                    1-  575     	.line	76, "eeprom.c"; 	Delay10Us();
     000B 2rrr                      1-  576     	LCALL	_Delay10Us
                                    1-  577     	.line	77, "eeprom.c"; 	}
                                    1-  578     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1-  579     ; exit point of _RecvAck
                                    1-  581     ;***
                                    1-  582     ;  pBlock Stats: dbName = C
                                    1-  583     ;***
                                    1-  584     ;has an exit
                                    1-  585     ;functions called:
                                    1-  586     ;   _Delay10Us
                                    1-  587     ;   _Delay10Us
                                    1-  588     ;   _Delay10Us
                                    1-  589     ;   _Delay10Us
                                    1-  590     ;   _Delay10Us
                                    1-  591     ;   _Delay10Us
                                    1-  592     ;; Starting pCode block
                                    1-  593     .segment "code"; module=eeprom, function=_SendNoAck
     0000                           1-  595     _SendNoAck:
                                    1-  596     ; 2 exit points
                                    1-  597     	.line	59, "eeprom.c"; 	SDA = 1;
                                    1-  598     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Brr                      1-  599     	BSR	_PORTB,7
                                    1-  600     	.line	60, "eeprom.c"; 	Delay10Us();
     0002 2rrr                      1-  601     	LCALL	_Delay10Us
                                    1-  602     	.line	61, "eeprom.c"; 	SCL = 1;
                                    1-  603     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 18rr                      1-  604     	BSR	_PORTA,0
                                    1-  605     	.line	62, "eeprom.c"; 	Delay10Us();
     0005 2rrr                      1-  606     	LCALL	_Delay10Us
                                    1-  607     	.line	63, "eeprom.c"; 	SCL = 0;
                                    1-  608     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Crr                      1-  609     	BCR	_PORTA,0
                                    1-  610     	.line	64, "eeprom.c"; 	Delay10Us();
     0008 2rrr                      1-  611     	LCALL	_Delay10Us
                                    1-  612     	.line	65, "eeprom.c"; 	}
                                    1-  613     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1-  614     ; exit point of _SendNoAck
                                    1-  616     ;***
                                    1-  617     ;  pBlock Stats: dbName = C
                                    1-  618     ;***
                                    1-  619     ;has an exit
                                    1-  620     ;functions called:
                                    1-  621     ;   _Delay10Us
                                    1-  622     ;   _Delay10Us
                                    1-  623     ;   _Delay10Us
                                    1-  624     ;   _Delay10Us
                                    1-  625     ;   _Delay10Us
                                    1-  626     ;   _Delay10Us
                                    1-  627     ;; Starting pCode block
                                    1-  628     .segment "code"; module=eeprom, function=_SendAck
     0000                           1-  630     _SendAck:
                                    1-  631     ; 2 exit points
                                    1-  632     	.line	50, "eeprom.c"; 	SDA = 0;
                                    1-  633     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Frr                      1-  634     	BCR	_PORTB,7
                                    1-  635     	.line	51, "eeprom.c"; 	Delay10Us();
     0002 2rrr                      1-  636     	LCALL	_Delay10Us
                                    1-  637     	.line	52, "eeprom.c"; 	SCL = 1;
                                    1-  638     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 18rr                      1-  639     	BSR	_PORTA,0
                                    1-  640     	.line	53, "eeprom.c"; 	Delay10Us();
     0005 2rrr                      1-  641     	LCALL	_Delay10Us
                                    1-  642     	.line	54, "eeprom.c"; 	SCL = 0;
                                    1-  643     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Crr                      1-  644     	BCR	_PORTA,0
                                    1-  645     	.line	55, "eeprom.c"; 	Delay10Us();
     0008 2rrr                      1-  646     	LCALL	_Delay10Us
                                    1-  647     	.line	56, "eeprom.c"; 	}
                                    1-  648     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1-  649     ; exit point of _SendAck
                                    1-  651     ;***
                                    1-  652     ;  pBlock Stats: dbName = C
                                    1-  653     ;***
                                    1-  654     ;has an exit
                                    1-  655     ;functions called:
                                    1-  656     ;   _Delay10Us
                                    1-  657     ;   _Delay10Us
                                    1-  658     ;   _Delay10Us
                                    1-  659     ;   _Delay10Us
                                    1-  660     ;   _Delay10Us
                                    1-  661     ;   _Delay10Us
                                    1-  662     ;; Starting pCode block
                                    1-  663     .segment "code"; module=eeprom, function=_Stop24C02
     0000                           1-  665     _Stop24C02:
                                    1-  666     ; 2 exit points
                                    1-  667     	.line	41, "eeprom.c"; 	SDA = 0;
                                    1-  668     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Frr                      1-  669     	BCR	_PORTB,7
                                    1-  670     	.line	42, "eeprom.c"; 	Delay10Us();
     0002 2rrr                      1-  671     	LCALL	_Delay10Us
                                    1-  672     	.line	43, "eeprom.c"; 	SCL = 1;
                                    1-  673     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 18rr                      1-  674     	BSR	_PORTA,0
                                    1-  675     	.line	44, "eeprom.c"; 	Delay10Us();
     0005 2rrr                      1-  676     	LCALL	_Delay10Us
                                    1-  677     	.line	45, "eeprom.c"; 	SDA = 1;
                                    1-  678     	BANKSEL	_PORTB
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Brr                      1-  679     	BSR	_PORTB,7
                                    1-  680     	.line	46, "eeprom.c"; 	Delay10Us();
     0008 2rrr                      1-  681     	LCALL	_Delay10Us
                                    1-  682     	.line	47, "eeprom.c"; 	}
                                    1-  683     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1-  684     ; exit point of _Stop24C02
                                    1-  686     ;***
                                    1-  687     ;  pBlock Stats: dbName = C
                                    1-  688     ;***
                                    1-  689     ;has an exit
                                    1-  690     ;functions called:
                                    1-  691     ;   _Delay10Us
                                    1-  692     ;   _Delay10Us
                                    1-  693     ;   _Delay10Us
                                    1-  694     ;   _Delay10Us
                                    1-  695     ;   _Delay10Us
                                    1-  696     ;   _Delay10Us
                                    1-  697     ;   _Delay10Us
                                    1-  698     ;   _Delay10Us
                                    1-  699     ;; Starting pCode block
                                    1-  700     .segment "code"; module=eeprom, function=_Start24C02
     0000                           1-  702     _Start24C02:
                                    1-  703     ; 2 exit points
                                    1-  704     	.line	30, "eeprom.c"; 	SDA = 1;
                                    1-  705     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Brr                      1-  706     	BSR	_PORTB,7
                                    1-  707     	.line	31, "eeprom.c"; 	Delay10Us();
     0002 2rrr                      1-  708     	LCALL	_Delay10Us
                                    1-  709     	.line	32, "eeprom.c"; 	SCL = 1;
                                    1-  710     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 18rr                      1-  711     	BSR	_PORTA,0
                                    1-  712     	.line	33, "eeprom.c"; 	Delay10Us();
     0005 2rrr                      1-  713     	LCALL	_Delay10Us
                                    1-  714     	.line	34, "eeprom.c"; 	SDA = 0;
                                    1-  715     	BANKSEL	_PORTB
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Frr                      1-  716     	BCR	_PORTB,7
                                    1-  717     	.line	35, "eeprom.c"; 	Delay10Us();
     0008 2rrr                      1-  718     	LCALL	_Delay10Us
                                    1-  719     	.line	36, "eeprom.c"; 	SCL = 0;
                                    1-  720     	BANKSEL	_PORTA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 1Crr                      1-  721     	BCR	_PORTA,0
                                    1-  722     	.line	37, "eeprom.c"; 	Delay10Us();
     000B 2rrr                      1-  723     	LCALL	_Delay10Us
                                    1-  724     	.line	38, "eeprom.c"; 	}
                                    1-  725     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1-  726     ; exit point of _Start24C02
                                    1-  728     ;***
                                    1-  729     ;  pBlock Stats: dbName = C
                                    1-  730     ;***
                                    1-  731     ;has an exit
                                    1-  732     ;1 compiler assigned register :
                                    1-  733     ;   r0x1000
                                    1-  734     ;; Starting pCode block
                                    1-  735     .segment "code"; module=eeprom, function=_SDAInput
     0000                           1-  737     _SDAInput:
                                    1-  738     ; 2 exit points
                                    1-  739     	.line	24, "eeprom.c"; 	DISI();
     0000 0013                      1-  740     	DISI
                                    1-  741     	.line	25, "eeprom.c"; 	IOSTB |= 0X80;
     0001 001r                      1-  742     	IOSTR	_IOSTB
                                    1-  743     	BANKSEL	r0x1000
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1-  744     	MOVAR	r0x1000
     0004 1Brr                      1-  745     	BSR	r0x1000,7
     0005 01rr                      1-  746     	MOVR	r0x1000,W
     0006 000r                      1-  747     	IOST	_IOSTB
                                    1-  748     	.line	26, "eeprom.c"; 	ENI();
     0007 0004                      1-  749     	ENI
                                    1-  750     	.line	27, "eeprom.c"; 	}
                                    1-  751     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1-  752     ; exit point of _SDAInput
                                    1-  754     ;***
                                    1-  755     ;  pBlock Stats: dbName = C
                                    1-  756     ;***
                                    1-  757     ;has an exit
                                    1-  758     ;1 compiler assigned register :
                                    1-  759     ;   r0x1000
                                    1-  760     ;; Starting pCode block
                                    1-  761     .segment "code"; module=eeprom, function=_SDAOutput
     0000                           1-  763     _SDAOutput:
                                    1-  764     ; 2 exit points
                                    1-  765     	.line	18, "eeprom.c"; 	DISI();
     0000 0013                      1-  766     	DISI
                                    1-  767     	.line	19, "eeprom.c"; 	IOSTB &= 0X7F;
     0001 001r                      1-  768     	IOSTR	_IOSTB
                                    1-  769     	BANKSEL	r0x1000
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1-  770     	MOVAR	r0x1000
     0004 1Frr                      1-  771     	BCR	r0x1000,7
     0005 01rr                      1-  772     	MOVR	r0x1000,W
     0006 000r                      1-  773     	IOST	_IOSTB
                                    1-  774     	.line	20, "eeprom.c"; 	ENI();
     0007 0004                      1-  775     	ENI
                                    1-  776     	.line	21, "eeprom.c"; 	}
                                    1-  777     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1-  778     ; exit point of _SDAOutput
                                    1-  780     ;***
                                    1-  781     ;  pBlock Stats: dbName = C
                                    1-  782     ;***
                                    1-  783     ;has an exit
                                    1-  784     ;; Starting pCode block
                                    1-  785     .segment "code"; module=eeprom, function=_Delay10Us
     0000                           1-  787     _Delay10Us:
                                    1-  788     ; 2 exit points
                                    1-  789     	.line	9, "eeprom.c"; 	NOP();
     0000 0000                      1-  790     	nop
                                    1-  791     	.line	10, "eeprom.c"; 	NOP();
     0001 0000                      1-  792     	nop
                                    1-  793     	.line	11, "eeprom.c"; 	NOP();
     0002 0000                      1-  794     	nop
                                    1-  795     	.line	12, "eeprom.c"; 	NOP();
     0003 0000                      1-  796     	nop
                                    1-  797     	.line	13, "eeprom.c"; 	NOP();
     0004 0000                      1-  798     	nop
                                    1-  799     	.line	14, "eeprom.c"; 	NOP();
     0005 0000                      1-  800     	nop
                                    1-  801     	.line	15, "eeprom.c"; 	}
                                    1-  802     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  803     ; exit point of _Delay10Us
                                    1-  806     ;	code size estimation:
                                    1-  807     ;	  179+   60 =   239 instructions (  598 byte)
                                    1-  809     	end
                                    1-  809     	end

SYMBOL TABLE            TYPE     VALUE
__CHECKSUM_ADDR__       Label    00000000
__gptrget1              Label    00000000
__gptrput1              Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
_00001_DS_              Label    0000001A
_00002_DS_              Label    00000010
_00003_DS_              Label    00000014
_00139_DS_              Label    00000005
_00141_DS_              Label    0000001E
_00146_DS_              Label    00000026
_00148_DS_              Label    00000006
_00153_DS_              Label    0000003C
_00156_DS_              Label    00000047
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_CMPCR                  Label    00000000
_Delay10Us              Label    00000000
_FSR                    Label    00000000
_INDF                   Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_ReadByte               Label    00000000
_readWordStep           Label    00000000
_RecvAck                Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_SDAInput               Label    00000000
_SDAOutput              Label    00000000
_SendAck                Label    00000000
_SendByte               Label    00000000
_SendNoAck              Label    00000000
_Start24C02             Label    00000000
_STATUS                 Label    00000000
_Stop24C02              Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_writeWordStep          Label    00000000
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1000                 Label    00000000
r0x1001                 Label    00000000
r0x1002                 Label    00000000
r0x1003                 Label    00000000
r0x1004                 Label    00000000
r0x1005                 Label    00000000
r0x1006                 Label    00000000
r0x1007                 Label    00000000
r0x1008                 Label    00000000
r0x1009                 Label    00000000
r0x100A                 Label    00000000
SSAVE                   Label    00000000
STATUS                  Constant 00000003
STK00                   Label    00000000
STK01                   Label    00000000
STK02                   Label    00000000
STK03                   Label    00000000
STK04                   Label    00000000
STK05                   Label    00000000
STK06                   Label    00000000
STK07                   Label    00000000
STK08                   Label    00000000
STK09                   Label    00000000
STK10                   Label    00000000
STK11                   Label    00000000
STK12                   Label    00000000
W                       Constant 00000000
WSAVE                   Label    00000000


SOURCE FILE TABLE
001 eeprom.s
002 ny8a054d.inc
003 common.inc
004 eeprom.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
