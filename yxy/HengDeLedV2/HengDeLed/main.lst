
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A053D,c=on
                                    1-    9     	#include "ny8a053d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduchar
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_INDF
                                    1-   24     	extern	_TMR0
                                    1-   25     	extern	_PCL
                                    1-   26     	extern	_STATUS
                                    1-   27     	extern	_FSR
                                    1-   28     	extern	_PORTA
                                    1-   29     	extern	_PORTB
                                    1-   30     	extern	_PCON
                                    1-   31     	extern	_BWUCON
                                    1-   32     	extern	_PCHBUF
                                    1-   33     	extern	_ABPLCON
                                    1-   34     	extern	_BPHCON
                                    1-   35     	extern	_INTE
                                    1-   36     	extern	_INTF
                                    1-   37     	extern	_TMR1
                                    1-   38     	extern	_T1CR1
                                    1-   39     	extern	_T1CR2
                                    1-   40     	extern	_PWM1DUTY
                                    1-   41     	extern	_PS1CV
                                    1-   42     	extern	_BZ1CR
                                    1-   43     	extern	_IRCR
                                    1-   44     	extern	_TBHP
                                    1-   45     	extern	_TBHD
                                    1-   46     	extern	_OSCCR
                                    1-   47     	extern	_IOSTA
                                    1-   48     	extern	_IOSTB
                                    1-   49     	extern	_PS0CV
                                    1-   50     	extern	_BODCON
                                    1-   51     	extern	_PCON1
                                    1-   52     	extern	_T0MD
                                    1-   53     	extern	___sdcc_saved_fsr
                                    1-   54     	extern	___sdcc_saved_stk00
                                    1-   55     	extern	___sdcc_saved_stk01
                                    1-   56     	extern	__nyc_ny8_startup
                                    1-   57     ;--------------------------------------------------------
                                    1-   58     ; global declarations
                                    1-   59     ;--------------------------------------------------------
                                    1-   60     	extern	_gotoSleep
                                    1-   61     	extern	_keyRead
                                    1-   62     	extern	_init
                                    1-   63     	extern	_keyCon
                                    1-   64     	extern	_ledMode2
                                    1-   65     	extern	_ledMode1
                                    1-   66     	extern	_ledCon
                                    1-   67     	extern	_isr
                                    1-   68     	extern	_main
                                    1-   69     	extern	_ledMode3
                                    1-   70     	extern	_intCount
                                    1-   71     	extern	_IntFlag
                                    1-   72     	extern	_keyLockFlag
                                    1-   73     	extern	_modeFlag
                                    1-   74     	extern	_key2Count
                                    1-   75     	extern	_ledFlag
                                    1-   76     	extern	_longFlag
                                    1-   77     	extern	_lockLedFlag
                                    1-   78     	extern	_lockLedCount
                                    1-   79     	extern	_countLed
                                    1-   80     	extern	_sleepCount
                                    1-   81     	extern	_keyCount
                                    1-   82     	extern	_longPressFlag
                                    1-   84     	extern PSAVE
                                    1-   85     	extern SSAVE
                                    1-   86     	extern WSAVE
                                    1-   87     	extern STK12
                                    1-   88     	extern STK11
                                    1-   89     	extern STK10
                                    1-   90     	extern STK09
                                    1-   91     	extern STK08
                                    1-   92     	extern STK07
                                    1-   93     	extern STK06
                                    1-   94     	extern STK05
                                    1-   95     	extern STK04
                                    1-   96     	extern STK03
                                    1-   97     	extern STK02
                                    1-   98     	extern STK01
                                    1-   99     	extern STK00
                                    1-  101     .segment "uninit", 0x20000020
 20000020                           1-  102     PSAVE:
                                    1-  103     	.res 1
 20000021                           1-  104     SSAVE:
                                    1-  105     	.res 1
 20000022                           1-  106     WSAVE:
                                    1-  107     	.res 1
 20000023                           1-  108     STK12:
                                    1-  109     	.res 1
 20000024                           1-  110     STK11:
                                    1-  111     	.res 1
 20000025                           1-  112     STK10:
                                    1-  113     	.res 1
 20000026                           1-  114     STK09:
                                    1-  115     	.res 1
 20000027                           1-  116     STK08:
                                    1-  117     	.res 1
 20000028                           1-  118     STK07:
                                    1-  119     	.res 1
 20000029                           1-  120     STK06:
                                    1-  121     	.res 1
 2000002A                           1-  122     STK05:
                                    1-  123     	.res 1
 2000002B                           1-  124     STK04:
                                    1-  125     	.res 1
 2000002C                           1-  126     STK03:
                                    1-  127     	.res 1
 2000002D                           1-  128     STK02:
                                    1-  129     	.res 1
 2000002E                           1-  130     STK01:
                                    1-  131     	.res 1
 2000002F                           1-  132     STK00:
                                    1-  133     	.res 1
                                    1-  135     ;--------------------------------------------------------
                                    1-  136     ; global definitions
                                    1-  137     ;--------------------------------------------------------
                                    1-  138     ;--------------------------------------------------------
                                    1-  139     ; absolute symbol definitions
                                    1-  140     ;--------------------------------------------------------
                                    1-  141     ;--------------------------------------------------------
                                    1-  142     ; compiler-defined variables
                                    1-  143     ;--------------------------------------------------------
                                    1-  144     .segment "uninit"
     0000                           1-  145     r0x1018:
                                    1-  146     	.res	1
                                    1-  147     .segment "uninit"
     0000                           1-  148     r0x1019:
                                    1-  149     	.res	1
                                    1-  150     .segment "uninit"
     0000                           1-  151     r0x1017:
                                    1-  152     	.res	1
                                    1-  153     .segment "uninit"
     0000                           1-  154     r0x1015:
                                    1-  155     	.res	1
                                    1-  156     .segment "uninit"
     0000                           1-  157     r0x1016:
                                    1-  158     	.res	1
                                    1-  159     .segment "uninit"
     0000                           1-  160     r0x1014:
                                    1-  161     	.res	1
                                    1-  162     .segment "uninit"
     0000                           1-  163     r0x1013:
                                    1-  164     	.res	1
                                    1-  165     ;--------------------------------------------------------
                                    1-  166     ; initialized data
                                    1-  167     ;--------------------------------------------------------
                                    1-  169     .segment "idata"
     0000                           1-  170     _intCount:
     0000 0000                      1-  171     	dw	0x00
                                    1-  175     .segment "idata"
     0000                           1-  176     _IntFlag:
     0000 0000                      1-  177     	dw	0x00
                                    1-  181     .segment "idata"
     0000                           1-  182     _keyLockFlag:
     0000 0001                      1-  183     	dw	0x01
                                    1-  187     .segment "idata"
     0000                           1-  188     _modeFlag:
     0000 0000                      1-  189     	dw	0x00
                                    1-  193     .segment "idata"
     0000                           1-  194     _key2Count:
     0000 0000 0000                 1-  195     	dw	0x00, 0x00
                                    1-  199     .segment "idata"
     0000                           1-  200     _ledFlag:
     0000 0000                      1-  201     	dw	0x00
                                    1-  205     .segment "idata"
     0000                           1-  206     _longFlag:
     0000 0000                      1-  207     	dw	0x00
                                    1-  211     .segment "idata"
     0000                           1-  212     _lockLedFlag:
     0000 0000                      1-  213     	dw	0x00
                                    1-  217     .segment "idata"
     0000                           1-  218     _lockLedCount:
     0000 0000                      1-  219     	dw	0x00
                                    1-  223     .segment "idata"
     0000                           1-  224     _countLed:
     0000 0000                      1-  225     	dw	0x00
                                    1-  229     .segment "idata"
     0000                           1-  230     _sleepCount:
     0000 0000 0000                 1-  231     	dw	0x00, 0x00
                                    1-  235     .segment "idata"
     0000                           1-  236     _keyCount:
     0000 0000 0000                 1-  237     	dw	0x00, 0x00
                                    1-  241     .segment "idata"
     0000                           1-  242     _longPressFlag:
     0000 0000                      1-  243     	dw	0x00
                                    1-  246     ;--------------------------------------------------------
                                    1-  247     ; overlayable items in internal ram 
                                    1-  248     ;--------------------------------------------------------
                                    1-  249     ;	udata_ovr
                                    1-  250     ;--------------------------------------------------------
                                    1-  251     ; reset vector 
                                    1-  252     ;--------------------------------------------------------
                                    1-  253     ORG	0x0000
     0000 3rrr                      1-  254     	LGOTO	__nyc_ny8_startup
                                    1-  255     ;--------------------------------------------------------
                                    1-  256     ; interrupt and initialization code
                                    1-  257     ;--------------------------------------------------------
                                    1-  258     ORG 0x0008
     0008 3rrr                      1-  259     	lgoto	__sdcc_interrupt
                                    1-  261     .segment "code"
     0000                           1-  262     __sdcc_interrupt:
                                    1-  263     ;***
                                    1-  264     ;  pBlock Stats: dbName = I
                                    1-  265     ;***
                                    1-  266     ;2 compiler assigned registers:
                                    1-  267     ;   STK00
                                    1-  268     ;   STK01
                                    1-  269     ;; Starting pCode block
     0000                           1-  270     _isr:
                                    1-  271     ; 0 exit points
                                    1-  272     	.line	50, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  273     	MOVAR	WSAVE
     0001 1503                      1-  274     	SWAPR	STATUS,W
     0002 0283                      1-  275     	CLRR	STATUS
     0003 00rr                      1-  276     	MOVAR	SSAVE
     0004 010A                      1-  277     	MOVR	PCHBUF,W
     0005 028A                      1-  278     	CLRR	PCHBUF
     0006 00rr                      1-  279     	MOVAR	PSAVE
     0007 0104                      1-  280     	MOVR	FSR,W
                                    1-  281     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  282     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  283     	MOVR	STK00,W
                                    1-  284     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  285     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  286     	MOVR	STK01,W
                                    1-  287     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  288     	MOVAR	___sdcc_saved_stk01
                                    1-  289     	.line	52, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  290     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  291     	LGOTO	_00108_DS_
                                    1-  292     	.line	54, "main.c"; 	TMR0 = 55;
     0012 2137                      1-  293     	MOVIA	0x37
     0013 00rr                      1-  294     	MOVAR	_TMR0
                                    1-  295     	.line	55, "main.c"; 	intCount++;
                                    1-  296     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  297     	INCR	_intCount,F
                                    1-  298     	.line	56, "main.c"; 	if(intCount == 96)
     0016 01rr                      1-  299     	MOVR	_intCount,W
     0017 2460                      1-  300     	XORIA	0x60
     0018 0903                      1-  301     	BTRSS	STATUS,2
     0019 3rrr                      1-  302     	LGOTO	_00108_DS_
                                    1-  303     	.line	58, "main.c"; 	intCount = 0;
     001A 02rr                      1-  304     	CLRR	_intCount
                                    1-  305     	.line	59, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  306     	MOVIA	0x01
                                    1-  307     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  308     	MOVAR	_IntFlag
     001E                           1-  309     _00108_DS_:
                                    1-  310     	.line	64, "main.c"; 	if(INTFbits.PBIF)
     001E 08rr                      1-  311     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  312     	LGOTO	_00110_DS_
                                    1-  313     	.line	66, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  314     	MOVIA	0xfd
     0021 00rr                      1-  315     	MOVAR	_INTF
     0022                           1-  316     _00110_DS_:
                                    1-  317     	.line	69, "main.c"; 	INTF = 0;
     0022 02rr                      1-  318     	CLRR	_INTF
                                    1-  319     	.line	71, "main.c"; 	}
                                    1-  320     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  321     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  322     	MOVAR	STK01
                                    1-  323     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  324     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  325     	MOVAR	STK00
                                    1-  326     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  327     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  328     	MOVAR	FSR
     002C 01rr                      1-  329     	MOVR	PSAVE,W
     002D 008A                      1-  330     	MOVAR	PCHBUF
     002E 0283                      1-  331     	CLRR	STATUS
     002F 15rr                      1-  332     	SWAPR	SSAVE,W
     0030 0083                      1-  333     	MOVAR	STATUS
     0031 15rr                      1-  334     	SWAPR	WSAVE,F
     0032 15rr                      1-  335     	SWAPR	WSAVE,W
     0033                           1-  336     END_OF_INTERRUPT:
     0033 0011                      1-  337     	RETIE	
                                    1-  339     ;--------------------------------------------------------
                                    1-  340     ; code
                                    1-  341     ;--------------------------------------------------------
                                    1-  342     ;***
                                    1-  343     ;  pBlock Stats: dbName = M
                                    1-  344     ;***
                                    1-  345     ;has an exit
                                    1-  346     ;functions called:
                                    1-  347     ;   _init
                                    1-  348     ;   _keyCon
                                    1-  349     ;   _ledCon
                                    1-  350     ;   _gotoSleep
                                    1-  351     ;   _init
                                    1-  352     ;   _keyCon
                                    1-  353     ;   _ledCon
                                    1-  354     ;   _gotoSleep
                                    1-  355     ;2 compiler assigned registers:
                                    1-  356     ;   r0x1018
                                    1-  357     ;   r0x1019
                                    1-  358     ;; Starting pCode block
                                    1-  359     .segment "code"; module=main, function=_main
     0000                           1-  361     _main:
                                    1-  362     ; 2 exit points
                                    1-  363     	.line	75, "main.c"; 	init();
     0000 2rrr                      1-  364     	LCALL	_init
     0001                           1-  365     _00128_DS_:
                                    1-  366     	.line	78, "main.c"; 	CLRWDT();
     0001 0002                      1-  367     	clrwdt
                                    1-  368     	.line	79, "main.c"; 	if(0x02&~PORTB)
     0002 01rr                      1-  369     	MOVR	_PORTB,W
                                    1-  370     	BANKSEL	r0x1018
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  371     	MOVAR	r0x1018
                                    1-  372     	BANKSEL	r0x1019
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  373     	CLRR	r0x1019
                                    1-  374     	BANKSEL	r0x1018
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 07rr                      1-  375     	COMR	r0x1018,W
     0009 00rr                      1-  376     	MOVAR	r0x1018
                                    1-  377     	BANKSEL	r0x1019
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 07rr                      1-  378     	COMR	r0x1019,W
     000C 00rr                      1-  379     	MOVAR	r0x1019
                                    1-  380     	BANKSEL	r0x1018
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 08rr                      1-  381     	BTRSS	r0x1018,1
     000F 3rrr                      1-  382     	LGOTO	_00116_DS_
                                    1-  383     	.line	80, "main.c"; 	key2Count++;
                                    1-  384     	BANKSEL	_key2Count
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 05rr                      1-  385     	INCR	_key2Count,F
     0012 0D03                      1-  386     	BTRSC	STATUS,2
     0013 05rr                      1-  387     	INCR	(_key2Count + 1),F
     0014                           1-  388     _00116_DS_:
                                    1-  389     	.line	81, "main.c"; 	if(!IntFlag)
                                    1-  390     	BANKSEL	_IntFlag
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1-  391     	MOVR	_IntFlag,W
     0016 0D03                      1-  392     	BTRSC	STATUS,2
     0017 3rrr                      1-  393     	LGOTO	_00128_DS_
                                    1-  394     	.line	83, "main.c"; 	IntFlag = 0;
     0018 02rr                      1-  395     	CLRR	_IntFlag
                                    1-  396     	.line	84, "main.c"; 	keyCon();
     0019 2rrr                      1-  397     	LCALL	_keyCon
                                    1-  398     	.line	85, "main.c"; 	ledCon();
     001A 2rrr                      1-  399     	LCALL	_ledCon
                                    1-  400     	.line	86, "main.c"; 	if( lockLedCount == 0 && ledFlag == 0 && (key2Count == 0 || longPressFlag))
                                    1-  401     	BANKSEL	_lockLedCount
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1-  402     	MOVR	_lockLedCount,W
     001D 0903                      1-  403     	BTRSS	STATUS,2
     001E 3rrr                      1-  404     	LGOTO	_00122_DS_
                                    1-  405     	BANKSEL	_ledFlag
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  406     	MOVR	_ledFlag,W
     0021 0903                      1-  407     	BTRSS	STATUS,2
     0022 3rrr                      1-  408     	LGOTO	_00122_DS_
                                    1-  409     	BANKSEL	_key2Count
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  410     	MOVR	_key2Count,W
     0025 11rr                      1-  411     	IORAR	(_key2Count + 1),W
     0026 0D03                      1-  412     	BTRSC	STATUS,2
     0027 3rrr                      1-  413     	LGOTO	_00121_DS_
                                    1-  414     	BANKSEL	_longPressFlag
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1-  415     	MOVR	_longPressFlag,W
     002A 0D03                      1-  416     	BTRSC	STATUS,2
     002B 3rrr                      1-  417     	LGOTO	_00122_DS_
     002C                           1-  418     _00121_DS_:
                                    1-  419     	.line	88, "main.c"; 	if(++sleepCount > 1200)
                                    1-  420     	BANKSEL	_sleepCount
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  421     	INCR	_sleepCount,F
     002E 0D03                      1-  422     	BTRSC	STATUS,2
     002F 05rr                      1-  423     	INCR	(_sleepCount + 1),F
                                    1-  424     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  425     ;;unsigned compare: left >= lit (0x4B1=1201), size=2
     0030 2104                      1-  426     	MOVIA	0x04
     0031 04rr                      1-  427     	SUBAR	(_sleepCount + 1),W
     0032 0903                      1-  428     	BTRSS	STATUS,2
     0033 3rrr                      1-  429     	LGOTO	_00153_DS_
     0034 21B1                      1-  430     	MOVIA	0xb1
     0035 04rr                      1-  431     	SUBAR	_sleepCount,W
     0036                           1-  432     _00153_DS_:
     0036 0803                      1-  433     	BTRSS	STATUS,0
     0037 3rrr                      1-  434     	LGOTO	_00128_DS_
                                    1-  435     	.line	89, "main.c"; 	gotoSleep(0x07);
     0038 2107                      1-  436     	MOVIA	0x07
     0039 2rrr                      1-  437     	LCALL	_gotoSleep
     003A 3rrr                      1-  438     	LGOTO	_00128_DS_
     003B                           1-  439     _00122_DS_:
                                    1-  440     	.line	92, "main.c"; 	sleepCount = 0;
                                    1-  441     	BANKSEL	_sleepCount
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 02rr                      1-  442     	CLRR	_sleepCount
     003D 02rr                      1-  443     	CLRR	(_sleepCount + 1)
     003E 3rrr                      1-  444     	LGOTO	_00128_DS_
                                    1-  445     	.line	94, "main.c"; 	}
                                    1-  446     	RETURN	
     003F 0010                      3-   26 m1      ret
                                    1-  447     ; exit point of _main
                                    1-  449     ;***
                                    1-  450     ;  pBlock Stats: dbName = C
                                    1-  451     ;***
                                    1-  452     ;has an exit
                                    1-  453     ;1 compiler assigned register :
                                    1-  454     ;   r0x1013
                                    1-  455     ;; Starting pCode block
                                    1-  456     .segment "code"; module=main, function=_gotoSleep
                                    1-  458     ;local variable name mapping:
     0000                           1-  460     _gotoSleep:
                                    1-  461     ; 2 exit points
                                    1-  462     	.line	431, "main.c"; 	void gotoSleep(char wakeKey)
                                    1-  463     	BANKSEL	r0x1013
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  464     	MOVAR	r0x1013
                                    1-  465     	.line	434, "main.c"; 	sleepCount = 0;
                                    1-  466     	BANKSEL	_sleepCount
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  467     	CLRR	_sleepCount
     0004 02rr                      1-  468     	CLRR	(_sleepCount + 1)
                                    1-  469     	.line	435, "main.c"; 	PWM1DUTY = 0;
     0005 0200                      1-  470     	CLRA	
     0006 002r                      1-  471     	SFUN	_PWM1DUTY
                                    1-  472     	.line	436, "main.c"; 	PORTA = 0xFF;
     0007 21FF                      1-  473     	MOVIA	0xff
     0008 00rr                      1-  474     	MOVAR	_PORTA
                                    1-  475     	.line	437, "main.c"; 	PORTB = 0xFF;
     0009 00rr                      1-  476     	MOVAR	_PORTB
                                    1-  477     	.line	438, "main.c"; 	keyCount = 0;
                                    1-  478     	BANKSEL	_keyCount
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1-  479     	CLRR	_keyCount
     000C 02rr                      1-  480     	CLRR	(_keyCount + 1)
                                    1-  481     	.line	440, "main.c"; 	BWUCON = wakeKey;
                                    1-  482     	BANKSEL	r0x1013
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  483     	MOVR	r0x1013,W
     000F 00rr                      1-  484     	MOVAR	_BWUCON
                                    1-  485     	.line	441, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PBKey;
     0010 2103                      1-  486     	MOVIA	0x03
     0011 00rr                      1-  487     	MOVAR	_INTE
                                    1-  488     	.line	442, "main.c"; 	PCON =  C_LVR_En ;	
     0012 2108                      1-  489     	MOVIA	0x08
     0013 00rr                      1-  490     	MOVAR	_PCON
                                    1-  491     	.line	443, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0014 02rr                      1-  492     	CLRR	_INTF
                                    1-  493     	.line	444, "main.c"; 	CLRWDT();
     0015 0002                      1-  494     	clrwdt
                                    1-  495     	.line	445, "main.c"; 	SLEEP();
     0016 0001                      1-  496     	sleep
                                    1-  497     	.line	446, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0017 2101                      1-  498     	MOVIA	0x01
     0018 00rr                      1-  499     	MOVAR	_INTE
                                    1-  500     	.line	447, "main.c"; 	INTF = 0;
     0019 02rr                      1-  501     	CLRR	_INTF
                                    1-  502     	.line	449, "main.c"; 	PCON = C_WDT_En | C_LVR_En ;				// Enable WDT ,  Enable LVR
     001A 2188                      1-  503     	MOVIA	0x88
     001B 00rr                      1-  504     	MOVAR	_PCON
                                    1-  505     	.line	451, "main.c"; 	}
                                    1-  506     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  507     ; exit point of _gotoSleep
                                    1-  509     ;***
                                    1-  510     ;  pBlock Stats: dbName = C
                                    1-  511     ;***
                                    1-  512     ;has an exit
                                    1-  513     ;1 compiler assigned register :
                                    1-  514     ;   r0x1014
                                    1-  515     ;; Starting pCode block
                                    1-  516     .segment "code"; module=main, function=_keyRead
                                    1-  518     ;local variable name mapping:
     0000                           1-  520     _keyRead:
                                    1-  521     ; 2 exit points
                                    1-  522     	.line	398, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  523     	BANKSEL	r0x1014
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  524     	MOVAR	r0x1014
                                    1-  525     	.line	400, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  526     	MOVR	r0x1014,W
     0003 0D03                      1-  527     	BTRSC	STATUS,2
     0004 3rrr                      1-  528     	LGOTO	_00350_DS_
                                    1-  529     	.line	402, "main.c"; 	keyCount++;
                                    1-  530     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  531     	INCR	_keyCount,F
     0007 0D03                      1-  532     	BTRSC	STATUS,2
     0008 05rr                      1-  533     	INCR	(_keyCount + 1),F
                                    1-  534     ;;unsigned compare: left < lit (0xC8=200), size=2
                                    1-  535     	.line	403, "main.c"; 	if(keyCount >= 200)
     0009 2100                      1-  536     	MOVIA	0x00
     000A 04rr                      1-  537     	SUBAR	(_keyCount + 1),W
     000B 0903                      1-  538     	BTRSS	STATUS,2
     000C 3rrr                      1-  539     	LGOTO	_00369_DS_
     000D 21C8                      1-  540     	MOVIA	0xc8
     000E 04rr                      1-  541     	SUBAR	_keyCount,W
     000F                           1-  542     _00369_DS_:
     000F 0803                      1-  543     	BTRSS	STATUS,0
     0010 3rrr                      1-  544     	LGOTO	_00351_DS_
                                    1-  545     	.line	405, "main.c"; 	keyCount = 200;
     0011 21C8                      1-  546     	MOVIA	0xc8
                                    1-  547     	BANKSEL	_keyCount
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1-  548     	MOVAR	_keyCount
     0014 02rr                      1-  549     	CLRR	(_keyCount + 1)
                                    1-  550     	.line	406, "main.c"; 	if(!longPressFlag)
                                    1-  551     	BANKSEL	_longPressFlag
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  552     	MOVR	_longPressFlag,W
     0017 0903                      1-  553     	BTRSS	STATUS,2
     0018 3rrr                      1-  554     	LGOTO	_00351_DS_
                                    1-  555     	.line	408, "main.c"; 	longPressFlag = 1;
     0019 2101                      1-  556     	MOVIA	0x01
     001A 00rr                      1-  557     	MOVAR	_longPressFlag
                                    1-  558     	.line	409, "main.c"; 	return 2;
     001B 2102                      1-  559     	MOVIA	0x02
     001C 3rrr                      1-  560     	LGOTO	_00352_DS_
                                    1-  561     ;;unsigned compare: left < lit (0xC8=200), size=2
     001D                           1-  562     _00350_DS_:
                                    1-  563     	.line	415, "main.c"; 	if(keyCount >= 200)
     001D 2100                      1-  564     	MOVIA	0x00
                                    1-  565     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1-  566     	SUBAR	(_keyCount + 1),W
     0020 0903                      1-  567     	BTRSS	STATUS,2
     0021 3rrr                      1-  568     	LGOTO	_00370_DS_
     0022 21C8                      1-  569     	MOVIA	0xc8
     0023 04rr                      1-  570     	SUBAR	_keyCount,W
     0024                           1-  571     _00370_DS_:
     0024 0803                      1-  572     	BTRSS	STATUS,0
     0025 3rrr                      1-  573     	LGOTO	_00347_DS_
                                    1-  574     	.line	417, "main.c"; 	keyCount = 0;
                                    1-  575     	BANKSEL	_keyCount
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 02rr                      1-  576     	CLRR	_keyCount
     0028 02rr                      1-  577     	CLRR	(_keyCount + 1)
                                    1-  578     	.line	418, "main.c"; 	longPressFlag = 0;
                                    1-  579     	BANKSEL	_longPressFlag
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 02rr                      1-  580     	CLRR	_longPressFlag
                                    1-  581     	.line	419, "main.c"; 	return	0;
     002B 2100                      1-  582     	MOVIA	0x00
     002C 3rrr                      1-  583     	LGOTO	_00352_DS_
                                    1-  584     ;;unsigned compare: left < lit (0x5=5), size=2
     002D                           1-  585     _00347_DS_:
                                    1-  586     	.line	421, "main.c"; 	else if(keyCount >= 5)
     002D 2100                      1-  587     	MOVIA	0x00
                                    1-  588     	BANKSEL	_keyCount
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 04rr                      1-  589     	SUBAR	(_keyCount + 1),W
     0030 0903                      1-  590     	BTRSS	STATUS,2
     0031 3rrr                      1-  591     	LGOTO	_00371_DS_
     0032 2105                      1-  592     	MOVIA	0x05
     0033 04rr                      1-  593     	SUBAR	_keyCount,W
     0034                           1-  594     _00371_DS_:
     0034 0803                      1-  595     	BTRSS	STATUS,0
     0035 3rrr                      1-  596     	LGOTO	_00348_DS_
                                    1-  597     	.line	423, "main.c"; 	keyCount = 0;
                                    1-  598     	BANKSEL	_keyCount
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 02rr                      1-  599     	CLRR	_keyCount
     0038 02rr                      1-  600     	CLRR	(_keyCount + 1)
                                    1-  601     	.line	424, "main.c"; 	return	1;
     0039 2101                      1-  602     	MOVIA	0x01
     003A 3rrr                      1-  603     	LGOTO	_00352_DS_
     003B                           1-  604     _00348_DS_:
                                    1-  605     	.line	426, "main.c"; 	keyCount = 0;
                                    1-  606     	BANKSEL	_keyCount
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 02rr                      1-  607     	CLRR	_keyCount
     003D 02rr                      1-  608     	CLRR	(_keyCount + 1)
     003E                           1-  609     _00351_DS_:
                                    1-  610     	.line	428, "main.c"; 	return 0;
     003E 2100                      1-  611     	MOVIA	0x00
     003F                           1-  612     _00352_DS_:
                                    1-  613     	.line	429, "main.c"; 	}
                                    1-  614     	RETURN	
     003F 0010                      3-   26 m1      ret
                                    1-  615     ; exit point of _keyRead
                                    1-  617     ;***
                                    1-  618     ;  pBlock Stats: dbName = C
                                    1-  619     ;***
                                    1-  620     ;has an exit
                                    1-  621     ;; Starting pCode block
                                    1-  622     .segment "code"; module=main, function=_init
     0000                           1-  624     _init:
                                    1-  625     ; 2 exit points
                                    1-  626     	.line	375, "main.c"; 	PORTA = 0xFF;
     0000 21FF                      1-  627     	MOVIA	0xff
     0001 00rr                      1-  628     	MOVAR	_PORTA
                                    1-  629     	.line	376, "main.c"; 	PORTB = 0xFF;
     0002 00rr                      1-  630     	MOVAR	_PORTB
                                    1-  631     	.line	377, "main.c"; 	BPHCON = 0xF8;
     0003 21F8                      1-  632     	MOVIA	0xf8
     0004 00rr                      1-  633     	MOVAR	_BPHCON
                                    1-  634     	.line	379, "main.c"; 	IOSTA =  0xF0;
     0005 21F0                      1-  635     	MOVIA	0xf0
     0006 000r                      1-  636     	IOST	_IOSTA
                                    1-  637     	.line	380, "main.c"; 	IOSTB =  C_PB0_Input | C_PB1_Input | C_PB2_Input;	
     0007 2107                      1-  638     	MOVIA	0x07
     0008 000r                      1-  639     	IOST	_IOSTB
                                    1-  640     	.line	381, "main.c"; 	PORTB = 0xFF; 
     0009 21FF                      1-  641     	MOVIA	0xff
     000A 00rr                      1-  642     	MOVAR	_PORTB
                                    1-  643     	.line	382, "main.c"; 	PORTA = 0xFF;
     000B 00rr                      1-  644     	MOVAR	_PORTA
                                    1-  645     	.line	383, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT & LVR
     000C 2188                      1-  646     	MOVIA	0x88
     000D 00rr                      1-  647     	MOVAR	_PCON
                                    1-  648     	.line	385, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1-  649     	CLRA	
     000F 000r                      1-  650     	IOST	_PCON1
                                    1-  651     	.line	387, "main.c"; 	TMR0 = 55;
     0010 2137                      1-  652     	MOVIA	0x37
     0011 00rr                      1-  653     	MOVAR	_TMR0
                                    1-  654     	.line	388, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0012 0200                      1-  655     	CLRA	
     0013 0003                      1-  656     	T0MD	
                                    1-  657     	.line	390, "main.c"; 	PCON1 =  C_TMR0_En;
     0014 2101                      1-  658     	MOVIA	0x01
     0015 000r                      1-  659     	IOST	_PCON1
                                    1-  660     	.line	391, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1;	// Enable Timer0、Timer1、WDT overflow interrupt
     0016 2109                      1-  661     	MOVIA	0x09
     0017 00rr                      1-  662     	MOVAR	_INTE
                                    1-  663     	.line	392, "main.c"; 	INTF = 0;
     0018 02rr                      1-  664     	CLRR	_INTF
                                    1-  665     	.line	393, "main.c"; 	ENI();
     0019 0004                      1-  666     	ENI
                                    1-  667     	.line	395, "main.c"; 	}
                                    1-  668     	RETURN	
     001A 0010                      3-   26 m1      ret
                                    1-  669     ; exit point of _init
                                    1-  671     ;***
                                    1-  672     ;  pBlock Stats: dbName = C
                                    1-  673     ;***
                                    1-  674     ;has an exit
                                    1-  675     ;functions called:
                                    1-  676     ;   _keyRead
                                    1-  677     ;   _keyRead
                                    1-  678     ;2 compiler assigned registers:
                                    1-  679     ;   r0x1015
                                    1-  680     ;   r0x1016
                                    1-  681     ;; Starting pCode block
                                    1-  682     .segment "code"; module=main, function=_keyCon
     0000                           1-  684     _keyCon:
                                    1-  685     ; 2 exit points
                                    1-  686     	.line	335, "main.c"; 	if(0x02&PORTB)
     0000 08rr                      1-  687     	BTRSS	_PORTB,1
     0001 3rrr                      1-  688     	LGOTO	_00298_DS_
                                    1-  689     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  690     ;;unsigned compare: left >= lit (0x6=6), size=2
                                    1-  691     	.line	337, "main.c"; 	if(key2Count > 5)
     0002 2100                      1-  692     	MOVIA	0x00
                                    1-  693     	BANKSEL	_key2Count
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 04rr                      1-  694     	SUBAR	(_key2Count + 1),W
     0005 0903                      1-  695     	BTRSS	STATUS,2
     0006 3rrr                      1-  696     	LGOTO	_00330_DS_
     0007 2106                      1-  697     	MOVIA	0x06
     0008 04rr                      1-  698     	SUBAR	_key2Count,W
     0009                           1-  699     _00330_DS_:
     0009 0803                      1-  700     	BTRSS	STATUS,0
     000A 3rrr                      1-  701     	LGOTO	_00292_DS_
                                    1-  702     	.line	338, "main.c"; 	ledFlag = 1;
     000B 2101                      1-  703     	MOVIA	0x01
                                    1-  704     	BANKSEL	_ledFlag
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  705     	MOVAR	_ledFlag
     000E                           1-  706     _00292_DS_:
                                    1-  707     	.line	339, "main.c"; 	key2Count = 0;
                                    1-  708     	BANKSEL	_key2Count
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1-  709     	CLRR	_key2Count
     0010 02rr                      1-  710     	CLRR	(_key2Count + 1)
                                    1-  711     	.line	340, "main.c"; 	longFlag = 0;
                                    1-  712     	BANKSEL	_longFlag
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 02rr                      1-  713     	CLRR	_longFlag
     0013 3rrr                      1-  714     	LGOTO	_00299_DS_
                                    1-  715     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  716     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0014                           1-  717     _00298_DS_:
                                    1-  718     	.line	344, "main.c"; 	if(key2Count > 2000)
     0014 2107                      1-  719     	MOVIA	0x07
                                    1-  720     	BANKSEL	_key2Count
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 04rr                      1-  721     	SUBAR	(_key2Count + 1),W
     0017 0903                      1-  722     	BTRSS	STATUS,2
     0018 3rrr                      1-  723     	LGOTO	_00331_DS_
     0019 21D1                      1-  724     	MOVIA	0xd1
     001A 04rr                      1-  725     	SUBAR	_key2Count,W
     001B                           1-  726     _00331_DS_:
     001B 0803                      1-  727     	BTRSS	STATUS,0
     001C 3rrr                      1-  728     	LGOTO	_00299_DS_
                                    1-  729     	.line	346, "main.c"; 	key2Count = 2000;
     001D 21D0                      1-  730     	MOVIA	0xd0
                                    1-  731     	BANKSEL	_key2Count
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  732     	MOVAR	_key2Count
     0020 2107                      1-  733     	MOVIA	0x07
     0021 00rr                      1-  734     	MOVAR	(_key2Count + 1)
                                    1-  735     	.line	347, "main.c"; 	if(!longFlag)
                                    1-  736     	BANKSEL	_longFlag
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  737     	MOVR	_longFlag,W
     0024 0903                      1-  738     	BTRSS	STATUS,2
     0025 3rrr                      1-  739     	LGOTO	_00299_DS_
                                    1-  740     	.line	349, "main.c"; 	ledFlag = 1;
     0026 2101                      1-  741     	MOVIA	0x01
                                    1-  742     	BANKSEL	_ledFlag
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1-  743     	MOVAR	_ledFlag
                                    1-  744     	.line	350, "main.c"; 	longFlag = 1;
                                    1-  745     	BANKSEL	_longFlag
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 00rr                      1-  746     	MOVAR	_longFlag
     002B                           1-  747     _00299_DS_:
                                    1-  748     	.line	355, "main.c"; 	if(0x01&~PORTB)
     002B 01rr                      1-  749     	MOVR	_PORTB,W
                                    1-  750     	BANKSEL	r0x1015
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1-  751     	MOVAR	r0x1015
                                    1-  752     	BANKSEL	r0x1016
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 02rr                      1-  753     	CLRR	r0x1016
                                    1-  754     	BANKSEL	r0x1015
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 07rr                      1-  755     	COMR	r0x1015,W
     0032 00rr                      1-  756     	MOVAR	r0x1015
                                    1-  757     	BANKSEL	r0x1016
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 07rr                      1-  758     	COMR	r0x1016,W
     0035 00rr                      1-  759     	MOVAR	r0x1016
                                    1-  760     	BANKSEL	r0x1015
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 08rr                      1-  761     	BTRSS	r0x1015,0
     0038 3rrr                      1-  762     	LGOTO	_00301_DS_
                                    1-  763     	.line	356, "main.c"; 	modeFlag = 1;
     0039 2101                      1-  764     	MOVIA	0x01
                                    1-  765     	BANKSEL	_modeFlag
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 00rr                      1-  766     	MOVAR	_modeFlag
     003C 3rrr                      1-  767     	LGOTO	_00302_DS_
     003D                           1-  768     _00301_DS_:
                                    1-  769     	.line	358, "main.c"; 	modeFlag = 0;
                                    1-  770     	BANKSEL	_modeFlag
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 02rr                      1-  771     	CLRR	_modeFlag
     003F                           1-  772     _00302_DS_:
                                    1-  773     	.line	360, "main.c"; 	if(keyRead(0x04&~PORTB))
     003F 07rr                      1-  774     	COMR	_PORTB,W
                                    1-  775     	BANKSEL	r0x1015
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 00rr                      1-  776     	MOVAR	r0x1015
     0042 2104                      1-  777     	MOVIA	0x04
     0043 10rr                      1-  778     	ANDAR	r0x1015,F
     0044 01rr                      1-  779     	MOVR	r0x1015,W
     0045 2rrr                      1-  780     	LCALL	_keyRead
                                    1-  781     	BANKSEL	r0x1015
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 00rr                      1-  782     	MOVAR	r0x1015
     0048 01rr                      1-  783     	MOVR	r0x1015,W
     0049 0D03                      1-  784     	BTRSC	STATUS,2
     004A 3rrr                      1-  785     	LGOTO	_00305_DS_
                                    1-  786     	.line	362, "main.c"; 	PORTB = 0xFF; 
     004B 21FF                      1-  787     	MOVIA	0xff
     004C 00rr                      1-  788     	MOVAR	_PORTB
                                    1-  789     	.line	363, "main.c"; 	PORTA = 0xFF;
     004D 00rr                      1-  790     	MOVAR	_PORTA
                                    1-  791     	.line	364, "main.c"; 	keyLockFlag = (keyLockFlag == 1 ?0:1);
                                    1-  792     	BANKSEL	_keyLockFlag
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1-  793     	MOVR	_keyLockFlag,W
     0050 2401                      1-  794     	XORIA	0x01
     0051 0903                      1-  795     	BTRSS	STATUS,2
     0052 3rrr                      1-  796     	LGOTO	_00307_DS_
                                    1-  797     	BANKSEL	r0x1015
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 02rr                      1-  798     	CLRR	r0x1015
     0055 3rrr                      1-  799     	LGOTO	_00308_DS_
     0056                           1-  800     _00307_DS_:
     0056 2101                      1-  801     	MOVIA	0x01
                                    1-  802     	BANKSEL	r0x1015
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1-  803     	MOVAR	r0x1015
     0059                           1-  804     _00308_DS_:
                                    1-  805     	BANKSEL	r0x1015
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 01rr                      1-  806     	MOVR	r0x1015,W
                                    1-  807     	BANKSEL	_keyLockFlag
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 00rr                      1-  808     	MOVAR	_keyLockFlag
                                    1-  809     	.line	365, "main.c"; 	lockLedFlag = 1;
     005D 2101                      1-  810     	MOVIA	0x01
                                    1-  811     	BANKSEL	_lockLedFlag
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 00rr                      1-  812     	MOVAR	_lockLedFlag
                                    1-  813     	.line	366, "main.c"; 	lockLedCount = 0;
                                    1-  814     	BANKSEL	_lockLedCount
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 02rr                      1-  815     	CLRR	_lockLedCount
                                    1-  816     	.line	367, "main.c"; 	countLed = 0;
                                    1-  817     	BANKSEL	_countLed
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 02rr                      1-  818     	CLRR	_countLed
     0064                           1-  819     _00305_DS_:
                                    1-  820     	.line	370, "main.c"; 	}
                                    1-  821     	RETURN	
     0064 0010                      3-   26 m1      ret
                                    1-  822     ; exit point of _keyCon
                                    1-  824     ;***
                                    1-  825     ;  pBlock Stats: dbName = C
                                    1-  826     ;***
                                    1-  827     ;has an exit
                                    1-  828     ;; Starting pCode block
                                    1-  829     .segment "code"; module=main, function=_ledMode3
     0000                           1-  831     _ledMode3:
                                    1-  832     ; 2 exit points
                                    1-  833     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1-  834     	.line	319, "main.c"; 	if(lockLedCount < 5)
     0000 2105                      1-  835     	MOVIA	0x05
                                    1-  836     	BANKSEL	_lockLedCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  837     	SUBAR	_lockLedCount,W
     0003 0C03                      1-  838     	BTRSC	STATUS,0
     0004 3rrr                      1-  839     	LGOTO	_00284_DS_
                                    1-  840     	.line	321, "main.c"; 	PORTA &= 0x10;
     0005 2110                      1-  841     	MOVIA	0x10
     0006 10rr                      1-  842     	ANDAR	_PORTA,F
                                    1-  843     	.line	322, "main.c"; 	PORTB &= 0x07;
     0007 2107                      1-  844     	MOVIA	0x07
     0008 10rr                      1-  845     	ANDAR	_PORTB,F
     0009 3rrr                      1-  846     	LGOTO	_00286_DS_
                                    1-  847     ;;unsigned compare: left < lit (0xA=10), size=1
     000A                           1-  848     _00284_DS_:
                                    1-  849     	.line	324, "main.c"; 	else if(lockLedCount < 10)
     000A 210A                      1-  850     	MOVIA	0x0a
                                    1-  851     	BANKSEL	_lockLedCount
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  852     	SUBAR	_lockLedCount,W
     000D 0C03                      1-  853     	BTRSC	STATUS,0
     000E 3rrr                      1-  854     	LGOTO	_00286_DS_
                                    1-  855     	.line	326, "main.c"; 	PORTA |= 0x0F;
     000F 210F                      1-  856     	MOVIA	0x0f
     0010 11rr                      1-  857     	IORAR	_PORTA,F
                                    1-  858     	.line	327, "main.c"; 	PORTB |= 0xF8;
     0011 21F8                      1-  859     	MOVIA	0xf8
     0012 11rr                      1-  860     	IORAR	_PORTB,F
     0013                           1-  861     _00286_DS_:
                                    1-  862     	.line	329, "main.c"; 	}
                                    1-  863     	RETURN	
     0013 0010                      3-   26 m1      ret
                                    1-  864     ; exit point of _ledMode3
                                    1-  866     ;***
                                    1-  867     ;  pBlock Stats: dbName = C
                                    1-  868     ;***
                                    1-  869     ;; Starting pCode block
                                    1-  870     .segment "code"; module=main, function=_ledMode2
     0000                           1-  872     _ledMode2:
                                    1-  873     ; 0 exit points
                                    1-  874     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  875     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1-  876     	.line	249, "main.c"; 	if(lockLedCount <= 5)
     0000 2106                      1-  877     	MOVIA	0x06
                                    1-  878     	BANKSEL	_lockLedCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  879     	SUBAR	_lockLedCount,W
     0003 0C03                      1-  880     	BTRSC	STATUS,0
     0004 3rrr                      1-  881     	LGOTO	_00274_DS_
                                    1-  882     	.line	250, "main.c"; 	resetbit(PORTA,3);
     0005 1Drr                      1-  883     	BCR	_PORTA,3
     0006 3rrr                      1-  884     	LGOTO	_00276_DS_
                                    1-  885     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  886     ;;unsigned compare: left >= lit (0xB=11), size=1
     0007                           1-  887     _00274_DS_:
                                    1-  888     	.line	251, "main.c"; 	else if(lockLedCount <= 10)
     0007 210B                      1-  889     	MOVIA	0x0b
                                    1-  890     	BANKSEL	_lockLedCount
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 04rr                      1-  891     	SUBAR	_lockLedCount,W
     000A 0C03                      1-  892     	BTRSC	STATUS,0
     000B 3rrr                      1-  893     	LGOTO	_00271_DS_
                                    1-  894     	.line	253, "main.c"; 	setbit(PORTA,3);
     000C 19rr                      1-  895     	BSR	_PORTA,3
                                    1-  896     	.line	254, "main.c"; 	resetbit(PORTA,2);
     000D 1Drr                      1-  897     	BCR	_PORTA,2
     000E 3rrr                      1-  898     	LGOTO	_00276_DS_
                                    1-  899     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  900     ;;unsigned compare: left >= lit (0x10=16), size=1
     000F                           1-  901     _00271_DS_:
                                    1-  902     	.line	256, "main.c"; 	else if(lockLedCount <= 15)
     000F 2110                      1-  903     	MOVIA	0x10
                                    1-  904     	BANKSEL	_lockLedCount
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  905     	SUBAR	_lockLedCount,W
     0012 0C03                      1-  906     	BTRSC	STATUS,0
     0013 3rrr                      1-  907     	LGOTO	_00268_DS_
                                    1-  908     	.line	258, "main.c"; 	setbit(PORTA,2);
     0014 19rr                      1-  909     	BSR	_PORTA,2
                                    1-  910     	.line	259, "main.c"; 	resetbit(PORTA,1);
     0015 1Crr                      1-  911     	BCR	_PORTA,1
     0016 3rrr                      1-  912     	LGOTO	_00276_DS_
                                    1-  913     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  914     ;;unsigned compare: left >= lit (0x15=21), size=1
     0017                           1-  915     _00268_DS_:
                                    1-  916     	.line	261, "main.c"; 	else if(lockLedCount <= 20)
     0017 2115                      1-  917     	MOVIA	0x15
                                    1-  918     	BANKSEL	_lockLedCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1-  919     	SUBAR	_lockLedCount,W
     001A 0C03                      1-  920     	BTRSC	STATUS,0
     001B 3rrr                      1-  921     	LGOTO	_00265_DS_
                                    1-  922     	.line	263, "main.c"; 	setbit(PORTA,1);
     001C 18rr                      1-  923     	BSR	_PORTA,1
                                    1-  924     	.line	264, "main.c"; 	resetbit(PORTA,0);
     001D 1Crr                      1-  925     	BCR	_PORTA,0
     001E 3rrr                      1-  926     	LGOTO	_00276_DS_
                                    1-  927     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  928     ;;unsigned compare: left >= lit (0x1A=26), size=1
     001F                           1-  929     _00265_DS_:
                                    1-  930     	.line	266, "main.c"; 	else if(lockLedCount <= 25)
     001F 211A                      1-  931     	MOVIA	0x1a
                                    1-  932     	BANKSEL	_lockLedCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1-  933     	SUBAR	_lockLedCount,W
     0022 0C03                      1-  934     	BTRSC	STATUS,0
     0023 3rrr                      1-  935     	LGOTO	_00262_DS_
                                    1-  936     	.line	268, "main.c"; 	setbit(PORTA,0);
     0024 18rr                      1-  937     	BSR	_PORTA,0
                                    1-  938     	.line	269, "main.c"; 	resetbit(PORTB,7);
     0025 1Frr                      1-  939     	BCR	_PORTB,7
     0026 3rrr                      1-  940     	LGOTO	_00276_DS_
                                    1-  941     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  942     ;;unsigned compare: left >= lit (0x1F=31), size=1
     0027                           1-  943     _00262_DS_:
                                    1-  944     	.line	271, "main.c"; 	else if(lockLedCount <= 30)
     0027 211F                      1-  945     	MOVIA	0x1f
                                    1-  946     	BANKSEL	_lockLedCount
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 04rr                      1-  947     	SUBAR	_lockLedCount,W
     002A 0C03                      1-  948     	BTRSC	STATUS,0
     002B 3rrr                      1-  949     	LGOTO	_00259_DS_
                                    1-  950     	.line	273, "main.c"; 	setbit(PORTB,7);
     002C 1Brr                      1-  951     	BSR	_PORTB,7
                                    1-  952     	.line	274, "main.c"; 	resetbit(PORTB,6);
     002D 1Frr                      1-  953     	BCR	_PORTB,6
     002E 3rrr                      1-  954     	LGOTO	_00276_DS_
                                    1-  955     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  956     ;;unsigned compare: left >= lit (0x24=36), size=1
     002F                           1-  957     _00259_DS_:
                                    1-  958     	.line	276, "main.c"; 	else if(lockLedCount <= 35)
     002F 2124                      1-  959     	MOVIA	0x24
                                    1-  960     	BANKSEL	_lockLedCount
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 04rr                      1-  961     	SUBAR	_lockLedCount,W
     0032 0C03                      1-  962     	BTRSC	STATUS,0
     0033 3rrr                      1-  963     	LGOTO	_00256_DS_
                                    1-  964     	.line	278, "main.c"; 	setbit(PORTB,6);
     0034 1Brr                      1-  965     	BSR	_PORTB,6
     0035 3rrr                      1-  966     	LGOTO	_00276_DS_
                                    1-  967     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  968     ;;unsigned compare: left >= lit (0x29=41), size=1
     0036                           1-  969     _00256_DS_:
                                    1-  970     	.line	280, "main.c"; 	else if(lockLedCount <= 40)
     0036 2129                      1-  971     	MOVIA	0x29
                                    1-  972     	BANKSEL	_lockLedCount
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 04rr                      1-  973     	SUBAR	_lockLedCount,W
     0039 0C03                      1-  974     	BTRSC	STATUS,0
     003A 3rrr                      1-  975     	LGOTO	_00253_DS_
                                    1-  976     	.line	282, "main.c"; 	setbit(PORTB,7);
     003B 1Brr                      1-  977     	BSR	_PORTB,7
                                    1-  978     	.line	283, "main.c"; 	resetbit(PORTB,6);
     003C 1Frr                      1-  979     	BCR	_PORTB,6
     003D 3rrr                      1-  980     	LGOTO	_00276_DS_
                                    1-  981     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  982     ;;unsigned compare: left >= lit (0x2E=46), size=1
     003E                           1-  983     _00253_DS_:
                                    1-  984     	.line	285, "main.c"; 	else if(lockLedCount <= 45)
     003E 212E                      1-  985     	MOVIA	0x2e
                                    1-  986     	BANKSEL	_lockLedCount
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 04rr                      1-  987     	SUBAR	_lockLedCount,W
     0041 0C03                      1-  988     	BTRSC	STATUS,0
     0042 3rrr                      1-  989     	LGOTO	_00250_DS_
                                    1-  990     	.line	287, "main.c"; 	setbit(PORTB,6);
     0043 1Brr                      1-  991     	BSR	_PORTB,6
                                    1-  992     	.line	288, "main.c"; 	resetbit(PORTB,7);
     0044 1Frr                      1-  993     	BCR	_PORTB,7
     0045 3rrr                      1-  994     	LGOTO	_00276_DS_
                                    1-  995     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  996     ;;unsigned compare: left >= lit (0x33=51), size=1
     0046                           1-  997     _00250_DS_:
                                    1-  998     	.line	290, "main.c"; 	else if(lockLedCount <= 50)
     0046 2133                      1-  999     	MOVIA	0x33
                                    1- 1000     	BANKSEL	_lockLedCount
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 04rr                      1- 1001     	SUBAR	_lockLedCount,W
     0049 0C03                      1- 1002     	BTRSC	STATUS,0
     004A 3rrr                      1- 1003     	LGOTO	_00247_DS_
                                    1- 1004     	.line	292, "main.c"; 	setbit(PORTB,7);
     004B 1Brr                      1- 1005     	BSR	_PORTB,7
                                    1- 1006     	.line	293, "main.c"; 	resetbit(PORTA,0);
     004C 1Crr                      1- 1007     	BCR	_PORTA,0
     004D 3rrr                      1- 1008     	LGOTO	_00276_DS_
                                    1- 1009     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1010     ;;unsigned compare: left >= lit (0x38=56), size=1
     004E                           1- 1011     _00247_DS_:
                                    1- 1012     	.line	295, "main.c"; 	else if(lockLedCount <= 55)
     004E 2138                      1- 1013     	MOVIA	0x38
                                    1- 1014     	BANKSEL	_lockLedCount
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 04rr                      1- 1015     	SUBAR	_lockLedCount,W
     0051 0C03                      1- 1016     	BTRSC	STATUS,0
     0052 3rrr                      1- 1017     	LGOTO	_00244_DS_
                                    1- 1018     	.line	297, "main.c"; 	setbit(PORTA,0);
     0053 18rr                      1- 1019     	BSR	_PORTA,0
                                    1- 1020     	.line	298, "main.c"; 	resetbit(PORTA,1);
     0054 1Crr                      1- 1021     	BCR	_PORTA,1
     0055 3rrr                      1- 1022     	LGOTO	_00276_DS_
                                    1- 1023     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1024     ;;unsigned compare: left >= lit (0x3D=61), size=1
     0056                           1- 1025     _00244_DS_:
                                    1- 1026     	.line	300, "main.c"; 	else if(lockLedCount <= 60)
     0056 213D                      1- 1027     	MOVIA	0x3d
                                    1- 1028     	BANKSEL	_lockLedCount
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 04rr                      1- 1029     	SUBAR	_lockLedCount,W
     0059 0C03                      1- 1030     	BTRSC	STATUS,0
     005A 3rrr                      1- 1031     	LGOTO	_00241_DS_
                                    1- 1032     	.line	302, "main.c"; 	setbit(PORTA,1);
     005B 18rr                      1- 1033     	BSR	_PORTA,1
                                    1- 1034     	.line	303, "main.c"; 	resetbit(PORTA,2);
     005C 1Drr                      1- 1035     	BCR	_PORTA,2
     005D 3rrr                      1- 1036     	LGOTO	_00276_DS_
                                    1- 1037     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1038     ;;unsigned compare: left >= lit (0x42=66), size=1
     005E                           1- 1039     _00241_DS_:
                                    1- 1040     	.line	305, "main.c"; 	else if(lockLedCount <= 65)
     005E 2142                      1- 1041     	MOVIA	0x42
                                    1- 1042     	BANKSEL	_lockLedCount
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 04rr                      1- 1043     	SUBAR	_lockLedCount,W
     0061 0C03                      1- 1044     	BTRSC	STATUS,0
     0062 3rrr                      1- 1045     	LGOTO	_00238_DS_
                                    1- 1046     	.line	307, "main.c"; 	setbit(PORTA,2);
     0063 19rr                      1- 1047     	BSR	_PORTA,2
                                    1- 1048     	.line	308, "main.c"; 	resetbit(PORTA,3);
     0064 1Drr                      1- 1049     	BCR	_PORTA,3
     0065 3rrr                      1- 1050     	LGOTO	_00276_DS_
                                    1- 1051     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1052     ;;unsigned compare: left >= lit (0x47=71), size=1
     0066                           1- 1053     _00238_DS_:
                                    1- 1054     	.line	310, "main.c"; 	else if(lockLedCount <= 70)
     0066 2147                      1- 1055     	MOVIA	0x47
                                    1- 1056     	BANKSEL	_lockLedCount
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 04rr                      1- 1057     	SUBAR	_lockLedCount,W
     0069 0803                      1- 1058     	BTRSS	STATUS,0
                                    1- 1059     	.line	312, "main.c"; 	setbit(PORTA,3);
     006A 19rr                      1- 1060     	BSR	_PORTA,3
     006B                           1- 1061     _00276_DS_:
                                    1- 1062     	.line	315, "main.c"; 	}
                                    1- 1063     	RETURN	
     006B 0010                      3-   26 m1      ret
                                    1- 1065     ;***
                                    1- 1066     ;  pBlock Stats: dbName = C
                                    1- 1067     ;***
                                    1- 1068     ;; Starting pCode block
                                    1- 1069     .segment "code"; module=main, function=_ledMode1
     0000                           1- 1071     _ledMode1:
                                    1- 1072     ; 0 exit points
                                    1- 1073     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 1074     	.line	212, "main.c"; 	if(lockLedCount < 5)
     0000 2105                      1- 1075     	MOVIA	0x05
                                    1- 1076     	BANKSEL	_lockLedCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1077     	SUBAR	_lockLedCount,W
     0003 0C03                      1- 1078     	BTRSC	STATUS,0
     0004 3rrr                      1- 1079     	LGOTO	_00228_DS_
                                    1- 1080     	.line	213, "main.c"; 	resetbit(PORTA,3);
     0005 1Drr                      1- 1081     	BCR	_PORTA,3
     0006 3rrr                      1- 1082     	LGOTO	_00230_DS_
                                    1- 1083     ;;unsigned compare: left < lit (0xA=10), size=1
     0007                           1- 1084     _00228_DS_:
                                    1- 1085     	.line	214, "main.c"; 	else if(lockLedCount < 10)
     0007 210A                      1- 1086     	MOVIA	0x0a
                                    1- 1087     	BANKSEL	_lockLedCount
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 04rr                      1- 1088     	SUBAR	_lockLedCount,W
     000A 0C03                      1- 1089     	BTRSC	STATUS,0
     000B 3rrr                      1- 1090     	LGOTO	_00225_DS_
                                    1- 1091     	.line	216, "main.c"; 	setbit(PORTA,3);
     000C 19rr                      1- 1092     	BSR	_PORTA,3
                                    1- 1093     	.line	217, "main.c"; 	resetbit(PORTA,2);
     000D 1Drr                      1- 1094     	BCR	_PORTA,2
     000E 3rrr                      1- 1095     	LGOTO	_00230_DS_
                                    1- 1096     ;;unsigned compare: left < lit (0xF=15), size=1
     000F                           1- 1097     _00225_DS_:
                                    1- 1098     	.line	219, "main.c"; 	else if(lockLedCount < 15)
     000F 210F                      1- 1099     	MOVIA	0x0f
                                    1- 1100     	BANKSEL	_lockLedCount
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1101     	SUBAR	_lockLedCount,W
     0012 0C03                      1- 1102     	BTRSC	STATUS,0
     0013 3rrr                      1- 1103     	LGOTO	_00222_DS_
                                    1- 1104     	.line	221, "main.c"; 	setbit(PORTA,2);
     0014 19rr                      1- 1105     	BSR	_PORTA,2
                                    1- 1106     	.line	222, "main.c"; 	resetbit(PORTA,1);
     0015 1Crr                      1- 1107     	BCR	_PORTA,1
     0016 3rrr                      1- 1108     	LGOTO	_00230_DS_
                                    1- 1109     ;;unsigned compare: left < lit (0x14=20), size=1
     0017                           1- 1110     _00222_DS_:
                                    1- 1111     	.line	224, "main.c"; 	else if(lockLedCount < 20)
     0017 2114                      1- 1112     	MOVIA	0x14
                                    1- 1113     	BANKSEL	_lockLedCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1- 1114     	SUBAR	_lockLedCount,W
     001A 0C03                      1- 1115     	BTRSC	STATUS,0
     001B 3rrr                      1- 1116     	LGOTO	_00219_DS_
                                    1- 1117     	.line	226, "main.c"; 	setbit(PORTA,1);
     001C 18rr                      1- 1118     	BSR	_PORTA,1
                                    1- 1119     	.line	227, "main.c"; 	resetbit(PORTA,0);
     001D 1Crr                      1- 1120     	BCR	_PORTA,0
     001E 3rrr                      1- 1121     	LGOTO	_00230_DS_
                                    1- 1122     ;;unsigned compare: left < lit (0x19=25), size=1
     001F                           1- 1123     _00219_DS_:
                                    1- 1124     	.line	229, "main.c"; 	else if(lockLedCount < 25)
     001F 2119                      1- 1125     	MOVIA	0x19
                                    1- 1126     	BANKSEL	_lockLedCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1- 1127     	SUBAR	_lockLedCount,W
     0022 0C03                      1- 1128     	BTRSC	STATUS,0
     0023 3rrr                      1- 1129     	LGOTO	_00216_DS_
                                    1- 1130     	.line	231, "main.c"; 	setbit(PORTA,0);
     0024 18rr                      1- 1131     	BSR	_PORTA,0
                                    1- 1132     	.line	232, "main.c"; 	resetbit(PORTB,7);
     0025 1Frr                      1- 1133     	BCR	_PORTB,7
     0026 3rrr                      1- 1134     	LGOTO	_00230_DS_
                                    1- 1135     ;;unsigned compare: left < lit (0x1E=30), size=1
     0027                           1- 1136     _00216_DS_:
                                    1- 1137     	.line	234, "main.c"; 	else if(lockLedCount < 30)
     0027 211E                      1- 1138     	MOVIA	0x1e
                                    1- 1139     	BANKSEL	_lockLedCount
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 04rr                      1- 1140     	SUBAR	_lockLedCount,W
     002A 0C03                      1- 1141     	BTRSC	STATUS,0
     002B 3rrr                      1- 1142     	LGOTO	_00213_DS_
                                    1- 1143     	.line	236, "main.c"; 	setbit(PORTB,7);
     002C 1Brr                      1- 1144     	BSR	_PORTB,7
                                    1- 1145     	.line	237, "main.c"; 	resetbit(PORTB,6);
     002D 1Frr                      1- 1146     	BCR	_PORTB,6
     002E 3rrr                      1- 1147     	LGOTO	_00230_DS_
                                    1- 1148     ;;unsigned compare: left < lit (0x23=35), size=1
     002F                           1- 1149     _00213_DS_:
                                    1- 1150     	.line	239, "main.c"; 	else if(lockLedCount < 35)
     002F 2123                      1- 1151     	MOVIA	0x23
                                    1- 1152     	BANKSEL	_lockLedCount
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 04rr                      1- 1153     	SUBAR	_lockLedCount,W
     0032 0803                      1- 1154     	BTRSS	STATUS,0
                                    1- 1155     	.line	241, "main.c"; 	setbit(PORTB,6);
     0033 1Brr                      1- 1156     	BSR	_PORTB,6
     0034                           1- 1157     _00230_DS_:
                                    1- 1158     	.line	244, "main.c"; 	}
                                    1- 1159     	RETURN	
     0034 0010                      3-   26 m1      ret
                                    1- 1161     ;***
                                    1- 1162     ;  pBlock Stats: dbName = C
                                    1- 1163     ;***
                                    1- 1164     ;has an exit
                                    1- 1165     ;functions called:
                                    1- 1166     ;   _ledMode1
                                    1- 1167     ;   _ledMode2
                                    1- 1168     ;   _ledMode2
                                    1- 1169     ;   __moduchar
                                    1- 1170     ;   _ledMode1
                                    1- 1171     ;   _ledMode2
                                    1- 1172     ;   _ledMode2
                                    1- 1173     ;   __moduchar
                                    1- 1174     ;2 compiler assigned registers:
                                    1- 1175     ;   STK00
                                    1- 1176     ;   r0x1017
                                    1- 1177     ;; Starting pCode block
                                    1- 1178     .segment "code"; module=main, function=_ledCon
     0000                           1- 1180     _ledCon:
                                    1- 1181     ; 2 exit points
                                    1- 1182     	.line	99, "main.c"; 	if(!modeFlag)
                                    1- 1183     	BANKSEL	_modeFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1184     	MOVR	_modeFlag,W
     0002 0903                      1- 1185     	BTRSS	STATUS,2
     0003 3rrr                      1- 1186     	LGOTO	_00203_DS_
                                    1- 1187     	.line	102, "main.c"; 	if(lockLedFlag)
                                    1- 1188     	BANKSEL	_lockLedFlag
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1189     	MOVR	_lockLedFlag,W
     0006 0D03                      1- 1190     	BTRSC	STATUS,2
     0007 3rrr                      1- 1191     	LGOTO	_00172_DS_
                                    1- 1192     	.line	105, "main.c"; 	ledMode1();
     0008 2rrr                      1- 1193     	LCALL	_ledMode1
                                    1- 1194     	.line	106, "main.c"; 	if(++lockLedCount >= 35)
                                    1- 1195     	BANKSEL	_lockLedCount
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 05rr                      1- 1196     	INCR	_lockLedCount,F
                                    1- 1197     ;;unsigned compare: left < lit (0x23=35), size=1
     000B 2123                      1- 1198     	MOVIA	0x23
     000C 04rr                      1- 1199     	SUBAR	_lockLedCount,W
     000D 0803                      1- 1200     	BTRSS	STATUS,0
     000E 3rrr                      1- 1201     	LGOTO	_00205_DS_
                                    1- 1202     	.line	108, "main.c"; 	lockLedCount = 0;
     000F 02rr                      1- 1203     	CLRR	_lockLedCount
                                    1- 1204     	.line	109, "main.c"; 	if(keyLockFlag)
                                    1- 1205     	BANKSEL	_keyLockFlag
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1206     	MOVR	_keyLockFlag,W
     0012 0D03                      1- 1207     	BTRSC	STATUS,2
     0013 3rrr                      1- 1208     	LGOTO	_00161_DS_
                                    1- 1209     	.line	111, "main.c"; 	if(++countLed >= 3)
                                    1- 1210     	BANKSEL	_countLed
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1- 1211     	INCR	_countLed,F
                                    1- 1212     ;;unsigned compare: left < lit (0x3=3), size=1
     0016 2103                      1- 1213     	MOVIA	0x03
     0017 04rr                      1- 1214     	SUBAR	_countLed,W
     0018 0803                      1- 1215     	BTRSS	STATUS,0
     0019 3rrr                      1- 1216     	LGOTO	_00205_DS_
                                    1- 1217     	.line	112, "main.c"; 	lockLedFlag = 0;//停止开关闪灯
                                    1- 1218     	BANKSEL	_lockLedFlag
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 02rr                      1- 1219     	CLRR	_lockLedFlag
     001C 3rrr                      1- 1220     	LGOTO	_00205_DS_
     001D                           1- 1221     _00161_DS_:
                                    1- 1222     	.line	115, "main.c"; 	lockLedFlag = 0;//停止开关闪灯
                                    1- 1223     	BANKSEL	_lockLedFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 02rr                      1- 1224     	CLRR	_lockLedFlag
     001F 3rrr                      1- 1225     	LGOTO	_00205_DS_
     0020                           1- 1226     _00172_DS_:
                                    1- 1227     	.line	118, "main.c"; 	else if(ledFlag)
                                    1- 1228     	BANKSEL	_ledFlag
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1229     	MOVR	_ledFlag,W
     0022 0D03                      1- 1230     	BTRSC	STATUS,2
     0023 3rrr                      1- 1231     	LGOTO	_00205_DS_
                                    1- 1232     	.line	120, "main.c"; 	if(!keyLockFlag)
                                    1- 1233     	BANKSEL	_keyLockFlag
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1234     	MOVR	_keyLockFlag,W
     0026 0903                      1- 1235     	BTRSS	STATUS,2
     0027 3rrr                      1- 1236     	LGOTO	_00166_DS_
                                    1- 1237     	.line	122, "main.c"; 	ledFlag = 0;
                                    1- 1238     	BANKSEL	_ledFlag
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 1239     	CLRR	_ledFlag
                                    1- 1240     	.line	123, "main.c"; 	lockLedCount = 0;
                                    1- 1241     	BANKSEL	_lockLedCount
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 02rr                      1- 1242     	CLRR	_lockLedCount
                                    1- 1243     	.line	124, "main.c"; 	return;
     002C 3rrr                      1- 1244     	LGOTO	_00205_DS_
     002D                           1- 1245     _00166_DS_:
                                    1- 1246     	.line	127, "main.c"; 	ledMode2();
     002D 2rrr                      1- 1247     	LCALL	_ledMode2
                                    1- 1248     	.line	128, "main.c"; 	if(++lockLedCount >= 70)
                                    1- 1249     	BANKSEL	_lockLedCount
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1250     	INCR	_lockLedCount,F
                                    1- 1251     ;;unsigned compare: left < lit (0x46=70), size=1
     0030 2146                      1- 1252     	MOVIA	0x46
     0031 04rr                      1- 1253     	SUBAR	_lockLedCount,W
     0032 0803                      1- 1254     	BTRSS	STATUS,0
     0033 3rrr                      1- 1255     	LGOTO	_00205_DS_
                                    1- 1256     	.line	130, "main.c"; 	PORTA |= 0x0F;
     0034 210F                      1- 1257     	MOVIA	0x0f
     0035 11rr                      1- 1258     	IORAR	_PORTA,F
                                    1- 1259     	.line	131, "main.c"; 	PORTB |= 0xF8;
     0036 21F8                      1- 1260     	MOVIA	0xf8
     0037 11rr                      1- 1261     	IORAR	_PORTB,F
                                    1- 1262     	.line	132, "main.c"; 	lockLedCount = 0;
     0038 02rr                      1- 1263     	CLRR	_lockLedCount
                                    1- 1264     	.line	133, "main.c"; 	ledFlag = 0;
                                    1- 1265     	BANKSEL	_ledFlag
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1- 1266     	CLRR	_ledFlag
     003B 3rrr                      1- 1267     	LGOTO	_00205_DS_
     003C                           1- 1268     _00203_DS_:
                                    1- 1269     	.line	141, "main.c"; 	if(lockLedFlag)
                                    1- 1270     	BANKSEL	_lockLedFlag
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 1271     	MOVR	_lockLedFlag,W
     003E 0D03                      1- 1272     	BTRSC	STATUS,2
     003F 3rrr                      1- 1273     	LGOTO	_00200_DS_
                                    1- 1274     ;;unsigned compare: left < lit (0x3=3), size=1
                                    1- 1275     	.line	144, "main.c"; 	if(lockLedCount < 3)
     0040 2103                      1- 1276     	MOVIA	0x03
                                    1- 1277     	BANKSEL	_lockLedCount
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 04rr                      1- 1278     	SUBAR	_lockLedCount,W
     0043 0C03                      1- 1279     	BTRSC	STATUS,0
     0044 3rrr                      1- 1280     	LGOTO	_00177_DS_
                                    1- 1281     	.line	146, "main.c"; 	PORTA &= 0x10;
     0045 2110                      1- 1282     	MOVIA	0x10
     0046 10rr                      1- 1283     	ANDAR	_PORTA,F
                                    1- 1284     	.line	147, "main.c"; 	PORTB &= 0x07;
     0047 2107                      1- 1285     	MOVIA	0x07
     0048 10rr                      1- 1286     	ANDAR	_PORTB,F
     0049 3rrr                      1- 1287     	LGOTO	_00178_DS_
                                    1- 1288     ;;unsigned compare: left < lit (0x21=33), size=1
     004A                           1- 1289     _00177_DS_:
                                    1- 1290     	.line	149, "main.c"; 	else if(lockLedCount < 33)
     004A 2121                      1- 1291     	MOVIA	0x21
                                    1- 1292     	BANKSEL	_lockLedCount
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 04rr                      1- 1293     	SUBAR	_lockLedCount,W
     004D 0C03                      1- 1294     	BTRSC	STATUS,0
     004E 3rrr                      1- 1295     	LGOTO	_00178_DS_
                                    1- 1296     	.line	151, "main.c"; 	PORTA |= 0x0F;
     004F 210F                      1- 1297     	MOVIA	0x0f
     0050 11rr                      1- 1298     	IORAR	_PORTA,F
                                    1- 1299     	.line	152, "main.c"; 	PORTB |= 0xF8;
     0051 21F8                      1- 1300     	MOVIA	0xf8
     0052 11rr                      1- 1301     	IORAR	_PORTB,F
     0053                           1- 1302     _00178_DS_:
                                    1- 1303     	.line	155, "main.c"; 	if(++lockLedCount >= 33)
                                    1- 1304     	BANKSEL	_lockLedCount
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 05rr                      1- 1305     	INCR	_lockLedCount,F
                                    1- 1306     ;;unsigned compare: left < lit (0x21=33), size=1
     0055 2121                      1- 1307     	MOVIA	0x21
     0056 04rr                      1- 1308     	SUBAR	_lockLedCount,W
     0057 0803                      1- 1309     	BTRSS	STATUS,0
     0058 3rrr                      1- 1310     	LGOTO	_00205_DS_
                                    1- 1311     	.line	157, "main.c"; 	lockLedCount = 0;
     0059 02rr                      1- 1312     	CLRR	_lockLedCount
                                    1- 1313     	.line	158, "main.c"; 	if(keyLockFlag)
                                    1- 1314     	BANKSEL	_keyLockFlag
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 01rr                      1- 1315     	MOVR	_keyLockFlag,W
     005C 0D03                      1- 1316     	BTRSC	STATUS,2
     005D 3rrr                      1- 1317     	LGOTO	_00182_DS_
                                    1- 1318     	.line	160, "main.c"; 	if(++countLed >= 3)
                                    1- 1319     	BANKSEL	_countLed
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 05rr                      1- 1320     	INCR	_countLed,F
                                    1- 1321     ;;unsigned compare: left < lit (0x3=3), size=1
     0060 2103                      1- 1322     	MOVIA	0x03
     0061 04rr                      1- 1323     	SUBAR	_countLed,W
     0062 0803                      1- 1324     	BTRSS	STATUS,0
     0063 3rrr                      1- 1325     	LGOTO	_00205_DS_
                                    1- 1326     	.line	161, "main.c"; 	lockLedFlag = 0;//停止开关闪灯
                                    1- 1327     	BANKSEL	_lockLedFlag
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 02rr                      1- 1328     	CLRR	_lockLedFlag
     0066 3rrr                      1- 1329     	LGOTO	_00205_DS_
     0067                           1- 1330     _00182_DS_:
                                    1- 1331     	.line	164, "main.c"; 	lockLedFlag = 0;//停止开关闪灯
                                    1- 1332     	BANKSEL	_lockLedFlag
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 02rr                      1- 1333     	CLRR	_lockLedFlag
     0069 3rrr                      1- 1334     	LGOTO	_00205_DS_
     006A                           1- 1335     _00200_DS_:
                                    1- 1336     	.line	167, "main.c"; 	else if(ledFlag)
                                    1- 1337     	BANKSEL	_ledFlag
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 01rr                      1- 1338     	MOVR	_ledFlag,W
     006C 0D03                      1- 1339     	BTRSC	STATUS,2
     006D 3rrr                      1- 1340     	LGOTO	_00205_DS_
                                    1- 1341     	.line	169, "main.c"; 	if(!keyLockFlag)
                                    1- 1342     	BANKSEL	_keyLockFlag
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 01rr                      1- 1343     	MOVR	_keyLockFlag,W
     0070 0903                      1- 1344     	BTRSS	STATUS,2
     0071 3rrr                      1- 1345     	LGOTO	_00187_DS_
                                    1- 1346     	.line	171, "main.c"; 	ledFlag = 0;
                                    1- 1347     	BANKSEL	_ledFlag
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 02rr                      1- 1348     	CLRR	_ledFlag
                                    1- 1349     	.line	172, "main.c"; 	lockLedCount = 0;
                                    1- 1350     	BANKSEL	_lockLedCount
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 02rr                      1- 1351     	CLRR	_lockLedCount
                                    1- 1352     	.line	173, "main.c"; 	return;
     0076 3rrr                      1- 1353     	LGOTO	_00205_DS_
     0077                           1- 1354     _00187_DS_:
                                    1- 1355     	.line	176, "main.c"; 	ledMode2();
     0077 2rrr                      1- 1356     	LCALL	_ledMode2
                                    1- 1357     ;;unsigned compare: left < lit (0x46=70), size=1
                                    1- 1358     	.line	177, "main.c"; 	if(lockLedCount >= 70)
     0078 2146                      1- 1359     	MOVIA	0x46
                                    1- 1360     	BANKSEL	_lockLedCount
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 04rr                      1- 1361     	SUBAR	_lockLedCount,W
     007B 0803                      1- 1362     	BTRSS	STATUS,0
     007C 3rrr                      1- 1363     	LGOTO	_00194_DS_
                                    1- 1364     	.line	179, "main.c"; 	if(lockLedCount % 5 == 0)
     007D 2105                      1- 1365     	MOVIA	0x05
     007E 00rr                      1- 1366     	MOVAR	STK00
     007F 01rr                      1- 1367     	MOVR	_lockLedCount,W
     0080 2rrr                      1- 1368     	LCALL	__moduchar
                                    1- 1369     	BANKSEL	r0x1017
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 00rr                      1- 1370     	MOVAR	r0x1017
     0083 01rr                      1- 1371     	MOVR	r0x1017,W
     0084 0903                      1- 1372     	BTRSS	STATUS,2
     0085 3rrr                      1- 1373     	LGOTO	_00194_DS_
                                    1- 1374     	.line	181, "main.c"; 	if(countLed == 0)
                                    1- 1375     	BANKSEL	_countLed
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 01rr                      1- 1376     	MOVR	_countLed,W
     0088 0903                      1- 1377     	BTRSS	STATUS,2
     0089 3rrr                      1- 1378     	LGOTO	_00189_DS_
                                    1- 1379     	.line	183, "main.c"; 	PORTA &= 0x10;
     008A 2110                      1- 1380     	MOVIA	0x10
     008B 10rr                      1- 1381     	ANDAR	_PORTA,F
                                    1- 1382     	.line	184, "main.c"; 	PORTB &= 0x07;
     008C 2107                      1- 1383     	MOVIA	0x07
     008D 10rr                      1- 1384     	ANDAR	_PORTB,F
                                    1- 1385     	.line	185, "main.c"; 	countLed = 1;
     008E 2101                      1- 1386     	MOVIA	0x01
     008F 00rr                      1- 1387     	MOVAR	_countLed
     0090 3rrr                      1- 1388     	LGOTO	_00194_DS_
     0091                           1- 1389     _00189_DS_:
                                    1- 1390     	.line	189, "main.c"; 	PORTA |= 0x0F;
     0091 210F                      1- 1391     	MOVIA	0x0f
     0092 11rr                      1- 1392     	IORAR	_PORTA,F
                                    1- 1393     	.line	190, "main.c"; 	PORTB |= 0xF8;
     0093 21F8                      1- 1394     	MOVIA	0xf8
     0094 11rr                      1- 1395     	IORAR	_PORTB,F
                                    1- 1396     	.line	191, "main.c"; 	countLed = 0;
                                    1- 1397     	BANKSEL	_countLed
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 02rr                      1- 1398     	CLRR	_countLed
     0097                           1- 1399     _00194_DS_:
                                    1- 1400     	.line	195, "main.c"; 	if(++lockLedCount >= 170)
                                    1- 1401     	BANKSEL	_lockLedCount
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 05rr                      1- 1402     	INCR	_lockLedCount,F
                                    1- 1403     ;;unsigned compare: left < lit (0xAA=170), size=1
     0099 21AA                      1- 1404     	MOVIA	0xaa
     009A 04rr                      1- 1405     	SUBAR	_lockLedCount,W
     009B 0803                      1- 1406     	BTRSS	STATUS,0
     009C 3rrr                      1- 1407     	LGOTO	_00205_DS_
                                    1- 1408     	.line	197, "main.c"; 	PORTA |= 0x0F;
     009D 210F                      1- 1409     	MOVIA	0x0f
     009E 11rr                      1- 1410     	IORAR	_PORTA,F
                                    1- 1411     	.line	198, "main.c"; 	PORTB |= 0xF8;
     009F 21F8                      1- 1412     	MOVIA	0xf8
     00A0 11rr                      1- 1413     	IORAR	_PORTB,F
                                    1- 1414     	.line	199, "main.c"; 	countLed = 0;
                                    1- 1415     	BANKSEL	_countLed
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 02rr                      1- 1416     	CLRR	_countLed
                                    1- 1417     	.line	200, "main.c"; 	lockLedCount = 0;
                                    1- 1418     	BANKSEL	_lockLedCount
     00A3 rrrr                      3-   71 m1      .banksel ram_address
     00A4 02rr                      1- 1419     	CLRR	_lockLedCount
                                    1- 1420     	.line	201, "main.c"; 	ledFlag = 0;
                                    1- 1421     	BANKSEL	_ledFlag
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 02rr                      1- 1422     	CLRR	_ledFlag
     00A7                           1- 1423     _00205_DS_:
                                    1- 1424     	.line	207, "main.c"; 	}
                                    1- 1425     	RETURN	
     00A7 0010                      3-   26 m1      ret
                                    1- 1426     ; exit point of _ledCon
                                    1- 1429     ;	code size estimation:
                                    1- 1430     ;	  565+  117 =   682 instructions ( 1598 byte)
                                    1- 1432     	end
                                    1- 1432     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__moduchar              Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800533
__sdcc_interrupt        Label    00000000
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00116_DS_              Label    00000014
_00121_DS_              Label    0000002C
_00122_DS_              Label    0000003B
_00128_DS_              Label    00000001
_00153_DS_              Label    00000036
_00161_DS_              Label    0000001D
_00166_DS_              Label    0000002D
_00172_DS_              Label    00000020
_00177_DS_              Label    0000004A
_00178_DS_              Label    00000053
_00182_DS_              Label    00000067
_00187_DS_              Label    00000077
_00189_DS_              Label    00000091
_00194_DS_              Label    00000097
_00200_DS_              Label    0000006A
_00203_DS_              Label    0000003C
_00205_DS_              Label    000000A7
_00213_DS_              Label    0000002F
_00216_DS_              Label    00000027
_00219_DS_              Label    0000001F
_00222_DS_              Label    00000017
_00225_DS_              Label    0000000F
_00228_DS_              Label    00000007
_00230_DS_              Label    00000034
_00238_DS_              Label    00000066
_00241_DS_              Label    0000005E
_00244_DS_              Label    00000056
_00247_DS_              Label    0000004E
_00250_DS_              Label    00000046
_00253_DS_              Label    0000003E
_00256_DS_              Label    00000036
_00259_DS_              Label    0000002F
_00262_DS_              Label    00000027
_00265_DS_              Label    0000001F
_00268_DS_              Label    00000017
_00271_DS_              Label    0000000F
_00274_DS_              Label    00000007
_00276_DS_              Label    0000006B
_00284_DS_              Label    0000000A
_00286_DS_              Label    00000013
_00292_DS_              Label    0000000E
_00298_DS_              Label    00000014
_00299_DS_              Label    0000002B
_00301_DS_              Label    0000003D
_00302_DS_              Label    0000003F
_00305_DS_              Label    00000064
_00307_DS_              Label    00000056
_00308_DS_              Label    00000059
_00330_DS_              Label    00000009
_00331_DS_              Label    0000001B
_00347_DS_              Label    0000002D
_00348_DS_              Label    0000003B
_00350_DS_              Label    0000001D
_00351_DS_              Label    0000003E
_00352_DS_              Label    0000003F
_00369_DS_              Label    0000000F
_00370_DS_              Label    00000024
_00371_DS_              Label    00000034
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_countLed               Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_init                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_key2Count              Label    00000000
_keyCon                 Label    00000000
_keyCount               Label    00000000
_keyLockFlag            Label    00000000
_keyRead                Label    00000000
_ledCon                 Label    00000000
_ledFlag                Label    00000000
_ledMode1               Label    00000000
_ledMode2               Label    00000000
_ledMode3               Label    00000000
_lockLedCount           Label    00000000
_lockLedFlag            Label    00000000
_longFlag               Label    00000000
_longPressFlag          Label    00000000
_main                   Label    00000000
_modeFlag               Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_sleepCount             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1013                 Label    00000000
r0x1014                 Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a053d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A053D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
