
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"eeprom.c"
                                    1-    8     	list	p=NY8A053D,c=on
                                    1-    9     	#include "ny8a053d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_INDF
                                    1-   23     	extern	_TMR0
                                    1-   24     	extern	_PCL
                                    1-   25     	extern	_STATUS
                                    1-   26     	extern	_FSR
                                    1-   27     	extern	_PORTA
                                    1-   28     	extern	_PORTB
                                    1-   29     	extern	_PCON
                                    1-   30     	extern	_BWUCON
                                    1-   31     	extern	_PCHBUF
                                    1-   32     	extern	_ABPLCON
                                    1-   33     	extern	_BPHCON
                                    1-   34     	extern	_INTE
                                    1-   35     	extern	_INTF
                                    1-   36     	extern	_TMR1
                                    1-   37     	extern	_T1CR1
                                    1-   38     	extern	_T1CR2
                                    1-   39     	extern	_PWM1DUTY
                                    1-   40     	extern	_PS1CV
                                    1-   41     	extern	_BZ1CR
                                    1-   42     	extern	_IRCR
                                    1-   43     	extern	_TBHP
                                    1-   44     	extern	_TBHD
                                    1-   45     	extern	_OSCCR
                                    1-   46     	extern	_IOSTA
                                    1-   47     	extern	_IOSTB
                                    1-   48     	extern	_PS0CV
                                    1-   49     	extern	_BODCON
                                    1-   50     	extern	_PCON1
                                    1-   51     	extern	_T0MD
                                    1-   52     	extern	__gptrput1
                                    1-   53     	extern	__gptrget1
                                    1-   55     	extern PSAVE
                                    1-   56     	extern SSAVE
                                    1-   57     	extern WSAVE
                                    1-   58     	extern STK12
                                    1-   59     	extern STK11
                                    1-   60     	extern STK10
                                    1-   61     	extern STK09
                                    1-   62     	extern STK08
                                    1-   63     	extern STK07
                                    1-   64     	extern STK06
                                    1-   65     	extern STK05
                                    1-   66     	extern STK04
                                    1-   67     	extern STK03
                                    1-   68     	extern STK02
                                    1-   69     	extern STK01
                                    1-   70     	extern STK00
                                    1-   71     ;--------------------------------------------------------
                                    1-   72     ; global declarations
                                    1-   73     ;--------------------------------------------------------
                                    1-   74     	extern	_writeWordStep
                                    1-   75     	extern	_readWordStep
                                    1-   76     	extern	_ReadByte
                                    1-   77     	extern	_SendByte
                                    1-   78     	extern	_RecvAck
                                    1-   79     	extern	_SendNoAck
                                    1-   80     	extern	_SendAck
                                    1-   81     	extern	_Stop24C02
                                    1-   82     	extern	_Start24C02
                                    1-   83     	extern	_SDAInput
                                    1-   84     	extern	_SDAOutput
                                    1-   85     	extern	_Delay10Us
                                    1-   87     ;--------------------------------------------------------
                                    1-   88     ; global definitions
                                    1-   89     ;--------------------------------------------------------
                                    1-   90     ;--------------------------------------------------------
                                    1-   91     ; absolute symbol definitions
                                    1-   92     ;--------------------------------------------------------
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; compiler-defined variables
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     .segment "uninit"
     0000                           1-   97     r0x1000:
                                    1-   98     	.res	1
                                    1-   99     .segment "uninit"
     0000                           1-  100     r0x1001:
                                    1-  101     	.res	1
                                    1-  102     .segment "uninit"
     0000                           1-  103     r0x1003:
                                    1-  104     	.res	1
                                    1-  105     .segment "uninit"
     0000                           1-  106     r0x1004:
                                    1-  107     	.res	1
                                    1-  108     .segment "uninit"
     0000                           1-  109     r0x1005:
                                    1-  110     	.res	1
                                    1-  111     .segment "uninit"
     0000                           1-  112     r0x1006:
                                    1-  113     	.res	1
                                    1-  114     .segment "uninit"
     0000                           1-  115     r0x1009:
                                    1-  116     	.res	1
                                    1-  117     .segment "uninit"
     0000                           1-  118     r0x1008:
                                    1-  119     	.res	1
                                    1-  120     .segment "uninit"
     0000                           1-  121     r0x1007:
                                    1-  122     	.res	1
                                    1-  123     .segment "uninit"
     0000                           1-  124     r0x100A:
                                    1-  125     	.res	1
                                    1-  126     .segment "uninit"
     0000                           1-  127     r0x1002:
                                    1-  128     	.res	1
                                    1-  129     ;--------------------------------------------------------
                                    1-  130     ; initialized data
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     ; overlayable items in internal ram 
                                    1-  134     ;--------------------------------------------------------
                                    1-  135     ;	udata_ovr
                                    1-  136     ;--------------------------------------------------------
                                    1-  137     ; code
                                    1-  138     ;--------------------------------------------------------
                                    1-  139     ;***
                                    1-  140     ;  pBlock Stats: dbName = C
                                    1-  141     ;***
                                    1-  142     ;has an exit
                                    1-  143     ;functions called:
                                    1-  144     ;   _Start24C02
                                    1-  145     ;   _SendByte
                                    1-  146     ;   _RecvAck
                                    1-  147     ;   _SendByte
                                    1-  148     ;   _RecvAck
                                    1-  149     ;   _SendByte
                                    1-  150     ;   _RecvAck
                                    1-  151     ;   _Stop24C02
                                    1-  152     ;   _Start24C02
                                    1-  153     ;   _SendByte
                                    1-  154     ;   _RecvAck
                                    1-  155     ;   _SendByte
                                    1-  156     ;   _RecvAck
                                    1-  157     ;   _SendByte
                                    1-  158     ;   _RecvAck
                                    1-  159     ;   _Stop24C02
                                    1-  160     ;1 compiler assigned register :
                                    1-  161     ;   r0x1002
                                    1-  162     ;; Starting pCode block
                                    1-  163     .segment "code"; module=eeprom, function=_writeWordStep
                                    1-  165     ;local variable name mapping:
     0000                           1-  167     _writeWordStep:
                                    1-  168     ; 2 exit points
                                    1-  169     	.line	130, "eeprom.c"; 	void writeWordStep(u8t workStep)
                                    1-  170     	BANKSEL	r0x1002
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  171     	MOVAR	r0x1002
                                    1-  172     	.line	132, "eeprom.c"; 	BPHCON = 0x7F;	//打开PB7的上拉电阻(SDA)
     0002 217F                      1-  173     	MOVIA	0x7f
     0003 00rr                      1-  174     	MOVAR	_BPHCON
                                    1-  175     	.line	133, "eeprom.c"; 	IOSTA = 0;
     0004 0200                      1-  176     	CLRA	
     0005 000r                      1-  177     	IOST	_IOSTA
                                    1-  178     	.line	134, "eeprom.c"; 	IOSTB = C_PB0_Input;
     0006 2101                      1-  179     	MOVIA	0x01
     0007 000r                      1-  180     	IOST	_IOSTB
                                    1-  181     	.line	135, "eeprom.c"; 	SCL = 0;
                                    1-  182     	BANKSEL	_PORTA
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 1Crr                      1-  183     	BCR	_PORTA,0
                                    1-  184     	.line	137, "eeprom.c"; 	Start24C02();
     000A 2rrr                      1-  185     	LCALL	_Start24C02
                                    1-  186     	.line	138, "eeprom.c"; 	SendByte(0xA0);		//发送器件地址和写动作
     000B 21A0                      1-  187     	MOVIA	0xa0
     000C 2rrr                      1-  188     	LCALL	_SendByte
                                    1-  189     	.line	139, "eeprom.c"; 	RecvAck();
     000D 2rrr                      1-  190     	LCALL	_RecvAck
                                    1-  191     	.line	140, "eeprom.c"; 	SendByte(0X00);		//发送写地址
     000E 2100                      1-  192     	MOVIA	0x00
     000F 2rrr                      1-  193     	LCALL	_SendByte
                                    1-  194     	.line	141, "eeprom.c"; 	RecvAck();
     0010 2rrr                      1-  195     	LCALL	_RecvAck
                                    1-  196     	.line	142, "eeprom.c"; 	SendByte(workStep);		//发送数据到地址
                                    1-  197     	BANKSEL	r0x1002
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1-  198     	MOVR	r0x1002,W
     0013 2rrr                      1-  199     	LCALL	_SendByte
                                    1-  200     	.line	143, "eeprom.c"; 	RecvAck();
     0014 2rrr                      1-  201     	LCALL	_RecvAck
                                    1-  202     	.line	144, "eeprom.c"; 	Stop24C02();
     0015 2rrr                      1-  203     	LCALL	_Stop24C02
                                    1-  204     	.line	145, "eeprom.c"; 	}
                                    1-  205     	RETURN	
     0016 0010                      3-   26 m1      ret
                                    1-  206     ; exit point of _writeWordStep
                                    1-  208     ;***
                                    1-  209     ;  pBlock Stats: dbName = C
                                    1-  210     ;***
                                    1-  211     ;has an exit
                                    1-  212     ;functions called:
                                    1-  213     ;   _Start24C02
                                    1-  214     ;   _SendByte
                                    1-  215     ;   _RecvAck
                                    1-  216     ;   _SendByte
                                    1-  217     ;   _RecvAck
                                    1-  218     ;   _Start24C02
                                    1-  219     ;   _SendByte
                                    1-  220     ;   _RecvAck
                                    1-  221     ;   _ReadByte
                                    1-  222     ;   __gptrput1
                                    1-  223     ;   _SendNoAck
                                    1-  224     ;   _Stop24C02
                                    1-  225     ;   __gptrget1
                                    1-  226     ;   __gptrput1
                                    1-  227     ;   _Start24C02
                                    1-  228     ;   _SendByte
                                    1-  229     ;   _RecvAck
                                    1-  230     ;   _SendByte
                                    1-  231     ;   _RecvAck
                                    1-  232     ;   _Start24C02
                                    1-  233     ;   _SendByte
                                    1-  234     ;   _RecvAck
                                    1-  235     ;   _ReadByte
                                    1-  236     ;   __gptrput1
                                    1-  237     ;   _SendNoAck
                                    1-  238     ;   _Stop24C02
                                    1-  239     ;   __gptrget1
                                    1-  240     ;   __gptrput1
                                    1-  241     ;7 compiler assigned registers:
                                    1-  242     ;   r0x1007
                                    1-  243     ;   STK00
                                    1-  244     ;   r0x1008
                                    1-  245     ;   STK01
                                    1-  246     ;   r0x1009
                                    1-  247     ;   r0x100A
                                    1-  248     ;   STK02
                                    1-  249     ;; Starting pCode block
                                    1-  250     .segment "code"; module=eeprom, function=_readWordStep
                                    1-  252     ;local variable name mapping:
     0000                           1-  256     _readWordStep:
                                    1-  257     ; 2 exit points
                                    1-  258     	.line	109, "eeprom.c"; 	void readWordStep(unsigned char *workStep)
                                    1-  259     	BANKSEL	r0x1007
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  260     	MOVAR	r0x1007
     0002 01rr                      1-  261     	MOVR	STK00,W
                                    1-  262     	BANKSEL	r0x1008
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  263     	MOVAR	r0x1008
     0005 01rr                      1-  264     	MOVR	STK01,W
                                    1-  265     	BANKSEL	r0x1009
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  266     	MOVAR	r0x1009
                                    1-  267     	.line	111, "eeprom.c"; 	BPHCON = 0x7F;	//打开PB7的上拉电阻(SDA)
     0008 217F                      1-  268     	MOVIA	0x7f
     0009 00rr                      1-  269     	MOVAR	_BPHCON
                                    1-  270     	.line	112, "eeprom.c"; 	IOSTA = 0;
     000A 0200                      1-  271     	CLRA	
     000B 000r                      1-  272     	IOST	_IOSTA
                                    1-  273     	.line	113, "eeprom.c"; 	IOSTB = C_PB0_Input;
     000C 2101                      1-  274     	MOVIA	0x01
     000D 000r                      1-  275     	IOST	_IOSTB
                                    1-  276     	.line	114, "eeprom.c"; 	SCL = 0;
                                    1-  277     	BANKSEL	_PORTA
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 1Crr                      1-  278     	BCR	_PORTA,0
                                    1-  279     	.line	115, "eeprom.c"; 	Start24C02();
     0010 2rrr                      1-  280     	LCALL	_Start24C02
                                    1-  281     	.line	116, "eeprom.c"; 	SendByte(0xA0);		//发送器件地址和写动作
     0011 21A0                      1-  282     	MOVIA	0xa0
     0012 2rrr                      1-  283     	LCALL	_SendByte
                                    1-  284     	.line	117, "eeprom.c"; 	RecvAck();
     0013 2rrr                      1-  285     	LCALL	_RecvAck
                                    1-  286     	.line	118, "eeprom.c"; 	SendByte(0X00);		//发送读地址
     0014 2100                      1-  287     	MOVIA	0x00
     0015 2rrr                      1-  288     	LCALL	_SendByte
                                    1-  289     	.line	119, "eeprom.c"; 	RecvAck();
     0016 2rrr                      1-  290     	LCALL	_RecvAck
                                    1-  291     	.line	120, "eeprom.c"; 	Start24C02();
     0017 2rrr                      1-  292     	LCALL	_Start24C02
                                    1-  293     	.line	121, "eeprom.c"; 	SendByte(0xA1);		//发送器件地址和读动作
     0018 21A1                      1-  294     	MOVIA	0xa1
     0019 2rrr                      1-  295     	LCALL	_SendByte
                                    1-  296     	.line	122, "eeprom.c"; 	RecvAck();
     001A 2rrr                      1-  297     	LCALL	_RecvAck
                                    1-  298     	.line	123, "eeprom.c"; 	*workStep = ReadByte();
     001B 2rrr                      1-  299     	LCALL	_ReadByte
                                    1-  300     	BANKSEL	r0x100A
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  301     	MOVAR	r0x100A
     001E 00rr                      1-  302     	MOVAR	STK02
                                    1-  303     	BANKSEL	r0x1009
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  304     	MOVR	r0x1009,W
     0021 00rr                      1-  305     	MOVAR	STK01
                                    1-  306     	BANKSEL	r0x1008
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  307     	MOVR	r0x1008,W
     0024 00rr                      1-  308     	MOVAR	STK00
                                    1-  309     	BANKSEL	r0x1007
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1-  310     	MOVR	r0x1007,W
     0027 2rrr                      1-  311     	LCALL	__gptrput1
                                    1-  312     	.line	124, "eeprom.c"; 	SendNoAck();
     0028 2rrr                      1-  313     	LCALL	_SendNoAck
                                    1-  314     	.line	125, "eeprom.c"; 	Stop24C02();
     0029 2rrr                      1-  315     	LCALL	_Stop24C02
                                    1-  316     	.line	126, "eeprom.c"; 	if(*workStep >= 19 || *workStep == 0)
                                    1-  317     	BANKSEL	r0x1009
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  318     	MOVR	r0x1009,W
     002C 00rr                      1-  319     	MOVAR	STK01
                                    1-  320     	BANKSEL	r0x1008
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  321     	MOVR	r0x1008,W
     002F 00rr                      1-  322     	MOVAR	STK00
                                    1-  323     	BANKSEL	r0x1007
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1-  324     	MOVR	r0x1007,W
     0032 2rrr                      1-  325     	LCALL	__gptrget1
                                    1-  326     	BANKSEL	r0x100A
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1-  327     	MOVAR	r0x100A
                                    1-  328     ;;unsigned compare: left < lit (0x13=19), size=1
     0035 2113                      1-  329     	MOVIA	0x13
     0036 04rr                      1-  330     	SUBAR	r0x100A,W
     0037 0C03                      1-  331     	BTRSC	STATUS,0
     0038 3rrr                      1-  332     	LGOTO	_00153_DS_
     0039 01rr                      1-  333     	MOVR	r0x100A,W
     003A 0903                      1-  334     	BTRSS	STATUS,2
     003B 3rrr                      1-  335     	LGOTO	_00156_DS_
     003C                           1-  336     _00153_DS_:
                                    1-  337     	.line	127, "eeprom.c"; 	*workStep = 1;
     003C 2101                      1-  338     	MOVIA	0x01
     003D 00rr                      1-  339     	MOVAR	STK02
                                    1-  340     	BANKSEL	r0x1009
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1-  341     	MOVR	r0x1009,W
     0040 00rr                      1-  342     	MOVAR	STK01
                                    1-  343     	BANKSEL	r0x1008
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1-  344     	MOVR	r0x1008,W
     0043 00rr                      1-  345     	MOVAR	STK00
                                    1-  346     	BANKSEL	r0x1007
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  347     	MOVR	r0x1007,W
     0046 2rrr                      1-  348     	LCALL	__gptrput1
     0047                           1-  349     _00156_DS_:
                                    1-  350     	.line	128, "eeprom.c"; 	}
                                    1-  351     	RETURN	
     0047 0010                      3-   26 m1      ret
                                    1-  352     ; exit point of _readWordStep
                                    1-  354     ;***
                                    1-  355     ;  pBlock Stats: dbName = C
                                    1-  356     ;***
                                    1-  357     ;has an exit
                                    1-  358     ;functions called:
                                    1-  359     ;   _SDAInput
                                    1-  360     ;   _Delay10Us
                                    1-  361     ;   _Delay10Us
                                    1-  362     ;   _SDAOutput
                                    1-  363     ;   _SDAInput
                                    1-  364     ;   _Delay10Us
                                    1-  365     ;   _Delay10Us
                                    1-  366     ;   _SDAOutput
                                    1-  367     ;4 compiler assigned registers:
                                    1-  368     ;   r0x1003
                                    1-  369     ;   r0x1004
                                    1-  370     ;   r0x1005
                                    1-  371     ;   r0x1006
                                    1-  372     ;; Starting pCode block
                                    1-  373     .segment "code"; module=eeprom, function=_ReadByte
                                    1-  375     ;local variable name mapping:
     0000                           1-  378     _ReadByte:
                                    1-  379     ; 2 exit points
                                    1-  380     	.line	92, "eeprom.c"; 	u8t data=0;
                                    1-  381     	BANKSEL	r0x1003
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  382     	CLRR	r0x1003
                                    1-  383     	.line	93, "eeprom.c"; 	SDAInput();
     0002 2rrr                      1-  384     	LCALL	_SDAInput
                                    1-  385     	.line	95, "eeprom.c"; 	for(u8t i=8;i>0;i--){
     0003 2108                      1-  386     	MOVIA	0x08
                                    1-  387     	BANKSEL	r0x1004
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  388     	MOVAR	r0x1004
     0006                           1-  389     _00148_DS_:
                                    1-  390     	BANKSEL	r0x1004
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1-  391     	MOVR	r0x1004,W
     0008 0D03                      1-  392     	BTRSC	STATUS,2
     0009 3rrr                      1-  393     	LGOTO	_00146_DS_
                                    1-  394     	.line	96, "eeprom.c"; 	SCL = 1;
                                    1-  395     	BANKSEL	_PORTA
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 18rr                      1-  396     	BSR	_PORTA,0
                                    1-  397     	.line	97, "eeprom.c"; 	Delay10Us();
     000C 2rrr                      1-  398     	LCALL	_Delay10Us
                                    1-  399     	.line	98, "eeprom.c"; 	data = data<<1;
     000D 1C03                      1-  400     	BCR	STATUS,0
                                    1-  401     	BANKSEL	r0x1003
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 14rr                      1-  402     	RLR	r0x1003,F
                                    1-  403     	.line	99, "eeprom.c"; 	data |= SDA;
     0010 01rr                      1-  404     	MOVR	r0x1003,W
                                    1-  405     	BANKSEL	r0x1005
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1-  406     	MOVAR	r0x1005
                                    1-  407     	BANKSEL	r0x1006
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1-  408     	CLRR	r0x1006
                                    1-  409     	BANKSEL	_PORTB
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 0Brr                      1-  410     	BTRSS	_PORTB,7
     0017 3rrr                      1-  411     	LGOTO	_00001_DS_
                                    1-  412     	BANKSEL	r0x1006
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 05rr                      1-  413     	INCR	r0x1006,F
     001A                           1-  414     _00001_DS_:
                                    1-  415     	BANKSEL	r0x1006
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  416     	MOVR	r0x1006,W
                                    1-  417     	BANKSEL	r0x1005
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 11rr                      1-  418     	IORAR	r0x1005,W
                                    1-  419     	BANKSEL	r0x1003
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  420     	MOVAR	r0x1003
                                    1-  421     	.line	100, "eeprom.c"; 	SCL = 0;
                                    1-  422     	BANKSEL	_PORTA
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 1Crr                      1-  423     	BCR	_PORTA,0
                                    1-  424     	.line	101, "eeprom.c"; 	Delay10Us();
     0022 2rrr                      1-  425     	LCALL	_Delay10Us
                                    1-  426     	.line	95, "eeprom.c"; 	for(u8t i=8;i>0;i--){
                                    1-  427     	BANKSEL	r0x1004
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 06rr                      1-  428     	DECR	r0x1004,F
     0025 3rrr                      1-  429     	LGOTO	_00148_DS_
     0026                           1-  430     _00146_DS_:
                                    1-  431     	.line	103, "eeprom.c"; 	SDAOutput();
     0026 2rrr                      1-  432     	LCALL	_SDAOutput
                                    1-  433     	.line	104, "eeprom.c"; 	return	data;
                                    1-  434     	BANKSEL	r0x1003
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  435     	MOVR	r0x1003,W
                                    1-  436     	.line	105, "eeprom.c"; 	}
                                    1-  437     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1-  438     ; exit point of _ReadByte
                                    1-  440     ;***
                                    1-  441     ;  pBlock Stats: dbName = C
                                    1-  442     ;***
                                    1-  443     ;has an exit
                                    1-  444     ;functions called:
                                    1-  445     ;   _Delay10Us
                                    1-  446     ;   _Delay10Us
                                    1-  447     ;   _Delay10Us
                                    1-  448     ;   _Delay10Us
                                    1-  449     ;   _Delay10Us
                                    1-  450     ;   _Delay10Us
                                    1-  451     ;2 compiler assigned registers:
                                    1-  452     ;   r0x1000
                                    1-  453     ;   r0x1001
                                    1-  454     ;; Starting pCode block
                                    1-  455     .segment "code"; module=eeprom, function=_SendByte
                                    1-  457     ;local variable name mapping:
     0000                           1-  460     _SendByte:
                                    1-  461     ; 2 exit points
                                    1-  462     	.line	79, "eeprom.c"; 	void SendByte(u8t data){
                                    1-  463     	BANKSEL	r0x1000
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  464     	MOVAR	r0x1000
                                    1-  465     	.line	80, "eeprom.c"; 	for(u8t i=8;i>0;i--){
     0002 2108                      1-  466     	MOVIA	0x08
                                    1-  467     	BANKSEL	r0x1001
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  468     	MOVAR	r0x1001
     0005                           1-  469     _00139_DS_:
                                    1-  470     	BANKSEL	r0x1001
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1-  471     	MOVR	r0x1001,W
     0007 0D03                      1-  472     	BTRSC	STATUS,2
     0008 3rrr                      1-  473     	LGOTO	_00141_DS_
                                    1-  474     	.line	81, "eeprom.c"; 	data = data<<1;
     0009 1C03                      1-  475     	BCR	STATUS,0
                                    1-  476     	BANKSEL	r0x1000
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 14rr                      1-  477     	RLR	r0x1000,F
                                    1-  478     	.line	82, "eeprom.c"; 	SDA = C;
     000C 0C03                      1-  479     	BTRSC	STATUS,0
     000D 3rrr                      1-  480     	LGOTO	_00002_DS_
                                    1-  481     	BANKSEL	_PORTB
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 1Frr                      1-  482     	BCR	_PORTB,7
     0010                           1-  483     _00002_DS_:
     0010 0803                      1-  484     	BTRSS	STATUS,0
     0011 3rrr                      1-  485     	LGOTO	_00003_DS_
                                    1-  486     	BANKSEL	_PORTB
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 1Brr                      1-  487     	BSR	_PORTB,7
     0014                           1-  488     _00003_DS_:
                                    1-  489     	.line	83, "eeprom.c"; 	Delay10Us();
     0014 2rrr                      1-  490     	LCALL	_Delay10Us
                                    1-  491     	.line	84, "eeprom.c"; 	SCL = 1;
                                    1-  492     	BANKSEL	_PORTA
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 18rr                      1-  493     	BSR	_PORTA,0
                                    1-  494     	.line	85, "eeprom.c"; 	Delay10Us();
     0017 2rrr                      1-  495     	LCALL	_Delay10Us
                                    1-  496     	.line	86, "eeprom.c"; 	SCL = 0;
                                    1-  497     	BANKSEL	_PORTA
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 1Crr                      1-  498     	BCR	_PORTA,0
                                    1-  499     	.line	87, "eeprom.c"; 	Delay10Us();
     001A 2rrr                      1-  500     	LCALL	_Delay10Us
                                    1-  501     	.line	80, "eeprom.c"; 	for(u8t i=8;i>0;i--){
                                    1-  502     	BANKSEL	r0x1001
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 06rr                      1-  503     	DECR	r0x1001,F
     001D 3rrr                      1-  504     	LGOTO	_00139_DS_
     001E                           1-  505     _00141_DS_:
                                    1-  506     	.line	89, "eeprom.c"; 	}
                                    1-  507     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1-  508     ; exit point of _SendByte
                                    1-  510     ;***
                                    1-  511     ;  pBlock Stats: dbName = C
                                    1-  512     ;***
                                    1-  513     ;has an exit
                                    1-  514     ;functions called:
                                    1-  515     ;   _SDAInput
                                    1-  516     ;   _Delay10Us
                                    1-  517     ;   _Delay10Us
                                    1-  518     ;   _Delay10Us
                                    1-  519     ;   _SDAOutput
                                    1-  520     ;   _Delay10Us
                                    1-  521     ;   _SDAInput
                                    1-  522     ;   _Delay10Us
                                    1-  523     ;   _Delay10Us
                                    1-  524     ;   _Delay10Us
                                    1-  525     ;   _SDAOutput
                                    1-  526     ;   _Delay10Us
                                    1-  527     ;; Starting pCode block
                                    1-  528     .segment "code"; module=eeprom, function=_RecvAck
     0000                           1-  530     _RecvAck:
                                    1-  531     ; 2 exit points
                                    1-  532     	.line	68, "eeprom.c"; 	SDAInput();
     0000 2rrr                      1-  533     	LCALL	_SDAInput
                                    1-  534     	.line	69, "eeprom.c"; 	Delay10Us();
     0001 2rrr                      1-  535     	LCALL	_Delay10Us
                                    1-  536     	.line	70, "eeprom.c"; 	SCL = 1;
                                    1-  537     	BANKSEL	_PORTA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 18rr                      1-  538     	BSR	_PORTA,0
                                    1-  539     	.line	71, "eeprom.c"; 	Delay10Us();
     0004 2rrr                      1-  540     	LCALL	_Delay10Us
                                    1-  541     	.line	72, "eeprom.c"; 	SCL = 0;
                                    1-  542     	BANKSEL	_PORTA
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 1Crr                      1-  543     	BCR	_PORTA,0
                                    1-  544     	.line	73, "eeprom.c"; 	Delay10Us();
     0007 2rrr                      1-  545     	LCALL	_Delay10Us
                                    1-  546     	.line	74, "eeprom.c"; 	SDAOutput();
     0008 2rrr                      1-  547     	LCALL	_SDAOutput
                                    1-  548     	.line	75, "eeprom.c"; 	SDA = 0;
                                    1-  549     	BANKSEL	_PORTB
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 1Frr                      1-  550     	BCR	_PORTB,7
                                    1-  551     	.line	76, "eeprom.c"; 	Delay10Us();
     000B 2rrr                      1-  552     	LCALL	_Delay10Us
                                    1-  553     	.line	77, "eeprom.c"; 	}
                                    1-  554     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1-  555     ; exit point of _RecvAck
                                    1-  557     ;***
                                    1-  558     ;  pBlock Stats: dbName = C
                                    1-  559     ;***
                                    1-  560     ;has an exit
                                    1-  561     ;functions called:
                                    1-  562     ;   _Delay10Us
                                    1-  563     ;   _Delay10Us
                                    1-  564     ;   _Delay10Us
                                    1-  565     ;   _Delay10Us
                                    1-  566     ;   _Delay10Us
                                    1-  567     ;   _Delay10Us
                                    1-  568     ;; Starting pCode block
                                    1-  569     .segment "code"; module=eeprom, function=_SendNoAck
     0000                           1-  571     _SendNoAck:
                                    1-  572     ; 2 exit points
                                    1-  573     	.line	59, "eeprom.c"; 	SDA = 1;
                                    1-  574     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Brr                      1-  575     	BSR	_PORTB,7
                                    1-  576     	.line	60, "eeprom.c"; 	Delay10Us();
     0002 2rrr                      1-  577     	LCALL	_Delay10Us
                                    1-  578     	.line	61, "eeprom.c"; 	SCL = 1;
                                    1-  579     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 18rr                      1-  580     	BSR	_PORTA,0
                                    1-  581     	.line	62, "eeprom.c"; 	Delay10Us();
     0005 2rrr                      1-  582     	LCALL	_Delay10Us
                                    1-  583     	.line	63, "eeprom.c"; 	SCL = 0;
                                    1-  584     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Crr                      1-  585     	BCR	_PORTA,0
                                    1-  586     	.line	64, "eeprom.c"; 	Delay10Us();
     0008 2rrr                      1-  587     	LCALL	_Delay10Us
                                    1-  588     	.line	65, "eeprom.c"; 	}
                                    1-  589     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1-  590     ; exit point of _SendNoAck
                                    1-  592     ;***
                                    1-  593     ;  pBlock Stats: dbName = C
                                    1-  594     ;***
                                    1-  595     ;has an exit
                                    1-  596     ;functions called:
                                    1-  597     ;   _Delay10Us
                                    1-  598     ;   _Delay10Us
                                    1-  599     ;   _Delay10Us
                                    1-  600     ;   _Delay10Us
                                    1-  601     ;   _Delay10Us
                                    1-  602     ;   _Delay10Us
                                    1-  603     ;; Starting pCode block
                                    1-  604     .segment "code"; module=eeprom, function=_SendAck
     0000                           1-  606     _SendAck:
                                    1-  607     ; 2 exit points
                                    1-  608     	.line	50, "eeprom.c"; 	SDA = 0;
                                    1-  609     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Frr                      1-  610     	BCR	_PORTB,7
                                    1-  611     	.line	51, "eeprom.c"; 	Delay10Us();
     0002 2rrr                      1-  612     	LCALL	_Delay10Us
                                    1-  613     	.line	52, "eeprom.c"; 	SCL = 1;
                                    1-  614     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 18rr                      1-  615     	BSR	_PORTA,0
                                    1-  616     	.line	53, "eeprom.c"; 	Delay10Us();
     0005 2rrr                      1-  617     	LCALL	_Delay10Us
                                    1-  618     	.line	54, "eeprom.c"; 	SCL = 0;
                                    1-  619     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Crr                      1-  620     	BCR	_PORTA,0
                                    1-  621     	.line	55, "eeprom.c"; 	Delay10Us();
     0008 2rrr                      1-  622     	LCALL	_Delay10Us
                                    1-  623     	.line	56, "eeprom.c"; 	}
                                    1-  624     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1-  625     ; exit point of _SendAck
                                    1-  627     ;***
                                    1-  628     ;  pBlock Stats: dbName = C
                                    1-  629     ;***
                                    1-  630     ;has an exit
                                    1-  631     ;functions called:
                                    1-  632     ;   _Delay10Us
                                    1-  633     ;   _Delay10Us
                                    1-  634     ;   _Delay10Us
                                    1-  635     ;   _Delay10Us
                                    1-  636     ;   _Delay10Us
                                    1-  637     ;   _Delay10Us
                                    1-  638     ;; Starting pCode block
                                    1-  639     .segment "code"; module=eeprom, function=_Stop24C02
     0000                           1-  641     _Stop24C02:
                                    1-  642     ; 2 exit points
                                    1-  643     	.line	41, "eeprom.c"; 	SDA = 0;
                                    1-  644     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Frr                      1-  645     	BCR	_PORTB,7
                                    1-  646     	.line	42, "eeprom.c"; 	Delay10Us();
     0002 2rrr                      1-  647     	LCALL	_Delay10Us
                                    1-  648     	.line	43, "eeprom.c"; 	SCL = 1;
                                    1-  649     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 18rr                      1-  650     	BSR	_PORTA,0
                                    1-  651     	.line	44, "eeprom.c"; 	Delay10Us();
     0005 2rrr                      1-  652     	LCALL	_Delay10Us
                                    1-  653     	.line	45, "eeprom.c"; 	SDA = 1;
                                    1-  654     	BANKSEL	_PORTB
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Brr                      1-  655     	BSR	_PORTB,7
                                    1-  656     	.line	46, "eeprom.c"; 	Delay10Us();
     0008 2rrr                      1-  657     	LCALL	_Delay10Us
                                    1-  658     	.line	47, "eeprom.c"; 	}
                                    1-  659     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1-  660     ; exit point of _Stop24C02
                                    1-  662     ;***
                                    1-  663     ;  pBlock Stats: dbName = C
                                    1-  664     ;***
                                    1-  665     ;has an exit
                                    1-  666     ;functions called:
                                    1-  667     ;   _Delay10Us
                                    1-  668     ;   _Delay10Us
                                    1-  669     ;   _Delay10Us
                                    1-  670     ;   _Delay10Us
                                    1-  671     ;   _Delay10Us
                                    1-  672     ;   _Delay10Us
                                    1-  673     ;   _Delay10Us
                                    1-  674     ;   _Delay10Us
                                    1-  675     ;; Starting pCode block
                                    1-  676     .segment "code"; module=eeprom, function=_Start24C02
     0000                           1-  678     _Start24C02:
                                    1-  679     ; 2 exit points
                                    1-  680     	.line	30, "eeprom.c"; 	SDA = 1;
                                    1-  681     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Brr                      1-  682     	BSR	_PORTB,7
                                    1-  683     	.line	31, "eeprom.c"; 	Delay10Us();
     0002 2rrr                      1-  684     	LCALL	_Delay10Us
                                    1-  685     	.line	32, "eeprom.c"; 	SCL = 1;
                                    1-  686     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 18rr                      1-  687     	BSR	_PORTA,0
                                    1-  688     	.line	33, "eeprom.c"; 	Delay10Us();
     0005 2rrr                      1-  689     	LCALL	_Delay10Us
                                    1-  690     	.line	34, "eeprom.c"; 	SDA = 0;
                                    1-  691     	BANKSEL	_PORTB
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Frr                      1-  692     	BCR	_PORTB,7
                                    1-  693     	.line	35, "eeprom.c"; 	Delay10Us();
     0008 2rrr                      1-  694     	LCALL	_Delay10Us
                                    1-  695     	.line	36, "eeprom.c"; 	SCL = 0;
                                    1-  696     	BANKSEL	_PORTA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 1Crr                      1-  697     	BCR	_PORTA,0
                                    1-  698     	.line	37, "eeprom.c"; 	Delay10Us();
     000B 2rrr                      1-  699     	LCALL	_Delay10Us
                                    1-  700     	.line	38, "eeprom.c"; 	}
                                    1-  701     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1-  702     ; exit point of _Start24C02
                                    1-  704     ;***
                                    1-  705     ;  pBlock Stats: dbName = C
                                    1-  706     ;***
                                    1-  707     ;has an exit
                                    1-  708     ;1 compiler assigned register :
                                    1-  709     ;   r0x1000
                                    1-  710     ;; Starting pCode block
                                    1-  711     .segment "code"; module=eeprom, function=_SDAInput
     0000                           1-  713     _SDAInput:
                                    1-  714     ; 2 exit points
                                    1-  715     	.line	24, "eeprom.c"; 	DISI();
     0000 0013                      1-  716     	DISI
                                    1-  717     	.line	25, "eeprom.c"; 	IOSTB |= 0X80;
     0001 001r                      1-  718     	IOSTR	_IOSTB
                                    1-  719     	BANKSEL	r0x1000
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1-  720     	MOVAR	r0x1000
     0004 1Brr                      1-  721     	BSR	r0x1000,7
     0005 01rr                      1-  722     	MOVR	r0x1000,W
     0006 000r                      1-  723     	IOST	_IOSTB
                                    1-  724     	.line	26, "eeprom.c"; 	ENI();
     0007 0004                      1-  725     	ENI
                                    1-  726     	.line	27, "eeprom.c"; 	}
                                    1-  727     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1-  728     ; exit point of _SDAInput
                                    1-  730     ;***
                                    1-  731     ;  pBlock Stats: dbName = C
                                    1-  732     ;***
                                    1-  733     ;has an exit
                                    1-  734     ;1 compiler assigned register :
                                    1-  735     ;   r0x1000
                                    1-  736     ;; Starting pCode block
                                    1-  737     .segment "code"; module=eeprom, function=_SDAOutput
     0000                           1-  739     _SDAOutput:
                                    1-  740     ; 2 exit points
                                    1-  741     	.line	18, "eeprom.c"; 	DISI();
     0000 0013                      1-  742     	DISI
                                    1-  743     	.line	19, "eeprom.c"; 	IOSTB &= 0X7F;
     0001 001r                      1-  744     	IOSTR	_IOSTB
                                    1-  745     	BANKSEL	r0x1000
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1-  746     	MOVAR	r0x1000
     0004 1Frr                      1-  747     	BCR	r0x1000,7
     0005 01rr                      1-  748     	MOVR	r0x1000,W
     0006 000r                      1-  749     	IOST	_IOSTB
                                    1-  750     	.line	20, "eeprom.c"; 	ENI();
     0007 0004                      1-  751     	ENI
                                    1-  752     	.line	21, "eeprom.c"; 	}
                                    1-  753     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1-  754     ; exit point of _SDAOutput
                                    1-  756     ;***
                                    1-  757     ;  pBlock Stats: dbName = C
                                    1-  758     ;***
                                    1-  759     ;has an exit
                                    1-  760     ;; Starting pCode block
                                    1-  761     .segment "code"; module=eeprom, function=_Delay10Us
     0000                           1-  763     _Delay10Us:
                                    1-  764     ; 2 exit points
                                    1-  765     	.line	9, "eeprom.c"; 	NOP();
     0000 0000                      1-  766     	nop
                                    1-  767     	.line	10, "eeprom.c"; 	NOP();
     0001 0000                      1-  768     	nop
                                    1-  769     	.line	11, "eeprom.c"; 	NOP();
     0002 0000                      1-  770     	nop
                                    1-  771     	.line	12, "eeprom.c"; 	NOP();
     0003 0000                      1-  772     	nop
                                    1-  773     	.line	13, "eeprom.c"; 	NOP();
     0004 0000                      1-  774     	nop
                                    1-  775     	.line	14, "eeprom.c"; 	NOP();
     0005 0000                      1-  776     	nop
                                    1-  777     	.line	15, "eeprom.c"; 	}
                                    1-  778     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  779     ; exit point of _Delay10Us
                                    1-  782     ;	code size estimation:
                                    1-  783     ;	  179+   60 =   239 instructions (  598 byte)
                                    1-  785     	end
                                    1-  785     	end

SYMBOL TABLE            TYPE     VALUE
__CHECKSUM_ADDR__       Label    00000000
__gptrget1              Label    00000000
__gptrput1              Label    00000000
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800533
_00001_DS_              Label    0000001A
_00002_DS_              Label    00000010
_00003_DS_              Label    00000014
_00139_DS_              Label    00000005
_00141_DS_              Label    0000001E
_00146_DS_              Label    00000026
_00148_DS_              Label    00000006
_00153_DS_              Label    0000003C
_00156_DS_              Label    00000047
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_Delay10Us              Label    00000000
_FSR                    Label    00000000
_INDF                   Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_ReadByte               Label    00000000
_readWordStep           Label    00000000
_RecvAck                Label    00000000
_SDAInput               Label    00000000
_SDAOutput              Label    00000000
_SendAck                Label    00000000
_SendByte               Label    00000000
_SendNoAck              Label    00000000
_Start24C02             Label    00000000
_STATUS                 Label    00000000
_Stop24C02              Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_writeWordStep          Label    00000000
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1000                 Label    00000000
r0x1001                 Label    00000000
r0x1002                 Label    00000000
r0x1003                 Label    00000000
r0x1004                 Label    00000000
r0x1005                 Label    00000000
r0x1006                 Label    00000000
r0x1007                 Label    00000000
r0x1008                 Label    00000000
r0x1009                 Label    00000000
r0x100A                 Label    00000000
SSAVE                   Label    00000000
STATUS                  Constant 00000003
STK00                   Label    00000000
STK01                   Label    00000000
STK02                   Label    00000000
STK03                   Label    00000000
STK04                   Label    00000000
STK05                   Label    00000000
STK06                   Label    00000000
STK07                   Label    00000000
STK08                   Label    00000000
STK09                   Label    00000000
STK10                   Label    00000000
STK11                   Label    00000000
STK12                   Label    00000000
W                       Constant 00000000
WSAVE                   Label    00000000


SOURCE FILE TABLE
001 eeprom.s
002 ny8a053d.inc
003 common.inc
004 eeprom.c

PROCESSOR    = NY8A053D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
