
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"eeprom.c"
                                    1-    8     	list	p=NY8A053D,c=on
                                    1-    9     	#include "ny8a053d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_INDF
                                    1-   23     	extern	_TMR0
                                    1-   24     	extern	_PCL
                                    1-   25     	extern	_STATUS
                                    1-   26     	extern	_FSR
                                    1-   27     	extern	_PORTA
                                    1-   28     	extern	_PORTB
                                    1-   29     	extern	_PCON
                                    1-   30     	extern	_BWUCON
                                    1-   31     	extern	_PCHBUF
                                    1-   32     	extern	_ABPLCON
                                    1-   33     	extern	_BPHCON
                                    1-   34     	extern	_INTE
                                    1-   35     	extern	_INTF
                                    1-   36     	extern	_TMR1
                                    1-   37     	extern	_T1CR1
                                    1-   38     	extern	_T1CR2
                                    1-   39     	extern	_PWM1DUTY
                                    1-   40     	extern	_PS1CV
                                    1-   41     	extern	_BZ1CR
                                    1-   42     	extern	_IRCR
                                    1-   43     	extern	_TBHP
                                    1-   44     	extern	_TBHD
                                    1-   45     	extern	_OSCCR
                                    1-   46     	extern	_IOSTA
                                    1-   47     	extern	_IOSTB
                                    1-   48     	extern	_PS0CV
                                    1-   49     	extern	_BODCON
                                    1-   50     	extern	_PCON1
                                    1-   51     	extern	_T0MD
                                    1-   52     	extern	__gptrput1
                                    1-   53     	extern	__gptrget1
                                    1-   55     	extern PSAVE
                                    1-   56     	extern SSAVE
                                    1-   57     	extern WSAVE
                                    1-   58     	extern STK12
                                    1-   59     	extern STK11
                                    1-   60     	extern STK10
                                    1-   61     	extern STK09
                                    1-   62     	extern STK08
                                    1-   63     	extern STK07
                                    1-   64     	extern STK06
                                    1-   65     	extern STK05
                                    1-   66     	extern STK04
                                    1-   67     	extern STK03
                                    1-   68     	extern STK02
                                    1-   69     	extern STK01
                                    1-   70     	extern STK00
                                    1-   71     ;--------------------------------------------------------
                                    1-   72     ; global declarations
                                    1-   73     ;--------------------------------------------------------
                                    1-   74     	extern	_writeWordStep
                                    1-   75     	extern	_readWordStep
                                    1-   76     	extern	_ReadByte
                                    1-   77     	extern	_SendByte
                                    1-   78     	extern	_RecvAck
                                    1-   79     	extern	_SendNoAck
                                    1-   80     	extern	_SendAck
                                    1-   81     	extern	_Stop24C02
                                    1-   82     	extern	_Start24C02
                                    1-   83     	extern	_SDAInput
                                    1-   84     	extern	_SDAOutput
                                    1-   85     	extern	_Delay10Us
                                    1-   87     ;--------------------------------------------------------
                                    1-   88     ; global definitions
                                    1-   89     ;--------------------------------------------------------
                                    1-   90     ;--------------------------------------------------------
                                    1-   91     ; absolute symbol definitions
                                    1-   92     ;--------------------------------------------------------
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; compiler-defined variables
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     .segment "uninit"
     0000                           1-   97     r0x1000:
                                    1-   98     	.res	1
                                    1-   99     .segment "uninit"
     0000                           1-  100     r0x1001:
                                    1-  101     	.res	1
                                    1-  102     .segment "uninit"
     0000                           1-  103     r0x1003:
                                    1-  104     	.res	1
                                    1-  105     .segment "uninit"
     0000                           1-  106     r0x1004:
                                    1-  107     	.res	1
                                    1-  108     .segment "uninit"
     0000                           1-  109     r0x1005:
                                    1-  110     	.res	1
                                    1-  111     .segment "uninit"
     0000                           1-  112     r0x1006:
                                    1-  113     	.res	1
                                    1-  114     .segment "uninit"
     0000                           1-  115     r0x1009:
                                    1-  116     	.res	1
                                    1-  117     .segment "uninit"
     0000                           1-  118     r0x1008:
                                    1-  119     	.res	1
                                    1-  120     .segment "uninit"
     0000                           1-  121     r0x1007:
                                    1-  122     	.res	1
                                    1-  123     .segment "uninit"
     0000                           1-  124     r0x100A:
                                    1-  125     	.res	1
                                    1-  126     .segment "uninit"
     0000                           1-  127     r0x1002:
                                    1-  128     	.res	1
                                    1-  129     ;--------------------------------------------------------
                                    1-  130     ; initialized data
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     ; overlayable items in internal ram 
                                    1-  134     ;--------------------------------------------------------
                                    1-  135     ;	udata_ovr
                                    1-  136     ;--------------------------------------------------------
                                    1-  137     ; code
                                    1-  138     ;--------------------------------------------------------
                                    1-  139     ;***
                                    1-  140     ;  pBlock Stats: dbName = C
                                    1-  141     ;***
                                    1-  142     ;has an exit
                                    1-  143     ;functions called:
                                    1-  144     ;   _Start24C02
                                    1-  145     ;   _SendByte
                                    1-  146     ;   _RecvAck
                                    1-  147     ;   _SendByte
                                    1-  148     ;   _RecvAck
                                    1-  149     ;   _SendByte
                                    1-  150     ;   _RecvAck
                                    1-  151     ;   _Stop24C02
                                    1-  152     ;   _Start24C02
                                    1-  153     ;   _SendByte
                                    1-  154     ;   _RecvAck
                                    1-  155     ;   _SendByte
                                    1-  156     ;   _RecvAck
                                    1-  157     ;   _SendByte
                                    1-  158     ;   _RecvAck
                                    1-  159     ;   _Stop24C02
                                    1-  160     ;1 compiler assigned register :
                                    1-  161     ;   r0x1002
                                    1-  162     ;; Starting pCode block
                                    1-  163     .segment "code"; module=eeprom, function=_writeWordStep
                                    1-  165     ;local variable name mapping:
     0000                           1-  167     _writeWordStep:
                                    1-  168     ; 2 exit points
                                    1-  169     	.line	128, "eeprom.c"; 	void writeWordStep(u8t workStep)
                                    1-  170     	BANKSEL	r0x1002
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  171     	MOVAR	r0x1002
                                    1-  172     	.line	130, "eeprom.c"; 	BPHCON &= 0x7F;	//打开PB7的上拉电阻(SDA)
     0002 1Frr                      1-  173     	BCR	_BPHCON,7
                                    1-  174     	.line	131, "eeprom.c"; 	SCL = 0;
                                    1-  175     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 1Crr                      1-  176     	BCR	_PORTA,0
                                    1-  177     	.line	133, "eeprom.c"; 	Start24C02();
     0005 2rrr                      1-  178     	LCALL	_Start24C02
                                    1-  179     	.line	134, "eeprom.c"; 	SendByte(0xA0);		//发送器件地址和写动作
     0006 21A0                      1-  180     	MOVIA	0xa0
     0007 2rrr                      1-  181     	LCALL	_SendByte
                                    1-  182     	.line	135, "eeprom.c"; 	RecvAck();
     0008 2rrr                      1-  183     	LCALL	_RecvAck
                                    1-  184     	.line	136, "eeprom.c"; 	SendByte(0X00);		//发送写地址
     0009 2100                      1-  185     	MOVIA	0x00
     000A 2rrr                      1-  186     	LCALL	_SendByte
                                    1-  187     	.line	137, "eeprom.c"; 	RecvAck();
     000B 2rrr                      1-  188     	LCALL	_RecvAck
                                    1-  189     	.line	138, "eeprom.c"; 	SendByte(workStep);		//发送数据到地址
                                    1-  190     	BANKSEL	r0x1002
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  191     	MOVR	r0x1002,W
     000E 2rrr                      1-  192     	LCALL	_SendByte
                                    1-  193     	.line	139, "eeprom.c"; 	RecvAck();
     000F 2rrr                      1-  194     	LCALL	_RecvAck
                                    1-  195     	.line	140, "eeprom.c"; 	Stop24C02();
     0010 2rrr                      1-  196     	LCALL	_Stop24C02
                                    1-  197     	.line	141, "eeprom.c"; 	}
                                    1-  198     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1-  199     ; exit point of _writeWordStep
                                    1-  201     ;***
                                    1-  202     ;  pBlock Stats: dbName = C
                                    1-  203     ;***
                                    1-  204     ;has an exit
                                    1-  205     ;functions called:
                                    1-  206     ;   _Start24C02
                                    1-  207     ;   _SendByte
                                    1-  208     ;   _RecvAck
                                    1-  209     ;   _SendByte
                                    1-  210     ;   _RecvAck
                                    1-  211     ;   _Start24C02
                                    1-  212     ;   _SendByte
                                    1-  213     ;   _RecvAck
                                    1-  214     ;   _ReadByte
                                    1-  215     ;   __gptrput1
                                    1-  216     ;   _SendNoAck
                                    1-  217     ;   _Stop24C02
                                    1-  218     ;   __gptrget1
                                    1-  219     ;   __gptrput1
                                    1-  220     ;   _Start24C02
                                    1-  221     ;   _SendByte
                                    1-  222     ;   _RecvAck
                                    1-  223     ;   _SendByte
                                    1-  224     ;   _RecvAck
                                    1-  225     ;   _Start24C02
                                    1-  226     ;   _SendByte
                                    1-  227     ;   _RecvAck
                                    1-  228     ;   _ReadByte
                                    1-  229     ;   __gptrput1
                                    1-  230     ;   _SendNoAck
                                    1-  231     ;   _Stop24C02
                                    1-  232     ;   __gptrget1
                                    1-  233     ;   __gptrput1
                                    1-  234     ;7 compiler assigned registers:
                                    1-  235     ;   r0x1007
                                    1-  236     ;   STK00
                                    1-  237     ;   r0x1008
                                    1-  238     ;   STK01
                                    1-  239     ;   r0x1009
                                    1-  240     ;   r0x100A
                                    1-  241     ;   STK02
                                    1-  242     ;; Starting pCode block
                                    1-  243     .segment "code"; module=eeprom, function=_readWordStep
                                    1-  245     ;local variable name mapping:
     0000                           1-  249     _readWordStep:
                                    1-  250     ; 2 exit points
                                    1-  251     	.line	109, "eeprom.c"; 	void readWordStep(unsigned char *workStep)
                                    1-  252     	BANKSEL	r0x1007
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  253     	MOVAR	r0x1007
     0002 01rr                      1-  254     	MOVR	STK00,W
                                    1-  255     	BANKSEL	r0x1008
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  256     	MOVAR	r0x1008
     0005 01rr                      1-  257     	MOVR	STK01,W
                                    1-  258     	BANKSEL	r0x1009
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  259     	MOVAR	r0x1009
                                    1-  260     	.line	111, "eeprom.c"; 	BPHCON &= 0x7F;	//打开PB7的上拉电阻(SDA)
     0008 1Frr                      1-  261     	BCR	_BPHCON,7
                                    1-  262     	.line	112, "eeprom.c"; 	SCL = 0;
                                    1-  263     	BANKSEL	_PORTA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 1Crr                      1-  264     	BCR	_PORTA,0
                                    1-  265     	.line	113, "eeprom.c"; 	Start24C02();
     000B 2rrr                      1-  266     	LCALL	_Start24C02
                                    1-  267     	.line	114, "eeprom.c"; 	SendByte(0xA0);		//发送器件地址和写动作
     000C 21A0                      1-  268     	MOVIA	0xa0
     000D 2rrr                      1-  269     	LCALL	_SendByte
                                    1-  270     	.line	115, "eeprom.c"; 	RecvAck();
     000E 2rrr                      1-  271     	LCALL	_RecvAck
                                    1-  272     	.line	116, "eeprom.c"; 	SendByte(0X00);		//发送读地址
     000F 2100                      1-  273     	MOVIA	0x00
     0010 2rrr                      1-  274     	LCALL	_SendByte
                                    1-  275     	.line	117, "eeprom.c"; 	RecvAck();
     0011 2rrr                      1-  276     	LCALL	_RecvAck
                                    1-  277     	.line	118, "eeprom.c"; 	Start24C02();
     0012 2rrr                      1-  278     	LCALL	_Start24C02
                                    1-  279     	.line	119, "eeprom.c"; 	SendByte(0xA1);		//发送器件地址和读动作
     0013 21A1                      1-  280     	MOVIA	0xa1
     0014 2rrr                      1-  281     	LCALL	_SendByte
                                    1-  282     	.line	120, "eeprom.c"; 	RecvAck();
     0015 2rrr                      1-  283     	LCALL	_RecvAck
                                    1-  284     	.line	121, "eeprom.c"; 	*workStep = ReadByte();
     0016 2rrr                      1-  285     	LCALL	_ReadByte
                                    1-  286     	BANKSEL	r0x100A
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1-  287     	MOVAR	r0x100A
     0019 00rr                      1-  288     	MOVAR	STK02
                                    1-  289     	BANKSEL	r0x1009
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  290     	MOVR	r0x1009,W
     001C 00rr                      1-  291     	MOVAR	STK01
                                    1-  292     	BANKSEL	r0x1008
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  293     	MOVR	r0x1008,W
     001F 00rr                      1-  294     	MOVAR	STK00
                                    1-  295     	BANKSEL	r0x1007
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  296     	MOVR	r0x1007,W
     0022 2rrr                      1-  297     	LCALL	__gptrput1
                                    1-  298     	.line	122, "eeprom.c"; 	SendNoAck();
     0023 2rrr                      1-  299     	LCALL	_SendNoAck
                                    1-  300     	.line	123, "eeprom.c"; 	Stop24C02();
     0024 2rrr                      1-  301     	LCALL	_Stop24C02
                                    1-  302     	.line	124, "eeprom.c"; 	if(*workStep >= 19 || *workStep == 0)
                                    1-  303     	BANKSEL	r0x1009
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1-  304     	MOVR	r0x1009,W
     0027 00rr                      1-  305     	MOVAR	STK01
                                    1-  306     	BANKSEL	r0x1008
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1-  307     	MOVR	r0x1008,W
     002A 00rr                      1-  308     	MOVAR	STK00
                                    1-  309     	BANKSEL	r0x1007
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1-  310     	MOVR	r0x1007,W
     002D 2rrr                      1-  311     	LCALL	__gptrget1
                                    1-  312     	BANKSEL	r0x100A
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1-  313     	MOVAR	r0x100A
                                    1-  314     ;;unsigned compare: left < lit (0x13=19), size=1
     0030 2113                      1-  315     	MOVIA	0x13
     0031 04rr                      1-  316     	SUBAR	r0x100A,W
     0032 0C03                      1-  317     	BTRSC	STATUS,0
     0033 3rrr                      1-  318     	LGOTO	_00153_DS_
     0034 01rr                      1-  319     	MOVR	r0x100A,W
     0035 0903                      1-  320     	BTRSS	STATUS,2
     0036 3rrr                      1-  321     	LGOTO	_00156_DS_
     0037                           1-  322     _00153_DS_:
                                    1-  323     	.line	125, "eeprom.c"; 	*workStep = 1;
     0037 2101                      1-  324     	MOVIA	0x01
     0038 00rr                      1-  325     	MOVAR	STK02
                                    1-  326     	BANKSEL	r0x1009
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  327     	MOVR	r0x1009,W
     003B 00rr                      1-  328     	MOVAR	STK01
                                    1-  329     	BANKSEL	r0x1008
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1-  330     	MOVR	r0x1008,W
     003E 00rr                      1-  331     	MOVAR	STK00
                                    1-  332     	BANKSEL	r0x1007
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1-  333     	MOVR	r0x1007,W
     0041 2rrr                      1-  334     	LCALL	__gptrput1
     0042                           1-  335     _00156_DS_:
                                    1-  336     	.line	126, "eeprom.c"; 	}
                                    1-  337     	RETURN	
     0042 0010                      3-   26 m1      ret
                                    1-  338     ; exit point of _readWordStep
                                    1-  340     ;***
                                    1-  341     ;  pBlock Stats: dbName = C
                                    1-  342     ;***
                                    1-  343     ;has an exit
                                    1-  344     ;functions called:
                                    1-  345     ;   _SDAInput
                                    1-  346     ;   _Delay10Us
                                    1-  347     ;   _Delay10Us
                                    1-  348     ;   _SDAOutput
                                    1-  349     ;   _SDAInput
                                    1-  350     ;   _Delay10Us
                                    1-  351     ;   _Delay10Us
                                    1-  352     ;   _SDAOutput
                                    1-  353     ;4 compiler assigned registers:
                                    1-  354     ;   r0x1003
                                    1-  355     ;   r0x1004
                                    1-  356     ;   r0x1005
                                    1-  357     ;   r0x1006
                                    1-  358     ;; Starting pCode block
                                    1-  359     .segment "code"; module=eeprom, function=_ReadByte
                                    1-  361     ;local variable name mapping:
     0000                           1-  364     _ReadByte:
                                    1-  365     ; 2 exit points
                                    1-  366     	.line	92, "eeprom.c"; 	u8t data=0;
                                    1-  367     	BANKSEL	r0x1003
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  368     	CLRR	r0x1003
                                    1-  369     	.line	93, "eeprom.c"; 	SDAInput();
     0002 2rrr                      1-  370     	LCALL	_SDAInput
                                    1-  371     	.line	95, "eeprom.c"; 	for(u8t i=8;i>0;i--){
     0003 2108                      1-  372     	MOVIA	0x08
                                    1-  373     	BANKSEL	r0x1004
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  374     	MOVAR	r0x1004
     0006                           1-  375     _00148_DS_:
                                    1-  376     	BANKSEL	r0x1004
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1-  377     	MOVR	r0x1004,W
     0008 0D03                      1-  378     	BTRSC	STATUS,2
     0009 3rrr                      1-  379     	LGOTO	_00146_DS_
                                    1-  380     	.line	96, "eeprom.c"; 	SCL = 1;
                                    1-  381     	BANKSEL	_PORTA
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 18rr                      1-  382     	BSR	_PORTA,0
                                    1-  383     	.line	97, "eeprom.c"; 	Delay10Us();
     000C 2rrr                      1-  384     	LCALL	_Delay10Us
                                    1-  385     	.line	98, "eeprom.c"; 	data = data<<1;
     000D 1C03                      1-  386     	BCR	STATUS,0
                                    1-  387     	BANKSEL	r0x1003
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 14rr                      1-  388     	RLR	r0x1003,F
                                    1-  389     	.line	99, "eeprom.c"; 	data |= SDA;
     0010 01rr                      1-  390     	MOVR	r0x1003,W
                                    1-  391     	BANKSEL	r0x1005
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1-  392     	MOVAR	r0x1005
                                    1-  393     	BANKSEL	r0x1006
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1-  394     	CLRR	r0x1006
                                    1-  395     	BANKSEL	_PORTB
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 0Brr                      1-  396     	BTRSS	_PORTB,7
     0017 3rrr                      1-  397     	LGOTO	_00001_DS_
                                    1-  398     	BANKSEL	r0x1006
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 05rr                      1-  399     	INCR	r0x1006,F
     001A                           1-  400     _00001_DS_:
                                    1-  401     	BANKSEL	r0x1006
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  402     	MOVR	r0x1006,W
                                    1-  403     	BANKSEL	r0x1005
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 11rr                      1-  404     	IORAR	r0x1005,W
                                    1-  405     	BANKSEL	r0x1003
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  406     	MOVAR	r0x1003
                                    1-  407     	.line	100, "eeprom.c"; 	SCL = 0;
                                    1-  408     	BANKSEL	_PORTA
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 1Crr                      1-  409     	BCR	_PORTA,0
                                    1-  410     	.line	101, "eeprom.c"; 	Delay10Us();
     0022 2rrr                      1-  411     	LCALL	_Delay10Us
                                    1-  412     	.line	95, "eeprom.c"; 	for(u8t i=8;i>0;i--){
                                    1-  413     	BANKSEL	r0x1004
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 06rr                      1-  414     	DECR	r0x1004,F
     0025 3rrr                      1-  415     	LGOTO	_00148_DS_
     0026                           1-  416     _00146_DS_:
                                    1-  417     	.line	103, "eeprom.c"; 	SDAOutput();
     0026 2rrr                      1-  418     	LCALL	_SDAOutput
                                    1-  419     	.line	104, "eeprom.c"; 	return	data;
                                    1-  420     	BANKSEL	r0x1003
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  421     	MOVR	r0x1003,W
                                    1-  422     	.line	105, "eeprom.c"; 	}
                                    1-  423     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1-  424     ; exit point of _ReadByte
                                    1-  426     ;***
                                    1-  427     ;  pBlock Stats: dbName = C
                                    1-  428     ;***
                                    1-  429     ;has an exit
                                    1-  430     ;functions called:
                                    1-  431     ;   _Delay10Us
                                    1-  432     ;   _Delay10Us
                                    1-  433     ;   _Delay10Us
                                    1-  434     ;   _Delay10Us
                                    1-  435     ;   _Delay10Us
                                    1-  436     ;   _Delay10Us
                                    1-  437     ;2 compiler assigned registers:
                                    1-  438     ;   r0x1000
                                    1-  439     ;   r0x1001
                                    1-  440     ;; Starting pCode block
                                    1-  441     .segment "code"; module=eeprom, function=_SendByte
                                    1-  443     ;local variable name mapping:
     0000                           1-  446     _SendByte:
                                    1-  447     ; 2 exit points
                                    1-  448     	.line	79, "eeprom.c"; 	void SendByte(u8t data){
                                    1-  449     	BANKSEL	r0x1000
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  450     	MOVAR	r0x1000
                                    1-  451     	.line	80, "eeprom.c"; 	for(u8t i=8;i>0;i--){
     0002 2108                      1-  452     	MOVIA	0x08
                                    1-  453     	BANKSEL	r0x1001
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  454     	MOVAR	r0x1001
     0005                           1-  455     _00139_DS_:
                                    1-  456     	BANKSEL	r0x1001
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1-  457     	MOVR	r0x1001,W
     0007 0D03                      1-  458     	BTRSC	STATUS,2
     0008 3rrr                      1-  459     	LGOTO	_00141_DS_
                                    1-  460     	.line	81, "eeprom.c"; 	data = data<<1;
     0009 1C03                      1-  461     	BCR	STATUS,0
                                    1-  462     	BANKSEL	r0x1000
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 14rr                      1-  463     	RLR	r0x1000,F
                                    1-  464     	.line	82, "eeprom.c"; 	SDA = C;
     000C 0C03                      1-  465     	BTRSC	STATUS,0
     000D 3rrr                      1-  466     	LGOTO	_00002_DS_
                                    1-  467     	BANKSEL	_PORTB
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 1Frr                      1-  468     	BCR	_PORTB,7
     0010                           1-  469     _00002_DS_:
     0010 0803                      1-  470     	BTRSS	STATUS,0
     0011 3rrr                      1-  471     	LGOTO	_00003_DS_
                                    1-  472     	BANKSEL	_PORTB
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 1Brr                      1-  473     	BSR	_PORTB,7
     0014                           1-  474     _00003_DS_:
                                    1-  475     	.line	83, "eeprom.c"; 	Delay10Us();
     0014 2rrr                      1-  476     	LCALL	_Delay10Us
                                    1-  477     	.line	84, "eeprom.c"; 	SCL = 1;
                                    1-  478     	BANKSEL	_PORTA
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 18rr                      1-  479     	BSR	_PORTA,0
                                    1-  480     	.line	85, "eeprom.c"; 	Delay10Us();
     0017 2rrr                      1-  481     	LCALL	_Delay10Us
                                    1-  482     	.line	86, "eeprom.c"; 	SCL = 0;
                                    1-  483     	BANKSEL	_PORTA
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 1Crr                      1-  484     	BCR	_PORTA,0
                                    1-  485     	.line	87, "eeprom.c"; 	Delay10Us();
     001A 2rrr                      1-  486     	LCALL	_Delay10Us
                                    1-  487     	.line	80, "eeprom.c"; 	for(u8t i=8;i>0;i--){
                                    1-  488     	BANKSEL	r0x1001
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 06rr                      1-  489     	DECR	r0x1001,F
     001D 3rrr                      1-  490     	LGOTO	_00139_DS_
     001E                           1-  491     _00141_DS_:
                                    1-  492     	.line	89, "eeprom.c"; 	}
                                    1-  493     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1-  494     ; exit point of _SendByte
                                    1-  496     ;***
                                    1-  497     ;  pBlock Stats: dbName = C
                                    1-  498     ;***
                                    1-  499     ;has an exit
                                    1-  500     ;functions called:
                                    1-  501     ;   _SDAInput
                                    1-  502     ;   _Delay10Us
                                    1-  503     ;   _Delay10Us
                                    1-  504     ;   _Delay10Us
                                    1-  505     ;   _SDAOutput
                                    1-  506     ;   _Delay10Us
                                    1-  507     ;   _SDAInput
                                    1-  508     ;   _Delay10Us
                                    1-  509     ;   _Delay10Us
                                    1-  510     ;   _Delay10Us
                                    1-  511     ;   _SDAOutput
                                    1-  512     ;   _Delay10Us
                                    1-  513     ;; Starting pCode block
                                    1-  514     .segment "code"; module=eeprom, function=_RecvAck
     0000                           1-  516     _RecvAck:
                                    1-  517     ; 2 exit points
                                    1-  518     	.line	68, "eeprom.c"; 	SDAInput();
     0000 2rrr                      1-  519     	LCALL	_SDAInput
                                    1-  520     	.line	69, "eeprom.c"; 	Delay10Us();
     0001 2rrr                      1-  521     	LCALL	_Delay10Us
                                    1-  522     	.line	70, "eeprom.c"; 	SCL = 1;
                                    1-  523     	BANKSEL	_PORTA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 18rr                      1-  524     	BSR	_PORTA,0
                                    1-  525     	.line	71, "eeprom.c"; 	Delay10Us();
     0004 2rrr                      1-  526     	LCALL	_Delay10Us
                                    1-  527     	.line	72, "eeprom.c"; 	SCL = 0;
                                    1-  528     	BANKSEL	_PORTA
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 1Crr                      1-  529     	BCR	_PORTA,0
                                    1-  530     	.line	73, "eeprom.c"; 	Delay10Us();
     0007 2rrr                      1-  531     	LCALL	_Delay10Us
                                    1-  532     	.line	74, "eeprom.c"; 	SDAOutput();
     0008 2rrr                      1-  533     	LCALL	_SDAOutput
                                    1-  534     	.line	75, "eeprom.c"; 	SDA = 0;
                                    1-  535     	BANKSEL	_PORTB
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 1Frr                      1-  536     	BCR	_PORTB,7
                                    1-  537     	.line	76, "eeprom.c"; 	Delay10Us();
     000B 2rrr                      1-  538     	LCALL	_Delay10Us
                                    1-  539     	.line	77, "eeprom.c"; 	}
                                    1-  540     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1-  541     ; exit point of _RecvAck
                                    1-  543     ;***
                                    1-  544     ;  pBlock Stats: dbName = C
                                    1-  545     ;***
                                    1-  546     ;has an exit
                                    1-  547     ;functions called:
                                    1-  548     ;   _Delay10Us
                                    1-  549     ;   _Delay10Us
                                    1-  550     ;   _Delay10Us
                                    1-  551     ;   _Delay10Us
                                    1-  552     ;   _Delay10Us
                                    1-  553     ;   _Delay10Us
                                    1-  554     ;; Starting pCode block
                                    1-  555     .segment "code"; module=eeprom, function=_SendNoAck
     0000                           1-  557     _SendNoAck:
                                    1-  558     ; 2 exit points
                                    1-  559     	.line	59, "eeprom.c"; 	SDA = 1;
                                    1-  560     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Brr                      1-  561     	BSR	_PORTB,7
                                    1-  562     	.line	60, "eeprom.c"; 	Delay10Us();
     0002 2rrr                      1-  563     	LCALL	_Delay10Us
                                    1-  564     	.line	61, "eeprom.c"; 	SCL = 1;
                                    1-  565     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 18rr                      1-  566     	BSR	_PORTA,0
                                    1-  567     	.line	62, "eeprom.c"; 	Delay10Us();
     0005 2rrr                      1-  568     	LCALL	_Delay10Us
                                    1-  569     	.line	63, "eeprom.c"; 	SCL = 0;
                                    1-  570     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Crr                      1-  571     	BCR	_PORTA,0
                                    1-  572     	.line	64, "eeprom.c"; 	Delay10Us();
     0008 2rrr                      1-  573     	LCALL	_Delay10Us
                                    1-  574     	.line	65, "eeprom.c"; 	}
                                    1-  575     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1-  576     ; exit point of _SendNoAck
                                    1-  578     ;***
                                    1-  579     ;  pBlock Stats: dbName = C
                                    1-  580     ;***
                                    1-  581     ;has an exit
                                    1-  582     ;functions called:
                                    1-  583     ;   _Delay10Us
                                    1-  584     ;   _Delay10Us
                                    1-  585     ;   _Delay10Us
                                    1-  586     ;   _Delay10Us
                                    1-  587     ;   _Delay10Us
                                    1-  588     ;   _Delay10Us
                                    1-  589     ;; Starting pCode block
                                    1-  590     .segment "code"; module=eeprom, function=_SendAck
     0000                           1-  592     _SendAck:
                                    1-  593     ; 2 exit points
                                    1-  594     	.line	50, "eeprom.c"; 	SDA = 0;
                                    1-  595     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Frr                      1-  596     	BCR	_PORTB,7
                                    1-  597     	.line	51, "eeprom.c"; 	Delay10Us();
     0002 2rrr                      1-  598     	LCALL	_Delay10Us
                                    1-  599     	.line	52, "eeprom.c"; 	SCL = 1;
                                    1-  600     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 18rr                      1-  601     	BSR	_PORTA,0
                                    1-  602     	.line	53, "eeprom.c"; 	Delay10Us();
     0005 2rrr                      1-  603     	LCALL	_Delay10Us
                                    1-  604     	.line	54, "eeprom.c"; 	SCL = 0;
                                    1-  605     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Crr                      1-  606     	BCR	_PORTA,0
                                    1-  607     	.line	55, "eeprom.c"; 	Delay10Us();
     0008 2rrr                      1-  608     	LCALL	_Delay10Us
                                    1-  609     	.line	56, "eeprom.c"; 	}
                                    1-  610     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1-  611     ; exit point of _SendAck
                                    1-  613     ;***
                                    1-  614     ;  pBlock Stats: dbName = C
                                    1-  615     ;***
                                    1-  616     ;has an exit
                                    1-  617     ;functions called:
                                    1-  618     ;   _Delay10Us
                                    1-  619     ;   _Delay10Us
                                    1-  620     ;   _Delay10Us
                                    1-  621     ;   _Delay10Us
                                    1-  622     ;   _Delay10Us
                                    1-  623     ;   _Delay10Us
                                    1-  624     ;; Starting pCode block
                                    1-  625     .segment "code"; module=eeprom, function=_Stop24C02
     0000                           1-  627     _Stop24C02:
                                    1-  628     ; 2 exit points
                                    1-  629     	.line	41, "eeprom.c"; 	SDA = 0;
                                    1-  630     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Frr                      1-  631     	BCR	_PORTB,7
                                    1-  632     	.line	42, "eeprom.c"; 	Delay10Us();
     0002 2rrr                      1-  633     	LCALL	_Delay10Us
                                    1-  634     	.line	43, "eeprom.c"; 	SCL = 1;
                                    1-  635     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 18rr                      1-  636     	BSR	_PORTA,0
                                    1-  637     	.line	44, "eeprom.c"; 	Delay10Us();
     0005 2rrr                      1-  638     	LCALL	_Delay10Us
                                    1-  639     	.line	45, "eeprom.c"; 	SDA = 1;
                                    1-  640     	BANKSEL	_PORTB
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Brr                      1-  641     	BSR	_PORTB,7
                                    1-  642     	.line	46, "eeprom.c"; 	Delay10Us();
     0008 2rrr                      1-  643     	LCALL	_Delay10Us
                                    1-  644     	.line	47, "eeprom.c"; 	}
                                    1-  645     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1-  646     ; exit point of _Stop24C02
                                    1-  648     ;***
                                    1-  649     ;  pBlock Stats: dbName = C
                                    1-  650     ;***
                                    1-  651     ;has an exit
                                    1-  652     ;functions called:
                                    1-  653     ;   _Delay10Us
                                    1-  654     ;   _Delay10Us
                                    1-  655     ;   _Delay10Us
                                    1-  656     ;   _Delay10Us
                                    1-  657     ;   _Delay10Us
                                    1-  658     ;   _Delay10Us
                                    1-  659     ;   _Delay10Us
                                    1-  660     ;   _Delay10Us
                                    1-  661     ;; Starting pCode block
                                    1-  662     .segment "code"; module=eeprom, function=_Start24C02
     0000                           1-  664     _Start24C02:
                                    1-  665     ; 2 exit points
                                    1-  666     	.line	30, "eeprom.c"; 	SDA = 1;
                                    1-  667     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Brr                      1-  668     	BSR	_PORTB,7
                                    1-  669     	.line	31, "eeprom.c"; 	Delay10Us();
     0002 2rrr                      1-  670     	LCALL	_Delay10Us
                                    1-  671     	.line	32, "eeprom.c"; 	SCL = 1;
                                    1-  672     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 18rr                      1-  673     	BSR	_PORTA,0
                                    1-  674     	.line	33, "eeprom.c"; 	Delay10Us();
     0005 2rrr                      1-  675     	LCALL	_Delay10Us
                                    1-  676     	.line	34, "eeprom.c"; 	SDA = 0;
                                    1-  677     	BANKSEL	_PORTB
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Frr                      1-  678     	BCR	_PORTB,7
                                    1-  679     	.line	35, "eeprom.c"; 	Delay10Us();
     0008 2rrr                      1-  680     	LCALL	_Delay10Us
                                    1-  681     	.line	36, "eeprom.c"; 	SCL = 0;
                                    1-  682     	BANKSEL	_PORTA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 1Crr                      1-  683     	BCR	_PORTA,0
                                    1-  684     	.line	37, "eeprom.c"; 	Delay10Us();
     000B 2rrr                      1-  685     	LCALL	_Delay10Us
                                    1-  686     	.line	38, "eeprom.c"; 	}
                                    1-  687     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1-  688     ; exit point of _Start24C02
                                    1-  690     ;***
                                    1-  691     ;  pBlock Stats: dbName = C
                                    1-  692     ;***
                                    1-  693     ;has an exit
                                    1-  694     ;1 compiler assigned register :
                                    1-  695     ;   r0x1000
                                    1-  696     ;; Starting pCode block
                                    1-  697     .segment "code"; module=eeprom, function=_SDAInput
     0000                           1-  699     _SDAInput:
                                    1-  700     ; 2 exit points
                                    1-  701     	.line	24, "eeprom.c"; 	DISI();
     0000 0013                      1-  702     	DISI
                                    1-  703     	.line	25, "eeprom.c"; 	IOSTB |= 0X80;
     0001 001r                      1-  704     	IOSTR	_IOSTB
                                    1-  705     	BANKSEL	r0x1000
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1-  706     	MOVAR	r0x1000
     0004 1Brr                      1-  707     	BSR	r0x1000,7
     0005 01rr                      1-  708     	MOVR	r0x1000,W
     0006 000r                      1-  709     	IOST	_IOSTB
                                    1-  710     	.line	26, "eeprom.c"; 	ENI();
     0007 0004                      1-  711     	ENI
                                    1-  712     	.line	27, "eeprom.c"; 	}
                                    1-  713     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1-  714     ; exit point of _SDAInput
                                    1-  716     ;***
                                    1-  717     ;  pBlock Stats: dbName = C
                                    1-  718     ;***
                                    1-  719     ;has an exit
                                    1-  720     ;1 compiler assigned register :
                                    1-  721     ;   r0x1000
                                    1-  722     ;; Starting pCode block
                                    1-  723     .segment "code"; module=eeprom, function=_SDAOutput
     0000                           1-  725     _SDAOutput:
                                    1-  726     ; 2 exit points
                                    1-  727     	.line	18, "eeprom.c"; 	DISI();
     0000 0013                      1-  728     	DISI
                                    1-  729     	.line	19, "eeprom.c"; 	IOSTB &= 0X7F;
     0001 001r                      1-  730     	IOSTR	_IOSTB
                                    1-  731     	BANKSEL	r0x1000
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1-  732     	MOVAR	r0x1000
     0004 1Frr                      1-  733     	BCR	r0x1000,7
     0005 01rr                      1-  734     	MOVR	r0x1000,W
     0006 000r                      1-  735     	IOST	_IOSTB
                                    1-  736     	.line	20, "eeprom.c"; 	ENI();
     0007 0004                      1-  737     	ENI
                                    1-  738     	.line	21, "eeprom.c"; 	}
                                    1-  739     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1-  740     ; exit point of _SDAOutput
                                    1-  742     ;***
                                    1-  743     ;  pBlock Stats: dbName = C
                                    1-  744     ;***
                                    1-  745     ;has an exit
                                    1-  746     ;; Starting pCode block
                                    1-  747     .segment "code"; module=eeprom, function=_Delay10Us
     0000                           1-  749     _Delay10Us:
                                    1-  750     ; 2 exit points
                                    1-  751     	.line	9, "eeprom.c"; 	NOP();
     0000 0000                      1-  752     	nop
                                    1-  753     	.line	10, "eeprom.c"; 	NOP();
     0001 0000                      1-  754     	nop
                                    1-  755     	.line	11, "eeprom.c"; 	NOP();
     0002 0000                      1-  756     	nop
                                    1-  757     	.line	12, "eeprom.c"; 	NOP();
     0003 0000                      1-  758     	nop
                                    1-  759     	.line	13, "eeprom.c"; 	NOP();
     0004 0000                      1-  760     	nop
                                    1-  761     	.line	14, "eeprom.c"; 	NOP();
     0005 0000                      1-  762     	nop
                                    1-  763     	.line	15, "eeprom.c"; 	}
                                    1-  764     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  765     ; exit point of _Delay10Us
                                    1-  768     ;	code size estimation:
                                    1-  769     ;	  169+   60 =   229 instructions (  578 byte)
                                    1-  771     	end
                                    1-  771     	end

SYMBOL TABLE            TYPE     VALUE
__CHECKSUM_ADDR__       Label    00000000
__gptrget1              Label    00000000
__gptrput1              Label    00000000
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800533
_00001_DS_              Label    0000001A
_00002_DS_              Label    00000010
_00003_DS_              Label    00000014
_00139_DS_              Label    00000005
_00141_DS_              Label    0000001E
_00146_DS_              Label    00000026
_00148_DS_              Label    00000006
_00153_DS_              Label    00000037
_00156_DS_              Label    00000042
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_Delay10Us              Label    00000000
_FSR                    Label    00000000
_INDF                   Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_ReadByte               Label    00000000
_readWordStep           Label    00000000
_RecvAck                Label    00000000
_SDAInput               Label    00000000
_SDAOutput              Label    00000000
_SendAck                Label    00000000
_SendByte               Label    00000000
_SendNoAck              Label    00000000
_Start24C02             Label    00000000
_STATUS                 Label    00000000
_Stop24C02              Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_writeWordStep          Label    00000000
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1000                 Label    00000000
r0x1001                 Label    00000000
r0x1002                 Label    00000000
r0x1003                 Label    00000000
r0x1004                 Label    00000000
r0x1005                 Label    00000000
r0x1006                 Label    00000000
r0x1007                 Label    00000000
r0x1008                 Label    00000000
r0x1009                 Label    00000000
r0x100A                 Label    00000000
SSAVE                   Label    00000000
STATUS                  Constant 00000003
STK00                   Label    00000000
STK01                   Label    00000000
STK02                   Label    00000000
STK03                   Label    00000000
STK04                   Label    00000000
STK05                   Label    00000000
STK06                   Label    00000000
STK07                   Label    00000000
STK08                   Label    00000000
STK09                   Label    00000000
STK10                   Label    00000000
STK11                   Label    00000000
STK12                   Label    00000000
W                       Constant 00000000
WSAVE                   Label    00000000


SOURCE FILE TABLE
001 eeprom.s
002 ny8a053d.inc
003 common.inc
004 eeprom.c

PROCESSOR    = NY8A053D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
