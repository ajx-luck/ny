
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"codeDriver.c"
                                    1-    8     	list	p=NY8A053D,c=on
                                    1-    9     	#include "ny8a053d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_INDF
                                    1-   23     	extern	_TMR0
                                    1-   24     	extern	_PCL
                                    1-   25     	extern	_STATUS
                                    1-   26     	extern	_FSR
                                    1-   27     	extern	_PORTA
                                    1-   28     	extern	_PORTB
                                    1-   29     	extern	_PCON
                                    1-   30     	extern	_BWUCON
                                    1-   31     	extern	_PCHBUF
                                    1-   32     	extern	_ABPLCON
                                    1-   33     	extern	_BPHCON
                                    1-   34     	extern	_INTE
                                    1-   35     	extern	_INTF
                                    1-   36     	extern	_TMR1
                                    1-   37     	extern	_T1CR1
                                    1-   38     	extern	_T1CR2
                                    1-   39     	extern	_PWM1DUTY
                                    1-   40     	extern	_PS1CV
                                    1-   41     	extern	_BZ1CR
                                    1-   42     	extern	_IRCR
                                    1-   43     	extern	_TBHP
                                    1-   44     	extern	_TBHD
                                    1-   45     	extern	_OSCCR
                                    1-   46     	extern	_IOSTA
                                    1-   47     	extern	_IOSTB
                                    1-   48     	extern	_PS0CV
                                    1-   49     	extern	_BODCON
                                    1-   50     	extern	_PCON1
                                    1-   51     	extern	_T0MD
                                    1-   53     	extern PSAVE
                                    1-   54     	extern SSAVE
                                    1-   55     	extern WSAVE
                                    1-   56     	extern STK12
                                    1-   57     	extern STK11
                                    1-   58     	extern STK10
                                    1-   59     	extern STK09
                                    1-   60     	extern STK08
                                    1-   61     	extern STK07
                                    1-   62     	extern STK06
                                    1-   63     	extern STK05
                                    1-   64     	extern STK04
                                    1-   65     	extern STK03
                                    1-   66     	extern STK02
                                    1-   67     	extern STK01
                                    1-   68     	extern STK00
                                    1-   69     ;--------------------------------------------------------
                                    1-   70     ; global declarations
                                    1-   71     ;--------------------------------------------------------
                                    1-   72     	extern	_Delay80us
                                    1-   73     	extern	_sendRGB
                                    1-   74     	extern	_sendtoLast
                                    1-   76     ;--------------------------------------------------------
                                    1-   77     ; global definitions
                                    1-   78     ;--------------------------------------------------------
                                    1-   79     ;--------------------------------------------------------
                                    1-   80     ; absolute symbol definitions
                                    1-   81     ;--------------------------------------------------------
                                    1-   82     ;--------------------------------------------------------
                                    1-   83     ; compiler-defined variables
                                    1-   84     ;--------------------------------------------------------
                                    1-   85     .segment "uninit"
     0000                           1-   86     r0x1005:
                                    1-   87     	.res	1
                                    1-   88     .segment "uninit"
     0000                           1-   89     r0x1006:
                                    1-   90     	.res	1
                                    1-   91     .segment "uninit"
     0000                           1-   92     r0x1007:
                                    1-   93     	.res	1
                                    1-   94     .segment "uninit"
     0000                           1-   95     r0x1008:
                                    1-   96     	.res	1
                                    1-   97     .segment "uninit"
     0000                           1-   98     r0x1009:
                                    1-   99     	.res	1
                                    1-  100     .segment "uninit"
     0000                           1-  101     r0x100A:
                                    1-  102     	.res	1
                                    1-  103     .segment "uninit"
     0000                           1-  104     r0x100B:
                                    1-  105     	.res	1
                                    1-  106     .segment "uninit"
     0000                           1-  107     r0x100D:
                                    1-  108     	.res	1
                                    1-  109     .segment "uninit"
     0000                           1-  110     r0x1001:
                                    1-  111     	.res	1
                                    1-  112     .segment "uninit"
     0000                           1-  113     r0x1002:
                                    1-  114     	.res	1
                                    1-  115     .segment "uninit"
     0000                           1-  116     r0x1003:
                                    1-  117     	.res	1
                                    1-  118     .segment "uninit"
     0000                           1-  119     r0x1004:
                                    1-  120     	.res	1
                                    1-  121     .segment "uninit"
     0000                           1-  122     r0x1000:
                                    1-  123     	.res	1
                                    1-  124     ;--------------------------------------------------------
                                    1-  125     ; initialized data
                                    1-  126     ;--------------------------------------------------------
                                    1-  127     ;--------------------------------------------------------
                                    1-  128     ; overlayable items in internal ram 
                                    1-  129     ;--------------------------------------------------------
                                    1-  130     ;	udata_ovr
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ; code
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     ;***
                                    1-  135     ;  pBlock Stats: dbName = C
                                    1-  136     ;***
                                    1-  137     ;has an exit
                                    1-  138     ;1 compiler assigned register :
                                    1-  139     ;   r0x1000
                                    1-  140     ;; Starting pCode block
                                    1-  141     .segment "code"; module=codeDriver, function=_Delay80us
                                    1-  143     ;local variable name mapping:
     0000                           1-  145     _Delay80us:
                                    1-  146     ; 2 exit points
                                    1-  147     	.line	76, "codeDriver.c"; 	for(unsigned char i=0;i<80;i++)
                                    1-  148     	BANKSEL	r0x1000
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  149     	CLRR	r0x1000
                                    1-  150     ;;unsigned compare: left < lit (0x50=80), size=1
     0002                           1-  151     _00147_DS_:
     0002 2150                      1-  152     	MOVIA	0x50
                                    1-  153     	BANKSEL	r0x1000
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 04rr                      1-  154     	SUBAR	r0x1000,W
     0005 0C03                      1-  155     	BTRSC	STATUS,0
     0006 3rrr                      1-  156     	LGOTO	_00149_DS_
                                    1-  157     	.line	77, "codeDriver.c"; 	NOP();
     0007 0000                      1-  158     	nop
                                    1-  159     	.line	76, "codeDriver.c"; 	for(unsigned char i=0;i<80;i++)
                                    1-  160     	BANKSEL	r0x1000
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 05rr                      1-  161     	INCR	r0x1000,F
     000A 3rrr                      1-  162     	LGOTO	_00147_DS_
     000B                           1-  163     _00149_DS_:
                                    1-  164     	.line	78, "codeDriver.c"; 	}
                                    1-  165     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1-  166     ; exit point of _Delay80us
                                    1-  168     ;***
                                    1-  169     ;  pBlock Stats: dbName = C
                                    1-  170     ;***
                                    1-  171     ;has an exit
                                    1-  172     ;6 compiler assigned registers:
                                    1-  173     ;   r0x1001
                                    1-  174     ;   STK00
                                    1-  175     ;   r0x1002
                                    1-  176     ;   STK01
                                    1-  177     ;   r0x1003
                                    1-  178     ;   r0x1004
                                    1-  179     ;; Starting pCode block
                                    1-  180     .segment "code"; module=codeDriver, function=_sendRGB
                                    1-  182     ;local variable name mapping:
     0000                           1-  187     _sendRGB:
                                    1-  188     ; 2 exit points
                                    1-  189     	.line	23, "codeDriver.c"; 	void sendRGB(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1-  190     	BANKSEL	r0x1001
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  191     	MOVAR	r0x1001
     0002 01rr                      1-  192     	MOVR	STK00,W
                                    1-  193     	BANKSEL	r0x1002
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  194     	MOVAR	r0x1002
     0005 01rr                      1-  195     	MOVR	STK01,W
                                    1-  196     	BANKSEL	r0x1003
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  197     	MOVAR	r0x1003
                                    1-  198     	.line	26, "codeDriver.c"; 	for(i=8;i>0;i--)
     0008 2108                      1-  199     	MOVIA	0x08
                                    1-  200     	BANKSEL	r0x1004
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  201     	MOVAR	r0x1004
     000B                           1-  202     _00135_DS_:
                                    1-  203     	.line	28, "codeDriver.c"; 	colorR = colorR<<1;
     000B 1C03                      1-  204     	BCR	STATUS,0
                                    1-  205     	BANKSEL	r0x1001
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 14rr                      1-  206     	RLR	r0x1001,F
                                    1-  207     	.line	29, "codeDriver.c"; 	if(D)
     000E 0803                      1-  208     	BTRSS	STATUS,0
     000F 3rrr                      1-  209     	LGOTO	_00124_DS_
                                    1-  210     	.line	31, "codeDriver.c"; 	PB0 = 0;
                                    1-  211     	BANKSEL	_PORTB
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 1Crr                      1-  212     	BCR	_PORTB,0
                                    1-  213     	.line	32, "codeDriver.c"; 	PB0 = 1;
     0012 18rr                      1-  214     	BSR	_PORTB,0
     0013 3rrr                      1-  215     	LGOTO	_00136_DS_
     0014                           1-  216     _00124_DS_:
                                    1-  217     	.line	36, "codeDriver.c"; 	PB0 = 1;
                                    1-  218     	BANKSEL	_PORTB
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 18rr                      1-  219     	BSR	_PORTB,0
                                    1-  220     	.line	37, "codeDriver.c"; 	PB0 = 0;
     0016 1Crr                      1-  221     	BCR	_PORTB,0
     0017                           1-  222     _00136_DS_:
                                    1-  223     	.line	26, "codeDriver.c"; 	for(i=8;i>0;i--)
                                    1-  224     	BANKSEL	r0x1004
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 17rr                      1-  225     	DECRSZ	r0x1004,F
     0019 3rrr                      1-  226     	LGOTO	_00135_DS_
                                    1-  227     	.line	41, "codeDriver.c"; 	for(i=8;i>0;i--)
     001A 2108                      1-  228     	MOVIA	0x08
                                    1-  229     	BANKSEL	r0x1001
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  230     	MOVAR	r0x1001
     001D                           1-  231     _00137_DS_:
                                    1-  232     	.line	43, "codeDriver.c"; 	colorG = colorG<<1;
     001D 1C03                      1-  233     	BCR	STATUS,0
                                    1-  234     	BANKSEL	r0x1002
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 14rr                      1-  235     	RLR	r0x1002,F
                                    1-  236     	.line	44, "codeDriver.c"; 	if(D)
     0020 0803                      1-  237     	BTRSS	STATUS,0
     0021 3rrr                      1-  238     	LGOTO	_00128_DS_
                                    1-  239     	.line	46, "codeDriver.c"; 	PB0 = 0;
                                    1-  240     	BANKSEL	_PORTB
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 1Crr                      1-  241     	BCR	_PORTB,0
                                    1-  242     	.line	47, "codeDriver.c"; 	PB0 = 1;
     0024 18rr                      1-  243     	BSR	_PORTB,0
     0025 3rrr                      1-  244     	LGOTO	_00138_DS_
     0026                           1-  245     _00128_DS_:
                                    1-  246     	.line	51, "codeDriver.c"; 	PB0 = 1;
                                    1-  247     	BANKSEL	_PORTB
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 18rr                      1-  248     	BSR	_PORTB,0
                                    1-  249     	.line	52, "codeDriver.c"; 	PB0 = 0;
     0028 1Crr                      1-  250     	BCR	_PORTB,0
     0029                           1-  251     _00138_DS_:
                                    1-  252     	.line	41, "codeDriver.c"; 	for(i=8;i>0;i--)
                                    1-  253     	BANKSEL	r0x1001
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 17rr                      1-  254     	DECRSZ	r0x1001,F
     002B 3rrr                      1-  255     	LGOTO	_00137_DS_
                                    1-  256     	.line	56, "codeDriver.c"; 	for(i=8;i>0;i--)
     002C 2108                      1-  257     	MOVIA	0x08
     002D 00rr                      1-  258     	MOVAR	r0x1001
     002E                           1-  259     _00139_DS_:
                                    1-  260     	.line	58, "codeDriver.c"; 	colorB = colorB<<1;
     002E 1C03                      1-  261     	BCR	STATUS,0
                                    1-  262     	BANKSEL	r0x1003
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 14rr                      1-  263     	RLR	r0x1003,F
                                    1-  264     	.line	59, "codeDriver.c"; 	if(D)
     0031 0803                      1-  265     	BTRSS	STATUS,0
     0032 3rrr                      1-  266     	LGOTO	_00132_DS_
                                    1-  267     	.line	61, "codeDriver.c"; 	PB0 = 0;
                                    1-  268     	BANKSEL	_PORTB
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 1Crr                      1-  269     	BCR	_PORTB,0
                                    1-  270     	.line	62, "codeDriver.c"; 	PB0 = 1;
     0035 18rr                      1-  271     	BSR	_PORTB,0
     0036 3rrr                      1-  272     	LGOTO	_00140_DS_
     0037                           1-  273     _00132_DS_:
                                    1-  274     	.line	66, "codeDriver.c"; 	PB0 = 1;
                                    1-  275     	BANKSEL	_PORTB
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 18rr                      1-  276     	BSR	_PORTB,0
                                    1-  277     	.line	67, "codeDriver.c"; 	PB0 = 0;
     0039 1Crr                      1-  278     	BCR	_PORTB,0
     003A                           1-  279     _00140_DS_:
                                    1-  280     	.line	56, "codeDriver.c"; 	for(i=8;i>0;i--)
                                    1-  281     	BANKSEL	r0x1001
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 17rr                      1-  282     	DECRSZ	r0x1001,F
     003C 3rrr                      1-  283     	LGOTO	_00139_DS_
                                    1-  284     	.line	70, "codeDriver.c"; 	PB0 = 0;
                                    1-  285     	BANKSEL	_PORTB
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 1Crr                      1-  286     	BCR	_PORTB,0
                                    1-  287     	.line	71, "codeDriver.c"; 	}
                                    1-  288     	RETURN	
     003F 0010                      3-   26 m1      ret
                                    1-  289     ; exit point of _sendRGB
                                    1-  291     ;***
                                    1-  292     ;  pBlock Stats: dbName = C
                                    1-  293     ;***
                                    1-  294     ;has an exit
                                    1-  295     ;functions called:
                                    1-  296     ;   _sendRGB
                                    1-  297     ;   _Delay80us
                                    1-  298     ;   _sendRGB
                                    1-  299     ;   _Delay80us
                                    1-  300     ;12 compiler assigned registers:
                                    1-  301     ;   r0x1005
                                    1-  302     ;   STK00
                                    1-  303     ;   r0x1006
                                    1-  304     ;   STK01
                                    1-  305     ;   r0x1007
                                    1-  306     ;   STK02
                                    1-  307     ;   r0x1008
                                    1-  308     ;   r0x1009
                                    1-  309     ;   r0x100A
                                    1-  310     ;   r0x100B
                                    1-  311     ;   r0x100C
                                    1-  312     ;   r0x100D
                                    1-  313     ;; Starting pCode block
                                    1-  314     .segment "code"; module=codeDriver, function=_sendtoLast
                                    1-  316     ;local variable name mapping:
     0000                           1-  323     _sendtoLast:
                                    1-  324     ; 2 exit points
                                    1-  325     	.line	13, "codeDriver.c"; 	void sendtoLast(char ledNub,unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1-  326     	BANKSEL	r0x1005
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  327     	MOVAR	r0x1005
     0002 01rr                      1-  328     	MOVR	STK00,W
                                    1-  329     	BANKSEL	r0x1006
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  330     	MOVAR	r0x1006
     0005 01rr                      1-  331     	MOVR	STK01,W
                                    1-  332     	BANKSEL	r0x1007
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  333     	MOVAR	r0x1007
     0008 01rr                      1-  334     	MOVR	STK02,W
                                    1-  335     	BANKSEL	r0x1008
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  336     	MOVAR	r0x1008
                                    1-  337     	.line	15, "codeDriver.c"; 	for(int i=0;i<ledNub;i++)
                                    1-  338     	BANKSEL	r0x1009
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1-  339     	CLRR	r0x1009
                                    1-  340     	BANKSEL	r0x100A
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1-  341     	CLRR	r0x100A
     000F                           1-  342     _00107_DS_:
                                    1-  343     	BANKSEL	r0x1005
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  344     	MOVR	r0x1005,W
                                    1-  345     	BANKSEL	r0x100B
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1-  346     	MOVAR	r0x100B
                                    1-  347     ;;1	CLRR	r0x100C
                                    1-  348     	BANKSEL	r0x100A
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1-  349     	MOVR	r0x100A,W
     0015 2580                      1-  350     	ADDIA	0x80
                                    1-  351     	BANKSEL	r0x100D
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1-  352     	MOVAR	r0x100D
     0018 2100                      1-  353     	MOVIA	0x00
     0019 2580                      1-  354     	ADDIA	0x80
     001A 04rr                      1-  355     	SUBAR	r0x100D,W
     001B 0903                      1-  356     	BTRSS	STATUS,2
     001C 3rrr                      1-  357     	LGOTO	_00118_DS_
                                    1-  358     	BANKSEL	r0x100B
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  359     	MOVR	r0x100B,W
                                    1-  360     	BANKSEL	r0x1009
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1-  361     	SUBAR	r0x1009,W
     0021                           1-  362     _00118_DS_:
     0021 0C03                      1-  363     	BTRSC	STATUS,0
     0022 3rrr                      1-  364     	LGOTO	_00105_DS_
                                    1-  365     	.line	17, "codeDriver.c"; 	sendRGB(colorR,colorG,colorB);
                                    1-  366     	BANKSEL	r0x1008
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  367     	MOVR	r0x1008,W
     0025 00rr                      1-  368     	MOVAR	STK01
                                    1-  369     	BANKSEL	r0x1007
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  370     	MOVR	r0x1007,W
     0028 00rr                      1-  371     	MOVAR	STK00
                                    1-  372     	BANKSEL	r0x1006
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  373     	MOVR	r0x1006,W
     002B 2rrr                      1-  374     	LCALL	_sendRGB
                                    1-  375     	.line	15, "codeDriver.c"; 	for(int i=0;i<ledNub;i++)
                                    1-  376     	BANKSEL	r0x1009
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  377     	INCR	r0x1009,F
     002E 0903                      1-  378     	BTRSS	STATUS,2
     002F 3rrr                      1-  379     	LGOTO	_00001_DS_
                                    1-  380     	BANKSEL	r0x100A
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 05rr                      1-  381     	INCR	r0x100A,F
     0032                           1-  382     _00001_DS_:
     0032 3rrr                      1-  383     	LGOTO	_00107_DS_
     0033                           1-  384     _00105_DS_:
                                    1-  385     	.line	19, "codeDriver.c"; 	Delay80us();
     0033 2rrr                      1-  386     	LCALL	_Delay80us
                                    1-  387     	.line	20, "codeDriver.c"; 	}
                                    1-  388     	RETURN	
     0034 0010                      3-   26 m1      ret
                                    1-  389     ; exit point of _sendtoLast
                                    1-  392     ;	code size estimation:
                                    1-  393     ;	   90+   38 =   128 instructions (  332 byte)
                                    1-  395     	end
                                    1-  395     	end

SYMBOL TABLE            TYPE     VALUE
__CHECKSUM_ADDR__       Label    00000000
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800533
_00001_DS_              Label    00000032
_00105_DS_              Label    00000033
_00107_DS_              Label    0000000F
_00118_DS_              Label    00000021
_00124_DS_              Label    00000014
_00128_DS_              Label    00000026
_00132_DS_              Label    00000037
_00135_DS_              Label    0000000B
_00136_DS_              Label    00000017
_00137_DS_              Label    0000001D
_00138_DS_              Label    00000029
_00139_DS_              Label    0000002E
_00140_DS_              Label    0000003A
_00147_DS_              Label    00000002
_00149_DS_              Label    0000000B
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_Delay80us              Label    00000000
_FSR                    Label    00000000
_INDF                   Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_sendRGB                Label    00000000
_sendtoLast             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1000                 Label    00000000
r0x1001                 Label    00000000
r0x1002                 Label    00000000
r0x1003                 Label    00000000
r0x1004                 Label    00000000
r0x1005                 Label    00000000
r0x1006                 Label    00000000
r0x1007                 Label    00000000
r0x1008                 Label    00000000
r0x1009                 Label    00000000
r0x100A                 Label    00000000
r0x100B                 Label    00000000
r0x100D                 Label    00000000
SSAVE                   Label    00000000
STATUS                  Constant 00000003
STK00                   Label    00000000
STK01                   Label    00000000
STK02                   Label    00000000
STK03                   Label    00000000
STK04                   Label    00000000
STK05                   Label    00000000
STK06                   Label    00000000
STK07                   Label    00000000
STK08                   Label    00000000
STK09                   Label    00000000
STK10                   Label    00000000
STK11                   Label    00000000
STK12                   Label    00000000
W                       Constant 00000000
WSAVE                   Label    00000000


SOURCE FILE TABLE
001 codeDriver.s
002 ny8a053d.inc
003 common.inc
004 codeDriver.c

PROCESSOR    = NY8A053D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
