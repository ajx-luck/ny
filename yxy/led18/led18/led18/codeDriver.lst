
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"codeDriver.c"
                                    1-    8     	list	p=NY8A053D,c=on
                                    1-    9     	#include "ny8a053d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_INDF
                                    1-   23     	extern	_TMR0
                                    1-   24     	extern	_PCL
                                    1-   25     	extern	_STATUS
                                    1-   26     	extern	_FSR
                                    1-   27     	extern	_PORTA
                                    1-   28     	extern	_PORTB
                                    1-   29     	extern	_PCON
                                    1-   30     	extern	_BWUCON
                                    1-   31     	extern	_PCHBUF
                                    1-   32     	extern	_ABPLCON
                                    1-   33     	extern	_BPHCON
                                    1-   34     	extern	_INTE
                                    1-   35     	extern	_INTF
                                    1-   36     	extern	_TMR1
                                    1-   37     	extern	_T1CR1
                                    1-   38     	extern	_T1CR2
                                    1-   39     	extern	_PWM1DUTY
                                    1-   40     	extern	_PS1CV
                                    1-   41     	extern	_BZ1CR
                                    1-   42     	extern	_IRCR
                                    1-   43     	extern	_TBHP
                                    1-   44     	extern	_TBHD
                                    1-   45     	extern	_OSCCR
                                    1-   46     	extern	_IOSTA
                                    1-   47     	extern	_IOSTB
                                    1-   48     	extern	_PS0CV
                                    1-   49     	extern	_BODCON
                                    1-   50     	extern	_PCON1
                                    1-   51     	extern	_T0MD
                                    1-   53     	extern PSAVE
                                    1-   54     	extern SSAVE
                                    1-   55     	extern WSAVE
                                    1-   56     	extern STK12
                                    1-   57     	extern STK11
                                    1-   58     	extern STK10
                                    1-   59     	extern STK09
                                    1-   60     	extern STK08
                                    1-   61     	extern STK07
                                    1-   62     	extern STK06
                                    1-   63     	extern STK05
                                    1-   64     	extern STK04
                                    1-   65     	extern STK03
                                    1-   66     	extern STK02
                                    1-   67     	extern STK01
                                    1-   68     	extern STK00
                                    1-   69     ;--------------------------------------------------------
                                    1-   70     ; global declarations
                                    1-   71     ;--------------------------------------------------------
                                    1-   72     	extern	_DelaySend
                                    1-   73     	extern	_sendCodeZERO
                                    1-   74     	extern	_sendCodeONE
                                    1-   75     	extern	_SendCodeByte
                                    1-   76     	extern	_sendRGB
                                    1-   77     	extern	_sendtoLast
                                    1-   79     ;--------------------------------------------------------
                                    1-   80     ; global definitions
                                    1-   81     ;--------------------------------------------------------
                                    1-   82     ;--------------------------------------------------------
                                    1-   83     ; absolute symbol definitions
                                    1-   84     ;--------------------------------------------------------
                                    1-   85     ;--------------------------------------------------------
                                    1-   86     ; compiler-defined variables
                                    1-   87     ;--------------------------------------------------------
                                    1-   88     .segment "uninit"
     0000                           1-   89     r0x1005:
                                    1-   90     	.res	1
                                    1-   91     .segment "uninit"
     0000                           1-   92     r0x1006:
                                    1-   93     	.res	1
                                    1-   94     .segment "uninit"
     0000                           1-   95     r0x1007:
                                    1-   96     	.res	1
                                    1-   97     .segment "uninit"
     0000                           1-   98     r0x1008:
                                    1-   99     	.res	1
                                    1-  100     .segment "uninit"
     0000                           1-  101     r0x1009:
                                    1-  102     	.res	1
                                    1-  103     .segment "uninit"
     0000                           1-  104     r0x100A:
                                    1-  105     	.res	1
                                    1-  106     .segment "uninit"
     0000                           1-  107     r0x100B:
                                    1-  108     	.res	1
                                    1-  109     .segment "uninit"
     0000                           1-  110     r0x100D:
                                    1-  111     	.res	1
                                    1-  112     .segment "uninit"
     0000                           1-  113     r0x1002:
                                    1-  114     	.res	1
                                    1-  115     .segment "uninit"
     0000                           1-  116     r0x1003:
                                    1-  117     	.res	1
                                    1-  118     .segment "uninit"
     0000                           1-  119     r0x1004:
                                    1-  120     	.res	1
                                    1-  121     .segment "uninit"
     0000                           1-  122     r0x1000:
                                    1-  123     	.res	1
                                    1-  124     .segment "uninit"
     0000                           1-  125     r0x1001:
                                    1-  126     	.res	1
                                    1-  127     ;--------------------------------------------------------
                                    1-  128     ; initialized data
                                    1-  129     ;--------------------------------------------------------
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; overlayable items in internal ram 
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     ;	udata_ovr
                                    1-  134     ;--------------------------------------------------------
                                    1-  135     ; code
                                    1-  136     ;--------------------------------------------------------
                                    1-  137     ;***
                                    1-  138     ;  pBlock Stats: dbName = C
                                    1-  139     ;***
                                    1-  140     ;has an exit
                                    1-  141     ;; Starting pCode block
                                    1-  142     .segment "code"; module=codeDriver, function=_DelaySend
     0000                           1-  144     _DelaySend:
                                    1-  145     ; 2 exit points
                                    1-  146     	.line	64, "codeDriver.c"; 	NOP();
     0000 0000                      1-  147     	nop
                                    1-  148     	.line	65, "codeDriver.c"; 	NOP();
     0001 0000                      1-  149     	nop
                                    1-  150     	.line	66, "codeDriver.c"; 	NOP();
     0002 0000                      1-  151     	nop
                                    1-  152     	.line	67, "codeDriver.c"; 	NOP();
     0003 0000                      1-  153     	nop
                                    1-  154     	.line	68, "codeDriver.c"; 	NOP();
     0004 0000                      1-  155     	nop
                                    1-  156     	.line	69, "codeDriver.c"; 	NOP();
     0005 0000                      1-  157     	nop
                                    1-  158     	.line	70, "codeDriver.c"; 	}
                                    1-  159     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  160     ; exit point of _DelaySend
                                    1-  162     ;***
                                    1-  163     ;  pBlock Stats: dbName = C
                                    1-  164     ;***
                                    1-  165     ;has an exit
                                    1-  166     ;; Starting pCode block
                                    1-  167     .segment "code"; module=codeDriver, function=_sendCodeZERO
     0000                           1-  169     _sendCodeZERO:
                                    1-  170     ; 2 exit points
                                    1-  171     	.line	56, "codeDriver.c"; 	PB0 = 0;
                                    1-  172     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Crr                      1-  173     	BCR	_PORTB,0
                                    1-  174     	.line	57, "codeDriver.c"; 	NOP();
     0002 0000                      1-  175     	nop
                                    1-  176     	.line	58, "codeDriver.c"; 	PB0 = 1;
                                    1-  177     	BANKSEL	_PORTB
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 18rr                      1-  178     	BSR	_PORTB,0
                                    1-  179     	.line	59, "codeDriver.c"; 	}
                                    1-  180     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1-  181     ; exit point of _sendCodeZERO
                                    1-  183     ;***
                                    1-  184     ;  pBlock Stats: dbName = C
                                    1-  185     ;***
                                    1-  186     ;has an exit
                                    1-  187     ;; Starting pCode block
                                    1-  188     .segment "code"; module=codeDriver, function=_sendCodeONE
     0000                           1-  190     _sendCodeONE:
                                    1-  191     ; 2 exit points
                                    1-  192     	.line	48, "codeDriver.c"; 	PB0 = 1;
                                    1-  193     	BANKSEL	_PORTB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 18rr                      1-  194     	BSR	_PORTB,0
                                    1-  195     	.line	49, "codeDriver.c"; 	NOP();
     0002 0000                      1-  196     	nop
                                    1-  197     	.line	50, "codeDriver.c"; 	PB0 = 0;
                                    1-  198     	BANKSEL	_PORTB
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 1Crr                      1-  199     	BCR	_PORTB,0
                                    1-  200     	.line	51, "codeDriver.c"; 	}
                                    1-  201     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1-  202     ; exit point of _sendCodeONE
                                    1-  204     ;***
                                    1-  205     ;  pBlock Stats: dbName = C
                                    1-  206     ;***
                                    1-  207     ;has an exit
                                    1-  208     ;functions called:
                                    1-  209     ;   _sendCodeONE
                                    1-  210     ;   _sendCodeZERO
                                    1-  211     ;   _sendCodeONE
                                    1-  212     ;   _sendCodeZERO
                                    1-  213     ;2 compiler assigned registers:
                                    1-  214     ;   r0x1000
                                    1-  215     ;   r0x1001
                                    1-  216     ;; Starting pCode block
                                    1-  217     .segment "code"; module=codeDriver, function=_SendCodeByte
                                    1-  219     ;local variable name mapping:
     0000                           1-  222     _SendCodeByte:
                                    1-  223     ; 2 exit points
                                    1-  224     	.line	33, "codeDriver.c"; 	void SendCodeByte(unsigned char data)
                                    1-  225     	BANKSEL	r0x1000
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  226     	MOVAR	r0x1000
                                    1-  227     	.line	35, "codeDriver.c"; 	for(unsigned char i=8;i>0;i--)
     0002 2108                      1-  228     	MOVIA	0x08
                                    1-  229     	BANKSEL	r0x1001
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  230     	MOVAR	r0x1001
     0005                           1-  231     _00132_DS_:
                                    1-  232     	BANKSEL	r0x1001
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1-  233     	MOVR	r0x1001,W
     0007 0D03                      1-  234     	BTRSC	STATUS,2
     0008 3rrr                      1-  235     	LGOTO	_00134_DS_
                                    1-  236     	.line	37, "codeDriver.c"; 	data = data<<1;
     0009 1C03                      1-  237     	BCR	STATUS,0
                                    1-  238     	BANKSEL	r0x1000
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 14rr                      1-  239     	RLR	r0x1000,F
                                    1-  240     	.line	38, "codeDriver.c"; 	if(D)
     000C 0803                      1-  241     	BTRSS	STATUS,0
     000D 3rrr                      1-  242     	LGOTO	_00128_DS_
                                    1-  243     	.line	39, "codeDriver.c"; 	sendCodeONE();
     000E 2rrr                      1-  244     	LCALL	_sendCodeONE
     000F 3rrr                      1-  245     	LGOTO	_00133_DS_
     0010                           1-  246     _00128_DS_:
                                    1-  247     	.line	41, "codeDriver.c"; 	sendCodeZERO();
     0010 2rrr                      1-  248     	LCALL	_sendCodeZERO
     0011                           1-  249     _00133_DS_:
                                    1-  250     	.line	35, "codeDriver.c"; 	for(unsigned char i=8;i>0;i--)
                                    1-  251     	BANKSEL	r0x1001
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 06rr                      1-  252     	DECR	r0x1001,F
     0013 3rrr                      1-  253     	LGOTO	_00132_DS_
     0014                           1-  254     _00134_DS_:
                                    1-  255     	.line	43, "codeDriver.c"; 	}
                                    1-  256     	RETURN	
     0014 0010                      3-   26 m1      ret
                                    1-  257     ; exit point of _SendCodeByte
                                    1-  259     ;***
                                    1-  260     ;  pBlock Stats: dbName = C
                                    1-  261     ;***
                                    1-  262     ;has an exit
                                    1-  263     ;functions called:
                                    1-  264     ;   _SendCodeByte
                                    1-  265     ;   _SendCodeByte
                                    1-  266     ;   _SendCodeByte
                                    1-  267     ;   _SendCodeByte
                                    1-  268     ;   _SendCodeByte
                                    1-  269     ;   _SendCodeByte
                                    1-  270     ;5 compiler assigned registers:
                                    1-  271     ;   r0x1002
                                    1-  272     ;   STK00
                                    1-  273     ;   r0x1003
                                    1-  274     ;   STK01
                                    1-  275     ;   r0x1004
                                    1-  276     ;; Starting pCode block
                                    1-  277     .segment "code"; module=codeDriver, function=_sendRGB
                                    1-  279     ;local variable name mapping:
     0000                           1-  283     _sendRGB:
                                    1-  284     ; 2 exit points
                                    1-  285     	.line	23, "codeDriver.c"; 	void sendRGB(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1-  286     	BANKSEL	r0x1002
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  287     	MOVAR	r0x1002
     0002 01rr                      1-  288     	MOVR	STK00,W
                                    1-  289     	BANKSEL	r0x1003
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  290     	MOVAR	r0x1003
     0005 01rr                      1-  291     	MOVR	STK01,W
                                    1-  292     	BANKSEL	r0x1004
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  293     	MOVAR	r0x1004
                                    1-  294     	.line	25, "codeDriver.c"; 	SendCodeByte(colorR);
                                    1-  295     	BANKSEL	r0x1002
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1-  296     	MOVR	r0x1002,W
     000A 2rrr                      1-  297     	LCALL	_SendCodeByte
                                    1-  298     	.line	26, "codeDriver.c"; 	SendCodeByte(colorG);
                                    1-  299     	BANKSEL	r0x1003
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1-  300     	MOVR	r0x1003,W
     000D 2rrr                      1-  301     	LCALL	_SendCodeByte
                                    1-  302     	.line	27, "codeDriver.c"; 	SendCodeByte(colorB);
                                    1-  303     	BANKSEL	r0x1004
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1-  304     	MOVR	r0x1004,W
     0010 2rrr                      1-  305     	LCALL	_SendCodeByte
                                    1-  306     	.line	28, "codeDriver.c"; 	}
                                    1-  307     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1-  308     ; exit point of _sendRGB
                                    1-  310     ;***
                                    1-  311     ;  pBlock Stats: dbName = C
                                    1-  312     ;***
                                    1-  313     ;has an exit
                                    1-  314     ;functions called:
                                    1-  315     ;   _sendRGB
                                    1-  316     ;   _DelaySend
                                    1-  317     ;   _sendRGB
                                    1-  318     ;   _DelaySend
                                    1-  319     ;12 compiler assigned registers:
                                    1-  320     ;   r0x1005
                                    1-  321     ;   STK00
                                    1-  322     ;   r0x1006
                                    1-  323     ;   STK01
                                    1-  324     ;   r0x1007
                                    1-  325     ;   STK02
                                    1-  326     ;   r0x1008
                                    1-  327     ;   r0x1009
                                    1-  328     ;   r0x100A
                                    1-  329     ;   r0x100B
                                    1-  330     ;   r0x100C
                                    1-  331     ;   r0x100D
                                    1-  332     ;; Starting pCode block
                                    1-  333     .segment "code"; module=codeDriver, function=_sendtoLast
                                    1-  335     ;local variable name mapping:
     0000                           1-  342     _sendtoLast:
                                    1-  343     ; 2 exit points
                                    1-  344     	.line	13, "codeDriver.c"; 	void sendtoLast(char ledNub,unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1-  345     	BANKSEL	r0x1005
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  346     	MOVAR	r0x1005
     0002 01rr                      1-  347     	MOVR	STK00,W
                                    1-  348     	BANKSEL	r0x1006
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  349     	MOVAR	r0x1006
     0005 01rr                      1-  350     	MOVR	STK01,W
                                    1-  351     	BANKSEL	r0x1007
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  352     	MOVAR	r0x1007
     0008 01rr                      1-  353     	MOVR	STK02,W
                                    1-  354     	BANKSEL	r0x1008
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  355     	MOVAR	r0x1008
                                    1-  356     	.line	15, "codeDriver.c"; 	for(int i=0;i<ledNub;i++)
                                    1-  357     	BANKSEL	r0x1009
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1-  358     	CLRR	r0x1009
                                    1-  359     	BANKSEL	r0x100A
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1-  360     	CLRR	r0x100A
     000F                           1-  361     _00107_DS_:
                                    1-  362     	BANKSEL	r0x1005
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  363     	MOVR	r0x1005,W
                                    1-  364     	BANKSEL	r0x100B
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1-  365     	MOVAR	r0x100B
                                    1-  366     ;;1	CLRR	r0x100C
                                    1-  367     	BANKSEL	r0x100A
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1-  368     	MOVR	r0x100A,W
     0015 2580                      1-  369     	ADDIA	0x80
                                    1-  370     	BANKSEL	r0x100D
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1-  371     	MOVAR	r0x100D
     0018 2100                      1-  372     	MOVIA	0x00
     0019 2580                      1-  373     	ADDIA	0x80
     001A 04rr                      1-  374     	SUBAR	r0x100D,W
     001B 0903                      1-  375     	BTRSS	STATUS,2
     001C 3rrr                      1-  376     	LGOTO	_00118_DS_
                                    1-  377     	BANKSEL	r0x100B
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  378     	MOVR	r0x100B,W
                                    1-  379     	BANKSEL	r0x1009
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1-  380     	SUBAR	r0x1009,W
     0021                           1-  381     _00118_DS_:
     0021 0C03                      1-  382     	BTRSC	STATUS,0
     0022 3rrr                      1-  383     	LGOTO	_00109_DS_
                                    1-  384     	.line	17, "codeDriver.c"; 	sendRGB(colorR,colorG,colorB);
                                    1-  385     	BANKSEL	r0x1008
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  386     	MOVR	r0x1008,W
     0025 00rr                      1-  387     	MOVAR	STK01
                                    1-  388     	BANKSEL	r0x1007
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  389     	MOVR	r0x1007,W
     0028 00rr                      1-  390     	MOVAR	STK00
                                    1-  391     	BANKSEL	r0x1006
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  392     	MOVR	r0x1006,W
     002B 2rrr                      1-  393     	LCALL	_sendRGB
                                    1-  394     	.line	18, "codeDriver.c"; 	DelaySend();
     002C 2rrr                      1-  395     	LCALL	_DelaySend
                                    1-  396     	.line	15, "codeDriver.c"; 	for(int i=0;i<ledNub;i++)
                                    1-  397     	BANKSEL	r0x1009
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 05rr                      1-  398     	INCR	r0x1009,F
     002F 0903                      1-  399     	BTRSS	STATUS,2
     0030 3rrr                      1-  400     	LGOTO	_00001_DS_
                                    1-  401     	BANKSEL	r0x100A
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 05rr                      1-  402     	INCR	r0x100A,F
     0033                           1-  403     _00001_DS_:
     0033 3rrr                      1-  404     	LGOTO	_00107_DS_
     0034                           1-  405     _00109_DS_:
                                    1-  406     	.line	20, "codeDriver.c"; 	}
                                    1-  407     	RETURN	
     0034 0010                      3-   26 m1      ret
                                    1-  408     ; exit point of _sendtoLast
                                    1-  411     ;	code size estimation:
                                    1-  412     ;	   71+   32 =   103 instructions (  270 byte)
                                    1-  414     	end
                                    1-  414     	end

SYMBOL TABLE            TYPE     VALUE
__CHECKSUM_ADDR__       Label    00000000
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800533
_00001_DS_              Label    00000033
_00107_DS_              Label    0000000F
_00109_DS_              Label    00000034
_00118_DS_              Label    00000021
_00128_DS_              Label    00000010
_00132_DS_              Label    00000005
_00133_DS_              Label    00000011
_00134_DS_              Label    00000014
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_DelaySend              Label    00000000
_FSR                    Label    00000000
_INDF                   Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_SendCodeByte           Label    00000000
_sendCodeONE            Label    00000000
_sendCodeZERO           Label    00000000
_sendRGB                Label    00000000
_sendtoLast             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1000                 Label    00000000
r0x1001                 Label    00000000
r0x1002                 Label    00000000
r0x1003                 Label    00000000
r0x1004                 Label    00000000
r0x1005                 Label    00000000
r0x1006                 Label    00000000
r0x1007                 Label    00000000
r0x1008                 Label    00000000
r0x1009                 Label    00000000
r0x100A                 Label    00000000
r0x100B                 Label    00000000
r0x100D                 Label    00000000
SSAVE                   Label    00000000
STATUS                  Constant 00000003
STK00                   Label    00000000
STK01                   Label    00000000
STK02                   Label    00000000
STK03                   Label    00000000
STK04                   Label    00000000
STK05                   Label    00000000
STK06                   Label    00000000
STK07                   Label    00000000
STK08                   Label    00000000
STK09                   Label    00000000
STK10                   Label    00000000
STK11                   Label    00000000
STK12                   Label    00000000
W                       Constant 00000000
WSAVE                   Label    00000000


SOURCE FILE TABLE
001 codeDriver.s
002 ny8a053d.inc
003 common.inc
004 codeDriver.c

PROCESSOR    = NY8A053D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
