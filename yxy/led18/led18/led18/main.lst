
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A053D,c=on
                                    1-    9     	#include "ny8a053d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_Delay10Us
                                    1-   15     	extern	_SDAOutput
                                    1-   16     	extern	_SDAInput
                                    1-   17     	extern	_Start24C02
                                    1-   18     	extern	_Stop24C02
                                    1-   19     	extern	_SendAck
                                    1-   20     	extern	_SendNoAck
                                    1-   21     	extern	_RecvAck
                                    1-   22     	extern	_SendByte
                                    1-   23     	extern	_ReadByte
                                    1-   24     	extern	_readWordStep
                                    1-   25     	extern	_writeWordStep
                                    1-   26     	extern	_sendByte
                                    1-   27     	extern	_PORTAbits
                                    1-   28     	extern	_PORTBbits
                                    1-   29     	extern	_PCONbits
                                    1-   30     	extern	_BWUCONbits
                                    1-   31     	extern	_ABPLCONbits
                                    1-   32     	extern	_BPHCONbits
                                    1-   33     	extern	_INTEbits
                                    1-   34     	extern	_INTFbits
                                    1-   35     	extern	_INDF
                                    1-   36     	extern	_TMR0
                                    1-   37     	extern	_PCL
                                    1-   38     	extern	_STATUS
                                    1-   39     	extern	_FSR
                                    1-   40     	extern	_PORTA
                                    1-   41     	extern	_PORTB
                                    1-   42     	extern	_PCON
                                    1-   43     	extern	_BWUCON
                                    1-   44     	extern	_PCHBUF
                                    1-   45     	extern	_ABPLCON
                                    1-   46     	extern	_BPHCON
                                    1-   47     	extern	_INTE
                                    1-   48     	extern	_INTF
                                    1-   49     	extern	_TMR1
                                    1-   50     	extern	_T1CR1
                                    1-   51     	extern	_T1CR2
                                    1-   52     	extern	_PWM1DUTY
                                    1-   53     	extern	_PS1CV
                                    1-   54     	extern	_BZ1CR
                                    1-   55     	extern	_IRCR
                                    1-   56     	extern	_TBHP
                                    1-   57     	extern	_TBHD
                                    1-   58     	extern	_OSCCR
                                    1-   59     	extern	_IOSTA
                                    1-   60     	extern	_IOSTB
                                    1-   61     	extern	_PS0CV
                                    1-   62     	extern	_BODCON
                                    1-   63     	extern	_PCON1
                                    1-   64     	extern	_T0MD
                                    1-   65     	extern	___sdcc_saved_fsr
                                    1-   66     	extern	___sdcc_saved_stk00
                                    1-   67     	extern	___sdcc_saved_stk01
                                    1-   68     	extern	__nyc_ny8_startup
                                    1-   69     ;--------------------------------------------------------
                                    1-   70     ; global declarations
                                    1-   71     ;--------------------------------------------------------
                                    1-   72     	extern	_Delay80us
                                    1-   73     	extern	_send0
                                    1-   74     	extern	_send1
                                    1-   75     	extern	_sendRGB
                                    1-   76     	extern	_sendtoLast
                                    1-   77     	extern	_keyRead
                                    1-   78     	extern	_keyCtrl
                                    1-   79     	extern	_ledCtrl
                                    1-   80     	extern	_isr
                                    1-   81     	extern	_initTimer0
                                    1-   82     	extern	_main
                                    1-   83     	extern	_intCount
                                    1-   84     	extern	_IntFlag
                                    1-   85     	extern	_keyCount
                                    1-   86     	extern	_workStep
                                    1-   87     	extern	_Rdata
                                    1-   88     	extern	_Gdata
                                    1-   89     	extern	_Bdata
                                    1-   91     	extern PSAVE
                                    1-   92     	extern SSAVE
                                    1-   93     	extern WSAVE
                                    1-   94     	extern STK12
                                    1-   95     	extern STK11
                                    1-   96     	extern STK10
                                    1-   97     	extern STK09
                                    1-   98     	extern STK08
                                    1-   99     	extern STK07
                                    1-  100     	extern STK06
                                    1-  101     	extern STK05
                                    1-  102     	extern STK04
                                    1-  103     	extern STK03
                                    1-  104     	extern STK02
                                    1-  105     	extern STK01
                                    1-  106     	extern STK00
                                    1-  108     .segment "uninit", 0x20000020
 20000020                           1-  109     PSAVE:
                                    1-  110     	.res 1
 20000021                           1-  111     SSAVE:
                                    1-  112     	.res 1
 20000022                           1-  113     WSAVE:
                                    1-  114     	.res 1
 20000023                           1-  115     STK12:
                                    1-  116     	.res 1
 20000024                           1-  117     STK11:
                                    1-  118     	.res 1
 20000025                           1-  119     STK10:
                                    1-  120     	.res 1
 20000026                           1-  121     STK09:
                                    1-  122     	.res 1
 20000027                           1-  123     STK08:
                                    1-  124     	.res 1
 20000028                           1-  125     STK07:
                                    1-  126     	.res 1
 20000029                           1-  127     STK06:
                                    1-  128     	.res 1
 2000002A                           1-  129     STK05:
                                    1-  130     	.res 1
 2000002B                           1-  131     STK04:
                                    1-  132     	.res 1
 2000002C                           1-  133     STK03:
                                    1-  134     	.res 1
 2000002D                           1-  135     STK02:
                                    1-  136     	.res 1
 2000002E                           1-  137     STK01:
                                    1-  138     	.res 1
 2000002F                           1-  139     STK00:
                                    1-  140     	.res 1
                                    1-  142     ;--------------------------------------------------------
                                    1-  143     ; global definitions
                                    1-  144     ;--------------------------------------------------------
                                    1-  145     ;--------------------------------------------------------
                                    1-  146     ; absolute symbol definitions
                                    1-  147     ;--------------------------------------------------------
                                    1-  148     ;--------------------------------------------------------
                                    1-  149     ; compiler-defined variables
                                    1-  150     ;--------------------------------------------------------
                                    1-  151     .segment "uninit"
     0000                           1-  152     r0x1017:
                                    1-  153     	.res	1
                                    1-  154     .segment "uninit"
     0000                           1-  155     r0x1016:
                                    1-  156     	.res	1
                                    1-  157     .segment "uninit"
     0000                           1-  158     r0x1015:
                                    1-  159     	.res	1
                                    1-  160     .segment "uninit"
     0000                           1-  161     r0x1014:
                                    1-  162     	.res	1
                                    1-  163     .segment "uninit"
     0000                           1-  164     r0x100B:
                                    1-  165     	.res	1
                                    1-  166     .segment "uninit"
     0000                           1-  167     r0x100C:
                                    1-  168     	.res	1
                                    1-  169     .segment "uninit"
     0000                           1-  170     r0x100D:
                                    1-  171     	.res	1
                                    1-  172     .segment "uninit"
     0000                           1-  173     r0x100E:
                                    1-  174     	.res	1
                                    1-  175     .segment "uninit"
     0000                           1-  176     r0x100F:
                                    1-  177     	.res	1
                                    1-  178     .segment "uninit"
     0000                           1-  179     r0x1010:
                                    1-  180     	.res	1
                                    1-  181     .segment "uninit"
     0000                           1-  182     r0x1011:
                                    1-  183     	.res	1
                                    1-  184     .segment "uninit"
     0000                           1-  185     r0x1013:
                                    1-  186     	.res	1
                                    1-  187     .segment "uninit"
     0000                           1-  188     r0x1008:
                                    1-  189     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     r0x1009:
                                    1-  192     	.res	1
                                    1-  193     .segment "uninit"
     0000                           1-  194     r0x100A:
                                    1-  195     	.res	1
                                    1-  196     .segment "uninit"
     0000                           1-  197     r0x1007:
                                    1-  198     	.res	1
                                    1-  199     ;--------------------------------------------------------
                                    1-  200     ; initialized data
                                    1-  201     ;--------------------------------------------------------
                                    1-  203     .segment "idata"
     0000                           1-  204     _intCount:
     0000 0000                      1-  205     	dw	0x00
                                    1-  209     .segment "idata"
     0000                           1-  210     _IntFlag:
     0000 0000                      1-  211     	dw	0x00
                                    1-  215     .segment "idata"
     0000                           1-  216     _keyCount:
     0000 0000                      1-  217     	dw	0x00
                                    1-  221     .segment "idata"
     0000                           1-  222     _workStep:
     0000 0001                      1-  223     	dw	0x01
                                    1-  227     .segment "idata"
     0000                           1-  228     _Rdata:
     0000 0000                      1-  229     	dw	0x00
                                    1-  233     .segment "idata"
     0000                           1-  234     _Gdata:
     0000 0000                      1-  235     	dw	0x00
                                    1-  239     .segment "idata"
     0000                           1-  240     _Bdata:
     0000 0000                      1-  241     	dw	0x00
                                    1-  244     ;--------------------------------------------------------
                                    1-  245     ; overlayable items in internal ram 
                                    1-  246     ;--------------------------------------------------------
                                    1-  247     ;	udata_ovr
                                    1-  248     ;--------------------------------------------------------
                                    1-  249     ; reset vector 
                                    1-  250     ;--------------------------------------------------------
                                    1-  251     ORG	0x0000
     0000 3rrr                      1-  252     	LGOTO	__nyc_ny8_startup
                                    1-  253     ;--------------------------------------------------------
                                    1-  254     ; interrupt and initialization code
                                    1-  255     ;--------------------------------------------------------
                                    1-  256     ORG 0x0008
     0008 3rrr                      1-  257     	lgoto	__sdcc_interrupt
                                    1-  259     .segment "code"
     0000                           1-  260     __sdcc_interrupt:
                                    1-  261     ;***
                                    1-  262     ;  pBlock Stats: dbName = I
                                    1-  263     ;***
                                    1-  264     ;2 compiler assigned registers:
                                    1-  265     ;   STK00
                                    1-  266     ;   STK01
                                    1-  267     ;; Starting pCode block
     0000                           1-  268     _isr:
                                    1-  269     ; 0 exit points
                                    1-  270     	.line	55, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  271     	MOVAR	WSAVE
     0001 1503                      1-  272     	SWAPR	STATUS,W
     0002 0283                      1-  273     	CLRR	STATUS
     0003 00rr                      1-  274     	MOVAR	SSAVE
     0004 010A                      1-  275     	MOVR	PCHBUF,W
     0005 028A                      1-  276     	CLRR	PCHBUF
     0006 00rr                      1-  277     	MOVAR	PSAVE
     0007 0104                      1-  278     	MOVR	FSR,W
                                    1-  279     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  280     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  281     	MOVR	STK00,W
                                    1-  282     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  283     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  284     	MOVR	STK01,W
                                    1-  285     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  286     	MOVAR	___sdcc_saved_stk01
                                    1-  287     	.line	57, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  288     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  289     	LGOTO	_00108_DS_
                                    1-  290     	.line	59, "main.c"; 	TMR0 = 65;
     0012 2141                      1-  291     	MOVIA	0x41
     0013 00rr                      1-  292     	MOVAR	_TMR0
                                    1-  293     	.line	60, "main.c"; 	intCount++;
                                    1-  294     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  295     	INCR	_intCount,F
                                    1-  296     	.line	61, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  297     	MOVR	_intCount,W
     0017 2464                      1-  298     	XORIA	0x64
     0018 0903                      1-  299     	BTRSS	STATUS,2
     0019 3rrr                      1-  300     	LGOTO	_00108_DS_
                                    1-  301     	.line	63, "main.c"; 	intCount = 0;
     001A 02rr                      1-  302     	CLRR	_intCount
                                    1-  303     	.line	64, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  304     	MOVIA	0x01
                                    1-  305     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  306     	MOVAR	_IntFlag
     001E                           1-  307     _00108_DS_:
                                    1-  308     	.line	67, "main.c"; 	if(INTFbits.PBIF)
     001E 08rr                      1-  309     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  310     	LGOTO	_00110_DS_
                                    1-  311     	.line	69, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  312     	MOVIA	0xfd
     0021 00rr                      1-  313     	MOVAR	_INTF
     0022                           1-  314     _00110_DS_:
                                    1-  315     	.line	72, "main.c"; 	INTF = 0;
     0022 02rr                      1-  316     	CLRR	_INTF
                                    1-  317     	.line	74, "main.c"; 	}
                                    1-  318     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  319     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  320     	MOVAR	STK01
                                    1-  321     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  322     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  323     	MOVAR	STK00
                                    1-  324     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  325     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  326     	MOVAR	FSR
     002C 01rr                      1-  327     	MOVR	PSAVE,W
     002D 008A                      1-  328     	MOVAR	PCHBUF
     002E 0283                      1-  329     	CLRR	STATUS
     002F 15rr                      1-  330     	SWAPR	SSAVE,W
     0030 0083                      1-  331     	MOVAR	STATUS
     0031 15rr                      1-  332     	SWAPR	WSAVE,F
     0032 15rr                      1-  333     	SWAPR	WSAVE,W
     0033                           1-  334     END_OF_INTERRUPT:
     0033 0011                      1-  335     	RETIE	
                                    1-  337     ;--------------------------------------------------------
                                    1-  338     ; code
                                    1-  339     ;--------------------------------------------------------
                                    1-  340     ;***
                                    1-  341     ;  pBlock Stats: dbName = M
                                    1-  342     ;***
                                    1-  343     ;has an exit
                                    1-  344     ;functions called:
                                    1-  345     ;   _initTimer0
                                    1-  346     ;   _readWordStep
                                    1-  347     ;   _ledCtrl
                                    1-  348     ;   _keyCtrl
                                    1-  349     ;   _initTimer0
                                    1-  350     ;   _readWordStep
                                    1-  351     ;   _ledCtrl
                                    1-  352     ;   _keyCtrl
                                    1-  353     ;5 compiler assigned registers:
                                    1-  354     ;   r0x1017
                                    1-  355     ;   r0x1018
                                    1-  356     ;   r0x1019
                                    1-  357     ;   STK01
                                    1-  358     ;   STK00
                                    1-  359     ;; Starting pCode block
                                    1-  360     .segment "code"; module=main, function=_main
     0000                           1-  362     _main:
                                    1-  363     ; 2 exit points
                                    1-  364     	.line	106, "main.c"; 	initTimer0();
     0000 2rrr                      1-  365     	LCALL	_initTimer0
                                    1-  366     	.line	107, "main.c"; 	readWordStep(&workStep);
     0001 21rr                      1-  367     	MOVIA	((_workStep + 0) >> 8) & 0xff
                                    1-  368     	BANKSEL	r0x1017
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1-  369     	MOVAR	r0x1017
     0004 21rr                      1-  370     	MOVIA	(_workStep + 0)
                                    1-  371     ;;1	MOVAR	r0x1018
     0005 00rr                      1-  372     	MOVAR	STK01
     0006 01rr                      1-  373     	MOVR	r0x1017,W
     0007 00rr                      1-  374     	MOVAR	STK00
     0008 2100                      1-  375     	MOVIA	0x00
     0009 2rrr                      1-  376     	LCALL	_readWordStep
     000A                           1-  377     _00123_DS_:
                                    1-  378     	.line	110, "main.c"; 	CLRWDT(); 
     000A 0002                      1-  379     	clrwdt
                                    1-  380     	.line	111, "main.c"; 	ledCtrl();
     000B 2rrr                      1-  381     	LCALL	_ledCtrl
                                    1-  382     	.line	112, "main.c"; 	if(!IntFlag)
                                    1-  383     	BANKSEL	_IntFlag
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  384     	MOVR	_IntFlag,W
     000E 0D03                      1-  385     	BTRSC	STATUS,2
     000F 3rrr                      1-  386     	LGOTO	_00123_DS_
                                    1-  387     	.line	114, "main.c"; 	IntFlag = 0;
     0010 02rr                      1-  388     	CLRR	_IntFlag
                                    1-  389     	.line	115, "main.c"; 	keyCtrl();
     0011 2rrr                      1-  390     	LCALL	_keyCtrl
     0012 3rrr                      1-  391     	LGOTO	_00123_DS_
                                    1-  392     	.line	123, "main.c"; 	}
                                    1-  393     	RETURN	
     0013 0010                      3-   26 m1      ret
                                    1-  394     ; exit point of _main
                                    1-  396     ;***
                                    1-  397     ;  pBlock Stats: dbName = C
                                    1-  398     ;***
                                    1-  399     ;has an exit
                                    1-  400     ;1 compiler assigned register :
                                    1-  401     ;   r0x1007
                                    1-  402     ;; Starting pCode block
                                    1-  403     .segment "code"; module=main, function=_Delay80us
                                    1-  405     ;local variable name mapping:
     0000                           1-  407     _Delay80us:
                                    1-  408     ; 2 exit points
                                    1-  409     	.line	415, "main.c"; 	for(unsigned char i=0;i<80;i++)
                                    1-  410     	BANKSEL	r0x1007
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  411     	CLRR	r0x1007
                                    1-  412     ;;unsigned compare: left < lit (0x50=80), size=1
     0002                           1-  413     _00287_DS_:
     0002 2150                      1-  414     	MOVIA	0x50
                                    1-  415     	BANKSEL	r0x1007
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 04rr                      1-  416     	SUBAR	r0x1007,W
     0005 0C03                      1-  417     	BTRSC	STATUS,0
     0006 3rrr                      1-  418     	LGOTO	_00289_DS_
                                    1-  419     	.line	416, "main.c"; 	NOP();
     0007 0000                      1-  420     	nop
                                    1-  421     	.line	415, "main.c"; 	for(unsigned char i=0;i<80;i++)
                                    1-  422     	BANKSEL	r0x1007
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 05rr                      1-  423     	INCR	r0x1007,F
     000A 3rrr                      1-  424     	LGOTO	_00287_DS_
     000B                           1-  425     _00289_DS_:
                                    1-  426     	.line	417, "main.c"; 	}
                                    1-  427     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1-  428     ; exit point of _Delay80us
                                    1-  430     ;***
                                    1-  431     ;  pBlock Stats: dbName = C
                                    1-  432     ;***
                                    1-  433     ;has an exit
                                    1-  434     ;; Starting pCode block
                                    1-  435     .segment "code"; module=main, function=_send0
     0000                           1-  437     _send0:
                                    1-  438     ; 2 exit points
                                    1-  439     	.line	391, "main.c"; 	PB0 = 1;
     0000 18rr                      1-  440     	BSR	_PORTB,0
                                    1-  441     	.line	392, "main.c"; 	NOP();
     0001 0000                      1-  442     	nop
                                    1-  443     	.line	393, "main.c"; 	NOP();
     0002 0000                      1-  444     	nop
                                    1-  445     	.line	394, "main.c"; 	NOP();
     0003 0000                      1-  446     	nop
                                    1-  447     	.line	395, "main.c"; 	NOP();
     0004 0000                      1-  448     	nop
                                    1-  449     	.line	396, "main.c"; 	NOP();
     0005 0000                      1-  450     	nop
                                    1-  451     	.line	397, "main.c"; 	NOP();
     0006 0000                      1-  452     	nop
                                    1-  453     	.line	398, "main.c"; 	NOP();
     0007 0000                      1-  454     	nop
                                    1-  455     	.line	399, "main.c"; 	NOP();
     0008 0000                      1-  456     	nop
                                    1-  457     	.line	400, "main.c"; 	PORTB = 0;
     0009 02rr                      1-  458     	CLRR	_PORTB
                                    1-  459     	.line	401, "main.c"; 	NOP();
     000A 0000                      1-  460     	nop
                                    1-  461     	.line	402, "main.c"; 	NOP();
     000B 0000                      1-  462     	nop
                                    1-  463     	.line	403, "main.c"; 	NOP();
     000C 0000                      1-  464     	nop
                                    1-  465     	.line	404, "main.c"; 	NOP();
     000D 0000                      1-  466     	nop
                                    1-  467     	.line	405, "main.c"; 	NOP();
     000E 0000                      1-  468     	nop
                                    1-  469     	.line	406, "main.c"; 	NOP();
     000F 0000                      1-  470     	nop
                                    1-  471     	.line	407, "main.c"; 	NOP();
     0010 0000                      1-  472     	nop
                                    1-  473     	.line	408, "main.c"; 	NOP();
     0011 0000                      1-  474     	nop
                                    1-  475     	.line	410, "main.c"; 	}
                                    1-  476     	RETURN	
     0012 0010                      3-   26 m1      ret
                                    1-  477     ; exit point of _send0
                                    1-  479     ;***
                                    1-  480     ;  pBlock Stats: dbName = C
                                    1-  481     ;***
                                    1-  482     ;has an exit
                                    1-  483     ;; Starting pCode block
                                    1-  484     .segment "code"; module=main, function=_send1
     0000                           1-  486     _send1:
                                    1-  487     ; 2 exit points
                                    1-  488     	.line	369, "main.c"; 	PB0 = 1;
     0000 18rr                      1-  489     	BSR	_PORTB,0
                                    1-  490     	.line	370, "main.c"; 	NOP();
     0001 0000                      1-  491     	nop
                                    1-  492     	.line	371, "main.c"; 	NOP();
     0002 0000                      1-  493     	nop
                                    1-  494     	.line	372, "main.c"; 	NOP();
     0003 0000                      1-  495     	nop
                                    1-  496     	.line	373, "main.c"; 	NOP();
     0004 0000                      1-  497     	nop
                                    1-  498     	.line	374, "main.c"; 	NOP();
     0005 0000                      1-  499     	nop
                                    1-  500     	.line	375, "main.c"; 	NOP();
     0006 0000                      1-  501     	nop
                                    1-  502     	.line	376, "main.c"; 	NOP();
     0007 0000                      1-  503     	nop
                                    1-  504     	.line	377, "main.c"; 	NOP();
     0008 0000                      1-  505     	nop
                                    1-  506     	.line	378, "main.c"; 	NOP();
     0009 0000                      1-  507     	nop
                                    1-  508     	.line	379, "main.c"; 	NOP();
     000A 0000                      1-  509     	nop
                                    1-  510     	.line	380, "main.c"; 	NOP();
     000B 0000                      1-  511     	nop
                                    1-  512     	.line	381, "main.c"; 	NOP();
     000C 0000                      1-  513     	nop
                                    1-  514     	.line	382, "main.c"; 	NOP();
     000D 0000                      1-  515     	nop
                                    1-  516     	.line	383, "main.c"; 	NOP();
     000E 0000                      1-  517     	nop
                                    1-  518     	.line	384, "main.c"; 	NOP();
     000F 0000                      1-  519     	nop
                                    1-  520     	.line	385, "main.c"; 	NOP();
     0010 0000                      1-  521     	nop
                                    1-  522     	.line	386, "main.c"; 	PORTB = 0;
     0011 02rr                      1-  523     	CLRR	_PORTB
                                    1-  524     	.line	387, "main.c"; 	}
                                    1-  525     	RETURN	
     0012 0010                      3-   26 m1      ret
                                    1-  526     ; exit point of _send1
                                    1-  528     ;***
                                    1-  529     ;  pBlock Stats: dbName = C
                                    1-  530     ;***
                                    1-  531     ;has an exit
                                    1-  532     ;functions called:
                                    1-  533     ;   _send1
                                    1-  534     ;   _send0
                                    1-  535     ;   _send1
                                    1-  536     ;   _send0
                                    1-  537     ;   _send1
                                    1-  538     ;   _send0
                                    1-  539     ;   _send1
                                    1-  540     ;   _send0
                                    1-  541     ;   _send1
                                    1-  542     ;   _send0
                                    1-  543     ;   _send1
                                    1-  544     ;   _send0
                                    1-  545     ;   _send1
                                    1-  546     ;   _send0
                                    1-  547     ;   _send1
                                    1-  548     ;   _send0
                                    1-  549     ;   _send1
                                    1-  550     ;   _send0
                                    1-  551     ;   _send1
                                    1-  552     ;   _send0
                                    1-  553     ;   _send1
                                    1-  554     ;   _send0
                                    1-  555     ;   _send1
                                    1-  556     ;   _send0
                                    1-  557     ;   _send1
                                    1-  558     ;   _send0
                                    1-  559     ;   _send1
                                    1-  560     ;   _send0
                                    1-  561     ;   _send1
                                    1-  562     ;   _send0
                                    1-  563     ;   _send1
                                    1-  564     ;   _send0
                                    1-  565     ;   _send1
                                    1-  566     ;   _send0
                                    1-  567     ;   _send1
                                    1-  568     ;   _send0
                                    1-  569     ;   _send1
                                    1-  570     ;   _send0
                                    1-  571     ;   _send1
                                    1-  572     ;   _send0
                                    1-  573     ;   _send1
                                    1-  574     ;   _send0
                                    1-  575     ;   _send1
                                    1-  576     ;   _send0
                                    1-  577     ;   _send1
                                    1-  578     ;   _send0
                                    1-  579     ;   _send1
                                    1-  580     ;   _send0
                                    1-  581     ;   _send1
                                    1-  582     ;   _send0
                                    1-  583     ;   _send1
                                    1-  584     ;   _send0
                                    1-  585     ;   _send1
                                    1-  586     ;   _send0
                                    1-  587     ;   _send1
                                    1-  588     ;   _send0
                                    1-  589     ;   _send1
                                    1-  590     ;   _send0
                                    1-  591     ;   _send1
                                    1-  592     ;   _send0
                                    1-  593     ;   _send1
                                    1-  594     ;   _send0
                                    1-  595     ;   _send1
                                    1-  596     ;   _send0
                                    1-  597     ;   _send1
                                    1-  598     ;   _send0
                                    1-  599     ;   _send1
                                    1-  600     ;   _send0
                                    1-  601     ;   _send1
                                    1-  602     ;   _send0
                                    1-  603     ;   _send1
                                    1-  604     ;   _send0
                                    1-  605     ;   _send1
                                    1-  606     ;   _send0
                                    1-  607     ;   _send1
                                    1-  608     ;   _send0
                                    1-  609     ;   _send1
                                    1-  610     ;   _send0
                                    1-  611     ;   _send1
                                    1-  612     ;   _send0
                                    1-  613     ;   _send1
                                    1-  614     ;   _send0
                                    1-  615     ;   _send1
                                    1-  616     ;   _send0
                                    1-  617     ;   _send1
                                    1-  618     ;   _send0
                                    1-  619     ;   _send1
                                    1-  620     ;   _send0
                                    1-  621     ;   _send1
                                    1-  622     ;   _send0
                                    1-  623     ;   _send1
                                    1-  624     ;   _send0
                                    1-  625     ;   _send1
                                    1-  626     ;   _send0
                                    1-  627     ;   _send1
                                    1-  628     ;   _send0
                                    1-  629     ;5 compiler assigned registers:
                                    1-  630     ;   r0x1008
                                    1-  631     ;   STK00
                                    1-  632     ;   r0x1009
                                    1-  633     ;   STK01
                                    1-  634     ;   r0x100A
                                    1-  635     ;; Starting pCode block
                                    1-  636     .segment "code"; module=main, function=_sendRGB
                                    1-  638     ;local variable name mapping:
     0000                           1-  642     _sendRGB:
                                    1-  643     ; 2 exit points
                                    1-  644     	.line	236, "main.c"; 	void sendRGB(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1-  645     	BANKSEL	r0x1008
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  646     	MOVAR	r0x1008
     0002 01rr                      1-  647     	MOVR	STK00,W
                                    1-  648     	BANKSEL	r0x1009
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  649     	MOVAR	r0x1009
     0005 01rr                      1-  650     	MOVR	STK01,W
                                    1-  651     	BANKSEL	r0x100A
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  652     	MOVAR	r0x100A
                                    1-  653     	.line	239, "main.c"; 	colorR = colorR<<1;
     0008 1C03                      1-  654     	BCR	STATUS,0
                                    1-  655     	BANKSEL	r0x1008
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 14rr                      1-  656     	RLR	r0x1008,F
                                    1-  657     	.line	240, "main.c"; 	if(D)
     000B 0803                      1-  658     	BTRSS	STATUS,0
     000C 3rrr                      1-  659     	LGOTO	_00202_DS_
                                    1-  660     	.line	241, "main.c"; 	send1();
     000D 2rrr                      1-  661     	LCALL	_send1
     000E 3rrr                      1-  662     	LGOTO	_00203_DS_
     000F                           1-  663     _00202_DS_:
                                    1-  664     	.line	243, "main.c"; 	send0();
     000F 2rrr                      1-  665     	LCALL	_send0
     0010                           1-  666     _00203_DS_:
                                    1-  667     	.line	244, "main.c"; 	colorR = colorR<<1;
     0010 1C03                      1-  668     	BCR	STATUS,0
                                    1-  669     	BANKSEL	r0x1008
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 14rr                      1-  670     	RLR	r0x1008,F
                                    1-  671     	.line	245, "main.c"; 	if(D)
     0013 0803                      1-  672     	BTRSS	STATUS,0
     0014 3rrr                      1-  673     	LGOTO	_00205_DS_
                                    1-  674     	.line	246, "main.c"; 	send1();
     0015 2rrr                      1-  675     	LCALL	_send1
     0016 3rrr                      1-  676     	LGOTO	_00206_DS_
     0017                           1-  677     _00205_DS_:
                                    1-  678     	.line	248, "main.c"; 	send0();
     0017 2rrr                      1-  679     	LCALL	_send0
     0018                           1-  680     _00206_DS_:
                                    1-  681     	.line	249, "main.c"; 	colorR = colorR<<1;
     0018 1C03                      1-  682     	BCR	STATUS,0
                                    1-  683     	BANKSEL	r0x1008
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 14rr                      1-  684     	RLR	r0x1008,F
                                    1-  685     	.line	250, "main.c"; 	if(D)
     001B 0803                      1-  686     	BTRSS	STATUS,0
     001C 3rrr                      1-  687     	LGOTO	_00208_DS_
                                    1-  688     	.line	251, "main.c"; 	send1();
     001D 2rrr                      1-  689     	LCALL	_send1
     001E 3rrr                      1-  690     	LGOTO	_00209_DS_
     001F                           1-  691     _00208_DS_:
                                    1-  692     	.line	253, "main.c"; 	send0();
     001F 2rrr                      1-  693     	LCALL	_send0
     0020                           1-  694     _00209_DS_:
                                    1-  695     	.line	254, "main.c"; 	colorR = colorR<<1;
     0020 1C03                      1-  696     	BCR	STATUS,0
                                    1-  697     	BANKSEL	r0x1008
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 14rr                      1-  698     	RLR	r0x1008,F
                                    1-  699     	.line	255, "main.c"; 	if(D)
     0023 0803                      1-  700     	BTRSS	STATUS,0
     0024 3rrr                      1-  701     	LGOTO	_00211_DS_
                                    1-  702     	.line	256, "main.c"; 	send1();
     0025 2rrr                      1-  703     	LCALL	_send1
     0026 3rrr                      1-  704     	LGOTO	_00212_DS_
     0027                           1-  705     _00211_DS_:
                                    1-  706     	.line	258, "main.c"; 	send0();
     0027 2rrr                      1-  707     	LCALL	_send0
     0028                           1-  708     _00212_DS_:
                                    1-  709     	.line	260, "main.c"; 	if(D)
     0028 0803                      1-  710     	BTRSS	STATUS,0
     0029 3rrr                      1-  711     	LGOTO	_00214_DS_
                                    1-  712     	.line	261, "main.c"; 	send1();
     002A 2rrr                      1-  713     	LCALL	_send1
     002B 3rrr                      1-  714     	LGOTO	_00215_DS_
     002C                           1-  715     _00214_DS_:
                                    1-  716     	.line	263, "main.c"; 	send0();
     002C 2rrr                      1-  717     	LCALL	_send0
     002D                           1-  718     _00215_DS_:
                                    1-  719     	.line	265, "main.c"; 	if(D)
     002D 0803                      1-  720     	BTRSS	STATUS,0
     002E 3rrr                      1-  721     	LGOTO	_00217_DS_
                                    1-  722     	.line	266, "main.c"; 	send1();
     002F 2rrr                      1-  723     	LCALL	_send1
     0030 3rrr                      1-  724     	LGOTO	_00218_DS_
     0031                           1-  725     _00217_DS_:
                                    1-  726     	.line	268, "main.c"; 	send0();
     0031 2rrr                      1-  727     	LCALL	_send0
     0032                           1-  728     _00218_DS_:
                                    1-  729     	.line	270, "main.c"; 	if(D)
     0032 0803                      1-  730     	BTRSS	STATUS,0
     0033 3rrr                      1-  731     	LGOTO	_00220_DS_
                                    1-  732     	.line	271, "main.c"; 	send1();
     0034 2rrr                      1-  733     	LCALL	_send1
     0035 3rrr                      1-  734     	LGOTO	_00221_DS_
     0036                           1-  735     _00220_DS_:
                                    1-  736     	.line	273, "main.c"; 	send0();
     0036 2rrr                      1-  737     	LCALL	_send0
     0037                           1-  738     _00221_DS_:
                                    1-  739     	.line	275, "main.c"; 	if(D)
     0037 0803                      1-  740     	BTRSS	STATUS,0
     0038 3rrr                      1-  741     	LGOTO	_00223_DS_
                                    1-  742     	.line	276, "main.c"; 	send1();
     0039 2rrr                      1-  743     	LCALL	_send1
     003A 3rrr                      1-  744     	LGOTO	_00224_DS_
     003B                           1-  745     _00223_DS_:
                                    1-  746     	.line	278, "main.c"; 	send0();
     003B 2rrr                      1-  747     	LCALL	_send0
     003C                           1-  748     _00224_DS_:
                                    1-  749     	.line	280, "main.c"; 	colorG = colorG<<1;
     003C 1C03                      1-  750     	BCR	STATUS,0
                                    1-  751     	BANKSEL	r0x1009
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 14rr                      1-  752     	RLR	r0x1009,F
                                    1-  753     	.line	281, "main.c"; 	if(D)
     003F 0803                      1-  754     	BTRSS	STATUS,0
     0040 3rrr                      1-  755     	LGOTO	_00226_DS_
                                    1-  756     	.line	282, "main.c"; 	send1();
     0041 2rrr                      1-  757     	LCALL	_send1
     0042 3rrr                      1-  758     	LGOTO	_00227_DS_
     0043                           1-  759     _00226_DS_:
                                    1-  760     	.line	284, "main.c"; 	send0();
     0043 2rrr                      1-  761     	LCALL	_send0
     0044                           1-  762     _00227_DS_:
                                    1-  763     	.line	285, "main.c"; 	colorG = colorG<<1;
     0044 1C03                      1-  764     	BCR	STATUS,0
                                    1-  765     	BANKSEL	r0x1009
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 14rr                      1-  766     	RLR	r0x1009,F
                                    1-  767     	.line	286, "main.c"; 	if(D)
     0047 0803                      1-  768     	BTRSS	STATUS,0
     0048 3rrr                      1-  769     	LGOTO	_00229_DS_
                                    1-  770     	.line	287, "main.c"; 	send1();
     0049 2rrr                      1-  771     	LCALL	_send1
     004A 3rrr                      1-  772     	LGOTO	_00230_DS_
     004B                           1-  773     _00229_DS_:
                                    1-  774     	.line	289, "main.c"; 	send0();
     004B 2rrr                      1-  775     	LCALL	_send0
     004C                           1-  776     _00230_DS_:
                                    1-  777     	.line	290, "main.c"; 	colorG = colorG<<1;
     004C 1C03                      1-  778     	BCR	STATUS,0
                                    1-  779     	BANKSEL	r0x1009
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 14rr                      1-  780     	RLR	r0x1009,F
                                    1-  781     	.line	291, "main.c"; 	if(D)
     004F 0803                      1-  782     	BTRSS	STATUS,0
     0050 3rrr                      1-  783     	LGOTO	_00232_DS_
                                    1-  784     	.line	292, "main.c"; 	send1();
     0051 2rrr                      1-  785     	LCALL	_send1
     0052 3rrr                      1-  786     	LGOTO	_00233_DS_
     0053                           1-  787     _00232_DS_:
                                    1-  788     	.line	294, "main.c"; 	send0();
     0053 2rrr                      1-  789     	LCALL	_send0
     0054                           1-  790     _00233_DS_:
                                    1-  791     	.line	295, "main.c"; 	colorG = colorG<<1;
     0054 1C03                      1-  792     	BCR	STATUS,0
                                    1-  793     	BANKSEL	r0x1009
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 14rr                      1-  794     	RLR	r0x1009,F
                                    1-  795     	.line	296, "main.c"; 	if(D)
     0057 0803                      1-  796     	BTRSS	STATUS,0
     0058 3rrr                      1-  797     	LGOTO	_00235_DS_
                                    1-  798     	.line	297, "main.c"; 	send1();
     0059 2rrr                      1-  799     	LCALL	_send1
     005A 3rrr                      1-  800     	LGOTO	_00236_DS_
     005B                           1-  801     _00235_DS_:
                                    1-  802     	.line	299, "main.c"; 	send0();
     005B 2rrr                      1-  803     	LCALL	_send0
     005C                           1-  804     _00236_DS_:
                                    1-  805     	.line	301, "main.c"; 	if(D)
     005C 0803                      1-  806     	BTRSS	STATUS,0
     005D 3rrr                      1-  807     	LGOTO	_00238_DS_
                                    1-  808     	.line	302, "main.c"; 	send1();
     005E 2rrr                      1-  809     	LCALL	_send1
     005F 3rrr                      1-  810     	LGOTO	_00239_DS_
     0060                           1-  811     _00238_DS_:
                                    1-  812     	.line	304, "main.c"; 	send0();
     0060 2rrr                      1-  813     	LCALL	_send0
     0061                           1-  814     _00239_DS_:
                                    1-  815     	.line	306, "main.c"; 	if(D)
     0061 0803                      1-  816     	BTRSS	STATUS,0
     0062 3rrr                      1-  817     	LGOTO	_00241_DS_
                                    1-  818     	.line	307, "main.c"; 	send1();
     0063 2rrr                      1-  819     	LCALL	_send1
     0064 3rrr                      1-  820     	LGOTO	_00242_DS_
     0065                           1-  821     _00241_DS_:
                                    1-  822     	.line	309, "main.c"; 	send0();
     0065 2rrr                      1-  823     	LCALL	_send0
     0066                           1-  824     _00242_DS_:
                                    1-  825     	.line	311, "main.c"; 	if(D)
     0066 0803                      1-  826     	BTRSS	STATUS,0
     0067 3rrr                      1-  827     	LGOTO	_00244_DS_
                                    1-  828     	.line	312, "main.c"; 	send1();
     0068 2rrr                      1-  829     	LCALL	_send1
     0069 3rrr                      1-  830     	LGOTO	_00245_DS_
     006A                           1-  831     _00244_DS_:
                                    1-  832     	.line	314, "main.c"; 	send0();
     006A 2rrr                      1-  833     	LCALL	_send0
     006B                           1-  834     _00245_DS_:
                                    1-  835     	.line	316, "main.c"; 	if(D)
     006B 0803                      1-  836     	BTRSS	STATUS,0
     006C 3rrr                      1-  837     	LGOTO	_00247_DS_
                                    1-  838     	.line	317, "main.c"; 	send1();
     006D 2rrr                      1-  839     	LCALL	_send1
     006E 3rrr                      1-  840     	LGOTO	_00248_DS_
     006F                           1-  841     _00247_DS_:
                                    1-  842     	.line	319, "main.c"; 	send0();
     006F 2rrr                      1-  843     	LCALL	_send0
     0070                           1-  844     _00248_DS_:
                                    1-  845     	.line	321, "main.c"; 	colorB = colorB<<1;
     0070 1C03                      1-  846     	BCR	STATUS,0
                                    1-  847     	BANKSEL	r0x100A
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 14rr                      1-  848     	RLR	r0x100A,F
                                    1-  849     	.line	322, "main.c"; 	if(D)
     0073 0803                      1-  850     	BTRSS	STATUS,0
     0074 3rrr                      1-  851     	LGOTO	_00250_DS_
                                    1-  852     	.line	323, "main.c"; 	send1();
     0075 2rrr                      1-  853     	LCALL	_send1
     0076 3rrr                      1-  854     	LGOTO	_00251_DS_
     0077                           1-  855     _00250_DS_:
                                    1-  856     	.line	325, "main.c"; 	send0();
     0077 2rrr                      1-  857     	LCALL	_send0
     0078                           1-  858     _00251_DS_:
                                    1-  859     	.line	326, "main.c"; 	colorB = colorB<<1;
     0078 1C03                      1-  860     	BCR	STATUS,0
                                    1-  861     	BANKSEL	r0x100A
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 14rr                      1-  862     	RLR	r0x100A,F
                                    1-  863     	.line	327, "main.c"; 	if(D)
     007B 0803                      1-  864     	BTRSS	STATUS,0
     007C 3rrr                      1-  865     	LGOTO	_00253_DS_
                                    1-  866     	.line	328, "main.c"; 	send1();
     007D 2rrr                      1-  867     	LCALL	_send1
     007E 3rrr                      1-  868     	LGOTO	_00254_DS_
     007F                           1-  869     _00253_DS_:
                                    1-  870     	.line	330, "main.c"; 	send0();
     007F 2rrr                      1-  871     	LCALL	_send0
     0080                           1-  872     _00254_DS_:
                                    1-  873     	.line	331, "main.c"; 	colorB = colorB<<1;
     0080 1C03                      1-  874     	BCR	STATUS,0
                                    1-  875     	BANKSEL	r0x100A
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 14rr                      1-  876     	RLR	r0x100A,F
                                    1-  877     	.line	332, "main.c"; 	if(D)
     0083 0803                      1-  878     	BTRSS	STATUS,0
     0084 3rrr                      1-  879     	LGOTO	_00256_DS_
                                    1-  880     	.line	333, "main.c"; 	send1();
     0085 2rrr                      1-  881     	LCALL	_send1
     0086 3rrr                      1-  882     	LGOTO	_00257_DS_
     0087                           1-  883     _00256_DS_:
                                    1-  884     	.line	335, "main.c"; 	send0();
     0087 2rrr                      1-  885     	LCALL	_send0
     0088                           1-  886     _00257_DS_:
                                    1-  887     	.line	336, "main.c"; 	colorB = colorB<<1;
     0088 1C03                      1-  888     	BCR	STATUS,0
                                    1-  889     	BANKSEL	r0x100A
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 14rr                      1-  890     	RLR	r0x100A,F
                                    1-  891     	.line	337, "main.c"; 	if(D)
     008B 0803                      1-  892     	BTRSS	STATUS,0
     008C 3rrr                      1-  893     	LGOTO	_00259_DS_
                                    1-  894     	.line	338, "main.c"; 	send1();
     008D 2rrr                      1-  895     	LCALL	_send1
     008E 3rrr                      1-  896     	LGOTO	_00260_DS_
     008F                           1-  897     _00259_DS_:
                                    1-  898     	.line	340, "main.c"; 	send0();
     008F 2rrr                      1-  899     	LCALL	_send0
     0090                           1-  900     _00260_DS_:
                                    1-  901     	.line	342, "main.c"; 	if(D)
     0090 0803                      1-  902     	BTRSS	STATUS,0
     0091 3rrr                      1-  903     	LGOTO	_00262_DS_
                                    1-  904     	.line	343, "main.c"; 	send1();
     0092 2rrr                      1-  905     	LCALL	_send1
     0093 3rrr                      1-  906     	LGOTO	_00263_DS_
     0094                           1-  907     _00262_DS_:
                                    1-  908     	.line	345, "main.c"; 	send0();
     0094 2rrr                      1-  909     	LCALL	_send0
     0095                           1-  910     _00263_DS_:
                                    1-  911     	.line	347, "main.c"; 	if(D)
     0095 0803                      1-  912     	BTRSS	STATUS,0
     0096 3rrr                      1-  913     	LGOTO	_00265_DS_
                                    1-  914     	.line	348, "main.c"; 	send1();
     0097 2rrr                      1-  915     	LCALL	_send1
     0098 3rrr                      1-  916     	LGOTO	_00266_DS_
     0099                           1-  917     _00265_DS_:
                                    1-  918     	.line	350, "main.c"; 	send0();
     0099 2rrr                      1-  919     	LCALL	_send0
     009A                           1-  920     _00266_DS_:
                                    1-  921     	.line	352, "main.c"; 	if(D)
     009A 0803                      1-  922     	BTRSS	STATUS,0
     009B 3rrr                      1-  923     	LGOTO	_00268_DS_
                                    1-  924     	.line	353, "main.c"; 	send1();
     009C 2rrr                      1-  925     	LCALL	_send1
     009D 3rrr                      1-  926     	LGOTO	_00269_DS_
     009E                           1-  927     _00268_DS_:
                                    1-  928     	.line	355, "main.c"; 	send0();
     009E 2rrr                      1-  929     	LCALL	_send0
     009F                           1-  930     _00269_DS_:
                                    1-  931     	.line	357, "main.c"; 	if(D)
     009F 0803                      1-  932     	BTRSS	STATUS,0
     00A0 3rrr                      1-  933     	LGOTO	_00271_DS_
                                    1-  934     	.line	358, "main.c"; 	send1();
     00A1 2rrr                      1-  935     	LCALL	_send1
     00A2 3rrr                      1-  936     	LGOTO	_00272_DS_
     00A3                           1-  937     _00271_DS_:
                                    1-  938     	.line	360, "main.c"; 	send0();
     00A3 2rrr                      1-  939     	LCALL	_send0
     00A4                           1-  940     _00272_DS_:
                                    1-  941     	.line	362, "main.c"; 	PB0 = 0;
     00A4 1Crr                      1-  942     	BCR	_PORTB,0
                                    1-  943     	.line	363, "main.c"; 	}
                                    1-  944     	RETURN	
     00A5 0010                      3-   26 m1      ret
                                    1-  945     ; exit point of _sendRGB
                                    1-  947     ;***
                                    1-  948     ;  pBlock Stats: dbName = C
                                    1-  949     ;***
                                    1-  950     ;has an exit
                                    1-  951     ;functions called:
                                    1-  952     ;   _sendRGB
                                    1-  953     ;   _Delay80us
                                    1-  954     ;   _sendRGB
                                    1-  955     ;   _Delay80us
                                    1-  956     ;12 compiler assigned registers:
                                    1-  957     ;   r0x100B
                                    1-  958     ;   STK00
                                    1-  959     ;   r0x100C
                                    1-  960     ;   STK01
                                    1-  961     ;   r0x100D
                                    1-  962     ;   STK02
                                    1-  963     ;   r0x100E
                                    1-  964     ;   r0x100F
                                    1-  965     ;   r0x1010
                                    1-  966     ;   r0x1011
                                    1-  967     ;   r0x1012
                                    1-  968     ;   r0x1013
                                    1-  969     ;; Starting pCode block
                                    1-  970     .segment "code"; module=main, function=_sendtoLast
                                    1-  972     ;local variable name mapping:
     0000                           1-  979     _sendtoLast:
                                    1-  980     ; 2 exit points
                                    1-  981     	.line	226, "main.c"; 	void sendtoLast(char ledNub,unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1-  982     	BANKSEL	r0x100B
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  983     	MOVAR	r0x100B
     0002 01rr                      1-  984     	MOVR	STK00,W
                                    1-  985     	BANKSEL	r0x100C
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  986     	MOVAR	r0x100C
     0005 01rr                      1-  987     	MOVR	STK01,W
                                    1-  988     	BANKSEL	r0x100D
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  989     	MOVAR	r0x100D
     0008 01rr                      1-  990     	MOVR	STK02,W
                                    1-  991     	BANKSEL	r0x100E
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  992     	MOVAR	r0x100E
                                    1-  993     	.line	228, "main.c"; 	for(int i=0;i<ledNub;i++)
                                    1-  994     	BANKSEL	r0x100F
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1-  995     	CLRR	r0x100F
                                    1-  996     	BANKSEL	r0x1010
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1-  997     	CLRR	r0x1010
     000F                           1-  998     _00185_DS_:
                                    1-  999     	BANKSEL	r0x100B
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1000     	MOVR	r0x100B,W
                                    1- 1001     	BANKSEL	r0x1011
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 1002     	MOVAR	r0x1011
                                    1- 1003     ;;1	CLRR	r0x1012
                                    1- 1004     	BANKSEL	r0x1010
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1005     	MOVR	r0x1010,W
     0015 2580                      1- 1006     	ADDIA	0x80
                                    1- 1007     	BANKSEL	r0x1013
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1008     	MOVAR	r0x1013
     0018 2100                      1- 1009     	MOVIA	0x00
     0019 2580                      1- 1010     	ADDIA	0x80
     001A 04rr                      1- 1011     	SUBAR	r0x1013,W
     001B 0903                      1- 1012     	BTRSS	STATUS,2
     001C 3rrr                      1- 1013     	LGOTO	_00196_DS_
                                    1- 1014     	BANKSEL	r0x1011
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1015     	MOVR	r0x1011,W
                                    1- 1016     	BANKSEL	r0x100F
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1- 1017     	SUBAR	r0x100F,W
     0021                           1- 1018     _00196_DS_:
     0021 0C03                      1- 1019     	BTRSC	STATUS,0
     0022 3rrr                      1- 1020     	LGOTO	_00183_DS_
                                    1- 1021     	.line	230, "main.c"; 	sendRGB(colorR,colorG,colorB);
                                    1- 1022     	BANKSEL	r0x100E
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1- 1023     	MOVR	r0x100E,W
     0025 00rr                      1- 1024     	MOVAR	STK01
                                    1- 1025     	BANKSEL	r0x100D
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1026     	MOVR	r0x100D,W
     0028 00rr                      1- 1027     	MOVAR	STK00
                                    1- 1028     	BANKSEL	r0x100C
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 1029     	MOVR	r0x100C,W
     002B 2rrr                      1- 1030     	LCALL	_sendRGB
                                    1- 1031     	.line	228, "main.c"; 	for(int i=0;i<ledNub;i++)
                                    1- 1032     	BANKSEL	r0x100F
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1033     	INCR	r0x100F,F
     002E 0903                      1- 1034     	BTRSS	STATUS,2
     002F 3rrr                      1- 1035     	LGOTO	_00001_DS_
                                    1- 1036     	BANKSEL	r0x1010
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 05rr                      1- 1037     	INCR	r0x1010,F
     0032                           1- 1038     _00001_DS_:
     0032 3rrr                      1- 1039     	LGOTO	_00185_DS_
     0033                           1- 1040     _00183_DS_:
                                    1- 1041     	.line	232, "main.c"; 	Delay80us();
     0033 2rrr                      1- 1042     	LCALL	_Delay80us
                                    1- 1043     	.line	233, "main.c"; 	}
                                    1- 1044     	RETURN	
     0034 0010                      3-   26 m1      ret
                                    1- 1045     ; exit point of _sendtoLast
                                    1- 1047     ;***
                                    1- 1048     ;  pBlock Stats: dbName = C
                                    1- 1049     ;***
                                    1- 1050     ;has an exit
                                    1- 1051     ;1 compiler assigned register :
                                    1- 1052     ;   r0x1014
                                    1- 1053     ;; Starting pCode block
                                    1- 1054     .segment "code"; module=main, function=_keyRead
                                    1- 1056     ;local variable name mapping:
     0000                           1- 1058     _keyRead:
                                    1- 1059     ; 2 exit points
                                    1- 1060     	.line	207, "main.c"; 	char keyRead(char KeyStatus)	
                                    1- 1061     	BANKSEL	r0x1014
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1062     	MOVAR	r0x1014
                                    1- 1063     	.line	209, "main.c"; 	if (KeyStatus)
     0002 01rr                      1- 1064     	MOVR	r0x1014,W
     0003 0D03                      1- 1065     	BTRSC	STATUS,2
     0004 3rrr                      1- 1066     	LGOTO	_00176_DS_
                                    1- 1067     	.line	211, "main.c"; 	keyCount++;
                                    1- 1068     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1069     	INCR	_keyCount,F
     0007 3rrr                      1- 1070     	LGOTO	_00177_DS_
                                    1- 1071     ;;unsigned compare: left < lit (0x8=8), size=1
     0008                           1- 1072     _00176_DS_:
                                    1- 1073     	.line	215, "main.c"; 	if(keyCount >= 8)
     0008 2108                      1- 1074     	MOVIA	0x08
                                    1- 1075     	BANKSEL	_keyCount
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 04rr                      1- 1076     	SUBAR	_keyCount,W
     000B 0803                      1- 1077     	BTRSS	STATUS,0
     000C 3rrr                      1- 1078     	LGOTO	_00174_DS_
                                    1- 1079     	.line	217, "main.c"; 	keyCount = 0;
     000D 02rr                      1- 1080     	CLRR	_keyCount
                                    1- 1081     	.line	218, "main.c"; 	return	1;
     000E 2101                      1- 1082     	MOVIA	0x01
     000F 3rrr                      1- 1083     	LGOTO	_00178_DS_
     0010                           1- 1084     _00174_DS_:
                                    1- 1085     	.line	220, "main.c"; 	keyCount = 0;
                                    1- 1086     	BANKSEL	_keyCount
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1- 1087     	CLRR	_keyCount
     0012                           1- 1088     _00177_DS_:
                                    1- 1089     	.line	222, "main.c"; 	return 0;
     0012 2100                      1- 1090     	MOVIA	0x00
     0013                           1- 1091     _00178_DS_:
                                    1- 1092     	.line	223, "main.c"; 	}
                                    1- 1093     	RETURN	
     0013 0010                      3-   26 m1      ret
                                    1- 1094     ; exit point of _keyRead
                                    1- 1096     ;***
                                    1- 1097     ;  pBlock Stats: dbName = C
                                    1- 1098     ;***
                                    1- 1099     ;has an exit
                                    1- 1100     ;functions called:
                                    1- 1101     ;   _keyRead
                                    1- 1102     ;   _writeWordStep
                                    1- 1103     ;   _keyRead
                                    1- 1104     ;   _writeWordStep
                                    1- 1105     ;1 compiler assigned register :
                                    1- 1106     ;   r0x1015
                                    1- 1107     ;; Starting pCode block
                                    1- 1108     .segment "code"; module=main, function=_keyCtrl
                                    1- 1110     ;local variable name mapping:
     0000                           1- 1112     _keyCtrl:
                                    1- 1113     ; 2 exit points
                                    1- 1114     	.line	196, "main.c"; 	unsigned char keyClick = keyRead((~PORTB)&0x20);
     0000 07rr                      1- 1115     	COMR	_PORTB,W
                                    1- 1116     	BANKSEL	r0x1015
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1117     	MOVAR	r0x1015
     0003 2120                      1- 1118     	MOVIA	0x20
     0004 10rr                      1- 1119     	ANDAR	r0x1015,F
     0005 01rr                      1- 1120     	MOVR	r0x1015,W
     0006 2rrr                      1- 1121     	LCALL	_keyRead
                                    1- 1122     	BANKSEL	r0x1015
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 1123     	MOVAR	r0x1015
                                    1- 1124     	.line	197, "main.c"; 	if(keyClick)
     0009 01rr                      1- 1125     	MOVR	r0x1015,W
     000A 0D03                      1- 1126     	BTRSC	STATUS,2
     000B 3rrr                      1- 1127     	LGOTO	_00168_DS_
                                    1- 1128     	.line	199, "main.c"; 	if(++workStep >= 21)
                                    1- 1129     	BANKSEL	_workStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 05rr                      1- 1130     	INCR	_workStep,F
                                    1- 1131     ;;unsigned compare: left < lit (0x15=21), size=1
     000E 2115                      1- 1132     	MOVIA	0x15
     000F 04rr                      1- 1133     	SUBAR	_workStep,W
     0010 0803                      1- 1134     	BTRSS	STATUS,0
     0011 3rrr                      1- 1135     	LGOTO	_00165_DS_
                                    1- 1136     	.line	200, "main.c"; 	workStep = 1;
     0012 2101                      1- 1137     	MOVIA	0x01
     0013 00rr                      1- 1138     	MOVAR	_workStep
     0014                           1- 1139     _00165_DS_:
                                    1- 1140     	.line	201, "main.c"; 	writeWordStep(workStep);
                                    1- 1141     	BANKSEL	_workStep
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 1142     	MOVR	_workStep,W
     0016 2rrr                      1- 1143     	LCALL	_writeWordStep
     0017                           1- 1144     _00168_DS_:
                                    1- 1145     	.line	204, "main.c"; 	}
                                    1- 1146     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 1147     ; exit point of _keyCtrl
                                    1- 1149     ;***
                                    1- 1150     ;  pBlock Stats: dbName = C
                                    1- 1151     ;***
                                    1- 1152     ;has an exit
                                    1- 1153     ;functions called:
                                    1- 1154     ;   _sendtoLast
                                    1- 1155     ;   _sendtoLast
                                    1- 1156     ;   _sendtoLast
                                    1- 1157     ;   _sendtoLast
                                    1- 1158     ;   _sendtoLast
                                    1- 1159     ;   _sendtoLast
                                    1- 1160     ;   _sendtoLast
                                    1- 1161     ;   _sendtoLast
                                    1- 1162     ;   _sendtoLast
                                    1- 1163     ;   _sendtoLast
                                    1- 1164     ;   _sendtoLast
                                    1- 1165     ;   _sendtoLast
                                    1- 1166     ;   _sendtoLast
                                    1- 1167     ;   _sendtoLast
                                    1- 1168     ;   _sendtoLast
                                    1- 1169     ;   _sendtoLast
                                    1- 1170     ;   _sendtoLast
                                    1- 1171     ;   _sendtoLast
                                    1- 1172     ;   _sendtoLast
                                    1- 1173     ;   _sendtoLast
                                    1- 1174     ;   _sendtoLast
                                    1- 1175     ;   _sendtoLast
                                    1- 1176     ;   _sendtoLast
                                    1- 1177     ;   _sendtoLast
                                    1- 1178     ;   _sendtoLast
                                    1- 1179     ;   _sendtoLast
                                    1- 1180     ;   _sendtoLast
                                    1- 1181     ;   _sendtoLast
                                    1- 1182     ;   _sendtoLast
                                    1- 1183     ;   _sendtoLast
                                    1- 1184     ;   _sendtoLast
                                    1- 1185     ;   _sendtoLast
                                    1- 1186     ;   _sendtoLast
                                    1- 1187     ;   _sendtoLast
                                    1- 1188     ;   _sendtoLast
                                    1- 1189     ;   _sendtoLast
                                    1- 1190     ;   _sendtoLast
                                    1- 1191     ;   _sendtoLast
                                    1- 1192     ;   _sendtoLast
                                    1- 1193     ;   _sendtoLast
                                    1- 1194     ;4 compiler assigned registers:
                                    1- 1195     ;   r0x1016
                                    1- 1196     ;   STK02
                                    1- 1197     ;   STK01
                                    1- 1198     ;   STK00
                                    1- 1199     ;; Starting pCode block
                                    1- 1200     .segment "code"; module=main, function=_ledCtrl
     0000                           1- 1202     _ledCtrl:
                                    1- 1203     ; 2 exit points
                                    1- 1204     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1- 1205     	.line	128, "main.c"; 	switch(workStep)
     0000 2101                      1- 1206     	MOVIA	0x01
                                    1- 1207     	BANKSEL	_workStep
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1208     	SUBAR	_workStep,W
     0003 0803                      1- 1209     	BTRSS	STATUS,0
     0004 3rrr                      1- 1210     	LGOTO	_00149_DS_
                                    1- 1211     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1212     ;;unsigned compare: left >= lit (0x15=21), size=1
     0005 2115                      1- 1213     	MOVIA	0x15
     0006 04rr                      1- 1214     	SUBAR	_workStep,W
     0007 0C03                      1- 1215     	BTRSC	STATUS,0
     0008 3rrr                      1- 1216     	LGOTO	_00149_DS_
     0009 06rr                      1- 1217     	DECR	_workStep,W
                                    1- 1218     	BANKSEL	r0x1016
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1219     	MOVAR	r0x1016
     000C 21rr                      1- 1220     	MOVIA	((_00159_DS_ >> 8) & 0xff)
     000D 008A                      1- 1221     	MOVAR	PCHBUF
     000E 01rr                      1- 1222     	MOVR	r0x1016,W
     000F 25rr                      1- 1223     	ADDIA	_00159_DS_
     0010 0C03                      1- 1224     	BTRSC	STATUS,0
     0011 058A                      1- 1225     	INCR	PCHBUF,F
     0012 0082                      1- 1226     	MOVAR	PCL
     0013                           1- 1227     _00159_DS_:
     0013 3rrr                      1- 1228     	LGOTO	_00128_DS_
     0014 3rrr                      1- 1229     	LGOTO	_00129_DS_
     0015 3rrr                      1- 1230     	LGOTO	_00130_DS_
     0016 3rrr                      1- 1231     	LGOTO	_00131_DS_
     0017 3rrr                      1- 1232     	LGOTO	_00132_DS_
     0018 3rrr                      1- 1233     	LGOTO	_00133_DS_
     0019 3rrr                      1- 1234     	LGOTO	_00134_DS_
     001A 3rrr                      1- 1235     	LGOTO	_00135_DS_
     001B 3rrr                      1- 1236     	LGOTO	_00136_DS_
     001C 3rrr                      1- 1237     	LGOTO	_00137_DS_
     001D 3rrr                      1- 1238     	LGOTO	_00138_DS_
     001E 3rrr                      1- 1239     	LGOTO	_00139_DS_
     001F 3rrr                      1- 1240     	LGOTO	_00140_DS_
     0020 3rrr                      1- 1241     	LGOTO	_00141_DS_
     0021 3rrr                      1- 1242     	LGOTO	_00142_DS_
     0022 3rrr                      1- 1243     	LGOTO	_00143_DS_
     0023 3rrr                      1- 1244     	LGOTO	_00144_DS_
     0024 3rrr                      1- 1245     	LGOTO	_00145_DS_
     0025 3rrr                      1- 1246     	LGOTO	_00146_DS_
     0026 3rrr                      1- 1247     	LGOTO	_00147_DS_
     0027                           1- 1248     _00128_DS_:
                                    1- 1249     	.line	131, "main.c"; 	sendtoLast(LED_N,WHITE);
     0027 21FF                      1- 1250     	MOVIA	0xff
     0028 00rr                      1- 1251     	MOVAR	STK02
     0029 00rr                      1- 1252     	MOVAR	STK01
     002A 00rr                      1- 1253     	MOVAR	STK00
     002B 2112                      1- 1254     	MOVIA	0x12
     002C 2rrr                      1- 1255     	LCALL	_sendtoLast
                                    1- 1256     	.line	132, "main.c"; 	break;
     002D 3rrr                      1- 1257     	LGOTO	_00149_DS_
     002E                           1- 1258     _00129_DS_:
                                    1- 1259     	.line	134, "main.c"; 	sendtoLast(LED_N,COLOR20);
     002E 21FA                      1- 1260     	MOVIA	0xfa
     002F 00rr                      1- 1261     	MOVAR	STK02
     0030 2100                      1- 1262     	MOVIA	0x00
     0031 00rr                      1- 1263     	MOVAR	STK01
     0032 21FA                      1- 1264     	MOVIA	0xfa
     0033 00rr                      1- 1265     	MOVAR	STK00
     0034 2112                      1- 1266     	MOVIA	0x12
     0035 2rrr                      1- 1267     	LCALL	_sendtoLast
                                    1- 1268     	.line	135, "main.c"; 	break;
     0036 3rrr                      1- 1269     	LGOTO	_00149_DS_
     0037                           1- 1270     _00130_DS_:
                                    1- 1271     	.line	137, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0037 21FA                      1- 1272     	MOVIA	0xfa
     0038 00rr                      1- 1273     	MOVAR	STK02
     0039 2100                      1- 1274     	MOVIA	0x00
     003A 00rr                      1- 1275     	MOVAR	STK01
     003B 21FA                      1- 1276     	MOVIA	0xfa
     003C 00rr                      1- 1277     	MOVAR	STK00
     003D 2112                      1- 1278     	MOVIA	0x12
     003E 2rrr                      1- 1279     	LCALL	_sendtoLast
                                    1- 1280     	.line	138, "main.c"; 	break;
     003F 3rrr                      1- 1281     	LGOTO	_00149_DS_
     0040                           1- 1282     _00131_DS_:
                                    1- 1283     	.line	140, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0040 21FA                      1- 1284     	MOVIA	0xfa
     0041 00rr                      1- 1285     	MOVAR	STK02
     0042 2100                      1- 1286     	MOVIA	0x00
     0043 00rr                      1- 1287     	MOVAR	STK01
     0044 21FA                      1- 1288     	MOVIA	0xfa
     0045 00rr                      1- 1289     	MOVAR	STK00
     0046 2112                      1- 1290     	MOVIA	0x12
     0047 2rrr                      1- 1291     	LCALL	_sendtoLast
                                    1- 1292     	.line	141, "main.c"; 	break;
     0048 3rrr                      1- 1293     	LGOTO	_00149_DS_
     0049                           1- 1294     _00132_DS_:
                                    1- 1295     	.line	143, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0049 21FA                      1- 1296     	MOVIA	0xfa
     004A 00rr                      1- 1297     	MOVAR	STK02
     004B 2100                      1- 1298     	MOVIA	0x00
     004C 00rr                      1- 1299     	MOVAR	STK01
     004D 21FA                      1- 1300     	MOVIA	0xfa
     004E 00rr                      1- 1301     	MOVAR	STK00
     004F 2112                      1- 1302     	MOVIA	0x12
     0050 2rrr                      1- 1303     	LCALL	_sendtoLast
                                    1- 1304     	.line	144, "main.c"; 	break;
     0051 3rrr                      1- 1305     	LGOTO	_00149_DS_
     0052                           1- 1306     _00133_DS_:
                                    1- 1307     	.line	146, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0052 21FA                      1- 1308     	MOVIA	0xfa
     0053 00rr                      1- 1309     	MOVAR	STK02
     0054 2100                      1- 1310     	MOVIA	0x00
     0055 00rr                      1- 1311     	MOVAR	STK01
     0056 21FA                      1- 1312     	MOVIA	0xfa
     0057 00rr                      1- 1313     	MOVAR	STK00
     0058 2112                      1- 1314     	MOVIA	0x12
     0059 2rrr                      1- 1315     	LCALL	_sendtoLast
                                    1- 1316     	.line	147, "main.c"; 	break;
     005A 3rrr                      1- 1317     	LGOTO	_00149_DS_
     005B                           1- 1318     _00134_DS_:
                                    1- 1319     	.line	149, "main.c"; 	sendtoLast(LED_N,COLOR20);
     005B 21FA                      1- 1320     	MOVIA	0xfa
     005C 00rr                      1- 1321     	MOVAR	STK02
     005D 2100                      1- 1322     	MOVIA	0x00
     005E 00rr                      1- 1323     	MOVAR	STK01
     005F 21FA                      1- 1324     	MOVIA	0xfa
     0060 00rr                      1- 1325     	MOVAR	STK00
     0061 2112                      1- 1326     	MOVIA	0x12
     0062 2rrr                      1- 1327     	LCALL	_sendtoLast
                                    1- 1328     	.line	150, "main.c"; 	break;
     0063 3rrr                      1- 1329     	LGOTO	_00149_DS_
     0064                           1- 1330     _00135_DS_:
                                    1- 1331     	.line	152, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0064 21FA                      1- 1332     	MOVIA	0xfa
     0065 00rr                      1- 1333     	MOVAR	STK02
     0066 2100                      1- 1334     	MOVIA	0x00
     0067 00rr                      1- 1335     	MOVAR	STK01
     0068 21FA                      1- 1336     	MOVIA	0xfa
     0069 00rr                      1- 1337     	MOVAR	STK00
     006A 2112                      1- 1338     	MOVIA	0x12
     006B 2rrr                      1- 1339     	LCALL	_sendtoLast
                                    1- 1340     	.line	153, "main.c"; 	break;
     006C 3rrr                      1- 1341     	LGOTO	_00149_DS_
     006D                           1- 1342     _00136_DS_:
                                    1- 1343     	.line	155, "main.c"; 	sendtoLast(LED_N,COLOR20);
     006D 21FA                      1- 1344     	MOVIA	0xfa
     006E 00rr                      1- 1345     	MOVAR	STK02
     006F 2100                      1- 1346     	MOVIA	0x00
     0070 00rr                      1- 1347     	MOVAR	STK01
     0071 21FA                      1- 1348     	MOVIA	0xfa
     0072 00rr                      1- 1349     	MOVAR	STK00
     0073 2112                      1- 1350     	MOVIA	0x12
     0074 2rrr                      1- 1351     	LCALL	_sendtoLast
                                    1- 1352     	.line	156, "main.c"; 	break;
     0075 3rrr                      1- 1353     	LGOTO	_00149_DS_
     0076                           1- 1354     _00137_DS_:
                                    1- 1355     	.line	158, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0076 21FA                      1- 1356     	MOVIA	0xfa
     0077 00rr                      1- 1357     	MOVAR	STK02
     0078 2100                      1- 1358     	MOVIA	0x00
     0079 00rr                      1- 1359     	MOVAR	STK01
     007A 21FA                      1- 1360     	MOVIA	0xfa
     007B 00rr                      1- 1361     	MOVAR	STK00
     007C 2112                      1- 1362     	MOVIA	0x12
     007D 2rrr                      1- 1363     	LCALL	_sendtoLast
                                    1- 1364     	.line	159, "main.c"; 	break;
     007E 3rrr                      1- 1365     	LGOTO	_00149_DS_
     007F                           1- 1366     _00138_DS_:
                                    1- 1367     	.line	161, "main.c"; 	sendtoLast(LED_N,COLOR20);
     007F 21FA                      1- 1368     	MOVIA	0xfa
     0080 00rr                      1- 1369     	MOVAR	STK02
     0081 2100                      1- 1370     	MOVIA	0x00
     0082 00rr                      1- 1371     	MOVAR	STK01
     0083 21FA                      1- 1372     	MOVIA	0xfa
     0084 00rr                      1- 1373     	MOVAR	STK00
     0085 2112                      1- 1374     	MOVIA	0x12
     0086 2rrr                      1- 1375     	LCALL	_sendtoLast
                                    1- 1376     	.line	162, "main.c"; 	break;
     0087 3rrr                      1- 1377     	LGOTO	_00149_DS_
     0088                           1- 1378     _00139_DS_:
                                    1- 1379     	.line	164, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0088 21FA                      1- 1380     	MOVIA	0xfa
     0089 00rr                      1- 1381     	MOVAR	STK02
     008A 2100                      1- 1382     	MOVIA	0x00
     008B 00rr                      1- 1383     	MOVAR	STK01
     008C 21FA                      1- 1384     	MOVIA	0xfa
     008D 00rr                      1- 1385     	MOVAR	STK00
     008E 2112                      1- 1386     	MOVIA	0x12
     008F 2rrr                      1- 1387     	LCALL	_sendtoLast
                                    1- 1388     	.line	165, "main.c"; 	break;
     0090 3rrr                      1- 1389     	LGOTO	_00149_DS_
     0091                           1- 1390     _00140_DS_:
                                    1- 1391     	.line	167, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0091 21FA                      1- 1392     	MOVIA	0xfa
     0092 00rr                      1- 1393     	MOVAR	STK02
     0093 2100                      1- 1394     	MOVIA	0x00
     0094 00rr                      1- 1395     	MOVAR	STK01
     0095 21FA                      1- 1396     	MOVIA	0xfa
     0096 00rr                      1- 1397     	MOVAR	STK00
     0097 2112                      1- 1398     	MOVIA	0x12
     0098 2rrr                      1- 1399     	LCALL	_sendtoLast
                                    1- 1400     	.line	168, "main.c"; 	break;
     0099 3rrr                      1- 1401     	LGOTO	_00149_DS_
     009A                           1- 1402     _00141_DS_:
                                    1- 1403     	.line	170, "main.c"; 	sendtoLast(LED_N,COLOR20);
     009A 21FA                      1- 1404     	MOVIA	0xfa
     009B 00rr                      1- 1405     	MOVAR	STK02
     009C 2100                      1- 1406     	MOVIA	0x00
     009D 00rr                      1- 1407     	MOVAR	STK01
     009E 21FA                      1- 1408     	MOVIA	0xfa
     009F 00rr                      1- 1409     	MOVAR	STK00
     00A0 2112                      1- 1410     	MOVIA	0x12
     00A1 2rrr                      1- 1411     	LCALL	_sendtoLast
                                    1- 1412     	.line	171, "main.c"; 	break;
     00A2 3rrr                      1- 1413     	LGOTO	_00149_DS_
     00A3                           1- 1414     _00142_DS_:
                                    1- 1415     	.line	173, "main.c"; 	sendtoLast(LED_N,GREEN);
     00A3 2100                      1- 1416     	MOVIA	0x00
     00A4 00rr                      1- 1417     	MOVAR	STK02
     00A5 21FF                      1- 1418     	MOVIA	0xff
     00A6 00rr                      1- 1419     	MOVAR	STK01
     00A7 2100                      1- 1420     	MOVIA	0x00
     00A8 00rr                      1- 1421     	MOVAR	STK00
     00A9 2112                      1- 1422     	MOVIA	0x12
     00AA 2rrr                      1- 1423     	LCALL	_sendtoLast
                                    1- 1424     	.line	174, "main.c"; 	break;
     00AB 3rrr                      1- 1425     	LGOTO	_00149_DS_
     00AC                           1- 1426     _00143_DS_:
                                    1- 1427     	.line	176, "main.c"; 	sendtoLast(LED_N,RED);
     00AC 2100                      1- 1428     	MOVIA	0x00
     00AD 00rr                      1- 1429     	MOVAR	STK02
     00AE 00rr                      1- 1430     	MOVAR	STK01
     00AF 21FF                      1- 1431     	MOVIA	0xff
     00B0 00rr                      1- 1432     	MOVAR	STK00
     00B1 2112                      1- 1433     	MOVIA	0x12
     00B2 2rrr                      1- 1434     	LCALL	_sendtoLast
                                    1- 1435     	.line	177, "main.c"; 	break;
     00B3 3rrr                      1- 1436     	LGOTO	_00149_DS_
     00B4                           1- 1437     _00144_DS_:
                                    1- 1438     	.line	179, "main.c"; 	sendtoLast(LED_N,BLUE);
     00B4 21FF                      1- 1439     	MOVIA	0xff
     00B5 00rr                      1- 1440     	MOVAR	STK02
     00B6 2100                      1- 1441     	MOVIA	0x00
     00B7 00rr                      1- 1442     	MOVAR	STK01
     00B8 00rr                      1- 1443     	MOVAR	STK00
     00B9 2112                      1- 1444     	MOVIA	0x12
     00BA 2rrr                      1- 1445     	LCALL	_sendtoLast
                                    1- 1446     	.line	180, "main.c"; 	break;
     00BB 3rrr                      1- 1447     	LGOTO	_00149_DS_
     00BC                           1- 1448     _00145_DS_:
                                    1- 1449     	.line	182, "main.c"; 	sendtoLast(LED_N,COLOR18);
     00BC 21FA                      1- 1450     	MOVIA	0xfa
     00BD 00rr                      1- 1451     	MOVAR	STK02
     00BE 00rr                      1- 1452     	MOVAR	STK01
     00BF 2100                      1- 1453     	MOVIA	0x00
     00C0 00rr                      1- 1454     	MOVAR	STK00
     00C1 2112                      1- 1455     	MOVIA	0x12
     00C2 2rrr                      1- 1456     	LCALL	_sendtoLast
                                    1- 1457     	.line	183, "main.c"; 	break;
     00C3 3rrr                      1- 1458     	LGOTO	_00149_DS_
     00C4                           1- 1459     _00146_DS_:
                                    1- 1460     	.line	185, "main.c"; 	sendtoLast(LED_N,YELLOW);
     00C4 2100                      1- 1461     	MOVIA	0x00
     00C5 00rr                      1- 1462     	MOVAR	STK02
     00C6 21FA                      1- 1463     	MOVIA	0xfa
     00C7 00rr                      1- 1464     	MOVAR	STK01
     00C8 00rr                      1- 1465     	MOVAR	STK00
     00C9 2112                      1- 1466     	MOVIA	0x12
     00CA 2rrr                      1- 1467     	LCALL	_sendtoLast
                                    1- 1468     	.line	186, "main.c"; 	break;
     00CB 3rrr                      1- 1469     	LGOTO	_00149_DS_
     00CC                           1- 1470     _00147_DS_:
                                    1- 1471     	.line	188, "main.c"; 	sendtoLast(LED_N,COLOR20);
     00CC 21FA                      1- 1472     	MOVIA	0xfa
     00CD 00rr                      1- 1473     	MOVAR	STK02
     00CE 2100                      1- 1474     	MOVIA	0x00
     00CF 00rr                      1- 1475     	MOVAR	STK01
     00D0 21FA                      1- 1476     	MOVIA	0xfa
     00D1 00rr                      1- 1477     	MOVAR	STK00
     00D2 2112                      1- 1478     	MOVIA	0x12
     00D3 2rrr                      1- 1479     	LCALL	_sendtoLast
     00D4                           1- 1480     _00149_DS_:
                                    1- 1481     	.line	191, "main.c"; 	}
                                    1- 1482     	RETURN	
     00D4 0010                      3-   26 m1      ret
                                    1- 1483     ; exit point of _ledCtrl
                                    1- 1485     ;***
                                    1- 1486     ;  pBlock Stats: dbName = C
                                    1- 1487     ;***
                                    1- 1488     ;has an exit
                                    1- 1489     ;; Starting pCode block
                                    1- 1490     .segment "code"; module=main, function=_initTimer0
     0000                           1- 1492     _initTimer0:
                                    1- 1493     ; 2 exit points
                                    1- 1494     	.line	79, "main.c"; 	PORTB = 0xFE;
     0000 21FE                      1- 1495     	MOVIA	0xfe
     0001 00rr                      1- 1496     	MOVAR	_PORTB
                                    1- 1497     	.line	80, "main.c"; 	BPHCON = 0x20;
     0002 2120                      1- 1498     	MOVIA	0x20
     0003 00rr                      1- 1499     	MOVAR	_BPHCON
                                    1- 1500     	.line	82, "main.c"; 	IOSTB =  C_PB5_Input;	
     0004 000r                      1- 1501     	IOST	_IOSTB
                                    1- 1502     	.line	83, "main.c"; 	PORTB = 0xFE;                        	// PortB Data Register = 0x00
     0005 21FE                      1- 1503     	MOVIA	0xfe
     0006 00rr                      1- 1504     	MOVAR	_PORTB
                                    1- 1505     	.line	84, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT & LVR
     0007 2188                      1- 1506     	MOVIA	0x88
     0008 00rr                      1- 1507     	MOVAR	_PCON
                                    1- 1508     	.line	85, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0009 2101                      1- 1509     	MOVIA	0x01
     000A 00rr                      1- 1510     	MOVAR	_INTE
                                    1- 1511     	.line	86, "main.c"; 	INTF = 0;
     000B 02rr                      1- 1512     	CLRR	_INTF
                                    1- 1513     	.line	89, "main.c"; 	PCON1 = C_TMR0_Dis;
     000C 0200                      1- 1514     	CLRA	
     000D 000r                      1- 1515     	IOST	_PCON1
                                    1- 1516     	.line	91, "main.c"; 	TMR0 = 55;
     000E 2137                      1- 1517     	MOVIA	0x37
     000F 00rr                      1- 1518     	MOVAR	_TMR0
                                    1- 1519     	.line	92, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0010 0200                      1- 1520     	CLRA	
     0011 0003                      1- 1521     	T0MD	
                                    1- 1522     	.line	94, "main.c"; 	PCON1 = C_TMR0_En;
     0012 2101                      1- 1523     	MOVIA	0x01
     0013 000r                      1- 1524     	IOST	_PCON1
                                    1- 1525     	.line	98, "main.c"; 	ENI();	
     0014 0004                      1- 1526     	ENI
                                    1- 1527     	.line	100, "main.c"; 	}
                                    1- 1528     	RETURN	
     0015 0010                      3-   26 m1      ret
                                    1- 1529     ; exit point of _initTimer0
                                    1- 1532     ;	code size estimation:
                                    1- 1533     ;	  530+   55 =   585 instructions ( 1280 byte)
                                    1- 1535     	end
                                    1- 1535     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800533
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    00000032
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00123_DS_              Label    0000000A
_00128_DS_              Label    00000027
_00129_DS_              Label    0000002E
_00130_DS_              Label    00000037
_00131_DS_              Label    00000040
_00132_DS_              Label    00000049
_00133_DS_              Label    00000052
_00134_DS_              Label    0000005B
_00135_DS_              Label    00000064
_00136_DS_              Label    0000006D
_00137_DS_              Label    00000076
_00138_DS_              Label    0000007F
_00139_DS_              Label    00000088
_00140_DS_              Label    00000091
_00141_DS_              Label    0000009A
_00142_DS_              Label    000000A3
_00143_DS_              Label    000000AC
_00144_DS_              Label    000000B4
_00145_DS_              Label    000000BC
_00146_DS_              Label    000000C4
_00147_DS_              Label    000000CC
_00149_DS_              Label    000000D4
_00159_DS_              Label    00000013
_00165_DS_              Label    00000014
_00168_DS_              Label    00000017
_00174_DS_              Label    00000010
_00176_DS_              Label    00000008
_00177_DS_              Label    00000012
_00178_DS_              Label    00000013
_00183_DS_              Label    00000033
_00185_DS_              Label    0000000F
_00196_DS_              Label    00000021
_00202_DS_              Label    0000000F
_00203_DS_              Label    00000010
_00205_DS_              Label    00000017
_00206_DS_              Label    00000018
_00208_DS_              Label    0000001F
_00209_DS_              Label    00000020
_00211_DS_              Label    00000027
_00212_DS_              Label    00000028
_00214_DS_              Label    0000002C
_00215_DS_              Label    0000002D
_00217_DS_              Label    00000031
_00218_DS_              Label    00000032
_00220_DS_              Label    00000036
_00221_DS_              Label    00000037
_00223_DS_              Label    0000003B
_00224_DS_              Label    0000003C
_00226_DS_              Label    00000043
_00227_DS_              Label    00000044
_00229_DS_              Label    0000004B
_00230_DS_              Label    0000004C
_00232_DS_              Label    00000053
_00233_DS_              Label    00000054
_00235_DS_              Label    0000005B
_00236_DS_              Label    0000005C
_00238_DS_              Label    00000060
_00239_DS_              Label    00000061
_00241_DS_              Label    00000065
_00242_DS_              Label    00000066
_00244_DS_              Label    0000006A
_00245_DS_              Label    0000006B
_00247_DS_              Label    0000006F
_00248_DS_              Label    00000070
_00250_DS_              Label    00000077
_00251_DS_              Label    00000078
_00253_DS_              Label    0000007F
_00254_DS_              Label    00000080
_00256_DS_              Label    00000087
_00257_DS_              Label    00000088
_00259_DS_              Label    0000008F
_00260_DS_              Label    00000090
_00262_DS_              Label    00000094
_00263_DS_              Label    00000095
_00265_DS_              Label    00000099
_00266_DS_              Label    0000009A
_00268_DS_              Label    0000009E
_00269_DS_              Label    0000009F
_00271_DS_              Label    000000A3
_00272_DS_              Label    000000A4
_00287_DS_              Label    00000002
_00289_DS_              Label    0000000B
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_Bdata                  Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_Delay10Us              Label    00000000
_Delay80us              Label    00000000
_FSR                    Label    00000000
_Gdata                  Label    00000000
_INDF                   Label    00000000
_initTimer0             Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtrl                Label    00000000
_keyRead                Label    00000000
_ledCtrl                Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_Rdata                  Label    00000000
_ReadByte               Label    00000000
_readWordStep           Label    00000000
_RecvAck                Label    00000000
_SDAInput               Label    00000000
_SDAOutput              Label    00000000
_send0                  Label    00000000
_send1                  Label    00000000
_SendAck                Label    00000000
_sendByte               Label    00000000
_SendByte               Label    00000000
_SendNoAck              Label    00000000
_sendRGB                Label    00000000
_sendtoLast             Label    00000000
_Start24C02             Label    00000000
_STATUS                 Label    00000000
_Stop24C02              Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_workStep               Label    00000000
_writeWordStep          Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1007                 Label    00000000
r0x1008                 Label    00000000
r0x1009                 Label    00000000
r0x100A                 Label    00000000
r0x100B                 Label    00000000
r0x100C                 Label    00000000
r0x100D                 Label    00000000
r0x100E                 Label    00000000
r0x100F                 Label    00000000
r0x1010                 Label    00000000
r0x1011                 Label    00000000
r0x1013                 Label    00000000
r0x1014                 Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a053d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A053D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
