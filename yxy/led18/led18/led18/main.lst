
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A053D,c=on
                                    1-    9     	#include "ny8a053d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_INDF
                                    1-   23     	extern	_TMR0
                                    1-   24     	extern	_PCL
                                    1-   25     	extern	_STATUS
                                    1-   26     	extern	_FSR
                                    1-   27     	extern	_PORTA
                                    1-   28     	extern	_PORTB
                                    1-   29     	extern	_PCON
                                    1-   30     	extern	_BWUCON
                                    1-   31     	extern	_PCHBUF
                                    1-   32     	extern	_ABPLCON
                                    1-   33     	extern	_BPHCON
                                    1-   34     	extern	_INTE
                                    1-   35     	extern	_INTF
                                    1-   36     	extern	_TMR1
                                    1-   37     	extern	_T1CR1
                                    1-   38     	extern	_T1CR2
                                    1-   39     	extern	_PWM1DUTY
                                    1-   40     	extern	_PS1CV
                                    1-   41     	extern	_BZ1CR
                                    1-   42     	extern	_IRCR
                                    1-   43     	extern	_TBHP
                                    1-   44     	extern	_TBHD
                                    1-   45     	extern	_OSCCR
                                    1-   46     	extern	_IOSTA
                                    1-   47     	extern	_IOSTB
                                    1-   48     	extern	_PS0CV
                                    1-   49     	extern	_BODCON
                                    1-   50     	extern	_PCON1
                                    1-   51     	extern	_T0MD
                                    1-   52     	extern	___sdcc_saved_fsr
                                    1-   53     	extern	___sdcc_saved_stk00
                                    1-   54     	extern	___sdcc_saved_stk01
                                    1-   55     	extern	__gptrput1
                                    1-   56     	extern	__gptrget1
                                    1-   57     	extern	__nyc_ny8_startup
                                    1-   58     ;--------------------------------------------------------
                                    1-   59     ; global declarations
                                    1-   60     ;--------------------------------------------------------
                                    1-   61     	extern	_writeWordStep
                                    1-   62     	extern	_readWordStep
                                    1-   63     	extern	_ReadByte
                                    1-   64     	extern	_SendByte
                                    1-   65     	extern	_RecvAck
                                    1-   66     	extern	_SendNoAck
                                    1-   67     	extern	_SendAck
                                    1-   68     	extern	_Stop24C02
                                    1-   69     	extern	_Start24C02
                                    1-   70     	extern	_SDAInput
                                    1-   71     	extern	_SDAOutput
                                    1-   72     	extern	_Delay10Us
                                    1-   73     	extern	_Delay80us
                                    1-   74     	extern	_send0
                                    1-   75     	extern	_send1
                                    1-   76     	extern	_sendRGB
                                    1-   77     	extern	_sendtoLast
                                    1-   78     	extern	_keyRead
                                    1-   79     	extern	_keyCtrl
                                    1-   80     	extern	_ledCtrl
                                    1-   81     	extern	_isr
                                    1-   82     	extern	_initTimer0
                                    1-   83     	extern	_main
                                    1-   84     	extern	_intCount
                                    1-   85     	extern	_IntFlag
                                    1-   86     	extern	_keyCount
                                    1-   87     	extern	_workStep
                                    1-   88     	extern	_Rdata
                                    1-   89     	extern	_Gdata
                                    1-   90     	extern	_Bdata
                                    1-   92     	extern PSAVE
                                    1-   93     	extern SSAVE
                                    1-   94     	extern WSAVE
                                    1-   95     	extern STK12
                                    1-   96     	extern STK11
                                    1-   97     	extern STK10
                                    1-   98     	extern STK09
                                    1-   99     	extern STK08
                                    1-  100     	extern STK07
                                    1-  101     	extern STK06
                                    1-  102     	extern STK05
                                    1-  103     	extern STK04
                                    1-  104     	extern STK03
                                    1-  105     	extern STK02
                                    1-  106     	extern STK01
                                    1-  107     	extern STK00
                                    1-  109     .segment "uninit", 0x20000020
 20000020                           1-  110     PSAVE:
                                    1-  111     	.res 1
 20000021                           1-  112     SSAVE:
                                    1-  113     	.res 1
 20000022                           1-  114     WSAVE:
                                    1-  115     	.res 1
 20000023                           1-  116     STK12:
                                    1-  117     	.res 1
 20000024                           1-  118     STK11:
                                    1-  119     	.res 1
 20000025                           1-  120     STK10:
                                    1-  121     	.res 1
 20000026                           1-  122     STK09:
                                    1-  123     	.res 1
 20000027                           1-  124     STK08:
                                    1-  125     	.res 1
 20000028                           1-  126     STK07:
                                    1-  127     	.res 1
 20000029                           1-  128     STK06:
                                    1-  129     	.res 1
 2000002A                           1-  130     STK05:
                                    1-  131     	.res 1
 2000002B                           1-  132     STK04:
                                    1-  133     	.res 1
 2000002C                           1-  134     STK03:
                                    1-  135     	.res 1
 2000002D                           1-  136     STK02:
                                    1-  137     	.res 1
 2000002E                           1-  138     STK01:
                                    1-  139     	.res 1
 2000002F                           1-  140     STK00:
                                    1-  141     	.res 1
                                    1-  143     ;--------------------------------------------------------
                                    1-  144     ; global definitions
                                    1-  145     ;--------------------------------------------------------
                                    1-  146     ;--------------------------------------------------------
                                    1-  147     ; absolute symbol definitions
                                    1-  148     ;--------------------------------------------------------
                                    1-  149     ;--------------------------------------------------------
                                    1-  150     ; compiler-defined variables
                                    1-  151     ;--------------------------------------------------------
                                    1-  152     .segment "uninit"
     0000                           1-  153     r0x1022:
                                    1-  154     	.res	1
                                    1-  155     .segment "uninit"
     0000                           1-  156     r0x1021:
                                    1-  157     	.res	1
                                    1-  158     .segment "uninit"
     0000                           1-  159     r0x1020:
                                    1-  160     	.res	1
                                    1-  161     .segment "uninit"
     0000                           1-  162     r0x101F:
                                    1-  163     	.res	1
                                    1-  164     .segment "uninit"
     0000                           1-  165     r0x1016:
                                    1-  166     	.res	1
                                    1-  167     .segment "uninit"
     0000                           1-  168     r0x1017:
                                    1-  169     	.res	1
                                    1-  170     .segment "uninit"
     0000                           1-  171     r0x1018:
                                    1-  172     	.res	1
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x1019:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x101A:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x101B:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x101C:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x101E:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x1015:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x100A:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x100B:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x100D:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x100E:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x100F:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x1010:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x1013:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1012:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1011:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x1014:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x100C:
                                    1-  223     	.res	1
                                    1-  224     ;--------------------------------------------------------
                                    1-  225     ; initialized data
                                    1-  226     ;--------------------------------------------------------
                                    1-  228     .segment "idata"
     0000                           1-  229     _intCount:
     0000 0000                      1-  230     	dw	0x00
                                    1-  234     .segment "idata"
     0000                           1-  235     _IntFlag:
     0000 0000                      1-  236     	dw	0x00
                                    1-  240     .segment "idata"
     0000                           1-  241     _keyCount:
     0000 0000                      1-  242     	dw	0x00
                                    1-  246     .segment "idata"
     0000                           1-  247     _workStep:
     0000 0001                      1-  248     	dw	0x01
                                    1-  252     .segment "idata"
     0000                           1-  253     _Rdata:
     0000 0000                      1-  254     	dw	0x00
                                    1-  258     .segment "idata"
     0000                           1-  259     _Gdata:
     0000 0000                      1-  260     	dw	0x00
                                    1-  264     .segment "idata"
     0000                           1-  265     _Bdata:
     0000 0000                      1-  266     	dw	0x00
                                    1-  269     ;--------------------------------------------------------
                                    1-  270     ; overlayable items in internal ram 
                                    1-  271     ;--------------------------------------------------------
                                    1-  272     ;	udata_ovr
                                    1-  273     ;--------------------------------------------------------
                                    1-  274     ; reset vector 
                                    1-  275     ;--------------------------------------------------------
                                    1-  276     ORG	0x0000
     0000 3rrr                      1-  277     	LGOTO	__nyc_ny8_startup
                                    1-  278     ;--------------------------------------------------------
                                    1-  279     ; interrupt and initialization code
                                    1-  280     ;--------------------------------------------------------
                                    1-  281     ORG 0x0008
     0008 3rrr                      1-  282     	lgoto	__sdcc_interrupt
                                    1-  284     .segment "code"
     0000                           1-  285     __sdcc_interrupt:
                                    1-  286     ;***
                                    1-  287     ;  pBlock Stats: dbName = I
                                    1-  288     ;***
                                    1-  289     ;2 compiler assigned registers:
                                    1-  290     ;   STK00
                                    1-  291     ;   STK01
                                    1-  292     ;; Starting pCode block
     0000                           1-  293     _isr:
                                    1-  294     ; 0 exit points
                                    1-  295     	.line	101, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  296     	MOVAR	WSAVE
     0001 1503                      1-  297     	SWAPR	STATUS,W
     0002 0283                      1-  298     	CLRR	STATUS
     0003 00rr                      1-  299     	MOVAR	SSAVE
     0004 010A                      1-  300     	MOVR	PCHBUF,W
     0005 028A                      1-  301     	CLRR	PCHBUF
     0006 00rr                      1-  302     	MOVAR	PSAVE
     0007 0104                      1-  303     	MOVR	FSR,W
                                    1-  304     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  305     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  306     	MOVR	STK00,W
                                    1-  307     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  308     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  309     	MOVR	STK01,W
                                    1-  310     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  311     	MOVAR	___sdcc_saved_stk01
                                    1-  312     	.line	103, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  313     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  314     	LGOTO	_00108_DS_
                                    1-  315     	.line	105, "main.c"; 	TMR0 = 65;
     0012 2141                      1-  316     	MOVIA	0x41
     0013 00rr                      1-  317     	MOVAR	_TMR0
                                    1-  318     	.line	106, "main.c"; 	intCount++;
                                    1-  319     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  320     	INCR	_intCount,F
                                    1-  321     	.line	107, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  322     	MOVR	_intCount,W
     0017 2464                      1-  323     	XORIA	0x64
     0018 0903                      1-  324     	BTRSS	STATUS,2
     0019 3rrr                      1-  325     	LGOTO	_00108_DS_
                                    1-  326     	.line	109, "main.c"; 	intCount = 0;
     001A 02rr                      1-  327     	CLRR	_intCount
                                    1-  328     	.line	110, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  329     	MOVIA	0x01
                                    1-  330     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  331     	MOVAR	_IntFlag
     001E                           1-  332     _00108_DS_:
                                    1-  333     	.line	113, "main.c"; 	if(INTFbits.PBIF)
     001E 08rr                      1-  334     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  335     	LGOTO	_00110_DS_
                                    1-  336     	.line	115, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  337     	MOVIA	0xfd
     0021 00rr                      1-  338     	MOVAR	_INTF
     0022                           1-  339     _00110_DS_:
                                    1-  340     	.line	118, "main.c"; 	INTF = 0;
     0022 02rr                      1-  341     	CLRR	_INTF
                                    1-  342     	.line	120, "main.c"; 	}
                                    1-  343     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  344     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  345     	MOVAR	STK01
                                    1-  346     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  347     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  348     	MOVAR	STK00
                                    1-  349     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  350     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  351     	MOVAR	FSR
     002C 01rr                      1-  352     	MOVR	PSAVE,W
     002D 008A                      1-  353     	MOVAR	PCHBUF
     002E 0283                      1-  354     	CLRR	STATUS
     002F 15rr                      1-  355     	SWAPR	SSAVE,W
     0030 0083                      1-  356     	MOVAR	STATUS
     0031 15rr                      1-  357     	SWAPR	WSAVE,F
     0032 15rr                      1-  358     	SWAPR	WSAVE,W
     0033                           1-  359     END_OF_INTERRUPT:
     0033 0011                      1-  360     	RETIE	
                                    1-  362     ;--------------------------------------------------------
                                    1-  363     ; code
                                    1-  364     ;--------------------------------------------------------
                                    1-  365     ;***
                                    1-  366     ;  pBlock Stats: dbName = M
                                    1-  367     ;***
                                    1-  368     ;has an exit
                                    1-  369     ;functions called:
                                    1-  370     ;   _initTimer0
                                    1-  371     ;   _readWordStep
                                    1-  372     ;   _ledCtrl
                                    1-  373     ;   _keyCtrl
                                    1-  374     ;   _initTimer0
                                    1-  375     ;   _readWordStep
                                    1-  376     ;   _ledCtrl
                                    1-  377     ;   _keyCtrl
                                    1-  378     ;5 compiler assigned registers:
                                    1-  379     ;   r0x1022
                                    1-  380     ;   r0x1023
                                    1-  381     ;   r0x1024
                                    1-  382     ;   STK01
                                    1-  383     ;   STK00
                                    1-  384     ;; Starting pCode block
                                    1-  385     .segment "code"; module=main, function=_main
     0000                           1-  387     _main:
                                    1-  388     ; 2 exit points
                                    1-  389     	.line	152, "main.c"; 	initTimer0();
     0000 2rrr                      1-  390     	LCALL	_initTimer0
                                    1-  391     	.line	153, "main.c"; 	readWordStep(&workStep);
     0001 21rr                      1-  392     	MOVIA	((_workStep + 0) >> 8) & 0xff
                                    1-  393     	BANKSEL	r0x1022
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1-  394     	MOVAR	r0x1022
     0004 21rr                      1-  395     	MOVIA	(_workStep + 0)
                                    1-  396     ;;1	MOVAR	r0x1023
     0005 00rr                      1-  397     	MOVAR	STK01
     0006 01rr                      1-  398     	MOVR	r0x1022,W
     0007 00rr                      1-  399     	MOVAR	STK00
     0008 2100                      1-  400     	MOVIA	0x00
     0009 2rrr                      1-  401     	LCALL	_readWordStep
     000A                           1-  402     _00123_DS_:
                                    1-  403     	.line	156, "main.c"; 	CLRWDT(); 
     000A 0002                      1-  404     	clrwdt
                                    1-  405     	.line	157, "main.c"; 	ledCtrl();
     000B 2rrr                      1-  406     	LCALL	_ledCtrl
                                    1-  407     	.line	158, "main.c"; 	if(!IntFlag)
                                    1-  408     	BANKSEL	_IntFlag
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  409     	MOVR	_IntFlag,W
     000E 0D03                      1-  410     	BTRSC	STATUS,2
     000F 3rrr                      1-  411     	LGOTO	_00123_DS_
                                    1-  412     	.line	160, "main.c"; 	IntFlag = 0;
     0010 02rr                      1-  413     	CLRR	_IntFlag
                                    1-  414     	.line	161, "main.c"; 	keyCtrl();
     0011 2rrr                      1-  415     	LCALL	_keyCtrl
     0012 3rrr                      1-  416     	LGOTO	_00123_DS_
                                    1-  417     	.line	169, "main.c"; 	}
                                    1-  418     	RETURN	
     0013 0010                      3-   26 m1      ret
                                    1-  419     ; exit point of _main
                                    1-  421     ;***
                                    1-  422     ;  pBlock Stats: dbName = C
                                    1-  423     ;***
                                    1-  424     ;has an exit
                                    1-  425     ;functions called:
                                    1-  426     ;   _Start24C02
                                    1-  427     ;   _SendByte
                                    1-  428     ;   _RecvAck
                                    1-  429     ;   _SendByte
                                    1-  430     ;   _RecvAck
                                    1-  431     ;   _SendByte
                                    1-  432     ;   _RecvAck
                                    1-  433     ;   _Stop24C02
                                    1-  434     ;   _Start24C02
                                    1-  435     ;   _SendByte
                                    1-  436     ;   _RecvAck
                                    1-  437     ;   _SendByte
                                    1-  438     ;   _RecvAck
                                    1-  439     ;   _SendByte
                                    1-  440     ;   _RecvAck
                                    1-  441     ;   _Stop24C02
                                    1-  442     ;1 compiler assigned register :
                                    1-  443     ;   r0x100C
                                    1-  444     ;; Starting pCode block
                                    1-  445     .segment "code"; module=main, function=_writeWordStep
                                    1-  447     ;local variable name mapping:
     0000                           1-  449     _writeWordStep:
                                    1-  450     ; 2 exit points
                                    1-  451     	.line	565, "main.c"; 	void writeWordStep(u8t workStep)
                                    1-  452     	BANKSEL	r0x100C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  453     	MOVAR	r0x100C
                                    1-  454     	.line	567, "main.c"; 	BPHCON &= 0x7F;	//打开PB7的上拉电阻(SDA)
     0002 1Frr                      1-  455     	BCR	_BPHCON,7
                                    1-  456     	.line	568, "main.c"; 	SCL = 0;
                                    1-  457     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 1Crr                      1-  458     	BCR	_PORTA,0
                                    1-  459     	.line	570, "main.c"; 	Start24C02();
     0005 2rrr                      1-  460     	LCALL	_Start24C02
                                    1-  461     	.line	571, "main.c"; 	SendByte(0xA0);		//发送器件地址和写动作
     0006 21A0                      1-  462     	MOVIA	0xa0
     0007 2rrr                      1-  463     	LCALL	_SendByte
                                    1-  464     	.line	572, "main.c"; 	RecvAck();
     0008 2rrr                      1-  465     	LCALL	_RecvAck
                                    1-  466     	.line	573, "main.c"; 	SendByte(0X00);		//发送写地址
     0009 2100                      1-  467     	MOVIA	0x00
     000A 2rrr                      1-  468     	LCALL	_SendByte
                                    1-  469     	.line	574, "main.c"; 	RecvAck();
     000B 2rrr                      1-  470     	LCALL	_RecvAck
                                    1-  471     	.line	575, "main.c"; 	SendByte(workStep);		//发送数据到地址
                                    1-  472     	BANKSEL	r0x100C
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  473     	MOVR	r0x100C,W
     000E 2rrr                      1-  474     	LCALL	_SendByte
                                    1-  475     	.line	576, "main.c"; 	RecvAck();
     000F 2rrr                      1-  476     	LCALL	_RecvAck
                                    1-  477     	.line	577, "main.c"; 	Stop24C02();
     0010 2rrr                      1-  478     	LCALL	_Stop24C02
                                    1-  479     	.line	578, "main.c"; 	}
                                    1-  480     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1-  481     ; exit point of _writeWordStep
                                    1-  483     ;***
                                    1-  484     ;  pBlock Stats: dbName = C
                                    1-  485     ;***
                                    1-  486     ;has an exit
                                    1-  487     ;functions called:
                                    1-  488     ;   _Start24C02
                                    1-  489     ;   _SendByte
                                    1-  490     ;   _RecvAck
                                    1-  491     ;   _SendByte
                                    1-  492     ;   _RecvAck
                                    1-  493     ;   _Start24C02
                                    1-  494     ;   _SendByte
                                    1-  495     ;   _RecvAck
                                    1-  496     ;   _ReadByte
                                    1-  497     ;   __gptrput1
                                    1-  498     ;   _SendNoAck
                                    1-  499     ;   _Stop24C02
                                    1-  500     ;   __gptrget1
                                    1-  501     ;   __gptrput1
                                    1-  502     ;   _Start24C02
                                    1-  503     ;   _SendByte
                                    1-  504     ;   _RecvAck
                                    1-  505     ;   _SendByte
                                    1-  506     ;   _RecvAck
                                    1-  507     ;   _Start24C02
                                    1-  508     ;   _SendByte
                                    1-  509     ;   _RecvAck
                                    1-  510     ;   _ReadByte
                                    1-  511     ;   __gptrput1
                                    1-  512     ;   _SendNoAck
                                    1-  513     ;   _Stop24C02
                                    1-  514     ;   __gptrget1
                                    1-  515     ;   __gptrput1
                                    1-  516     ;7 compiler assigned registers:
                                    1-  517     ;   r0x1011
                                    1-  518     ;   STK00
                                    1-  519     ;   r0x1012
                                    1-  520     ;   STK01
                                    1-  521     ;   r0x1013
                                    1-  522     ;   r0x1014
                                    1-  523     ;   STK02
                                    1-  524     ;; Starting pCode block
                                    1-  525     .segment "code"; module=main, function=_readWordStep
                                    1-  527     ;local variable name mapping:
     0000                           1-  531     _readWordStep:
                                    1-  532     ; 2 exit points
                                    1-  533     	.line	546, "main.c"; 	void readWordStep(unsigned char *workStep)
                                    1-  534     	BANKSEL	r0x1011
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  535     	MOVAR	r0x1011
     0002 01rr                      1-  536     	MOVR	STK00,W
                                    1-  537     	BANKSEL	r0x1012
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  538     	MOVAR	r0x1012
     0005 01rr                      1-  539     	MOVR	STK01,W
                                    1-  540     	BANKSEL	r0x1013
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  541     	MOVAR	r0x1013
                                    1-  542     	.line	548, "main.c"; 	BPHCON &= 0x7F;	//打开PB7的上拉电阻(SDA)
     0008 1Frr                      1-  543     	BCR	_BPHCON,7
                                    1-  544     	.line	549, "main.c"; 	SCL = 0;
                                    1-  545     	BANKSEL	_PORTA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 1Crr                      1-  546     	BCR	_PORTA,0
                                    1-  547     	.line	550, "main.c"; 	Start24C02();
     000B 2rrr                      1-  548     	LCALL	_Start24C02
                                    1-  549     	.line	551, "main.c"; 	SendByte(0xA0);		//发送器件地址和写动作
     000C 21A0                      1-  550     	MOVIA	0xa0
     000D 2rrr                      1-  551     	LCALL	_SendByte
                                    1-  552     	.line	552, "main.c"; 	RecvAck();
     000E 2rrr                      1-  553     	LCALL	_RecvAck
                                    1-  554     	.line	553, "main.c"; 	SendByte(0X00);		//发送读地址
     000F 2100                      1-  555     	MOVIA	0x00
     0010 2rrr                      1-  556     	LCALL	_SendByte
                                    1-  557     	.line	554, "main.c"; 	RecvAck();
     0011 2rrr                      1-  558     	LCALL	_RecvAck
                                    1-  559     	.line	555, "main.c"; 	Start24C02();
     0012 2rrr                      1-  560     	LCALL	_Start24C02
                                    1-  561     	.line	556, "main.c"; 	SendByte(0xA1);		//发送器件地址和读动作
     0013 21A1                      1-  562     	MOVIA	0xa1
     0014 2rrr                      1-  563     	LCALL	_SendByte
                                    1-  564     	.line	557, "main.c"; 	RecvAck();
     0015 2rrr                      1-  565     	LCALL	_RecvAck
                                    1-  566     	.line	558, "main.c"; 	*workStep = ReadByte();
     0016 2rrr                      1-  567     	LCALL	_ReadByte
                                    1-  568     	BANKSEL	r0x1014
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1-  569     	MOVAR	r0x1014
     0019 00rr                      1-  570     	MOVAR	STK02
                                    1-  571     	BANKSEL	r0x1013
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  572     	MOVR	r0x1013,W
     001C 00rr                      1-  573     	MOVAR	STK01
                                    1-  574     	BANKSEL	r0x1012
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  575     	MOVR	r0x1012,W
     001F 00rr                      1-  576     	MOVAR	STK00
                                    1-  577     	BANKSEL	r0x1011
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  578     	MOVR	r0x1011,W
     0022 2rrr                      1-  579     	LCALL	__gptrput1
                                    1-  580     	.line	559, "main.c"; 	SendNoAck();
     0023 2rrr                      1-  581     	LCALL	_SendNoAck
                                    1-  582     	.line	560, "main.c"; 	Stop24C02();
     0024 2rrr                      1-  583     	LCALL	_Stop24C02
                                    1-  584     	.line	561, "main.c"; 	if(*workStep >= 19 || *workStep == 0)
                                    1-  585     	BANKSEL	r0x1013
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1-  586     	MOVR	r0x1013,W
     0027 00rr                      1-  587     	MOVAR	STK01
                                    1-  588     	BANKSEL	r0x1012
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1-  589     	MOVR	r0x1012,W
     002A 00rr                      1-  590     	MOVAR	STK00
                                    1-  591     	BANKSEL	r0x1011
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1-  592     	MOVR	r0x1011,W
     002D 2rrr                      1-  593     	LCALL	__gptrget1
                                    1-  594     	BANKSEL	r0x1014
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1-  595     	MOVAR	r0x1014
                                    1-  596     ;;unsigned compare: left < lit (0x13=19), size=1
     0030 2113                      1-  597     	MOVIA	0x13
     0031 04rr                      1-  598     	SUBAR	r0x1014,W
     0032 0C03                      1-  599     	BTRSC	STATUS,0
     0033 3rrr                      1-  600     	LGOTO	_00342_DS_
     0034 01rr                      1-  601     	MOVR	r0x1014,W
     0035 0903                      1-  602     	BTRSS	STATUS,2
     0036 3rrr                      1-  603     	LGOTO	_00345_DS_
     0037                           1-  604     _00342_DS_:
                                    1-  605     	.line	562, "main.c"; 	*workStep = 1;
     0037 2101                      1-  606     	MOVIA	0x01
     0038 00rr                      1-  607     	MOVAR	STK02
                                    1-  608     	BANKSEL	r0x1013
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  609     	MOVR	r0x1013,W
     003B 00rr                      1-  610     	MOVAR	STK01
                                    1-  611     	BANKSEL	r0x1012
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1-  612     	MOVR	r0x1012,W
     003E 00rr                      1-  613     	MOVAR	STK00
                                    1-  614     	BANKSEL	r0x1011
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1-  615     	MOVR	r0x1011,W
     0041 2rrr                      1-  616     	LCALL	__gptrput1
     0042                           1-  617     _00345_DS_:
                                    1-  618     	.line	563, "main.c"; 	}
                                    1-  619     	RETURN	
     0042 0010                      3-   26 m1      ret
                                    1-  620     ; exit point of _readWordStep
                                    1-  622     ;***
                                    1-  623     ;  pBlock Stats: dbName = C
                                    1-  624     ;***
                                    1-  625     ;has an exit
                                    1-  626     ;functions called:
                                    1-  627     ;   _SDAInput
                                    1-  628     ;   _Delay10Us
                                    1-  629     ;   _Delay10Us
                                    1-  630     ;   _SDAOutput
                                    1-  631     ;   _SDAInput
                                    1-  632     ;   _Delay10Us
                                    1-  633     ;   _Delay10Us
                                    1-  634     ;   _SDAOutput
                                    1-  635     ;4 compiler assigned registers:
                                    1-  636     ;   r0x100D
                                    1-  637     ;   r0x100E
                                    1-  638     ;   r0x100F
                                    1-  639     ;   r0x1010
                                    1-  640     ;; Starting pCode block
                                    1-  641     .segment "code"; module=main, function=_ReadByte
                                    1-  643     ;local variable name mapping:
     0000                           1-  646     _ReadByte:
                                    1-  647     ; 2 exit points
                                    1-  648     	.line	529, "main.c"; 	u8t data=0;
                                    1-  649     	BANKSEL	r0x100D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  650     	CLRR	r0x100D
                                    1-  651     	.line	530, "main.c"; 	SDAInput();
     0002 2rrr                      1-  652     	LCALL	_SDAInput
                                    1-  653     	.line	532, "main.c"; 	for(u8t i=8;i>0;i--){
     0003 2108                      1-  654     	MOVIA	0x08
                                    1-  655     	BANKSEL	r0x100E
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  656     	MOVAR	r0x100E
     0006                           1-  657     _00337_DS_:
                                    1-  658     	BANKSEL	r0x100E
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1-  659     	MOVR	r0x100E,W
     0008 0D03                      1-  660     	BTRSC	STATUS,2
     0009 3rrr                      1-  661     	LGOTO	_00335_DS_
                                    1-  662     	.line	533, "main.c"; 	SCL = 1;
                                    1-  663     	BANKSEL	_PORTA
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 18rr                      1-  664     	BSR	_PORTA,0
                                    1-  665     	.line	534, "main.c"; 	Delay10Us();
     000C 2rrr                      1-  666     	LCALL	_Delay10Us
                                    1-  667     	.line	535, "main.c"; 	data = data<<1;
     000D 1C03                      1-  668     	BCR	STATUS,0
                                    1-  669     	BANKSEL	r0x100D
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 14rr                      1-  670     	RLR	r0x100D,F
                                    1-  671     	.line	536, "main.c"; 	data |= SDA;
     0010 01rr                      1-  672     	MOVR	r0x100D,W
                                    1-  673     	BANKSEL	r0x100F
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1-  674     	MOVAR	r0x100F
                                    1-  675     	BANKSEL	r0x1010
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1-  676     	CLRR	r0x1010
     0015 0Frr                      1-  677     	BTRSC	_PORTB,7
     0016 05rr                      1-  678     	INCR	r0x1010,F
     0017 01rr                      1-  679     	MOVR	r0x1010,W
                                    1-  680     	BANKSEL	r0x100F
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 11rr                      1-  681     	IORAR	r0x100F,W
                                    1-  682     	BANKSEL	r0x100D
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1-  683     	MOVAR	r0x100D
                                    1-  684     	.line	537, "main.c"; 	SCL = 0;
                                    1-  685     	BANKSEL	_PORTA
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 1Crr                      1-  686     	BCR	_PORTA,0
                                    1-  687     	.line	538, "main.c"; 	Delay10Us();
     001E 2rrr                      1-  688     	LCALL	_Delay10Us
                                    1-  689     	.line	532, "main.c"; 	for(u8t i=8;i>0;i--){
                                    1-  690     	BANKSEL	r0x100E
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 06rr                      1-  691     	DECR	r0x100E,F
     0021 3rrr                      1-  692     	LGOTO	_00337_DS_
     0022                           1-  693     _00335_DS_:
                                    1-  694     	.line	540, "main.c"; 	SDAOutput();
     0022 2rrr                      1-  695     	LCALL	_SDAOutput
                                    1-  696     	.line	541, "main.c"; 	return	data;
                                    1-  697     	BANKSEL	r0x100D
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  698     	MOVR	r0x100D,W
                                    1-  699     	.line	542, "main.c"; 	}
                                    1-  700     	RETURN	
     0025 0010                      3-   26 m1      ret
                                    1-  701     ; exit point of _ReadByte
                                    1-  703     ;***
                                    1-  704     ;  pBlock Stats: dbName = C
                                    1-  705     ;***
                                    1-  706     ;has an exit
                                    1-  707     ;functions called:
                                    1-  708     ;   _Delay10Us
                                    1-  709     ;   _Delay10Us
                                    1-  710     ;   _Delay10Us
                                    1-  711     ;   _Delay10Us
                                    1-  712     ;   _Delay10Us
                                    1-  713     ;   _Delay10Us
                                    1-  714     ;2 compiler assigned registers:
                                    1-  715     ;   r0x100A
                                    1-  716     ;   r0x100B
                                    1-  717     ;; Starting pCode block
                                    1-  718     .segment "code"; module=main, function=_SendByte
                                    1-  720     ;local variable name mapping:
     0000                           1-  723     _SendByte:
                                    1-  724     ; 2 exit points
                                    1-  725     	.line	516, "main.c"; 	void SendByte(u8t data){
                                    1-  726     	BANKSEL	r0x100A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  727     	MOVAR	r0x100A
                                    1-  728     	.line	517, "main.c"; 	for(u8t i=8;i>0;i--){
     0002 2108                      1-  729     	MOVIA	0x08
                                    1-  730     	BANKSEL	r0x100B
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  731     	MOVAR	r0x100B
     0005                           1-  732     _00328_DS_:
                                    1-  733     	BANKSEL	r0x100B
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1-  734     	MOVR	r0x100B,W
     0007 0D03                      1-  735     	BTRSC	STATUS,2
     0008 3rrr                      1-  736     	LGOTO	_00330_DS_
                                    1-  737     	.line	518, "main.c"; 	data = data<<1;
     0009 1C03                      1-  738     	BCR	STATUS,0
                                    1-  739     	BANKSEL	r0x100A
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 14rr                      1-  740     	RLR	r0x100A,F
                                    1-  741     	.line	519, "main.c"; 	SDA = C;
     000C 0803                      1-  742     	BTRSS	STATUS,0
     000D 1Frr                      1-  743     	BCR	_PORTB,7
     000E 0C03                      1-  744     	BTRSC	STATUS,0
     000F 1Brr                      1-  745     	BSR	_PORTB,7
                                    1-  746     	.line	520, "main.c"; 	Delay10Us();
     0010 2rrr                      1-  747     	LCALL	_Delay10Us
                                    1-  748     	.line	521, "main.c"; 	SCL = 1;
                                    1-  749     	BANKSEL	_PORTA
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 18rr                      1-  750     	BSR	_PORTA,0
                                    1-  751     	.line	522, "main.c"; 	Delay10Us();
     0013 2rrr                      1-  752     	LCALL	_Delay10Us
                                    1-  753     	.line	523, "main.c"; 	SCL = 0;
                                    1-  754     	BANKSEL	_PORTA
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 1Crr                      1-  755     	BCR	_PORTA,0
                                    1-  756     	.line	524, "main.c"; 	Delay10Us();
     0016 2rrr                      1-  757     	LCALL	_Delay10Us
                                    1-  758     	.line	517, "main.c"; 	for(u8t i=8;i>0;i--){
                                    1-  759     	BANKSEL	r0x100B
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 06rr                      1-  760     	DECR	r0x100B,F
     0019 3rrr                      1-  761     	LGOTO	_00328_DS_
     001A                           1-  762     _00330_DS_:
                                    1-  763     	.line	526, "main.c"; 	}
                                    1-  764     	RETURN	
     001A 0010                      3-   26 m1      ret
                                    1-  765     ; exit point of _SendByte
                                    1-  767     ;***
                                    1-  768     ;  pBlock Stats: dbName = C
                                    1-  769     ;***
                                    1-  770     ;has an exit
                                    1-  771     ;functions called:
                                    1-  772     ;   _SDAInput
                                    1-  773     ;   _Delay10Us
                                    1-  774     ;   _Delay10Us
                                    1-  775     ;   _Delay10Us
                                    1-  776     ;   _SDAOutput
                                    1-  777     ;   _Delay10Us
                                    1-  778     ;   _SDAInput
                                    1-  779     ;   _Delay10Us
                                    1-  780     ;   _Delay10Us
                                    1-  781     ;   _Delay10Us
                                    1-  782     ;   _SDAOutput
                                    1-  783     ;   _Delay10Us
                                    1-  784     ;; Starting pCode block
                                    1-  785     .segment "code"; module=main, function=_RecvAck
     0000                           1-  787     _RecvAck:
                                    1-  788     ; 2 exit points
                                    1-  789     	.line	505, "main.c"; 	SDAInput();
     0000 2rrr                      1-  790     	LCALL	_SDAInput
                                    1-  791     	.line	506, "main.c"; 	Delay10Us();
     0001 2rrr                      1-  792     	LCALL	_Delay10Us
                                    1-  793     	.line	507, "main.c"; 	SCL = 1;
                                    1-  794     	BANKSEL	_PORTA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 18rr                      1-  795     	BSR	_PORTA,0
                                    1-  796     	.line	508, "main.c"; 	Delay10Us();
     0004 2rrr                      1-  797     	LCALL	_Delay10Us
                                    1-  798     	.line	509, "main.c"; 	SCL = 0;
                                    1-  799     	BANKSEL	_PORTA
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 1Crr                      1-  800     	BCR	_PORTA,0
                                    1-  801     	.line	510, "main.c"; 	Delay10Us();
     0007 2rrr                      1-  802     	LCALL	_Delay10Us
                                    1-  803     	.line	511, "main.c"; 	SDAOutput();
     0008 2rrr                      1-  804     	LCALL	_SDAOutput
                                    1-  805     	.line	512, "main.c"; 	SDA = 0;
     0009 1Frr                      1-  806     	BCR	_PORTB,7
                                    1-  807     	.line	513, "main.c"; 	Delay10Us();
     000A 2rrr                      1-  808     	LCALL	_Delay10Us
                                    1-  809     	.line	514, "main.c"; 	}
                                    1-  810     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1-  811     ; exit point of _RecvAck
                                    1-  813     ;***
                                    1-  814     ;  pBlock Stats: dbName = C
                                    1-  815     ;***
                                    1-  816     ;has an exit
                                    1-  817     ;functions called:
                                    1-  818     ;   _Delay10Us
                                    1-  819     ;   _Delay10Us
                                    1-  820     ;   _Delay10Us
                                    1-  821     ;   _Delay10Us
                                    1-  822     ;   _Delay10Us
                                    1-  823     ;   _Delay10Us
                                    1-  824     ;; Starting pCode block
                                    1-  825     .segment "code"; module=main, function=_SendNoAck
     0000                           1-  827     _SendNoAck:
                                    1-  828     ; 2 exit points
                                    1-  829     	.line	496, "main.c"; 	SDA = 1;
     0000 1Brr                      1-  830     	BSR	_PORTB,7
                                    1-  831     	.line	497, "main.c"; 	Delay10Us();
     0001 2rrr                      1-  832     	LCALL	_Delay10Us
                                    1-  833     	.line	498, "main.c"; 	SCL = 1;
                                    1-  834     	BANKSEL	_PORTA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 18rr                      1-  835     	BSR	_PORTA,0
                                    1-  836     	.line	499, "main.c"; 	Delay10Us();
     0004 2rrr                      1-  837     	LCALL	_Delay10Us
                                    1-  838     	.line	500, "main.c"; 	SCL = 0;
                                    1-  839     	BANKSEL	_PORTA
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 1Crr                      1-  840     	BCR	_PORTA,0
                                    1-  841     	.line	501, "main.c"; 	Delay10Us();
     0007 2rrr                      1-  842     	LCALL	_Delay10Us
                                    1-  843     	.line	502, "main.c"; 	}
                                    1-  844     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1-  845     ; exit point of _SendNoAck
                                    1-  847     ;***
                                    1-  848     ;  pBlock Stats: dbName = C
                                    1-  849     ;***
                                    1-  850     ;has an exit
                                    1-  851     ;functions called:
                                    1-  852     ;   _Delay10Us
                                    1-  853     ;   _Delay10Us
                                    1-  854     ;   _Delay10Us
                                    1-  855     ;   _Delay10Us
                                    1-  856     ;   _Delay10Us
                                    1-  857     ;   _Delay10Us
                                    1-  858     ;; Starting pCode block
                                    1-  859     .segment "code"; module=main, function=_SendAck
     0000                           1-  861     _SendAck:
                                    1-  862     ; 2 exit points
                                    1-  863     	.line	487, "main.c"; 	SDA = 0;
     0000 1Frr                      1-  864     	BCR	_PORTB,7
                                    1-  865     	.line	488, "main.c"; 	Delay10Us();
     0001 2rrr                      1-  866     	LCALL	_Delay10Us
                                    1-  867     	.line	489, "main.c"; 	SCL = 1;
                                    1-  868     	BANKSEL	_PORTA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 18rr                      1-  869     	BSR	_PORTA,0
                                    1-  870     	.line	490, "main.c"; 	Delay10Us();
     0004 2rrr                      1-  871     	LCALL	_Delay10Us
                                    1-  872     	.line	491, "main.c"; 	SCL = 0;
                                    1-  873     	BANKSEL	_PORTA
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 1Crr                      1-  874     	BCR	_PORTA,0
                                    1-  875     	.line	492, "main.c"; 	Delay10Us();
     0007 2rrr                      1-  876     	LCALL	_Delay10Us
                                    1-  877     	.line	493, "main.c"; 	}
                                    1-  878     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1-  879     ; exit point of _SendAck
                                    1-  881     ;***
                                    1-  882     ;  pBlock Stats: dbName = C
                                    1-  883     ;***
                                    1-  884     ;has an exit
                                    1-  885     ;functions called:
                                    1-  886     ;   _Delay10Us
                                    1-  887     ;   _Delay10Us
                                    1-  888     ;   _Delay10Us
                                    1-  889     ;   _Delay10Us
                                    1-  890     ;   _Delay10Us
                                    1-  891     ;   _Delay10Us
                                    1-  892     ;; Starting pCode block
                                    1-  893     .segment "code"; module=main, function=_Stop24C02
     0000                           1-  895     _Stop24C02:
                                    1-  896     ; 2 exit points
                                    1-  897     	.line	478, "main.c"; 	SDA = 0;
     0000 1Frr                      1-  898     	BCR	_PORTB,7
                                    1-  899     	.line	479, "main.c"; 	Delay10Us();
     0001 2rrr                      1-  900     	LCALL	_Delay10Us
                                    1-  901     	.line	480, "main.c"; 	SCL = 1;
                                    1-  902     	BANKSEL	_PORTA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 18rr                      1-  903     	BSR	_PORTA,0
                                    1-  904     	.line	481, "main.c"; 	Delay10Us();
     0004 2rrr                      1-  905     	LCALL	_Delay10Us
                                    1-  906     	.line	482, "main.c"; 	SDA = 1;
     0005 1Brr                      1-  907     	BSR	_PORTB,7
                                    1-  908     	.line	483, "main.c"; 	Delay10Us();
     0006 2rrr                      1-  909     	LCALL	_Delay10Us
                                    1-  910     	.line	484, "main.c"; 	}
                                    1-  911     	RETURN	
     0007 0010                      3-   26 m1      ret
                                    1-  912     ; exit point of _Stop24C02
                                    1-  914     ;***
                                    1-  915     ;  pBlock Stats: dbName = C
                                    1-  916     ;***
                                    1-  917     ;has an exit
                                    1-  918     ;functions called:
                                    1-  919     ;   _Delay10Us
                                    1-  920     ;   _Delay10Us
                                    1-  921     ;   _Delay10Us
                                    1-  922     ;   _Delay10Us
                                    1-  923     ;   _Delay10Us
                                    1-  924     ;   _Delay10Us
                                    1-  925     ;   _Delay10Us
                                    1-  926     ;   _Delay10Us
                                    1-  927     ;; Starting pCode block
                                    1-  928     .segment "code"; module=main, function=_Start24C02
     0000                           1-  930     _Start24C02:
                                    1-  931     ; 2 exit points
                                    1-  932     	.line	467, "main.c"; 	SDA = 1;
     0000 1Brr                      1-  933     	BSR	_PORTB,7
                                    1-  934     	.line	468, "main.c"; 	Delay10Us();
     0001 2rrr                      1-  935     	LCALL	_Delay10Us
                                    1-  936     	.line	469, "main.c"; 	SCL = 1;
                                    1-  937     	BANKSEL	_PORTA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 18rr                      1-  938     	BSR	_PORTA,0
                                    1-  939     	.line	470, "main.c"; 	Delay10Us();
     0004 2rrr                      1-  940     	LCALL	_Delay10Us
                                    1-  941     	.line	471, "main.c"; 	SDA = 0;
     0005 1Frr                      1-  942     	BCR	_PORTB,7
                                    1-  943     	.line	472, "main.c"; 	Delay10Us();
     0006 2rrr                      1-  944     	LCALL	_Delay10Us
                                    1-  945     	.line	473, "main.c"; 	SCL = 0;
                                    1-  946     	BANKSEL	_PORTA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 1Crr                      1-  947     	BCR	_PORTA,0
                                    1-  948     	.line	474, "main.c"; 	Delay10Us();
     0009 2rrr                      1-  949     	LCALL	_Delay10Us
                                    1-  950     	.line	475, "main.c"; 	}
                                    1-  951     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1-  952     ; exit point of _Start24C02
                                    1-  954     ;***
                                    1-  955     ;  pBlock Stats: dbName = C
                                    1-  956     ;***
                                    1-  957     ;has an exit
                                    1-  958     ;1 compiler assigned register :
                                    1-  959     ;   r0x100A
                                    1-  960     ;; Starting pCode block
                                    1-  961     .segment "code"; module=main, function=_SDAInput
     0000                           1-  963     _SDAInput:
                                    1-  964     ; 2 exit points
                                    1-  965     	.line	461, "main.c"; 	DISI();
     0000 0013                      1-  966     	DISI
                                    1-  967     	.line	462, "main.c"; 	IOSTB |= 0X80;
     0001 001r                      1-  968     	IOSTR	_IOSTB
                                    1-  969     	BANKSEL	r0x100A
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1-  970     	MOVAR	r0x100A
     0004 1Brr                      1-  971     	BSR	r0x100A,7
     0005 01rr                      1-  972     	MOVR	r0x100A,W
     0006 000r                      1-  973     	IOST	_IOSTB
                                    1-  974     	.line	463, "main.c"; 	ENI();
     0007 0004                      1-  975     	ENI
                                    1-  976     	.line	464, "main.c"; 	}
                                    1-  977     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1-  978     ; exit point of _SDAInput
                                    1-  980     ;***
                                    1-  981     ;  pBlock Stats: dbName = C
                                    1-  982     ;***
                                    1-  983     ;has an exit
                                    1-  984     ;1 compiler assigned register :
                                    1-  985     ;   r0x100A
                                    1-  986     ;; Starting pCode block
                                    1-  987     .segment "code"; module=main, function=_SDAOutput
     0000                           1-  989     _SDAOutput:
                                    1-  990     ; 2 exit points
                                    1-  991     	.line	455, "main.c"; 	DISI();
     0000 0013                      1-  992     	DISI
                                    1-  993     	.line	456, "main.c"; 	IOSTB &= 0X7F;
     0001 001r                      1-  994     	IOSTR	_IOSTB
                                    1-  995     	BANKSEL	r0x100A
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1-  996     	MOVAR	r0x100A
     0004 1Frr                      1-  997     	BCR	r0x100A,7
     0005 01rr                      1-  998     	MOVR	r0x100A,W
     0006 000r                      1-  999     	IOST	_IOSTB
                                    1- 1000     	.line	457, "main.c"; 	ENI();
     0007 0004                      1- 1001     	ENI
                                    1- 1002     	.line	458, "main.c"; 	}
                                    1- 1003     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1- 1004     ; exit point of _SDAOutput
                                    1- 1006     ;***
                                    1- 1007     ;  pBlock Stats: dbName = C
                                    1- 1008     ;***
                                    1- 1009     ;has an exit
                                    1- 1010     ;; Starting pCode block
                                    1- 1011     .segment "code"; module=main, function=_Delay10Us
     0000                           1- 1013     _Delay10Us:
                                    1- 1014     ; 2 exit points
                                    1- 1015     	.line	446, "main.c"; 	NOP();
     0000 0000                      1- 1016     	nop
                                    1- 1017     	.line	447, "main.c"; 	NOP();
     0001 0000                      1- 1018     	nop
                                    1- 1019     	.line	448, "main.c"; 	NOP();
     0002 0000                      1- 1020     	nop
                                    1- 1021     	.line	449, "main.c"; 	NOP();
     0003 0000                      1- 1022     	nop
                                    1- 1023     	.line	450, "main.c"; 	NOP();
     0004 0000                      1- 1024     	nop
                                    1- 1025     	.line	451, "main.c"; 	NOP();
     0005 0000                      1- 1026     	nop
                                    1- 1027     	.line	452, "main.c"; 	}
                                    1- 1028     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1- 1029     ; exit point of _Delay10Us
                                    1- 1031     ;***
                                    1- 1032     ;  pBlock Stats: dbName = C
                                    1- 1033     ;***
                                    1- 1034     ;has an exit
                                    1- 1035     ;1 compiler assigned register :
                                    1- 1036     ;   r0x1015
                                    1- 1037     ;; Starting pCode block
                                    1- 1038     .segment "code"; module=main, function=_Delay80us
                                    1- 1040     ;local variable name mapping:
     0000                           1- 1042     _Delay80us:
                                    1- 1043     ; 2 exit points
                                    1- 1044     	.line	440, "main.c"; 	for(unsigned char i=0;i<80;i++)
                                    1- 1045     	BANKSEL	r0x1015
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1046     	CLRR	r0x1015
                                    1- 1047     ;;unsigned compare: left < lit (0x50=80), size=1
     0002                           1- 1048     _00287_DS_:
     0002 2150                      1- 1049     	MOVIA	0x50
                                    1- 1050     	BANKSEL	r0x1015
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 04rr                      1- 1051     	SUBAR	r0x1015,W
     0005 0C03                      1- 1052     	BTRSC	STATUS,0
     0006 3rrr                      1- 1053     	LGOTO	_00289_DS_
                                    1- 1054     	.line	441, "main.c"; 	NOP();
     0007 0000                      1- 1055     	nop
                                    1- 1056     	.line	440, "main.c"; 	for(unsigned char i=0;i<80;i++)
                                    1- 1057     	BANKSEL	r0x1015
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 05rr                      1- 1058     	INCR	r0x1015,F
     000A 3rrr                      1- 1059     	LGOTO	_00287_DS_
     000B                           1- 1060     _00289_DS_:
                                    1- 1061     	.line	442, "main.c"; 	}
                                    1- 1062     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 1063     ; exit point of _Delay80us
                                    1- 1065     ;***
                                    1- 1066     ;  pBlock Stats: dbName = C
                                    1- 1067     ;***
                                    1- 1068     ;has an exit
                                    1- 1069     ;; Starting pCode block
                                    1- 1070     .segment "code"; module=main, function=_send0
     0000                           1- 1072     _send0:
                                    1- 1073     ; 2 exit points
                                    1- 1074     	.line	416, "main.c"; 	PB0 = 1;
     0000 18rr                      1- 1075     	BSR	_PORTB,0
                                    1- 1076     	.line	417, "main.c"; 	NOP();
     0001 0000                      1- 1077     	nop
                                    1- 1078     	.line	418, "main.c"; 	NOP();
     0002 0000                      1- 1079     	nop
                                    1- 1080     	.line	419, "main.c"; 	NOP();
     0003 0000                      1- 1081     	nop
                                    1- 1082     	.line	420, "main.c"; 	NOP();
     0004 0000                      1- 1083     	nop
                                    1- 1084     	.line	421, "main.c"; 	NOP();
     0005 0000                      1- 1085     	nop
                                    1- 1086     	.line	422, "main.c"; 	NOP();
     0006 0000                      1- 1087     	nop
                                    1- 1088     	.line	423, "main.c"; 	NOP();
     0007 0000                      1- 1089     	nop
                                    1- 1090     	.line	424, "main.c"; 	NOP();
     0008 0000                      1- 1091     	nop
                                    1- 1092     	.line	425, "main.c"; 	PORTB = 0;
     0009 02rr                      1- 1093     	CLRR	_PORTB
                                    1- 1094     	.line	426, "main.c"; 	NOP();
     000A 0000                      1- 1095     	nop
                                    1- 1096     	.line	427, "main.c"; 	NOP();
     000B 0000                      1- 1097     	nop
                                    1- 1098     	.line	428, "main.c"; 	NOP();
     000C 0000                      1- 1099     	nop
                                    1- 1100     	.line	429, "main.c"; 	NOP();
     000D 0000                      1- 1101     	nop
                                    1- 1102     	.line	430, "main.c"; 	NOP();
     000E 0000                      1- 1103     	nop
                                    1- 1104     	.line	431, "main.c"; 	NOP();
     000F 0000                      1- 1105     	nop
                                    1- 1106     	.line	432, "main.c"; 	NOP();
     0010 0000                      1- 1107     	nop
                                    1- 1108     	.line	433, "main.c"; 	NOP();
     0011 0000                      1- 1109     	nop
                                    1- 1110     	.line	435, "main.c"; 	}
                                    1- 1111     	RETURN	
     0012 0010                      3-   26 m1      ret
                                    1- 1112     ; exit point of _send0
                                    1- 1114     ;***
                                    1- 1115     ;  pBlock Stats: dbName = C
                                    1- 1116     ;***
                                    1- 1117     ;has an exit
                                    1- 1118     ;; Starting pCode block
                                    1- 1119     .segment "code"; module=main, function=_send1
     0000                           1- 1121     _send1:
                                    1- 1122     ; 2 exit points
                                    1- 1123     	.line	394, "main.c"; 	PB0 = 1;
     0000 18rr                      1- 1124     	BSR	_PORTB,0
                                    1- 1125     	.line	395, "main.c"; 	NOP();
     0001 0000                      1- 1126     	nop
                                    1- 1127     	.line	396, "main.c"; 	NOP();
     0002 0000                      1- 1128     	nop
                                    1- 1129     	.line	397, "main.c"; 	NOP();
     0003 0000                      1- 1130     	nop
                                    1- 1131     	.line	398, "main.c"; 	NOP();
     0004 0000                      1- 1132     	nop
                                    1- 1133     	.line	399, "main.c"; 	NOP();
     0005 0000                      1- 1134     	nop
                                    1- 1135     	.line	400, "main.c"; 	NOP();
     0006 0000                      1- 1136     	nop
                                    1- 1137     	.line	401, "main.c"; 	NOP();
     0007 0000                      1- 1138     	nop
                                    1- 1139     	.line	402, "main.c"; 	NOP();
     0008 0000                      1- 1140     	nop
                                    1- 1141     	.line	403, "main.c"; 	NOP();
     0009 0000                      1- 1142     	nop
                                    1- 1143     	.line	404, "main.c"; 	NOP();
     000A 0000                      1- 1144     	nop
                                    1- 1145     	.line	405, "main.c"; 	NOP();
     000B 0000                      1- 1146     	nop
                                    1- 1147     	.line	406, "main.c"; 	NOP();
     000C 0000                      1- 1148     	nop
                                    1- 1149     	.line	407, "main.c"; 	NOP();
     000D 0000                      1- 1150     	nop
                                    1- 1151     	.line	408, "main.c"; 	NOP();
     000E 0000                      1- 1152     	nop
                                    1- 1153     	.line	409, "main.c"; 	NOP();
     000F 0000                      1- 1154     	nop
                                    1- 1155     	.line	410, "main.c"; 	NOP();
     0010 0000                      1- 1156     	nop
                                    1- 1157     	.line	411, "main.c"; 	PORTB = 0;
     0011 02rr                      1- 1158     	CLRR	_PORTB
                                    1- 1159     	.line	412, "main.c"; 	}
                                    1- 1160     	RETURN	
     0012 0010                      3-   26 m1      ret
                                    1- 1161     ; exit point of _send1
                                    1- 1163     ;***
                                    1- 1164     ;  pBlock Stats: dbName = C
                                    1- 1165     ;***
                                    1- 1166     ;has an exit
                                    1- 1167     ;functions called:
                                    1- 1168     ;   _send1
                                    1- 1169     ;   _send0
                                    1- 1170     ;   _send1
                                    1- 1171     ;   _send0
                                    1- 1172     ;   _send1
                                    1- 1173     ;   _send0
                                    1- 1174     ;   _send1
                                    1- 1175     ;   _send0
                                    1- 1176     ;   _send1
                                    1- 1177     ;   _send0
                                    1- 1178     ;   _send1
                                    1- 1179     ;   _send0
                                    1- 1180     ;   _send1
                                    1- 1181     ;   _send0
                                    1- 1182     ;   _send1
                                    1- 1183     ;   _send0
                                    1- 1184     ;   _send1
                                    1- 1185     ;   _send0
                                    1- 1186     ;   _send1
                                    1- 1187     ;   _send0
                                    1- 1188     ;   _send1
                                    1- 1189     ;   _send0
                                    1- 1190     ;   _send1
                                    1- 1191     ;   _send0
                                    1- 1192     ;   _send1
                                    1- 1193     ;   _send0
                                    1- 1194     ;   _send1
                                    1- 1195     ;   _send0
                                    1- 1196     ;   _send1
                                    1- 1197     ;   _send0
                                    1- 1198     ;   _send1
                                    1- 1199     ;   _send0
                                    1- 1200     ;   _send1
                                    1- 1201     ;   _send0
                                    1- 1202     ;   _send1
                                    1- 1203     ;   _send0
                                    1- 1204     ;   _send1
                                    1- 1205     ;   _send0
                                    1- 1206     ;   _send1
                                    1- 1207     ;   _send0
                                    1- 1208     ;   _send1
                                    1- 1209     ;   _send0
                                    1- 1210     ;   _send1
                                    1- 1211     ;   _send0
                                    1- 1212     ;   _send1
                                    1- 1213     ;   _send0
                                    1- 1214     ;   _send1
                                    1- 1215     ;   _send0
                                    1- 1216     ;   _send1
                                    1- 1217     ;   _send0
                                    1- 1218     ;   _send1
                                    1- 1219     ;   _send0
                                    1- 1220     ;   _send1
                                    1- 1221     ;   _send0
                                    1- 1222     ;   _send1
                                    1- 1223     ;   _send0
                                    1- 1224     ;   _send1
                                    1- 1225     ;   _send0
                                    1- 1226     ;   _send1
                                    1- 1227     ;   _send0
                                    1- 1228     ;   _send1
                                    1- 1229     ;   _send0
                                    1- 1230     ;   _send1
                                    1- 1231     ;   _send0
                                    1- 1232     ;   _send1
                                    1- 1233     ;   _send0
                                    1- 1234     ;   _send1
                                    1- 1235     ;   _send0
                                    1- 1236     ;   _send1
                                    1- 1237     ;   _send0
                                    1- 1238     ;   _send1
                                    1- 1239     ;   _send0
                                    1- 1240     ;   _send1
                                    1- 1241     ;   _send0
                                    1- 1242     ;   _send1
                                    1- 1243     ;   _send0
                                    1- 1244     ;   _send1
                                    1- 1245     ;   _send0
                                    1- 1246     ;   _send1
                                    1- 1247     ;   _send0
                                    1- 1248     ;   _send1
                                    1- 1249     ;   _send0
                                    1- 1250     ;   _send1
                                    1- 1251     ;   _send0
                                    1- 1252     ;   _send1
                                    1- 1253     ;   _send0
                                    1- 1254     ;   _send1
                                    1- 1255     ;   _send0
                                    1- 1256     ;   _send1
                                    1- 1257     ;   _send0
                                    1- 1258     ;   _send1
                                    1- 1259     ;   _send0
                                    1- 1260     ;   _send1
                                    1- 1261     ;   _send0
                                    1- 1262     ;   _send1
                                    1- 1263     ;   _send0
                                    1- 1264     ;2 compiler assigned registers:
                                    1- 1265     ;   STK00
                                    1- 1266     ;   STK01
                                    1- 1267     ;; Starting pCode block
                                    1- 1268     .segment "code"; module=main, function=_sendRGB
     0000                           1- 1270     _sendRGB:
                                    1- 1271     ; 2 exit points
                                    1- 1272     	.line	282, "main.c"; 	void sendRGB(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 1273     	BANKSEL	_Rdata
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1274     	MOVAR	_Rdata
     0002 01rr                      1- 1275     	MOVR	STK00,W
                                    1- 1276     	BANKSEL	_Gdata
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1277     	MOVAR	_Gdata
     0005 01rr                      1- 1278     	MOVR	STK01,W
                                    1- 1279     	BANKSEL	_Bdata
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1280     	MOVAR	_Bdata
                                    1- 1281     	.line	288, "main.c"; 	if(R7)
                                    1- 1282     	BANKSEL	_Rdata
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 0Brr                      1- 1283     	BTRSS	_Rdata,7
     000A 3rrr                      1- 1284     	LGOTO	_00202_DS_
                                    1- 1285     	.line	289, "main.c"; 	send1();
     000B 2rrr                      1- 1286     	LCALL	_send1
     000C 3rrr                      1- 1287     	LGOTO	_00203_DS_
     000D                           1- 1288     _00202_DS_:
                                    1- 1289     	.line	291, "main.c"; 	send0();
     000D 2rrr                      1- 1290     	LCALL	_send0
     000E                           1- 1291     _00203_DS_:
                                    1- 1292     	.line	292, "main.c"; 	if(R6)
                                    1- 1293     	BANKSEL	_Rdata
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 0Brr                      1- 1294     	BTRSS	_Rdata,6
     0010 3rrr                      1- 1295     	LGOTO	_00205_DS_
                                    1- 1296     	.line	293, "main.c"; 	send1();
     0011 2rrr                      1- 1297     	LCALL	_send1
     0012 3rrr                      1- 1298     	LGOTO	_00206_DS_
     0013                           1- 1299     _00205_DS_:
                                    1- 1300     	.line	295, "main.c"; 	send0();
     0013 2rrr                      1- 1301     	LCALL	_send0
     0014                           1- 1302     _00206_DS_:
                                    1- 1303     	.line	296, "main.c"; 	if(R5)
                                    1- 1304     	BANKSEL	_Rdata
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 0Arr                      1- 1305     	BTRSS	_Rdata,5
     0016 3rrr                      1- 1306     	LGOTO	_00208_DS_
                                    1- 1307     	.line	297, "main.c"; 	send1();
     0017 2rrr                      1- 1308     	LCALL	_send1
     0018 3rrr                      1- 1309     	LGOTO	_00209_DS_
     0019                           1- 1310     _00208_DS_:
                                    1- 1311     	.line	299, "main.c"; 	send0();
     0019 2rrr                      1- 1312     	LCALL	_send0
     001A                           1- 1313     _00209_DS_:
                                    1- 1314     	.line	300, "main.c"; 	if(R4)
                                    1- 1315     	BANKSEL	_Rdata
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 0Arr                      1- 1316     	BTRSS	_Rdata,4
     001C 3rrr                      1- 1317     	LGOTO	_00211_DS_
                                    1- 1318     	.line	301, "main.c"; 	send1();
     001D 2rrr                      1- 1319     	LCALL	_send1
     001E 3rrr                      1- 1320     	LGOTO	_00212_DS_
     001F                           1- 1321     _00211_DS_:
                                    1- 1322     	.line	303, "main.c"; 	send0();
     001F 2rrr                      1- 1323     	LCALL	_send0
     0020                           1- 1324     _00212_DS_:
                                    1- 1325     	.line	304, "main.c"; 	if(R3)
                                    1- 1326     	BANKSEL	_Rdata
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 09rr                      1- 1327     	BTRSS	_Rdata,3
     0022 3rrr                      1- 1328     	LGOTO	_00214_DS_
                                    1- 1329     	.line	305, "main.c"; 	send1();
     0023 2rrr                      1- 1330     	LCALL	_send1
     0024 3rrr                      1- 1331     	LGOTO	_00215_DS_
     0025                           1- 1332     _00214_DS_:
                                    1- 1333     	.line	307, "main.c"; 	send0();
     0025 2rrr                      1- 1334     	LCALL	_send0
     0026                           1- 1335     _00215_DS_:
                                    1- 1336     	.line	308, "main.c"; 	if(R2)
                                    1- 1337     	BANKSEL	_Rdata
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 09rr                      1- 1338     	BTRSS	_Rdata,2
     0028 3rrr                      1- 1339     	LGOTO	_00217_DS_
                                    1- 1340     	.line	309, "main.c"; 	send1();
     0029 2rrr                      1- 1341     	LCALL	_send1
     002A 3rrr                      1- 1342     	LGOTO	_00218_DS_
     002B                           1- 1343     _00217_DS_:
                                    1- 1344     	.line	311, "main.c"; 	send0();
     002B 2rrr                      1- 1345     	LCALL	_send0
     002C                           1- 1346     _00218_DS_:
                                    1- 1347     	.line	312, "main.c"; 	if(R1)
                                    1- 1348     	BANKSEL	_Rdata
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 08rr                      1- 1349     	BTRSS	_Rdata,1
     002E 3rrr                      1- 1350     	LGOTO	_00220_DS_
                                    1- 1351     	.line	313, "main.c"; 	send1();
     002F 2rrr                      1- 1352     	LCALL	_send1
     0030 3rrr                      1- 1353     	LGOTO	_00221_DS_
     0031                           1- 1354     _00220_DS_:
                                    1- 1355     	.line	315, "main.c"; 	send0();
     0031 2rrr                      1- 1356     	LCALL	_send0
     0032                           1- 1357     _00221_DS_:
                                    1- 1358     	.line	316, "main.c"; 	if(R0)
                                    1- 1359     	BANKSEL	_Rdata
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 08rr                      1- 1360     	BTRSS	_Rdata,0
     0034 3rrr                      1- 1361     	LGOTO	_00223_DS_
                                    1- 1362     	.line	317, "main.c"; 	send1();
     0035 2rrr                      1- 1363     	LCALL	_send1
     0036 3rrr                      1- 1364     	LGOTO	_00224_DS_
     0037                           1- 1365     _00223_DS_:
                                    1- 1366     	.line	319, "main.c"; 	send0();
     0037 2rrr                      1- 1367     	LCALL	_send0
     0038                           1- 1368     _00224_DS_:
                                    1- 1369     	.line	321, "main.c"; 	if(G7)
                                    1- 1370     	BANKSEL	_Gdata
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 0Brr                      1- 1371     	BTRSS	_Gdata,7
     003A 3rrr                      1- 1372     	LGOTO	_00226_DS_
                                    1- 1373     	.line	322, "main.c"; 	send1();
     003B 2rrr                      1- 1374     	LCALL	_send1
     003C 3rrr                      1- 1375     	LGOTO	_00227_DS_
     003D                           1- 1376     _00226_DS_:
                                    1- 1377     	.line	324, "main.c"; 	send0();
     003D 2rrr                      1- 1378     	LCALL	_send0
     003E                           1- 1379     _00227_DS_:
                                    1- 1380     	.line	325, "main.c"; 	if(G6)
                                    1- 1381     	BANKSEL	_Gdata
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 0Brr                      1- 1382     	BTRSS	_Gdata,6
     0040 3rrr                      1- 1383     	LGOTO	_00229_DS_
                                    1- 1384     	.line	326, "main.c"; 	send1();
     0041 2rrr                      1- 1385     	LCALL	_send1
     0042 3rrr                      1- 1386     	LGOTO	_00230_DS_
     0043                           1- 1387     _00229_DS_:
                                    1- 1388     	.line	328, "main.c"; 	send0();
     0043 2rrr                      1- 1389     	LCALL	_send0
     0044                           1- 1390     _00230_DS_:
                                    1- 1391     	.line	329, "main.c"; 	if(G5)
                                    1- 1392     	BANKSEL	_Gdata
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 0Arr                      1- 1393     	BTRSS	_Gdata,5
     0046 3rrr                      1- 1394     	LGOTO	_00232_DS_
                                    1- 1395     	.line	330, "main.c"; 	send1();
     0047 2rrr                      1- 1396     	LCALL	_send1
     0048 3rrr                      1- 1397     	LGOTO	_00233_DS_
     0049                           1- 1398     _00232_DS_:
                                    1- 1399     	.line	332, "main.c"; 	send0();
     0049 2rrr                      1- 1400     	LCALL	_send0
     004A                           1- 1401     _00233_DS_:
                                    1- 1402     	.line	333, "main.c"; 	if(G4)
                                    1- 1403     	BANKSEL	_Gdata
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 0Arr                      1- 1404     	BTRSS	_Gdata,4
     004C 3rrr                      1- 1405     	LGOTO	_00235_DS_
                                    1- 1406     	.line	334, "main.c"; 	send1();
     004D 2rrr                      1- 1407     	LCALL	_send1
     004E 3rrr                      1- 1408     	LGOTO	_00236_DS_
     004F                           1- 1409     _00235_DS_:
                                    1- 1410     	.line	336, "main.c"; 	send0();
     004F 2rrr                      1- 1411     	LCALL	_send0
     0050                           1- 1412     _00236_DS_:
                                    1- 1413     	.line	337, "main.c"; 	if(G3)
                                    1- 1414     	BANKSEL	_Gdata
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 09rr                      1- 1415     	BTRSS	_Gdata,3
     0052 3rrr                      1- 1416     	LGOTO	_00238_DS_
                                    1- 1417     	.line	338, "main.c"; 	send1();
     0053 2rrr                      1- 1418     	LCALL	_send1
     0054 3rrr                      1- 1419     	LGOTO	_00239_DS_
     0055                           1- 1420     _00238_DS_:
                                    1- 1421     	.line	340, "main.c"; 	send0();
     0055 2rrr                      1- 1422     	LCALL	_send0
     0056                           1- 1423     _00239_DS_:
                                    1- 1424     	.line	341, "main.c"; 	if(G2)
                                    1- 1425     	BANKSEL	_Gdata
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 09rr                      1- 1426     	BTRSS	_Gdata,2
     0058 3rrr                      1- 1427     	LGOTO	_00241_DS_
                                    1- 1428     	.line	342, "main.c"; 	send1();
     0059 2rrr                      1- 1429     	LCALL	_send1
     005A 3rrr                      1- 1430     	LGOTO	_00242_DS_
     005B                           1- 1431     _00241_DS_:
                                    1- 1432     	.line	344, "main.c"; 	send0();
     005B 2rrr                      1- 1433     	LCALL	_send0
     005C                           1- 1434     _00242_DS_:
                                    1- 1435     	.line	345, "main.c"; 	if(G1)
                                    1- 1436     	BANKSEL	_Gdata
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 08rr                      1- 1437     	BTRSS	_Gdata,1
     005E 3rrr                      1- 1438     	LGOTO	_00244_DS_
                                    1- 1439     	.line	346, "main.c"; 	send1();
     005F 2rrr                      1- 1440     	LCALL	_send1
     0060 3rrr                      1- 1441     	LGOTO	_00245_DS_
     0061                           1- 1442     _00244_DS_:
                                    1- 1443     	.line	348, "main.c"; 	send0();
     0061 2rrr                      1- 1444     	LCALL	_send0
     0062                           1- 1445     _00245_DS_:
                                    1- 1446     	.line	349, "main.c"; 	if(G0)
                                    1- 1447     	BANKSEL	_Gdata
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 08rr                      1- 1448     	BTRSS	_Gdata,0
     0064 3rrr                      1- 1449     	LGOTO	_00247_DS_
                                    1- 1450     	.line	350, "main.c"; 	send1();
     0065 2rrr                      1- 1451     	LCALL	_send1
     0066 3rrr                      1- 1452     	LGOTO	_00248_DS_
     0067                           1- 1453     _00247_DS_:
                                    1- 1454     	.line	352, "main.c"; 	send0();
     0067 2rrr                      1- 1455     	LCALL	_send0
     0068                           1- 1456     _00248_DS_:
                                    1- 1457     	.line	354, "main.c"; 	if(B7)
                                    1- 1458     	BANKSEL	_Bdata
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 0Brr                      1- 1459     	BTRSS	_Bdata,7
     006A 3rrr                      1- 1460     	LGOTO	_00250_DS_
                                    1- 1461     	.line	355, "main.c"; 	send1();
     006B 2rrr                      1- 1462     	LCALL	_send1
     006C 3rrr                      1- 1463     	LGOTO	_00251_DS_
     006D                           1- 1464     _00250_DS_:
                                    1- 1465     	.line	357, "main.c"; 	send0();
     006D 2rrr                      1- 1466     	LCALL	_send0
     006E                           1- 1467     _00251_DS_:
                                    1- 1468     	.line	358, "main.c"; 	if(B6)
                                    1- 1469     	BANKSEL	_Bdata
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 0Brr                      1- 1470     	BTRSS	_Bdata,6
     0070 3rrr                      1- 1471     	LGOTO	_00253_DS_
                                    1- 1472     	.line	359, "main.c"; 	send1();
     0071 2rrr                      1- 1473     	LCALL	_send1
     0072 3rrr                      1- 1474     	LGOTO	_00254_DS_
     0073                           1- 1475     _00253_DS_:
                                    1- 1476     	.line	361, "main.c"; 	send0();
     0073 2rrr                      1- 1477     	LCALL	_send0
     0074                           1- 1478     _00254_DS_:
                                    1- 1479     	.line	362, "main.c"; 	if(B5)
                                    1- 1480     	BANKSEL	_Bdata
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 0Arr                      1- 1481     	BTRSS	_Bdata,5
     0076 3rrr                      1- 1482     	LGOTO	_00256_DS_
                                    1- 1483     	.line	363, "main.c"; 	send1();
     0077 2rrr                      1- 1484     	LCALL	_send1
     0078 3rrr                      1- 1485     	LGOTO	_00257_DS_
     0079                           1- 1486     _00256_DS_:
                                    1- 1487     	.line	365, "main.c"; 	send0();
     0079 2rrr                      1- 1488     	LCALL	_send0
     007A                           1- 1489     _00257_DS_:
                                    1- 1490     	.line	366, "main.c"; 	if(B4)
                                    1- 1491     	BANKSEL	_Bdata
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 0Arr                      1- 1492     	BTRSS	_Bdata,4
     007C 3rrr                      1- 1493     	LGOTO	_00259_DS_
                                    1- 1494     	.line	367, "main.c"; 	send1();
     007D 2rrr                      1- 1495     	LCALL	_send1
     007E 3rrr                      1- 1496     	LGOTO	_00260_DS_
     007F                           1- 1497     _00259_DS_:
                                    1- 1498     	.line	369, "main.c"; 	send0();
     007F 2rrr                      1- 1499     	LCALL	_send0
     0080                           1- 1500     _00260_DS_:
                                    1- 1501     	.line	370, "main.c"; 	if(B3)
                                    1- 1502     	BANKSEL	_Bdata
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 09rr                      1- 1503     	BTRSS	_Bdata,3
     0082 3rrr                      1- 1504     	LGOTO	_00262_DS_
                                    1- 1505     	.line	371, "main.c"; 	send1();
     0083 2rrr                      1- 1506     	LCALL	_send1
     0084 3rrr                      1- 1507     	LGOTO	_00263_DS_
     0085                           1- 1508     _00262_DS_:
                                    1- 1509     	.line	373, "main.c"; 	send0();
     0085 2rrr                      1- 1510     	LCALL	_send0
     0086                           1- 1511     _00263_DS_:
                                    1- 1512     	.line	374, "main.c"; 	if(B2)
                                    1- 1513     	BANKSEL	_Bdata
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 09rr                      1- 1514     	BTRSS	_Bdata,2
     0088 3rrr                      1- 1515     	LGOTO	_00265_DS_
                                    1- 1516     	.line	375, "main.c"; 	send1();
     0089 2rrr                      1- 1517     	LCALL	_send1
     008A 3rrr                      1- 1518     	LGOTO	_00266_DS_
     008B                           1- 1519     _00265_DS_:
                                    1- 1520     	.line	377, "main.c"; 	send0();
     008B 2rrr                      1- 1521     	LCALL	_send0
     008C                           1- 1522     _00266_DS_:
                                    1- 1523     	.line	378, "main.c"; 	if(B1)
                                    1- 1524     	BANKSEL	_Bdata
     008C rrrr                      3-   71 m1      .banksel ram_address
     008D 08rr                      1- 1525     	BTRSS	_Bdata,1
     008E 3rrr                      1- 1526     	LGOTO	_00268_DS_
                                    1- 1527     	.line	379, "main.c"; 	send1();
     008F 2rrr                      1- 1528     	LCALL	_send1
     0090 3rrr                      1- 1529     	LGOTO	_00269_DS_
     0091                           1- 1530     _00268_DS_:
                                    1- 1531     	.line	381, "main.c"; 	send0();
     0091 2rrr                      1- 1532     	LCALL	_send0
     0092                           1- 1533     _00269_DS_:
                                    1- 1534     	.line	382, "main.c"; 	if(B0)
                                    1- 1535     	BANKSEL	_Bdata
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 08rr                      1- 1536     	BTRSS	_Bdata,0
     0094 3rrr                      1- 1537     	LGOTO	_00271_DS_
                                    1- 1538     	.line	383, "main.c"; 	send1();
     0095 2rrr                      1- 1539     	LCALL	_send1
     0096 3rrr                      1- 1540     	LGOTO	_00272_DS_
     0097                           1- 1541     _00271_DS_:
                                    1- 1542     	.line	385, "main.c"; 	send0();
     0097 2rrr                      1- 1543     	LCALL	_send0
     0098                           1- 1544     _00272_DS_:
                                    1- 1545     	.line	387, "main.c"; 	PB0 = 0;
     0098 1Crr                      1- 1546     	BCR	_PORTB,0
                                    1- 1547     	.line	388, "main.c"; 	}
                                    1- 1548     	RETURN	
     0099 0010                      3-   26 m1      ret
                                    1- 1549     ; exit point of _sendRGB
                                    1- 1551     ;***
                                    1- 1552     ;  pBlock Stats: dbName = C
                                    1- 1553     ;***
                                    1- 1554     ;has an exit
                                    1- 1555     ;functions called:
                                    1- 1556     ;   _sendRGB
                                    1- 1557     ;   _Delay80us
                                    1- 1558     ;   _sendRGB
                                    1- 1559     ;   _Delay80us
                                    1- 1560     ;12 compiler assigned registers:
                                    1- 1561     ;   r0x1016
                                    1- 1562     ;   STK00
                                    1- 1563     ;   r0x1017
                                    1- 1564     ;   STK01
                                    1- 1565     ;   r0x1018
                                    1- 1566     ;   STK02
                                    1- 1567     ;   r0x1019
                                    1- 1568     ;   r0x101A
                                    1- 1569     ;   r0x101B
                                    1- 1570     ;   r0x101C
                                    1- 1571     ;   r0x101D
                                    1- 1572     ;   r0x101E
                                    1- 1573     ;; Starting pCode block
                                    1- 1574     .segment "code"; module=main, function=_sendtoLast
                                    1- 1576     ;local variable name mapping:
     0000                           1- 1583     _sendtoLast:
                                    1- 1584     ; 2 exit points
                                    1- 1585     	.line	272, "main.c"; 	void sendtoLast(char ledNub,unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 1586     	BANKSEL	r0x1016
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1587     	MOVAR	r0x1016
     0002 01rr                      1- 1588     	MOVR	STK00,W
                                    1- 1589     	BANKSEL	r0x1017
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1590     	MOVAR	r0x1017
     0005 01rr                      1- 1591     	MOVR	STK01,W
                                    1- 1592     	BANKSEL	r0x1018
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1593     	MOVAR	r0x1018
     0008 01rr                      1- 1594     	MOVR	STK02,W
                                    1- 1595     	BANKSEL	r0x1019
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1596     	MOVAR	r0x1019
                                    1- 1597     	.line	274, "main.c"; 	for(int i=0;i<ledNub;i++)
                                    1- 1598     	BANKSEL	r0x101A
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1- 1599     	CLRR	r0x101A
                                    1- 1600     	BANKSEL	r0x101B
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1- 1601     	CLRR	r0x101B
     000F                           1- 1602     _00185_DS_:
                                    1- 1603     	BANKSEL	r0x1016
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1604     	MOVR	r0x1016,W
                                    1- 1605     	BANKSEL	r0x101C
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 1606     	MOVAR	r0x101C
                                    1- 1607     ;;1	CLRR	r0x101D
                                    1- 1608     	BANKSEL	r0x101B
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1609     	MOVR	r0x101B,W
     0015 2580                      1- 1610     	ADDIA	0x80
                                    1- 1611     	BANKSEL	r0x101E
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1612     	MOVAR	r0x101E
     0018 2100                      1- 1613     	MOVIA	0x00
     0019 2580                      1- 1614     	ADDIA	0x80
     001A 04rr                      1- 1615     	SUBAR	r0x101E,W
     001B 0903                      1- 1616     	BTRSS	STATUS,2
     001C 3rrr                      1- 1617     	LGOTO	_00196_DS_
                                    1- 1618     	BANKSEL	r0x101C
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1619     	MOVR	r0x101C,W
                                    1- 1620     	BANKSEL	r0x101A
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1- 1621     	SUBAR	r0x101A,W
     0021                           1- 1622     _00196_DS_:
     0021 0C03                      1- 1623     	BTRSC	STATUS,0
     0022 3rrr                      1- 1624     	LGOTO	_00183_DS_
                                    1- 1625     	.line	276, "main.c"; 	sendRGB(colorR,colorG,colorB);
                                    1- 1626     	BANKSEL	r0x1019
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1- 1627     	MOVR	r0x1019,W
     0025 00rr                      1- 1628     	MOVAR	STK01
                                    1- 1629     	BANKSEL	r0x1018
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1630     	MOVR	r0x1018,W
     0028 00rr                      1- 1631     	MOVAR	STK00
                                    1- 1632     	BANKSEL	r0x1017
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 1633     	MOVR	r0x1017,W
     002B 2rrr                      1- 1634     	LCALL	_sendRGB
                                    1- 1635     	.line	274, "main.c"; 	for(int i=0;i<ledNub;i++)
                                    1- 1636     	BANKSEL	r0x101A
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1637     	INCR	r0x101A,F
     002E 0903                      1- 1638     	BTRSS	STATUS,2
     002F 3rrr                      1- 1639     	LGOTO	_00001_DS_
                                    1- 1640     	BANKSEL	r0x101B
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 05rr                      1- 1641     	INCR	r0x101B,F
     0032                           1- 1642     _00001_DS_:
     0032 3rrr                      1- 1643     	LGOTO	_00185_DS_
     0033                           1- 1644     _00183_DS_:
                                    1- 1645     	.line	278, "main.c"; 	Delay80us();
     0033 2rrr                      1- 1646     	LCALL	_Delay80us
                                    1- 1647     	.line	279, "main.c"; 	}
                                    1- 1648     	RETURN	
     0034 0010                      3-   26 m1      ret
                                    1- 1649     ; exit point of _sendtoLast
                                    1- 1651     ;***
                                    1- 1652     ;  pBlock Stats: dbName = C
                                    1- 1653     ;***
                                    1- 1654     ;has an exit
                                    1- 1655     ;1 compiler assigned register :
                                    1- 1656     ;   r0x101F
                                    1- 1657     ;; Starting pCode block
                                    1- 1658     .segment "code"; module=main, function=_keyRead
                                    1- 1660     ;local variable name mapping:
     0000                           1- 1662     _keyRead:
                                    1- 1663     ; 2 exit points
                                    1- 1664     	.line	253, "main.c"; 	char keyRead(char KeyStatus)	
                                    1- 1665     	BANKSEL	r0x101F
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1666     	MOVAR	r0x101F
                                    1- 1667     	.line	255, "main.c"; 	if (KeyStatus)
     0002 01rr                      1- 1668     	MOVR	r0x101F,W
     0003 0D03                      1- 1669     	BTRSC	STATUS,2
     0004 3rrr                      1- 1670     	LGOTO	_00176_DS_
                                    1- 1671     	.line	257, "main.c"; 	keyCount++;
                                    1- 1672     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1673     	INCR	_keyCount,F
     0007 3rrr                      1- 1674     	LGOTO	_00177_DS_
                                    1- 1675     ;;unsigned compare: left < lit (0x8=8), size=1
     0008                           1- 1676     _00176_DS_:
                                    1- 1677     	.line	261, "main.c"; 	if(keyCount >= 8)
     0008 2108                      1- 1678     	MOVIA	0x08
                                    1- 1679     	BANKSEL	_keyCount
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 04rr                      1- 1680     	SUBAR	_keyCount,W
     000B 0803                      1- 1681     	BTRSS	STATUS,0
     000C 3rrr                      1- 1682     	LGOTO	_00174_DS_
                                    1- 1683     	.line	263, "main.c"; 	keyCount = 0;
     000D 02rr                      1- 1684     	CLRR	_keyCount
                                    1- 1685     	.line	264, "main.c"; 	return	1;
     000E 2101                      1- 1686     	MOVIA	0x01
     000F 3rrr                      1- 1687     	LGOTO	_00178_DS_
     0010                           1- 1688     _00174_DS_:
                                    1- 1689     	.line	266, "main.c"; 	keyCount = 0;
                                    1- 1690     	BANKSEL	_keyCount
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1- 1691     	CLRR	_keyCount
     0012                           1- 1692     _00177_DS_:
                                    1- 1693     	.line	268, "main.c"; 	return 0;
     0012 2100                      1- 1694     	MOVIA	0x00
     0013                           1- 1695     _00178_DS_:
                                    1- 1696     	.line	269, "main.c"; 	}
                                    1- 1697     	RETURN	
     0013 0010                      3-   26 m1      ret
                                    1- 1698     ; exit point of _keyRead
                                    1- 1700     ;***
                                    1- 1701     ;  pBlock Stats: dbName = C
                                    1- 1702     ;***
                                    1- 1703     ;has an exit
                                    1- 1704     ;functions called:
                                    1- 1705     ;   _keyRead
                                    1- 1706     ;   _writeWordStep
                                    1- 1707     ;   _keyRead
                                    1- 1708     ;   _writeWordStep
                                    1- 1709     ;1 compiler assigned register :
                                    1- 1710     ;   r0x1020
                                    1- 1711     ;; Starting pCode block
                                    1- 1712     .segment "code"; module=main, function=_keyCtrl
                                    1- 1714     ;local variable name mapping:
     0000                           1- 1716     _keyCtrl:
                                    1- 1717     ; 2 exit points
                                    1- 1718     	.line	242, "main.c"; 	unsigned char keyClick = keyRead((~PORTB)&0x20);
     0000 07rr                      1- 1719     	COMR	_PORTB,W
                                    1- 1720     	BANKSEL	r0x1020
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1721     	MOVAR	r0x1020
     0003 2120                      1- 1722     	MOVIA	0x20
     0004 10rr                      1- 1723     	ANDAR	r0x1020,F
     0005 01rr                      1- 1724     	MOVR	r0x1020,W
     0006 2rrr                      1- 1725     	LCALL	_keyRead
                                    1- 1726     	BANKSEL	r0x1020
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 1727     	MOVAR	r0x1020
                                    1- 1728     	.line	243, "main.c"; 	if(keyClick)
     0009 01rr                      1- 1729     	MOVR	r0x1020,W
     000A 0D03                      1- 1730     	BTRSC	STATUS,2
     000B 3rrr                      1- 1731     	LGOTO	_00168_DS_
                                    1- 1732     	.line	245, "main.c"; 	if(++workStep >= 21)
                                    1- 1733     	BANKSEL	_workStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 05rr                      1- 1734     	INCR	_workStep,F
                                    1- 1735     ;;unsigned compare: left < lit (0x15=21), size=1
     000E 2115                      1- 1736     	MOVIA	0x15
     000F 04rr                      1- 1737     	SUBAR	_workStep,W
     0010 0803                      1- 1738     	BTRSS	STATUS,0
     0011 3rrr                      1- 1739     	LGOTO	_00165_DS_
                                    1- 1740     	.line	246, "main.c"; 	workStep = 1;
     0012 2101                      1- 1741     	MOVIA	0x01
     0013 00rr                      1- 1742     	MOVAR	_workStep
     0014                           1- 1743     _00165_DS_:
                                    1- 1744     	.line	247, "main.c"; 	writeWordStep(workStep);
                                    1- 1745     	BANKSEL	_workStep
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 1746     	MOVR	_workStep,W
     0016 2rrr                      1- 1747     	LCALL	_writeWordStep
     0017                           1- 1748     _00168_DS_:
                                    1- 1749     	.line	250, "main.c"; 	}
                                    1- 1750     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 1751     ; exit point of _keyCtrl
                                    1- 1753     ;***
                                    1- 1754     ;  pBlock Stats: dbName = C
                                    1- 1755     ;***
                                    1- 1756     ;has an exit
                                    1- 1757     ;functions called:
                                    1- 1758     ;   _sendtoLast
                                    1- 1759     ;   _sendtoLast
                                    1- 1760     ;   _sendtoLast
                                    1- 1761     ;   _sendtoLast
                                    1- 1762     ;   _sendtoLast
                                    1- 1763     ;   _sendtoLast
                                    1- 1764     ;   _sendtoLast
                                    1- 1765     ;   _sendtoLast
                                    1- 1766     ;   _sendtoLast
                                    1- 1767     ;   _sendtoLast
                                    1- 1768     ;   _sendtoLast
                                    1- 1769     ;   _sendtoLast
                                    1- 1770     ;   _sendtoLast
                                    1- 1771     ;   _sendtoLast
                                    1- 1772     ;   _sendtoLast
                                    1- 1773     ;   _sendtoLast
                                    1- 1774     ;   _sendtoLast
                                    1- 1775     ;   _sendtoLast
                                    1- 1776     ;   _sendtoLast
                                    1- 1777     ;   _sendtoLast
                                    1- 1778     ;   _sendtoLast
                                    1- 1779     ;   _sendtoLast
                                    1- 1780     ;   _sendtoLast
                                    1- 1781     ;   _sendtoLast
                                    1- 1782     ;   _sendtoLast
                                    1- 1783     ;   _sendtoLast
                                    1- 1784     ;   _sendtoLast
                                    1- 1785     ;   _sendtoLast
                                    1- 1786     ;   _sendtoLast
                                    1- 1787     ;   _sendtoLast
                                    1- 1788     ;   _sendtoLast
                                    1- 1789     ;   _sendtoLast
                                    1- 1790     ;   _sendtoLast
                                    1- 1791     ;   _sendtoLast
                                    1- 1792     ;   _sendtoLast
                                    1- 1793     ;   _sendtoLast
                                    1- 1794     ;   _sendtoLast
                                    1- 1795     ;   _sendtoLast
                                    1- 1796     ;   _sendtoLast
                                    1- 1797     ;   _sendtoLast
                                    1- 1798     ;4 compiler assigned registers:
                                    1- 1799     ;   r0x1021
                                    1- 1800     ;   STK02
                                    1- 1801     ;   STK01
                                    1- 1802     ;   STK00
                                    1- 1803     ;; Starting pCode block
                                    1- 1804     .segment "code"; module=main, function=_ledCtrl
     0000                           1- 1806     _ledCtrl:
                                    1- 1807     ; 2 exit points
                                    1- 1808     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1- 1809     	.line	174, "main.c"; 	switch(workStep)
     0000 2101                      1- 1810     	MOVIA	0x01
                                    1- 1811     	BANKSEL	_workStep
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1812     	SUBAR	_workStep,W
     0003 0803                      1- 1813     	BTRSS	STATUS,0
     0004 3rrr                      1- 1814     	LGOTO	_00149_DS_
                                    1- 1815     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1816     ;;unsigned compare: left >= lit (0x15=21), size=1
     0005 2115                      1- 1817     	MOVIA	0x15
     0006 04rr                      1- 1818     	SUBAR	_workStep,W
     0007 0C03                      1- 1819     	BTRSC	STATUS,0
     0008 3rrr                      1- 1820     	LGOTO	_00149_DS_
     0009 06rr                      1- 1821     	DECR	_workStep,W
                                    1- 1822     	BANKSEL	r0x1021
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1823     	MOVAR	r0x1021
     000C 21rr                      1- 1824     	MOVIA	((_00159_DS_ >> 8) & 0xff)
     000D 008A                      1- 1825     	MOVAR	PCHBUF
     000E 01rr                      1- 1826     	MOVR	r0x1021,W
     000F 25rr                      1- 1827     	ADDIA	_00159_DS_
     0010 0C03                      1- 1828     	BTRSC	STATUS,0
     0011 058A                      1- 1829     	INCR	PCHBUF,F
     0012 0082                      1- 1830     	MOVAR	PCL
     0013                           1- 1831     _00159_DS_:
     0013 3rrr                      1- 1832     	LGOTO	_00128_DS_
     0014 3rrr                      1- 1833     	LGOTO	_00129_DS_
     0015 3rrr                      1- 1834     	LGOTO	_00130_DS_
     0016 3rrr                      1- 1835     	LGOTO	_00131_DS_
     0017 3rrr                      1- 1836     	LGOTO	_00132_DS_
     0018 3rrr                      1- 1837     	LGOTO	_00133_DS_
     0019 3rrr                      1- 1838     	LGOTO	_00134_DS_
     001A 3rrr                      1- 1839     	LGOTO	_00135_DS_
     001B 3rrr                      1- 1840     	LGOTO	_00136_DS_
     001C 3rrr                      1- 1841     	LGOTO	_00137_DS_
     001D 3rrr                      1- 1842     	LGOTO	_00138_DS_
     001E 3rrr                      1- 1843     	LGOTO	_00139_DS_
     001F 3rrr                      1- 1844     	LGOTO	_00140_DS_
     0020 3rrr                      1- 1845     	LGOTO	_00141_DS_
     0021 3rrr                      1- 1846     	LGOTO	_00142_DS_
     0022 3rrr                      1- 1847     	LGOTO	_00143_DS_
     0023 3rrr                      1- 1848     	LGOTO	_00144_DS_
     0024 3rrr                      1- 1849     	LGOTO	_00145_DS_
     0025 3rrr                      1- 1850     	LGOTO	_00146_DS_
     0026 3rrr                      1- 1851     	LGOTO	_00147_DS_
     0027                           1- 1852     _00128_DS_:
                                    1- 1853     	.line	177, "main.c"; 	sendtoLast(LED_N,WHITE);
     0027 21FF                      1- 1854     	MOVIA	0xff
     0028 00rr                      1- 1855     	MOVAR	STK02
     0029 00rr                      1- 1856     	MOVAR	STK01
     002A 00rr                      1- 1857     	MOVAR	STK00
     002B 2112                      1- 1858     	MOVIA	0x12
     002C 2rrr                      1- 1859     	LCALL	_sendtoLast
                                    1- 1860     	.line	178, "main.c"; 	break;
     002D 3rrr                      1- 1861     	LGOTO	_00149_DS_
     002E                           1- 1862     _00129_DS_:
                                    1- 1863     	.line	180, "main.c"; 	sendtoLast(LED_N,COLOR20);
     002E 21FA                      1- 1864     	MOVIA	0xfa
     002F 00rr                      1- 1865     	MOVAR	STK02
     0030 2100                      1- 1866     	MOVIA	0x00
     0031 00rr                      1- 1867     	MOVAR	STK01
     0032 21FA                      1- 1868     	MOVIA	0xfa
     0033 00rr                      1- 1869     	MOVAR	STK00
     0034 2112                      1- 1870     	MOVIA	0x12
     0035 2rrr                      1- 1871     	LCALL	_sendtoLast
                                    1- 1872     	.line	181, "main.c"; 	break;
     0036 3rrr                      1- 1873     	LGOTO	_00149_DS_
     0037                           1- 1874     _00130_DS_:
                                    1- 1875     	.line	183, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0037 21FA                      1- 1876     	MOVIA	0xfa
     0038 00rr                      1- 1877     	MOVAR	STK02
     0039 2100                      1- 1878     	MOVIA	0x00
     003A 00rr                      1- 1879     	MOVAR	STK01
     003B 21FA                      1- 1880     	MOVIA	0xfa
     003C 00rr                      1- 1881     	MOVAR	STK00
     003D 2112                      1- 1882     	MOVIA	0x12
     003E 2rrr                      1- 1883     	LCALL	_sendtoLast
                                    1- 1884     	.line	184, "main.c"; 	break;
     003F 3rrr                      1- 1885     	LGOTO	_00149_DS_
     0040                           1- 1886     _00131_DS_:
                                    1- 1887     	.line	186, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0040 21FA                      1- 1888     	MOVIA	0xfa
     0041 00rr                      1- 1889     	MOVAR	STK02
     0042 2100                      1- 1890     	MOVIA	0x00
     0043 00rr                      1- 1891     	MOVAR	STK01
     0044 21FA                      1- 1892     	MOVIA	0xfa
     0045 00rr                      1- 1893     	MOVAR	STK00
     0046 2112                      1- 1894     	MOVIA	0x12
     0047 2rrr                      1- 1895     	LCALL	_sendtoLast
                                    1- 1896     	.line	187, "main.c"; 	break;
     0048 3rrr                      1- 1897     	LGOTO	_00149_DS_
     0049                           1- 1898     _00132_DS_:
                                    1- 1899     	.line	189, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0049 21FA                      1- 1900     	MOVIA	0xfa
     004A 00rr                      1- 1901     	MOVAR	STK02
     004B 2100                      1- 1902     	MOVIA	0x00
     004C 00rr                      1- 1903     	MOVAR	STK01
     004D 21FA                      1- 1904     	MOVIA	0xfa
     004E 00rr                      1- 1905     	MOVAR	STK00
     004F 2112                      1- 1906     	MOVIA	0x12
     0050 2rrr                      1- 1907     	LCALL	_sendtoLast
                                    1- 1908     	.line	190, "main.c"; 	break;
     0051 3rrr                      1- 1909     	LGOTO	_00149_DS_
     0052                           1- 1910     _00133_DS_:
                                    1- 1911     	.line	192, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0052 21FA                      1- 1912     	MOVIA	0xfa
     0053 00rr                      1- 1913     	MOVAR	STK02
     0054 2100                      1- 1914     	MOVIA	0x00
     0055 00rr                      1- 1915     	MOVAR	STK01
     0056 21FA                      1- 1916     	MOVIA	0xfa
     0057 00rr                      1- 1917     	MOVAR	STK00
     0058 2112                      1- 1918     	MOVIA	0x12
     0059 2rrr                      1- 1919     	LCALL	_sendtoLast
                                    1- 1920     	.line	193, "main.c"; 	break;
     005A 3rrr                      1- 1921     	LGOTO	_00149_DS_
     005B                           1- 1922     _00134_DS_:
                                    1- 1923     	.line	195, "main.c"; 	sendtoLast(LED_N,COLOR20);
     005B 21FA                      1- 1924     	MOVIA	0xfa
     005C 00rr                      1- 1925     	MOVAR	STK02
     005D 2100                      1- 1926     	MOVIA	0x00
     005E 00rr                      1- 1927     	MOVAR	STK01
     005F 21FA                      1- 1928     	MOVIA	0xfa
     0060 00rr                      1- 1929     	MOVAR	STK00
     0061 2112                      1- 1930     	MOVIA	0x12
     0062 2rrr                      1- 1931     	LCALL	_sendtoLast
                                    1- 1932     	.line	196, "main.c"; 	break;
     0063 3rrr                      1- 1933     	LGOTO	_00149_DS_
     0064                           1- 1934     _00135_DS_:
                                    1- 1935     	.line	198, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0064 21FA                      1- 1936     	MOVIA	0xfa
     0065 00rr                      1- 1937     	MOVAR	STK02
     0066 2100                      1- 1938     	MOVIA	0x00
     0067 00rr                      1- 1939     	MOVAR	STK01
     0068 21FA                      1- 1940     	MOVIA	0xfa
     0069 00rr                      1- 1941     	MOVAR	STK00
     006A 2112                      1- 1942     	MOVIA	0x12
     006B 2rrr                      1- 1943     	LCALL	_sendtoLast
                                    1- 1944     	.line	199, "main.c"; 	break;
     006C 3rrr                      1- 1945     	LGOTO	_00149_DS_
     006D                           1- 1946     _00136_DS_:
                                    1- 1947     	.line	201, "main.c"; 	sendtoLast(LED_N,COLOR20);
     006D 21FA                      1- 1948     	MOVIA	0xfa
     006E 00rr                      1- 1949     	MOVAR	STK02
     006F 2100                      1- 1950     	MOVIA	0x00
     0070 00rr                      1- 1951     	MOVAR	STK01
     0071 21FA                      1- 1952     	MOVIA	0xfa
     0072 00rr                      1- 1953     	MOVAR	STK00
     0073 2112                      1- 1954     	MOVIA	0x12
     0074 2rrr                      1- 1955     	LCALL	_sendtoLast
                                    1- 1956     	.line	202, "main.c"; 	break;
     0075 3rrr                      1- 1957     	LGOTO	_00149_DS_
     0076                           1- 1958     _00137_DS_:
                                    1- 1959     	.line	204, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0076 21FA                      1- 1960     	MOVIA	0xfa
     0077 00rr                      1- 1961     	MOVAR	STK02
     0078 2100                      1- 1962     	MOVIA	0x00
     0079 00rr                      1- 1963     	MOVAR	STK01
     007A 21FA                      1- 1964     	MOVIA	0xfa
     007B 00rr                      1- 1965     	MOVAR	STK00
     007C 2112                      1- 1966     	MOVIA	0x12
     007D 2rrr                      1- 1967     	LCALL	_sendtoLast
                                    1- 1968     	.line	205, "main.c"; 	break;
     007E 3rrr                      1- 1969     	LGOTO	_00149_DS_
     007F                           1- 1970     _00138_DS_:
                                    1- 1971     	.line	207, "main.c"; 	sendtoLast(LED_N,COLOR20);
     007F 21FA                      1- 1972     	MOVIA	0xfa
     0080 00rr                      1- 1973     	MOVAR	STK02
     0081 2100                      1- 1974     	MOVIA	0x00
     0082 00rr                      1- 1975     	MOVAR	STK01
     0083 21FA                      1- 1976     	MOVIA	0xfa
     0084 00rr                      1- 1977     	MOVAR	STK00
     0085 2112                      1- 1978     	MOVIA	0x12
     0086 2rrr                      1- 1979     	LCALL	_sendtoLast
                                    1- 1980     	.line	208, "main.c"; 	break;
     0087 3rrr                      1- 1981     	LGOTO	_00149_DS_
     0088                           1- 1982     _00139_DS_:
                                    1- 1983     	.line	210, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0088 21FA                      1- 1984     	MOVIA	0xfa
     0089 00rr                      1- 1985     	MOVAR	STK02
     008A 2100                      1- 1986     	MOVIA	0x00
     008B 00rr                      1- 1987     	MOVAR	STK01
     008C 21FA                      1- 1988     	MOVIA	0xfa
     008D 00rr                      1- 1989     	MOVAR	STK00
     008E 2112                      1- 1990     	MOVIA	0x12
     008F 2rrr                      1- 1991     	LCALL	_sendtoLast
                                    1- 1992     	.line	211, "main.c"; 	break;
     0090 3rrr                      1- 1993     	LGOTO	_00149_DS_
     0091                           1- 1994     _00140_DS_:
                                    1- 1995     	.line	213, "main.c"; 	sendtoLast(LED_N,COLOR20);
     0091 21FA                      1- 1996     	MOVIA	0xfa
     0092 00rr                      1- 1997     	MOVAR	STK02
     0093 2100                      1- 1998     	MOVIA	0x00
     0094 00rr                      1- 1999     	MOVAR	STK01
     0095 21FA                      1- 2000     	MOVIA	0xfa
     0096 00rr                      1- 2001     	MOVAR	STK00
     0097 2112                      1- 2002     	MOVIA	0x12
     0098 2rrr                      1- 2003     	LCALL	_sendtoLast
                                    1- 2004     	.line	214, "main.c"; 	break;
     0099 3rrr                      1- 2005     	LGOTO	_00149_DS_
     009A                           1- 2006     _00141_DS_:
                                    1- 2007     	.line	216, "main.c"; 	sendtoLast(LED_N,COLOR20);
     009A 21FA                      1- 2008     	MOVIA	0xfa
     009B 00rr                      1- 2009     	MOVAR	STK02
     009C 2100                      1- 2010     	MOVIA	0x00
     009D 00rr                      1- 2011     	MOVAR	STK01
     009E 21FA                      1- 2012     	MOVIA	0xfa
     009F 00rr                      1- 2013     	MOVAR	STK00
     00A0 2112                      1- 2014     	MOVIA	0x12
     00A1 2rrr                      1- 2015     	LCALL	_sendtoLast
                                    1- 2016     	.line	217, "main.c"; 	break;
     00A2 3rrr                      1- 2017     	LGOTO	_00149_DS_
     00A3                           1- 2018     _00142_DS_:
                                    1- 2019     	.line	219, "main.c"; 	sendtoLast(LED_N,GREEN);
     00A3 2100                      1- 2020     	MOVIA	0x00
     00A4 00rr                      1- 2021     	MOVAR	STK02
     00A5 21FF                      1- 2022     	MOVIA	0xff
     00A6 00rr                      1- 2023     	MOVAR	STK01
     00A7 2100                      1- 2024     	MOVIA	0x00
     00A8 00rr                      1- 2025     	MOVAR	STK00
     00A9 2112                      1- 2026     	MOVIA	0x12
     00AA 2rrr                      1- 2027     	LCALL	_sendtoLast
                                    1- 2028     	.line	220, "main.c"; 	break;
     00AB 3rrr                      1- 2029     	LGOTO	_00149_DS_
     00AC                           1- 2030     _00143_DS_:
                                    1- 2031     	.line	222, "main.c"; 	sendtoLast(LED_N,RED);
     00AC 2100                      1- 2032     	MOVIA	0x00
     00AD 00rr                      1- 2033     	MOVAR	STK02
     00AE 00rr                      1- 2034     	MOVAR	STK01
     00AF 21FF                      1- 2035     	MOVIA	0xff
     00B0 00rr                      1- 2036     	MOVAR	STK00
     00B1 2112                      1- 2037     	MOVIA	0x12
     00B2 2rrr                      1- 2038     	LCALL	_sendtoLast
                                    1- 2039     	.line	223, "main.c"; 	break;
     00B3 3rrr                      1- 2040     	LGOTO	_00149_DS_
     00B4                           1- 2041     _00144_DS_:
                                    1- 2042     	.line	225, "main.c"; 	sendtoLast(LED_N,BLUE);
     00B4 21FF                      1- 2043     	MOVIA	0xff
     00B5 00rr                      1- 2044     	MOVAR	STK02
     00B6 2100                      1- 2045     	MOVIA	0x00
     00B7 00rr                      1- 2046     	MOVAR	STK01
     00B8 00rr                      1- 2047     	MOVAR	STK00
     00B9 2112                      1- 2048     	MOVIA	0x12
     00BA 2rrr                      1- 2049     	LCALL	_sendtoLast
                                    1- 2050     	.line	226, "main.c"; 	break;
     00BB 3rrr                      1- 2051     	LGOTO	_00149_DS_
     00BC                           1- 2052     _00145_DS_:
                                    1- 2053     	.line	228, "main.c"; 	sendtoLast(LED_N,COLOR18);
     00BC 21FA                      1- 2054     	MOVIA	0xfa
     00BD 00rr                      1- 2055     	MOVAR	STK02
     00BE 00rr                      1- 2056     	MOVAR	STK01
     00BF 2100                      1- 2057     	MOVIA	0x00
     00C0 00rr                      1- 2058     	MOVAR	STK00
     00C1 2112                      1- 2059     	MOVIA	0x12
     00C2 2rrr                      1- 2060     	LCALL	_sendtoLast
                                    1- 2061     	.line	229, "main.c"; 	break;
     00C3 3rrr                      1- 2062     	LGOTO	_00149_DS_
     00C4                           1- 2063     _00146_DS_:
                                    1- 2064     	.line	231, "main.c"; 	sendtoLast(LED_N,YELLOW);
     00C4 2100                      1- 2065     	MOVIA	0x00
     00C5 00rr                      1- 2066     	MOVAR	STK02
     00C6 21FA                      1- 2067     	MOVIA	0xfa
     00C7 00rr                      1- 2068     	MOVAR	STK01
     00C8 00rr                      1- 2069     	MOVAR	STK00
     00C9 2112                      1- 2070     	MOVIA	0x12
     00CA 2rrr                      1- 2071     	LCALL	_sendtoLast
                                    1- 2072     	.line	232, "main.c"; 	break;
     00CB 3rrr                      1- 2073     	LGOTO	_00149_DS_
     00CC                           1- 2074     _00147_DS_:
                                    1- 2075     	.line	234, "main.c"; 	sendtoLast(LED_N,COLOR20);
     00CC 21FA                      1- 2076     	MOVIA	0xfa
     00CD 00rr                      1- 2077     	MOVAR	STK02
     00CE 2100                      1- 2078     	MOVIA	0x00
     00CF 00rr                      1- 2079     	MOVAR	STK01
     00D0 21FA                      1- 2080     	MOVIA	0xfa
     00D1 00rr                      1- 2081     	MOVAR	STK00
     00D2 2112                      1- 2082     	MOVIA	0x12
     00D3 2rrr                      1- 2083     	LCALL	_sendtoLast
     00D4                           1- 2084     _00149_DS_:
                                    1- 2085     	.line	237, "main.c"; 	}
                                    1- 2086     	RETURN	
     00D4 0010                      3-   26 m1      ret
                                    1- 2087     ; exit point of _ledCtrl
                                    1- 2089     ;***
                                    1- 2090     ;  pBlock Stats: dbName = C
                                    1- 2091     ;***
                                    1- 2092     ;has an exit
                                    1- 2093     ;; Starting pCode block
                                    1- 2094     .segment "code"; module=main, function=_initTimer0
     0000                           1- 2096     _initTimer0:
                                    1- 2097     ; 2 exit points
                                    1- 2098     	.line	125, "main.c"; 	PORTB = 0xFE;
     0000 21FE                      1- 2099     	MOVIA	0xfe
     0001 00rr                      1- 2100     	MOVAR	_PORTB
                                    1- 2101     	.line	126, "main.c"; 	BPHCON = 0x20;
     0002 2120                      1- 2102     	MOVIA	0x20
     0003 00rr                      1- 2103     	MOVAR	_BPHCON
                                    1- 2104     	.line	128, "main.c"; 	IOSTB =  C_PB5_Input;	
     0004 000r                      1- 2105     	IOST	_IOSTB
                                    1- 2106     	.line	129, "main.c"; 	PORTB = 0xFE;                        	// PortB Data Register = 0x00
     0005 21FE                      1- 2107     	MOVIA	0xfe
     0006 00rr                      1- 2108     	MOVAR	_PORTB
                                    1- 2109     	.line	130, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT & LVR
     0007 2188                      1- 2110     	MOVIA	0x88
     0008 00rr                      1- 2111     	MOVAR	_PCON
                                    1- 2112     	.line	131, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0009 2101                      1- 2113     	MOVIA	0x01
     000A 00rr                      1- 2114     	MOVAR	_INTE
                                    1- 2115     	.line	132, "main.c"; 	INTF = 0;
     000B 02rr                      1- 2116     	CLRR	_INTF
                                    1- 2117     	.line	135, "main.c"; 	PCON1 = C_TMR0_Dis;
     000C 0200                      1- 2118     	CLRA	
     000D 000r                      1- 2119     	IOST	_PCON1
                                    1- 2120     	.line	137, "main.c"; 	TMR0 = 55;
     000E 2137                      1- 2121     	MOVIA	0x37
     000F 00rr                      1- 2122     	MOVAR	_TMR0
                                    1- 2123     	.line	138, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0010 0200                      1- 2124     	CLRA	
     0011 0003                      1- 2125     	T0MD	
                                    1- 2126     	.line	140, "main.c"; 	PCON1 = C_TMR0_En;
     0012 2101                      1- 2127     	MOVIA	0x01
     0013 000r                      1- 2128     	IOST	_PCON1
                                    1- 2129     	.line	144, "main.c"; 	ENI();	
     0014 0004                      1- 2130     	ENI
                                    1- 2131     	.line	146, "main.c"; 	}
                                    1- 2132     	RETURN	
     0015 0010                      3-   26 m1      ret
                                    1- 2133     ; exit point of _initTimer0
                                    1- 2136     ;	code size estimation:
                                    1- 2137     ;	  672+  115 =   787 instructions ( 1804 byte)
                                    1- 2139     	end
                                    1- 2139     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__gptrget1              Label    00000000
__gptrput1              Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800533
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    00000032
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00123_DS_              Label    0000000A
_00128_DS_              Label    00000027
_00129_DS_              Label    0000002E
_00130_DS_              Label    00000037
_00131_DS_              Label    00000040
_00132_DS_              Label    00000049
_00133_DS_              Label    00000052
_00134_DS_              Label    0000005B
_00135_DS_              Label    00000064
_00136_DS_              Label    0000006D
_00137_DS_              Label    00000076
_00138_DS_              Label    0000007F
_00139_DS_              Label    00000088
_00140_DS_              Label    00000091
_00141_DS_              Label    0000009A
_00142_DS_              Label    000000A3
_00143_DS_              Label    000000AC
_00144_DS_              Label    000000B4
_00145_DS_              Label    000000BC
_00146_DS_              Label    000000C4
_00147_DS_              Label    000000CC
_00149_DS_              Label    000000D4
_00159_DS_              Label    00000013
_00165_DS_              Label    00000014
_00168_DS_              Label    00000017
_00174_DS_              Label    00000010
_00176_DS_              Label    00000008
_00177_DS_              Label    00000012
_00178_DS_              Label    00000013
_00183_DS_              Label    00000033
_00185_DS_              Label    0000000F
_00196_DS_              Label    00000021
_00202_DS_              Label    0000000D
_00203_DS_              Label    0000000E
_00205_DS_              Label    00000013
_00206_DS_              Label    00000014
_00208_DS_              Label    00000019
_00209_DS_              Label    0000001A
_00211_DS_              Label    0000001F
_00212_DS_              Label    00000020
_00214_DS_              Label    00000025
_00215_DS_              Label    00000026
_00217_DS_              Label    0000002B
_00218_DS_              Label    0000002C
_00220_DS_              Label    00000031
_00221_DS_              Label    00000032
_00223_DS_              Label    00000037
_00224_DS_              Label    00000038
_00226_DS_              Label    0000003D
_00227_DS_              Label    0000003E
_00229_DS_              Label    00000043
_00230_DS_              Label    00000044
_00232_DS_              Label    00000049
_00233_DS_              Label    0000004A
_00235_DS_              Label    0000004F
_00236_DS_              Label    00000050
_00238_DS_              Label    00000055
_00239_DS_              Label    00000056
_00241_DS_              Label    0000005B
_00242_DS_              Label    0000005C
_00244_DS_              Label    00000061
_00245_DS_              Label    00000062
_00247_DS_              Label    00000067
_00248_DS_              Label    00000068
_00250_DS_              Label    0000006D
_00251_DS_              Label    0000006E
_00253_DS_              Label    00000073
_00254_DS_              Label    00000074
_00256_DS_              Label    00000079
_00257_DS_              Label    0000007A
_00259_DS_              Label    0000007F
_00260_DS_              Label    00000080
_00262_DS_              Label    00000085
_00263_DS_              Label    00000086
_00265_DS_              Label    0000008B
_00266_DS_              Label    0000008C
_00268_DS_              Label    00000091
_00269_DS_              Label    00000092
_00271_DS_              Label    00000097
_00272_DS_              Label    00000098
_00287_DS_              Label    00000002
_00289_DS_              Label    0000000B
_00328_DS_              Label    00000005
_00330_DS_              Label    0000001A
_00335_DS_              Label    00000022
_00337_DS_              Label    00000006
_00342_DS_              Label    00000037
_00345_DS_              Label    00000042
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_Bdata                  Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_Delay10Us              Label    00000000
_Delay80us              Label    00000000
_FSR                    Label    00000000
_Gdata                  Label    00000000
_INDF                   Label    00000000
_initTimer0             Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtrl                Label    00000000
_keyRead                Label    00000000
_ledCtrl                Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_Rdata                  Label    00000000
_ReadByte               Label    00000000
_readWordStep           Label    00000000
_RecvAck                Label    00000000
_SDAInput               Label    00000000
_SDAOutput              Label    00000000
_send0                  Label    00000000
_send1                  Label    00000000
_SendAck                Label    00000000
_SendByte               Label    00000000
_SendNoAck              Label    00000000
_sendRGB                Label    00000000
_sendtoLast             Label    00000000
_Start24C02             Label    00000000
_STATUS                 Label    00000000
_Stop24C02              Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_workStep               Label    00000000
_writeWordStep          Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x100A                 Label    00000000
r0x100B                 Label    00000000
r0x100C                 Label    00000000
r0x100D                 Label    00000000
r0x100E                 Label    00000000
r0x100F                 Label    00000000
r0x1010                 Label    00000000
r0x1011                 Label    00000000
r0x1012                 Label    00000000
r0x1013                 Label    00000000
r0x1014                 Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
r0x101A                 Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a053d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A053D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
