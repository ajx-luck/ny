
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduint
                                    1-   15     	extern	__divuchar
                                    1-   16     	extern	_PORTAbits
                                    1-   17     	extern	_PORTBbits
                                    1-   18     	extern	_PCONbits
                                    1-   19     	extern	_BWUCONbits
                                    1-   20     	extern	_ABPLCONbits
                                    1-   21     	extern	_BPHCONbits
                                    1-   22     	extern	_INTEbits
                                    1-   23     	extern	_INTFbits
                                    1-   24     	extern	_AWUCONbits
                                    1-   25     	extern	_INTEDGbits
                                    1-   26     	extern	_RFCbits
                                    1-   27     	extern	_INTE2bits
                                    1-   28     	extern	_INDF
                                    1-   29     	extern	_TMR0
                                    1-   30     	extern	_PCL
                                    1-   31     	extern	_STATUS
                                    1-   32     	extern	_FSR
                                    1-   33     	extern	_PORTA
                                    1-   34     	extern	_PORTB
                                    1-   35     	extern	_PCON
                                    1-   36     	extern	_BWUCON
                                    1-   37     	extern	_PCHBUF
                                    1-   38     	extern	_ABPLCON
                                    1-   39     	extern	_BPHCON
                                    1-   40     	extern	_INTE
                                    1-   41     	extern	_INTF
                                    1-   42     	extern	_AWUCON
                                    1-   43     	extern	_INTEDG
                                    1-   44     	extern	_TMRH
                                    1-   45     	extern	_RFC
                                    1-   46     	extern	_TM34RH
                                    1-   47     	extern	_INTE2
                                    1-   48     	extern	_TMR1
                                    1-   49     	extern	_T1CR1
                                    1-   50     	extern	_T1CR2
                                    1-   51     	extern	_PWM1DUTY
                                    1-   52     	extern	_PS1CV
                                    1-   53     	extern	_BZ1CR
                                    1-   54     	extern	_IRCR
                                    1-   55     	extern	_TBHP
                                    1-   56     	extern	_TBHD
                                    1-   57     	extern	_P2CR1
                                    1-   58     	extern	_PWM2DUTY
                                    1-   59     	extern	_OSCCR
                                    1-   60     	extern	_TMR3
                                    1-   61     	extern	_T3CR1
                                    1-   62     	extern	_T3CR2
                                    1-   63     	extern	_PWM3DUTY
                                    1-   64     	extern	_PS3CV
                                    1-   65     	extern	_P4CR1
                                    1-   66     	extern	_PWM4DUTY
                                    1-   67     	extern	_P5CR1
                                    1-   68     	extern	_PWM5DUTY
                                    1-   69     	extern	_PWM5RH
                                    1-   70     	extern	_IOSTA
                                    1-   71     	extern	_IOSTB
                                    1-   72     	extern	_APHCON
                                    1-   73     	extern	_PS0CV
                                    1-   74     	extern	_BODCON
                                    1-   75     	extern	_CMPCR
                                    1-   76     	extern	_PCON1
                                    1-   77     	extern	_T0MD
                                    1-   78     	extern	___sdcc_saved_fsr
                                    1-   79     	extern	___sdcc_saved_stk00
                                    1-   80     	extern	___sdcc_saved_stk01
                                    1-   81     	extern	__gptrput1
                                    1-   82     	extern	__mulchar
                                    1-   83     	extern	__mulint
                                    1-   84     	extern	__gptrget1
                                    1-   85     	extern	__nyc_ny8_startup
                                    1-   86     ;--------------------------------------------------------
                                    1-   87     ; global declarations
                                    1-   88     ;--------------------------------------------------------
                                    1-   89     	extern	_sendtoLast
                                    1-   90     	extern	_sendRGB
                                    1-   91     	extern	_Delay80us
                                    1-   92     	extern	_work10
                                    1-   93     	extern	_breath3
                                    1-   94     	extern	_work9
                                    1-   95     	extern	_setColor
                                    1-   96     	extern	_workCtr
                                    1-   97     	extern	_delay
                                    1-   98     	extern	_WByte
                                    1-   99     	extern	_WaitTF0
                                    1-  100     	extern	_RByte
                                    1-  101     	extern	_rankNub
                                    1-  102     	extern	_revData
                                    1-  103     	extern	_isr
                                    1-  104     	extern	_main
                                    1-  105     	extern	_Delay10Us
                                    1-  106     	extern	_TM0_FLAG
                                    1-  107     	extern	_REC_FLAG
                                    1-  108     	extern	_SEND_FLAG
                                    1-  109     	extern	_intCount
                                    1-  110     	extern	_IntFlag
                                    1-  111     	extern	_uartFlag
                                    1-  112     	extern	_revList
                                    1-  113     	extern	_data
                                    1-  114     	extern	_recData
                                    1-  115     	extern	_Hcount
                                    1-  116     	extern	_index
                                    1-  117     	extern	_uartTime
                                    1-  118     	extern	_workStep
                                    1-  119     	extern	_colorIndex
                                    1-  120     	extern	_timeCount
                                    1-  121     	extern	_firstFlag
                                    1-  122     	extern	_randNub
                                    1-  123     	extern	_snub
                                    1-  124     	extern	_preColorIndex
                                    1-  125     	extern	_preduty
                                    1-  126     	extern	_Rdata
                                    1-  127     	extern	_Gdata
                                    1-  128     	extern	_Bdata
                                    1-  129     	extern	_Rdata1
                                    1-  130     	extern	_Gdata1
                                    1-  131     	extern	_Bdata1
                                    1-  132     	extern	_duty
                                    1-  133     	extern	_ledCount
                                    1-  135     	extern PSAVE
                                    1-  136     	extern SSAVE
                                    1-  137     	extern WSAVE
                                    1-  138     	extern STK12
                                    1-  139     	extern STK11
                                    1-  140     	extern STK10
                                    1-  141     	extern STK09
                                    1-  142     	extern STK08
                                    1-  143     	extern STK07
                                    1-  144     	extern STK06
                                    1-  145     	extern STK05
                                    1-  146     	extern STK04
                                    1-  147     	extern STK03
                                    1-  148     	extern STK02
                                    1-  149     	extern STK01
                                    1-  150     	extern STK00
                                    1-  152     .segment "uninit", 0x20000040
 20000040                           1-  153     PSAVE:
                                    1-  154     	.res 1
 20000041                           1-  155     SSAVE:
                                    1-  156     	.res 1
 20000042                           1-  157     WSAVE:
                                    1-  158     	.res 1
 20000043                           1-  159     STK12:
                                    1-  160     	.res 1
 20000044                           1-  161     STK11:
                                    1-  162     	.res 1
 20000045                           1-  163     STK10:
                                    1-  164     	.res 1
 20000046                           1-  165     STK09:
                                    1-  166     	.res 1
 20000047                           1-  167     STK08:
                                    1-  168     	.res 1
 20000048                           1-  169     STK07:
                                    1-  170     	.res 1
 20000049                           1-  171     STK06:
                                    1-  172     	.res 1
 2000004A                           1-  173     STK05:
                                    1-  174     	.res 1
 2000004B                           1-  175     STK04:
                                    1-  176     	.res 1
 2000004C                           1-  177     STK03:
                                    1-  178     	.res 1
 2000004D                           1-  179     STK02:
                                    1-  180     	.res 1
 2000004E                           1-  181     STK01:
                                    1-  182     	.res 1
 2000004F                           1-  183     STK00:
                                    1-  184     	.res 1
                                    1-  186     ;--------------------------------------------------------
                                    1-  187     ; global definitions
                                    1-  188     ;--------------------------------------------------------
                                    1-  189     .segment "uninit"
     0000                           1-  190     _revList:
                                    1-  191     	.res	5
                                    1-  194     ;--------------------------------------------------------
                                    1-  195     ; absolute symbol definitions
                                    1-  196     ;--------------------------------------------------------
                                    1-  197     ;--------------------------------------------------------
                                    1-  198     ; compiler-defined variables
                                    1-  199     ;--------------------------------------------------------
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x104D:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x104E:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x104F:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x1050:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1051:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1052:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x104B:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x104C:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1043:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1044:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x1045:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1046:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x104A:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1040:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1041:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1042:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x103D:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x103E:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x103F:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x103B:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x103C:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1027:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1033:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1032:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1036:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1035:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1038:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x102A:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1029:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1028:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x102D:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x102C:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x102B:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x1030:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x102F:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x102E:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1031:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1021:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1022:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1023:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x1024:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x1025:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x1026:
                                    1-  328     	.res	1
                                    1-  329     ;--------------------------------------------------------
                                    1-  330     ; initialized data
                                    1-  331     ;--------------------------------------------------------
                                    1-  333     .segment "idata"
     0000                           1-  334     _TM0_FLAG:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _REC_FLAG:
     0000 0000                      1-  341     	dw	0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _SEND_FLAG:
     0000 0000                      1-  347     	dw	0x00
                                    1-  351     .segment "idata"
     0000                           1-  352     _intCount:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _IntFlag:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _uartFlag:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _data:
     0000 0025                      1-  371     	dw	0x25
                                    1-  375     .segment "idata"
     0000                           1-  376     _recData:
     0000 0000                      1-  377     	dw	0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _Hcount:
     0000 0000                      1-  383     	dw	0x00
                                    1-  387     .segment "idata"
     0000                           1-  388     _index:
     0000 0000                      1-  389     	dw	0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _uartTime:
     0000 0000                      1-  395     	dw	0x00
                                    1-  399     .segment "idata"
     0000                           1-  400     _workStep:
     0000 0000                      1-  401     	dw	0x00
                                    1-  405     .segment "idata"
     0000                           1-  406     _colorIndex:
     0000 0001                      1-  407     	dw	0x01
                                    1-  411     .segment "idata"
     0000                           1-  412     _timeCount:
     0000 0000 0000                 1-  413     	dw	0x00, 0x00
                                    1-  417     .segment "idata"
     0000                           1-  418     _firstFlag:
     0000 0002                      1-  419     	dw	0x02
                                    1-  423     .segment "idata"
     0000                           1-  424     _randNub:
     0000 0000                      1-  425     	dw	0x00
                                    1-  429     .segment "idata"
     0000                           1-  430     _snub:
     0000 0000                      1-  431     	dw	0x00
                                    1-  435     .segment "idata"
     0000                           1-  436     _preColorIndex:
     0000 0000                      1-  437     	dw	0x00
                                    1-  441     .segment "idata"
     0000                           1-  442     _preduty:
     0000 0000                      1-  443     	dw	0x00
                                    1-  447     .segment "idata"
     0000                           1-  448     _Rdata:
     0000 0000                      1-  449     	dw	0x00
                                    1-  453     .segment "idata"
     0000                           1-  454     _Gdata:
     0000 0000                      1-  455     	dw	0x00
                                    1-  459     .segment "idata"
     0000                           1-  460     _Bdata:
     0000 0000                      1-  461     	dw	0x00
                                    1-  465     .segment "idata"
     0000                           1-  466     _Rdata1:
     0000 0000                      1-  467     	dw	0x00
                                    1-  471     .segment "idata"
     0000                           1-  472     _Gdata1:
     0000 0000                      1-  473     	dw	0x00
                                    1-  477     .segment "idata"
     0000                           1-  478     _Bdata1:
     0000 0000                      1-  479     	dw	0x00
                                    1-  483     .segment "idata"
     0000                           1-  484     _duty:
     0000 0000                      1-  485     	dw	0x00
                                    1-  489     .segment "idata"
     0000                           1-  490     _ledCount:
     0000 0000                      1-  491     	dw	0x00
                                    1-  494     ;--------------------------------------------------------
                                    1-  495     ; overlayable items in internal ram 
                                    1-  496     ;--------------------------------------------------------
                                    1-  497     ;	udata_ovr
                                    1-  498     ;--------------------------------------------------------
                                    1-  499     ; reset vector 
                                    1-  500     ;--------------------------------------------------------
                                    1-  501     ORG	0x0000
     0000 3rrr                      1-  502     	LGOTO	__nyc_ny8_startup
                                    1-  503     ;--------------------------------------------------------
                                    1-  504     ; interrupt and initialization code
                                    1-  505     ;--------------------------------------------------------
                                    1-  506     ORG 0x0008
     0008 3rrr                      1-  507     	lgoto	__sdcc_interrupt
                                    1-  509     .segment "code"
     0000                           1-  510     __sdcc_interrupt:
                                    1-  511     ;***
                                    1-  512     ;  pBlock Stats: dbName = I
                                    1-  513     ;***
                                    1-  514     ;functions called:
                                    1-  515     ;   _setColor
                                    1-  516     ;   _setColor
                                    1-  517     ;   _setColor
                                    1-  518     ;   __moduint
                                    1-  519     ;   _rankNub
                                    1-  520     ;   _rankNub
                                    1-  521     ;   __divuchar
                                    1-  522     ;   _setColor
                                    1-  523     ;   _setColor
                                    1-  524     ;   _setColor
                                    1-  525     ;   __moduint
                                    1-  526     ;   _rankNub
                                    1-  527     ;   _rankNub
                                    1-  528     ;   __divuchar
                                    1-  529     ;9 compiler assigned registers:
                                    1-  530     ;   STK00
                                    1-  531     ;   STK01
                                    1-  532     ;   r0x104D
                                    1-  533     ;   r0x104E
                                    1-  534     ;   r0x104F
                                    1-  535     ;   r0x1050
                                    1-  536     ;   r0x1051
                                    1-  537     ;   r0x1052
                                    1-  538     ;   STK02
                                    1-  539     ;; Starting pCode block
     0000                           1-  540     _isr:
                                    1-  541     ; 0 exit points
                                    1-  542     	.line	120, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  543     	MOVAR	WSAVE
     0001 1503                      1-  544     	SWAPR	STATUS,W
     0002 0283                      1-  545     	CLRR	STATUS
     0003 00rr                      1-  546     	MOVAR	SSAVE
     0004 010A                      1-  547     	MOVR	PCHBUF,W
     0005 028A                      1-  548     	CLRR	PCHBUF
     0006 00rr                      1-  549     	MOVAR	PSAVE
     0007 0104                      1-  550     	MOVR	FSR,W
                                    1-  551     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  552     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  553     	MOVR	STK00,W
                                    1-  554     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  555     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  556     	MOVR	STK01,W
                                    1-  557     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  558     	MOVAR	___sdcc_saved_stk01
                                    1-  559     	.line	122, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  560     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  561     	LGOTO	_00134_DS_
                                    1-  562     	.line	125, "main.c"; 	TMR0 += 65;
     0012 2141                      1-  563     	MOVIA	0x41
     0013 03rr                      1-  564     	ADDAR	_TMR0,F
                                    1-  565     	.line	126, "main.c"; 	intCount++;
                                    1-  566     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  567     	INCR	_intCount,F
                                    1-  568     	.line	127, "main.c"; 	if(intCount == 50)
     0016 01rr                      1-  569     	MOVR	_intCount,W
     0017 2432                      1-  570     	XORIA	0x32
     0018 0903                      1-  571     	BTRSS	STATUS,2
     0019 3rrr                      1-  572     	LGOTO	_00134_DS_
                                    1-  573     	.line	129, "main.c"; 	intCount = 0;
     001A 02rr                      1-  574     	CLRR	_intCount
                                    1-  575     	.line	130, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  576     	MOVIA	0x01
                                    1-  577     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  578     	MOVAR	_IntFlag
                                    1-  579     ;;unsigned compare: left < lit (0x14=20), size=1
                                    1-  580     	.line	131, "main.c"; 	if(uartTime < 20)
     001E 2114                      1-  581     	MOVIA	0x14
                                    1-  582     	BANKSEL	_uartTime
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1-  583     	SUBAR	_uartTime,W
     0021 0C03                      1-  584     	BTRSC	STATUS,0
     0022 3rrr                      1-  585     	LGOTO	_00119_DS_
                                    1-  586     	.line	133, "main.c"; 	if(++uartTime == 20)
     0023 05rr                      1-  587     	INCR	_uartTime,F
     0024 01rr                      1-  588     	MOVR	_uartTime,W
     0025 2414                      1-  589     	XORIA	0x14
     0026 0903                      1-  590     	BTRSS	STATUS,2
     0027 3rrr                      1-  591     	LGOTO	_00119_DS_
                                    1-  592     	.line	135, "main.c"; 	index = 0;
                                    1-  593     	BANKSEL	_index
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1-  594     	CLRR	_index
                                    1-  595     	.line	141, "main.c"; 	if(revList[1] == 3 && (revList[1] + revList[2]) == revList[3])
                                    1-  596     	BANKSEL	_revList
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  597     	MOVR	(_revList + 1),W
                                    1-  598     	BANKSEL	r0x104D
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1-  599     	MOVAR	r0x104D
     002E 2403                      1-  600     	XORIA	0x03
     002F 0903                      1-  601     	BTRSS	STATUS,2
     0030 3rrr                      1-  602     	LGOTO	_00108_DS_
     0031 01rr                      1-  603     	MOVR	r0x104D,W
                                    1-  604     	BANKSEL	r0x104E
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1-  605     	MOVAR	r0x104E
                                    1-  606     	BANKSEL	r0x104F
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 02rr                      1-  607     	CLRR	r0x104F
                                    1-  608     	BANKSEL	_revList
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1-  609     	MOVR	(_revList + 2),W
                                    1-  610     	BANKSEL	r0x104D
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 00rr                      1-  611     	MOVAR	r0x104D
                                    1-  612     	BANKSEL	r0x1050
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 00rr                      1-  613     	MOVAR	r0x1050
                                    1-  614     	BANKSEL	r0x1051
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 02rr                      1-  615     	CLRR	r0x1051
                                    1-  616     	BANKSEL	r0x1050
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1-  617     	MOVR	r0x1050,W
                                    1-  618     	BANKSEL	r0x104E
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 03rr                      1-  619     	ADDAR	r0x104E,F
     0042 2100                      1-  620     	MOVIA	0x00
     0043 0803                      1-  621     	BTRSS	STATUS,0
     0044 3rrr                      1-  622     	LGOTO	_00008_DS_
                                    1-  623     	BANKSEL	r0x1051
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 05rr                      1-  624     	INCR	r0x1051,W
     0047 0D03                      1-  625     	BTRSC	STATUS,2
     0048 3rrr                      1-  626     	LGOTO	_00009_DS_
     0049                           1-  627     _00008_DS_:
                                    1-  628     	BANKSEL	r0x104F
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 03rr                      1-  629     	ADDAR	r0x104F,F
     004B                           1-  630     _00009_DS_:
                                    1-  631     	BANKSEL	_revList
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1-  632     	MOVR	(_revList + 3),W
                                    1-  633     	BANKSEL	r0x1050
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1-  634     	MOVAR	r0x1050
                                    1-  635     	BANKSEL	r0x1051
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1-  636     	MOVAR	r0x1051
                                    1-  637     	BANKSEL	r0x1052
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 02rr                      1-  638     	CLRR	r0x1052
                                    1-  639     	BANKSEL	r0x1051
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 01rr                      1-  640     	MOVR	r0x1051,W
                                    1-  641     	BANKSEL	r0x104E
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 12rr                      1-  642     	XORAR	r0x104E,W
     0057 0903                      1-  643     	BTRSS	STATUS,2
     0058 3rrr                      1-  644     	LGOTO	_00108_DS_
                                    1-  645     	BANKSEL	r0x1052
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 01rr                      1-  646     	MOVR	r0x1052,W
                                    1-  647     	BANKSEL	r0x104F
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 12rr                      1-  648     	XORAR	r0x104F,W
     005D 0903                      1-  649     	BTRSS	STATUS,2
     005E 3rrr                      1-  650     	LGOTO	_00108_DS_
                                    1-  651     	.line	143, "main.c"; 	workStep = revList[2];
                                    1-  652     	BANKSEL	r0x104D
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 01rr                      1-  653     	MOVR	r0x104D,W
                                    1-  654     	BANKSEL	_workStep
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 00rr                      1-  655     	MOVAR	_workStep
                                    1-  656     	.line	144, "main.c"; 	colorIndex = 1;
     0063 2101                      1-  657     	MOVIA	0x01
                                    1-  658     	BANKSEL	_colorIndex
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 00rr                      1-  659     	MOVAR	_colorIndex
                                    1-  660     	.line	145, "main.c"; 	if(workStep == 9)
                                    1-  661     	BANKSEL	_workStep
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 01rr                      1-  662     	MOVR	_workStep,W
     0068 2409                      1-  663     	XORIA	0x09
     0069 0903                      1-  664     	BTRSS	STATUS,2
     006A 3rrr                      1-  665     	LGOTO	_00106_DS_
                                    1-  666     	.line	146, "main.c"; 	setColor(colorIndex);
     006B 2101                      1-  667     	MOVIA	0x01
     006C 2rrr                      1-  668     	LCALL	_setColor
     006D                           1-  669     _00106_DS_:
                                    1-  670     	.line	147, "main.c"; 	timeCount = 0;
                                    1-  671     	BANKSEL	_timeCount
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 02rr                      1-  672     	CLRR	_timeCount
     006F 02rr                      1-  673     	CLRR	(_timeCount + 1)
     0070                           1-  674     _00108_DS_:
                                    1-  675     	.line	149, "main.c"; 	if(firstFlag)
                                    1-  676     	BANKSEL	_firstFlag
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 01rr                      1-  677     	MOVR	_firstFlag,W
     0072 0D03                      1-  678     	BTRSC	STATUS,2
     0073 3rrr                      1-  679     	LGOTO	_00119_DS_
                                    1-  680     	.line	151, "main.c"; 	TM0_FLAG=1; 
     0074 2101                      1-  681     	MOVIA	0x01
                                    1-  682     	BANKSEL	_TM0_FLAG
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 00rr                      1-  683     	MOVAR	_TM0_FLAG
                                    1-  684     	.line	152, "main.c"; 	REC_FLAG = 0;
                                    1-  685     	BANKSEL	_REC_FLAG
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 02rr                      1-  686     	CLRR	_REC_FLAG
                                    1-  687     	.line	153, "main.c"; 	recData = 0;
                                    1-  688     	BANKSEL	_recData
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 02rr                      1-  689     	CLRR	_recData
                                    1-  690     	.line	154, "main.c"; 	colorIndex = 1;
     007B 2101                      1-  691     	MOVIA	0x01
                                    1-  692     	BANKSEL	_colorIndex
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 00rr                      1-  693     	MOVAR	_colorIndex
                                    1-  694     	.line	155, "main.c"; 	timeCount = 0;
                                    1-  695     	BANKSEL	_timeCount
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 02rr                      1-  696     	CLRR	_timeCount
     0080 02rr                      1-  697     	CLRR	(_timeCount + 1)
                                    1-  698     	.line	156, "main.c"; 	if(--firstFlag == 0)
                                    1-  699     	BANKSEL	_firstFlag
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 17rr                      1-  700     	DECRSZ	_firstFlag,F
     0083 3rrr                      1-  701     	LGOTO	_00111_DS_
                                    1-  702     	.line	157, "main.c"; 	workStep = revList[2];
                                    1-  703     	BANKSEL	_revList
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 01rr                      1-  704     	MOVR	(_revList + 2),W
                                    1-  705     	BANKSEL	_workStep
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 00rr                      1-  706     	MOVAR	_workStep
                                    1-  707     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     0088                           1-  708     _00111_DS_:
                                    1-  709     	.line	158, "main.c"; 	revList[0] = revList[1] = revList[2] = revList[3] = revList[4] = 0;
                                    1-  710     	BANKSEL	_revList
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 02rr                      1-  711     	CLRR	(_revList + 4)
                                    1-  712     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     008A 02rr                      1-  713     	CLRR	(_revList + 3)
                                    1-  714     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     008B 02rr                      1-  715     	CLRR	(_revList + 2)
                                    1-  716     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     008C 02rr                      1-  717     	CLRR	(_revList + 1)
                                    1-  718     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     008D 02rr                      1-  719     	CLRR	(_revList + 0)
                                    1-  720     	.line	159, "main.c"; 	if(workStep == 9)
                                    1-  721     	BANKSEL	_workStep
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 01rr                      1-  722     	MOVR	_workStep,W
     0090 2409                      1-  723     	XORIA	0x09
     0091 0903                      1-  724     	BTRSS	STATUS,2
     0092 3rrr                      1-  725     	LGOTO	_00119_DS_
                                    1-  726     	.line	160, "main.c"; 	setColor(colorIndex);
                                    1-  727     	BANKSEL	_colorIndex
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 01rr                      1-  728     	MOVR	_colorIndex,W
     0095 2rrr                      1-  729     	LCALL	_setColor
     0096                           1-  730     _00119_DS_:
                                    1-  731     	.line	165, "main.c"; 	if(++timeCount >= 1000)
                                    1-  732     	BANKSEL	_timeCount
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 05rr                      1-  733     	INCR	_timeCount,F
     0098 0D03                      1-  734     	BTRSC	STATUS,2
     0099 05rr                      1-  735     	INCR	(_timeCount + 1),F
                                    1-  736     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     009A 2103                      1-  737     	MOVIA	0x03
     009B 04rr                      1-  738     	SUBAR	(_timeCount + 1),W
     009C 0903                      1-  739     	BTRSS	STATUS,2
     009D 3rrr                      1-  740     	LGOTO	_00208_DS_
     009E 21E8                      1-  741     	MOVIA	0xe8
     009F 04rr                      1-  742     	SUBAR	_timeCount,W
     00A0                           1-  743     _00208_DS_:
     00A0 0803                      1-  744     	BTRSS	STATUS,0
     00A1 3rrr                      1-  745     	LGOTO	_00124_DS_
                                    1-  746     	.line	167, "main.c"; 	timeCount = 0;
                                    1-  747     	BANKSEL	_timeCount
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 02rr                      1-  748     	CLRR	_timeCount
     00A4 02rr                      1-  749     	CLRR	(_timeCount + 1)
                                    1-  750     	.line	168, "main.c"; 	if(workStep == 9 && ++colorIndex > 8)
                                    1-  751     	BANKSEL	_workStep
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 01rr                      1-  752     	MOVR	_workStep,W
     00A7 2409                      1-  753     	XORIA	0x09
     00A8 0903                      1-  754     	BTRSS	STATUS,2
     00A9 3rrr                      1-  755     	LGOTO	_00121_DS_
                                    1-  756     	BANKSEL	_colorIndex
     00AA rrrr                      3-   71 m1      .banksel ram_address
     00AB 05rr                      1-  757     	INCR	_colorIndex,F
                                    1-  758     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  759     ;;unsigned compare: left >= lit (0x9=9), size=1
     00AC 2109                      1-  760     	MOVIA	0x09
     00AD 04rr                      1-  761     	SUBAR	_colorIndex,W
     00AE 0803                      1-  762     	BTRSS	STATUS,0
     00AF 3rrr                      1-  763     	LGOTO	_00121_DS_
                                    1-  764     	.line	170, "main.c"; 	colorIndex = 1;
     00B0 2101                      1-  765     	MOVIA	0x01
     00B1 00rr                      1-  766     	MOVAR	_colorIndex
     00B2                           1-  767     _00121_DS_:
                                    1-  768     	.line	172, "main.c"; 	setColor(colorIndex);
                                    1-  769     	BANKSEL	_colorIndex
     00B2 rrrr                      3-   71 m1      .banksel ram_address
     00B3 01rr                      1-  770     	MOVR	_colorIndex,W
     00B4 2rrr                      1-  771     	LCALL	_setColor
     00B5                           1-  772     _00124_DS_:
                                    1-  773     	.line	175, "main.c"; 	if(workStep == 10 && (timeCount % 200 == 0))
                                    1-  774     	BANKSEL	_workStep
     00B5 rrrr                      3-   71 m1      .banksel ram_address
     00B6 01rr                      1-  775     	MOVR	_workStep,W
     00B7 240A                      1-  776     	XORIA	0x0a
     00B8 0903                      1-  777     	BTRSS	STATUS,2
     00B9 3rrr                      1-  778     	LGOTO	_00134_DS_
     00BA 21C8                      1-  779     	MOVIA	0xc8
     00BB 00rr                      1-  780     	MOVAR	STK02
     00BC 2100                      1-  781     	MOVIA	0x00
     00BD 00rr                      1-  782     	MOVAR	STK01
                                    1-  783     	BANKSEL	_timeCount
     00BE rrrr                      3-   71 m1      .banksel ram_address
     00BF 01rr                      1-  784     	MOVR	_timeCount,W
     00C0 00rr                      1-  785     	MOVAR	STK00
     00C1 01rr                      1-  786     	MOVR	(_timeCount + 1),W
     00C2 2rrr                      1-  787     	LCALL	__moduint
                                    1-  788     	BANKSEL	r0x104E
     00C3 rrrr                      3-   71 m1      .banksel ram_address
     00C4 00rr                      1-  789     	MOVAR	r0x104E
     00C5 01rr                      1-  790     	MOVR	STK00,W
                                    1-  791     	BANKSEL	r0x104D
     00C6 rrrr                      3-   71 m1      .banksel ram_address
     00C7 00rr                      1-  792     	MOVAR	r0x104D
                                    1-  793     	BANKSEL	r0x104E
     00C8 rrrr                      3-   71 m1      .banksel ram_address
     00C9 11rr                      1-  794     	IORAR	r0x104E,W
     00CA 0903                      1-  795     	BTRSS	STATUS,2
     00CB 3rrr                      1-  796     	LGOTO	_00134_DS_
                                    1-  797     	.line	177, "main.c"; 	rankNub(randNub+3);
     00CC 2103                      1-  798     	MOVIA	0x03
                                    1-  799     	BANKSEL	_randNub
     00CD rrrr                      3-   71 m1      .banksel ram_address
     00CE 03rr                      1-  800     	ADDAR	_randNub,W
                                    1-  801     	BANKSEL	r0x104D
     00CF rrrr                      3-   71 m1      .banksel ram_address
     00D0 00rr                      1-  802     	MOVAR	r0x104D
     00D1 2rrr                      1-  803     	LCALL	_rankNub
                                    1-  804     	.line	178, "main.c"; 	preColorIndex = colorIndex;
                                    1-  805     	BANKSEL	_colorIndex
     00D2 rrrr                      3-   71 m1      .banksel ram_address
     00D3 01rr                      1-  806     	MOVR	_colorIndex,W
                                    1-  807     	BANKSEL	_preColorIndex
     00D4 rrrr                      3-   71 m1      .banksel ram_address
     00D5 00rr                      1-  808     	MOVAR	_preColorIndex
     00D6                           1-  809     _00125_DS_:
                                    1-  810     	.line	181, "main.c"; 	colorIndex = (randNub%8)  + 1;
     00D6 2107                      1-  811     	MOVIA	0x07
                                    1-  812     	BANKSEL	_randNub
     00D7 rrrr                      3-   71 m1      .banksel ram_address
     00D8 10rr                      1-  813     	ANDAR	_randNub,W
                                    1-  814     	BANKSEL	r0x104D
     00D9 rrrr                      3-   71 m1      .banksel ram_address
     00DA 00rr                      1-  815     	MOVAR	r0x104D
     00DB 05rr                      1-  816     	INCR	r0x104D,W
                                    1-  817     	BANKSEL	_colorIndex
     00DC rrrr                      3-   71 m1      .banksel ram_address
     00DD 00rr                      1-  818     	MOVAR	_colorIndex
                                    1-  819     	.line	182, "main.c"; 	rankNub(randNub+3);
     00DE 2103                      1-  820     	MOVIA	0x03
                                    1-  821     	BANKSEL	_randNub
     00DF rrrr                      3-   71 m1      .banksel ram_address
     00E0 03rr                      1-  822     	ADDAR	_randNub,W
                                    1-  823     	BANKSEL	r0x104D
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 00rr                      1-  824     	MOVAR	r0x104D
     00E3 2rrr                      1-  825     	LCALL	_rankNub
                                    1-  826     	.line	183, "main.c"; 	snub+=3;
     00E4 2103                      1-  827     	MOVIA	0x03
                                    1-  828     	BANKSEL	_snub
     00E5 rrrr                      3-   71 m1      .banksel ram_address
     00E6 03rr                      1-  829     	ADDAR	_snub,F
                                    1-  830     	.line	184, "main.c"; 	CLRWDT();
     00E7 0002                      1-  831     	clrwdt
                                    1-  832     	.line	186, "main.c"; 	while(preColorIndex == colorIndex);
                                    1-  833     	BANKSEL	_colorIndex
     00E8 rrrr                      3-   71 m1      .banksel ram_address
     00E9 01rr                      1-  834     	MOVR	_colorIndex,W
                                    1-  835     	BANKSEL	_preColorIndex
     00EA rrrr                      3-   71 m1      .banksel ram_address
     00EB 12rr                      1-  836     	XORAR	_preColorIndex,W
     00EC 0D03                      1-  837     	BTRSC	STATUS,2
     00ED 3rrr                      1-  838     	LGOTO	_00125_DS_
                                    1-  839     	.line	187, "main.c"; 	randNub = randNub/3;
     00EE 2103                      1-  840     	MOVIA	0x03
     00EF 00rr                      1-  841     	MOVAR	STK00
                                    1-  842     	BANKSEL	_randNub
     00F0 rrrr                      3-   71 m1      .banksel ram_address
     00F1 01rr                      1-  843     	MOVR	_randNub,W
     00F2 2rrr                      1-  844     	LCALL	__divuchar
                                    1-  845     	BANKSEL	_randNub
     00F3 rrrr                      3-   71 m1      .banksel ram_address
     00F4 00rr                      1-  846     	MOVAR	_randNub
     00F5                           1-  847     _00134_DS_:
                                    1-  848     	.line	191, "main.c"; 	if(INTFbits.T1IF)
     00F5 09rr                      1-  849     	BTRSS	_INTFbits,3
     00F6 3rrr                      1-  850     	LGOTO	_00136_DS_
                                    1-  851     	.line	193, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR1);	// Clear PABIF(PortB input change interrupt flag bit)
     00F7 21F7                      1-  852     	MOVIA	0xf7
     00F8 00rr                      1-  853     	MOVAR	_INTF
                                    1-  854     	.line	194, "main.c"; 	TM0_FLAG=1; //���ñ�־λ��
     00F9 2101                      1-  855     	MOVIA	0x01
                                    1-  856     	BANKSEL	_TM0_FLAG
     00FA rrrr                      3-   71 m1      .banksel ram_address
     00FB 00rr                      1-  857     	MOVAR	_TM0_FLAG
     00FC                           1-  858     _00136_DS_:
                                    1-  859     	.line	196, "main.c"; 	if(INTFbits.PABIF)
     00FC 08rr                      1-  860     	BTRSS	_INTFbits,1
     00FD 3rrr                      1-  861     	LGOTO	_00141_DS_
                                    1-  862     	.line	198, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     00FE 21FD                      1-  863     	MOVIA	0xfd
     00FF 00rr                      1-  864     	MOVAR	_INTF
                                    1-  865     	.line	199, "main.c"; 	if(REC_FLAG == 0 && (PORTA & 0x04) == 0)
                                    1-  866     	BANKSEL	_REC_FLAG
     0100 rrrr                      3-   71 m1      .banksel ram_address
     0101 01rr                      1-  867     	MOVR	_REC_FLAG,W
     0102 0903                      1-  868     	BTRSS	STATUS,2
     0103 3rrr                      1-  869     	LGOTO	_00141_DS_
                                    1-  870     	BANKSEL	_PORTA
     0104 rrrr                      3-   71 m1      .banksel ram_address
     0105 0Drr                      1-  871     	BTRSC	_PORTA,2
     0106 3rrr                      1-  872     	LGOTO	_00141_DS_
                                    1-  873     	.line	201, "main.c"; 	uartFlag = 1;
     0107 2101                      1-  874     	MOVIA	0x01
                                    1-  875     	BANKSEL	_uartFlag
     0108 rrrr                      3-   71 m1      .banksel ram_address
     0109 00rr                      1-  876     	MOVAR	_uartFlag
     010A                           1-  877     _00141_DS_:
                                    1-  878     	.line	206, "main.c"; 	INTF = 0;
     010A 02rr                      1-  879     	CLRR	_INTF
                                    1-  880     	.line	208, "main.c"; 	}
                                    1-  881     	BANKSEL	___sdcc_saved_stk01
     010B rrrr                      3-   71 m1      .banksel ram_address
     010C 01rr                      1-  882     	MOVR	___sdcc_saved_stk01,W
     010D 00rr                      1-  883     	MOVAR	STK01
                                    1-  884     	BANKSEL	___sdcc_saved_stk00
     010E rrrr                      3-   71 m1      .banksel ram_address
     010F 01rr                      1-  885     	MOVR	___sdcc_saved_stk00,W
     0110 00rr                      1-  886     	MOVAR	STK00
                                    1-  887     	BANKSEL	___sdcc_saved_fsr
     0111 rrrr                      3-   71 m1      .banksel ram_address
     0112 01rr                      1-  888     	MOVR	___sdcc_saved_fsr,W
     0113 0084                      1-  889     	MOVAR	FSR
     0114 01rr                      1-  890     	MOVR	PSAVE,W
     0115 008A                      1-  891     	MOVAR	PCHBUF
     0116 0283                      1-  892     	CLRR	STATUS
     0117 15rr                      1-  893     	SWAPR	SSAVE,W
     0118 0083                      1-  894     	MOVAR	STATUS
     0119 15rr                      1-  895     	SWAPR	WSAVE,F
     011A 15rr                      1-  896     	SWAPR	WSAVE,W
     011B                           1-  897     END_OF_INTERRUPT:
     011B 0011                      1-  898     	RETIE	
                                    1-  900     ;--------------------------------------------------------
                                    1-  901     ; code
                                    1-  902     ;--------------------------------------------------------
                                    1-  903     ;***
                                    1-  904     ;  pBlock Stats: dbName = M
                                    1-  905     ;***
                                    1-  906     ;has an exit
                                    1-  907     ;functions called:
                                    1-  908     ;   _revData
                                    1-  909     ;   _workCtr
                                    1-  910     ;   _revData
                                    1-  911     ;   _workCtr
                                    1-  912     ;; Starting pCode block
                                    1-  913     .segment "code"; module=main, function=_main
     0000                           1-  915     _main:
                                    1-  916     ; 2 exit points
                                    1-  917     	.line	237, "main.c"; 	PORTA = 0x00;
                                    1-  918     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  919     	CLRR	_PORTA
                                    1-  920     	.line	238, "main.c"; 	APHCON = 0xDB;		//PA5����
     0002 21DB                      1-  921     	MOVIA	0xdb
     0003 000r                      1-  922     	IOST	_APHCON
                                    1-  923     	.line	240, "main.c"; 	IOSTA =  C_PA2_Input | C_PA5_Input;					//PA5����
     0004 2124                      1-  924     	MOVIA	0x24
     0005 000r                      1-  925     	IOST	_IOSTA
                                    1-  926     	.line	241, "main.c"; 	IOSTB =  C_PB0_Input;					//PB0����
     0006 2101                      1-  927     	MOVIA	0x01
     0007 000r                      1-  928     	IOST	_IOSTB
                                    1-  929     	.line	242, "main.c"; 	PORTA = 0x00;  
     0008 02rr                      1-  930     	CLRR	_PORTA
                                    1-  931     	.line	243, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     0009 21A8                      1-  932     	MOVIA	0xa8
     000A 00rr                      1-  933     	MOVAR	_PCON
                                    1-  934     	.line	244, "main.c"; 	ABPLCON = 0xFF;
     000B 21FF                      1-  935     	MOVIA	0xff
     000C 00rr                      1-  936     	MOVAR	_ABPLCON
                                    1-  937     	.line	245, "main.c"; 	PCON1 = C_TMR0_Dis;
     000D 0200                      1-  938     	CLRA	
     000E 000r                      1-  939     	IOST	_PCON1
                                    1-  940     	.line	247, "main.c"; 	TMR0 = 55;
     000F 2137                      1-  941     	MOVIA	0x37
     0010 00rr                      1-  942     	MOVAR	_TMR0
                                    1-  943     	.line	248, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0011 2101                      1-  944     	MOVIA	0x01
     0012 0003                      1-  945     	T0MD	
                                    1-  946     	.line	249, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0013 210B                      1-  947     	MOVIA	0x0b
     0014 00rr                      1-  948     	MOVAR	_INTE
                                    1-  949     	.line	250, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0015 2111                      1-  950     	MOVIA	0x11
     0016 000r                      1-  951     	IOST	_PCON1
                                    1-  952     	.line	253, "main.c"; 	TMRH = 0;
     0017 02rr                      1-  953     	CLRR	_TMRH
                                    1-  954     	.line	254, "main.c"; 	TMR1 = 104;
     0018 2168                      1-  955     	MOVIA	0x68
     0019 00rr                      1-  956     	SFUN	_TMR1
                                    1-  957     	.line	255, "main.c"; 	T1CR2 = C_PS1_Div8 | C_PS1_EN | C_TMR1_ClkSrc_Inst;
     001A 2102                      1-  958     	MOVIA	0x02
     001B 00rr                      1-  959     	SFUN	_T1CR2
                                    1-  960     	.line	256, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     001C 2103                      1-  961     	MOVIA	0x03
     001D 00rr                      1-  962     	SFUN	_T1CR1
                                    1-  963     	.line	260, "main.c"; 	ENI();
     001E 0004                      1-  964     	ENI
     001F                           1-  965     _00231_DS_:
                                    1-  966     	.line	264, "main.c"; 	CLRWDT();
     001F 0002                      1-  967     	clrwdt
                                    1-  968     	.line	265, "main.c"; 	revData();
     0020 2rrr                      1-  969     	LCALL	_revData
                                    1-  970     	.line	266, "main.c"; 	snub++;
                                    1-  971     	BANKSEL	_snub
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 05rr                      1-  972     	INCR	_snub,F
                                    1-  973     	.line	267, "main.c"; 	if(!IntFlag)
                                    1-  974     	BANKSEL	_IntFlag
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  975     	MOVR	_IntFlag,W
     0025 0D03                      1-  976     	BTRSC	STATUS,2
     0026 3rrr                      1-  977     	LGOTO	_00231_DS_
                                    1-  978     	.line	269, "main.c"; 	IntFlag = 0;
     0027 02rr                      1-  979     	CLRR	_IntFlag
                                    1-  980     	.line	270, "main.c"; 	if(uartFlag == 0)
                                    1-  981     	BANKSEL	_uartFlag
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1-  982     	MOVR	_uartFlag,W
     002A 0903                      1-  983     	BTRSS	STATUS,2
     002B 3rrr                      1-  984     	LGOTO	_00231_DS_
                                    1-  985     	.line	271, "main.c"; 	workCtr();
     002C 2rrr                      1-  986     	LCALL	_workCtr
     002D 3rrr                      1-  987     	LGOTO	_00231_DS_
                                    1-  988     	.line	274, "main.c"; 	}
                                    1-  989     	RETURN	
     002E 0010                      3-   26 m1      ret
                                    1-  990     ; exit point of _main
                                    1-  992     ;***
                                    1-  993     ;  pBlock Stats: dbName = C
                                    1-  994     ;***
                                    1-  995     ;has an exit
                                    1-  996     ;functions called:
                                    1-  997     ;   _sendRGB
                                    1-  998     ;   _Delay80us
                                    1-  999     ;   _sendRGB
                                    1- 1000     ;   _Delay80us
                                    1- 1001     ;7 compiler assigned registers:
                                    1- 1002     ;   r0x1022
                                    1- 1003     ;   STK00
                                    1- 1004     ;   r0x1023
                                    1- 1005     ;   STK01
                                    1- 1006     ;   r0x1024
                                    1- 1007     ;   r0x1025
                                    1- 1008     ;   r0x1026
                                    1- 1009     ;; Starting pCode block
                                    1- 1010     .segment "code"; module=main, function=_sendtoLast
                                    1- 1012     ;local variable name mapping:
     0000                           1- 1018     _sendtoLast:
                                    1- 1019     ; 2 exit points
                                    1- 1020     	BANKSEL	_Rdata1
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1021     	MOVAR	_Rdata1
                                    1- 1022     	.line	633, "main.c"; 	void sendtoLast(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 1023     	BANKSEL	r0x1022
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1- 1024     	MOVAR	r0x1022
     0004 01rr                      1- 1025     	MOVR	STK00,W
                                    1- 1026     	BANKSEL	_Gdata1
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 00rr                      1- 1027     	MOVAR	_Gdata1
                                    1- 1028     	BANKSEL	r0x1023
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 1029     	MOVAR	r0x1023
     0009 01rr                      1- 1030     	MOVR	STK01,W
                                    1- 1031     	BANKSEL	_Bdata1
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1032     	MOVAR	_Bdata1
                                    1- 1033     	BANKSEL	r0x1024
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1034     	MOVAR	r0x1024
                                    1- 1035     ;;100	MOVR	r0x1022,W
                                    1- 1036     ;;101	MOVR	r0x1023,W
                                    1- 1037     ;;102	MOVR	r0x1024,W
                                    1- 1038     	.line	641, "main.c"; 	for(int i=0;i<LED_N;i++)
                                    1- 1039     	BANKSEL	r0x1025
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 1040     	CLRR	r0x1025
                                    1- 1041     	BANKSEL	r0x1026
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1- 1042     	CLRR	r0x1026
                                    1- 1043     ;;signed compare: left < lit (0x4=4), size=2, mask=ffff
     0012                           1- 1044     _00586_DS_:
                                    1- 1045     	BANKSEL	r0x1026
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1046     	MOVR	r0x1026,W
     0014 2580                      1- 1047     	ADDIA	0x80
     0015 2580                      1- 1048     	ADDIA	0x80
     0016 0903                      1- 1049     	BTRSS	STATUS,2
     0017 3rrr                      1- 1050     	LGOTO	_00599_DS_
     0018 2104                      1- 1051     	MOVIA	0x04
                                    1- 1052     	BANKSEL	r0x1025
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 04rr                      1- 1053     	SUBAR	r0x1025,W
     001B                           1- 1054     _00599_DS_:
     001B 0C03                      1- 1055     	BTRSC	STATUS,0
     001C 3rrr                      1- 1056     	LGOTO	_00584_DS_
                                    1- 1057     	.line	643, "main.c"; 	sendRGB(colorR,colorG,colorB);
                                    1- 1058     	BANKSEL	r0x1024
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1059     	MOVR	r0x1024,W
     001F 00rr                      1- 1060     	MOVAR	STK01
                                    1- 1061     	BANKSEL	r0x1023
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1062     	MOVR	r0x1023,W
     0022 00rr                      1- 1063     	MOVAR	STK00
                                    1- 1064     	BANKSEL	r0x1022
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1- 1065     	MOVR	r0x1022,W
     0025 2rrr                      1- 1066     	LCALL	_sendRGB
                                    1- 1067     	.line	644, "main.c"; 	if(uartFlag)
                                    1- 1068     	BANKSEL	_uartFlag
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1069     	MOVR	_uartFlag,W
     0028 0903                      1- 1070     	BTRSS	STATUS,2
                                    1- 1071     	.line	645, "main.c"; 	return;
     0029 3rrr                      1- 1072     	LGOTO	_00588_DS_
                                    1- 1073     	.line	641, "main.c"; 	for(int i=0;i<LED_N;i++)
                                    1- 1074     	BANKSEL	r0x1025
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 05rr                      1- 1075     	INCR	r0x1025,F
     002C 0903                      1- 1076     	BTRSS	STATUS,2
     002D 3rrr                      1- 1077     	LGOTO	_00001_DS_
                                    1- 1078     	BANKSEL	r0x1026
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1079     	INCR	r0x1026,F
     0030                           1- 1080     _00001_DS_:
     0030 3rrr                      1- 1081     	LGOTO	_00586_DS_
     0031                           1- 1082     _00584_DS_:
                                    1- 1083     	.line	647, "main.c"; 	Delay80us();
     0031 2rrr                      1- 1084     	LCALL	_Delay80us
     0032                           1- 1085     _00588_DS_:
                                    1- 1086     	.line	648, "main.c"; 	}
                                    1- 1087     	RETURN	
     0032 0010                      3-   26 m1      ret
                                    1- 1088     ; exit point of _sendtoLast
                                    1- 1090     ;***
                                    1- 1091     ;  pBlock Stats: dbName = C
                                    1- 1092     ;***
                                    1- 1093     ;has an exit
                                    1- 1094     ;2 compiler assigned registers:
                                    1- 1095     ;   STK00
                                    1- 1096     ;   STK01
                                    1- 1097     ;; Starting pCode block
                                    1- 1098     .segment "code"; module=main, function=_sendRGB
     0000                           1- 1100     _sendRGB:
                                    1- 1101     ; 2 exit points
                                    1- 1102     	.line	521, "main.c"; 	void sendRGB(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 1103     	BANKSEL	_Rdata
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1104     	MOVAR	_Rdata
     0002 01rr                      1- 1105     	MOVR	STK00,W
                                    1- 1106     	BANKSEL	_Gdata
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1107     	MOVAR	_Gdata
     0005 01rr                      1- 1108     	MOVR	STK01,W
                                    1- 1109     	BANKSEL	_Bdata
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1110     	MOVAR	_Bdata
                                    1- 1111     	.line	529, "main.c"; 	DISI();	
     0008 0013                      1- 1112     	DISI
                                    1- 1113     	.line	530, "main.c"; 	if(R7)
                                    1- 1114     	BANKSEL	_Rdata
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 0Brr                      1- 1115     	BTRSS	_Rdata,7
     000B 3rrr                      1- 1116     	LGOTO	_00365_DS_
                                    1- 1117     	.line	531, "main.c"; 	NUB1();
     000C 1Drr                      1- 1118     	BCR	_PORTAbits,3
     000D 1Drr                      1- 1119     	BCR	_PORTAbits,3
     000E 19rr                      1- 1120     	BSR	_PORTAbits,3
     000F 3rrr                      1- 1121     	LGOTO	_00370_DS_
     0010                           1- 1122     _00365_DS_:
                                    1- 1123     	.line	533, "main.c"; 	NUB0();
     0010 1Drr                      1- 1124     	BCR	_PORTAbits,3
     0011 19rr                      1- 1125     	BSR	_PORTAbits,3
     0012 19rr                      1- 1126     	BSR	_PORTAbits,3
     0013 0000                      1- 1127     	nop
     0014 1Drr                      1- 1128     	BCR	_PORTAbits,3
     0015                           1- 1129     _00370_DS_:
                                    1- 1130     	.line	534, "main.c"; 	if(R6)
                                    1- 1131     	BANKSEL	_Rdata
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 0Brr                      1- 1132     	BTRSS	_Rdata,6
     0017 3rrr                      1- 1133     	LGOTO	_00374_DS_
                                    1- 1134     	.line	535, "main.c"; 	NUB1();
     0018 1Drr                      1- 1135     	BCR	_PORTAbits,3
     0019 1Drr                      1- 1136     	BCR	_PORTAbits,3
     001A 19rr                      1- 1137     	BSR	_PORTAbits,3
     001B 3rrr                      1- 1138     	LGOTO	_00379_DS_
     001C                           1- 1139     _00374_DS_:
                                    1- 1140     	.line	537, "main.c"; 	NUB0();
     001C 1Drr                      1- 1141     	BCR	_PORTAbits,3
     001D 19rr                      1- 1142     	BSR	_PORTAbits,3
     001E 19rr                      1- 1143     	BSR	_PORTAbits,3
     001F 0000                      1- 1144     	nop
     0020 1Drr                      1- 1145     	BCR	_PORTAbits,3
     0021                           1- 1146     _00379_DS_:
                                    1- 1147     	.line	538, "main.c"; 	if(R5)
                                    1- 1148     	BANKSEL	_Rdata
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 0Arr                      1- 1149     	BTRSS	_Rdata,5
     0023 3rrr                      1- 1150     	LGOTO	_00383_DS_
                                    1- 1151     	.line	539, "main.c"; 	NUB1();
     0024 1Drr                      1- 1152     	BCR	_PORTAbits,3
     0025 1Drr                      1- 1153     	BCR	_PORTAbits,3
     0026 19rr                      1- 1154     	BSR	_PORTAbits,3
     0027 3rrr                      1- 1155     	LGOTO	_00388_DS_
     0028                           1- 1156     _00383_DS_:
                                    1- 1157     	.line	541, "main.c"; 	NUB0();
     0028 1Drr                      1- 1158     	BCR	_PORTAbits,3
     0029 19rr                      1- 1159     	BSR	_PORTAbits,3
     002A 19rr                      1- 1160     	BSR	_PORTAbits,3
     002B 0000                      1- 1161     	nop
     002C 1Drr                      1- 1162     	BCR	_PORTAbits,3
     002D                           1- 1163     _00388_DS_:
                                    1- 1164     	.line	542, "main.c"; 	if(R4)
                                    1- 1165     	BANKSEL	_Rdata
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 0Arr                      1- 1166     	BTRSS	_Rdata,4
     002F 3rrr                      1- 1167     	LGOTO	_00392_DS_
                                    1- 1168     	.line	543, "main.c"; 	NUB1();
     0030 1Drr                      1- 1169     	BCR	_PORTAbits,3
     0031 1Drr                      1- 1170     	BCR	_PORTAbits,3
     0032 19rr                      1- 1171     	BSR	_PORTAbits,3
     0033 3rrr                      1- 1172     	LGOTO	_00397_DS_
     0034                           1- 1173     _00392_DS_:
                                    1- 1174     	.line	545, "main.c"; 	NUB0();
     0034 1Drr                      1- 1175     	BCR	_PORTAbits,3
     0035 19rr                      1- 1176     	BSR	_PORTAbits,3
     0036 19rr                      1- 1177     	BSR	_PORTAbits,3
     0037 0000                      1- 1178     	nop
     0038 1Drr                      1- 1179     	BCR	_PORTAbits,3
     0039                           1- 1180     _00397_DS_:
                                    1- 1181     	.line	546, "main.c"; 	if(R3)
                                    1- 1182     	BANKSEL	_Rdata
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 09rr                      1- 1183     	BTRSS	_Rdata,3
     003B 3rrr                      1- 1184     	LGOTO	_00401_DS_
                                    1- 1185     	.line	547, "main.c"; 	NUB1();
     003C 1Drr                      1- 1186     	BCR	_PORTAbits,3
     003D 1Drr                      1- 1187     	BCR	_PORTAbits,3
     003E 19rr                      1- 1188     	BSR	_PORTAbits,3
     003F 3rrr                      1- 1189     	LGOTO	_00406_DS_
     0040                           1- 1190     _00401_DS_:
                                    1- 1191     	.line	549, "main.c"; 	NUB0();
     0040 1Drr                      1- 1192     	BCR	_PORTAbits,3
     0041 19rr                      1- 1193     	BSR	_PORTAbits,3
     0042 19rr                      1- 1194     	BSR	_PORTAbits,3
     0043 0000                      1- 1195     	nop
     0044 1Drr                      1- 1196     	BCR	_PORTAbits,3
     0045                           1- 1197     _00406_DS_:
                                    1- 1198     	.line	550, "main.c"; 	if(R2)
                                    1- 1199     	BANKSEL	_Rdata
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 09rr                      1- 1200     	BTRSS	_Rdata,2
     0047 3rrr                      1- 1201     	LGOTO	_00410_DS_
                                    1- 1202     	.line	551, "main.c"; 	NUB1();
     0048 1Drr                      1- 1203     	BCR	_PORTAbits,3
     0049 1Drr                      1- 1204     	BCR	_PORTAbits,3
     004A 19rr                      1- 1205     	BSR	_PORTAbits,3
     004B 3rrr                      1- 1206     	LGOTO	_00415_DS_
     004C                           1- 1207     _00410_DS_:
                                    1- 1208     	.line	553, "main.c"; 	NUB0();
     004C 1Drr                      1- 1209     	BCR	_PORTAbits,3
     004D 19rr                      1- 1210     	BSR	_PORTAbits,3
     004E 19rr                      1- 1211     	BSR	_PORTAbits,3
     004F 0000                      1- 1212     	nop
     0050 1Drr                      1- 1213     	BCR	_PORTAbits,3
     0051                           1- 1214     _00415_DS_:
                                    1- 1215     	.line	554, "main.c"; 	if(R1)
                                    1- 1216     	BANKSEL	_Rdata
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 08rr                      1- 1217     	BTRSS	_Rdata,1
     0053 3rrr                      1- 1218     	LGOTO	_00419_DS_
                                    1- 1219     	.line	555, "main.c"; 	NUB1();
     0054 1Drr                      1- 1220     	BCR	_PORTAbits,3
     0055 1Drr                      1- 1221     	BCR	_PORTAbits,3
     0056 19rr                      1- 1222     	BSR	_PORTAbits,3
     0057 3rrr                      1- 1223     	LGOTO	_00424_DS_
     0058                           1- 1224     _00419_DS_:
                                    1- 1225     	.line	557, "main.c"; 	NUB0();
     0058 1Drr                      1- 1226     	BCR	_PORTAbits,3
     0059 19rr                      1- 1227     	BSR	_PORTAbits,3
     005A 19rr                      1- 1228     	BSR	_PORTAbits,3
     005B 0000                      1- 1229     	nop
     005C 1Drr                      1- 1230     	BCR	_PORTAbits,3
     005D                           1- 1231     _00424_DS_:
                                    1- 1232     	.line	558, "main.c"; 	if(R0)
                                    1- 1233     	BANKSEL	_Rdata
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 08rr                      1- 1234     	BTRSS	_Rdata,0
     005F 3rrr                      1- 1235     	LGOTO	_00428_DS_
                                    1- 1236     	.line	559, "main.c"; 	NUB1();
     0060 1Drr                      1- 1237     	BCR	_PORTAbits,3
     0061 1Drr                      1- 1238     	BCR	_PORTAbits,3
     0062 19rr                      1- 1239     	BSR	_PORTAbits,3
     0063 3rrr                      1- 1240     	LGOTO	_00433_DS_
     0064                           1- 1241     _00428_DS_:
                                    1- 1242     	.line	561, "main.c"; 	NUB0();
     0064 1Drr                      1- 1243     	BCR	_PORTAbits,3
     0065 19rr                      1- 1244     	BSR	_PORTAbits,3
     0066 19rr                      1- 1245     	BSR	_PORTAbits,3
     0067 0000                      1- 1246     	nop
     0068 1Drr                      1- 1247     	BCR	_PORTAbits,3
     0069                           1- 1248     _00433_DS_:
                                    1- 1249     	.line	563, "main.c"; 	if(G7)
                                    1- 1250     	BANKSEL	_Gdata
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 0Brr                      1- 1251     	BTRSS	_Gdata,7
     006B 3rrr                      1- 1252     	LGOTO	_00437_DS_
                                    1- 1253     	.line	564, "main.c"; 	NUB1();
     006C 1Drr                      1- 1254     	BCR	_PORTAbits,3
     006D 1Drr                      1- 1255     	BCR	_PORTAbits,3
     006E 19rr                      1- 1256     	BSR	_PORTAbits,3
     006F 3rrr                      1- 1257     	LGOTO	_00442_DS_
     0070                           1- 1258     _00437_DS_:
                                    1- 1259     	.line	566, "main.c"; 	NUB0();
     0070 1Drr                      1- 1260     	BCR	_PORTAbits,3
     0071 19rr                      1- 1261     	BSR	_PORTAbits,3
     0072 19rr                      1- 1262     	BSR	_PORTAbits,3
     0073 0000                      1- 1263     	nop
     0074 1Drr                      1- 1264     	BCR	_PORTAbits,3
     0075                           1- 1265     _00442_DS_:
                                    1- 1266     	.line	567, "main.c"; 	if(G6)
                                    1- 1267     	BANKSEL	_Gdata
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 0Brr                      1- 1268     	BTRSS	_Gdata,6
     0077 3rrr                      1- 1269     	LGOTO	_00446_DS_
                                    1- 1270     	.line	568, "main.c"; 	NUB1();
     0078 1Drr                      1- 1271     	BCR	_PORTAbits,3
     0079 1Drr                      1- 1272     	BCR	_PORTAbits,3
     007A 19rr                      1- 1273     	BSR	_PORTAbits,3
     007B 3rrr                      1- 1274     	LGOTO	_00451_DS_
     007C                           1- 1275     _00446_DS_:
                                    1- 1276     	.line	570, "main.c"; 	NUB0();
     007C 1Drr                      1- 1277     	BCR	_PORTAbits,3
     007D 19rr                      1- 1278     	BSR	_PORTAbits,3
     007E 19rr                      1- 1279     	BSR	_PORTAbits,3
     007F 0000                      1- 1280     	nop
     0080 1Drr                      1- 1281     	BCR	_PORTAbits,3
     0081                           1- 1282     _00451_DS_:
                                    1- 1283     	.line	571, "main.c"; 	if(G5)
                                    1- 1284     	BANKSEL	_Gdata
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 0Arr                      1- 1285     	BTRSS	_Gdata,5
     0083 3rrr                      1- 1286     	LGOTO	_00455_DS_
                                    1- 1287     	.line	572, "main.c"; 	NUB1();
     0084 1Drr                      1- 1288     	BCR	_PORTAbits,3
     0085 1Drr                      1- 1289     	BCR	_PORTAbits,3
     0086 19rr                      1- 1290     	BSR	_PORTAbits,3
     0087 3rrr                      1- 1291     	LGOTO	_00460_DS_
     0088                           1- 1292     _00455_DS_:
                                    1- 1293     	.line	574, "main.c"; 	NUB0();
     0088 1Drr                      1- 1294     	BCR	_PORTAbits,3
     0089 19rr                      1- 1295     	BSR	_PORTAbits,3
     008A 19rr                      1- 1296     	BSR	_PORTAbits,3
     008B 0000                      1- 1297     	nop
     008C 1Drr                      1- 1298     	BCR	_PORTAbits,3
     008D                           1- 1299     _00460_DS_:
                                    1- 1300     	.line	575, "main.c"; 	if(G4)
                                    1- 1301     	BANKSEL	_Gdata
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 0Arr                      1- 1302     	BTRSS	_Gdata,4
     008F 3rrr                      1- 1303     	LGOTO	_00464_DS_
                                    1- 1304     	.line	576, "main.c"; 	NUB1();
     0090 1Drr                      1- 1305     	BCR	_PORTAbits,3
     0091 1Drr                      1- 1306     	BCR	_PORTAbits,3
     0092 19rr                      1- 1307     	BSR	_PORTAbits,3
     0093 3rrr                      1- 1308     	LGOTO	_00469_DS_
     0094                           1- 1309     _00464_DS_:
                                    1- 1310     	.line	578, "main.c"; 	NUB0();
     0094 1Drr                      1- 1311     	BCR	_PORTAbits,3
     0095 19rr                      1- 1312     	BSR	_PORTAbits,3
     0096 19rr                      1- 1313     	BSR	_PORTAbits,3
     0097 0000                      1- 1314     	nop
     0098 1Drr                      1- 1315     	BCR	_PORTAbits,3
     0099                           1- 1316     _00469_DS_:
                                    1- 1317     	.line	579, "main.c"; 	if(G3)
                                    1- 1318     	BANKSEL	_Gdata
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 09rr                      1- 1319     	BTRSS	_Gdata,3
     009B 3rrr                      1- 1320     	LGOTO	_00473_DS_
                                    1- 1321     	.line	580, "main.c"; 	NUB1();
     009C 1Drr                      1- 1322     	BCR	_PORTAbits,3
     009D 1Drr                      1- 1323     	BCR	_PORTAbits,3
     009E 19rr                      1- 1324     	BSR	_PORTAbits,3
     009F 3rrr                      1- 1325     	LGOTO	_00478_DS_
     00A0                           1- 1326     _00473_DS_:
                                    1- 1327     	.line	582, "main.c"; 	NUB0();
     00A0 1Drr                      1- 1328     	BCR	_PORTAbits,3
     00A1 19rr                      1- 1329     	BSR	_PORTAbits,3
     00A2 19rr                      1- 1330     	BSR	_PORTAbits,3
     00A3 0000                      1- 1331     	nop
     00A4 1Drr                      1- 1332     	BCR	_PORTAbits,3
     00A5                           1- 1333     _00478_DS_:
                                    1- 1334     	.line	583, "main.c"; 	if(G2)
                                    1- 1335     	BANKSEL	_Gdata
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 09rr                      1- 1336     	BTRSS	_Gdata,2
     00A7 3rrr                      1- 1337     	LGOTO	_00482_DS_
                                    1- 1338     	.line	584, "main.c"; 	NUB1();
     00A8 1Drr                      1- 1339     	BCR	_PORTAbits,3
     00A9 1Drr                      1- 1340     	BCR	_PORTAbits,3
     00AA 19rr                      1- 1341     	BSR	_PORTAbits,3
     00AB 3rrr                      1- 1342     	LGOTO	_00487_DS_
     00AC                           1- 1343     _00482_DS_:
                                    1- 1344     	.line	586, "main.c"; 	NUB0();
     00AC 1Drr                      1- 1345     	BCR	_PORTAbits,3
     00AD 19rr                      1- 1346     	BSR	_PORTAbits,3
     00AE 19rr                      1- 1347     	BSR	_PORTAbits,3
     00AF 0000                      1- 1348     	nop
     00B0 1Drr                      1- 1349     	BCR	_PORTAbits,3
     00B1                           1- 1350     _00487_DS_:
                                    1- 1351     	.line	587, "main.c"; 	if(G1)
                                    1- 1352     	BANKSEL	_Gdata
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 08rr                      1- 1353     	BTRSS	_Gdata,1
     00B3 3rrr                      1- 1354     	LGOTO	_00491_DS_
                                    1- 1355     	.line	588, "main.c"; 	NUB1();
     00B4 1Drr                      1- 1356     	BCR	_PORTAbits,3
     00B5 1Drr                      1- 1357     	BCR	_PORTAbits,3
     00B6 19rr                      1- 1358     	BSR	_PORTAbits,3
     00B7 3rrr                      1- 1359     	LGOTO	_00496_DS_
     00B8                           1- 1360     _00491_DS_:
                                    1- 1361     	.line	590, "main.c"; 	NUB0();
     00B8 1Drr                      1- 1362     	BCR	_PORTAbits,3
     00B9 19rr                      1- 1363     	BSR	_PORTAbits,3
     00BA 19rr                      1- 1364     	BSR	_PORTAbits,3
     00BB 0000                      1- 1365     	nop
     00BC 1Drr                      1- 1366     	BCR	_PORTAbits,3
     00BD                           1- 1367     _00496_DS_:
                                    1- 1368     	.line	591, "main.c"; 	if(G0)
                                    1- 1369     	BANKSEL	_Gdata
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 08rr                      1- 1370     	BTRSS	_Gdata,0
     00BF 3rrr                      1- 1371     	LGOTO	_00500_DS_
                                    1- 1372     	.line	592, "main.c"; 	NUB1();
     00C0 1Drr                      1- 1373     	BCR	_PORTAbits,3
     00C1 1Drr                      1- 1374     	BCR	_PORTAbits,3
     00C2 19rr                      1- 1375     	BSR	_PORTAbits,3
     00C3 3rrr                      1- 1376     	LGOTO	_00505_DS_
     00C4                           1- 1377     _00500_DS_:
                                    1- 1378     	.line	594, "main.c"; 	NUB0();
     00C4 1Drr                      1- 1379     	BCR	_PORTAbits,3
     00C5 19rr                      1- 1380     	BSR	_PORTAbits,3
     00C6 19rr                      1- 1381     	BSR	_PORTAbits,3
     00C7 0000                      1- 1382     	nop
     00C8 1Drr                      1- 1383     	BCR	_PORTAbits,3
     00C9                           1- 1384     _00505_DS_:
                                    1- 1385     	.line	596, "main.c"; 	if(B7)
                                    1- 1386     	BANKSEL	_Bdata
     00C9 rrrr                      3-   71 m1      .banksel ram_address
     00CA 0Brr                      1- 1387     	BTRSS	_Bdata,7
     00CB 3rrr                      1- 1388     	LGOTO	_00509_DS_
                                    1- 1389     	.line	597, "main.c"; 	NUB1();
     00CC 1Drr                      1- 1390     	BCR	_PORTAbits,3
     00CD 1Drr                      1- 1391     	BCR	_PORTAbits,3
     00CE 19rr                      1- 1392     	BSR	_PORTAbits,3
     00CF 3rrr                      1- 1393     	LGOTO	_00514_DS_
     00D0                           1- 1394     _00509_DS_:
                                    1- 1395     	.line	599, "main.c"; 	NUB0();
     00D0 1Drr                      1- 1396     	BCR	_PORTAbits,3
     00D1 19rr                      1- 1397     	BSR	_PORTAbits,3
     00D2 19rr                      1- 1398     	BSR	_PORTAbits,3
     00D3 0000                      1- 1399     	nop
     00D4 1Drr                      1- 1400     	BCR	_PORTAbits,3
     00D5                           1- 1401     _00514_DS_:
                                    1- 1402     	.line	600, "main.c"; 	if(B6)
                                    1- 1403     	BANKSEL	_Bdata
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 0Brr                      1- 1404     	BTRSS	_Bdata,6
     00D7 3rrr                      1- 1405     	LGOTO	_00518_DS_
                                    1- 1406     	.line	601, "main.c"; 	NUB1();
     00D8 1Drr                      1- 1407     	BCR	_PORTAbits,3
     00D9 1Drr                      1- 1408     	BCR	_PORTAbits,3
     00DA 19rr                      1- 1409     	BSR	_PORTAbits,3
     00DB 3rrr                      1- 1410     	LGOTO	_00523_DS_
     00DC                           1- 1411     _00518_DS_:
                                    1- 1412     	.line	603, "main.c"; 	NUB0();
     00DC 1Drr                      1- 1413     	BCR	_PORTAbits,3
     00DD 19rr                      1- 1414     	BSR	_PORTAbits,3
     00DE 19rr                      1- 1415     	BSR	_PORTAbits,3
     00DF 0000                      1- 1416     	nop
     00E0 1Drr                      1- 1417     	BCR	_PORTAbits,3
     00E1                           1- 1418     _00523_DS_:
                                    1- 1419     	.line	604, "main.c"; 	if(B5)
                                    1- 1420     	BANKSEL	_Bdata
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 0Arr                      1- 1421     	BTRSS	_Bdata,5
     00E3 3rrr                      1- 1422     	LGOTO	_00527_DS_
                                    1- 1423     	.line	605, "main.c"; 	NUB1();
     00E4 1Drr                      1- 1424     	BCR	_PORTAbits,3
     00E5 1Drr                      1- 1425     	BCR	_PORTAbits,3
     00E6 19rr                      1- 1426     	BSR	_PORTAbits,3
     00E7 3rrr                      1- 1427     	LGOTO	_00532_DS_
     00E8                           1- 1428     _00527_DS_:
                                    1- 1429     	.line	607, "main.c"; 	NUB0();
     00E8 1Drr                      1- 1430     	BCR	_PORTAbits,3
     00E9 19rr                      1- 1431     	BSR	_PORTAbits,3
     00EA 19rr                      1- 1432     	BSR	_PORTAbits,3
     00EB 0000                      1- 1433     	nop
     00EC 1Drr                      1- 1434     	BCR	_PORTAbits,3
     00ED                           1- 1435     _00532_DS_:
                                    1- 1436     	.line	608, "main.c"; 	if(B4)
                                    1- 1437     	BANKSEL	_Bdata
     00ED rrrr                      3-   71 m1      .banksel ram_address
     00EE 0Arr                      1- 1438     	BTRSS	_Bdata,4
     00EF 3rrr                      1- 1439     	LGOTO	_00536_DS_
                                    1- 1440     	.line	609, "main.c"; 	NUB1();
     00F0 1Drr                      1- 1441     	BCR	_PORTAbits,3
     00F1 1Drr                      1- 1442     	BCR	_PORTAbits,3
     00F2 19rr                      1- 1443     	BSR	_PORTAbits,3
     00F3 3rrr                      1- 1444     	LGOTO	_00541_DS_
     00F4                           1- 1445     _00536_DS_:
                                    1- 1446     	.line	611, "main.c"; 	NUB0();
     00F4 1Drr                      1- 1447     	BCR	_PORTAbits,3
     00F5 19rr                      1- 1448     	BSR	_PORTAbits,3
     00F6 19rr                      1- 1449     	BSR	_PORTAbits,3
     00F7 0000                      1- 1450     	nop
     00F8 1Drr                      1- 1451     	BCR	_PORTAbits,3
     00F9                           1- 1452     _00541_DS_:
                                    1- 1453     	.line	612, "main.c"; 	if(B3)
                                    1- 1454     	BANKSEL	_Bdata
     00F9 rrrr                      3-   71 m1      .banksel ram_address
     00FA 09rr                      1- 1455     	BTRSS	_Bdata,3
     00FB 3rrr                      1- 1456     	LGOTO	_00545_DS_
                                    1- 1457     	.line	613, "main.c"; 	NUB1();
     00FC 1Drr                      1- 1458     	BCR	_PORTAbits,3
     00FD 1Drr                      1- 1459     	BCR	_PORTAbits,3
     00FE 19rr                      1- 1460     	BSR	_PORTAbits,3
     00FF 3rrr                      1- 1461     	LGOTO	_00550_DS_
     0100                           1- 1462     _00545_DS_:
                                    1- 1463     	.line	615, "main.c"; 	NUB0();
     0100 1Drr                      1- 1464     	BCR	_PORTAbits,3
     0101 19rr                      1- 1465     	BSR	_PORTAbits,3
     0102 19rr                      1- 1466     	BSR	_PORTAbits,3
     0103 0000                      1- 1467     	nop
     0104 1Drr                      1- 1468     	BCR	_PORTAbits,3
     0105                           1- 1469     _00550_DS_:
                                    1- 1470     	.line	616, "main.c"; 	if(B2)
                                    1- 1471     	BANKSEL	_Bdata
     0105 rrrr                      3-   71 m1      .banksel ram_address
     0106 09rr                      1- 1472     	BTRSS	_Bdata,2
     0107 3rrr                      1- 1473     	LGOTO	_00554_DS_
                                    1- 1474     	.line	617, "main.c"; 	NUB1();
     0108 1Drr                      1- 1475     	BCR	_PORTAbits,3
     0109 1Drr                      1- 1476     	BCR	_PORTAbits,3
     010A 19rr                      1- 1477     	BSR	_PORTAbits,3
     010B 3rrr                      1- 1478     	LGOTO	_00559_DS_
     010C                           1- 1479     _00554_DS_:
                                    1- 1480     	.line	619, "main.c"; 	NUB0();
     010C 1Drr                      1- 1481     	BCR	_PORTAbits,3
     010D 19rr                      1- 1482     	BSR	_PORTAbits,3
     010E 19rr                      1- 1483     	BSR	_PORTAbits,3
     010F 0000                      1- 1484     	nop
     0110 1Drr                      1- 1485     	BCR	_PORTAbits,3
     0111                           1- 1486     _00559_DS_:
                                    1- 1487     	.line	620, "main.c"; 	if(B1)
                                    1- 1488     	BANKSEL	_Bdata
     0111 rrrr                      3-   71 m1      .banksel ram_address
     0112 08rr                      1- 1489     	BTRSS	_Bdata,1
     0113 3rrr                      1- 1490     	LGOTO	_00563_DS_
                                    1- 1491     	.line	621, "main.c"; 	NUB1();
     0114 1Drr                      1- 1492     	BCR	_PORTAbits,3
     0115 1Drr                      1- 1493     	BCR	_PORTAbits,3
     0116 19rr                      1- 1494     	BSR	_PORTAbits,3
     0117 3rrr                      1- 1495     	LGOTO	_00568_DS_
     0118                           1- 1496     _00563_DS_:
                                    1- 1497     	.line	623, "main.c"; 	NUB0();
     0118 1Drr                      1- 1498     	BCR	_PORTAbits,3
     0119 19rr                      1- 1499     	BSR	_PORTAbits,3
     011A 19rr                      1- 1500     	BSR	_PORTAbits,3
     011B 0000                      1- 1501     	nop
     011C 1Drr                      1- 1502     	BCR	_PORTAbits,3
     011D                           1- 1503     _00568_DS_:
                                    1- 1504     	.line	624, "main.c"; 	if(B0)
                                    1- 1505     	BANKSEL	_Bdata
     011D rrrr                      3-   71 m1      .banksel ram_address
     011E 08rr                      1- 1506     	BTRSS	_Bdata,0
     011F 3rrr                      1- 1507     	LGOTO	_00572_DS_
                                    1- 1508     	.line	625, "main.c"; 	NUB1();
     0120 1Drr                      1- 1509     	BCR	_PORTAbits,3
     0121 1Drr                      1- 1510     	BCR	_PORTAbits,3
     0122 19rr                      1- 1511     	BSR	_PORTAbits,3
     0123 3rrr                      1- 1512     	LGOTO	_00577_DS_
     0124                           1- 1513     _00572_DS_:
                                    1- 1514     	.line	627, "main.c"; 	NUB0();
     0124 1Drr                      1- 1515     	BCR	_PORTAbits,3
     0125 19rr                      1- 1516     	BSR	_PORTAbits,3
     0126 19rr                      1- 1517     	BSR	_PORTAbits,3
     0127 0000                      1- 1518     	nop
     0128 1Drr                      1- 1519     	BCR	_PORTAbits,3
     0129                           1- 1520     _00577_DS_:
                                    1- 1521     	.line	629, "main.c"; 	PORTAbits.PA3 = 0;
     0129 1Drr                      1- 1522     	BCR	_PORTAbits,3
                                    1- 1523     	.line	630, "main.c"; 	ENI();	
     012A 0004                      1- 1524     	ENI
                                    1- 1525     	.line	631, "main.c"; 	}
                                    1- 1526     	RETURN	
     012B 0010                      3-   26 m1      ret
                                    1- 1527     ; exit point of _sendRGB
                                    1- 1529     ;***
                                    1- 1530     ;  pBlock Stats: dbName = C
                                    1- 1531     ;***
                                    1- 1532     ;has an exit
                                    1- 1533     ;; Starting pCode block
                                    1- 1534     .segment "code"; module=main, function=_Delay10Us
     0000                           1- 1536     _Delay10Us:
                                    1- 1537     ; 2 exit points
                                    1- 1538     	.line	512, "main.c"; 	NOP();
     0000 0000                      1- 1539     	nop
                                    1- 1540     	.line	513, "main.c"; 	NOP();
     0001 0000                      1- 1541     	nop
                                    1- 1542     	.line	514, "main.c"; 	NOP();
     0002 0000                      1- 1543     	nop
                                    1- 1544     	.line	515, "main.c"; 	NOP();
     0003 0000                      1- 1545     	nop
                                    1- 1546     	.line	516, "main.c"; 	NOP();
     0004 0000                      1- 1547     	nop
                                    1- 1548     	.line	517, "main.c"; 	NOP();
     0005 0000                      1- 1549     	nop
                                    1- 1550     	.line	518, "main.c"; 	}
                                    1- 1551     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1- 1552     ; exit point of _Delay10Us
                                    1- 1554     ;***
                                    1- 1555     ;  pBlock Stats: dbName = C
                                    1- 1556     ;***
                                    1- 1557     ;has an exit
                                    1- 1558     ;1 compiler assigned register :
                                    1- 1559     ;   r0x1021
                                    1- 1560     ;; Starting pCode block
                                    1- 1561     .segment "code"; module=main, function=_Delay80us
                                    1- 1563     ;local variable name mapping:
     0000                           1- 1565     _Delay80us:
                                    1- 1566     ; 2 exit points
                                    1- 1567     	.line	503, "main.c"; 	for(unsigned char i=0;i<50;i++)
                                    1- 1568     	BANKSEL	r0x1021
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1569     	CLRR	r0x1021
                                    1- 1570     ;;unsigned compare: left < lit (0x32=50), size=1
     0002                           1- 1571     _00351_DS_:
     0002 2132                      1- 1572     	MOVIA	0x32
                                    1- 1573     	BANKSEL	r0x1021
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 04rr                      1- 1574     	SUBAR	r0x1021,W
     0005 0C03                      1- 1575     	BTRSC	STATUS,0
     0006 3rrr                      1- 1576     	LGOTO	_00353_DS_
                                    1- 1577     	.line	505, "main.c"; 	if(uartFlag)
                                    1- 1578     	BANKSEL	_uartFlag
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1- 1579     	MOVR	_uartFlag,W
     0009 0903                      1- 1580     	BTRSS	STATUS,2
                                    1- 1581     	.line	506, "main.c"; 	return;
     000A 3rrr                      1- 1582     	LGOTO	_00353_DS_
                                    1- 1583     	.line	503, "main.c"; 	for(unsigned char i=0;i<50;i++)
                                    1- 1584     	BANKSEL	r0x1021
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 1585     	INCR	r0x1021,F
     000D 3rrr                      1- 1586     	LGOTO	_00351_DS_
     000E                           1- 1587     _00353_DS_:
                                    1- 1588     	.line	508, "main.c"; 	}
                                    1- 1589     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1590     ; exit point of _Delay80us
                                    1- 1592     ;***
                                    1- 1593     ;  pBlock Stats: dbName = C
                                    1- 1594     ;***
                                    1- 1595     ;has an exit
                                    1- 1596     ;functions called:
                                    1- 1597     ;   _setColor
                                    1- 1598     ;   _setColor
                                    1- 1599     ;; Starting pCode block
                                    1- 1600     .segment "code"; module=main, function=_work10
     0000                           1- 1602     _work10:
                                    1- 1603     ; 2 exit points
                                    1- 1604     	.line	496, "main.c"; 	setColor(colorIndex);
                                    1- 1605     	BANKSEL	_colorIndex
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1606     	MOVR	_colorIndex,W
     0002 2rrr                      1- 1607     	LCALL	_setColor
                                    1- 1608     	.line	498, "main.c"; 	}
                                    1- 1609     	RETURN	
     0003 0010                      3-   26 m1      ret
                                    1- 1610     ; exit point of _work10
                                    1- 1612     ;***
                                    1- 1613     ;  pBlock Stats: dbName = C
                                    1- 1614     ;***
                                    1- 1615     ;has an exit
                                    1- 1616     ;functions called:
                                    1- 1617     ;   __gptrget1
                                    1- 1618     ;   __gptrput1
                                    1- 1619     ;   __gptrget1
                                    1- 1620     ;   __gptrput1
                                    1- 1621     ;   __gptrget1
                                    1- 1622     ;   __gptrput1
                                    1- 1623     ;   __gptrget1
                                    1- 1624     ;   __gptrget1
                                    1- 1625     ;   __gptrget1
                                    1- 1626     ;   _sendtoLast
                                    1- 1627     ;   __gptrget1
                                    1- 1628     ;   __gptrput1
                                    1- 1629     ;   __gptrget1
                                    1- 1630     ;   __gptrput1
                                    1- 1631     ;   __gptrget1
                                    1- 1632     ;   __gptrput1
                                    1- 1633     ;   __gptrget1
                                    1- 1634     ;   __gptrget1
                                    1- 1635     ;   __gptrget1
                                    1- 1636     ;   _sendtoLast
                                    1- 1637     ;18 compiler assigned registers:
                                    1- 1638     ;   r0x1028
                                    1- 1639     ;   STK00
                                    1- 1640     ;   r0x1029
                                    1- 1641     ;   STK01
                                    1- 1642     ;   r0x102A
                                    1- 1643     ;   STK02
                                    1- 1644     ;   r0x102B
                                    1- 1645     ;   STK03
                                    1- 1646     ;   r0x102C
                                    1- 1647     ;   STK04
                                    1- 1648     ;   r0x102D
                                    1- 1649     ;   STK05
                                    1- 1650     ;   r0x102E
                                    1- 1651     ;   STK06
                                    1- 1652     ;   r0x102F
                                    1- 1653     ;   STK07
                                    1- 1654     ;   r0x1030
                                    1- 1655     ;   r0x1031
                                    1- 1656     ;; Starting pCode block
                                    1- 1657     .segment "code"; module=main, function=_breath3
                                    1- 1659     ;local variable name mapping:
     0000                           1- 1669     _breath3:
                                    1- 1670     ; 2 exit points
                                    1- 1671     	.line	473, "main.c"; 	void breath3(unsigned char *data,unsigned char *data2,unsigned char *data3)
                                    1- 1672     	BANKSEL	r0x1028
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1673     	MOVAR	r0x1028
     0002 01rr                      1- 1674     	MOVR	STK00,W
                                    1- 1675     	BANKSEL	r0x1029
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1676     	MOVAR	r0x1029
     0005 01rr                      1- 1677     	MOVR	STK01,W
                                    1- 1678     	BANKSEL	r0x102A
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1679     	MOVAR	r0x102A
     0008 01rr                      1- 1680     	MOVR	STK02,W
                                    1- 1681     	BANKSEL	r0x102B
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1682     	MOVAR	r0x102B
     000B 01rr                      1- 1683     	MOVR	STK03,W
                                    1- 1684     	BANKSEL	r0x102C
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1685     	MOVAR	r0x102C
     000E 01rr                      1- 1686     	MOVR	STK04,W
                                    1- 1687     	BANKSEL	r0x102D
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 1688     	MOVAR	r0x102D
     0011 01rr                      1- 1689     	MOVR	STK05,W
                                    1- 1690     	BANKSEL	r0x102E
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 1691     	MOVAR	r0x102E
     0014 01rr                      1- 1692     	MOVR	STK06,W
                                    1- 1693     	BANKSEL	r0x102F
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 00rr                      1- 1694     	MOVAR	r0x102F
     0017 01rr                      1- 1695     	MOVR	STK07,W
                                    1- 1696     	BANKSEL	r0x1030
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 1697     	MOVAR	r0x1030
                                    1- 1698     	.line	475, "main.c"; 	if((*data3) > 10)
     001A 00rr                      1- 1699     	MOVAR	STK01
                                    1- 1700     	BANKSEL	r0x102F
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 1701     	MOVR	r0x102F,W
     001D 00rr                      1- 1702     	MOVAR	STK00
                                    1- 1703     	BANKSEL	r0x102E
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1704     	MOVR	r0x102E,W
     0020 2rrr                      1- 1705     	LCALL	__gptrget1
                                    1- 1706     	BANKSEL	r0x1031
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 00rr                      1- 1707     	MOVAR	r0x1031
                                    1- 1708     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1709     ;;unsigned compare: left >= lit (0xB=11), size=1
     0023 210B                      1- 1710     	MOVIA	0x0b
     0024 04rr                      1- 1711     	SUBAR	r0x1031,W
     0025 0803                      1- 1712     	BTRSS	STATUS,0
     0026 3rrr                      1- 1713     	LGOTO	_00334_DS_
                                    1- 1714     	.line	477, "main.c"; 	--(*data3);
     0027 06rr                      1- 1715     	DECR	r0x1031,F
     0028 01rr                      1- 1716     	MOVR	r0x1031,W
     0029 00rr                      1- 1717     	MOVAR	STK02
                                    1- 1718     	BANKSEL	r0x1030
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1- 1719     	MOVR	r0x1030,W
     002C 00rr                      1- 1720     	MOVAR	STK01
                                    1- 1721     	BANKSEL	r0x102F
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1- 1722     	MOVR	r0x102F,W
     002F 00rr                      1- 1723     	MOVAR	STK00
                                    1- 1724     	BANKSEL	r0x102E
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1- 1725     	MOVR	r0x102E,W
     0032 2rrr                      1- 1726     	LCALL	__gptrput1
     0033                           1- 1727     _00334_DS_:
                                    1- 1728     	.line	480, "main.c"; 	if((*data2) > 10)
                                    1- 1729     	BANKSEL	r0x102D
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 1730     	MOVR	r0x102D,W
     0035 00rr                      1- 1731     	MOVAR	STK01
                                    1- 1732     	BANKSEL	r0x102C
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1- 1733     	MOVR	r0x102C,W
     0038 00rr                      1- 1734     	MOVAR	STK00
                                    1- 1735     	BANKSEL	r0x102B
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 1736     	MOVR	r0x102B,W
     003B 2rrr                      1- 1737     	LCALL	__gptrget1
                                    1- 1738     	BANKSEL	r0x1031
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 00rr                      1- 1739     	MOVAR	r0x1031
                                    1- 1740     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1741     ;;unsigned compare: left >= lit (0xB=11), size=1
     003E 210B                      1- 1742     	MOVIA	0x0b
     003F 04rr                      1- 1743     	SUBAR	r0x1031,W
     0040 0803                      1- 1744     	BTRSS	STATUS,0
     0041 3rrr                      1- 1745     	LGOTO	_00336_DS_
                                    1- 1746     	.line	482, "main.c"; 	--(*data2);
     0042 06rr                      1- 1747     	DECR	r0x1031,F
     0043 01rr                      1- 1748     	MOVR	r0x1031,W
     0044 00rr                      1- 1749     	MOVAR	STK02
                                    1- 1750     	BANKSEL	r0x102D
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1- 1751     	MOVR	r0x102D,W
     0047 00rr                      1- 1752     	MOVAR	STK01
                                    1- 1753     	BANKSEL	r0x102C
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 01rr                      1- 1754     	MOVR	r0x102C,W
     004A 00rr                      1- 1755     	MOVAR	STK00
                                    1- 1756     	BANKSEL	r0x102B
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1- 1757     	MOVR	r0x102B,W
     004D 2rrr                      1- 1758     	LCALL	__gptrput1
     004E                           1- 1759     _00336_DS_:
                                    1- 1760     	.line	485, "main.c"; 	if((*data) > 10)
                                    1- 1761     	BANKSEL	r0x102A
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1- 1762     	MOVR	r0x102A,W
     0050 00rr                      1- 1763     	MOVAR	STK01
                                    1- 1764     	BANKSEL	r0x1029
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 01rr                      1- 1765     	MOVR	r0x1029,W
     0053 00rr                      1- 1766     	MOVAR	STK00
                                    1- 1767     	BANKSEL	r0x1028
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 01rr                      1- 1768     	MOVR	r0x1028,W
     0056 2rrr                      1- 1769     	LCALL	__gptrget1
                                    1- 1770     	BANKSEL	r0x1031
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1- 1771     	MOVAR	r0x1031
                                    1- 1772     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1773     ;;unsigned compare: left >= lit (0xB=11), size=1
     0059 210B                      1- 1774     	MOVIA	0x0b
     005A 04rr                      1- 1775     	SUBAR	r0x1031,W
     005B 0803                      1- 1776     	BTRSS	STATUS,0
     005C 3rrr                      1- 1777     	LGOTO	_00338_DS_
                                    1- 1778     	.line	487, "main.c"; 	--(*data);
     005D 06rr                      1- 1779     	DECR	r0x1031,F
     005E 01rr                      1- 1780     	MOVR	r0x1031,W
     005F 00rr                      1- 1781     	MOVAR	STK02
                                    1- 1782     	BANKSEL	r0x102A
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1- 1783     	MOVR	r0x102A,W
     0062 00rr                      1- 1784     	MOVAR	STK01
                                    1- 1785     	BANKSEL	r0x1029
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 01rr                      1- 1786     	MOVR	r0x1029,W
     0065 00rr                      1- 1787     	MOVAR	STK00
                                    1- 1788     	BANKSEL	r0x1028
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 01rr                      1- 1789     	MOVR	r0x1028,W
     0068 2rrr                      1- 1790     	LCALL	__gptrput1
     0069                           1- 1791     _00338_DS_:
                                    1- 1792     	.line	489, "main.c"; 	sendtoLast(*data,*data2,*data3);
                                    1- 1793     	BANKSEL	r0x102A
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 01rr                      1- 1794     	MOVR	r0x102A,W
     006B 00rr                      1- 1795     	MOVAR	STK01
                                    1- 1796     	BANKSEL	r0x1029
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 01rr                      1- 1797     	MOVR	r0x1029,W
     006E 00rr                      1- 1798     	MOVAR	STK00
                                    1- 1799     	BANKSEL	r0x1028
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 01rr                      1- 1800     	MOVR	r0x1028,W
     0071 2rrr                      1- 1801     	LCALL	__gptrget1
                                    1- 1802     	BANKSEL	r0x1031
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 00rr                      1- 1803     	MOVAR	r0x1031
                                    1- 1804     	BANKSEL	r0x102D
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 01rr                      1- 1805     	MOVR	r0x102D,W
     0076 00rr                      1- 1806     	MOVAR	STK01
                                    1- 1807     	BANKSEL	r0x102C
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 01rr                      1- 1808     	MOVR	r0x102C,W
     0079 00rr                      1- 1809     	MOVAR	STK00
                                    1- 1810     	BANKSEL	r0x102B
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 01rr                      1- 1811     	MOVR	r0x102B,W
     007C 2rrr                      1- 1812     	LCALL	__gptrget1
                                    1- 1813     	BANKSEL	r0x102A
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 00rr                      1- 1814     	MOVAR	r0x102A
                                    1- 1815     	BANKSEL	r0x1030
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 01rr                      1- 1816     	MOVR	r0x1030,W
     0081 00rr                      1- 1817     	MOVAR	STK01
                                    1- 1818     	BANKSEL	r0x102F
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 01rr                      1- 1819     	MOVR	r0x102F,W
     0084 00rr                      1- 1820     	MOVAR	STK00
                                    1- 1821     	BANKSEL	r0x102E
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 01rr                      1- 1822     	MOVR	r0x102E,W
     0087 2rrr                      1- 1823     	LCALL	__gptrget1
                                    1- 1824     	BANKSEL	r0x102D
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 00rr                      1- 1825     	MOVAR	r0x102D
     008A 00rr                      1- 1826     	MOVAR	STK01
                                    1- 1827     	BANKSEL	r0x102A
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 01rr                      1- 1828     	MOVR	r0x102A,W
     008D 00rr                      1- 1829     	MOVAR	STK00
                                    1- 1830     	BANKSEL	r0x1031
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 01rr                      1- 1831     	MOVR	r0x1031,W
     0090 2rrr                      1- 1832     	LCALL	_sendtoLast
                                    1- 1833     	.line	490, "main.c"; 	}
                                    1- 1834     	RETURN	
     0091 0010                      3-   26 m1      ret
                                    1- 1835     ; exit point of _breath3
                                    1- 1837     ;***
                                    1- 1838     ;  pBlock Stats: dbName = C
                                    1- 1839     ;***
                                    1- 1840     ;has an exit
                                    1- 1841     ;functions called:
                                    1- 1842     ;   _breath3
                                    1- 1843     ;   _sendtoLast
                                    1- 1844     ;   _breath3
                                    1- 1845     ;   _sendtoLast
                                    1- 1846     ;17 compiler assigned registers:
                                    1- 1847     ;   r0x1032
                                    1- 1848     ;   r0x1033
                                    1- 1849     ;   r0x1034
                                    1- 1850     ;   r0x1035
                                    1- 1851     ;   r0x1036
                                    1- 1852     ;   r0x1037
                                    1- 1853     ;   r0x1038
                                    1- 1854     ;   r0x1039
                                    1- 1855     ;   r0x103A
                                    1- 1856     ;   STK07
                                    1- 1857     ;   STK06
                                    1- 1858     ;   STK05
                                    1- 1859     ;   STK04
                                    1- 1860     ;   STK03
                                    1- 1861     ;   STK02
                                    1- 1862     ;   STK01
                                    1- 1863     ;   STK00
                                    1- 1864     ;; Starting pCode block
                                    1- 1865     .segment "code"; module=main, function=_work9
     0000                           1- 1867     _work9:
                                    1- 1868     ; 2 exit points
                                    1- 1869     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=0, offr=0
                                    1- 1870     	.line	449, "main.c"; 	duty = timeCount / 4;
     0000 1C03                      1- 1871     	BCR	STATUS,0
                                    1- 1872     	BANKSEL	_timeCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 13rr                      1- 1873     	RRR	(_timeCount + 1),W
                                    1- 1874     	BANKSEL	r0x1032
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1875     	MOVAR	r0x1032
                                    1- 1876     	BANKSEL	_timeCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 13rr                      1- 1877     	RRR	_timeCount,W
                                    1- 1878     	BANKSEL	r0x1033
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 1879     	MOVAR	r0x1033
                                    1- 1880     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0009 1C03                      1- 1881     	BCR	STATUS,0
                                    1- 1882     	BANKSEL	r0x1032
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 13rr                      1- 1883     	RRR	r0x1032,F
                                    1- 1884     	BANKSEL	r0x1033
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 13rr                      1- 1885     	RRR	r0x1033,F
     000E 01rr                      1- 1886     	MOVR	r0x1033,W
                                    1- 1887     	BANKSEL	_duty
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 1888     	MOVAR	_duty
                                    1- 1889     	.line	450, "main.c"; 	if(preduty != duty)
                                    1- 1890     	BANKSEL	_preduty
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 12rr                      1- 1891     	XORAR	_preduty,W
     0013 0D03                      1- 1892     	BTRSC	STATUS,2
     0014 3rrr                      1- 1893     	LGOTO	_00321_DS_
                                    1- 1894     	.line	452, "main.c"; 	preduty = duty;
                                    1- 1895     	BANKSEL	_duty
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 1896     	MOVR	_duty,W
                                    1- 1897     	BANKSEL	_preduty
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1898     	MOVAR	_preduty
                                    1- 1899     	.line	453, "main.c"; 	breath3(&Rdata1,&Gdata1,&Bdata1);
     0019 21rr                      1- 1900     	MOVIA	((_Rdata1 + 0) >> 8) & 0xff
                                    1- 1901     	BANKSEL	r0x1032
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1- 1902     	MOVAR	r0x1032
     001C 21rr                      1- 1903     	MOVIA	(_Rdata1 + 0)
                                    1- 1904     	BANKSEL	r0x1033
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1905     	MOVAR	r0x1033
                                    1- 1906     ;;1	CLRR	r0x1034
     001F 21rr                      1- 1907     	MOVIA	((_Gdata1 + 0) >> 8) & 0xff
                                    1- 1908     	BANKSEL	r0x1035
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1909     	MOVAR	r0x1035
     0022 21rr                      1- 1910     	MOVIA	(_Gdata1 + 0)
                                    1- 1911     	BANKSEL	r0x1036
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1912     	MOVAR	r0x1036
                                    1- 1913     ;;1	CLRR	r0x1037
     0025 21rr                      1- 1914     	MOVIA	((_Bdata1 + 0) >> 8) & 0xff
                                    1- 1915     	BANKSEL	r0x1038
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1- 1916     	MOVAR	r0x1038
     0028 21rr                      1- 1917     	MOVIA	(_Bdata1 + 0)
                                    1- 1918     ;;1	MOVAR	r0x1039
     0029 00rr                      1- 1919     	MOVAR	STK07
     002A 01rr                      1- 1920     	MOVR	r0x1038,W
     002B 00rr                      1- 1921     	MOVAR	STK06
     002C 2100                      1- 1922     	MOVIA	0x00
     002D 00rr                      1- 1923     	MOVAR	STK05
                                    1- 1924     	BANKSEL	r0x1036
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1- 1925     	MOVR	r0x1036,W
     0030 00rr                      1- 1926     	MOVAR	STK04
                                    1- 1927     	BANKSEL	r0x1035
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1- 1928     	MOVR	r0x1035,W
     0033 00rr                      1- 1929     	MOVAR	STK03
     0034 2100                      1- 1930     	MOVIA	0x00
     0035 00rr                      1- 1931     	MOVAR	STK02
                                    1- 1932     	BANKSEL	r0x1033
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1- 1933     	MOVR	r0x1033,W
     0038 00rr                      1- 1934     	MOVAR	STK01
                                    1- 1935     	BANKSEL	r0x1032
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 1936     	MOVR	r0x1032,W
     003B 00rr                      1- 1937     	MOVAR	STK00
     003C 2100                      1- 1938     	MOVIA	0x00
     003D 2rrr                      1- 1939     	LCALL	_breath3
     003E 3rrr                      1- 1940     	LGOTO	_00323_DS_
     003F                           1- 1941     _00321_DS_:
                                    1- 1942     	.line	457, "main.c"; 	sendtoLast(Rdata1,Gdata1,Bdata1);
                                    1- 1943     	BANKSEL	_Bdata1
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1- 1944     	MOVR	_Bdata1,W
     0041 00rr                      1- 1945     	MOVAR	STK01
                                    1- 1946     	BANKSEL	_Gdata1
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1- 1947     	MOVR	_Gdata1,W
     0044 00rr                      1- 1948     	MOVAR	STK00
                                    1- 1949     	BANKSEL	_Rdata1
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1- 1950     	MOVR	_Rdata1,W
     0047 2rrr                      1- 1951     	LCALL	_sendtoLast
     0048                           1- 1952     _00323_DS_:
                                    1- 1953     	.line	469, "main.c"; 	}
                                    1- 1954     	RETURN	
     0048 0010                      3-   26 m1      ret
                                    1- 1955     ; exit point of _work9
                                    1- 1957     ;***
                                    1- 1958     ;  pBlock Stats: dbName = C
                                    1- 1959     ;***
                                    1- 1960     ;has an exit
                                    1- 1961     ;functions called:
                                    1- 1962     ;   _sendtoLast
                                    1- 1963     ;   _sendtoLast
                                    1- 1964     ;   _sendtoLast
                                    1- 1965     ;   _sendtoLast
                                    1- 1966     ;   _sendtoLast
                                    1- 1967     ;   _sendtoLast
                                    1- 1968     ;   _sendtoLast
                                    1- 1969     ;   _sendtoLast
                                    1- 1970     ;   _sendtoLast
                                    1- 1971     ;   _sendtoLast
                                    1- 1972     ;   _sendtoLast
                                    1- 1973     ;   _sendtoLast
                                    1- 1974     ;   _sendtoLast
                                    1- 1975     ;   _sendtoLast
                                    1- 1976     ;   _sendtoLast
                                    1- 1977     ;   _sendtoLast
                                    1- 1978     ;   _sendtoLast
                                    1- 1979     ;   _sendtoLast
                                    1- 1980     ;3 compiler assigned registers:
                                    1- 1981     ;   r0x1027
                                    1- 1982     ;   STK01
                                    1- 1983     ;   STK00
                                    1- 1984     ;; Starting pCode block
                                    1- 1985     .segment "code"; module=main, function=_setColor
                                    1- 1987     ;local variable name mapping:
     0000                           1- 1989     _setColor:
                                    1- 1990     ; 2 exit points
                                    1- 1991     	.line	407, "main.c"; 	void setColor(u8t cindex)
                                    1- 1992     	BANKSEL	r0x1027
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1993     	MOVAR	r0x1027
                                    1- 1994     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1995     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 1996     	.line	409, "main.c"; 	switch(cindex)
     0002 2109                      1- 1997     	MOVIA	0x09
     0003 04rr                      1- 1998     	SUBAR	r0x1027,W
     0004 0C03                      1- 1999     	BTRSC	STATUS,0
     0005 3rrr                      1- 2000     	LGOTO	_00303_DS_
     0006 21rr                      1- 2001     	MOVIA	((_00315_DS_ >> 8) & 0xff)
     0007 008A                      1- 2002     	MOVAR	PCHBUF
     0008 01rr                      1- 2003     	MOVR	r0x1027,W
     0009 25rr                      1- 2004     	ADDIA	_00315_DS_
     000A 0C03                      1- 2005     	BTRSC	STATUS,0
     000B 058A                      1- 2006     	INCR	PCHBUF,F
     000C 0082                      1- 2007     	MOVAR	PCL
     000D                           1- 2008     _00315_DS_:
     000D 3rrr                      1- 2009     	LGOTO	_00289_DS_
     000E 3rrr                      1- 2010     	LGOTO	_00294_DS_
     000F 3rrr                      1- 2011     	LGOTO	_00295_DS_
     0010 3rrr                      1- 2012     	LGOTO	_00296_DS_
     0011 3rrr                      1- 2013     	LGOTO	_00297_DS_
     0012 3rrr                      1- 2014     	LGOTO	_00298_DS_
     0013 3rrr                      1- 2015     	LGOTO	_00299_DS_
     0014 3rrr                      1- 2016     	LGOTO	_00300_DS_
     0015 3rrr                      1- 2017     	LGOTO	_00301_DS_
     0016                           1- 2018     _00289_DS_:
                                    1- 2019     	.line	412, "main.c"; 	if(Rdata1 != 0 || Gdata1 != 0 || Bdata1 != 0)
                                    1- 2020     	BANKSEL	_Rdata1
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 2021     	MOVR	_Rdata1,W
     0018 0903                      1- 2022     	BTRSS	STATUS,2
     0019 3rrr                      1- 2023     	LGOTO	_00290_DS_
                                    1- 2024     	BANKSEL	_Gdata1
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1- 2025     	MOVR	_Gdata1,W
     001C 0903                      1- 2026     	BTRSS	STATUS,2
     001D 3rrr                      1- 2027     	LGOTO	_00290_DS_
                                    1- 2028     	BANKSEL	_Bdata1
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 2029     	MOVR	_Bdata1,W
     0020 0D03                      1- 2030     	BTRSC	STATUS,2
     0021 3rrr                      1- 2031     	LGOTO	_00303_DS_
     0022                           1- 2032     _00290_DS_:
                                    1- 2033     	.line	413, "main.c"; 	sendtoLast(COLOR0);
     0022 2100                      1- 2034     	MOVIA	0x00
     0023 00rr                      1- 2035     	MOVAR	STK01
     0024 00rr                      1- 2036     	MOVAR	STK00
     0025 2rrr                      1- 2037     	LCALL	_sendtoLast
                                    1- 2038     	.line	414, "main.c"; 	break;
     0026 3rrr                      1- 2039     	LGOTO	_00303_DS_
     0027                           1- 2040     _00294_DS_:
                                    1- 2041     	.line	416, "main.c"; 	sendtoLast(COLOR1);
     0027 2100                      1- 2042     	MOVIA	0x00
     0028 00rr                      1- 2043     	MOVAR	STK01
     0029 00rr                      1- 2044     	MOVAR	STK00
     002A 21FF                      1- 2045     	MOVIA	0xff
     002B 2rrr                      1- 2046     	LCALL	_sendtoLast
                                    1- 2047     	.line	417, "main.c"; 	break;
     002C 3rrr                      1- 2048     	LGOTO	_00303_DS_
     002D                           1- 2049     _00295_DS_:
                                    1- 2050     	.line	419, "main.c"; 	sendtoLast(COLOR2);
     002D 2100                      1- 2051     	MOVIA	0x00
     002E 00rr                      1- 2052     	MOVAR	STK01
     002F 21A5                      1- 2053     	MOVIA	0xa5
     0030 00rr                      1- 2054     	MOVAR	STK00
     0031 21FF                      1- 2055     	MOVIA	0xff
     0032 2rrr                      1- 2056     	LCALL	_sendtoLast
                                    1- 2057     	.line	420, "main.c"; 	break;
     0033 3rrr                      1- 2058     	LGOTO	_00303_DS_
     0034                           1- 2059     _00296_DS_:
                                    1- 2060     	.line	422, "main.c"; 	sendtoLast(COLOR3);
     0034 2100                      1- 2061     	MOVIA	0x00
     0035 00rr                      1- 2062     	MOVAR	STK01
     0036 21FF                      1- 2063     	MOVIA	0xff
     0037 00rr                      1- 2064     	MOVAR	STK00
     0038 2rrr                      1- 2065     	LCALL	_sendtoLast
                                    1- 2066     	.line	423, "main.c"; 	break;
     0039 3rrr                      1- 2067     	LGOTO	_00303_DS_
     003A                           1- 2068     _00297_DS_:
                                    1- 2069     	.line	425, "main.c"; 	sendtoLast(COLOR4);
     003A 2100                      1- 2070     	MOVIA	0x00
     003B 00rr                      1- 2071     	MOVAR	STK01
     003C 21FF                      1- 2072     	MOVIA	0xff
     003D 00rr                      1- 2073     	MOVAR	STK00
     003E 2100                      1- 2074     	MOVIA	0x00
     003F 2rrr                      1- 2075     	LCALL	_sendtoLast
                                    1- 2076     	.line	426, "main.c"; 	break;
     0040 3rrr                      1- 2077     	LGOTO	_00303_DS_
     0041                           1- 2078     _00298_DS_:
                                    1- 2079     	.line	428, "main.c"; 	sendtoLast(COLOR5);
     0041 21FF                      1- 2080     	MOVIA	0xff
     0042 00rr                      1- 2081     	MOVAR	STK01
     0043 00rr                      1- 2082     	MOVAR	STK00
     0044 2100                      1- 2083     	MOVIA	0x00
     0045 2rrr                      1- 2084     	LCALL	_sendtoLast
                                    1- 2085     	.line	429, "main.c"; 	break;
     0046 3rrr                      1- 2086     	LGOTO	_00303_DS_
     0047                           1- 2087     _00299_DS_:
                                    1- 2088     	.line	431, "main.c"; 	sendtoLast(COLOR6);
     0047 21FF                      1- 2089     	MOVIA	0xff
     0048 00rr                      1- 2090     	MOVAR	STK01
     0049 2100                      1- 2091     	MOVIA	0x00
     004A 00rr                      1- 2092     	MOVAR	STK00
     004B 2rrr                      1- 2093     	LCALL	_sendtoLast
                                    1- 2094     	.line	432, "main.c"; 	break;
     004C 3rrr                      1- 2095     	LGOTO	_00303_DS_
     004D                           1- 2096     _00300_DS_:
                                    1- 2097     	.line	434, "main.c"; 	sendtoLast(COLOR7);
     004D 21FF                      1- 2098     	MOVIA	0xff
     004E 00rr                      1- 2099     	MOVAR	STK01
     004F 2100                      1- 2100     	MOVIA	0x00
     0050 00rr                      1- 2101     	MOVAR	STK00
     0051 21FF                      1- 2102     	MOVIA	0xff
     0052 2rrr                      1- 2103     	LCALL	_sendtoLast
                                    1- 2104     	.line	435, "main.c"; 	break;
     0053 3rrr                      1- 2105     	LGOTO	_00303_DS_
     0054                           1- 2106     _00301_DS_:
                                    1- 2107     	.line	437, "main.c"; 	sendtoLast(COLOR8);
     0054 21FF                      1- 2108     	MOVIA	0xff
     0055 00rr                      1- 2109     	MOVAR	STK01
     0056 00rr                      1- 2110     	MOVAR	STK00
     0057 2rrr                      1- 2111     	LCALL	_sendtoLast
     0058                           1- 2112     _00303_DS_:
                                    1- 2113     	.line	441, "main.c"; 	}
                                    1- 2114     	RETURN	
     0058 0010                      3-   26 m1      ret
                                    1- 2115     ; exit point of _setColor
                                    1- 2117     ;***
                                    1- 2118     ;  pBlock Stats: dbName = C
                                    1- 2119     ;***
                                    1- 2120     ;has an exit
                                    1- 2121     ;functions called:
                                    1- 2122     ;   _setColor
                                    1- 2123     ;   _work9
                                    1- 2124     ;   _work10
                                    1- 2125     ;   _setColor
                                    1- 2126     ;   _work9
                                    1- 2127     ;   _work10
                                    1- 2128     ;; Starting pCode block
                                    1- 2129     .segment "code"; module=main, function=_workCtr
     0000                           1- 2131     _workCtr:
                                    1- 2132     ; 2 exit points
                                    1- 2133     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2134     ;;unsigned compare: left >= lit (0xB=11), size=1
                                    1- 2135     	.line	393, "main.c"; 	if(workStep > 10)
     0000 210B                      1- 2136     	MOVIA	0x0b
                                    1- 2137     	BANKSEL	_workStep
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 2138     	SUBAR	_workStep,W
     0003 0C03                      1- 2139     	BTRSC	STATUS,0
                                    1- 2140     	.line	394, "main.c"; 	return;
     0004 3rrr                      1- 2141     	LGOTO	_00284_DS_
                                    1- 2142     	.line	395, "main.c"; 	if(workStep < 9)
     0005 2109                      1- 2143     	MOVIA	0x09
     0006 04rr                      1- 2144     	SUBAR	_workStep,W
     0007 0C03                      1- 2145     	BTRSC	STATUS,0
     0008 3rrr                      1- 2146     	LGOTO	_00282_DS_
                                    1- 2147     	.line	396, "main.c"; 	setColor(workStep);
     0009 01rr                      1- 2148     	MOVR	_workStep,W
     000A 2rrr                      1- 2149     	LCALL	_setColor
     000B 3rrr                      1- 2150     	LGOTO	_00284_DS_
     000C                           1- 2151     _00282_DS_:
                                    1- 2152     	.line	397, "main.c"; 	else if(workStep == 9)
                                    1- 2153     	BANKSEL	_workStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 2154     	MOVR	_workStep,W
     000E 2409                      1- 2155     	XORIA	0x09
     000F 0903                      1- 2156     	BTRSS	STATUS,2
     0010 3rrr                      1- 2157     	LGOTO	_00279_DS_
                                    1- 2158     	.line	399, "main.c"; 	work9();
     0011 2rrr                      1- 2159     	LCALL	_work9
     0012 3rrr                      1- 2160     	LGOTO	_00284_DS_
     0013                           1- 2161     _00279_DS_:
                                    1- 2162     	.line	403, "main.c"; 	work10();
     0013 2rrr                      1- 2163     	LCALL	_work10
     0014                           1- 2164     _00284_DS_:
                                    1- 2165     	.line	405, "main.c"; 	}
                                    1- 2166     	RETURN	
     0014 0010                      3-   26 m1      ret
                                    1- 2167     ; exit point of _workCtr
                                    1- 2169     ;***
                                    1- 2170     ;  pBlock Stats: dbName = C
                                    1- 2171     ;***
                                    1- 2172     ;has an exit
                                    1- 2173     ;2 compiler assigned registers:
                                    1- 2174     ;   r0x103B
                                    1- 2175     ;   r0x103C
                                    1- 2176     ;; Starting pCode block
                                    1- 2177     .segment "code"; module=main, function=_delay
                                    1- 2179     ;local variable name mapping:
     0000                           1- 2181     _delay:
                                    1- 2182     ; 2 exit points
                                    1- 2183     	.line	385, "main.c"; 	void delay(u8t time)
                                    1- 2184     	BANKSEL	r0x103B
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2185     	MOVAR	r0x103B
     0002                           1- 2186     _00271_DS_:
                                    1- 2187     	.line	387, "main.c"; 	while(--time);
                                    1- 2188     	BANKSEL	r0x103B
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 06rr                      1- 2189     	DECR	r0x103B,W
                                    1- 2190     	BANKSEL	r0x103C
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 2191     	MOVAR	r0x103C
                                    1- 2192     	BANKSEL	r0x103B
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 2193     	MOVAR	r0x103B
                                    1- 2194     	BANKSEL	r0x103C
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1- 2195     	MOVR	r0x103C,W
     000A 0903                      1- 2196     	BTRSS	STATUS,2
     000B 3rrr                      1- 2197     	LGOTO	_00271_DS_
                                    1- 2198     	.line	388, "main.c"; 	}
                                    1- 2199     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2200     ; exit point of _delay
                                    1- 2202     ;***
                                    1- 2203     ;  pBlock Stats: dbName = C
                                    1- 2204     ;***
                                    1- 2205     ;has an exit
                                    1- 2206     ;functions called:
                                    1- 2207     ;   _WaitTF0
                                    1- 2208     ;   _WaitTF0
                                    1- 2209     ;   _WaitTF0
                                    1- 2210     ;   _WaitTF0
                                    1- 2211     ;   _WaitTF0
                                    1- 2212     ;   _WaitTF0
                                    1- 2213     ;3 compiler assigned registers:
                                    1- 2214     ;   r0x103D
                                    1- 2215     ;   r0x103E
                                    1- 2216     ;   r0x103F
                                    1- 2217     ;; Starting pCode block
                                    1- 2218     .segment "code"; module=main, function=_WByte
                                    1- 2220     ;local variable name mapping:
     0000                           1- 2223     _WByte:
                                    1- 2224     ; 2 exit points
                                    1- 2225     	.line	345, "main.c"; 	void WByte(u8t input) {
                                    1- 2226     	BANKSEL	r0x103D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2227     	MOVAR	r0x103D
                                    1- 2228     	.line	348, "main.c"; 	SEND_FLAG = 1;
     0002 2101                      1- 2229     	MOVIA	0x01
                                    1- 2230     	BANKSEL	_SEND_FLAG
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 2231     	MOVAR	_SEND_FLAG
                                    1- 2232     	.line	350, "main.c"; 	TMRH = 0;
     0005 02rr                      1- 2233     	CLRR	_TMRH
                                    1- 2234     	.line	351, "main.c"; 	TMR1 = 104;
     0006 2168                      1- 2235     	MOVIA	0x68
     0007 00rr                      1- 2236     	SFUN	_TMR1
                                    1- 2237     	.line	352, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload; //���Timer1
     0008 2103                      1- 2238     	MOVIA	0x03
     0009 00rr                      1- 2239     	SFUN	_T1CR1
                                    1- 2240     	.line	353, "main.c"; 	PCON1 = C_TMR0_Dis;
     000A 0200                      1- 2241     	CLRA	
     000B 000r                      1- 2242     	IOST	_PCON1
                                    1- 2243     	.line	354, "main.c"; 	TXD = 0;
                                    1- 2244     	BANKSEL	_PORTB
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1- 2245     	BCR	_PORTB,1
                                    1- 2246     	.line	356, "main.c"; 	WaitTF0();
     000E 2rrr                      1- 2247     	LCALL	_WaitTF0
                                    1- 2248     	.line	360, "main.c"; 	while (i--) {
     000F 2108                      1- 2249     	MOVIA	0x08
                                    1- 2250     	BANKSEL	r0x103E
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 2251     	MOVAR	r0x103E
     0012                           1- 2252     _00264_DS_:
                                    1- 2253     	BANKSEL	r0x103E
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 2254     	MOVR	r0x103E,W
                                    1- 2255     	BANKSEL	r0x103F
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 2256     	MOVAR	r0x103F
                                    1- 2257     	BANKSEL	r0x103E
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 06rr                      1- 2258     	DECR	r0x103E,F
                                    1- 2259     	BANKSEL	r0x103F
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 2260     	MOVR	r0x103F,W
     001A 0D03                      1- 2261     	BTRSC	STATUS,2
     001B 3rrr                      1- 2262     	LGOTO	_00266_DS_
                                    1- 2263     	.line	362, "main.c"; 	TXD = (input & 0x01);//�ȴ���λ
                                    1- 2264     	BANKSEL	r0x103D
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 2265     	MOVR	r0x103D,W
     001E 2201                      1- 2266     	ANDIA	0x01
                                    1- 2267     	BANKSEL	r0x103F
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 2268     	MOVAR	r0x103F
     0021 13rr                      1- 2269     	RRR	r0x103F,W
     0022 0C03                      1- 2270     	BTRSC	STATUS,0
     0023 3rrr                      1- 2271     	LGOTO	_00002_DS_
                                    1- 2272     	BANKSEL	_PORTB
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 1Crr                      1- 2273     	BCR	_PORTB,1
     0026                           1- 2274     _00002_DS_:
     0026 0803                      1- 2275     	BTRSS	STATUS,0
     0027 3rrr                      1- 2276     	LGOTO	_00003_DS_
                                    1- 2277     	BANKSEL	_PORTB
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 18rr                      1- 2278     	BSR	_PORTB,1
     002A                           1- 2279     _00003_DS_:
                                    1- 2280     	.line	364, "main.c"; 	WaitTF0();
     002A 2rrr                      1- 2281     	LCALL	_WaitTF0
                                    1- 2282     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=1, sign=0, same=1, offr=0
                                    1- 2283     	.line	366, "main.c"; 	input = input >> 1;
     002B 1C03                      1- 2284     	BCR	STATUS,0
                                    1- 2285     	BANKSEL	r0x103D
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 13rr                      1- 2286     	RRR	r0x103D,F
     002E 3rrr                      1- 2287     	LGOTO	_00264_DS_
     002F                           1- 2288     _00266_DS_:
                                    1- 2289     	.line	374, "main.c"; 	TXD =  1;
                                    1- 2290     	BANKSEL	_PORTB
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 18rr                      1- 2291     	BSR	_PORTB,1
                                    1- 2292     	.line	376, "main.c"; 	WaitTF0();
     0031 2rrr                      1- 2293     	LCALL	_WaitTF0
                                    1- 2294     	.line	378, "main.c"; 	T1CR1 = C_TMR1_Dis; //ֹͣTimer1
     0032 0200                      1- 2295     	CLRA	
     0033 00rr                      1- 2296     	SFUN	_T1CR1
                                    1- 2297     	.line	379, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0034 2111                      1- 2298     	MOVIA	0x11
     0035 000r                      1- 2299     	IOST	_PCON1
                                    1- 2300     	.line	380, "main.c"; 	SEND_FLAG = 0;
                                    1- 2301     	BANKSEL	_SEND_FLAG
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 02rr                      1- 2302     	CLRR	_SEND_FLAG
                                    1- 2303     	.line	383, "main.c"; 	}
                                    1- 2304     	RETURN	
     0038 0010                      3-   26 m1      ret
                                    1- 2305     ; exit point of _WByte
                                    1- 2307     ;***
                                    1- 2308     ;  pBlock Stats: dbName = C
                                    1- 2309     ;***
                                    1- 2310     ;has an exit
                                    1- 2311     ;; Starting pCode block
                                    1- 2312     .segment "code"; module=main, function=_WaitTF0
     0000                           1- 2314     _WaitTF0:
                                    1- 2315     ; 2 exit points
     0000                           1- 2316     _00259_DS_:
                                    1- 2317     	.line	334, "main.c"; 	while (!TM0_FLAG);
                                    1- 2318     	BANKSEL	_TM0_FLAG
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2319     	MOVR	_TM0_FLAG,W
     0002 0D03                      1- 2320     	BTRSC	STATUS,2
     0003 3rrr                      1- 2321     	LGOTO	_00259_DS_
                                    1- 2322     	.line	336, "main.c"; 	TM0_FLAG = 0; //���־λ
     0004 02rr                      1- 2323     	CLRR	_TM0_FLAG
                                    1- 2324     	.line	338, "main.c"; 	}
                                    1- 2325     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1- 2326     ; exit point of _WaitTF0
                                    1- 2328     ;***
                                    1- 2329     ;  pBlock Stats: dbName = C
                                    1- 2330     ;***
                                    1- 2331     ;has an exit
                                    1- 2332     ;functions called:
                                    1- 2333     ;   _WaitTF0
                                    1- 2334     ;   _WaitTF0
                                    1- 2335     ;   _WaitTF0
                                    1- 2336     ;   _WaitTF0
                                    1- 2337     ;3 compiler assigned registers:
                                    1- 2338     ;   r0x1040
                                    1- 2339     ;   r0x1041
                                    1- 2340     ;   r0x1042
                                    1- 2341     ;; Starting pCode block
                                    1- 2342     .segment "code"; module=main, function=_RByte
                                    1- 2344     ;local variable name mapping:
     0000                           1- 2347     _RByte:
                                    1- 2348     ; 2 exit points
                                    1- 2349     	.line	296, "main.c"; 	REC_FLAG = 1;
     0000 2101                      1- 2350     	MOVIA	0x01
                                    1- 2351     	BANKSEL	_REC_FLAG
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2352     	MOVAR	_REC_FLAG
                                    1- 2353     	.line	297, "main.c"; 	u8t Output = 0;
                                    1- 2354     	BANKSEL	r0x1040
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1- 2355     	CLRR	r0x1040
                                    1- 2356     	.line	300, "main.c"; 	TMRH = 0;
     0005 02rr                      1- 2357     	CLRR	_TMRH
                                    1- 2358     	.line	301, "main.c"; 	TMR1 = 105;
     0006 2169                      1- 2359     	MOVIA	0x69
     0007 00rr                      1- 2360     	SFUN	_TMR1
                                    1- 2361     	.line	302, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload; //���Timer1
     0008 2103                      1- 2362     	MOVIA	0x03
     0009 00rr                      1- 2363     	SFUN	_T1CR1
                                    1- 2364     	.line	303, "main.c"; 	PCON1 = C_TMR0_Dis;
     000A 0200                      1- 2365     	CLRA	
     000B 000r                      1- 2366     	IOST	_PCON1
                                    1- 2367     	.line	305, "main.c"; 	WaitTF0(); //�ȹ���ʼλ
     000C 2rrr                      1- 2368     	LCALL	_WaitTF0
                                    1- 2369     	.line	309, "main.c"; 	while (i--) {
     000D 2108                      1- 2370     	MOVIA	0x08
                                    1- 2371     	BANKSEL	r0x1041
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 2372     	MOVAR	r0x1041
     0010                           1- 2373     _00247_DS_:
                                    1- 2374     	BANKSEL	r0x1041
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 2375     	MOVR	r0x1041,W
                                    1- 2376     	BANKSEL	r0x1042
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2377     	MOVAR	r0x1042
                                    1- 2378     	BANKSEL	r0x1041
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 06rr                      1- 2379     	DECR	r0x1041,F
                                    1- 2380     	BANKSEL	r0x1042
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 2381     	MOVR	r0x1042,W
     0018 0D03                      1- 2382     	BTRSC	STATUS,2
     0019 3rrr                      1- 2383     	LGOTO	_00252_DS_
                                    1- 2384     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=1, sign=0, same=1, offr=0
                                    1- 2385     	.line	311, "main.c"; 	Output >>= 1;
     001A 1C03                      1- 2386     	BCR	STATUS,0
                                    1- 2387     	BANKSEL	r0x1040
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 13rr                      1- 2388     	RRR	r0x1040,F
                                    1- 2389     	.line	313, "main.c"; 	if (RXD) Output |= 0x80; //���յ�λ
                                    1- 2390     	BANKSEL	_PORTA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 09rr                      1- 2391     	BTRSS	_PORTA,2
     001F 3rrr                      1- 2392     	LGOTO	_00004_DS_
                                    1- 2393     	BANKSEL	r0x1040
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 1Brr                      1- 2394     	BSR	r0x1040,7
     0022                           1- 2395     _00004_DS_:
                                    1- 2396     	.line	315, "main.c"; 	WaitTF0(); //λ����ʱ
     0022 2rrr                      1- 2397     	LCALL	_WaitTF0
     0023 3rrr                      1- 2398     	LGOTO	_00247_DS_
     0024                           1- 2399     _00252_DS_:
                                    1- 2400     	.line	319, "main.c"; 	while (!TM0_FLAG) if (RXD) break;
                                    1- 2401     	BANKSEL	_TM0_FLAG
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 2402     	MOVR	_TM0_FLAG,W
     0026 0903                      1- 2403     	BTRSS	STATUS,2
     0027 3rrr                      1- 2404     	LGOTO	_00254_DS_
                                    1- 2405     	BANKSEL	_PORTA
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 09rr                      1- 2406     	BTRSS	_PORTA,2
     002A 3rrr                      1- 2407     	LGOTO	_00252_DS_
     002B                           1- 2408     _00254_DS_:
                                    1- 2409     	.line	321, "main.c"; 	T1CR1 = C_TMR1_Dis; //ֹͣTimer1
     002B 0200                      1- 2410     	CLRA	
     002C 00rr                      1- 2411     	SFUN	_T1CR1
                                    1- 2412     	.line	322, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     002D 2111                      1- 2413     	MOVIA	0x11
     002E 000r                      1- 2414     	IOST	_PCON1
                                    1- 2415     	.line	323, "main.c"; 	REC_FLAG = 0;
                                    1- 2416     	BANKSEL	_REC_FLAG
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1- 2417     	CLRR	_REC_FLAG
                                    1- 2418     	.line	324, "main.c"; 	uartTime = 0;
                                    1- 2419     	BANKSEL	_uartTime
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 02rr                      1- 2420     	CLRR	_uartTime
                                    1- 2421     	.line	325, "main.c"; 	return Output;
                                    1- 2422     	BANKSEL	r0x1040
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 2423     	MOVR	r0x1040,W
                                    1- 2424     	.line	327, "main.c"; 	}
                                    1- 2425     	RETURN	
     0035 0010                      3-   26 m1      ret
                                    1- 2426     ; exit point of _RByte
                                    1- 2428     ;***
                                    1- 2429     ;  pBlock Stats: dbName = C
                                    1- 2430     ;***
                                    1- 2431     ;has an exit
                                    1- 2432     ;functions called:
                                    1- 2433     ;   __mulchar
                                    1- 2434     ;   __mulint
                                    1- 2435     ;   __mulchar
                                    1- 2436     ;   __mulint
                                    1- 2437     ;11 compiler assigned registers:
                                    1- 2438     ;   r0x1043
                                    1- 2439     ;   STK00
                                    1- 2440     ;   r0x1044
                                    1- 2441     ;   r0x1045
                                    1- 2442     ;   r0x1046
                                    1- 2443     ;   STK02
                                    1- 2444     ;   STK01
                                    1- 2445     ;   r0x1047
                                    1- 2446     ;   r0x1048
                                    1- 2447     ;   r0x1049
                                    1- 2448     ;   r0x104A
                                    1- 2449     ;; Starting pCode block
                                    1- 2450     .segment "code"; module=main, function=_rankNub
                                    1- 2452     ;local variable name mapping:
     0000                           1- 2457     _rankNub:
                                    1- 2458     ; 2 exit points
                                    1- 2459     	.line	276, "main.c"; 	void rankNub(char nub)
                                    1- 2460     	BANKSEL	r0x1043
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2461     	MOVAR	r0x1043
                                    1- 2462     	.line	278, "main.c"; 	u16t aNub = 3*randNub;
     0002 2103                      1- 2463     	MOVIA	0x03
     0003 00rr                      1- 2464     	MOVAR	STK00
                                    1- 2465     	BANKSEL	_randNub
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 2466     	MOVR	_randNub,W
     0006 2rrr                      1- 2467     	LCALL	__mulchar
                                    1- 2468     	BANKSEL	r0x1044
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 2469     	MOVAR	r0x1044
                                    1- 2470     	BANKSEL	r0x1045
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 2471     	CLRR	r0x1045
                                    1- 2472     	.line	280, "main.c"; 	for(i=0;i<nub;i++)
                                    1- 2473     	BANKSEL	r0x1046
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1- 2474     	CLRR	r0x1046
     000D                           1- 2475     _00240_DS_:
                                    1- 2476     	BANKSEL	r0x1043
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 2477     	MOVR	r0x1043,W
                                    1- 2478     	BANKSEL	r0x1046
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1- 2479     	SUBAR	r0x1046,W
     0011 0C03                      1- 2480     	BTRSC	STATUS,0
     0012 3rrr                      1- 2481     	LGOTO	_00238_DS_
                                    1- 2482     	.line	282, "main.c"; 	aNub += i*snub;
                                    1- 2483     	BANKSEL	_snub
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 2484     	MOVR	_snub,W
     0015 00rr                      1- 2485     	MOVAR	STK02
     0016 0200                      1- 2486     	CLRA	
     0017 00rr                      1- 2487     	MOVAR	STK01
                                    1- 2488     	BANKSEL	r0x1046
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 2489     	MOVR	r0x1046,W
     001A 00rr                      1- 2490     	MOVAR	STK00
     001B 0200                      1- 2491     	CLRA	
     001C 2rrr                      1- 2492     	LCALL	__mulint
                                    1- 2493     	BANKSEL	r0x104A
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 2494     	MOVAR	r0x104A
                                    1- 2495     ;;1	MOVAR	r0x1047
     001F 01rr                      1- 2496     	MOVR	STK00,W
                                    1- 2497     ;;1	MOVAR	r0x1049
                                    1- 2498     	BANKSEL	r0x1044
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 03rr                      1- 2499     	ADDAR	r0x1044,F
                                    1- 2500     	BANKSEL	r0x104A
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 2501     	MOVR	r0x104A,W
     0024 0C03                      1- 2502     	BTRSC	STATUS,0
     0025 05rr                      1- 2503     	INCR	r0x104A,W
     0026 0D03                      1- 2504     	BTRSC	STATUS,2
     0027 3rrr                      1- 2505     	LGOTO	_00005_DS_
                                    1- 2506     	BANKSEL	r0x1045
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 03rr                      1- 2507     	ADDAR	r0x1045,F
                                    1- 2508     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 2509     ;;unsigned compare: left >= lit (0x5=5), size=1
     002A                           1- 2510     _00005_DS_:
                                    1- 2511     	.line	283, "main.c"; 	if(i>4)
     002A 2105                      1- 2512     	MOVIA	0x05
                                    1- 2513     	BANKSEL	r0x1046
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 04rr                      1- 2514     	SUBAR	r0x1046,W
     002D 0803                      1- 2515     	BTRSS	STATUS,0
     002E 3rrr                      1- 2516     	LGOTO	_00006_DS_
                                    1- 2517     	.line	284, "main.c"; 	aNub--;
     002F 21FF                      1- 2518     	MOVIA	0xff
                                    1- 2519     	BANKSEL	r0x1044
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 03rr                      1- 2520     	ADDAR	r0x1044,F
     0032 0C03                      1- 2521     	BTRSC	STATUS,0
     0033 3rrr                      1- 2522     	LGOTO	_00006_DS_
                                    1- 2523     	BANKSEL	r0x1045
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 06rr                      1- 2524     	DECR	r0x1045,F
     0036                           1- 2525     _00006_DS_:
                                    1- 2526     	.line	285, "main.c"; 	aNub += 3;
     0036 2103                      1- 2527     	MOVIA	0x03
                                    1- 2528     	BANKSEL	r0x1044
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 03rr                      1- 2529     	ADDAR	r0x1044,F
     0039 0803                      1- 2530     	BTRSS	STATUS,0
     003A 3rrr                      1- 2531     	LGOTO	_00007_DS_
                                    1- 2532     	BANKSEL	r0x1045
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 05rr                      1- 2533     	INCR	r0x1045,F
     003D                           1- 2534     _00007_DS_:
                                    1- 2535     	.line	280, "main.c"; 	for(i=0;i<nub;i++)
                                    1- 2536     	BANKSEL	r0x1046
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 05rr                      1- 2537     	INCR	r0x1046,F
     003F 3rrr                      1- 2538     	LGOTO	_00240_DS_
     0040                           1- 2539     _00238_DS_:
                                    1- 2540     	.line	288, "main.c"; 	randNub = aNub%8 +1;
     0040 2107                      1- 2541     	MOVIA	0x07
                                    1- 2542     	BANKSEL	r0x1044
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 10rr                      1- 2543     	ANDAR	r0x1044,F
                                    1- 2544     	BANKSEL	r0x1045
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 02rr                      1- 2545     	CLRR	r0x1045
                                    1- 2546     	BANKSEL	r0x1044
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1- 2547     	MOVR	r0x1044,W
                                    1- 2548     	BANKSEL	r0x1043
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 2549     	MOVAR	r0x1043
     0049 05rr                      1- 2550     	INCR	r0x1043,W
                                    1- 2551     	BANKSEL	_randNub
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 00rr                      1- 2552     	MOVAR	_randNub
                                    1- 2553     	.line	289, "main.c"; 	}
                                    1- 2554     	RETURN	
     004C 0010                      3-   26 m1      ret
                                    1- 2555     ; exit point of _rankNub
                                    1- 2557     ;***
                                    1- 2558     ;  pBlock Stats: dbName = C
                                    1- 2559     ;***
                                    1- 2560     ;has an exit
                                    1- 2561     ;functions called:
                                    1- 2562     ;   _RByte
                                    1- 2563     ;   __gptrput1
                                    1- 2564     ;   _RByte
                                    1- 2565     ;   __gptrput1
                                    1- 2566     ;5 compiler assigned registers:
                                    1- 2567     ;   r0x104B
                                    1- 2568     ;   r0x104C
                                    1- 2569     ;   STK02
                                    1- 2570     ;   STK01
                                    1- 2571     ;   STK00
                                    1- 2572     ;; Starting pCode block
                                    1- 2573     .segment "code"; module=main, function=_revData
     0000                           1- 2575     _revData:
                                    1- 2576     ; 2 exit points
                                    1- 2577     	.line	212, "main.c"; 	if(REC_FLAG == 0 && (PORTA & 0x04) == 0)
                                    1- 2578     	BANKSEL	_REC_FLAG
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2579     	MOVR	_REC_FLAG,W
     0002 0903                      1- 2580     	BTRSS	STATUS,2
     0003 3rrr                      1- 2581     	LGOTO	_00221_DS_
                                    1- 2582     	BANKSEL	_PORTA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 0Drr                      1- 2583     	BTRSC	_PORTA,2
     0006 3rrr                      1- 2584     	LGOTO	_00221_DS_
                                    1- 2585     	.line	214, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1;
     0007 2109                      1- 2586     	MOVIA	0x09
     0008 00rr                      1- 2587     	MOVAR	_INTE
                                    1- 2588     	.line	215, "main.c"; 	REC_FLAG = 1;
     0009 2101                      1- 2589     	MOVIA	0x01
                                    1- 2590     	BANKSEL	_REC_FLAG
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 2591     	MOVAR	_REC_FLAG
                                    1- 2592     	.line	216, "main.c"; 	if(!SEND_FLAG)
                                    1- 2593     	BANKSEL	_SEND_FLAG
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 2594     	MOVR	_SEND_FLAG,W
     000E 0903                      1- 2595     	BTRSS	STATUS,2
     000F 3rrr                      1- 2596     	LGOTO	_00218_DS_
                                    1- 2597     	.line	218, "main.c"; 	recData = RByte();
     0010 2rrr                      1- 2598     	LCALL	_RByte
                                    1- 2599     	BANKSEL	_recData
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 2600     	MOVAR	_recData
                                    1- 2601     	.line	219, "main.c"; 	revList[index] = recData;
                                    1- 2602     	BANKSEL	_index
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 2603     	MOVR	_index,W
     0015 25rr                      1- 2604     	ADDIA	(_revList + 0)
                                    1- 2605     	BANKSEL	r0x104B
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 2606     	MOVAR	r0x104B
     0018 21rr                      1- 2607     	MOVIA	((_revList + 0) >> 8) & 0xff
     0019 0C03                      1- 2608     	BTRSC	STATUS,0
     001A 2501                      1- 2609     	ADDIA	0x01
                                    1- 2610     	BANKSEL	r0x104C
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 2611     	MOVAR	r0x104C
                                    1- 2612     	BANKSEL	_recData
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 2613     	MOVR	_recData,W
     001F 00rr                      1- 2614     	MOVAR	STK02
                                    1- 2615     	BANKSEL	r0x104B
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 2616     	MOVR	r0x104B,W
     0022 00rr                      1- 2617     	MOVAR	STK01
                                    1- 2618     	BANKSEL	r0x104C
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1- 2619     	MOVR	r0x104C,W
     0025 00rr                      1- 2620     	MOVAR	STK00
     0026 2100                      1- 2621     	MOVIA	0x00
     0027 2rrr                      1- 2622     	LCALL	__gptrput1
                                    1- 2623     	.line	220, "main.c"; 	if(++index > 5)
                                    1- 2624     	BANKSEL	_index
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 05rr                      1- 2625     	INCR	_index,F
                                    1- 2626     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2627     ;;unsigned compare: left >= lit (0x6=6), size=1
     002A 2106                      1- 2628     	MOVIA	0x06
     002B 04rr                      1- 2629     	SUBAR	_index,W
     002C 0803                      1- 2630     	BTRSS	STATUS,0
     002D 3rrr                      1- 2631     	LGOTO	_00219_DS_
                                    1- 2632     	.line	221, "main.c"; 	index = 0;
     002E 02rr                      1- 2633     	CLRR	_index
     002F 3rrr                      1- 2634     	LGOTO	_00219_DS_
     0030                           1- 2635     _00218_DS_:
                                    1- 2636     	.line	225, "main.c"; 	REC_FLAG = 0;
                                    1- 2637     	BANKSEL	_REC_FLAG
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 02rr                      1- 2638     	CLRR	_REC_FLAG
     0032                           1- 2639     _00219_DS_:
                                    1- 2640     	.line	227, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0032 210B                      1- 2641     	MOVIA	0x0b
     0033 00rr                      1- 2642     	MOVAR	_INTE
     0034                           1- 2643     _00221_DS_:
                                    1- 2644     	.line	231, "main.c"; 	uartFlag = 0;
                                    1- 2645     	BANKSEL	_uartFlag
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 02rr                      1- 2646     	CLRR	_uartFlag
                                    1- 2647     	.line	232, "main.c"; 	}
                                    1- 2648     	RETURN	
     0036 0010                      3-   26 m1      ret
                                    1- 2649     ; exit point of _revData
                                    1- 2652     ;	code size estimation:
                                    1- 2653     ;	  992+  272 =  1264 instructions ( 3072 byte)
                                    1- 2655     	end
                                    1- 2655     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuchar              Label    00000000
__gptrget1              Label    00000000
__gptrput1              Label    00000000
__moduint               Label    00000000
__mulchar               Label    00000000
__mulint                Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    00000030
_00002_DS_              Label    00000026
_00003_DS_              Label    0000002A
_00004_DS_              Label    00000022
_00005_DS_              Label    0000002A
_00006_DS_              Label    00000036
_00007_DS_              Label    0000003D
_00008_DS_              Label    00000049
_00009_DS_              Label    0000004B
_00106_DS_              Label    0000006D
_00108_DS_              Label    00000070
_00111_DS_              Label    00000088
_00119_DS_              Label    00000096
_00121_DS_              Label    000000B2
_00124_DS_              Label    000000B5
_00125_DS_              Label    000000D6
_00134_DS_              Label    000000F5
_00136_DS_              Label    000000FC
_00141_DS_              Label    0000010A
_00208_DS_              Label    000000A0
_00218_DS_              Label    00000030
_00219_DS_              Label    00000032
_00221_DS_              Label    00000034
_00231_DS_              Label    0000001F
_00238_DS_              Label    00000040
_00240_DS_              Label    0000000D
_00247_DS_              Label    00000010
_00252_DS_              Label    00000024
_00254_DS_              Label    0000002B
_00259_DS_              Label    00000000
_00264_DS_              Label    00000012
_00266_DS_              Label    0000002F
_00271_DS_              Label    00000002
_00279_DS_              Label    00000013
_00282_DS_              Label    0000000C
_00284_DS_              Label    00000014
_00289_DS_              Label    00000016
_00290_DS_              Label    00000022
_00294_DS_              Label    00000027
_00295_DS_              Label    0000002D
_00296_DS_              Label    00000034
_00297_DS_              Label    0000003A
_00298_DS_              Label    00000041
_00299_DS_              Label    00000047
_00300_DS_              Label    0000004D
_00301_DS_              Label    00000054
_00303_DS_              Label    00000058
_00315_DS_              Label    0000000D
_00321_DS_              Label    0000003F
_00323_DS_              Label    00000048
_00334_DS_              Label    00000033
_00336_DS_              Label    0000004E
_00338_DS_              Label    00000069
_00351_DS_              Label    00000002
_00353_DS_              Label    0000000E
_00365_DS_              Label    00000010
_00370_DS_              Label    00000015
_00374_DS_              Label    0000001C
_00379_DS_              Label    00000021
_00383_DS_              Label    00000028
_00388_DS_              Label    0000002D
_00392_DS_              Label    00000034
_00397_DS_              Label    00000039
_00401_DS_              Label    00000040
_00406_DS_              Label    00000045
_00410_DS_              Label    0000004C
_00415_DS_              Label    00000051
_00419_DS_              Label    00000058
_00424_DS_              Label    0000005D
_00428_DS_              Label    00000064
_00433_DS_              Label    00000069
_00437_DS_              Label    00000070
_00442_DS_              Label    00000075
_00446_DS_              Label    0000007C
_00451_DS_              Label    00000081
_00455_DS_              Label    00000088
_00460_DS_              Label    0000008D
_00464_DS_              Label    00000094
_00469_DS_              Label    00000099
_00473_DS_              Label    000000A0
_00478_DS_              Label    000000A5
_00482_DS_              Label    000000AC
_00487_DS_              Label    000000B1
_00491_DS_              Label    000000B8
_00496_DS_              Label    000000BD
_00500_DS_              Label    000000C4
_00505_DS_              Label    000000C9
_00509_DS_              Label    000000D0
_00514_DS_              Label    000000D5
_00518_DS_              Label    000000DC
_00523_DS_              Label    000000E1
_00527_DS_              Label    000000E8
_00532_DS_              Label    000000ED
_00536_DS_              Label    000000F4
_00541_DS_              Label    000000F9
_00545_DS_              Label    00000100
_00550_DS_              Label    00000105
_00554_DS_              Label    0000010C
_00559_DS_              Label    00000111
_00563_DS_              Label    00000118
_00568_DS_              Label    0000011D
_00572_DS_              Label    00000124
_00577_DS_              Label    00000129
_00584_DS_              Label    00000031
_00586_DS_              Label    00000012
_00588_DS_              Label    00000032
_00599_DS_              Label    0000001B
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_Bdata                  Label    00000000
_Bdata1                 Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_breath3                Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_CMPCR                  Label    00000000
_colorIndex             Label    00000000
_data                   Label    00000000
_delay                  Label    00000000
_Delay10Us              Label    00000000
_Delay80us              Label    00000000
_duty                   Label    00000000
_firstFlag              Label    00000000
_FSR                    Label    00000000
_Gdata                  Label    00000000
_Gdata1                 Label    00000000
_Hcount                 Label    00000000
_index                  Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_ledCount               Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_preColorIndex          Label    00000000
_preduty                Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_randNub                Label    00000000
_rankNub                Label    00000000
_RByte                  Label    00000000
_Rdata                  Label    00000000
_Rdata1                 Label    00000000
_REC_FLAG               Label    00000000
_recData                Label    00000000
_revData                Label    00000000
_revList                Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_SEND_FLAG              Label    00000000
_sendRGB                Label    00000000
_sendtoLast             Label    00000000
_setColor               Label    00000000
_snub                   Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_timeCount              Label    00000000
_TM0_FLAG               Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_uartFlag               Label    00000000
_uartTime               Label    00000000
_WaitTF0                Label    00000000
_WByte                  Label    00000000
_work10                 Label    00000000
_work9                  Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    0000011B
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1035                 Label    00000000
r0x1036                 Label    00000000
r0x1038                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
r0x103D                 Label    00000000
r0x103E                 Label    00000000
r0x103F                 Label    00000000
r0x1040                 Label    00000000
r0x1041                 Label    00000000
r0x1042                 Label    00000000
r0x1043                 Label    00000000
r0x1044                 Label    00000000
r0x1045                 Label    00000000
r0x1046                 Label    00000000
r0x104A                 Label    00000000
r0x104B                 Label    00000000
r0x104C                 Label    00000000
r0x104D                 Label    00000000
r0x104E                 Label    00000000
r0x104F                 Label    00000000
r0x1050                 Label    00000000
r0x1051                 Label    00000000
r0x1052                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a054d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
