
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_checkBatAD
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_ADMDbits
                                    1-   24     	extern	_ADRbits
                                    1-   25     	extern	_ADVREFHbits
                                    1-   26     	extern	_ADCRbits
                                    1-   27     	extern	_AWUCONbits
                                    1-   28     	extern	_PACONbits
                                    1-   29     	extern	_INTEDGbits
                                    1-   30     	extern	_ANAENbits
                                    1-   31     	extern	_RFCbits
                                    1-   32     	extern	_INTE2bits
                                    1-   33     	extern	_INDF
                                    1-   34     	extern	_TMR0
                                    1-   35     	extern	_PCL
                                    1-   36     	extern	_STATUS
                                    1-   37     	extern	_FSR
                                    1-   38     	extern	_PORTA
                                    1-   39     	extern	_PORTB
                                    1-   40     	extern	_PCON
                                    1-   41     	extern	_BWUCON
                                    1-   42     	extern	_PCHBUF
                                    1-   43     	extern	_ABPLCON
                                    1-   44     	extern	_BPHCON
                                    1-   45     	extern	_INTE
                                    1-   46     	extern	_INTF
                                    1-   47     	extern	_ADMD
                                    1-   48     	extern	_ADR
                                    1-   49     	extern	_ADD
                                    1-   50     	extern	_ADVREFH
                                    1-   51     	extern	_ADCR
                                    1-   52     	extern	_AWUCON
                                    1-   53     	extern	_PACON
                                    1-   54     	extern	_INTEDG
                                    1-   55     	extern	_TMRH
                                    1-   56     	extern	_ANAEN
                                    1-   57     	extern	_RFC
                                    1-   58     	extern	_TM3RH
                                    1-   59     	extern	_INTE2
                                    1-   60     	extern	_TMR1
                                    1-   61     	extern	_T1CR1
                                    1-   62     	extern	_T1CR2
                                    1-   63     	extern	_PWM1DUTY
                                    1-   64     	extern	_PS1CV
                                    1-   65     	extern	_BZ1CR
                                    1-   66     	extern	_IRCR
                                    1-   67     	extern	_TBHP
                                    1-   68     	extern	_TBHD
                                    1-   69     	extern	_TMR2
                                    1-   70     	extern	_T2CR1
                                    1-   71     	extern	_T2CR2
                                    1-   72     	extern	_PWM2DUTY
                                    1-   73     	extern	_PS2CV
                                    1-   74     	extern	_BZ2CR
                                    1-   75     	extern	_OSCCR
                                    1-   76     	extern	_TMR3
                                    1-   77     	extern	_T3CR1
                                    1-   78     	extern	_T3CR2
                                    1-   79     	extern	_PWM3DUTY
                                    1-   80     	extern	_PS3CV
                                    1-   81     	extern	_BZ3CR
                                    1-   82     	extern	_IOSTA
                                    1-   83     	extern	_IOSTB
                                    1-   84     	extern	_APHCON
                                    1-   85     	extern	_PS0CV
                                    1-   86     	extern	_BODCON
                                    1-   87     	extern	_CMPCR
                                    1-   88     	extern	_PCON1
                                    1-   89     	extern	_T0MD
                                    1-   90     	extern	___sdcc_saved_fsr
                                    1-   91     	extern	___sdcc_saved_stk00
                                    1-   92     	extern	___sdcc_saved_stk01
                                    1-   93     	extern	__nyc_ny8_startup
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     ; global declarations
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     	extern	_keyRead
                                    1-   98     	extern	_LED4ON
                                    1-   99     	extern	_LED3ON
                                    1-  100     	extern	_LED2ON
                                    1-  101     	extern	_LED1ON
                                    1-  102     	extern	_LedInput
                                    1-  103     	extern	_ledShow
                                    1-  104     	extern	_delay
                                    1-  105     	extern	_F_wait_eoc
                                    1-  106     	extern	_initAD
                                    1-  107     	extern	_F_AIN4_Convert
                                    1-  108     	extern	_F_AIN2_Convert
                                    1-  109     	extern	_checkBat
                                    1-  110     	extern	_checkInAD
                                    1-  111     	extern	_gotoSleep
                                    1-  112     	extern	_initSys
                                    1-  113     	extern	_setLedStep
                                    1-  114     	extern	_isr
                                    1-  115     	extern	_main
                                    1-  116     	extern	_intCount
                                    1-  117     	extern	_Status
                                    1-  118     	extern	_ledStep
                                    1-  119     	extern	_ledTime
                                    1-  120     	extern	_checkTime
                                    1-  121     	extern	_sleepTime
                                    1-  122     	extern	_R_AIN2_DATA
                                    1-  123     	extern	_R_AIN2_DATA_LB
                                    1-  124     	extern	_R_AIN4_DATA
                                    1-  125     	extern	_R_AIN4_DATA_LB
                                    1-  126     	extern	_keyCount
                                    1-  127     	extern	_count200ms
                                    1-  128     	extern	_minStep
                                    1-  129     	extern	_debug
                                    1-  131     	extern PSAVE
                                    1-  132     	extern SSAVE
                                    1-  133     	extern WSAVE
                                    1-  134     	extern STK02
                                    1-  135     	extern STK01
                                    1-  136     	extern STK00
                                    1-  138     .segment "uninit", 0x20000040
 20000040                           1-  139     PSAVE:
                                    1-  140     	.res 1
 20000041                           1-  141     SSAVE:
                                    1-  142     	.res 1
 20000042                           1-  143     WSAVE:
                                    1-  144     	.res 1
 20000043                           1-  145     STK02:
                                    1-  146     	.res 1
 20000044                           1-  147     STK01:
                                    1-  148     	.res 1
 20000045                           1-  149     STK00:
                                    1-  150     	.res 1
                                    1-  152     ;--------------------------------------------------------
                                    1-  153     ; global definitions
                                    1-  154     ;--------------------------------------------------------
                                    1-  155     ;--------------------------------------------------------
                                    1-  156     ; absolute symbol definitions
                                    1-  157     ;--------------------------------------------------------
                                    1-  158     ;--------------------------------------------------------
                                    1-  159     ; compiler-defined variables
                                    1-  160     ;--------------------------------------------------------
                                    1-  161     .segment "uninit"
     0000                           1-  162     r0x102E:
                                    1-  163     	.res	1
                                    1-  164     .segment "uninit"
     0000                           1-  165     r0x102C:
                                    1-  166     	.res	1
                                    1-  167     .segment "uninit"
     0000                           1-  168     r0x102D:
                                    1-  169     	.res	1
                                    1-  170     .segment "uninit"
     0000                           1-  171     r0x1028:
                                    1-  172     	.res	1
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x1029:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x1020:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x1021:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x1022:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1025:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x101A:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x101B:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x101C:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x101F:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x1014:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x1015:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x1019:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x1018:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1017:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1016:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x1013:
                                    1-  220     	.res	1
                                    1-  221     ;--------------------------------------------------------
                                    1-  222     ; initialized data
                                    1-  223     ;--------------------------------------------------------
                                    1-  225     .segment "idata"
     0000                           1-  226     _intCount:
     0000 0000                      1-  227     	dw	0x00
                                    1-  231     .segment "idata"
     0000                           1-  232     _Status:
     0000 0000                      1-  233     	dw	0x00
                                    1-  237     .segment "idata"
     0000                           1-  238     _ledStep:
     0000 0000                      1-  239     	dw	0x00
                                    1-  243     .segment "idata"
     0000                           1-  244     _ledTime:
     0000 0000 0000                 1-  245     	dw	0x00, 0x00
                                    1-  249     .segment "idata"
     0000                           1-  250     _checkTime:
     0000 0000                      1-  251     	dw	0x00
                                    1-  255     .segment "idata"
     0000                           1-  256     _sleepTime:
     0000 0000                      1-  257     	dw	0x00
                                    1-  261     .segment "idata"
     0000                           1-  262     _R_AIN2_DATA:
     0000 0000 0000                 1-  263     	dw	0x00, 0x00
                                    1-  267     .segment "idata"
     0000                           1-  268     _R_AIN2_DATA_LB:
     0000 0000                      1-  269     	dw	0x00
                                    1-  273     .segment "idata"
     0000                           1-  274     _R_AIN4_DATA:
     0000 0000 0000                 1-  275     	dw	0x00, 0x00
                                    1-  279     .segment "idata"
     0000                           1-  280     _R_AIN4_DATA_LB:
     0000 0000                      1-  281     	dw	0x00
                                    1-  285     .segment "idata"
     0000                           1-  286     _keyCount:
     0000 0000                      1-  287     	dw	0x00
                                    1-  291     .segment "idata"
     0000                           1-  292     _count200ms:
     0000 0000                      1-  293     	dw	0x00
                                    1-  297     .segment "idata"
     0000                           1-  298     _minStep:
     0000 0000                      1-  299     	dw	0x00
                                    1-  303     .segment "idata"
     0000                           1-  304     _debug:
     0000 0000                      1-  305     	dw	0x00
                                    1-  308     ;--------------------------------------------------------
                                    1-  309     ; overlayable items in internal ram 
                                    1-  310     ;--------------------------------------------------------
                                    1-  311     ;	udata_ovr
                                    1-  312     ;--------------------------------------------------------
                                    1-  313     ; reset vector 
                                    1-  314     ;--------------------------------------------------------
                                    1-  315     ORG	0x0000
     0000 3rrr                      1-  316     	LGOTO	__nyc_ny8_startup
                                    1-  317     ;--------------------------------------------------------
                                    1-  318     ; interrupt and initialization code
                                    1-  319     ;--------------------------------------------------------
                                    1-  320     ORG 0x0008
     0008 3rrr                      1-  321     	lgoto	__sdcc_interrupt
                                    1-  323     .segment "code"
     0000                           1-  324     __sdcc_interrupt:
                                    1-  325     ;***
                                    1-  326     ;  pBlock Stats: dbName = I
                                    1-  327     ;***
                                    1-  328     ;2 compiler assigned registers:
                                    1-  329     ;   STK00
                                    1-  330     ;   STK01
                                    1-  331     ;; Starting pCode block
     0000                           1-  332     _isr:
                                    1-  333     ; 0 exit points
                                    1-  334     	.line	66, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  335     	MOVAR	WSAVE
     0001 1503                      1-  336     	SWAPR	STATUS,W
     0002 0283                      1-  337     	CLRR	STATUS
     0003 00rr                      1-  338     	MOVAR	SSAVE
     0004 010A                      1-  339     	MOVR	PCHBUF,W
     0005 028A                      1-  340     	CLRR	PCHBUF
     0006 00rr                      1-  341     	MOVAR	PSAVE
     0007 0104                      1-  342     	MOVR	FSR,W
                                    1-  343     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  344     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  345     	MOVR	STK00,W
                                    1-  346     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  347     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  348     	MOVR	STK01,W
                                    1-  349     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  350     	MOVAR	___sdcc_saved_stk01
                                    1-  351     	.line	68, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  352     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  353     	LGOTO	_00108_DS_
                                    1-  354     	.line	70, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  355     	MOVIA	0x37
     0013 03rr                      1-  356     	ADDAR	_TMR0,F
                                    1-  357     	.line	72, "main.c"; 	if(++intCount >= 100)
                                    1-  358     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  359     	INCR	_intCount,F
                                    1-  360     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  361     	MOVIA	0x64
     0017 04rr                      1-  362     	SUBAR	_intCount,W
     0018 0803                      1-  363     	BTRSS	STATUS,0
     0019 3rrr                      1-  364     	LGOTO	_00108_DS_
                                    1-  365     	.line	74, "main.c"; 	IntFlag = 1;
                                    1-  366     	BANKSEL	_Status
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 18rr                      1-  367     	BSR	_Status,0
                                    1-  368     	.line	75, "main.c"; 	intCount = 0;
                                    1-  369     	BANKSEL	_intCount
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1-  370     	CLRR	_intCount
     001E                           1-  371     _00108_DS_:
                                    1-  372     	.line	82, "main.c"; 	if(INTFbits.PABIF)
     001E 08rr                      1-  373     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  374     	LGOTO	_00110_DS_
                                    1-  375     	.line	84, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0020 21FD                      1-  376     	MOVIA	0xfd
     0021 00rr                      1-  377     	MOVAR	_INTF
     0022                           1-  378     _00110_DS_:
                                    1-  379     	.line	87, "main.c"; 	INTF = 0;
     0022 02rr                      1-  380     	CLRR	_INTF
                                    1-  381     	.line	89, "main.c"; 	}
                                    1-  382     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  383     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  384     	MOVAR	STK01
                                    1-  385     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  386     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  387     	MOVAR	STK00
                                    1-  388     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  389     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  390     	MOVAR	FSR
     002C 01rr                      1-  391     	MOVR	PSAVE,W
     002D 008A                      1-  392     	MOVAR	PCHBUF
     002E 0283                      1-  393     	CLRR	STATUS
     002F 15rr                      1-  394     	SWAPR	SSAVE,W
     0030 0083                      1-  395     	MOVAR	STATUS
     0031 15rr                      1-  396     	SWAPR	WSAVE,F
     0032 15rr                      1-  397     	SWAPR	WSAVE,W
     0033                           1-  398     END_OF_INTERRUPT:
     0033 0011                      1-  399     	RETIE	
                                    1-  401     ;--------------------------------------------------------
                                    1-  402     ; code
                                    1-  403     ;--------------------------------------------------------
                                    1-  404     ;***
                                    1-  405     ;  pBlock Stats: dbName = M
                                    1-  406     ;***
                                    1-  407     ;has an exit
                                    1-  408     ;functions called:
                                    1-  409     ;   _initSys
                                    1-  410     ;   _initAD
                                    1-  411     ;   _ledShow
                                    1-  412     ;   _keyRead
                                    1-  413     ;   _checkInAD
                                    1-  414     ;   _checkBat
                                    1-  415     ;   _setLedStep
                                    1-  416     ;   _gotoSleep
                                    1-  417     ;   _initSys
                                    1-  418     ;   _initAD
                                    1-  419     ;   _ledShow
                                    1-  420     ;   _keyRead
                                    1-  421     ;   _checkInAD
                                    1-  422     ;   _checkBat
                                    1-  423     ;   _setLedStep
                                    1-  424     ;   _gotoSleep
                                    1-  425     ;1 compiler assigned register :
                                    1-  426     ;   r0x102E
                                    1-  427     ;; Starting pCode block
                                    1-  428     .segment "code"; module=main, function=_main
                                    1-  430     ;local variable name mapping:
     0000                           1-  432     _main:
                                    1-  433     ; 2 exit points
                                    1-  434     	.line	94, "main.c"; 	initSys();
     0000 2rrr                      1-  435     	LCALL	_initSys
                                    1-  436     	.line	95, "main.c"; 	initAD();
     0001 2rrr                      1-  437     	LCALL	_initAD
     0002                           1-  438     _00135_DS_:
                                    1-  439     	.line	98, "main.c"; 	ledShow();
     0002 2rrr                      1-  440     	LCALL	_ledShow
                                    1-  441     	.line	99, "main.c"; 	CLRWDT();
     0003 0002                      1-  442     	clrwdt
                                    1-  443     	.line	100, "main.c"; 	if(!IntFlag)
                                    1-  444     	BANKSEL	_Status
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 08rr                      1-  445     	BTRSS	_Status,0
     0006 3rrr                      1-  446     	LGOTO	_00135_DS_
                                    1-  447     	.line	102, "main.c"; 	IntFlag = 0;
     0007 1Crr                      1-  448     	BCR	_Status,0
                                    1-  449     	.line	103, "main.c"; 	char kclick = keyRead(0x20 & (~PORTA));
     0008 07rr                      1-  450     	COMR	_PORTA,W
                                    1-  451     	BANKSEL	r0x102E
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  452     	MOVAR	r0x102E
     000B 2120                      1-  453     	MOVIA	0x20
     000C 10rr                      1-  454     	ANDAR	r0x102E,F
     000D 01rr                      1-  455     	MOVR	r0x102E,W
     000E 2rrr                      1-  456     	LCALL	_keyRead
                                    1-  457     	BANKSEL	r0x102E
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1-  458     	MOVAR	r0x102E
                                    1-  459     	.line	104, "main.c"; 	if(kclick == 1 && R_AIN4_DATA < 1974)
     0011 2401                      1-  460     	XORIA	0x01
     0012 0903                      1-  461     	BTRSS	STATUS,2
     0013 3rrr                      1-  462     	LGOTO	_00118_DS_
                                    1-  463     ;;unsigned compare: left < lit (0x7B6=1974), size=2
     0014 2107                      1-  464     	MOVIA	0x07
                                    1-  465     	BANKSEL	_R_AIN4_DATA
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 04rr                      1-  466     	SUBAR	(_R_AIN4_DATA + 1),W
     0017 0903                      1-  467     	BTRSS	STATUS,2
     0018 3rrr                      1-  468     	LGOTO	_00172_DS_
     0019 21B6                      1-  469     	MOVIA	0xb6
     001A 04rr                      1-  470     	SUBAR	_R_AIN4_DATA,W
     001B                           1-  471     _00172_DS_:
     001B 0C03                      1-  472     	BTRSC	STATUS,0
     001C 3rrr                      1-  473     	LGOTO	_00118_DS_
                                    1-  474     	.line	106, "main.c"; 	ledTime = 500;
     001D 21F4                      1-  475     	MOVIA	0xf4
                                    1-  476     	BANKSEL	_ledTime
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  477     	MOVAR	_ledTime
     0020 2101                      1-  478     	MOVIA	0x01
     0021 00rr                      1-  479     	MOVAR	(_ledTime + 1)
                                    1-  480     ;;unsigned compare: left < lit (0x12=18), size=1
     0022                           1-  481     _00118_DS_:
                                    1-  482     	.line	109, "main.c"; 	if(checkTime < 18)
     0022 2112                      1-  483     	MOVIA	0x12
                                    1-  484     	BANKSEL	_checkTime
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 04rr                      1-  485     	SUBAR	_checkTime,W
     0025 0C03                      1-  486     	BTRSC	STATUS,0
     0026 3rrr                      1-  487     	LGOTO	_00124_DS_
                                    1-  488     	.line	110, "main.c"; 	checkInAD();
     0027 2rrr                      1-  489     	LCALL	_checkInAD
     0028 3rrr                      1-  490     	LGOTO	_00125_DS_
                                    1-  491     ;;unsigned compare: left < lit (0x2D=45), size=1
     0029                           1-  492     _00124_DS_:
                                    1-  493     	.line	111, "main.c"; 	else if(checkTime < 45 && checkTime > 22)
     0029 212D                      1-  494     	MOVIA	0x2d
                                    1-  495     	BANKSEL	_checkTime
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 04rr                      1-  496     	SUBAR	_checkTime,W
     002C 0C03                      1-  497     	BTRSC	STATUS,0
     002D 3rrr                      1-  498     	LGOTO	_00125_DS_
                                    1-  499     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  500     ;;unsigned compare: left >= lit (0x17=23), size=1
     002E 2117                      1-  501     	MOVIA	0x17
     002F 04rr                      1-  502     	SUBAR	_checkTime,W
     0030 0C03                      1-  503     	BTRSC	STATUS,0
                                    1-  504     	.line	112, "main.c"; 	checkBat();
     0031 2rrr                      1-  505     	LCALL	_checkBat
     0032                           1-  506     _00125_DS_:
                                    1-  507     	.line	113, "main.c"; 	if(++checkTime > 50)
                                    1-  508     	BANKSEL	_checkTime
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 05rr                      1-  509     	INCR	_checkTime,F
     0034 2133                      1-  510     	MOVIA	0x33
     0035 04rr                      1-  511     	SUBAR	_checkTime,W
     0036 0C03                      1-  512     	BTRSC	STATUS,0
                                    1-  513     	.line	114, "main.c"; 	checkTime = 0;
     0037 02rr                      1-  514     	CLRR	_checkTime
                                    1-  515     	.line	116, "main.c"; 	setLedStep();
     0038 2rrr                      1-  516     	LCALL	_setLedStep
                                    1-  517     	.line	117, "main.c"; 	if(ledTime > 0)
                                    1-  518     	BANKSEL	_ledTime
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  519     	MOVR	_ledTime,W
     003B 11rr                      1-  520     	IORAR	(_ledTime + 1),W
     003C 0D03                      1-  521     	BTRSC	STATUS,2
     003D 3rrr                      1-  522     	LGOTO	_00132_DS_
                                    1-  523     	.line	119, "main.c"; 	ledTime--;
     003E 21FF                      1-  524     	MOVIA	0xff
     003F 03rr                      1-  525     	ADDAR	_ledTime,F
     0040 0803                      1-  526     	BTRSS	STATUS,0
     0041 06rr                      1-  527     	DECR	(_ledTime + 1),F
                                    1-  528     	.line	120, "main.c"; 	sleepTime = 0;
                                    1-  529     	BANKSEL	_sleepTime
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 02rr                      1-  530     	CLRR	_sleepTime
     0044 3rrr                      1-  531     	LGOTO	_00135_DS_
     0045                           1-  532     _00132_DS_:
                                    1-  533     	.line	124, "main.c"; 	ledStep = 0;
                                    1-  534     	BANKSEL	_ledStep
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 02rr                      1-  535     	CLRR	_ledStep
                                    1-  536     	.line	125, "main.c"; 	if(ledTime == 0 && ++sleepTime > 200)
                                    1-  537     	BANKSEL	_ledTime
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1-  538     	MOVR	_ledTime,W
     0049 11rr                      1-  539     	IORAR	(_ledTime + 1),W
     004A 0903                      1-  540     	BTRSS	STATUS,2
     004B 3rrr                      1-  541     	LGOTO	_00135_DS_
                                    1-  542     	BANKSEL	_sleepTime
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 05rr                      1-  543     	INCR	_sleepTime,F
                                    1-  544     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  545     ;;unsigned compare: left >= lit (0xC9=201), size=1
     004E 21C9                      1-  546     	MOVIA	0xc9
     004F 04rr                      1-  547     	SUBAR	_sleepTime,W
     0050 0803                      1-  548     	BTRSS	STATUS,0
     0051 3rrr                      1-  549     	LGOTO	_00135_DS_
                                    1-  550     	.line	126, "main.c"; 	gotoSleep();
     0052 2rrr                      1-  551     	LCALL	_gotoSleep
     0053 3rrr                      1-  552     	LGOTO	_00135_DS_
                                    1-  553     	.line	129, "main.c"; 	}
                                    1-  554     	RETURN	
     0054 0010                      3-   26 m1      ret
                                    1-  555     ; exit point of _main
                                    1-  557     ;***
                                    1-  558     ;  pBlock Stats: dbName = C
                                    1-  559     ;***
                                    1-  560     ;has an exit
                                    1-  561     ;1 compiler assigned register :
                                    1-  562     ;   r0x1013
                                    1-  563     ;; Starting pCode block
                                    1-  564     .segment "code"; module=main, function=_keyRead
                                    1-  566     ;local variable name mapping:
     0000                           1-  568     _keyRead:
                                    1-  569     ; 2 exit points
                                    1-  570     	.line	411, "main.c"; 	char keyRead(char keyStatus)	
                                    1-  571     	BANKSEL	r0x1013
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  572     	MOVAR	r0x1013
                                    1-  573     	.line	413, "main.c"; 	if(keyStatus)
     0002 01rr                      1-  574     	MOVR	r0x1013,W
     0003 0D03                      1-  575     	BTRSC	STATUS,2
     0004 3rrr                      1-  576     	LGOTO	_00387_DS_
                                    1-  577     	.line	415, "main.c"; 	keyCount++;
                                    1-  578     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  579     	INCR	_keyCount,F
                                    1-  580     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1-  581     	.line	416, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1-  582     	MOVIA	0x64
     0008 04rr                      1-  583     	SUBAR	_keyCount,W
     0009 0803                      1-  584     	BTRSS	STATUS,0
     000A 3rrr                      1-  585     	LGOTO	_00388_DS_
                                    1-  586     	.line	418, "main.c"; 	keyCount = 100;
     000B 2164                      1-  587     	MOVIA	0x64
     000C 00rr                      1-  588     	MOVAR	_keyCount
     000D 3rrr                      1-  589     	LGOTO	_00388_DS_
                                    1-  590     ;;unsigned compare: left < lit (0x8=8), size=1
     000E                           1-  591     _00387_DS_:
                                    1-  592     	.line	423, "main.c"; 	if(keyCount >= 8)
     000E 2108                      1-  593     	MOVIA	0x08
                                    1-  594     	BANKSEL	_keyCount
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1-  595     	SUBAR	_keyCount,W
     0011 0803                      1-  596     	BTRSS	STATUS,0
     0012 3rrr                      1-  597     	LGOTO	_00385_DS_
                                    1-  598     	.line	425, "main.c"; 	keyCount = 0;
     0013 02rr                      1-  599     	CLRR	_keyCount
                                    1-  600     	.line	426, "main.c"; 	return	1;
     0014 2101                      1-  601     	MOVIA	0x01
     0015 3rrr                      1-  602     	LGOTO	_00389_DS_
     0016                           1-  603     _00385_DS_:
                                    1-  604     	.line	428, "main.c"; 	keyCount = 0;
                                    1-  605     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 02rr                      1-  606     	CLRR	_keyCount
     0018                           1-  607     _00388_DS_:
                                    1-  608     	.line	430, "main.c"; 	return 0;
     0018 2100                      1-  609     	MOVIA	0x00
     0019                           1-  610     _00389_DS_:
                                    1-  611     	.line	431, "main.c"; 	}
                                    1-  612     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1-  613     ; exit point of _keyRead
                                    1-  615     ;***
                                    1-  616     ;  pBlock Stats: dbName = C
                                    1-  617     ;***
                                    1-  618     ;has an exit
                                    1-  619     ;functions called:
                                    1-  620     ;   _delay
                                    1-  621     ;   _LedInput
                                    1-  622     ;   _delay
                                    1-  623     ;   _LedInput
                                    1-  624     ;1 compiler assigned register :
                                    1-  625     ;   r0x1016
                                    1-  626     ;; Starting pCode block
                                    1-  627     .segment "code"; module=main, function=_LED4ON
     0000                           1-  629     _LED4ON:
                                    1-  630     ; 2 exit points
                                    1-  631     	.line	401, "main.c"; 	IOSTA &= 0XFE;
     0000 001r                      1-  632     	IOSTR	_IOSTA
                                    1-  633     	BANKSEL	r0x1016
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  634     	MOVAR	r0x1016
     0003 1Crr                      1-  635     	BCR	r0x1016,0
     0004 01rr                      1-  636     	MOVR	r0x1016,W
     0005 000r                      1-  637     	IOST	_IOSTA
                                    1-  638     	.line	402, "main.c"; 	IOSTB &= 0xF7;
     0006 001r                      1-  639     	IOSTR	_IOSTB
     0007 00rr                      1-  640     	MOVAR	r0x1016
     0008 1Drr                      1-  641     	BCR	r0x1016,3
     0009 01rr                      1-  642     	MOVR	r0x1016,W
     000A 000r                      1-  643     	IOST	_IOSTB
                                    1-  644     	.line	403, "main.c"; 	PORTA &= 0XFE;
     000B 1Crr                      1-  645     	BCR	_PORTA,0
                                    1-  646     	.line	404, "main.c"; 	PORTB |= 0x08;
     000C 19rr                      1-  647     	BSR	_PORTB,3
                                    1-  648     	.line	405, "main.c"; 	delay(100);
     000D 2164                      1-  649     	MOVIA	0x64
     000E 2rrr                      1-  650     	LCALL	_delay
                                    1-  651     	.line	406, "main.c"; 	LedInput();
     000F 2rrr                      1-  652     	LCALL	_LedInput
                                    1-  653     	.line	407, "main.c"; 	}
                                    1-  654     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1-  655     ; exit point of _LED4ON
                                    1-  657     ;***
                                    1-  658     ;  pBlock Stats: dbName = C
                                    1-  659     ;***
                                    1-  660     ;has an exit
                                    1-  661     ;functions called:
                                    1-  662     ;   _delay
                                    1-  663     ;   _LedInput
                                    1-  664     ;   _delay
                                    1-  665     ;   _LedInput
                                    1-  666     ;1 compiler assigned register :
                                    1-  667     ;   r0x1017
                                    1-  668     ;; Starting pCode block
                                    1-  669     .segment "code"; module=main, function=_LED3ON
     0000                           1-  671     _LED3ON:
                                    1-  672     ; 2 exit points
                                    1-  673     	.line	391, "main.c"; 	IOSTA &= 0XFE;
     0000 001r                      1-  674     	IOSTR	_IOSTA
                                    1-  675     	BANKSEL	r0x1017
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  676     	MOVAR	r0x1017
     0003 1Crr                      1-  677     	BCR	r0x1017,0
     0004 01rr                      1-  678     	MOVR	r0x1017,W
     0005 000r                      1-  679     	IOST	_IOSTA
                                    1-  680     	.line	392, "main.c"; 	IOSTB &= 0xF7;
     0006 001r                      1-  681     	IOSTR	_IOSTB
     0007 00rr                      1-  682     	MOVAR	r0x1017
     0008 1Drr                      1-  683     	BCR	r0x1017,3
     0009 01rr                      1-  684     	MOVR	r0x1017,W
     000A 000r                      1-  685     	IOST	_IOSTB
                                    1-  686     	.line	393, "main.c"; 	PORTA |= 0X01;
     000B 18rr                      1-  687     	BSR	_PORTA,0
                                    1-  688     	.line	394, "main.c"; 	PORTB &= 0xF7;
     000C 1Drr                      1-  689     	BCR	_PORTB,3
                                    1-  690     	.line	395, "main.c"; 	delay(100);
     000D 2164                      1-  691     	MOVIA	0x64
     000E 2rrr                      1-  692     	LCALL	_delay
                                    1-  693     	.line	396, "main.c"; 	LedInput();
     000F 2rrr                      1-  694     	LCALL	_LedInput
                                    1-  695     	.line	397, "main.c"; 	}
                                    1-  696     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1-  697     ; exit point of _LED3ON
                                    1-  699     ;***
                                    1-  700     ;  pBlock Stats: dbName = C
                                    1-  701     ;***
                                    1-  702     ;has an exit
                                    1-  703     ;functions called:
                                    1-  704     ;   _delay
                                    1-  705     ;   _LedInput
                                    1-  706     ;   _delay
                                    1-  707     ;   _LedInput
                                    1-  708     ;1 compiler assigned register :
                                    1-  709     ;   r0x1018
                                    1-  710     ;; Starting pCode block
                                    1-  711     .segment "code"; module=main, function=_LED2ON
     0000                           1-  713     _LED2ON:
                                    1-  714     ; 2 exit points
                                    1-  715     	.line	382, "main.c"; 	IOSTA &= 0X7E;
     0000 001r                      1-  716     	IOSTR	_IOSTA
                                    1-  717     	BANKSEL	r0x1018
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  718     	MOVAR	r0x1018
     0003 217E                      1-  719     	MOVIA	0x7e
     0004 10rr                      1-  720     	ANDAR	r0x1018,F
     0005 01rr                      1-  721     	MOVR	r0x1018,W
     0006 000r                      1-  722     	IOST	_IOSTA
                                    1-  723     	.line	383, "main.c"; 	PORTA |= 0X80;
     0007 1Brr                      1-  724     	BSR	_PORTA,7
                                    1-  725     	.line	384, "main.c"; 	PORTA &= 0xFE;
     0008 1Crr                      1-  726     	BCR	_PORTA,0
                                    1-  727     	.line	385, "main.c"; 	delay(100);
     0009 2164                      1-  728     	MOVIA	0x64
     000A 2rrr                      1-  729     	LCALL	_delay
                                    1-  730     	.line	386, "main.c"; 	LedInput();
     000B 2rrr                      1-  731     	LCALL	_LedInput
                                    1-  732     	.line	387, "main.c"; 	}
                                    1-  733     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1-  734     ; exit point of _LED2ON
                                    1-  736     ;***
                                    1-  737     ;  pBlock Stats: dbName = C
                                    1-  738     ;***
                                    1-  739     ;has an exit
                                    1-  740     ;functions called:
                                    1-  741     ;   _delay
                                    1-  742     ;   _LedInput
                                    1-  743     ;   _delay
                                    1-  744     ;   _LedInput
                                    1-  745     ;1 compiler assigned register :
                                    1-  746     ;   r0x1019
                                    1-  747     ;; Starting pCode block
                                    1-  748     .segment "code"; module=main, function=_LED1ON
     0000                           1-  750     _LED1ON:
                                    1-  751     ; 2 exit points
                                    1-  752     	.line	373, "main.c"; 	IOSTA &= 0X7E;
     0000 001r                      1-  753     	IOSTR	_IOSTA
                                    1-  754     	BANKSEL	r0x1019
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  755     	MOVAR	r0x1019
     0003 217E                      1-  756     	MOVIA	0x7e
     0004 10rr                      1-  757     	ANDAR	r0x1019,F
     0005 01rr                      1-  758     	MOVR	r0x1019,W
     0006 000r                      1-  759     	IOST	_IOSTA
                                    1-  760     	.line	374, "main.c"; 	PORTA |= 0X01;
     0007 18rr                      1-  761     	BSR	_PORTA,0
                                    1-  762     	.line	375, "main.c"; 	PORTA &= 0x7F;
     0008 1Frr                      1-  763     	BCR	_PORTA,7
                                    1-  764     	.line	376, "main.c"; 	delay(100);
     0009 2164                      1-  765     	MOVIA	0x64
     000A 2rrr                      1-  766     	LCALL	_delay
                                    1-  767     	.line	377, "main.c"; 	LedInput();
     000B 2rrr                      1-  768     	LCALL	_LedInput
                                    1-  769     	.line	378, "main.c"; 	}
                                    1-  770     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1-  771     ; exit point of _LED1ON
                                    1-  773     ;***
                                    1-  774     ;  pBlock Stats: dbName = C
                                    1-  775     ;***
                                    1-  776     ;has an exit
                                    1-  777     ;1 compiler assigned register :
                                    1-  778     ;   r0x1014
                                    1-  779     ;; Starting pCode block
                                    1-  780     .segment "code"; module=main, function=_LedInput
     0000                           1-  782     _LedInput:
                                    1-  783     ; 2 exit points
                                    1-  784     	.line	365, "main.c"; 	IOSTA |= 0x81;
     0000 001r                      1-  785     	IOSTR	_IOSTA
                                    1-  786     	BANKSEL	r0x1014
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  787     	MOVAR	r0x1014
     0003 2181                      1-  788     	MOVIA	0x81
     0004 11rr                      1-  789     	IORAR	r0x1014,F
     0005 01rr                      1-  790     	MOVR	r0x1014,W
     0006 000r                      1-  791     	IOST	_IOSTA
                                    1-  792     	.line	366, "main.c"; 	IOSTB |= 0x08;
     0007 001r                      1-  793     	IOSTR	_IOSTB
     0008 00rr                      1-  794     	MOVAR	r0x1014
     0009 19rr                      1-  795     	BSR	r0x1014,3
     000A 01rr                      1-  796     	MOVR	r0x1014,W
     000B 000r                      1-  797     	IOST	_IOSTB
                                    1-  798     	.line	367, "main.c"; 	PORTA &= 0x7E;
     000C 217E                      1-  799     	MOVIA	0x7e
     000D 10rr                      1-  800     	ANDAR	_PORTA,F
                                    1-  801     	.line	368, "main.c"; 	PORTB &= 0xF7;
     000E 1Drr                      1-  802     	BCR	_PORTB,3
                                    1-  803     	.line	369, "main.c"; 	}
                                    1-  804     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1-  805     ; exit point of _LedInput
                                    1-  807     ;***
                                    1-  808     ;  pBlock Stats: dbName = C
                                    1-  809     ;***
                                    1-  810     ;has an exit
                                    1-  811     ;functions called:
                                    1-  812     ;   _LedInput
                                    1-  813     ;   _LedInput
                                    1-  814     ;   _LED4ON
                                    1-  815     ;   _LED3ON
                                    1-  816     ;   _LED2ON
                                    1-  817     ;   _LED1ON
                                    1-  818     ;   _LedInput
                                    1-  819     ;   _LedInput
                                    1-  820     ;   _LED4ON
                                    1-  821     ;   _LED3ON
                                    1-  822     ;   _LED2ON
                                    1-  823     ;   _LED1ON
                                    1-  824     ;; Starting pCode block
                                    1-  825     .segment "code"; module=main, function=_ledShow
     0000                           1-  827     _ledShow:
                                    1-  828     ; 2 exit points
                                    1-  829     	.line	344, "main.c"; 	LedInput();
     0000 2rrr                      1-  830     	LCALL	_LedInput
                                    1-  831     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  832     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1-  833     	.line	345, "main.c"; 	switch(ledStep)
     0001 2105                      1-  834     	MOVIA	0x05
                                    1-  835     	BANKSEL	_ledStep
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1-  836     	SUBAR	_ledStep,W
     0004 0C03                      1-  837     	BTRSC	STATUS,0
     0005 3rrr                      1-  838     	LGOTO	_00351_DS_
     0006 21rr                      1-  839     	MOVIA	((_00357_DS_ >> 8) & 0xff)
     0007 008A                      1-  840     	MOVAR	PCHBUF
     0008 01rr                      1-  841     	MOVR	_ledStep,W
     0009 25rr                      1-  842     	ADDIA	_00357_DS_
     000A 0C03                      1-  843     	BTRSC	STATUS,0
     000B 058A                      1-  844     	INCR	PCHBUF,F
     000C 0082                      1-  845     	MOVAR	PCL
     000D                           1-  846     _00357_DS_:
     000D 3rrr                      1-  847     	LGOTO	_00345_DS_
     000E 3rrr                      1-  848     	LGOTO	_00349_DS_
     000F 3rrr                      1-  849     	LGOTO	_00348_DS_
     0010 3rrr                      1-  850     	LGOTO	_00347_DS_
     0011 3rrr                      1-  851     	LGOTO	_00346_DS_
     0012                           1-  852     _00345_DS_:
                                    1-  853     	.line	348, "main.c"; 	LedInput();
     0012 2rrr                      1-  854     	LCALL	_LedInput
                                    1-  855     	.line	349, "main.c"; 	break;
     0013 3rrr                      1-  856     	LGOTO	_00351_DS_
     0014                           1-  857     _00346_DS_:
                                    1-  858     	.line	351, "main.c"; 	LED4ON();
     0014 2rrr                      1-  859     	LCALL	_LED4ON
     0015                           1-  860     _00347_DS_:
                                    1-  861     	.line	353, "main.c"; 	LED3ON();
     0015 2rrr                      1-  862     	LCALL	_LED3ON
     0016                           1-  863     _00348_DS_:
                                    1-  864     	.line	355, "main.c"; 	LED2ON();
     0016 2rrr                      1-  865     	LCALL	_LED2ON
     0017                           1-  866     _00349_DS_:
                                    1-  867     	.line	357, "main.c"; 	LED1ON();
     0017 2rrr                      1-  868     	LCALL	_LED1ON
     0018                           1-  869     _00351_DS_:
                                    1-  870     	.line	360, "main.c"; 	}
                                    1-  871     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1-  872     ; exit point of _ledShow
                                    1-  874     ;***
                                    1-  875     ;  pBlock Stats: dbName = C
                                    1-  876     ;***
                                    1-  877     ;has an exit
                                    1-  878     ;2 compiler assigned registers:
                                    1-  879     ;   r0x1014
                                    1-  880     ;   r0x1015
                                    1-  881     ;; Starting pCode block
                                    1-  882     .segment "code"; module=main, function=_delay
                                    1-  884     ;local variable name mapping:
     0000                           1-  887     _delay:
                                    1-  888     ; 2 exit points
                                    1-  889     	.line	336, "main.c"; 	void delay(u8t time)
                                    1-  890     	BANKSEL	r0x1014
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  891     	MOVAR	r0x1014
                                    1-  892     	.line	338, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  893     	BANKSEL	r0x1015
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  894     	CLRR	r0x1015
     0004                           1-  895     _00338_DS_:
                                    1-  896     	BANKSEL	r0x1014
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1-  897     	MOVR	r0x1014,W
                                    1-  898     	BANKSEL	r0x1015
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1-  899     	SUBAR	r0x1015,W
     0008 0C03                      1-  900     	BTRSC	STATUS,0
     0009 3rrr                      1-  901     	LGOTO	_00340_DS_
                                    1-  902     	.line	339, "main.c"; 	NOP();
     000A 0000                      1-  903     	nop
                                    1-  904     	.line	338, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  905     	BANKSEL	r0x1015
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1-  906     	INCR	r0x1015,F
     000D 3rrr                      1-  907     	LGOTO	_00338_DS_
     000E                           1-  908     _00340_DS_:
                                    1-  909     	.line	340, "main.c"; 	}
                                    1-  910     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1-  911     ; exit point of _delay
                                    1-  913     ;***
                                    1-  914     ;  pBlock Stats: dbName = C
                                    1-  915     ;***
                                    1-  916     ;has an exit
                                    1-  917     ;; Starting pCode block
                                    1-  918     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  920     _F_wait_eoc:
                                    1-  921     ; 2 exit points
     0000                           1-  922     _00331_DS_:
                                    1-  923     	.line	331, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  924     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  925     	LGOTO	_00331_DS_
                                    1-  926     	.line	333, "main.c"; 	}
                                    1-  927     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  928     ; exit point of _F_wait_eoc
                                    1-  930     ;***
                                    1-  931     ;  pBlock Stats: dbName = C
                                    1-  932     ;***
                                    1-  933     ;has an exit
                                    1-  934     ;functions called:
                                    1-  935     ;   _delay
                                    1-  936     ;   _delay
                                    1-  937     ;; Starting pCode block
                                    1-  938     .segment "code"; module=main, function=_initAD
     0000                           1-  940     _initAD:
                                    1-  941     ; 2 exit points
                                    1-  942     	.line	306, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1-  943     	MOVIA	0x84
     0001 00rr                      1-  944     	MOVAR	_ADMD
                                    1-  945     	.line	309, "main.c"; 	ADVREFH = C_Vrefh_4V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 2102                      1-  946     	MOVIA	0x02
     0003 00rr                      1-  947     	MOVAR	_ADVREFH
                                    1-  948     	.line	316, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0004 2110                      1-  949     	MOVIA	0x10
     0005 00rr                      1-  950     	MOVAR	_ADR
                                    1-  951     	.line	318, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0006 2103                      1-  952     	MOVIA	0x03
     0007 00rr                      1-  953     	MOVAR	_ADCR
                                    1-  954     	.line	321, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0008 1Arr                      1-  955     	BSR	_ADMDbits,4
                                    1-  956     	.line	322, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0009 2164                      1-  957     	MOVIA	0x64
     000A 2rrr                      1-  958     	LCALL	_delay
                                    1-  959     	.line	325, "main.c"; 	}
                                    1-  960     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1-  961     ; exit point of _initAD
                                    1-  963     ;***
                                    1-  964     ;  pBlock Stats: dbName = C
                                    1-  965     ;***
                                    1-  966     ;has an exit
                                    1-  967     ;functions called:
                                    1-  968     ;   _delay
                                    1-  969     ;   _F_wait_eoc
                                    1-  970     ;   _delay
                                    1-  971     ;   _F_wait_eoc
                                    1-  972     ;6 compiler assigned registers:
                                    1-  973     ;   r0x101A
                                    1-  974     ;   r0x101B
                                    1-  975     ;   r0x101C
                                    1-  976     ;   r0x101D
                                    1-  977     ;   r0x101E
                                    1-  978     ;   r0x101F
                                    1-  979     ;; Starting pCode block
                                    1-  980     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1-  982     ;local variable name mapping:
     0000                           1-  985     _F_AIN4_Convert:
                                    1-  986     ; 2 exit points
                                    1-  987     	.line	287, "main.c"; 	void F_AIN4_Convert(char count)
                                    1-  988     	BANKSEL	r0x101A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  989     	MOVAR	r0x101A
                                    1-  990     	.line	289, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1-  991     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  992     	CLRR	_R_AIN4_DATA_LB
                                    1-  993     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  994     	CLRR	_R_AIN4_DATA
     0006 02rr                      1-  995     	CLRR	(_R_AIN4_DATA + 1)
                                    1-  996     	.line	291, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  997     	MOVIA	0x94
     0008 00rr                      1-  998     	MOVAR	_ADMD
                                    1-  999     	.line	292, "main.c"; 	delay(200);	
     0009 21C8                      1- 1000     	MOVIA	0xc8
     000A 2rrr                      1- 1001     	LCALL	_delay
                                    1- 1002     	.line	293, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1003     	MOVIA	0x01
                                    1- 1004     	BANKSEL	r0x101B
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1005     	MOVAR	r0x101B
     000E                           1- 1006     _00320_DS_:
                                    1- 1007     	BANKSEL	r0x101B
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1008     	MOVR	r0x101B,W
                                    1- 1009     	BANKSEL	r0x101A
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1010     	SUBAR	r0x101A,W
     0012 0803                      1- 1011     	BTRSS	STATUS,0
     0013 3rrr                      1- 1012     	LGOTO	_00322_DS_
                                    1- 1013     	.line	295, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1014     	BSR	_ADMDbits,6
                                    1- 1015     	.line	296, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1- 1016     	LCALL	_F_wait_eoc
                                    1- 1017     	.line	297, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1018     	MOVIA	0x0f
     0017 10rr                      1- 1019     	ANDAR	_ADR,W
                                    1- 1020     ;;3	MOVAR	r0x101C
                                    1- 1021     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1- 1022     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1023     	.line	298, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1024     	MOVR	_ADD,W
                                    1- 1025     	BANKSEL	r0x101C
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1026     	MOVAR	r0x101C
                                    1- 1027     ;;1	CLRR	r0x101D
                                    1- 1028     ;;106	MOVR	r0x101C,W
                                    1- 1029     ;;104	MOVAR	r0x101E
     001D 2100                      1- 1030     	MOVIA	0x00
                                    1- 1031     	BANKSEL	r0x101F
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1032     	MOVAR	r0x101F
                                    1- 1033     ;;105	MOVR	r0x101E,W
                                    1- 1034     	BANKSEL	r0x101C
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1035     	MOVR	r0x101C,W
                                    1- 1036     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1037     	ADDAR	_R_AIN4_DATA,F
                                    1- 1038     	BANKSEL	r0x101F
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1039     	MOVR	r0x101F,W
     0026 0C03                      1- 1040     	BTRSC	STATUS,0
     0027 05rr                      1- 1041     	INCR	r0x101F,W
     0028 0D03                      1- 1042     	BTRSC	STATUS,2
     0029 3rrr                      1- 1043     	LGOTO	_00001_DS_
                                    1- 1044     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1045     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1046     _00001_DS_:
                                    1- 1047     	.line	293, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1048     	BANKSEL	r0x101B
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1049     	INCR	r0x101B,F
     002E 3rrr                      1- 1050     	LGOTO	_00320_DS_
     002F                           1- 1051     _00322_DS_:
                                    1- 1052     	.line	300, "main.c"; 	}
                                    1- 1053     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1054     ; exit point of _F_AIN4_Convert
                                    1- 1056     ;***
                                    1- 1057     ;  pBlock Stats: dbName = C
                                    1- 1058     ;***
                                    1- 1059     ;has an exit
                                    1- 1060     ;functions called:
                                    1- 1061     ;   _delay
                                    1- 1062     ;   _F_wait_eoc
                                    1- 1063     ;   _delay
                                    1- 1064     ;   _F_wait_eoc
                                    1- 1065     ;6 compiler assigned registers:
                                    1- 1066     ;   r0x1020
                                    1- 1067     ;   r0x1021
                                    1- 1068     ;   r0x1022
                                    1- 1069     ;   r0x1023
                                    1- 1070     ;   r0x1024
                                    1- 1071     ;   r0x1025
                                    1- 1072     ;; Starting pCode block
                                    1- 1073     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1075     ;local variable name mapping:
     0000                           1- 1078     _F_AIN2_Convert:
                                    1- 1079     ; 2 exit points
                                    1- 1080     	.line	270, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1081     	BANKSEL	r0x1020
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1082     	MOVAR	r0x1020
                                    1- 1083     	.line	272, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1084     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1085     	CLRR	_R_AIN2_DATA_LB
                                    1- 1086     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1087     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1088     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1089     	.line	274, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1090     	MOVIA	0x92
     0008 00rr                      1- 1091     	MOVAR	_ADMD
                                    1- 1092     	.line	275, "main.c"; 	delay(200);	
     0009 21C8                      1- 1093     	MOVIA	0xc8
     000A 2rrr                      1- 1094     	LCALL	_delay
                                    1- 1095     	.line	276, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1096     	MOVIA	0x01
                                    1- 1097     	BANKSEL	r0x1021
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1098     	MOVAR	r0x1021
     000E                           1- 1099     _00311_DS_:
                                    1- 1100     	BANKSEL	r0x1021
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1101     	MOVR	r0x1021,W
                                    1- 1102     	BANKSEL	r0x1020
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1103     	SUBAR	r0x1020,W
     0012 0803                      1- 1104     	BTRSS	STATUS,0
     0013 3rrr                      1- 1105     	LGOTO	_00313_DS_
                                    1- 1106     	.line	278, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1107     	BSR	_ADMDbits,6
                                    1- 1108     	.line	279, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1- 1109     	LCALL	_F_wait_eoc
                                    1- 1110     	.line	280, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1111     	MOVIA	0x0f
     0017 10rr                      1- 1112     	ANDAR	_ADR,W
                                    1- 1113     ;;3	MOVAR	r0x1022
                                    1- 1114     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1- 1115     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1116     	.line	281, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1117     	MOVR	_ADD,W
                                    1- 1118     	BANKSEL	r0x1022
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1119     	MOVAR	r0x1022
                                    1- 1120     ;;1	CLRR	r0x1023
                                    1- 1121     ;;103	MOVR	r0x1022,W
                                    1- 1122     ;;101	MOVAR	r0x1024
     001D 2100                      1- 1123     	MOVIA	0x00
                                    1- 1124     	BANKSEL	r0x1025
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1125     	MOVAR	r0x1025
                                    1- 1126     ;;102	MOVR	r0x1024,W
                                    1- 1127     	BANKSEL	r0x1022
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1128     	MOVR	r0x1022,W
                                    1- 1129     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1130     	ADDAR	_R_AIN2_DATA,F
                                    1- 1131     	BANKSEL	r0x1025
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1132     	MOVR	r0x1025,W
     0026 0C03                      1- 1133     	BTRSC	STATUS,0
     0027 05rr                      1- 1134     	INCR	r0x1025,W
     0028 0D03                      1- 1135     	BTRSC	STATUS,2
     0029 3rrr                      1- 1136     	LGOTO	_00002_DS_
                                    1- 1137     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1138     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1139     _00002_DS_:
                                    1- 1140     	.line	276, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1141     	BANKSEL	r0x1021
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1142     	INCR	r0x1021,F
     002E 3rrr                      1- 1143     	LGOTO	_00311_DS_
     002F                           1- 1144     _00313_DS_:
                                    1- 1145     	.line	283, "main.c"; 	}
                                    1- 1146     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1147     ; exit point of _F_AIN2_Convert
                                    1- 1149     ;***
                                    1- 1150     ;  pBlock Stats: dbName = C
                                    1- 1151     ;***
                                    1- 1152     ;has an exit
                                    1- 1153     ;functions called:
                                    1- 1154     ;   _F_AIN2_Convert
                                    1- 1155     ;   _F_AIN2_Convert
                                    1- 1156     ;4 compiler assigned registers:
                                    1- 1157     ;   r0x1026
                                    1- 1158     ;   r0x1027
                                    1- 1159     ;   r0x1028
                                    1- 1160     ;   r0x1029
                                    1- 1161     ;; Starting pCode block
                                    1- 1162     .segment "code"; module=main, function=_checkBat
     0000                           1- 1164     _checkBat:
                                    1- 1165     ; 2 exit points
                                    1- 1166     	.line	220, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1167     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1168     	CLRR	_R_AIN2_DATA_LB
                                    1- 1169     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1170     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1171     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1172     	.line	221, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1173     	MOVIA	0x08
     0006 2rrr                      1- 1174     	LCALL	_F_AIN2_Convert
                                    1- 1175     	.line	222, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1176     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1177     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1178     	ANDIA	0xf0
     000A 00rr                      1- 1179     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1180     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1181     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1182     	ANDIA	0x0f
     000E 11rr                      1- 1183     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1184     	XORAR	_R_AIN2_DATA,F
                                    1- 1185     	.line	223, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1186     	MOVIA	0xf0
                                    1- 1187     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1188     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1189     	.line	224, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1190     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1191     	BANKSEL	r0x1028
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1192     	MOVAR	r0x1028
                                    1- 1193     ;;1	MOVAR	r0x1026
                                    1- 1194     ;;1	CLRR	r0x1027
                                    1- 1195     ;;100	MOVR	r0x1026,W
     0016 2100                      1- 1196     	MOVIA	0x00
                                    1- 1197     	BANKSEL	r0x1029
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1198     	MOVAR	r0x1029
                                    1- 1199     	BANKSEL	r0x1028
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1200     	MOVR	r0x1028,W
                                    1- 1201     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1202     	ADDAR	_R_AIN2_DATA,F
                                    1- 1203     	BANKSEL	r0x1029
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1204     	MOVR	r0x1029,W
     001F 0C03                      1- 1205     	BTRSC	STATUS,0
     0020 05rr                      1- 1206     	INCR	r0x1029,W
     0021 0D03                      1- 1207     	BTRSC	STATUS,2
     0022 3rrr                      1- 1208     	LGOTO	_00003_DS_
                                    1- 1209     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1210     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1211     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1212     _00003_DS_:
                                    1- 1213     	.line	225, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1214     	BCR	STATUS,0
                                    1- 1215     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1216     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1217     	RRR	_R_AIN2_DATA,F
                                    1- 1218     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1219     	BCR	STATUS,0
     002A 13rr                      1- 1220     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1221     	RRR	_R_AIN2_DATA,F
                                    1- 1222     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1223     	BCR	STATUS,0
     002D 13rr                      1- 1224     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1225     	RRR	_R_AIN2_DATA,F
                                    1- 1226     	.line	226, "main.c"; 	if(debug)
                                    1- 1227     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1228     	MOVR	_debug,W
     0031 0D03                      1- 1229     	BTRSC	STATUS,2
     0032 3rrr                      1- 1230     	LGOTO	_00229_DS_
                                    1- 1231     	.line	227, "main.c"; 	R_AIN2_DATA = BATAD;
     0033 2124                      1- 1232     	MOVIA	0x24
                                    1- 1233     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1234     	MOVAR	_R_AIN2_DATA
     0036 2104                      1- 1235     	MOVIA	0x04
     0037 00rr                      1- 1236     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1237     ;;unsigned compare: left < lit (0x3EB=1003), size=2
     0038                           1- 1238     _00229_DS_:
                                    1- 1239     	.line	228, "main.c"; 	if(R_AIN2_DATA < 1003)
     0038 2103                      1- 1240     	MOVIA	0x03
                                    1- 1241     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1242     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1243     	BTRSS	STATUS,2
     003C 3rrr                      1- 1244     	LGOTO	_00297_DS_
     003D 21EB                      1- 1245     	MOVIA	0xeb
     003E 04rr                      1- 1246     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1247     _00297_DS_:
     003F 0C03                      1- 1248     	BTRSC	STATUS,0
     0040 3rrr                      1- 1249     	LGOTO	_00257_DS_
                                    1- 1250     	.line	229, "main.c"; 	minStep = 1;
     0041 2101                      1- 1251     	MOVIA	0x01
                                    1- 1252     	BANKSEL	_minStep
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 00rr                      1- 1253     	MOVAR	_minStep
     0044 3rrr                      1- 1254     	LGOTO	_00259_DS_
                                    1- 1255     ;;unsigned compare: left < lit (0x41A=1050), size=2
     0045                           1- 1256     _00257_DS_:
                                    1- 1257     	.line	230, "main.c"; 	else if(R_AIN2_DATA < 1050)
     0045 2104                      1- 1258     	MOVIA	0x04
                                    1- 1259     	BANKSEL	_R_AIN2_DATA
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 04rr                      1- 1260     	SUBAR	(_R_AIN2_DATA + 1),W
     0048 0903                      1- 1261     	BTRSS	STATUS,2
     0049 3rrr                      1- 1262     	LGOTO	_00298_DS_
     004A 211A                      1- 1263     	MOVIA	0x1a
     004B 04rr                      1- 1264     	SUBAR	_R_AIN2_DATA,W
     004C                           1- 1265     _00298_DS_:
     004C 0C03                      1- 1266     	BTRSC	STATUS,0
     004D 3rrr                      1- 1267     	LGOTO	_00254_DS_
                                    1- 1268     	.line	232, "main.c"; 	if(minStep == 1)
                                    1- 1269     	BANKSEL	_minStep
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1- 1270     	MOVR	_minStep,W
     0050 2401                      1- 1271     	XORIA	0x01
     0051 0903                      1- 1272     	BTRSS	STATUS,2
     0052 3rrr                      1- 1273     	LGOTO	_00233_DS_
                                    1- 1274     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1275     ;;unsigned compare: left >= lit (0x3F3=1011), size=2
                                    1- 1276     	.line	234, "main.c"; 	if(R_AIN2_DATA > 1010)
     0053 2103                      1- 1277     	MOVIA	0x03
                                    1- 1278     	BANKSEL	_R_AIN2_DATA
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 04rr                      1- 1279     	SUBAR	(_R_AIN2_DATA + 1),W
     0056 0903                      1- 1280     	BTRSS	STATUS,2
     0057 3rrr                      1- 1281     	LGOTO	_00299_DS_
     0058 21F3                      1- 1282     	MOVIA	0xf3
     0059 04rr                      1- 1283     	SUBAR	_R_AIN2_DATA,W
     005A                           1- 1284     _00299_DS_:
     005A 0803                      1- 1285     	BTRSS	STATUS,0
     005B 3rrr                      1- 1286     	LGOTO	_00259_DS_
                                    1- 1287     	.line	235, "main.c"; 	minStep = 2;
     005C 2102                      1- 1288     	MOVIA	0x02
                                    1- 1289     	BANKSEL	_minStep
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 00rr                      1- 1290     	MOVAR	_minStep
     005F 3rrr                      1- 1291     	LGOTO	_00259_DS_
     0060                           1- 1292     _00233_DS_:
                                    1- 1293     	.line	238, "main.c"; 	minStep = 2;
     0060 2102                      1- 1294     	MOVIA	0x02
                                    1- 1295     	BANKSEL	_minStep
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 00rr                      1- 1296     	MOVAR	_minStep
     0063 3rrr                      1- 1297     	LGOTO	_00259_DS_
                                    1- 1298     ;;unsigned compare: left < lit (0x448=1096), size=2
     0064                           1- 1299     _00254_DS_:
                                    1- 1300     	.line	240, "main.c"; 	else if(R_AIN2_DATA < 1096)
     0064 2104                      1- 1301     	MOVIA	0x04
                                    1- 1302     	BANKSEL	_R_AIN2_DATA
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 04rr                      1- 1303     	SUBAR	(_R_AIN2_DATA + 1),W
     0067 0903                      1- 1304     	BTRSS	STATUS,2
     0068 3rrr                      1- 1305     	LGOTO	_00300_DS_
     0069 2148                      1- 1306     	MOVIA	0x48
     006A 04rr                      1- 1307     	SUBAR	_R_AIN2_DATA,W
     006B                           1- 1308     _00300_DS_:
     006B 0C03                      1- 1309     	BTRSC	STATUS,0
     006C 3rrr                      1- 1310     	LGOTO	_00251_DS_
                                    1- 1311     	.line	242, "main.c"; 	if(minStep == 2)
                                    1- 1312     	BANKSEL	_minStep
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1- 1313     	MOVR	_minStep,W
     006F 2402                      1- 1314     	XORIA	0x02
     0070 0903                      1- 1315     	BTRSS	STATUS,2
     0071 3rrr                      1- 1316     	LGOTO	_00238_DS_
                                    1- 1317     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1318     ;;unsigned compare: left >= lit (0x420=1056), size=2
                                    1- 1319     	.line	244, "main.c"; 	if(R_AIN2_DATA > 1055)
     0072 2104                      1- 1320     	MOVIA	0x04
                                    1- 1321     	BANKSEL	_R_AIN2_DATA
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 04rr                      1- 1322     	SUBAR	(_R_AIN2_DATA + 1),W
     0075 0903                      1- 1323     	BTRSS	STATUS,2
     0076 3rrr                      1- 1324     	LGOTO	_00301_DS_
     0077 2120                      1- 1325     	MOVIA	0x20
     0078 04rr                      1- 1326     	SUBAR	_R_AIN2_DATA,W
     0079                           1- 1327     _00301_DS_:
     0079 0803                      1- 1328     	BTRSS	STATUS,0
     007A 3rrr                      1- 1329     	LGOTO	_00259_DS_
                                    1- 1330     	.line	245, "main.c"; 	minStep = 3;
     007B 2103                      1- 1331     	MOVIA	0x03
                                    1- 1332     	BANKSEL	_minStep
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 00rr                      1- 1333     	MOVAR	_minStep
     007E 3rrr                      1- 1334     	LGOTO	_00259_DS_
     007F                           1- 1335     _00238_DS_:
                                    1- 1336     	.line	248, "main.c"; 	minStep = 3;
     007F 2103                      1- 1337     	MOVIA	0x03
                                    1- 1338     	BANKSEL	_minStep
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 00rr                      1- 1339     	MOVAR	_minStep
     0082 3rrr                      1- 1340     	LGOTO	_00259_DS_
                                    1- 1341     ;;unsigned compare: left < lit (0x474=1140), size=2
     0083                           1- 1342     _00251_DS_:
                                    1- 1343     	.line	250, "main.c"; 	else if(R_AIN2_DATA < 1140)
     0083 2104                      1- 1344     	MOVIA	0x04
                                    1- 1345     	BANKSEL	_R_AIN2_DATA
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 04rr                      1- 1346     	SUBAR	(_R_AIN2_DATA + 1),W
     0086 0903                      1- 1347     	BTRSS	STATUS,2
     0087 3rrr                      1- 1348     	LGOTO	_00302_DS_
     0088 2174                      1- 1349     	MOVIA	0x74
     0089 04rr                      1- 1350     	SUBAR	_R_AIN2_DATA,W
     008A                           1- 1351     _00302_DS_:
     008A 0C03                      1- 1352     	BTRSC	STATUS,0
     008B 3rrr                      1- 1353     	LGOTO	_00248_DS_
                                    1- 1354     	.line	252, "main.c"; 	if(minStep == 3)
                                    1- 1355     	BANKSEL	_minStep
     008C rrrr                      3-   71 m1      .banksel ram_address
     008D 01rr                      1- 1356     	MOVR	_minStep,W
     008E 2403                      1- 1357     	XORIA	0x03
     008F 0903                      1- 1358     	BTRSS	STATUS,2
     0090 3rrr                      1- 1359     	LGOTO	_00243_DS_
                                    1- 1360     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1361     ;;unsigned compare: left >= lit (0x44D=1101), size=2
                                    1- 1362     	.line	254, "main.c"; 	if(R_AIN2_DATA > 1100)
     0091 2104                      1- 1363     	MOVIA	0x04
                                    1- 1364     	BANKSEL	_R_AIN2_DATA
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 04rr                      1- 1365     	SUBAR	(_R_AIN2_DATA + 1),W
     0094 0903                      1- 1366     	BTRSS	STATUS,2
     0095 3rrr                      1- 1367     	LGOTO	_00303_DS_
     0096 214D                      1- 1368     	MOVIA	0x4d
     0097 04rr                      1- 1369     	SUBAR	_R_AIN2_DATA,W
     0098                           1- 1370     _00303_DS_:
     0098 0803                      1- 1371     	BTRSS	STATUS,0
     0099 3rrr                      1- 1372     	LGOTO	_00259_DS_
                                    1- 1373     	.line	255, "main.c"; 	minStep = 4;
     009A 2104                      1- 1374     	MOVIA	0x04
                                    1- 1375     	BANKSEL	_minStep
     009B rrrr                      3-   71 m1      .banksel ram_address
     009C 00rr                      1- 1376     	MOVAR	_minStep
     009D 3rrr                      1- 1377     	LGOTO	_00259_DS_
     009E                           1- 1378     _00243_DS_:
                                    1- 1379     	.line	258, "main.c"; 	minStep = 4;
     009E 2104                      1- 1380     	MOVIA	0x04
                                    1- 1381     	BANKSEL	_minStep
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 00rr                      1- 1382     	MOVAR	_minStep
     00A1 3rrr                      1- 1383     	LGOTO	_00259_DS_
                                    1- 1384     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1385     ;;unsigned compare: left >= lit (0x47F=1151), size=2
     00A2                           1- 1386     _00248_DS_:
                                    1- 1387     	.line	263, "main.c"; 	if(R_AIN2_DATA > 1150)
     00A2 2104                      1- 1388     	MOVIA	0x04
                                    1- 1389     	BANKSEL	_R_AIN2_DATA
     00A3 rrrr                      3-   71 m1      .banksel ram_address
     00A4 04rr                      1- 1390     	SUBAR	(_R_AIN2_DATA + 1),W
     00A5 0903                      1- 1391     	BTRSS	STATUS,2
     00A6 3rrr                      1- 1392     	LGOTO	_00304_DS_
     00A7 217F                      1- 1393     	MOVIA	0x7f
     00A8 04rr                      1- 1394     	SUBAR	_R_AIN2_DATA,W
     00A9                           1- 1395     _00304_DS_:
     00A9 0803                      1- 1396     	BTRSS	STATUS,0
     00AA 3rrr                      1- 1397     	LGOTO	_00259_DS_
                                    1- 1398     	.line	264, "main.c"; 	minStep = 5;
     00AB 2105                      1- 1399     	MOVIA	0x05
                                    1- 1400     	BANKSEL	_minStep
     00AC rrrr                      3-   71 m1      .banksel ram_address
     00AD 00rr                      1- 1401     	MOVAR	_minStep
     00AE                           1- 1402     _00259_DS_:
                                    1- 1403     	.line	267, "main.c"; 	}
                                    1- 1404     	RETURN	
     00AE 0010                      3-   26 m1      ret
                                    1- 1405     ; exit point of _checkBat
                                    1- 1407     ;***
                                    1- 1408     ;  pBlock Stats: dbName = C
                                    1- 1409     ;***
                                    1- 1410     ;has an exit
                                    1- 1411     ;functions called:
                                    1- 1412     ;   _F_AIN4_Convert
                                    1- 1413     ;   _F_AIN4_Convert
                                    1- 1414     ;4 compiler assigned registers:
                                    1- 1415     ;   r0x102A
                                    1- 1416     ;   r0x102B
                                    1- 1417     ;   r0x102C
                                    1- 1418     ;   r0x102D
                                    1- 1419     ;; Starting pCode block
                                    1- 1420     .segment "code"; module=main, function=_checkInAD
     0000                           1- 1422     _checkInAD:
                                    1- 1423     ; 2 exit points
                                    1- 1424     	.line	206, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1425     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1426     	CLRR	_R_AIN4_DATA_LB
                                    1- 1427     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1428     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1429     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1430     	.line	207, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1431     	MOVIA	0x08
     0006 2rrr                      1- 1432     	LCALL	_F_AIN4_Convert
                                    1- 1433     	.line	208, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1434     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1435     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1436     	ANDIA	0xf0
     000A 00rr                      1- 1437     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1438     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1439     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1440     	ANDIA	0x0f
     000E 11rr                      1- 1441     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1442     	XORAR	_R_AIN4_DATA,F
                                    1- 1443     	.line	209, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1444     	MOVIA	0xf0
                                    1- 1445     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1446     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1447     	.line	210, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1448     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1449     	BANKSEL	r0x102C
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1450     	MOVAR	r0x102C
                                    1- 1451     ;;1	MOVAR	r0x102A
                                    1- 1452     ;;1	CLRR	r0x102B
                                    1- 1453     ;;99	MOVR	r0x102A,W
     0016 2100                      1- 1454     	MOVIA	0x00
                                    1- 1455     	BANKSEL	r0x102D
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1456     	MOVAR	r0x102D
                                    1- 1457     	BANKSEL	r0x102C
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1458     	MOVR	r0x102C,W
                                    1- 1459     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1460     	ADDAR	_R_AIN4_DATA,F
                                    1- 1461     	BANKSEL	r0x102D
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1462     	MOVR	r0x102D,W
     001F 0C03                      1- 1463     	BTRSC	STATUS,0
     0020 05rr                      1- 1464     	INCR	r0x102D,W
     0021 0D03                      1- 1465     	BTRSC	STATUS,2
     0022 3rrr                      1- 1466     	LGOTO	_00004_DS_
                                    1- 1467     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1468     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1469     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1470     _00004_DS_:
                                    1- 1471     	.line	211, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1472     	BCR	STATUS,0
                                    1- 1473     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1474     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1475     	RRR	_R_AIN4_DATA,F
                                    1- 1476     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1477     	BCR	STATUS,0
     002A 13rr                      1- 1478     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1479     	RRR	_R_AIN4_DATA,F
                                    1- 1480     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1481     	BCR	STATUS,0
     002D 13rr                      1- 1482     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1483     	RRR	_R_AIN4_DATA,F
                                    1- 1484     	.line	212, "main.c"; 	if(debug)
                                    1- 1485     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1486     	MOVR	_debug,W
     0031 0D03                      1- 1487     	BTRSC	STATUS,2
     0032 3rrr                      1- 1488     	LGOTO	_00223_DS_
                                    1- 1489     	.line	213, "main.c"; 	R_AIN4_DATA = INPUTAD;
     0033 21D0                      1- 1490     	MOVIA	0xd0
                                    1- 1491     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1492     	MOVAR	_R_AIN4_DATA
     0036 2107                      1- 1493     	MOVIA	0x07
     0037 00rr                      1- 1494     	MOVAR	(_R_AIN4_DATA + 1)
     0038                           1- 1495     _00223_DS_:
                                    1- 1496     	.line	214, "main.c"; 	}
                                    1- 1497     	RETURN	
     0038 0010                      3-   26 m1      ret
                                    1- 1498     ; exit point of _checkInAD
                                    1- 1500     ;***
                                    1- 1501     ;  pBlock Stats: dbName = C
                                    1- 1502     ;***
                                    1- 1503     ;has an exit
                                    1- 1504     ;functions called:
                                    1- 1505     ;   _LedInput
                                    1- 1506     ;   _LedInput
                                    1- 1507     ;; Starting pCode block
                                    1- 1508     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1510     _gotoSleep:
                                    1- 1511     ; 2 exit points
                                    1- 1512     	.line	187, "main.c"; 	LedInput();
     0000 2rrr                      1- 1513     	LCALL	_LedInput
                                    1- 1514     	.line	188, "main.c"; 	sleepTime = 0;
                                    1- 1515     	BANKSEL	_sleepTime
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1- 1516     	CLRR	_sleepTime
                                    1- 1517     	.line	189, "main.c"; 	AWUCON = 0x30;
     0003 2130                      1- 1518     	MOVIA	0x30
     0004 00rr                      1- 1519     	MOVAR	_AWUCON
                                    1- 1520     	.line	190, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0005 210B                      1- 1521     	MOVIA	0x0b
     0006 00rr                      1- 1522     	MOVAR	_INTE
                                    1- 1523     	.line	191, "main.c"; 	PCON =  C_LVR_En;	
     0007 2108                      1- 1524     	MOVIA	0x08
     0008 00rr                      1- 1525     	MOVAR	_PCON
                                    1- 1526     	.line	192, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0009 02rr                      1- 1527     	CLRR	_INTF
                                    1- 1528     	.line	193, "main.c"; 	CLRWDT();
     000A 0002                      1- 1529     	clrwdt
                                    1- 1530     	.line	194, "main.c"; 	ENI();
     000B 0004                      1- 1531     	ENI
                                    1- 1532     	.line	195, "main.c"; 	SLEEP();
     000C 0001                      1- 1533     	sleep
                                    1- 1534     	.line	196, "main.c"; 	AWUCON = 0x00;
     000D 02rr                      1- 1535     	CLRR	_AWUCON
                                    1- 1536     	.line	197, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 1537     	MOVIA	0x01
     000F 00rr                      1- 1538     	MOVAR	_INTE
                                    1- 1539     	.line	198, "main.c"; 	INTF = 0;
     0010 02rr                      1- 1540     	CLRR	_INTF
                                    1- 1541     	.line	200, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0011 21A8                      1- 1542     	MOVIA	0xa8
     0012 00rr                      1- 1543     	MOVAR	_PCON
                                    1- 1544     	.line	202, "main.c"; 	}
                                    1- 1545     	RETURN	
     0013 0010                      3-   26 m1      ret
                                    1- 1546     ; exit point of _gotoSleep
                                    1- 1548     ;***
                                    1- 1549     ;  pBlock Stats: dbName = C
                                    1- 1550     ;***
                                    1- 1551     ;has an exit
                                    1- 1552     ;; Starting pCode block
                                    1- 1553     .segment "code"; module=main, function=_initSys
     0000                           1- 1555     _initSys:
                                    1- 1556     ; 2 exit points
                                    1- 1557     	.line	158, "main.c"; 	DISI();
     0000 0013                      1- 1558     	DISI
                                    1- 1559     	.line	159, "main.c"; 	IOSTA = 0xFF;
     0001 21FF                      1- 1560     	MOVIA	0xff
     0002 000r                      1- 1561     	IOST	_IOSTA
                                    1- 1562     	.line	160, "main.c"; 	IOSTB = 0xFF;
     0003 000r                      1- 1563     	IOST	_IOSTB
                                    1- 1564     	.line	161, "main.c"; 	PORTB = 0x00;
     0004 02rr                      1- 1565     	CLRR	_PORTB
                                    1- 1566     	.line	162, "main.c"; 	PORTA = 0x00;
     0005 02rr                      1- 1567     	CLRR	_PORTA
                                    1- 1568     	.line	163, "main.c"; 	APHCON = 0xFF;
     0006 21FF                      1- 1569     	MOVIA	0xff
     0007 000r                      1- 1570     	IOST	_APHCON
                                    1- 1571     	.line	164, "main.c"; 	BPHCON = 0xFF;
     0008 00rr                      1- 1572     	MOVAR	_BPHCON
                                    1- 1573     	.line	166, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0009 2101                      1- 1574     	MOVIA	0x01
     000A 00rr                      1- 1575     	MOVAR	_INTE
                                    1- 1576     	.line	168, "main.c"; 	PCON1 = C_TMR0_Dis;
     000B 0200                      1- 1577     	CLRA	
     000C 000r                      1- 1578     	IOST	_PCON1
                                    1- 1579     	.line	170, "main.c"; 	TMR0 = 55;
     000D 2137                      1- 1580     	MOVIA	0x37
     000E 00rr                      1- 1581     	MOVAR	_TMR0
                                    1- 1582     	.line	171, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     000F 0200                      1- 1583     	CLRA	
     0010 0003                      1- 1584     	T0MD	
                                    1- 1585     	.line	173, "main.c"; 	PCON1 = C_TMR0_En;
     0011 2101                      1- 1586     	MOVIA	0x01
     0012 000r                      1- 1587     	IOST	_PCON1
                                    1- 1588     	.line	176, "main.c"; 	PCON = C_WDT_En | C_LVR_En ;				// Enable WDT ,  Enable LVR
     0013 2188                      1- 1589     	MOVIA	0x88
     0014 00rr                      1- 1590     	MOVAR	_PCON
                                    1- 1591     	.line	179, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0015 2101                      1- 1592     	MOVIA	0x01
     0016 000r                      1- 1593     	IOST	_PCON1
                                    1- 1594     	.line	180, "main.c"; 	ENI();
     0017 0004                      1- 1595     	ENI
                                    1- 1596     	.line	181, "main.c"; 	}
                                    1- 1597     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 1598     ; exit point of _initSys
                                    1- 1600     ;***
                                    1- 1601     ;  pBlock Stats: dbName = C
                                    1- 1602     ;***
                                    1- 1603     ;has an exit
                                    1- 1604     ;; Starting pCode block
                                    1- 1605     .segment "code"; module=main, function=_setLedStep
     0000                           1- 1607     _setLedStep:
                                    1- 1608     ; 2 exit points
                                    1- 1609     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1610     ;;unsigned compare: left >= lit (0x7B7=1975), size=2
                                    1- 1611     	.line	134, "main.c"; 	if(R_AIN4_DATA > 1974)
     0000 2107                      1- 1612     	MOVIA	0x07
                                    1- 1613     	BANKSEL	_R_AIN4_DATA
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1614     	SUBAR	(_R_AIN4_DATA + 1),W
     0003 0903                      1- 1615     	BTRSS	STATUS,2
     0004 3rrr                      1- 1616     	LGOTO	_00205_DS_
     0005 21B7                      1- 1617     	MOVIA	0xb7
     0006 04rr                      1- 1618     	SUBAR	_R_AIN4_DATA,W
     0007                           1- 1619     _00205_DS_:
     0007 0803                      1- 1620     	BTRSS	STATUS,0
     0008 3rrr                      1- 1621     	LGOTO	_00186_DS_
                                    1- 1622     	.line	137, "main.c"; 	ledTime = 500;
     0009 21F4                      1- 1623     	MOVIA	0xf4
                                    1- 1624     	BANKSEL	_ledTime
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1625     	MOVAR	_ledTime
     000C 2101                      1- 1626     	MOVIA	0x01
     000D 00rr                      1- 1627     	MOVAR	(_ledTime + 1)
                                    1- 1628     	.line	138, "main.c"; 	sleepTime = 0;
                                    1- 1629     	BANKSEL	_sleepTime
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 1630     	CLRR	_sleepTime
                                    1- 1631     	.line	139, "main.c"; 	if(++count200ms >= 35)
                                    1- 1632     	BANKSEL	_count200ms
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 05rr                      1- 1633     	INCR	_count200ms,F
                                    1- 1634     ;;unsigned compare: left < lit (0x23=35), size=1
     0012 2123                      1- 1635     	MOVIA	0x23
     0013 04rr                      1- 1636     	SUBAR	_count200ms,W
     0014 0803                      1- 1637     	BTRSS	STATUS,0
     0015 3rrr                      1- 1638     	LGOTO	_00188_DS_
                                    1- 1639     	.line	141, "main.c"; 	count200ms = 0;
     0016 02rr                      1- 1640     	CLRR	_count200ms
                                    1- 1641     	.line	142, "main.c"; 	if(++ledStep > 4)
                                    1- 1642     	BANKSEL	_ledStep
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 05rr                      1- 1643     	INCR	_ledStep,F
                                    1- 1644     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1645     ;;unsigned compare: left >= lit (0x5=5), size=1
     0019 2105                      1- 1646     	MOVIA	0x05
     001A 04rr                      1- 1647     	SUBAR	_ledStep,W
     001B 0803                      1- 1648     	BTRSS	STATUS,0
     001C 3rrr                      1- 1649     	LGOTO	_00188_DS_
                                    1- 1650     	.line	143, "main.c"; 	ledStep = minStep;
                                    1- 1651     	BANKSEL	_minStep
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1652     	MOVR	_minStep,W
                                    1- 1653     	BANKSEL	_ledStep
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 1654     	MOVAR	_ledStep
     0021 3rrr                      1- 1655     	LGOTO	_00188_DS_
                                    1- 1656     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1657     ;;unsigned compare: left >= lit (0x76D=1901), size=2
     0022                           1- 1658     _00186_DS_:
                                    1- 1659     	.line	147, "main.c"; 	else if(R_AIN4_DATA <= 1900)
     0022 2107                      1- 1660     	MOVIA	0x07
                                    1- 1661     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 04rr                      1- 1662     	SUBAR	(_R_AIN4_DATA + 1),W
     0025 0903                      1- 1663     	BTRSS	STATUS,2
     0026 3rrr                      1- 1664     	LGOTO	_00208_DS_
     0027 216D                      1- 1665     	MOVIA	0x6d
     0028 04rr                      1- 1666     	SUBAR	_R_AIN4_DATA,W
     0029                           1- 1667     _00208_DS_:
     0029 0C03                      1- 1668     	BTRSC	STATUS,0
     002A 3rrr                      1- 1669     	LGOTO	_00188_DS_
                                    1- 1670     	.line	150, "main.c"; 	if(ledTime > 0)
                                    1- 1671     	BANKSEL	_ledTime
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 1672     	MOVR	_ledTime,W
     002D 11rr                      1- 1673     	IORAR	(_ledTime + 1),W
     002E 0D03                      1- 1674     	BTRSC	STATUS,2
     002F 3rrr                      1- 1675     	LGOTO	_00188_DS_
                                    1- 1676     	.line	151, "main.c"; 	ledStep = minStep;
                                    1- 1677     	BANKSEL	_minStep
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1- 1678     	MOVR	_minStep,W
                                    1- 1679     	BANKSEL	_ledStep
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1- 1680     	MOVAR	_ledStep
     0034                           1- 1681     _00188_DS_:
                                    1- 1682     	.line	153, "main.c"; 	}
                                    1- 1683     	RETURN	
     0034 0010                      3-   26 m1      ret
                                    1- 1684     ; exit point of _setLedStep
                                    1- 1687     ;	code size estimation:
                                    1- 1688     ;	  591+  122 =   713 instructions ( 1670 byte)
                                    1- 1690     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002C
_00002_DS_              Label    0000002C
_00003_DS_              Label    00000025
_00004_DS_              Label    00000025
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00118_DS_              Label    00000022
_00124_DS_              Label    00000029
_00125_DS_              Label    00000032
_00132_DS_              Label    00000045
_00135_DS_              Label    00000002
_00172_DS_              Label    0000001B
_00186_DS_              Label    00000022
_00188_DS_              Label    00000034
_00205_DS_              Label    00000007
_00208_DS_              Label    00000029
_00223_DS_              Label    00000038
_00229_DS_              Label    00000038
_00233_DS_              Label    00000060
_00238_DS_              Label    0000007F
_00243_DS_              Label    0000009E
_00248_DS_              Label    000000A2
_00251_DS_              Label    00000083
_00254_DS_              Label    00000064
_00257_DS_              Label    00000045
_00259_DS_              Label    000000AE
_00297_DS_              Label    0000003F
_00298_DS_              Label    0000004C
_00299_DS_              Label    0000005A
_00300_DS_              Label    0000006B
_00301_DS_              Label    00000079
_00302_DS_              Label    0000008A
_00303_DS_              Label    00000098
_00304_DS_              Label    000000A9
_00311_DS_              Label    0000000E
_00313_DS_              Label    0000002F
_00320_DS_              Label    0000000E
_00322_DS_              Label    0000002F
_00331_DS_              Label    00000000
_00338_DS_              Label    00000004
_00340_DS_              Label    0000000E
_00345_DS_              Label    00000012
_00346_DS_              Label    00000014
_00347_DS_              Label    00000015
_00348_DS_              Label    00000016
_00349_DS_              Label    00000017
_00351_DS_              Label    00000018
_00357_DS_              Label    0000000D
_00385_DS_              Label    00000016
_00387_DS_              Label    0000000E
_00388_DS_              Label    00000018
_00389_DS_              Label    00000019
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBat               Label    00000000
_checkBatAD             Label    00000000
_checkInAD              Label    00000000
_checkTime              Label    00000000
_CMPCR                  Label    00000000
_count200ms             Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_F_AIN2_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_LedInput               Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_ledTime                Label    00000000
_main                   Label    00000000
_minStep                Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_setLedStep             Label    00000000
_sleepTime              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1013                 Label    00000000
r0x1014                 Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
r0x101A                 Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1025                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
