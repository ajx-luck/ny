
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	___uchar2fs
                                    1-   15     	extern	___schar2fs
                                    1-   16     	extern	___uint2fs
                                    1-   17     	extern	___sint2fs
                                    1-   18     	extern	___ulong2fs
                                    1-   19     	extern	___slong2fs
                                    1-   20     	extern	___fs2uchar
                                    1-   21     	extern	___fs2schar
                                    1-   22     	extern	___fs2uint
                                    1-   23     	extern	___fs2sint
                                    1-   24     	extern	___fs2ulong
                                    1-   25     	extern	___fs2slong
                                    1-   26     	extern	___fsadd
                                    1-   27     	extern	___fssub
                                    1-   28     	extern	___fsmul
                                    1-   29     	extern	___fsdiv
                                    1-   30     	extern	___fslt
                                    1-   31     	extern	___fseq
                                    1-   32     	extern	___fsneq
                                    1-   33     	extern	___fsgt
                                    1-   34     	extern	_msa_init
                                    1-   35     	extern	_msa_read_data
                                    1-   36     	extern	_msa_register_read_continuously
                                    1-   37     	extern	_i2c_write_byte_data
                                    1-   38     	extern	_msa_WriteBytes
                                    1-   39     	extern	_msa_calibrate
                                    1-   40     	extern	_msa_calibrateZ
                                    1-   41     	extern	_msa_ReadBytes
                                    1-   42     	extern	_SW_i2c_udelay
                                    1-   43     	extern	_msa_read_adc
                                    1-   44     	extern	_msa_flip_init
                                    1-   45     	extern	_msa_flip_process
                                    1-   46     	extern	_msa_sqrt
                                    1-   47     	extern	_Delay1000Us
                                    1-   48     	extern	_Delay10Us
                                    1-   49     	extern	_SDAOutput
                                    1-   50     	extern	_SDAInput
                                    1-   51     	extern	_Start24C02
                                    1-   52     	extern	_Stop24C02
                                    1-   53     	extern	_SendAck
                                    1-   54     	extern	_SendNoAck
                                    1-   55     	extern	_RecvAck
                                    1-   56     	extern	_SendByte
                                    1-   57     	extern	_ReadByte
                                    1-   58     	extern	_IIC_Wait_Ack
                                    1-   59     	extern	_IIC_Start
                                    1-   60     	extern	_IIC_Send_Byte
                                    1-   61     	extern	_IIC_Read_Byte
                                    1-   62     	extern	_SDA_OUT
                                    1-   63     	extern	_SDA_IN
                                    1-   64     	extern	_IIC_Ack
                                    1-   65     	extern	_IIC_NAck
                                    1-   66     	extern	_delay_us
                                    1-   67     	extern	_PORTAbits
                                    1-   68     	extern	_PORTBbits
                                    1-   69     	extern	_PCONbits
                                    1-   70     	extern	_BWUCONbits
                                    1-   71     	extern	_ABPLCONbits
                                    1-   72     	extern	_BPHCONbits
                                    1-   73     	extern	_INTEbits
                                    1-   74     	extern	_INTFbits
                                    1-   75     	extern	_AWUCONbits
                                    1-   76     	extern	_INTEDGbits
                                    1-   77     	extern	_RFCbits
                                    1-   78     	extern	_INTE2bits
                                    1-   79     	extern	_offset_z
                                    1-   80     	extern	_isCalibrated
                                    1-   81     	extern	_INDF
                                    1-   82     	extern	_TMR0
                                    1-   83     	extern	_PCL
                                    1-   84     	extern	_STATUS
                                    1-   85     	extern	_FSR
                                    1-   86     	extern	_PORTA
                                    1-   87     	extern	_PORTB
                                    1-   88     	extern	_PCON
                                    1-   89     	extern	_BWUCON
                                    1-   90     	extern	_PCHBUF
                                    1-   91     	extern	_ABPLCON
                                    1-   92     	extern	_BPHCON
                                    1-   93     	extern	_INTE
                                    1-   94     	extern	_INTF
                                    1-   95     	extern	_AWUCON
                                    1-   96     	extern	_INTEDG
                                    1-   97     	extern	_TMRH
                                    1-   98     	extern	_RFC
                                    1-   99     	extern	_TM34RH
                                    1-  100     	extern	_INTE2
                                    1-  101     	extern	_TMR1
                                    1-  102     	extern	_T1CR1
                                    1-  103     	extern	_T1CR2
                                    1-  104     	extern	_PWM1DUTY
                                    1-  105     	extern	_PS1CV
                                    1-  106     	extern	_BZ1CR
                                    1-  107     	extern	_IRCR
                                    1-  108     	extern	_TBHP
                                    1-  109     	extern	_TBHD
                                    1-  110     	extern	_P2CR1
                                    1-  111     	extern	_PWM2DUTY
                                    1-  112     	extern	_OSCCR
                                    1-  113     	extern	_TMR3
                                    1-  114     	extern	_T3CR1
                                    1-  115     	extern	_T3CR2
                                    1-  116     	extern	_PWM3DUTY
                                    1-  117     	extern	_PS3CV
                                    1-  118     	extern	_P4CR1
                                    1-  119     	extern	_PWM4DUTY
                                    1-  120     	extern	_P5CR1
                                    1-  121     	extern	_PWM5DUTY
                                    1-  122     	extern	_PWM5RH
                                    1-  123     	extern	_IOSTA
                                    1-  124     	extern	_IOSTB
                                    1-  125     	extern	_APHCON
                                    1-  126     	extern	_PS0CV
                                    1-  127     	extern	_BODCON
                                    1-  128     	extern	_CMPCR
                                    1-  129     	extern	_PCON1
                                    1-  130     	extern	_T0MD
                                    1-  131     	extern	__nyc_ny8_startup
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     ; global declarations
                                    1-  134     ;--------------------------------------------------------
                                    1-  135     	extern	_getData
                                    1-  136     	extern	_readWordStep
                                    1-  137     	extern	_writeWordStep
                                    1-  138     	extern	_main
                                    1-  139     	extern	_hzH
                                    1-  140     	extern	_hzL
                                    1-  141     	extern	_hz
                                    1-  142     	extern	_workStep
                                    1-  144     	extern PSAVE
                                    1-  145     	extern SSAVE
                                    1-  146     	extern WSAVE
                                    1-  147     	extern STK12
                                    1-  148     	extern STK11
                                    1-  149     	extern STK10
                                    1-  150     	extern STK09
                                    1-  151     	extern STK08
                                    1-  152     	extern STK07
                                    1-  153     	extern STK06
                                    1-  154     	extern STK05
                                    1-  155     	extern STK04
                                    1-  156     	extern STK03
                                    1-  157     	extern STK02
                                    1-  158     	extern STK01
                                    1-  159     	extern STK00
                                    1-  161     .segment "uninit", 0x20000040
 20000040                           1-  162     PSAVE:
                                    1-  163     	.res 1
 20000041                           1-  164     SSAVE:
                                    1-  165     	.res 1
 20000042                           1-  166     WSAVE:
                                    1-  167     	.res 1
 20000043                           1-  168     STK12:
                                    1-  169     	.res 1
 20000044                           1-  170     STK11:
                                    1-  171     	.res 1
 20000045                           1-  172     STK10:
                                    1-  173     	.res 1
 20000046                           1-  174     STK09:
                                    1-  175     	.res 1
 20000047                           1-  176     STK08:
                                    1-  177     	.res 1
 20000048                           1-  178     STK07:
                                    1-  179     	.res 1
 20000049                           1-  180     STK06:
                                    1-  181     	.res 1
 2000004A                           1-  182     STK05:
                                    1-  183     	.res 1
 2000004B                           1-  184     STK04:
                                    1-  185     	.res 1
 2000004C                           1-  186     STK03:
                                    1-  187     	.res 1
 2000004D                           1-  188     STK02:
                                    1-  189     	.res 1
 2000004E                           1-  190     STK01:
                                    1-  191     	.res 1
 2000004F                           1-  192     STK00:
                                    1-  193     	.res 1
                                    1-  195     ;--------------------------------------------------------
                                    1-  196     ; global definitions
                                    1-  197     ;--------------------------------------------------------
                                    1-  198     .segment "uninit"
     0000                           1-  199     _hzH:
                                    1-  200     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     _hzL:
                                    1-  205     	.res	1
                                    1-  208     ;--------------------------------------------------------
                                    1-  209     ; absolute symbol definitions
                                    1-  210     ;--------------------------------------------------------
                                    1-  211     ;--------------------------------------------------------
                                    1-  212     ; compiler-defined variables
                                    1-  213     ;--------------------------------------------------------
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x1006:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x1005:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x1007:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x1008:
                                    1-  225     	.res	1
                                    1-  226     ;--------------------------------------------------------
                                    1-  227     ; initialized data
                                    1-  228     ;--------------------------------------------------------
                                    1-  230     .segment "idata"
     0000                           1-  231     _hz:
     0000 0000 0000                 1-  232     	dw	0x00, 0x00
                                    1-  236     .segment "idata"
     0000                           1-  237     _workStep:
     0000 0001                      1-  238     	dw	0x01
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     ; overlayable items in internal ram 
                                    1-  243     ;--------------------------------------------------------
                                    1-  244     ;	udata_ovr
                                    1-  245     ;--------------------------------------------------------
                                    1-  246     ; reset vector 
                                    1-  247     ;--------------------------------------------------------
                                    1-  248     ORG	0x0000
     0000 3rrr                      1-  249     	LGOTO	__nyc_ny8_startup
                                    1-  250     ;--------------------------------------------------------
                                    1-  251     ; code
                                    1-  252     ;--------------------------------------------------------
                                    1-  253     ;***
                                    1-  254     ;  pBlock Stats: dbName = M
                                    1-  255     ;***
                                    1-  256     ;has an exit
                                    1-  257     ;functions called:
                                    1-  258     ;   _msa_init
                                    1-  259     ;   _getData
                                    1-  260     ;   _msa_init
                                    1-  261     ;   _getData
                                    1-  262     ;; Starting pCode block
                                    1-  263     .segment "code"; module=main, function=_main
     0000                           1-  265     _main:
                                    1-  266     ; 2 exit points
                                    1-  267     	.line	56, "main.c"; 	APHCON = 0xBF;
     0000 21BF                      1-  268     	MOVIA	0xbf
     0001 000r                      1-  269     	IOST	_APHCON
                                    1-  270     	.line	57, "main.c"; 	IOSTA = 0x00;     // Set PB0 & PB1 to input mode,others set to output mode
     0002 0200                      1-  271     	CLRA	
     0003 000r                      1-  272     	IOST	_IOSTA
                                    1-  273     	.line	58, "main.c"; 	IOSTB = 0x00;
     0004 000r                      1-  274     	IOST	_IOSTB
                                    1-  275     	.line	59, "main.c"; 	PORTA = 0x00; 
                                    1-  276     	BANKSEL	_PORTA
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  277     	CLRR	_PORTA
                                    1-  278     	.line	60, "main.c"; 	PORTB = 0x00;                           // PB0��PB1 & PB2 are output High	
     0007 02rr                      1-  279     	CLRR	_PORTB
                                    1-  280     	.line	63, "main.c"; 	msa_init();
     0008 2rrr                      1-  281     	LCALL	_msa_init
     0009                           1-  282     _00118_DS_:
                                    1-  283     	.line	66, "main.c"; 	CLRWDT();			//Clear WDT, this function is defined in ny8command.h
     0009 0002                      1-  284     	clrwdt
                                    1-  285     	.line	67, "main.c"; 	getData();
     000A 2rrr                      1-  286     	LCALL	_getData
     000B 3rrr                      1-  287     	LGOTO	_00118_DS_
                                    1-  288     	.line	69, "main.c"; 	}
                                    1-  289     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1-  290     ; exit point of _main
                                    1-  292     ;***
                                    1-  293     ;  pBlock Stats: dbName = C
                                    1-  294     ;***
                                    1-  295     ;has an exit
                                    1-  296     ;functions called:
                                    1-  297     ;   _msa_ReadBytes
                                    1-  298     ;   _msa_ReadBytes
                                    1-  299     ;   _msa_ReadBytes
                                    1-  300     ;   _msa_ReadBytes
                                    1-  301     ;7 compiler assigned registers:
                                    1-  302     ;   r0x1005
                                    1-  303     ;   r0x1006
                                    1-  304     ;   r0x1007
                                    1-  305     ;   STK02
                                    1-  306     ;   STK01
                                    1-  307     ;   STK00
                                    1-  308     ;   r0x1008
                                    1-  309     ;; Starting pCode block
                                    1-  310     .segment "code"; module=main, function=_getData
     0000                           1-  312     _getData:
                                    1-  313     ; 2 exit points
                                    1-  314     	.line	74, "main.c"; 	msa_ReadBytes(&hzL,MSA_REG_ACC_Z_LSB);
     0000 21rr                      1-  315     	MOVIA	((_hzL + 0) >> 8) & 0xff
                                    1-  316     	BANKSEL	r0x1005
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  317     	MOVAR	r0x1005
     0003 21rr                      1-  318     	MOVIA	(_hzL + 0)
                                    1-  319     	BANKSEL	r0x1006
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  320     	MOVAR	r0x1006
                                    1-  321     	BANKSEL	r0x1007
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  322     	CLRR	r0x1007
     0008 2106                      1-  323     	MOVIA	0x06
     0009 00rr                      1-  324     	MOVAR	STK02
                                    1-  325     	BANKSEL	r0x1006
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1-  326     	MOVR	r0x1006,W
     000C 00rr                      1-  327     	MOVAR	STK01
                                    1-  328     	BANKSEL	r0x1005
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  329     	MOVR	r0x1005,W
     000F 00rr                      1-  330     	MOVAR	STK00
     0010 2100                      1-  331     	MOVIA	0x00
     0011 2rrr                      1-  332     	LCALL	_msa_ReadBytes
                                    1-  333     	.line	75, "main.c"; 	msa_ReadBytes(&hzH,MSA_REG_ACC_Z_MSB);
     0012 21rr                      1-  334     	MOVIA	((_hzH + 0) >> 8) & 0xff
                                    1-  335     	BANKSEL	r0x1005
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1-  336     	MOVAR	r0x1005
     0015 21rr                      1-  337     	MOVIA	(_hzH + 0)
                                    1-  338     	BANKSEL	r0x1006
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1-  339     	MOVAR	r0x1006
                                    1-  340     	BANKSEL	r0x1007
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1-  341     	CLRR	r0x1007
     001A 2107                      1-  342     	MOVIA	0x07
     001B 00rr                      1-  343     	MOVAR	STK02
                                    1-  344     	BANKSEL	r0x1006
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1-  345     	MOVR	r0x1006,W
     001E 00rr                      1-  346     	MOVAR	STK01
                                    1-  347     	BANKSEL	r0x1005
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  348     	MOVR	r0x1005,W
     0021 00rr                      1-  349     	MOVAR	STK00
     0022 2100                      1-  350     	MOVIA	0x00
     0023 2rrr                      1-  351     	LCALL	_msa_ReadBytes
                                    1-  352     	.line	77, "main.c"; 	hz = ((short)(hzH << 8 | hzL))>> 4;
                                    1-  353     	BANKSEL	_hzH
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  354     	MOVR	_hzH,W
                                    1-  355     	BANKSEL	r0x1006
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1-  356     	MOVAR	r0x1006
                                    1-  357     	BANKSEL	r0x1005
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1-  358     	CLRR	r0x1005
                                    1-  359     	BANKSEL	r0x1006
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 0Brr                      1-  360     	BTRSS	r0x1006,7
     002C 3rrr                      1-  361     	LGOTO	_00001_DS_
                                    1-  362     	BANKSEL	r0x1005
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 06rr                      1-  363     	DECR	r0x1005,F
     002F                           1-  364     _00001_DS_:
                                    1-  365     	BANKSEL	r0x1006
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1-  366     	MOVR	r0x1006,W
                                    1-  367     	BANKSEL	r0x1008
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 00rr                      1-  368     	MOVAR	r0x1008
                                    1-  369     	BANKSEL	r0x1007
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1-  370     	CLRR	r0x1007
                                    1-  371     	BANKSEL	_hzL
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1-  372     	MOVR	_hzL,W
                                    1-  373     	BANKSEL	r0x1006
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1-  374     	MOVAR	r0x1006
                                    1-  375     	BANKSEL	r0x1005
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1-  376     	CLRR	r0x1005
                                    1-  377     	BANKSEL	r0x1006
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 0Brr                      1-  378     	BTRSS	r0x1006,7
     003D 3rrr                      1-  379     	LGOTO	_00002_DS_
                                    1-  380     	BANKSEL	r0x1005
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 06rr                      1-  381     	DECR	r0x1005,F
     0040                           1-  382     _00002_DS_:
                                    1-  383     	BANKSEL	r0x1006
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1-  384     	MOVR	r0x1006,W
                                    1-  385     	BANKSEL	r0x1007
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 11rr                      1-  386     	IORAR	r0x1007,F
                                    1-  387     	BANKSEL	r0x1005
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  388     	MOVR	r0x1005,W
                                    1-  389     	BANKSEL	r0x1008
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 11rr                      1-  390     	IORAR	r0x1008,F
                                    1-  391     	BANKSEL	r0x1007
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 15rr                      1-  392     	SWAPR	r0x1007,W
     004A 220F                      1-  393     	ANDIA	0x0f
                                    1-  394     	BANKSEL	_hz
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1-  395     	MOVAR	_hz
                                    1-  396     	BANKSEL	r0x1008
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 15rr                      1-  397     	SWAPR	r0x1008,W
                                    1-  398     	BANKSEL	_hz
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1-  399     	MOVAR	(_hz + 1)
     0051 22F0                      1-  400     	ANDIA	0xf0
     0052 11rr                      1-  401     	IORAR	_hz,F
     0053 12rr                      1-  402     	XORAR	(_hz + 1),F
     0054 21F0                      1-  403     	MOVIA	0xf0
     0055 0Drr                      1-  404     	BTRSC	(_hz + 1),3
     0056 11rr                      1-  405     	IORAR	(_hz + 1),F
                                    1-  406     	.line	78, "main.c"; 	hz &= 0x0FFF;
     0057 210F                      1-  407     	MOVIA	0x0f
     0058 10rr                      1-  408     	ANDAR	(_hz + 1),F
                                    1-  409     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  410     ;;signed compare: left >= lit (0x176=374), size=2, mask=ffff
                                    1-  411     	.line	79, "main.c"; 	if(hz > 0x175 && hz < 0xE00)
     0059 01rr                      1-  412     	MOVR	(_hz + 1),W
     005A 2580                      1-  413     	ADDIA	0x80
     005B 257F                      1-  414     	ADDIA	0x7f
     005C 0903                      1-  415     	BTRSS	STATUS,2
     005D 3rrr                      1-  416     	LGOTO	_00135_DS_
     005E 2176                      1-  417     	MOVIA	0x76
     005F 04rr                      1-  418     	SUBAR	_hz,W
     0060                           1-  419     _00135_DS_:
     0060 0803                      1-  420     	BTRSS	STATUS,0
     0061 3rrr                      1-  421     	LGOTO	_00124_DS_
                                    1-  422     ;;signed compare: left < lit (0xE00=3584), size=2, mask=ffff
                                    1-  423     	BANKSEL	_hz
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 01rr                      1-  424     	MOVR	(_hz + 1),W
     0064 2580                      1-  425     	ADDIA	0x80
     0065 2572                      1-  426     	ADDIA	0x72
     0066 0903                      1-  427     	BTRSS	STATUS,2
     0067 3rrr                      1-  428     	LGOTO	_00136_DS_
     0068 2100                      1-  429     	MOVIA	0x00
     0069 04rr                      1-  430     	SUBAR	_hz,W
     006A                           1-  431     _00136_DS_:
     006A 0C03                      1-  432     	BTRSC	STATUS,0
     006B 3rrr                      1-  433     	LGOTO	_00124_DS_
                                    1-  434     	.line	81, "main.c"; 	return 1;
     006C 2101                      1-  435     	MOVIA	0x01
     006D 3rrr                      1-  436     	LGOTO	_00127_DS_
     006E                           1-  437     _00124_DS_:
                                    1-  438     	.line	85, "main.c"; 	return 0;
     006E 2100                      1-  439     	MOVIA	0x00
     006F                           1-  440     _00127_DS_:
                                    1-  441     	.line	87, "main.c"; 	}
                                    1-  442     	RETURN	
     006F 0010                      3-   26 m1      ret
                                    1-  443     ; exit point of _getData
                                    1-  445     ;***
                                    1-  446     ;  pBlock Stats: dbName = C
                                    1-  447     ;***
                                    1-  448     ;has an exit
                                    1-  449     ;functions called:
                                    1-  450     ;   _Start24C02
                                    1-  451     ;   _SendByte
                                    1-  452     ;   _RecvAck
                                    1-  453     ;   _SendByte
                                    1-  454     ;   _RecvAck
                                    1-  455     ;   _SendByte
                                    1-  456     ;   _RecvAck
                                    1-  457     ;   _Stop24C02
                                    1-  458     ;   _Start24C02
                                    1-  459     ;   _SendByte
                                    1-  460     ;   _RecvAck
                                    1-  461     ;   _SendByte
                                    1-  462     ;   _RecvAck
                                    1-  463     ;   _SendByte
                                    1-  464     ;   _RecvAck
                                    1-  465     ;   _Stop24C02
                                    1-  466     ;; Starting pCode block
                                    1-  467     .segment "code"; module=main, function=_writeWordStep
     0000                           1-  469     _writeWordStep:
                                    1-  470     ; 2 exit points
                                    1-  471     	.line	35, "main.c"; 	APHCON = 0xBF;	//��PB7����������(SDA)
     0000 21BF                      1-  472     	MOVIA	0xbf
     0001 000r                      1-  473     	IOST	_APHCON
                                    1-  474     	.line	36, "main.c"; 	IOSTA = 0;
     0002 0200                      1-  475     	CLRA	
     0003 000r                      1-  476     	IOST	_IOSTA
                                    1-  477     	.line	37, "main.c"; 	IOSTB = C_PB0_Input;
     0004 2101                      1-  478     	MOVIA	0x01
     0005 000r                      1-  479     	IOST	_IOSTB
                                    1-  480     	.line	38, "main.c"; 	SCL = 0;
                                    1-  481     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Frr                      1-  482     	BCR	_PORTA,7
                                    1-  483     	.line	40, "main.c"; 	Start24C02();
     0008 2rrr                      1-  484     	LCALL	_Start24C02
                                    1-  485     	.line	41, "main.c"; 	SendByte(0xA0);		//����������ַ��д����
     0009 21A0                      1-  486     	MOVIA	0xa0
     000A 2rrr                      1-  487     	LCALL	_SendByte
                                    1-  488     	.line	42, "main.c"; 	RecvAck();
     000B 2rrr                      1-  489     	LCALL	_RecvAck
                                    1-  490     	.line	43, "main.c"; 	SendByte(0X00);		//����д��ַ
     000C 2100                      1-  491     	MOVIA	0x00
     000D 2rrr                      1-  492     	LCALL	_SendByte
                                    1-  493     	.line	44, "main.c"; 	RecvAck();
     000E 2rrr                      1-  494     	LCALL	_RecvAck
                                    1-  495     	.line	45, "main.c"; 	SendByte(workStep);		//�������ݵ���ַ
                                    1-  496     	BANKSEL	_workStep
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  497     	MOVR	_workStep,W
     0011 2rrr                      1-  498     	LCALL	_SendByte
                                    1-  499     	.line	46, "main.c"; 	RecvAck();
     0012 2rrr                      1-  500     	LCALL	_RecvAck
                                    1-  501     	.line	47, "main.c"; 	Stop24C02();
     0013 2rrr                      1-  502     	LCALL	_Stop24C02
                                    1-  503     	.line	48, "main.c"; 	}
                                    1-  504     	RETURN	
     0014 0010                      3-   26 m1      ret
                                    1-  505     ; exit point of _writeWordStep
                                    1-  507     ;***
                                    1-  508     ;  pBlock Stats: dbName = C
                                    1-  509     ;***
                                    1-  510     ;has an exit
                                    1-  511     ;functions called:
                                    1-  512     ;   _Start24C02
                                    1-  513     ;   _SendByte
                                    1-  514     ;   _RecvAck
                                    1-  515     ;   _SendByte
                                    1-  516     ;   _RecvAck
                                    1-  517     ;   _Start24C02
                                    1-  518     ;   _SendByte
                                    1-  519     ;   _RecvAck
                                    1-  520     ;   _ReadByte
                                    1-  521     ;   _SendNoAck
                                    1-  522     ;   _Stop24C02
                                    1-  523     ;   _Start24C02
                                    1-  524     ;   _SendByte
                                    1-  525     ;   _RecvAck
                                    1-  526     ;   _SendByte
                                    1-  527     ;   _RecvAck
                                    1-  528     ;   _Start24C02
                                    1-  529     ;   _SendByte
                                    1-  530     ;   _RecvAck
                                    1-  531     ;   _ReadByte
                                    1-  532     ;   _SendNoAck
                                    1-  533     ;   _Stop24C02
                                    1-  534     ;; Starting pCode block
                                    1-  535     .segment "code"; module=main, function=_readWordStep
     0000                           1-  537     _readWordStep:
                                    1-  538     ; 2 exit points
                                    1-  539     	.line	14, "main.c"; 	APHCON = 0xBF;	//��PB7����������(SDA)
     0000 21BF                      1-  540     	MOVIA	0xbf
     0001 000r                      1-  541     	IOST	_APHCON
                                    1-  542     	.line	15, "main.c"; 	IOSTA = 0;
     0002 0200                      1-  543     	CLRA	
     0003 000r                      1-  544     	IOST	_IOSTA
                                    1-  545     	.line	16, "main.c"; 	IOSTB = C_PB0_Input;
     0004 2101                      1-  546     	MOVIA	0x01
     0005 000r                      1-  547     	IOST	_IOSTB
                                    1-  548     	.line	17, "main.c"; 	SCL = 0;
                                    1-  549     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Frr                      1-  550     	BCR	_PORTA,7
                                    1-  551     	.line	18, "main.c"; 	Start24C02();
     0008 2rrr                      1-  552     	LCALL	_Start24C02
                                    1-  553     	.line	19, "main.c"; 	SendByte(0xA0);		//����������ַ��д����
     0009 21A0                      1-  554     	MOVIA	0xa0
     000A 2rrr                      1-  555     	LCALL	_SendByte
                                    1-  556     	.line	20, "main.c"; 	RecvAck();
     000B 2rrr                      1-  557     	LCALL	_RecvAck
                                    1-  558     	.line	21, "main.c"; 	SendByte(0X00);		//���Ͷ���ַ
     000C 2100                      1-  559     	MOVIA	0x00
     000D 2rrr                      1-  560     	LCALL	_SendByte
                                    1-  561     	.line	22, "main.c"; 	RecvAck();
     000E 2rrr                      1-  562     	LCALL	_RecvAck
                                    1-  563     	.line	23, "main.c"; 	Start24C02();
     000F 2rrr                      1-  564     	LCALL	_Start24C02
                                    1-  565     	.line	24, "main.c"; 	SendByte(0xA1);		//����������ַ�Ͷ�����
     0010 21A1                      1-  566     	MOVIA	0xa1
     0011 2rrr                      1-  567     	LCALL	_SendByte
                                    1-  568     	.line	25, "main.c"; 	RecvAck();
     0012 2rrr                      1-  569     	LCALL	_RecvAck
                                    1-  570     	.line	26, "main.c"; 	workStep = ReadByte();
     0013 2rrr                      1-  571     	LCALL	_ReadByte
                                    1-  572     	BANKSEL	_workStep
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1-  573     	MOVAR	_workStep
                                    1-  574     	.line	27, "main.c"; 	SendNoAck();
     0016 2rrr                      1-  575     	LCALL	_SendNoAck
                                    1-  576     	.line	28, "main.c"; 	Stop24C02();
     0017 2rrr                      1-  577     	LCALL	_Stop24C02
                                    1-  578     ;;unsigned compare: left < lit (0xB=11), size=1
                                    1-  579     	.line	29, "main.c"; 	if(workStep >= 11 || workStep == 0)
     0018 210B                      1-  580     	MOVIA	0x0b
                                    1-  581     	BANKSEL	_workStep
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 04rr                      1-  582     	SUBAR	_workStep,W
     001B 0C03                      1-  583     	BTRSC	STATUS,0
     001C 3rrr                      1-  584     	LGOTO	_00105_DS_
     001D 01rr                      1-  585     	MOVR	_workStep,W
     001E 0903                      1-  586     	BTRSS	STATUS,2
     001F 3rrr                      1-  587     	LGOTO	_00108_DS_
     0020                           1-  588     _00105_DS_:
                                    1-  589     	.line	30, "main.c"; 	workStep = 1;
     0020 2101                      1-  590     	MOVIA	0x01
                                    1-  591     	BANKSEL	_workStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 00rr                      1-  592     	MOVAR	_workStep
     0023                           1-  593     _00108_DS_:
                                    1-  594     	.line	31, "main.c"; 	}
                                    1-  595     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1-  596     ; exit point of _readWordStep
                                    1-  599     ;	code size estimation:
                                    1-  600     ;	  142+   39 =   181 instructions (  440 byte)
                                    1-  602     	end
                                    1-  602     	end

SYMBOL TABLE            TYPE     VALUE
___fs2schar             Label    00000000
___fs2sint              Label    00000000
___fs2slong             Label    00000000
___fs2uchar             Label    00000000
___fs2uint              Label    00000000
___fs2ulong             Label    00000000
___fsadd                Label    00000000
___fsdiv                Label    00000000
___fseq                 Label    00000000
___fsgt                 Label    00000000
___fslt                 Label    00000000
___fsmul                Label    00000000
___fsneq                Label    00000000
___fssub                Label    00000000
___schar2fs             Label    00000000
___sint2fs              Label    00000000
___slong2fs             Label    00000000
___uchar2fs             Label    00000000
___uint2fs              Label    00000000
___ulong2fs             Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
_00001_DS_              Label    0000002F
_00002_DS_              Label    00000040
_00105_DS_              Label    00000020
_00108_DS_              Label    00000023
_00118_DS_              Label    00000009
_00124_DS_              Label    0000006E
_00127_DS_              Label    0000006F
_00135_DS_              Label    00000060
_00136_DS_              Label    0000006A
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_CMPCR                  Label    00000000
_delay_us               Label    00000000
_Delay1000Us            Label    00000000
_Delay10Us              Label    00000000
_FSR                    Label    00000000
_getData                Label    00000000
_hz                     Label    00000000
_hzH                    Label    00000000
_hzL                    Label    00000000
_i2c_write_byte_data    Label    00000000
_IIC_Ack                Label    00000000
_IIC_NAck               Label    00000000
_IIC_Read_Byte          Label    00000000
_IIC_Send_Byte          Label    00000000
_IIC_Start              Label    00000000
_IIC_Wait_Ack           Label    00000000
_INDF                   Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isCalibrated           Label    00000000
_main                   Label    00000000
_msa_calibrate          Label    00000000
_msa_calibrateZ         Label    00000000
_msa_flip_init          Label    00000000
_msa_flip_process       Label    00000000
_msa_init               Label    00000000
_msa_read_adc           Label    00000000
_msa_read_data          Label    00000000
_msa_ReadBytes          Label    00000000
_msa_register_read_continuously Label    00000000
_msa_sqrt               Label    00000000
_msa_WriteBytes         Label    00000000
_offset_z               Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_ReadByte               Label    00000000
_readWordStep           Label    00000000
_RecvAck                Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_SDA_IN                 Label    00000000
_SDA_OUT                Label    00000000
_SDAInput               Label    00000000
_SDAOutput              Label    00000000
_SendAck                Label    00000000
_SendByte               Label    00000000
_SendNoAck              Label    00000000
_Start24C02             Label    00000000
_STATUS                 Label    00000000
_Stop24C02              Label    00000000
_SW_i2c_udelay          Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workStep               Label    00000000
_writeWordStep          Label    00000000
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1005                 Label    00000000
r0x1006                 Label    00000000
r0x1007                 Label    00000000
r0x1008                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a054d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
