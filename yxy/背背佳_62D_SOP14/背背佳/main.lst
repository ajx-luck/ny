
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	___uchar2fs
                                    1-   15     	extern	___schar2fs
                                    1-   16     	extern	___uint2fs
                                    1-   17     	extern	___sint2fs
                                    1-   18     	extern	___ulong2fs
                                    1-   19     	extern	___slong2fs
                                    1-   20     	extern	___fs2uchar
                                    1-   21     	extern	___fs2schar
                                    1-   22     	extern	___fs2uint
                                    1-   23     	extern	___fs2sint
                                    1-   24     	extern	___fs2ulong
                                    1-   25     	extern	___fs2slong
                                    1-   26     	extern	___fsadd
                                    1-   27     	extern	___fssub
                                    1-   28     	extern	___fsmul
                                    1-   29     	extern	___fsdiv
                                    1-   30     	extern	___fslt
                                    1-   31     	extern	___fseq
                                    1-   32     	extern	___fsneq
                                    1-   33     	extern	___fsgt
                                    1-   34     	extern	_msa_init
                                    1-   35     	extern	_msa_read_data
                                    1-   36     	extern	_msa_get_step
                                    1-   37     	extern	_msa_register_read_continuously
                                    1-   38     	extern	_i2c_write_byte_data
                                    1-   39     	extern	_msa_WriteBytes
                                    1-   40     	extern	_msa_calibrate
                                    1-   41     	extern	_msa_calibrateZ
                                    1-   42     	extern	_msa_ReadBytes
                                    1-   43     	extern	_SW_i2c_udelay
                                    1-   44     	extern	_msa_read_adc
                                    1-   45     	extern	_msa_flip_init
                                    1-   46     	extern	_msa_flip_process
                                    1-   47     	extern	_msa_sqrt
                                    1-   48     	extern	_Delay1000Us
                                    1-   49     	extern	_Delay10Us
                                    1-   50     	extern	_IIC_Start
                                    1-   51     	extern	_IIC_Send_Byte
                                    1-   52     	extern	_IIC_Read_Byte
                                    1-   53     	extern	_SDA_OUT
                                    1-   54     	extern	_SDA_IN
                                    1-   55     	extern	_IIC_Ack
                                    1-   56     	extern	_IIC_NAck
                                    1-   57     	extern	_delay_us
                                    1-   58     	extern	_delay_ms
                                    1-   59     	extern	_IIC_Stop
                                    1-   60     	extern	_IIC_Wait_Ack
                                    1-   61     	extern	_PORTAbits
                                    1-   62     	extern	_PORTBbits
                                    1-   63     	extern	_PCONbits
                                    1-   64     	extern	_BWUCONbits
                                    1-   65     	extern	_ABPLCONbits
                                    1-   66     	extern	_BPHCONbits
                                    1-   67     	extern	_INTEbits
                                    1-   68     	extern	_INTFbits
                                    1-   69     	extern	_ADMDbits
                                    1-   70     	extern	_ADRbits
                                    1-   71     	extern	_ADVREFHbits
                                    1-   72     	extern	_ADCRbits
                                    1-   73     	extern	_AWUCONbits
                                    1-   74     	extern	_PACONbits
                                    1-   75     	extern	_INTEDGbits
                                    1-   76     	extern	_ANAENbits
                                    1-   77     	extern	_RFCbits
                                    1-   78     	extern	_INTE2bits
                                    1-   79     	extern	_offset_z
                                    1-   80     	extern	_isCalibrated
                                    1-   81     	extern	_INDF
                                    1-   82     	extern	_TMR0
                                    1-   83     	extern	_PCL
                                    1-   84     	extern	_STATUS
                                    1-   85     	extern	_FSR
                                    1-   86     	extern	_PORTA
                                    1-   87     	extern	_PORTB
                                    1-   88     	extern	_PCON
                                    1-   89     	extern	_BWUCON
                                    1-   90     	extern	_PCHBUF
                                    1-   91     	extern	_ABPLCON
                                    1-   92     	extern	_BPHCON
                                    1-   93     	extern	_INTE
                                    1-   94     	extern	_INTF
                                    1-   95     	extern	_ADMD
                                    1-   96     	extern	_ADR
                                    1-   97     	extern	_ADD
                                    1-   98     	extern	_ADVREFH
                                    1-   99     	extern	_ADCR
                                    1-  100     	extern	_AWUCON
                                    1-  101     	extern	_PACON
                                    1-  102     	extern	_INTEDG
                                    1-  103     	extern	_TMRH
                                    1-  104     	extern	_ANAEN
                                    1-  105     	extern	_RFC
                                    1-  106     	extern	_TM3RH
                                    1-  107     	extern	_INTE2
                                    1-  108     	extern	_TMR1
                                    1-  109     	extern	_T1CR1
                                    1-  110     	extern	_T1CR2
                                    1-  111     	extern	_PWM1DUTY
                                    1-  112     	extern	_PS1CV
                                    1-  113     	extern	_BZ1CR
                                    1-  114     	extern	_IRCR
                                    1-  115     	extern	_TBHP
                                    1-  116     	extern	_TBHD
                                    1-  117     	extern	_TMR2
                                    1-  118     	extern	_T2CR1
                                    1-  119     	extern	_T2CR2
                                    1-  120     	extern	_PWM2DUTY
                                    1-  121     	extern	_PS2CV
                                    1-  122     	extern	_BZ2CR
                                    1-  123     	extern	_OSCCR
                                    1-  124     	extern	_TMR3
                                    1-  125     	extern	_T3CR1
                                    1-  126     	extern	_T3CR2
                                    1-  127     	extern	_PWM3DUTY
                                    1-  128     	extern	_PS3CV
                                    1-  129     	extern	_BZ3CR
                                    1-  130     	extern	_IOSTA
                                    1-  131     	extern	_IOSTB
                                    1-  132     	extern	_APHCON
                                    1-  133     	extern	_PS0CV
                                    1-  134     	extern	_BODCON
                                    1-  135     	extern	_CMPCR
                                    1-  136     	extern	_PCON1
                                    1-  137     	extern	_T0MD
                                    1-  138     	extern	___sdcc_saved_fsr
                                    1-  139     	extern	___sdcc_saved_stk00
                                    1-  140     	extern	___sdcc_saved_stk01
                                    1-  141     	extern	__gptrget1
                                    1-  142     	extern	__nyc_ny8_startup
                                    1-  143     ;--------------------------------------------------------
                                    1-  144     ; global declarations
                                    1-  145     ;--------------------------------------------------------
                                    1-  146     	extern	_gotoSleep
                                    1-  147     	extern	_keyRead
                                    1-  148     	extern	_ind_light_disp
                                    1-  149     	extern	_getData
                                    1-  150     	extern	_chrgCtr
                                    1-  151     	extern	_refreshLed
                                    1-  152     	extern	_workCtr
                                    1-  153     	extern	_isr
                                    1-  154     	extern	_main
                                    1-  155     	extern	_hzH
                                    1-  156     	extern	_hzL
                                    1-  157     	extern	_hz
                                    1-  158     	extern	_chrgStep
                                    1-  159     	extern	_intCount
                                    1-  160     	extern	_IntFlag
                                    1-  161     	extern	_keyCount
                                    1-  162     	extern	_workStep
                                    1-  163     	extern	_baiwei
                                    1-  164     	extern	_shiwei
                                    1-  165     	extern	_gewei
                                    1-  166     	extern	_rockStep
                                    1-  167     	extern	_workTime
                                    1-  168     	extern	_sleepTime
                                    1-  169     	extern	_rockTime
                                    1-  170     	extern	_checkTime
                                    1-  172     	extern PSAVE
                                    1-  173     	extern SSAVE
                                    1-  174     	extern WSAVE
                                    1-  175     	extern STK12
                                    1-  176     	extern STK11
                                    1-  177     	extern STK10
                                    1-  178     	extern STK09
                                    1-  179     	extern STK08
                                    1-  180     	extern STK07
                                    1-  181     	extern STK06
                                    1-  182     	extern STK05
                                    1-  183     	extern STK04
                                    1-  184     	extern STK03
                                    1-  185     	extern STK02
                                    1-  186     	extern STK01
                                    1-  187     	extern STK00
                                    1-  189     .segment "uninit", 0x20000040
 20000040                           1-  190     PSAVE:
                                    1-  191     	.res 1
 20000041                           1-  192     SSAVE:
                                    1-  193     	.res 1
 20000042                           1-  194     WSAVE:
                                    1-  195     	.res 1
 20000043                           1-  196     STK12:
                                    1-  197     	.res 1
 20000044                           1-  198     STK11:
                                    1-  199     	.res 1
 20000045                           1-  200     STK10:
                                    1-  201     	.res 1
 20000046                           1-  202     STK09:
                                    1-  203     	.res 1
 20000047                           1-  204     STK08:
                                    1-  205     	.res 1
 20000048                           1-  206     STK07:
                                    1-  207     	.res 1
 20000049                           1-  208     STK06:
                                    1-  209     	.res 1
 2000004A                           1-  210     STK05:
                                    1-  211     	.res 1
 2000004B                           1-  212     STK04:
                                    1-  213     	.res 1
 2000004C                           1-  214     STK03:
                                    1-  215     	.res 1
 2000004D                           1-  216     STK02:
                                    1-  217     	.res 1
 2000004E                           1-  218     STK01:
                                    1-  219     	.res 1
 2000004F                           1-  220     STK00:
                                    1-  221     	.res 1
                                    1-  223     ;--------------------------------------------------------
                                    1-  224     ; global definitions
                                    1-  225     ;--------------------------------------------------------
                                    1-  226     .segment "uninit"
     0000                           1-  227     _hzH:
                                    1-  228     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     _hzL:
                                    1-  233     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     _baiwei:
                                    1-  238     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     _shiwei:
                                    1-  243     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     _gewei:
                                    1-  248     	.res	1
                                    1-  251     ;--------------------------------------------------------
                                    1-  252     ; absolute symbol definitions
                                    1-  253     ;--------------------------------------------------------
                                    1-  254     ;--------------------------------------------------------
                                    1-  255     ; compiler-defined variables
                                    1-  256     ;--------------------------------------------------------
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x102D:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x102A:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x102B:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x102C:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1029:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1026:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1025:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1027:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1028:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1023:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1024:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1022:
                                    1-  292     	.res	1
                                    1-  293     ;--------------------------------------------------------
                                    1-  294     ; initialized data
                                    1-  295     ;--------------------------------------------------------
                                    1-  297     .segment "idata"
     0000                           1-  298     _hz:
     0000 0000 0000                 1-  299     	dw	0x00, 0x00
                                    1-  303     .segment "idata"
     0000                           1-  304     _chrgStep:
     0000 0000                      1-  305     	dw	0x00
                                    1-  309     .segment "idata"
     0000                           1-  310     _intCount:
     0000 0000                      1-  311     	dw	0x00
                                    1-  315     .segment "idata"
     0000                           1-  316     _IntFlag:
     0000 0000                      1-  317     	dw	0x00
                                    1-  321     .segment "idata"
     0000                           1-  322     _keyCount:
     0000 0000                      1-  323     	dw	0x00
                                    1-  327     .segment "idata"
     0000                           1-  328     _workStep:
     0000 0000                      1-  329     	dw	0x00
                                    1-  333     .segment "idata"
     0000                           1-  334     _rockStep:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _workTime:
     0000 0000 0000                 1-  341     	dw	0x00, 0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _sleepTime:
     0000 0000 0000                 1-  347     	dw	0x00, 0x00
                                    1-  351     .segment "idata"
     0000                           1-  352     _rockTime:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _checkTime:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _table:
     0000 003F                      1-  365     	dw	0x3f
     0001 0006                      1-  366     	dw	0x06
     0002 005B                      1-  367     	dw	0x5b
     0003 004F                      1-  368     	dw	0x4f
     0004 0066                      1-  369     	dw	0x66
     0005 006D                      1-  370     	dw	0x6d
     0006 007D                      1-  371     	dw	0x7d
     0007 0007                      1-  372     	dw	0x07
     0008 007F                      1-  373     	dw	0x7f
     0009 006F                      1-  374     	dw	0x6f
     000A 0071                      1-  375     	dw	0x71
     000B 0038                      1-  376     	dw	0x38
                                    1-  379     ;--------------------------------------------------------
                                    1-  380     ; overlayable items in internal ram 
                                    1-  381     ;--------------------------------------------------------
                                    1-  382     ;	udata_ovr
                                    1-  383     ;--------------------------------------------------------
                                    1-  384     ; reset vector 
                                    1-  385     ;--------------------------------------------------------
                                    1-  386     ORG	0x0000
     0000 3rrr                      1-  387     	LGOTO	__nyc_ny8_startup
                                    1-  388     ;--------------------------------------------------------
                                    1-  389     ; interrupt and initialization code
                                    1-  390     ;--------------------------------------------------------
                                    1-  391     ORG 0x0008
     0008 3rrr                      1-  392     	lgoto	__sdcc_interrupt
                                    1-  394     .segment "code"
     0000                           1-  395     __sdcc_interrupt:
                                    1-  396     ;***
                                    1-  397     ;  pBlock Stats: dbName = I
                                    1-  398     ;***
                                    1-  399     ;2 compiler assigned registers:
                                    1-  400     ;   STK00
                                    1-  401     ;   STK01
                                    1-  402     ;; Starting pCode block
     0000                           1-  403     _isr:
                                    1-  404     ; 0 exit points
                                    1-  405     	.line	36, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  406     	MOVAR	WSAVE
     0001 1503                      1-  407     	SWAPR	STATUS,W
     0002 0283                      1-  408     	CLRR	STATUS
     0003 00rr                      1-  409     	MOVAR	SSAVE
     0004 010A                      1-  410     	MOVR	PCHBUF,W
     0005 028A                      1-  411     	CLRR	PCHBUF
     0006 00rr                      1-  412     	MOVAR	PSAVE
     0007 0104                      1-  413     	MOVR	FSR,W
                                    1-  414     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  415     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  416     	MOVR	STK00,W
                                    1-  417     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  418     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  419     	MOVR	STK01,W
                                    1-  420     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  421     	MOVAR	___sdcc_saved_stk01
                                    1-  422     	.line	38, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  423     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  424     	LGOTO	_00108_DS_
                                    1-  425     	.line	40, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  426     	MOVIA	0x37
     0013 03rr                      1-  427     	ADDAR	_TMR0,F
                                    1-  428     	.line	41, "main.c"; 	intCount++;
                                    1-  429     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  430     	INCR	_intCount,F
                                    1-  431     	.line	42, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  432     	MOVR	_intCount,W
     0017 2464                      1-  433     	XORIA	0x64
     0018 0903                      1-  434     	BTRSS	STATUS,2
     0019 3rrr                      1-  435     	LGOTO	_00108_DS_
                                    1-  436     	.line	44, "main.c"; 	intCount = 0;
     001A 02rr                      1-  437     	CLRR	_intCount
                                    1-  438     	.line	45, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  439     	MOVIA	0x01
                                    1-  440     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  441     	MOVAR	_IntFlag
     001E                           1-  442     _00108_DS_:
                                    1-  443     	.line	48, "main.c"; 	if(INTFbits.PABIF)
     001E 08rr                      1-  444     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  445     	LGOTO	_00110_DS_
                                    1-  446     	.line	50, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  447     	MOVIA	0xfd
     0021 00rr                      1-  448     	MOVAR	_INTF
     0022                           1-  449     _00110_DS_:
                                    1-  450     	.line	53, "main.c"; 	INTF = 0;
     0022 02rr                      1-  451     	CLRR	_INTF
                                    1-  452     	.line	55, "main.c"; 	}
                                    1-  453     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  454     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  455     	MOVAR	STK01
                                    1-  456     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  457     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  458     	MOVAR	STK00
                                    1-  459     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  460     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  461     	MOVAR	FSR
     002C 01rr                      1-  462     	MOVR	PSAVE,W
     002D 008A                      1-  463     	MOVAR	PCHBUF
     002E 0283                      1-  464     	CLRR	STATUS
     002F 15rr                      1-  465     	SWAPR	SSAVE,W
     0030 0083                      1-  466     	MOVAR	STATUS
     0031 15rr                      1-  467     	SWAPR	WSAVE,F
     0032 15rr                      1-  468     	SWAPR	WSAVE,W
     0033                           1-  469     END_OF_INTERRUPT:
     0033 0011                      1-  470     	RETIE	
                                    1-  472     ;--------------------------------------------------------
                                    1-  473     ; code
                                    1-  474     ;--------------------------------------------------------
                                    1-  475     ;***
                                    1-  476     ;  pBlock Stats: dbName = M
                                    1-  477     ;***
                                    1-  478     ;has an exit
                                    1-  479     ;functions called:
                                    1-  480     ;   _msa_init
                                    1-  481     ;   _refreshLed
                                    1-  482     ;   _keyRead
                                    1-  483     ;   _chrgCtr
                                    1-  484     ;   _workCtr
                                    1-  485     ;   _getData
                                    1-  486     ;   _gotoSleep
                                    1-  487     ;   _msa_init
                                    1-  488     ;   _refreshLed
                                    1-  489     ;   _keyRead
                                    1-  490     ;   _chrgCtr
                                    1-  491     ;   _workCtr
                                    1-  492     ;   _getData
                                    1-  493     ;   _gotoSleep
                                    1-  494     ;1 compiler assigned register :
                                    1-  495     ;   r0x102D
                                    1-  496     ;; Starting pCode block
                                    1-  497     .segment "code"; module=main, function=_main
     0000                           1-  499     _main:
                                    1-  500     ; 2 exit points
                                    1-  501     	.line	62, "main.c"; 	APHCON = 0xBF;
     0000 21BF                      1-  502     	MOVIA	0xbf
     0001 000r                      1-  503     	IOST	_APHCON
                                    1-  504     	.line	63, "main.c"; 	IOSTA = 0x00;     // Set PB0 & PB1 to input mode,others set to output mode
     0002 0200                      1-  505     	CLRA	
     0003 000r                      1-  506     	IOST	_IOSTA
                                    1-  507     	.line	64, "main.c"; 	IOSTB = 0x00;
     0004 000r                      1-  508     	IOST	_IOSTB
                                    1-  509     	.line	65, "main.c"; 	PORTA = 0x00; 
     0005 02rr                      1-  510     	CLRR	_PORTA
                                    1-  511     	.line	66, "main.c"; 	PORTB = 0x00;                           // PB0��PB1 & PB2 are output High	
     0006 02rr                      1-  512     	CLRR	_PORTB
                                    1-  513     	.line	67, "main.c"; 	msa_init();
     0007 2rrr                      1-  514     	LCALL	_msa_init
                                    1-  515     	.line	68, "main.c"; 	IOSTA = C_PA0_Input | C_PA3_Input | C_PA4_Input;     // Set PB0 & PB1 to input mode,others set to output mode
     0008 2119                      1-  516     	MOVIA	0x19
     0009 000r                      1-  517     	IOST	_IOSTA
                                    1-  518     	.line	69, "main.c"; 	IOSTB = 0x00;
     000A 0200                      1-  519     	CLRA	
     000B 000r                      1-  520     	IOST	_IOSTB
                                    1-  521     	.line	70, "main.c"; 	APHCON = 0xAE;		//CHRG	PA4 ����
     000C 21AE                      1-  522     	MOVIA	0xae
     000D 000r                      1-  523     	IOST	_APHCON
                                    1-  524     	.line	71, "main.c"; 	BPHCON = 0xFF;		
     000E 21FF                      1-  525     	MOVIA	0xff
     000F 00rr                      1-  526     	MOVAR	_BPHCON
                                    1-  527     	.line	72, "main.c"; 	ABPLCON = 0xF7;		//  USB PA3	����
     0010 21F7                      1-  528     	MOVIA	0xf7
     0011 00rr                      1-  529     	MOVAR	_ABPLCON
                                    1-  530     	.line	73, "main.c"; 	PORTA = 0x00; 
     0012 02rr                      1-  531     	CLRR	_PORTA
                                    1-  532     	.line	74, "main.c"; 	PORTB = 0x00;                           // PB0��PB1 & PB2 are output High	
     0013 02rr                      1-  533     	CLRR	_PORTB
                                    1-  534     	.line	75, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     0014 21A8                      1-  535     	MOVIA	0xa8
     0015 00rr                      1-  536     	MOVAR	_PCON
                                    1-  537     	.line	77, "main.c"; 	PCON1 = C_TMR0_Dis;
     0016 0200                      1-  538     	CLRA	
     0017 000r                      1-  539     	IOST	_PCON1
                                    1-  540     	.line	79, "main.c"; 	TMR0 = 55;
     0018 2137                      1-  541     	MOVIA	0x37
     0019 00rr                      1-  542     	MOVAR	_TMR0
                                    1-  543     	.line	80, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     001A 0200                      1-  544     	CLRA	
     001B 0003                      1-  545     	T0MD	
                                    1-  546     	.line	81, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     001C 2103                      1-  547     	MOVIA	0x03
     001D 00rr                      1-  548     	MOVAR	_INTE
                                    1-  549     	.line	82, "main.c"; 	PCON1 = C_TMR0_En;
     001E 2101                      1-  550     	MOVIA	0x01
     001F 000r                      1-  551     	IOST	_PCON1
                                    1-  552     	.line	83, "main.c"; 	ENI();
     0020 0004                      1-  553     	ENI
                                    1-  554     	.line	84, "main.c"; 	baiwei = shiwei = gewei = 0;
                                    1-  555     	BANKSEL	_gewei
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 02rr                      1-  556     	CLRR	_gewei
                                    1-  557     	BANKSEL	_shiwei
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 02rr                      1-  558     	CLRR	_shiwei
                                    1-  559     	BANKSEL	_baiwei
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1-  560     	CLRR	_baiwei
                                    1-  561     	.line	85, "main.c"; 	rockStep = 0;
                                    1-  562     	BANKSEL	_rockStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1-  563     	CLRR	_rockStep
     0029                           1-  564     _00137_DS_:
                                    1-  565     	.line	88, "main.c"; 	CLRWDT();			//Clear WDT, this function is defined in ny8command.h
     0029 0002                      1-  566     	clrwdt
                                    1-  567     	.line	90, "main.c"; 	if(workStep)
                                    1-  568     	BANKSEL	_workStep
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  569     	MOVR	_workStep,W
     002C 0903                      1-  570     	BTRSS	STATUS,2
                                    1-  571     	.line	92, "main.c"; 	refreshLed();
     002D 2rrr                      1-  572     	LCALL	_refreshLed
                                    1-  573     	.line	94, "main.c"; 	if(!IntFlag)
                                    1-  574     	BANKSEL	_IntFlag
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1-  575     	MOVR	_IntFlag,W
     0030 0D03                      1-  576     	BTRSC	STATUS,2
     0031 3rrr                      1-  577     	LGOTO	_00137_DS_
                                    1-  578     	.line	96, "main.c"; 	IntFlag = 0;
     0032 02rr                      1-  579     	CLRR	_IntFlag
                                    1-  580     	.line	97, "main.c"; 	if(keyRead(0x01 & (~PORTA)))
     0033 07rr                      1-  581     	COMR	_PORTA,W
                                    1-  582     	BANKSEL	r0x102D
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1-  583     	MOVAR	r0x102D
     0036 2101                      1-  584     	MOVIA	0x01
     0037 10rr                      1-  585     	ANDAR	r0x102D,F
     0038 01rr                      1-  586     	MOVR	r0x102D,W
     0039 2rrr                      1-  587     	LCALL	_keyRead
                                    1-  588     	BANKSEL	r0x102D
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 00rr                      1-  589     	MOVAR	r0x102D
     003C 01rr                      1-  590     	MOVR	r0x102D,W
     003D 0D03                      1-  591     	BTRSC	STATUS,2
     003E 3rrr                      1-  592     	LGOTO	_00123_DS_
                                    1-  593     	.line	99, "main.c"; 	if(workStep)
                                    1-  594     	BANKSEL	_workStep
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1-  595     	MOVR	_workStep,W
     0041 0D03                      1-  596     	BTRSC	STATUS,2
     0042 3rrr                      1-  597     	LGOTO	_00120_DS_
                                    1-  598     	.line	101, "main.c"; 	workStep = 0;
     0043 02rr                      1-  599     	CLRR	_workStep
                                    1-  600     	.line	102, "main.c"; 	rockStep = 0;
                                    1-  601     	BANKSEL	_rockStep
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 02rr                      1-  602     	CLRR	_rockStep
                                    1-  603     	.line	103, "main.c"; 	rockTime = 0;
                                    1-  604     	BANKSEL	_rockTime
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 02rr                      1-  605     	CLRR	_rockTime
     0048 3rrr                      1-  606     	LGOTO	_00123_DS_
     0049                           1-  607     _00120_DS_:
                                    1-  608     	.line	107, "main.c"; 	workStep = 1;
     0049 2101                      1-  609     	MOVIA	0x01
                                    1-  610     	BANKSEL	_workStep
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 00rr                      1-  611     	MOVAR	_workStep
                                    1-  612     	.line	108, "main.c"; 	workTime = 0;
                                    1-  613     	BANKSEL	_workTime
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 02rr                      1-  614     	CLRR	_workTime
     004E 02rr                      1-  615     	CLRR	(_workTime + 1)
                                    1-  616     	.line	109, "main.c"; 	rockStep = 1;
     004F 2101                      1-  617     	MOVIA	0x01
                                    1-  618     	BANKSEL	_rockStep
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1-  619     	MOVAR	_rockStep
     0052                           1-  620     _00123_DS_:
                                    1-  621     	.line	113, "main.c"; 	chrgCtr();
     0052 2rrr                      1-  622     	LCALL	_chrgCtr
                                    1-  623     	.line	114, "main.c"; 	workCtr();
     0053 2rrr                      1-  624     	LCALL	_workCtr
                                    1-  625     	.line	115, "main.c"; 	if(rockStep == 0 && workStep == 1)
                                    1-  626     	BANKSEL	_rockStep
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 01rr                      1-  627     	MOVR	_rockStep,W
     0056 0903                      1-  628     	BTRSS	STATUS,2
     0057 3rrr                      1-  629     	LGOTO	_00127_DS_
                                    1-  630     	BANKSEL	_workStep
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 01rr                      1-  631     	MOVR	_workStep,W
     005A 2401                      1-  632     	XORIA	0x01
     005B 0903                      1-  633     	BTRSS	STATUS,2
     005C 3rrr                      1-  634     	LGOTO	_00127_DS_
                                    1-  635     	.line	117, "main.c"; 	getData();
     005D 2rrr                      1-  636     	LCALL	_getData
                                    1-  637     	.line	118, "main.c"; 	if(++checkTime >= 200)
                                    1-  638     	BANKSEL	_checkTime
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 05rr                      1-  639     	INCR	_checkTime,F
                                    1-  640     ;;unsigned compare: left < lit (0xC8=200), size=1
     0060 21C8                      1-  641     	MOVIA	0xc8
     0061 04rr                      1-  642     	SUBAR	_checkTime,W
     0062 0803                      1-  643     	BTRSS	STATUS,0
     0063 3rrr                      1-  644     	LGOTO	_00127_DS_
                                    1-  645     	.line	120, "main.c"; 	checkTime = 0;
     0064 02rr                      1-  646     	CLRR	_checkTime
                                    1-  647     	.line	121, "main.c"; 	rockTime = 0;
                                    1-  648     	BANKSEL	_rockTime
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 02rr                      1-  649     	CLRR	_rockTime
     0067                           1-  650     _00127_DS_:
                                    1-  651     	.line	124, "main.c"; 	if(workStep == 0 && rockStep == 0 && keyCount== 0 && rockTime == 0)
                                    1-  652     	BANKSEL	_workStep
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 01rr                      1-  653     	MOVR	_workStep,W
     0069 0903                      1-  654     	BTRSS	STATUS,2
     006A 3rrr                      1-  655     	LGOTO	_00137_DS_
                                    1-  656     	BANKSEL	_rockStep
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 01rr                      1-  657     	MOVR	_rockStep,W
     006D 0903                      1-  658     	BTRSS	STATUS,2
     006E 3rrr                      1-  659     	LGOTO	_00137_DS_
                                    1-  660     	BANKSEL	_keyCount
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 01rr                      1-  661     	MOVR	_keyCount,W
     0071 0903                      1-  662     	BTRSS	STATUS,2
     0072 3rrr                      1-  663     	LGOTO	_00137_DS_
                                    1-  664     	BANKSEL	_rockTime
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 01rr                      1-  665     	MOVR	_rockTime,W
     0075 0903                      1-  666     	BTRSS	STATUS,2
     0076 3rrr                      1-  667     	LGOTO	_00137_DS_
                                    1-  668     	.line	126, "main.c"; 	if(++sleepTime > 100)
                                    1-  669     	BANKSEL	_sleepTime
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 05rr                      1-  670     	INCR	_sleepTime,F
     0079 0D03                      1-  671     	BTRSC	STATUS,2
     007A 05rr                      1-  672     	INCR	(_sleepTime + 1),F
                                    1-  673     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  674     ;;unsigned compare: left >= lit (0x65=101), size=2
     007B 2100                      1-  675     	MOVIA	0x00
     007C 04rr                      1-  676     	SUBAR	(_sleepTime + 1),W
     007D 0903                      1-  677     	BTRSS	STATUS,2
     007E 3rrr                      1-  678     	LGOTO	_00181_DS_
     007F 2165                      1-  679     	MOVIA	0x65
     0080 04rr                      1-  680     	SUBAR	_sleepTime,W
     0081                           1-  681     _00181_DS_:
     0081 0803                      1-  682     	BTRSS	STATUS,0
     0082 3rrr                      1-  683     	LGOTO	_00137_DS_
                                    1-  684     	.line	127, "main.c"; 	gotoSleep();
     0083 2rrr                      1-  685     	LCALL	_gotoSleep
     0084 3rrr                      1-  686     	LGOTO	_00137_DS_
                                    1-  687     	.line	130, "main.c"; 	}
                                    1-  688     	RETURN	
     0085 0010                      3-   26 m1      ret
                                    1-  689     ; exit point of _main
                                    1-  691     ;***
                                    1-  692     ;  pBlock Stats: dbName = C
                                    1-  693     ;***
                                    1-  694     ;has an exit
                                    1-  695     ;; Starting pCode block
                                    1-  696     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  698     _gotoSleep:
                                    1-  699     ; 2 exit points
                                    1-  700     	.line	362, "main.c"; 	COM1 = 1;
     0000 1Brr                      1-  701     	BSR	_PORTA,7
                                    1-  702     	.line	363, "main.c"; 	COM2 = 1;
     0001 1Brr                      1-  703     	BSR	_PORTA,6
                                    1-  704     	.line	364, "main.c"; 	COM3 = 1;
     0002 18rr                      1-  705     	BSR	_PORTB,1
                                    1-  706     	.line	365, "main.c"; 	baiwei = shiwei = gewei = 0;
                                    1-  707     	BANKSEL	_gewei
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1-  708     	CLRR	_gewei
                                    1-  709     	BANKSEL	_shiwei
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  710     	CLRR	_shiwei
                                    1-  711     	BANKSEL	_baiwei
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  712     	CLRR	_baiwei
                                    1-  713     	.line	366, "main.c"; 	workStep = 0;
                                    1-  714     	BANKSEL	_workStep
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1-  715     	CLRR	_workStep
                                    1-  716     	.line	367, "main.c"; 	rockStep = 0;
                                    1-  717     	BANKSEL	_rockStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1-  718     	CLRR	_rockStep
                                    1-  719     	.line	368, "main.c"; 	AWUCON = 0x19;
     000D 2119                      1-  720     	MOVIA	0x19
     000E 00rr                      1-  721     	MOVAR	_AWUCON
                                    1-  722     	.line	369, "main.c"; 	sleepTime = 0;	
                                    1-  723     	BANKSEL	_sleepTime
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1-  724     	CLRR	_sleepTime
     0011 02rr                      1-  725     	CLRR	(_sleepTime + 1)
                                    1-  726     	.line	370, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     0012 2103                      1-  727     	MOVIA	0x03
     0013 00rr                      1-  728     	MOVAR	_INTE
                                    1-  729     	.line	371, "main.c"; 	PCON =  C_LVR_En;	
     0014 2108                      1-  730     	MOVIA	0x08
     0015 00rr                      1-  731     	MOVAR	_PCON
                                    1-  732     	.line	372, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1-  733     	CLRR	_INTF
                                    1-  734     	.line	373, "main.c"; 	CLRWDT();
     0017 0002                      1-  735     	clrwdt
                                    1-  736     	.line	374, "main.c"; 	ENI();
     0018 0004                      1-  737     	ENI
                                    1-  738     	.line	375, "main.c"; 	SLEEP();
     0019 0001                      1-  739     	sleep
                                    1-  740     	.line	376, "main.c"; 	AWUCON = 0x00;
     001A 02rr                      1-  741     	CLRR	_AWUCON
                                    1-  742     	.line	377, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0��Timer1��WDT overflow interrupt
     001B 2103                      1-  743     	MOVIA	0x03
     001C 00rr                      1-  744     	MOVAR	_INTE
                                    1-  745     	.line	378, "main.c"; 	INTF = 0;
     001D 02rr                      1-  746     	CLRR	_INTF
                                    1-  747     	.line	383, "main.c"; 	}
                                    1-  748     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1-  749     ; exit point of _gotoSleep
                                    1-  751     ;***
                                    1-  752     ;  pBlock Stats: dbName = C
                                    1-  753     ;***
                                    1-  754     ;has an exit
                                    1-  755     ;1 compiler assigned register :
                                    1-  756     ;   r0x1022
                                    1-  757     ;; Starting pCode block
                                    1-  758     .segment "code"; module=main, function=_keyRead
                                    1-  760     ;local variable name mapping:
     0000                           1-  762     _keyRead:
                                    1-  763     ; 2 exit points
                                    1-  764     	.line	338, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  765     	BANKSEL	r0x1022
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  766     	MOVAR	r0x1022
                                    1-  767     	.line	340, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  768     	MOVR	r0x1022,W
     0003 0D03                      1-  769     	BTRSC	STATUS,2
     0004 3rrr                      1-  770     	LGOTO	_00487_DS_
                                    1-  771     	.line	342, "main.c"; 	keyCount++;
                                    1-  772     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  773     	INCR	_keyCount,F
                                    1-  774     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  775     	.line	343, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  776     	MOVIA	0xc8
     0008 04rr                      1-  777     	SUBAR	_keyCount,W
     0009 0803                      1-  778     	BTRSS	STATUS,0
     000A 3rrr                      1-  779     	LGOTO	_00488_DS_
                                    1-  780     	.line	345, "main.c"; 	keyCount = 200;
     000B 21C8                      1-  781     	MOVIA	0xc8
     000C 00rr                      1-  782     	MOVAR	_keyCount
     000D 3rrr                      1-  783     	LGOTO	_00488_DS_
                                    1-  784     ;;unsigned compare: left < lit (0x8=8), size=1
     000E                           1-  785     _00487_DS_:
                                    1-  786     	.line	350, "main.c"; 	if(keyCount >= 8)
     000E 2108                      1-  787     	MOVIA	0x08
                                    1-  788     	BANKSEL	_keyCount
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1-  789     	SUBAR	_keyCount,W
     0011 0803                      1-  790     	BTRSS	STATUS,0
     0012 3rrr                      1-  791     	LGOTO	_00485_DS_
                                    1-  792     	.line	352, "main.c"; 	keyCount = 0;
     0013 02rr                      1-  793     	CLRR	_keyCount
                                    1-  794     	.line	353, "main.c"; 	return	1;
     0014 2101                      1-  795     	MOVIA	0x01
     0015 3rrr                      1-  796     	LGOTO	_00489_DS_
     0016                           1-  797     _00485_DS_:
                                    1-  798     	.line	355, "main.c"; 	keyCount = 0;
                                    1-  799     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 02rr                      1-  800     	CLRR	_keyCount
     0018                           1-  801     _00488_DS_:
                                    1-  802     	.line	357, "main.c"; 	return 0;
     0018 2100                      1-  803     	MOVIA	0x00
     0019                           1-  804     _00489_DS_:
                                    1-  805     	.line	358, "main.c"; 	}
                                    1-  806     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1-  807     ; exit point of _keyRead
                                    1-  809     ;***
                                    1-  810     ;  pBlock Stats: dbName = C
                                    1-  811     ;***
                                    1-  812     ;has an exit
                                    1-  813     ;functions called:
                                    1-  814     ;   _Delay10Us
                                    1-  815     ;   _Delay10Us
                                    1-  816     ;   _Delay10Us
                                    1-  817     ;   _Delay10Us
                                    1-  818     ;   _Delay10Us
                                    1-  819     ;   _Delay10Us
                                    1-  820     ;   _Delay10Us
                                    1-  821     ;   _Delay10Us
                                    1-  822     ;2 compiler assigned registers:
                                    1-  823     ;   r0x1023
                                    1-  824     ;   r0x1024
                                    1-  825     ;; Starting pCode block
                                    1-  826     .segment "code"; module=main, function=_ind_light_disp
                                    1-  828     ;local variable name mapping:
     0000                           1-  831     _ind_light_disp:
                                    1-  832     ; 2 exit points
                                    1-  833     	.line	313, "main.c"; 	void ind_light_disp( uint8_t udata )
                                    1-  834     	BANKSEL	r0x1023
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  835     	MOVAR	r0x1023
                                    1-  836     	.line	316, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1-  837     	BANKSEL	r0x1024
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  838     	CLRR	r0x1024
     0004                           1-  839     _00477_DS_:
                                    1-  840     	.line	318, "main.c"; 	CLK=0;
     0004 1Crr                      1-  841     	BCR	_PORTB,0
                                    1-  842     	.line	319, "main.c"; 	Delay10Us();
     0005 2rrr                      1-  843     	LCALL	_Delay10Us
                                    1-  844     	.line	320, "main.c"; 	if(udata&0x80)
                                    1-  845     	BANKSEL	r0x1023
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 0Brr                      1-  846     	BTRSS	r0x1023,7
     0008 3rrr                      1-  847     	LGOTO	_00474_DS_
                                    1-  848     	.line	322, "main.c"; 	DAT=1;
     0009 18rr                      1-  849     	BSR	_PORTA,1
                                    1-  850     	.line	323, "main.c"; 	Delay10Us();
     000A 2rrr                      1-  851     	LCALL	_Delay10Us
     000B 3rrr                      1-  852     	LGOTO	_00475_DS_
     000C                           1-  853     _00474_DS_:
                                    1-  854     	.line	327, "main.c"; 	DAT=0;
     000C 1Crr                      1-  855     	BCR	_PORTA,1
                                    1-  856     	.line	328, "main.c"; 	Delay10Us();
     000D 2rrr                      1-  857     	LCALL	_Delay10Us
     000E                           1-  858     _00475_DS_:
                                    1-  859     	.line	330, "main.c"; 	CLK=1;
     000E 18rr                      1-  860     	BSR	_PORTB,0
                                    1-  861     	.line	331, "main.c"; 	Delay10Us();
     000F 2rrr                      1-  862     	LCALL	_Delay10Us
                                    1-  863     	.line	332, "main.c"; 	udata<<=1;
     0010 1C03                      1-  864     	BCR	STATUS,0
                                    1-  865     	BANKSEL	r0x1023
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 14rr                      1-  866     	RLR	r0x1023,F
                                    1-  867     	.line	316, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1-  868     	BANKSEL	r0x1024
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 05rr                      1-  869     	INCR	r0x1024,F
                                    1-  870     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  871     ;;unsigned compare: left >= lit (0x8=8), size=1
     0015 2108                      1-  872     	MOVIA	0x08
     0016 04rr                      1-  873     	SUBAR	r0x1024,W
     0017 0803                      1-  874     	BTRSS	STATUS,0
     0018 3rrr                      1-  875     	LGOTO	_00477_DS_
                                    1-  876     	.line	334, "main.c"; 	CLK=0;
     0019 1Crr                      1-  877     	BCR	_PORTB,0
                                    1-  878     	.line	335, "main.c"; 	DAT=0;
     001A 1Crr                      1-  879     	BCR	_PORTA,1
                                    1-  880     	.line	336, "main.c"; 	}
                                    1-  881     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1-  882     ; exit point of _ind_light_disp
                                    1-  884     ;***
                                    1-  885     ;  pBlock Stats: dbName = C
                                    1-  886     ;***
                                    1-  887     ;has an exit
                                    1-  888     ;functions called:
                                    1-  889     ;   _msa_ReadBytes
                                    1-  890     ;   _msa_ReadBytes
                                    1-  891     ;   _msa_ReadBytes
                                    1-  892     ;   _msa_ReadBytes
                                    1-  893     ;7 compiler assigned registers:
                                    1-  894     ;   r0x1025
                                    1-  895     ;   r0x1026
                                    1-  896     ;   r0x1027
                                    1-  897     ;   STK02
                                    1-  898     ;   STK01
                                    1-  899     ;   STK00
                                    1-  900     ;   r0x1028
                                    1-  901     ;; Starting pCode block
                                    1-  902     .segment "code"; module=main, function=_getData
     0000                           1-  904     _getData:
                                    1-  905     ; 2 exit points
                                    1-  906     	.line	289, "main.c"; 	msa_ReadBytes(&hzL,MSA_REG_ACC_Z_LSB);
     0000 21rr                      1-  907     	MOVIA	((_hzL + 0) >> 8) & 0xff
                                    1-  908     	BANKSEL	r0x1025
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  909     	MOVAR	r0x1025
     0003 21rr                      1-  910     	MOVIA	(_hzL + 0)
                                    1-  911     	BANKSEL	r0x1026
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  912     	MOVAR	r0x1026
                                    1-  913     	BANKSEL	r0x1027
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  914     	CLRR	r0x1027
     0008 2106                      1-  915     	MOVIA	0x06
     0009 00rr                      1-  916     	MOVAR	STK02
                                    1-  917     	BANKSEL	r0x1026
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1-  918     	MOVR	r0x1026,W
     000C 00rr                      1-  919     	MOVAR	STK01
                                    1-  920     	BANKSEL	r0x1025
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  921     	MOVR	r0x1025,W
     000F 00rr                      1-  922     	MOVAR	STK00
     0010 2100                      1-  923     	MOVIA	0x00
     0011 2rrr                      1-  924     	LCALL	_msa_ReadBytes
                                    1-  925     	.line	290, "main.c"; 	msa_ReadBytes(&hzH,MSA_REG_ACC_Z_MSB);
     0012 21rr                      1-  926     	MOVIA	((_hzH + 0) >> 8) & 0xff
                                    1-  927     	BANKSEL	r0x1025
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1-  928     	MOVAR	r0x1025
     0015 21rr                      1-  929     	MOVIA	(_hzH + 0)
                                    1-  930     	BANKSEL	r0x1026
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1-  931     	MOVAR	r0x1026
                                    1-  932     	BANKSEL	r0x1027
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1-  933     	CLRR	r0x1027
     001A 2107                      1-  934     	MOVIA	0x07
     001B 00rr                      1-  935     	MOVAR	STK02
                                    1-  936     	BANKSEL	r0x1026
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1-  937     	MOVR	r0x1026,W
     001E 00rr                      1-  938     	MOVAR	STK01
                                    1-  939     	BANKSEL	r0x1025
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  940     	MOVR	r0x1025,W
     0021 00rr                      1-  941     	MOVAR	STK00
     0022 2100                      1-  942     	MOVIA	0x00
     0023 2rrr                      1-  943     	LCALL	_msa_ReadBytes
                                    1-  944     	.line	292, "main.c"; 	hz = ((short)(hzH << 8 | hzL))>> 4;
                                    1-  945     	BANKSEL	_hzH
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  946     	MOVR	_hzH,W
                                    1-  947     	BANKSEL	r0x1026
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1-  948     	MOVAR	r0x1026
                                    1-  949     	BANKSEL	r0x1025
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1-  950     	CLRR	r0x1025
                                    1-  951     	BANKSEL	r0x1026
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 0Brr                      1-  952     	BTRSS	r0x1026,7
     002C 3rrr                      1-  953     	LGOTO	_00001_DS_
                                    1-  954     	BANKSEL	r0x1025
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 06rr                      1-  955     	DECR	r0x1025,F
     002F                           1-  956     _00001_DS_:
                                    1-  957     	BANKSEL	r0x1026
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1-  958     	MOVR	r0x1026,W
                                    1-  959     	BANKSEL	r0x1028
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 00rr                      1-  960     	MOVAR	r0x1028
                                    1-  961     	BANKSEL	r0x1027
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1-  962     	CLRR	r0x1027
                                    1-  963     	BANKSEL	_hzL
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1-  964     	MOVR	_hzL,W
                                    1-  965     	BANKSEL	r0x1026
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1-  966     	MOVAR	r0x1026
                                    1-  967     	BANKSEL	r0x1025
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1-  968     	CLRR	r0x1025
                                    1-  969     	BANKSEL	r0x1026
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 0Brr                      1-  970     	BTRSS	r0x1026,7
     003D 3rrr                      1-  971     	LGOTO	_00002_DS_
                                    1-  972     	BANKSEL	r0x1025
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 06rr                      1-  973     	DECR	r0x1025,F
     0040                           1-  974     _00002_DS_:
                                    1-  975     	BANKSEL	r0x1026
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1-  976     	MOVR	r0x1026,W
                                    1-  977     	BANKSEL	r0x1027
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 11rr                      1-  978     	IORAR	r0x1027,F
                                    1-  979     	BANKSEL	r0x1025
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  980     	MOVR	r0x1025,W
                                    1-  981     	BANKSEL	r0x1028
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 11rr                      1-  982     	IORAR	r0x1028,F
                                    1-  983     	BANKSEL	r0x1027
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 15rr                      1-  984     	SWAPR	r0x1027,W
     004A 220F                      1-  985     	ANDIA	0x0f
                                    1-  986     	BANKSEL	_hz
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1-  987     	MOVAR	_hz
                                    1-  988     	BANKSEL	r0x1028
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 15rr                      1-  989     	SWAPR	r0x1028,W
                                    1-  990     	BANKSEL	_hz
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1-  991     	MOVAR	(_hz + 1)
     0051 22F0                      1-  992     	ANDIA	0xf0
     0052 11rr                      1-  993     	IORAR	_hz,F
     0053 12rr                      1-  994     	XORAR	(_hz + 1),F
     0054 21F0                      1-  995     	MOVIA	0xf0
     0055 0Drr                      1-  996     	BTRSC	(_hz + 1),3
     0056 11rr                      1-  997     	IORAR	(_hz + 1),F
                                    1-  998     	.line	293, "main.c"; 	hz &= 0x0FFF;
     0057 210F                      1-  999     	MOVIA	0x0f
     0058 10rr                      1- 1000     	ANDAR	(_hz + 1),F
                                    1- 1001     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1002     ;;unsigned compare: left >= lit (0x1C1=449), size=2
                                    1- 1003     	.line	294, "main.c"; 	if(hz > 0x1C0 && hz < 0xE40)
     0059 2101                      1- 1004     	MOVIA	0x01
     005A 04rr                      1- 1005     	SUBAR	(_hz + 1),W
     005B 0903                      1- 1006     	BTRSS	STATUS,2
     005C 3rrr                      1- 1007     	LGOTO	_00467_DS_
     005D 21C1                      1- 1008     	MOVIA	0xc1
     005E 04rr                      1- 1009     	SUBAR	_hz,W
     005F                           1- 1010     _00467_DS_:
     005F 0803                      1- 1011     	BTRSS	STATUS,0
     0060 3rrr                      1- 1012     	LGOTO	_00453_DS_
                                    1- 1013     ;;unsigned compare: left < lit (0xE40=3648), size=2
     0061 210E                      1- 1014     	MOVIA	0x0e
                                    1- 1015     	BANKSEL	_hz
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 04rr                      1- 1016     	SUBAR	(_hz + 1),W
     0064 0903                      1- 1017     	BTRSS	STATUS,2
     0065 3rrr                      1- 1018     	LGOTO	_00468_DS_
     0066 2140                      1- 1019     	MOVIA	0x40
     0067 04rr                      1- 1020     	SUBAR	_hz,W
     0068                           1- 1021     _00468_DS_:
     0068 0C03                      1- 1022     	BTRSC	STATUS,0
     0069 3rrr                      1- 1023     	LGOTO	_00453_DS_
                                    1- 1024     	.line	296, "main.c"; 	if(++rockTime >= 20)
                                    1- 1025     	BANKSEL	_rockTime
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 05rr                      1- 1026     	INCR	_rockTime,F
                                    1- 1027     ;;unsigned compare: left < lit (0x14=20), size=1
     006C 2114                      1- 1028     	MOVIA	0x14
     006D 04rr                      1- 1029     	SUBAR	_rockTime,W
     006E 0803                      1- 1030     	BTRSS	STATUS,0
     006F 3rrr                      1- 1031     	LGOTO	_00450_DS_
                                    1- 1032     	.line	298, "main.c"; 	rockStep = 2;
     0070 2102                      1- 1033     	MOVIA	0x02
                                    1- 1034     	BANKSEL	_rockStep
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 00rr                      1- 1035     	MOVAR	_rockStep
                                    1- 1036     	.line	299, "main.c"; 	workTime = 0;
                                    1- 1037     	BANKSEL	_workTime
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 02rr                      1- 1038     	CLRR	_workTime
     0075 02rr                      1- 1039     	CLRR	(_workTime + 1)
                                    1- 1040     	.line	300, "main.c"; 	rockTime = 0;
                                    1- 1041     	BANKSEL	_rockTime
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 02rr                      1- 1042     	CLRR	_rockTime
                                    1- 1043     	.line	301, "main.c"; 	return 1;
     0078 2101                      1- 1044     	MOVIA	0x01
     0079 3rrr                      1- 1045     	LGOTO	_00456_DS_
     007A                           1- 1046     _00450_DS_:
                                    1- 1047     	.line	304, "main.c"; 	return 0;
     007A 2100                      1- 1048     	MOVIA	0x00
     007B 3rrr                      1- 1049     	LGOTO	_00456_DS_
     007C                           1- 1050     _00453_DS_:
                                    1- 1051     	.line	308, "main.c"; 	return 0;
     007C 2100                      1- 1052     	MOVIA	0x00
     007D                           1- 1053     _00456_DS_:
                                    1- 1054     	.line	310, "main.c"; 	}
                                    1- 1055     	RETURN	
     007D 0010                      3-   26 m1      ret
                                    1- 1056     ; exit point of _getData
                                    1- 1058     ;***
                                    1- 1059     ;  pBlock Stats: dbName = C
                                    1- 1060     ;***
                                    1- 1061     ;has an exit
                                    1- 1062     ;functions called:
                                    1- 1063     ;   _ind_light_disp
                                    1- 1064     ;   _ind_light_disp
                                    1- 1065     ;   _ind_light_disp
                                    1- 1066     ;   _ind_light_disp
                                    1- 1067     ;1 compiler assigned register :
                                    1- 1068     ;   r0x1029
                                    1- 1069     ;; Starting pCode block
                                    1- 1070     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1072     _chrgCtr:
                                    1- 1073     ; 2 exit points
                                    1- 1074     	.line	262, "main.c"; 	if(PORTA & 0x08)
     0000 09rr                      1- 1075     	BTRSS	_PORTA,3
     0001 3rrr                      1- 1076     	LGOTO	_00442_DS_
                                    1- 1077     	.line	265, "main.c"; 	workStep = 0;	//����в���ʹ��
                                    1- 1078     	BANKSEL	_workStep
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1079     	CLRR	_workStep
                                    1- 1080     	.line	266, "main.c"; 	COM1 = COM2 = COM3 = 1;
     0004 18rr                      1- 1081     	BSR	_PORTB,1
     0005 08rr                      1- 1082     	BTRSS	_PORTB,1
     0006 1Frr                      1- 1083     	BCR	_PORTA,6
     0007 0Crr                      1- 1084     	BTRSC	_PORTB,1
     0008 1Brr                      1- 1085     	BSR	_PORTA,6
     0009 0Brr                      1- 1086     	BTRSS	_PORTA,6
     000A 1Frr                      1- 1087     	BCR	_PORTA,7
     000B 0Frr                      1- 1088     	BTRSC	_PORTA,6
     000C 1Brr                      1- 1089     	BSR	_PORTA,7
                                    1- 1090     	.line	267, "main.c"; 	if(PORTA & 0x10)
     000D 0Arr                      1- 1091     	BTRSS	_PORTA,4
     000E 3rrr                      1- 1092     	LGOTO	_00439_DS_
                                    1- 1093     	.line	270, "main.c"; 	chrgStep = 2;
     000F 2102                      1- 1094     	MOVIA	0x02
                                    1- 1095     	BANKSEL	_chrgStep
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1096     	MOVAR	_chrgStep
                                    1- 1097     	.line	271, "main.c"; 	ind_light_disp(table[10]);
                                    1- 1098     	BANKSEL	_table
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1099     	MOVR	(_table + 10),W
                                    1- 1100     	BANKSEL	r0x1029
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1101     	MOVAR	r0x1029
     0016 2rrr                      1- 1102     	LCALL	_ind_light_disp
     0017 3rrr                      1- 1103     	LGOTO	_00444_DS_
     0018                           1- 1104     _00439_DS_:
                                    1- 1105     	.line	275, "main.c"; 	chrgStep = 1;
     0018 2101                      1- 1106     	MOVIA	0x01
                                    1- 1107     	BANKSEL	_chrgStep
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 1108     	MOVAR	_chrgStep
                                    1- 1109     	.line	276, "main.c"; 	ind_light_disp(table[11]);
                                    1- 1110     	BANKSEL	_table
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 1111     	MOVR	(_table + 11),W
                                    1- 1112     	BANKSEL	r0x1029
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1113     	MOVAR	r0x1029
     001F 2rrr                      1- 1114     	LCALL	_ind_light_disp
     0020 3rrr                      1- 1115     	LGOTO	_00444_DS_
     0021                           1- 1116     _00442_DS_:
                                    1- 1117     	.line	281, "main.c"; 	chrgStep = 0;
                                    1- 1118     	BANKSEL	_chrgStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 02rr                      1- 1119     	CLRR	_chrgStep
     0023                           1- 1120     _00444_DS_:
                                    1- 1121     	.line	283, "main.c"; 	}
                                    1- 1122     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1- 1123     ; exit point of _chrgCtr
                                    1- 1125     ;***
                                    1- 1126     ;  pBlock Stats: dbName = C
                                    1- 1127     ;***
                                    1- 1128     ;has an exit
                                    1- 1129     ;functions called:
                                    1- 1130     ;   _ind_light_disp
                                    1- 1131     ;   __gptrget1
                                    1- 1132     ;   _ind_light_disp
                                    1- 1133     ;   _delay_us
                                    1- 1134     ;   __gptrget1
                                    1- 1135     ;   _ind_light_disp
                                    1- 1136     ;   _delay_us
                                    1- 1137     ;   __gptrget1
                                    1- 1138     ;   _ind_light_disp
                                    1- 1139     ;   _delay_us
                                    1- 1140     ;   _ind_light_disp
                                    1- 1141     ;   __gptrget1
                                    1- 1142     ;   _ind_light_disp
                                    1- 1143     ;   _delay_us
                                    1- 1144     ;   __gptrget1
                                    1- 1145     ;   _ind_light_disp
                                    1- 1146     ;   _delay_us
                                    1- 1147     ;   __gptrget1
                                    1- 1148     ;   _ind_light_disp
                                    1- 1149     ;   _delay_us
                                    1- 1150     ;5 compiler assigned registers:
                                    1- 1151     ;   r0x102A
                                    1- 1152     ;   r0x102B
                                    1- 1153     ;   STK01
                                    1- 1154     ;   STK00
                                    1- 1155     ;   r0x102C
                                    1- 1156     ;; Starting pCode block
                                    1- 1157     .segment "code"; module=main, function=_refreshLed
     0000                           1- 1159     _refreshLed:
                                    1- 1160     ; 2 exit points
                                    1- 1161     	.line	230, "main.c"; 	ind_light_disp(0);
     0000 2100                      1- 1162     	MOVIA	0x00
     0001 2rrr                      1- 1163     	LCALL	_ind_light_disp
                                    1- 1164     	.line	231, "main.c"; 	COM1 = 1;
     0002 1Brr                      1- 1165     	BSR	_PORTA,7
                                    1- 1166     	.line	232, "main.c"; 	COM2 = 1;
     0003 1Brr                      1- 1167     	BSR	_PORTA,6
                                    1- 1168     	.line	233, "main.c"; 	COM3 = 1;
     0004 18rr                      1- 1169     	BSR	_PORTB,1
                                    1- 1170     	.line	234, "main.c"; 	ind_light_disp(table[baiwei]);
                                    1- 1171     	BANKSEL	_baiwei
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1172     	MOVR	_baiwei,W
     0007 25rr                      1- 1173     	ADDIA	(_table + 0)
                                    1- 1174     	BANKSEL	r0x102A
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 1175     	MOVAR	r0x102A
     000A 21rr                      1- 1176     	MOVIA	((_table + 0) >> 8) & 0xff
     000B 0C03                      1- 1177     	BTRSC	STATUS,0
     000C 2501                      1- 1178     	ADDIA	0x01
                                    1- 1179     	BANKSEL	r0x102B
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1180     	MOVAR	r0x102B
                                    1- 1181     	BANKSEL	r0x102A
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1182     	MOVR	r0x102A,W
     0011 00rr                      1- 1183     	MOVAR	STK01
                                    1- 1184     	BANKSEL	r0x102B
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1185     	MOVR	r0x102B,W
     0014 00rr                      1- 1186     	MOVAR	STK00
     0015 2100                      1- 1187     	MOVIA	0x00
     0016 2rrr                      1- 1188     	LCALL	__gptrget1
                                    1- 1189     	BANKSEL	r0x102C
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1190     	MOVAR	r0x102C
     0019 2rrr                      1- 1191     	LCALL	_ind_light_disp
                                    1- 1192     	.line	235, "main.c"; 	COM1 = 0;
     001A 1Frr                      1- 1193     	BCR	_PORTA,7
                                    1- 1194     	.line	236, "main.c"; 	COM2 = 1;
     001B 1Brr                      1- 1195     	BSR	_PORTA,6
                                    1- 1196     	.line	237, "main.c"; 	COM3 = 1;
     001C 18rr                      1- 1197     	BSR	_PORTB,1
                                    1- 1198     	.line	238, "main.c"; 	delay_us(100);
     001D 2164                      1- 1199     	MOVIA	0x64
     001E 00rr                      1- 1200     	MOVAR	STK00
     001F 2100                      1- 1201     	MOVIA	0x00
     0020 2rrr                      1- 1202     	LCALL	_delay_us
                                    1- 1203     	.line	239, "main.c"; 	COM1 = 1;
     0021 1Brr                      1- 1204     	BSR	_PORTA,7
                                    1- 1205     	.line	240, "main.c"; 	COM2 = 1;
     0022 1Brr                      1- 1206     	BSR	_PORTA,6
                                    1- 1207     	.line	241, "main.c"; 	COM3 = 1;
     0023 18rr                      1- 1208     	BSR	_PORTB,1
                                    1- 1209     	.line	242, "main.c"; 	ind_light_disp(table[shiwei]);
                                    1- 1210     	BANKSEL	_shiwei
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1211     	MOVR	_shiwei,W
     0026 25rr                      1- 1212     	ADDIA	(_table + 0)
                                    1- 1213     	BANKSEL	r0x102A
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1- 1214     	MOVAR	r0x102A
     0029 21rr                      1- 1215     	MOVIA	((_table + 0) >> 8) & 0xff
     002A 0C03                      1- 1216     	BTRSC	STATUS,0
     002B 2501                      1- 1217     	ADDIA	0x01
                                    1- 1218     	BANKSEL	r0x102B
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 1219     	MOVAR	r0x102B
                                    1- 1220     	BANKSEL	r0x102A
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1- 1221     	MOVR	r0x102A,W
     0030 00rr                      1- 1222     	MOVAR	STK01
                                    1- 1223     	BANKSEL	r0x102B
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1- 1224     	MOVR	r0x102B,W
     0033 00rr                      1- 1225     	MOVAR	STK00
     0034 2100                      1- 1226     	MOVIA	0x00
     0035 2rrr                      1- 1227     	LCALL	__gptrget1
                                    1- 1228     	BANKSEL	r0x102C
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 1229     	MOVAR	r0x102C
     0038 2rrr                      1- 1230     	LCALL	_ind_light_disp
                                    1- 1231     	.line	243, "main.c"; 	COM1 = 1;
     0039 1Brr                      1- 1232     	BSR	_PORTA,7
                                    1- 1233     	.line	244, "main.c"; 	COM2 = 0;
     003A 1Frr                      1- 1234     	BCR	_PORTA,6
                                    1- 1235     	.line	245, "main.c"; 	COM3 = 1;
     003B 18rr                      1- 1236     	BSR	_PORTB,1
                                    1- 1237     	.line	246, "main.c"; 	delay_us(100);
     003C 2164                      1- 1238     	MOVIA	0x64
     003D 00rr                      1- 1239     	MOVAR	STK00
     003E 2100                      1- 1240     	MOVIA	0x00
     003F 2rrr                      1- 1241     	LCALL	_delay_us
                                    1- 1242     	.line	247, "main.c"; 	COM1 = 1;
     0040 1Brr                      1- 1243     	BSR	_PORTA,7
                                    1- 1244     	.line	248, "main.c"; 	COM2 = 1;
     0041 1Brr                      1- 1245     	BSR	_PORTA,6
                                    1- 1246     	.line	249, "main.c"; 	COM3 = 1;
     0042 18rr                      1- 1247     	BSR	_PORTB,1
                                    1- 1248     	.line	250, "main.c"; 	ind_light_disp(table[gewei]);
                                    1- 1249     	BANKSEL	_gewei
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 01rr                      1- 1250     	MOVR	_gewei,W
     0045 25rr                      1- 1251     	ADDIA	(_table + 0)
                                    1- 1252     	BANKSEL	r0x102A
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 00rr                      1- 1253     	MOVAR	r0x102A
     0048 21rr                      1- 1254     	MOVIA	((_table + 0) >> 8) & 0xff
     0049 0C03                      1- 1255     	BTRSC	STATUS,0
     004A 2501                      1- 1256     	ADDIA	0x01
                                    1- 1257     	BANKSEL	r0x102B
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1- 1258     	MOVAR	r0x102B
                                    1- 1259     	BANKSEL	r0x102A
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1- 1260     	MOVR	r0x102A,W
     004F 00rr                      1- 1261     	MOVAR	STK01
                                    1- 1262     	BANKSEL	r0x102B
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1- 1263     	MOVR	r0x102B,W
     0052 00rr                      1- 1264     	MOVAR	STK00
     0053 2100                      1- 1265     	MOVIA	0x00
     0054 2rrr                      1- 1266     	LCALL	__gptrget1
                                    1- 1267     	BANKSEL	r0x102C
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 00rr                      1- 1268     	MOVAR	r0x102C
     0057 2rrr                      1- 1269     	LCALL	_ind_light_disp
                                    1- 1270     	.line	251, "main.c"; 	COM1 = 1;
     0058 1Brr                      1- 1271     	BSR	_PORTA,7
                                    1- 1272     	.line	252, "main.c"; 	COM2 = 1;
     0059 1Brr                      1- 1273     	BSR	_PORTA,6
                                    1- 1274     	.line	253, "main.c"; 	COM3 = 0;
     005A 1Crr                      1- 1275     	BCR	_PORTB,1
                                    1- 1276     	.line	254, "main.c"; 	delay_us(100);
     005B 2164                      1- 1277     	MOVIA	0x64
     005C 00rr                      1- 1278     	MOVAR	STK00
     005D 2100                      1- 1279     	MOVIA	0x00
     005E 2rrr                      1- 1280     	LCALL	_delay_us
                                    1- 1281     	.line	255, "main.c"; 	COM1 = 1;
     005F 1Brr                      1- 1282     	BSR	_PORTA,7
                                    1- 1283     	.line	256, "main.c"; 	COM2 = 1;
     0060 1Brr                      1- 1284     	BSR	_PORTA,6
                                    1- 1285     	.line	257, "main.c"; 	COM3 = 1;
     0061 18rr                      1- 1286     	BSR	_PORTB,1
                                    1- 1287     	.line	258, "main.c"; 	}
                                    1- 1288     	RETURN	
     0062 0010                      3-   26 m1      ret
                                    1- 1289     ; exit point of _refreshLed
                                    1- 1291     ;***
                                    1- 1292     ;  pBlock Stats: dbName = C
                                    1- 1293     ;***
                                    1- 1294     ;; Starting pCode block
                                    1- 1295     .segment "code"; module=main, function=_workCtr
     0000                           1- 1297     _workCtr:
                                    1- 1298     ; 0 exit points
                                    1- 1299     	.line	134, "main.c"; 	if(rockStep == 1)
                                    1- 1300     	BANKSEL	_rockStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1301     	MOVR	_rockStep,W
     0002 2401                      1- 1302     	XORIA	0x01
     0003 0903                      1- 1303     	BTRSS	STATUS,2
     0004 3rrr                      1- 1304     	LGOTO	_00287_DS_
                                    1- 1305     	.line	136, "main.c"; 	++workTime;
                                    1- 1306     	BANKSEL	_workTime
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1307     	INCR	_workTime,F
     0007 0D03                      1- 1308     	BTRSC	STATUS,2
     0008 05rr                      1- 1309     	INCR	(_workTime + 1),F
                                    1- 1310     ;;unsigned compare: left < lit (0x18=24), size=2
                                    1- 1311     	.line	137, "main.c"; 	if(workTime < 24)
     0009 2100                      1- 1312     	MOVIA	0x00
     000A 04rr                      1- 1313     	SUBAR	(_workTime + 1),W
     000B 0903                      1- 1314     	BTRSS	STATUS,2
     000C 3rrr                      1- 1315     	LGOTO	_00399_DS_
     000D 2118                      1- 1316     	MOVIA	0x18
     000E 04rr                      1- 1317     	SUBAR	_workTime,W
     000F                           1- 1318     _00399_DS_:
     000F 0C03                      1- 1319     	BTRSC	STATUS,0
     0010 3rrr                      1- 1320     	LGOTO	_00205_DS_
                                    1- 1321     	.line	138, "main.c"; 	MOTOR = 1;
     0011 19rr                      1- 1322     	BSR	_PORTA,2
     0012 3rrr                      1- 1323     	LGOTO	_00289_DS_
                                    1- 1324     ;;unsigned compare: left < lit (0x2D=45), size=2
     0013                           1- 1325     _00205_DS_:
                                    1- 1326     	.line	139, "main.c"; 	else if(workTime < 45)
     0013 2100                      1- 1327     	MOVIA	0x00
                                    1- 1328     	BANKSEL	_workTime
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1329     	SUBAR	(_workTime + 1),W
     0016 0903                      1- 1330     	BTRSS	STATUS,2
     0017 3rrr                      1- 1331     	LGOTO	_00400_DS_
     0018 212D                      1- 1332     	MOVIA	0x2d
     0019 04rr                      1- 1333     	SUBAR	_workTime,W
     001A                           1- 1334     _00400_DS_:
     001A 0C03                      1- 1335     	BTRSC	STATUS,0
     001B 3rrr                      1- 1336     	LGOTO	_00202_DS_
                                    1- 1337     	.line	140, "main.c"; 	MOTOR = 0;
     001C 1Drr                      1- 1338     	BCR	_PORTA,2
     001D 3rrr                      1- 1339     	LGOTO	_00289_DS_
                                    1- 1340     ;;unsigned compare: left < lit (0x44=68), size=2
     001E                           1- 1341     _00202_DS_:
                                    1- 1342     	.line	141, "main.c"; 	else if(workTime < 68)
     001E 2100                      1- 1343     	MOVIA	0x00
                                    1- 1344     	BANKSEL	_workTime
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1- 1345     	SUBAR	(_workTime + 1),W
     0021 0903                      1- 1346     	BTRSS	STATUS,2
     0022 3rrr                      1- 1347     	LGOTO	_00401_DS_
     0023 2144                      1- 1348     	MOVIA	0x44
     0024 04rr                      1- 1349     	SUBAR	_workTime,W
     0025                           1- 1350     _00401_DS_:
     0025 0C03                      1- 1351     	BTRSC	STATUS,0
     0026 3rrr                      1- 1352     	LGOTO	_00199_DS_
                                    1- 1353     	.line	142, "main.c"; 	MOTOR = 1;
     0027 19rr                      1- 1354     	BSR	_PORTA,2
     0028 3rrr                      1- 1355     	LGOTO	_00289_DS_
                                    1- 1356     ;;unsigned compare: left < lit (0x59=89), size=2
     0029                           1- 1357     _00199_DS_:
                                    1- 1358     	.line	143, "main.c"; 	else if(workTime < 89)
     0029 2100                      1- 1359     	MOVIA	0x00
                                    1- 1360     	BANKSEL	_workTime
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 04rr                      1- 1361     	SUBAR	(_workTime + 1),W
     002C 0903                      1- 1362     	BTRSS	STATUS,2
     002D 3rrr                      1- 1363     	LGOTO	_00402_DS_
     002E 2159                      1- 1364     	MOVIA	0x59
     002F 04rr                      1- 1365     	SUBAR	_workTime,W
     0030                           1- 1366     _00402_DS_:
     0030 0C03                      1- 1367     	BTRSC	STATUS,0
     0031 3rrr                      1- 1368     	LGOTO	_00196_DS_
                                    1- 1369     	.line	144, "main.c"; 	MOTOR = 0;
     0032 1Drr                      1- 1370     	BCR	_PORTA,2
     0033 3rrr                      1- 1371     	LGOTO	_00289_DS_
                                    1- 1372     ;;unsigned compare: left < lit (0x6F=111), size=2
     0034                           1- 1373     _00196_DS_:
                                    1- 1374     	.line	145, "main.c"; 	else if(workTime < 111)
     0034 2100                      1- 1375     	MOVIA	0x00
                                    1- 1376     	BANKSEL	_workTime
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 04rr                      1- 1377     	SUBAR	(_workTime + 1),W
     0037 0903                      1- 1378     	BTRSS	STATUS,2
     0038 3rrr                      1- 1379     	LGOTO	_00403_DS_
     0039 216F                      1- 1380     	MOVIA	0x6f
     003A 04rr                      1- 1381     	SUBAR	_workTime,W
     003B                           1- 1382     _00403_DS_:
     003B 0C03                      1- 1383     	BTRSC	STATUS,0
     003C 3rrr                      1- 1384     	LGOTO	_00193_DS_
                                    1- 1385     	.line	146, "main.c"; 	MOTOR = 1;
     003D 19rr                      1- 1386     	BSR	_PORTA,2
     003E 3rrr                      1- 1387     	LGOTO	_00289_DS_
                                    1- 1388     ;;unsigned compare: left < lit (0x8E=142), size=2
     003F                           1- 1389     _00193_DS_:
                                    1- 1390     	.line	147, "main.c"; 	else if(workTime < 142)
     003F 2100                      1- 1391     	MOVIA	0x00
                                    1- 1392     	BANKSEL	_workTime
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 04rr                      1- 1393     	SUBAR	(_workTime + 1),W
     0042 0903                      1- 1394     	BTRSS	STATUS,2
     0043 3rrr                      1- 1395     	LGOTO	_00404_DS_
     0044 218E                      1- 1396     	MOVIA	0x8e
     0045 04rr                      1- 1397     	SUBAR	_workTime,W
     0046                           1- 1398     _00404_DS_:
     0046 0C03                      1- 1399     	BTRSC	STATUS,0
     0047 3rrr                      1- 1400     	LGOTO	_00190_DS_
                                    1- 1401     	.line	148, "main.c"; 	MOTOR = 0;
     0048 1Drr                      1- 1402     	BCR	_PORTA,2
     0049 3rrr                      1- 1403     	LGOTO	_00289_DS_
                                    1- 1404     ;;unsigned compare: left < lit (0xAE=174), size=2
     004A                           1- 1405     _00190_DS_:
                                    1- 1406     	.line	149, "main.c"; 	else if(workTime < 174)
     004A 2100                      1- 1407     	MOVIA	0x00
                                    1- 1408     	BANKSEL	_workTime
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 04rr                      1- 1409     	SUBAR	(_workTime + 1),W
     004D 0903                      1- 1410     	BTRSS	STATUS,2
     004E 3rrr                      1- 1411     	LGOTO	_00405_DS_
     004F 21AE                      1- 1412     	MOVIA	0xae
     0050 04rr                      1- 1413     	SUBAR	_workTime,W
     0051                           1- 1414     _00405_DS_:
     0051 0C03                      1- 1415     	BTRSC	STATUS,0
     0052 3rrr                      1- 1416     	LGOTO	_00187_DS_
                                    1- 1417     	.line	150, "main.c"; 	MOTOR = 1;
     0053 19rr                      1- 1418     	BSR	_PORTA,2
     0054 3rrr                      1- 1419     	LGOTO	_00289_DS_
     0055                           1- 1420     _00187_DS_:
                                    1- 1421     	.line	153, "main.c"; 	MOTOR = 0;
     0055 1Drr                      1- 1422     	BCR	_PORTA,2
                                    1- 1423     	.line	154, "main.c"; 	rockStep = 0;
                                    1- 1424     	BANKSEL	_rockStep
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 02rr                      1- 1425     	CLRR	_rockStep
     0058 3rrr                      1- 1426     	LGOTO	_00289_DS_
     0059                           1- 1427     _00287_DS_:
                                    1- 1428     	.line	157, "main.c"; 	else if(rockStep == 2)
                                    1- 1429     	BANKSEL	_rockStep
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 01rr                      1- 1430     	MOVR	_rockStep,W
     005B 2402                      1- 1431     	XORIA	0x02
     005C 0903                      1- 1432     	BTRSS	STATUS,2
     005D 3rrr                      1- 1433     	LGOTO	_00289_DS_
                                    1- 1434     	.line	159, "main.c"; 	++workTime;
                                    1- 1435     	BANKSEL	_workTime
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 05rr                      1- 1436     	INCR	_workTime,F
     0060 0D03                      1- 1437     	BTRSC	STATUS,2
     0061 05rr                      1- 1438     	INCR	(_workTime + 1),F
                                    1- 1439     ;;unsigned compare: left < lit (0x4F=79), size=2
                                    1- 1440     	.line	160, "main.c"; 	if(workTime < 79)
     0062 2100                      1- 1441     	MOVIA	0x00
     0063 04rr                      1- 1442     	SUBAR	(_workTime + 1),W
     0064 0903                      1- 1443     	BTRSS	STATUS,2
     0065 3rrr                      1- 1444     	LGOTO	_00406_DS_
     0066 214F                      1- 1445     	MOVIA	0x4f
     0067 04rr                      1- 1446     	SUBAR	_workTime,W
     0068                           1- 1447     _00406_DS_:
     0068 0C03                      1- 1448     	BTRSC	STATUS,0
     0069 3rrr                      1- 1449     	LGOTO	_00208_DS_
                                    1- 1450     	.line	161, "main.c"; 	MOTOR = 0;
     006A 1Drr                      1- 1451     	BCR	_PORTA,2
                                    1- 1452     ;;unsigned compare: left < lit (0x5A=90), size=2
     006B                           1- 1453     _00208_DS_:
                                    1- 1454     	.line	162, "main.c"; 	if(workTime < 90)
     006B 2100                      1- 1455     	MOVIA	0x00
                                    1- 1456     	BANKSEL	_workTime
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 04rr                      1- 1457     	SUBAR	(_workTime + 1),W
     006E 0903                      1- 1458     	BTRSS	STATUS,2
     006F 3rrr                      1- 1459     	LGOTO	_00407_DS_
     0070 215A                      1- 1460     	MOVIA	0x5a
     0071 04rr                      1- 1461     	SUBAR	_workTime,W
     0072                           1- 1462     _00407_DS_:
     0072 0C03                      1- 1463     	BTRSC	STATUS,0
     0073 3rrr                      1- 1464     	LGOTO	_00282_DS_
                                    1- 1465     	.line	163, "main.c"; 	MOTOR = 1;
     0074 19rr                      1- 1466     	BSR	_PORTA,2
     0075 3rrr                      1- 1467     	LGOTO	_00289_DS_
                                    1- 1468     ;;unsigned compare: left < lit (0x5F=95), size=2
     0076                           1- 1469     _00282_DS_:
                                    1- 1470     	.line	164, "main.c"; 	else if(workTime < 95)
     0076 2100                      1- 1471     	MOVIA	0x00
                                    1- 1472     	BANKSEL	_workTime
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 04rr                      1- 1473     	SUBAR	(_workTime + 1),W
     0079 0903                      1- 1474     	BTRSS	STATUS,2
     007A 3rrr                      1- 1475     	LGOTO	_00408_DS_
     007B 215F                      1- 1476     	MOVIA	0x5f
     007C 04rr                      1- 1477     	SUBAR	_workTime,W
     007D                           1- 1478     _00408_DS_:
     007D 0C03                      1- 1479     	BTRSC	STATUS,0
     007E 3rrr                      1- 1480     	LGOTO	_00279_DS_
                                    1- 1481     	.line	165, "main.c"; 	MOTOR = 0;
     007F 1Drr                      1- 1482     	BCR	_PORTA,2
     0080 3rrr                      1- 1483     	LGOTO	_00289_DS_
                                    1- 1484     ;;unsigned compare: left < lit (0x70=112), size=2
     0081                           1- 1485     _00279_DS_:
                                    1- 1486     	.line	166, "main.c"; 	else if(workTime < 112)
     0081 2100                      1- 1487     	MOVIA	0x00
                                    1- 1488     	BANKSEL	_workTime
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 04rr                      1- 1489     	SUBAR	(_workTime + 1),W
     0084 0903                      1- 1490     	BTRSS	STATUS,2
     0085 3rrr                      1- 1491     	LGOTO	_00409_DS_
     0086 2170                      1- 1492     	MOVIA	0x70
     0087 04rr                      1- 1493     	SUBAR	_workTime,W
     0088                           1- 1494     _00409_DS_:
     0088 0C03                      1- 1495     	BTRSC	STATUS,0
     0089 3rrr                      1- 1496     	LGOTO	_00276_DS_
                                    1- 1497     	.line	167, "main.c"; 	MOTOR = 1;
     008A 19rr                      1- 1498     	BSR	_PORTA,2
     008B 3rrr                      1- 1499     	LGOTO	_00289_DS_
                                    1- 1500     ;;unsigned compare: left < lit (0x73=115), size=2
     008C                           1- 1501     _00276_DS_:
                                    1- 1502     	.line	168, "main.c"; 	else if(workTime < 115)
     008C 2100                      1- 1503     	MOVIA	0x00
                                    1- 1504     	BANKSEL	_workTime
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 04rr                      1- 1505     	SUBAR	(_workTime + 1),W
     008F 0903                      1- 1506     	BTRSS	STATUS,2
     0090 3rrr                      1- 1507     	LGOTO	_00410_DS_
     0091 2173                      1- 1508     	MOVIA	0x73
     0092 04rr                      1- 1509     	SUBAR	_workTime,W
     0093                           1- 1510     _00410_DS_:
     0093 0C03                      1- 1511     	BTRSC	STATUS,0
     0094 3rrr                      1- 1512     	LGOTO	_00273_DS_
                                    1- 1513     	.line	169, "main.c"; 	MOTOR = 0;
     0095 1Drr                      1- 1514     	BCR	_PORTA,2
     0096 3rrr                      1- 1515     	LGOTO	_00289_DS_
                                    1- 1516     ;;unsigned compare: left < lit (0x81=129), size=2
     0097                           1- 1517     _00273_DS_:
                                    1- 1518     	.line	170, "main.c"; 	else if(workTime < 129)
     0097 2100                      1- 1519     	MOVIA	0x00
                                    1- 1520     	BANKSEL	_workTime
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 04rr                      1- 1521     	SUBAR	(_workTime + 1),W
     009A 0903                      1- 1522     	BTRSS	STATUS,2
     009B 3rrr                      1- 1523     	LGOTO	_00411_DS_
     009C 2181                      1- 1524     	MOVIA	0x81
     009D 04rr                      1- 1525     	SUBAR	_workTime,W
     009E                           1- 1526     _00411_DS_:
     009E 0C03                      1- 1527     	BTRSC	STATUS,0
     009F 3rrr                      1- 1528     	LGOTO	_00270_DS_
                                    1- 1529     	.line	171, "main.c"; 	MOTOR = 1;
     00A0 19rr                      1- 1530     	BSR	_PORTA,2
     00A1 3rrr                      1- 1531     	LGOTO	_00289_DS_
                                    1- 1532     ;;unsigned compare: left < lit (0xA4=164), size=2
     00A2                           1- 1533     _00270_DS_:
                                    1- 1534     	.line	172, "main.c"; 	else if(workTime < 164)
     00A2 2100                      1- 1535     	MOVIA	0x00
                                    1- 1536     	BANKSEL	_workTime
     00A3 rrrr                      3-   71 m1      .banksel ram_address
     00A4 04rr                      1- 1537     	SUBAR	(_workTime + 1),W
     00A5 0903                      1- 1538     	BTRSS	STATUS,2
     00A6 3rrr                      1- 1539     	LGOTO	_00412_DS_
     00A7 21A4                      1- 1540     	MOVIA	0xa4
     00A8 04rr                      1- 1541     	SUBAR	_workTime,W
     00A9                           1- 1542     _00412_DS_:
     00A9 0C03                      1- 1543     	BTRSC	STATUS,0
     00AA 3rrr                      1- 1544     	LGOTO	_00267_DS_
                                    1- 1545     	.line	173, "main.c"; 	MOTOR = 0;
     00AB 1Drr                      1- 1546     	BCR	_PORTA,2
     00AC 3rrr                      1- 1547     	LGOTO	_00289_DS_
                                    1- 1548     ;;unsigned compare: left < lit (0xAF=175), size=2
     00AD                           1- 1549     _00267_DS_:
                                    1- 1550     	.line	174, "main.c"; 	else if(workTime < 175)
     00AD 2100                      1- 1551     	MOVIA	0x00
                                    1- 1552     	BANKSEL	_workTime
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 04rr                      1- 1553     	SUBAR	(_workTime + 1),W
     00B0 0903                      1- 1554     	BTRSS	STATUS,2
     00B1 3rrr                      1- 1555     	LGOTO	_00413_DS_
     00B2 21AF                      1- 1556     	MOVIA	0xaf
     00B3 04rr                      1- 1557     	SUBAR	_workTime,W
     00B4                           1- 1558     _00413_DS_:
     00B4 0C03                      1- 1559     	BTRSC	STATUS,0
     00B5 3rrr                      1- 1560     	LGOTO	_00264_DS_
                                    1- 1561     	.line	175, "main.c"; 	MOTOR = 1;
     00B6 19rr                      1- 1562     	BSR	_PORTA,2
     00B7 3rrr                      1- 1563     	LGOTO	_00289_DS_
                                    1- 1564     ;;unsigned compare: left < lit (0xB4=180), size=2
     00B8                           1- 1565     _00264_DS_:
                                    1- 1566     	.line	176, "main.c"; 	else if(workTime < 180)
     00B8 2100                      1- 1567     	MOVIA	0x00
                                    1- 1568     	BANKSEL	_workTime
     00B9 rrrr                      3-   71 m1      .banksel ram_address
     00BA 04rr                      1- 1569     	SUBAR	(_workTime + 1),W
     00BB 0903                      1- 1570     	BTRSS	STATUS,2
     00BC 3rrr                      1- 1571     	LGOTO	_00414_DS_
     00BD 21B4                      1- 1572     	MOVIA	0xb4
     00BE 04rr                      1- 1573     	SUBAR	_workTime,W
     00BF                           1- 1574     _00414_DS_:
     00BF 0C03                      1- 1575     	BTRSC	STATUS,0
     00C0 3rrr                      1- 1576     	LGOTO	_00261_DS_
                                    1- 1577     	.line	177, "main.c"; 	MOTOR = 0;
     00C1 1Drr                      1- 1578     	BCR	_PORTA,2
     00C2 3rrr                      1- 1579     	LGOTO	_00289_DS_
                                    1- 1580     ;;unsigned compare: left < lit (0xC5=197), size=2
     00C3                           1- 1581     _00261_DS_:
                                    1- 1582     	.line	178, "main.c"; 	else if(workTime < 197)
     00C3 2100                      1- 1583     	MOVIA	0x00
                                    1- 1584     	BANKSEL	_workTime
     00C4 rrrr                      3-   71 m1      .banksel ram_address
     00C5 04rr                      1- 1585     	SUBAR	(_workTime + 1),W
     00C6 0903                      1- 1586     	BTRSS	STATUS,2
     00C7 3rrr                      1- 1587     	LGOTO	_00415_DS_
     00C8 21C5                      1- 1588     	MOVIA	0xc5
     00C9 04rr                      1- 1589     	SUBAR	_workTime,W
     00CA                           1- 1590     _00415_DS_:
     00CA 0C03                      1- 1591     	BTRSC	STATUS,0
     00CB 3rrr                      1- 1592     	LGOTO	_00258_DS_
                                    1- 1593     	.line	179, "main.c"; 	MOTOR = 1;
     00CC 19rr                      1- 1594     	BSR	_PORTA,2
     00CD 3rrr                      1- 1595     	LGOTO	_00289_DS_
                                    1- 1596     ;;unsigned compare: left < lit (0xC8=200), size=2
     00CE                           1- 1597     _00258_DS_:
                                    1- 1598     	.line	180, "main.c"; 	else if(workTime < 200)
     00CE 2100                      1- 1599     	MOVIA	0x00
                                    1- 1600     	BANKSEL	_workTime
     00CF rrrr                      3-   71 m1      .banksel ram_address
     00D0 04rr                      1- 1601     	SUBAR	(_workTime + 1),W
     00D1 0903                      1- 1602     	BTRSS	STATUS,2
     00D2 3rrr                      1- 1603     	LGOTO	_00416_DS_
     00D3 21C8                      1- 1604     	MOVIA	0xc8
     00D4 04rr                      1- 1605     	SUBAR	_workTime,W
     00D5                           1- 1606     _00416_DS_:
     00D5 0C03                      1- 1607     	BTRSC	STATUS,0
     00D6 3rrr                      1- 1608     	LGOTO	_00255_DS_
                                    1- 1609     	.line	181, "main.c"; 	MOTOR = 0;
     00D7 1Drr                      1- 1610     	BCR	_PORTA,2
     00D8 3rrr                      1- 1611     	LGOTO	_00289_DS_
                                    1- 1612     ;;unsigned compare: left < lit (0xD6=214), size=2
     00D9                           1- 1613     _00255_DS_:
                                    1- 1614     	.line	182, "main.c"; 	else if(workTime < 214)
     00D9 2100                      1- 1615     	MOVIA	0x00
                                    1- 1616     	BANKSEL	_workTime
     00DA rrrr                      3-   71 m1      .banksel ram_address
     00DB 04rr                      1- 1617     	SUBAR	(_workTime + 1),W
     00DC 0903                      1- 1618     	BTRSS	STATUS,2
     00DD 3rrr                      1- 1619     	LGOTO	_00417_DS_
     00DE 21D6                      1- 1620     	MOVIA	0xd6
     00DF 04rr                      1- 1621     	SUBAR	_workTime,W
     00E0                           1- 1622     _00417_DS_:
     00E0 0C03                      1- 1623     	BTRSC	STATUS,0
     00E1 3rrr                      1- 1624     	LGOTO	_00252_DS_
                                    1- 1625     	.line	183, "main.c"; 	MOTOR = 1;
     00E2 19rr                      1- 1626     	BSR	_PORTA,2
     00E3 3rrr                      1- 1627     	LGOTO	_00289_DS_
                                    1- 1628     ;;unsigned compare: left < lit (0xF9=249), size=2
     00E4                           1- 1629     _00252_DS_:
                                    1- 1630     	.line	184, "main.c"; 	else if(workTime < 249)
     00E4 2100                      1- 1631     	MOVIA	0x00
                                    1- 1632     	BANKSEL	_workTime
     00E5 rrrr                      3-   71 m1      .banksel ram_address
     00E6 04rr                      1- 1633     	SUBAR	(_workTime + 1),W
     00E7 0903                      1- 1634     	BTRSS	STATUS,2
     00E8 3rrr                      1- 1635     	LGOTO	_00418_DS_
     00E9 21F9                      1- 1636     	MOVIA	0xf9
     00EA 04rr                      1- 1637     	SUBAR	_workTime,W
     00EB                           1- 1638     _00418_DS_:
     00EB 0C03                      1- 1639     	BTRSC	STATUS,0
     00EC 3rrr                      1- 1640     	LGOTO	_00249_DS_
                                    1- 1641     	.line	185, "main.c"; 	MOTOR = 0;
     00ED 1Drr                      1- 1642     	BCR	_PORTA,2
     00EE 3rrr                      1- 1643     	LGOTO	_00289_DS_
                                    1- 1644     ;;unsigned compare: left < lit (0x104=260), size=2
     00EF                           1- 1645     _00249_DS_:
                                    1- 1646     	.line	186, "main.c"; 	else if(workTime < 260)
     00EF 2101                      1- 1647     	MOVIA	0x01
                                    1- 1648     	BANKSEL	_workTime
     00F0 rrrr                      3-   71 m1      .banksel ram_address
     00F1 04rr                      1- 1649     	SUBAR	(_workTime + 1),W
     00F2 0903                      1- 1650     	BTRSS	STATUS,2
     00F3 3rrr                      1- 1651     	LGOTO	_00419_DS_
     00F4 2104                      1- 1652     	MOVIA	0x04
     00F5 04rr                      1- 1653     	SUBAR	_workTime,W
     00F6                           1- 1654     _00419_DS_:
     00F6 0C03                      1- 1655     	BTRSC	STATUS,0
     00F7 3rrr                      1- 1656     	LGOTO	_00246_DS_
                                    1- 1657     	.line	187, "main.c"; 	MOTOR = 1;
     00F8 19rr                      1- 1658     	BSR	_PORTA,2
     00F9 3rrr                      1- 1659     	LGOTO	_00289_DS_
                                    1- 1660     ;;unsigned compare: left < lit (0x109=265), size=2
     00FA                           1- 1661     _00246_DS_:
                                    1- 1662     	.line	188, "main.c"; 	else if(workTime < 265)
     00FA 2101                      1- 1663     	MOVIA	0x01
                                    1- 1664     	BANKSEL	_workTime
     00FB rrrr                      3-   71 m1      .banksel ram_address
     00FC 04rr                      1- 1665     	SUBAR	(_workTime + 1),W
     00FD 0903                      1- 1666     	BTRSS	STATUS,2
     00FE 3rrr                      1- 1667     	LGOTO	_00420_DS_
     00FF 2109                      1- 1668     	MOVIA	0x09
     0100 04rr                      1- 1669     	SUBAR	_workTime,W
     0101                           1- 1670     _00420_DS_:
     0101 0C03                      1- 1671     	BTRSC	STATUS,0
     0102 3rrr                      1- 1672     	LGOTO	_00243_DS_
                                    1- 1673     	.line	189, "main.c"; 	MOTOR = 0;
     0103 1Drr                      1- 1674     	BCR	_PORTA,2
     0104 3rrr                      1- 1675     	LGOTO	_00289_DS_
                                    1- 1676     ;;unsigned compare: left < lit (0x11A=282), size=2
     0105                           1- 1677     _00243_DS_:
                                    1- 1678     	.line	190, "main.c"; 	else if(workTime < 282)
     0105 2101                      1- 1679     	MOVIA	0x01
                                    1- 1680     	BANKSEL	_workTime
     0106 rrrr                      3-   71 m1      .banksel ram_address
     0107 04rr                      1- 1681     	SUBAR	(_workTime + 1),W
     0108 0903                      1- 1682     	BTRSS	STATUS,2
     0109 3rrr                      1- 1683     	LGOTO	_00421_DS_
     010A 211A                      1- 1684     	MOVIA	0x1a
     010B 04rr                      1- 1685     	SUBAR	_workTime,W
     010C                           1- 1686     _00421_DS_:
     010C 0C03                      1- 1687     	BTRSC	STATUS,0
     010D 3rrr                      1- 1688     	LGOTO	_00240_DS_
                                    1- 1689     	.line	191, "main.c"; 	MOTOR = 1;
     010E 19rr                      1- 1690     	BSR	_PORTA,2
     010F 3rrr                      1- 1691     	LGOTO	_00289_DS_
                                    1- 1692     ;;unsigned compare: left < lit (0x11D=285), size=2
     0110                           1- 1693     _00240_DS_:
                                    1- 1694     	.line	192, "main.c"; 	else if(workTime < 285)
     0110 2101                      1- 1695     	MOVIA	0x01
                                    1- 1696     	BANKSEL	_workTime
     0111 rrrr                      3-   71 m1      .banksel ram_address
     0112 04rr                      1- 1697     	SUBAR	(_workTime + 1),W
     0113 0903                      1- 1698     	BTRSS	STATUS,2
     0114 3rrr                      1- 1699     	LGOTO	_00422_DS_
     0115 211D                      1- 1700     	MOVIA	0x1d
     0116 04rr                      1- 1701     	SUBAR	_workTime,W
     0117                           1- 1702     _00422_DS_:
     0117 0C03                      1- 1703     	BTRSC	STATUS,0
     0118 3rrr                      1- 1704     	LGOTO	_00237_DS_
                                    1- 1705     	.line	193, "main.c"; 	MOTOR = 0;
     0119 1Drr                      1- 1706     	BCR	_PORTA,2
     011A 3rrr                      1- 1707     	LGOTO	_00289_DS_
                                    1- 1708     ;;unsigned compare: left < lit (0x12C=300), size=2
     011B                           1- 1709     _00237_DS_:
                                    1- 1710     	.line	194, "main.c"; 	else if(workTime < 300)
     011B 2101                      1- 1711     	MOVIA	0x01
                                    1- 1712     	BANKSEL	_workTime
     011C rrrr                      3-   71 m1      .banksel ram_address
     011D 04rr                      1- 1713     	SUBAR	(_workTime + 1),W
     011E 0903                      1- 1714     	BTRSS	STATUS,2
     011F 3rrr                      1- 1715     	LGOTO	_00423_DS_
     0120 212C                      1- 1716     	MOVIA	0x2c
     0121 04rr                      1- 1717     	SUBAR	_workTime,W
     0122                           1- 1718     _00423_DS_:
     0122 0C03                      1- 1719     	BTRSC	STATUS,0
     0123 3rrr                      1- 1720     	LGOTO	_00234_DS_
                                    1- 1721     	.line	195, "main.c"; 	MOTOR = 1;
     0124 19rr                      1- 1722     	BSR	_PORTA,2
     0125 3rrr                      1- 1723     	LGOTO	_00289_DS_
                                    1- 1724     ;;unsigned compare: left < lit (0x14D=333), size=2
     0126                           1- 1725     _00234_DS_:
                                    1- 1726     	.line	196, "main.c"; 	else if(workTime < 333)
     0126 2101                      1- 1727     	MOVIA	0x01
                                    1- 1728     	BANKSEL	_workTime
     0127 rrrr                      3-   71 m1      .banksel ram_address
     0128 04rr                      1- 1729     	SUBAR	(_workTime + 1),W
     0129 0903                      1- 1730     	BTRSS	STATUS,2
     012A 3rrr                      1- 1731     	LGOTO	_00424_DS_
     012B 214D                      1- 1732     	MOVIA	0x4d
     012C 04rr                      1- 1733     	SUBAR	_workTime,W
     012D                           1- 1734     _00424_DS_:
     012D 0C03                      1- 1735     	BTRSC	STATUS,0
     012E 3rrr                      1- 1736     	LGOTO	_00231_DS_
                                    1- 1737     	.line	197, "main.c"; 	MOTOR = 0;
     012F 1Drr                      1- 1738     	BCR	_PORTA,2
     0130 3rrr                      1- 1739     	LGOTO	_00289_DS_
                                    1- 1740     ;;unsigned compare: left < lit (0x158=344), size=2
     0131                           1- 1741     _00231_DS_:
                                    1- 1742     	.line	198, "main.c"; 	else if(workTime < 344)
     0131 2101                      1- 1743     	MOVIA	0x01
                                    1- 1744     	BANKSEL	_workTime
     0132 rrrr                      3-   71 m1      .banksel ram_address
     0133 04rr                      1- 1745     	SUBAR	(_workTime + 1),W
     0134 0903                      1- 1746     	BTRSS	STATUS,2
     0135 3rrr                      1- 1747     	LGOTO	_00425_DS_
     0136 2158                      1- 1748     	MOVIA	0x58
     0137 04rr                      1- 1749     	SUBAR	_workTime,W
     0138                           1- 1750     _00425_DS_:
     0138 0C03                      1- 1751     	BTRSC	STATUS,0
     0139 3rrr                      1- 1752     	LGOTO	_00228_DS_
                                    1- 1753     	.line	199, "main.c"; 	MOTOR = 1;
     013A 19rr                      1- 1754     	BSR	_PORTA,2
     013B 3rrr                      1- 1755     	LGOTO	_00289_DS_
                                    1- 1756     ;;unsigned compare: left < lit (0x15E=350), size=2
     013C                           1- 1757     _00228_DS_:
                                    1- 1758     	.line	200, "main.c"; 	else if(workTime < 350)
     013C 2101                      1- 1759     	MOVIA	0x01
                                    1- 1760     	BANKSEL	_workTime
     013D rrrr                      3-   71 m1      .banksel ram_address
     013E 04rr                      1- 1761     	SUBAR	(_workTime + 1),W
     013F 0903                      1- 1762     	BTRSS	STATUS,2
     0140 3rrr                      1- 1763     	LGOTO	_00426_DS_
     0141 215E                      1- 1764     	MOVIA	0x5e
     0142 04rr                      1- 1765     	SUBAR	_workTime,W
     0143                           1- 1766     _00426_DS_:
     0143 0C03                      1- 1767     	BTRSC	STATUS,0
     0144 3rrr                      1- 1768     	LGOTO	_00225_DS_
                                    1- 1769     	.line	201, "main.c"; 	MOTOR = 0;
     0145 1Drr                      1- 1770     	BCR	_PORTA,2
     0146 3rrr                      1- 1771     	LGOTO	_00289_DS_
                                    1- 1772     ;;unsigned compare: left < lit (0x16E=366), size=2
     0147                           1- 1773     _00225_DS_:
                                    1- 1774     	.line	202, "main.c"; 	else if(workTime < 366)
     0147 2101                      1- 1775     	MOVIA	0x01
                                    1- 1776     	BANKSEL	_workTime
     0148 rrrr                      3-   71 m1      .banksel ram_address
     0149 04rr                      1- 1777     	SUBAR	(_workTime + 1),W
     014A 0903                      1- 1778     	BTRSS	STATUS,2
     014B 3rrr                      1- 1779     	LGOTO	_00427_DS_
     014C 216E                      1- 1780     	MOVIA	0x6e
     014D 04rr                      1- 1781     	SUBAR	_workTime,W
     014E                           1- 1782     _00427_DS_:
     014E 0C03                      1- 1783     	BTRSC	STATUS,0
     014F 3rrr                      1- 1784     	LGOTO	_00222_DS_
                                    1- 1785     	.line	203, "main.c"; 	MOTOR = 1;
     0150 19rr                      1- 1786     	BSR	_PORTA,2
     0151 3rrr                      1- 1787     	LGOTO	_00289_DS_
                                    1- 1788     ;;unsigned compare: left < lit (0x172=370), size=2
     0152                           1- 1789     _00222_DS_:
                                    1- 1790     	.line	204, "main.c"; 	else if(workTime < 370)
     0152 2101                      1- 1791     	MOVIA	0x01
                                    1- 1792     	BANKSEL	_workTime
     0153 rrrr                      3-   71 m1      .banksel ram_address
     0154 04rr                      1- 1793     	SUBAR	(_workTime + 1),W
     0155 0903                      1- 1794     	BTRSS	STATUS,2
     0156 3rrr                      1- 1795     	LGOTO	_00428_DS_
     0157 2172                      1- 1796     	MOVIA	0x72
     0158 04rr                      1- 1797     	SUBAR	_workTime,W
     0159                           1- 1798     _00428_DS_:
     0159 0C03                      1- 1799     	BTRSC	STATUS,0
     015A 3rrr                      1- 1800     	LGOTO	_00219_DS_
                                    1- 1801     	.line	205, "main.c"; 	MOTOR = 0;
     015B 1Drr                      1- 1802     	BCR	_PORTA,2
     015C 3rrr                      1- 1803     	LGOTO	_00289_DS_
                                    1- 1804     ;;unsigned compare: left < lit (0x180=384), size=2
     015D                           1- 1805     _00219_DS_:
                                    1- 1806     	.line	206, "main.c"; 	else if(workTime < 384)
     015D 2101                      1- 1807     	MOVIA	0x01
                                    1- 1808     	BANKSEL	_workTime
     015E rrrr                      3-   71 m1      .banksel ram_address
     015F 04rr                      1- 1809     	SUBAR	(_workTime + 1),W
     0160 0903                      1- 1810     	BTRSS	STATUS,2
     0161 3rrr                      1- 1811     	LGOTO	_00429_DS_
     0162 2180                      1- 1812     	MOVIA	0x80
     0163 04rr                      1- 1813     	SUBAR	_workTime,W
     0164                           1- 1814     _00429_DS_:
     0164 0C03                      1- 1815     	BTRSC	STATUS,0
     0165 3rrr                      1- 1816     	LGOTO	_00216_DS_
                                    1- 1817     	.line	207, "main.c"; 	MOTOR = 1;
     0166 19rr                      1- 1818     	BSR	_PORTA,2
     0167 3rrr                      1- 1819     	LGOTO	_00289_DS_
     0168                           1- 1820     _00216_DS_:
                                    1- 1821     	.line	210, "main.c"; 	MOTOR = 0;
     0168 1Drr                      1- 1822     	BCR	_PORTA,2
                                    1- 1823     	.line	211, "main.c"; 	rockStep = 0;
                                    1- 1824     	BANKSEL	_rockStep
     0169 rrrr                      3-   71 m1      .banksel ram_address
     016A 02rr                      1- 1825     	CLRR	_rockStep
                                    1- 1826     	.line	212, "main.c"; 	if(++gewei >= 10)
                                    1- 1827     	BANKSEL	_gewei
     016B rrrr                      3-   71 m1      .banksel ram_address
     016C 05rr                      1- 1828     	INCR	_gewei,F
                                    1- 1829     ;;unsigned compare: left < lit (0xA=10), size=1
     016D 210A                      1- 1830     	MOVIA	0x0a
     016E 04rr                      1- 1831     	SUBAR	_gewei,W
     016F 0803                      1- 1832     	BTRSS	STATUS,0
     0170 3rrr                      1- 1833     	LGOTO	_00289_DS_
                                    1- 1834     	.line	214, "main.c"; 	gewei = 0;
     0171 02rr                      1- 1835     	CLRR	_gewei
                                    1- 1836     	.line	215, "main.c"; 	if(++shiwei >= 10)
                                    1- 1837     	BANKSEL	_shiwei
     0172 rrrr                      3-   71 m1      .banksel ram_address
     0173 05rr                      1- 1838     	INCR	_shiwei,F
                                    1- 1839     ;;unsigned compare: left < lit (0xA=10), size=1
     0174 210A                      1- 1840     	MOVIA	0x0a
     0175 04rr                      1- 1841     	SUBAR	_shiwei,W
     0176 0803                      1- 1842     	BTRSS	STATUS,0
     0177 3rrr                      1- 1843     	LGOTO	_00289_DS_
                                    1- 1844     	.line	217, "main.c"; 	shiwei = 0;
     0178 02rr                      1- 1845     	CLRR	_shiwei
                                    1- 1846     	.line	218, "main.c"; 	if(++baiwei >= 10)
                                    1- 1847     	BANKSEL	_baiwei
     0179 rrrr                      3-   71 m1      .banksel ram_address
     017A 05rr                      1- 1848     	INCR	_baiwei,F
                                    1- 1849     ;;unsigned compare: left < lit (0xA=10), size=1
     017B 210A                      1- 1850     	MOVIA	0x0a
     017C 04rr                      1- 1851     	SUBAR	_baiwei,W
     017D 0C03                      1- 1852     	BTRSC	STATUS,0
                                    1- 1853     	.line	220, "main.c"; 	baiwei = 0;
     017E 02rr                      1- 1854     	CLRR	_baiwei
     017F                           1- 1855     _00289_DS_:
                                    1- 1856     	.line	226, "main.c"; 	}
                                    1- 1857     	RETURN	
     017F 0010                      3-   26 m1      ret
                                    1- 1860     ;	code size estimation:
                                    1- 1861     ;	  765+  146 =   911 instructions ( 2114 byte)
                                    1- 1863     	end
                                    1- 1863     	end

SYMBOL TABLE            TYPE     VALUE
___fs2schar             Label    00000000
___fs2sint              Label    00000000
___fs2slong             Label    00000000
___fs2uchar             Label    00000000
___fs2uint              Label    00000000
___fs2ulong             Label    00000000
___fsadd                Label    00000000
___fsdiv                Label    00000000
___fseq                 Label    00000000
___fsgt                 Label    00000000
___fslt                 Label    00000000
___fsmul                Label    00000000
___fsneq                Label    00000000
___fssub                Label    00000000
___schar2fs             Label    00000000
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
___sint2fs              Label    00000000
___slong2fs             Label    00000000
___uchar2fs             Label    00000000
___uint2fs              Label    00000000
___ulong2fs             Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__gptrget1              Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002F
_00002_DS_              Label    00000040
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00120_DS_              Label    00000049
_00123_DS_              Label    00000052
_00127_DS_              Label    00000067
_00137_DS_              Label    00000029
_00181_DS_              Label    00000081
_00187_DS_              Label    00000055
_00190_DS_              Label    0000004A
_00193_DS_              Label    0000003F
_00196_DS_              Label    00000034
_00199_DS_              Label    00000029
_00202_DS_              Label    0000001E
_00205_DS_              Label    00000013
_00208_DS_              Label    0000006B
_00216_DS_              Label    00000168
_00219_DS_              Label    0000015D
_00222_DS_              Label    00000152
_00225_DS_              Label    00000147
_00228_DS_              Label    0000013C
_00231_DS_              Label    00000131
_00234_DS_              Label    00000126
_00237_DS_              Label    0000011B
_00240_DS_              Label    00000110
_00243_DS_              Label    00000105
_00246_DS_              Label    000000FA
_00249_DS_              Label    000000EF
_00252_DS_              Label    000000E4
_00255_DS_              Label    000000D9
_00258_DS_              Label    000000CE
_00261_DS_              Label    000000C3
_00264_DS_              Label    000000B8
_00267_DS_              Label    000000AD
_00270_DS_              Label    000000A2
_00273_DS_              Label    00000097
_00276_DS_              Label    0000008C
_00279_DS_              Label    00000081
_00282_DS_              Label    00000076
_00287_DS_              Label    00000059
_00289_DS_              Label    0000017F
_00399_DS_              Label    0000000F
_00400_DS_              Label    0000001A
_00401_DS_              Label    00000025
_00402_DS_              Label    00000030
_00403_DS_              Label    0000003B
_00404_DS_              Label    00000046
_00405_DS_              Label    00000051
_00406_DS_              Label    00000068
_00407_DS_              Label    00000072
_00408_DS_              Label    0000007D
_00409_DS_              Label    00000088
_00410_DS_              Label    00000093
_00411_DS_              Label    0000009E
_00412_DS_              Label    000000A9
_00413_DS_              Label    000000B4
_00414_DS_              Label    000000BF
_00415_DS_              Label    000000CA
_00416_DS_              Label    000000D5
_00417_DS_              Label    000000E0
_00418_DS_              Label    000000EB
_00419_DS_              Label    000000F6
_00420_DS_              Label    00000101
_00421_DS_              Label    0000010C
_00422_DS_              Label    00000117
_00423_DS_              Label    00000122
_00424_DS_              Label    0000012D
_00425_DS_              Label    00000138
_00426_DS_              Label    00000143
_00427_DS_              Label    0000014E
_00428_DS_              Label    00000159
_00429_DS_              Label    00000164
_00439_DS_              Label    00000018
_00442_DS_              Label    00000021
_00444_DS_              Label    00000023
_00450_DS_              Label    0000007A
_00453_DS_              Label    0000007C
_00456_DS_              Label    0000007D
_00467_DS_              Label    0000005F
_00468_DS_              Label    00000068
_00474_DS_              Label    0000000C
_00475_DS_              Label    0000000E
_00477_DS_              Label    00000004
_00485_DS_              Label    00000016
_00487_DS_              Label    0000000E
_00488_DS_              Label    00000018
_00489_DS_              Label    00000019
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_baiwei                 Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkTime              Label    00000000
_chrgCtr                Label    00000000
_chrgStep               Label    00000000
_CMPCR                  Label    00000000
_delay_ms               Label    00000000
_delay_us               Label    00000000
_Delay1000Us            Label    00000000
_Delay10Us              Label    00000000
_FSR                    Label    00000000
_getData                Label    00000000
_gewei                  Label    00000000
_gotoSleep              Label    00000000
_hz                     Label    00000000
_hzH                    Label    00000000
_hzL                    Label    00000000
_i2c_write_byte_data    Label    00000000
_IIC_Ack                Label    00000000
_IIC_NAck               Label    00000000
_IIC_Read_Byte          Label    00000000
_IIC_Send_Byte          Label    00000000
_IIC_Start              Label    00000000
_IIC_Stop               Label    00000000
_IIC_Wait_Ack           Label    00000000
_ind_light_disp         Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isCalibrated           Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_main                   Label    00000000
_msa_calibrate          Label    00000000
_msa_calibrateZ         Label    00000000
_msa_flip_init          Label    00000000
_msa_flip_process       Label    00000000
_msa_get_step           Label    00000000
_msa_init               Label    00000000
_msa_read_adc           Label    00000000
_msa_read_data          Label    00000000
_msa_ReadBytes          Label    00000000
_msa_register_read_continuously Label    00000000
_msa_sqrt               Label    00000000
_msa_WriteBytes         Label    00000000
_offset_z               Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_refreshLed             Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_rockStep               Label    00000000
_rockTime               Label    00000000
_SDA_IN                 Label    00000000
_SDA_OUT                Label    00000000
_shiwei                 Label    00000000
_sleepTime              Label    00000000
_STATUS                 Label    00000000
_SW_i2c_udelay          Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_table                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
_workTime               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
