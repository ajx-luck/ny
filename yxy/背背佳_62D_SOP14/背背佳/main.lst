
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	___uchar2fs
                                    1-   15     	extern	___schar2fs
                                    1-   16     	extern	___uint2fs
                                    1-   17     	extern	___sint2fs
                                    1-   18     	extern	___ulong2fs
                                    1-   19     	extern	___slong2fs
                                    1-   20     	extern	___fs2uchar
                                    1-   21     	extern	___fs2schar
                                    1-   22     	extern	___fs2uint
                                    1-   23     	extern	___fs2sint
                                    1-   24     	extern	___fs2ulong
                                    1-   25     	extern	___fs2slong
                                    1-   26     	extern	___fsadd
                                    1-   27     	extern	___fssub
                                    1-   28     	extern	___fsmul
                                    1-   29     	extern	___fsdiv
                                    1-   30     	extern	___fslt
                                    1-   31     	extern	___fseq
                                    1-   32     	extern	___fsneq
                                    1-   33     	extern	___fsgt
                                    1-   34     	extern	_msa_init
                                    1-   35     	extern	_msa_read_data
                                    1-   36     	extern	_msa_get_step
                                    1-   37     	extern	_msa_register_read_continuously
                                    1-   38     	extern	_i2c_write_byte_data
                                    1-   39     	extern	_msa_WriteBytes
                                    1-   40     	extern	_msa_calibrate
                                    1-   41     	extern	_msa_calibrateZ
                                    1-   42     	extern	_msa_ReadBytes
                                    1-   43     	extern	_SW_i2c_udelay
                                    1-   44     	extern	_msa_read_adc
                                    1-   45     	extern	_msa_flip_init
                                    1-   46     	extern	_msa_flip_process
                                    1-   47     	extern	_msa_sqrt
                                    1-   48     	extern	_Delay1000Us
                                    1-   49     	extern	_Delay10Us
                                    1-   50     	extern	_IIC_Start
                                    1-   51     	extern	_IIC_Send_Byte
                                    1-   52     	extern	_IIC_Read_Byte
                                    1-   53     	extern	_SDA_OUT
                                    1-   54     	extern	_SDA_IN
                                    1-   55     	extern	_IIC_Ack
                                    1-   56     	extern	_IIC_NAck
                                    1-   57     	extern	_delay_us
                                    1-   58     	extern	_delay_ms
                                    1-   59     	extern	_IIC_Stop
                                    1-   60     	extern	_IIC_Wait_Ack
                                    1-   61     	extern	_PORTAbits
                                    1-   62     	extern	_PORTBbits
                                    1-   63     	extern	_PCONbits
                                    1-   64     	extern	_BWUCONbits
                                    1-   65     	extern	_ABPLCONbits
                                    1-   66     	extern	_BPHCONbits
                                    1-   67     	extern	_INTEbits
                                    1-   68     	extern	_INTFbits
                                    1-   69     	extern	_ADMDbits
                                    1-   70     	extern	_ADRbits
                                    1-   71     	extern	_ADVREFHbits
                                    1-   72     	extern	_ADCRbits
                                    1-   73     	extern	_AWUCONbits
                                    1-   74     	extern	_PACONbits
                                    1-   75     	extern	_INTEDGbits
                                    1-   76     	extern	_ANAENbits
                                    1-   77     	extern	_RFCbits
                                    1-   78     	extern	_INTE2bits
                                    1-   79     	extern	_offset_z
                                    1-   80     	extern	_isCalibrated
                                    1-   81     	extern	_INDF
                                    1-   82     	extern	_TMR0
                                    1-   83     	extern	_PCL
                                    1-   84     	extern	_STATUS
                                    1-   85     	extern	_FSR
                                    1-   86     	extern	_PORTA
                                    1-   87     	extern	_PORTB
                                    1-   88     	extern	_PCON
                                    1-   89     	extern	_BWUCON
                                    1-   90     	extern	_PCHBUF
                                    1-   91     	extern	_ABPLCON
                                    1-   92     	extern	_BPHCON
                                    1-   93     	extern	_INTE
                                    1-   94     	extern	_INTF
                                    1-   95     	extern	_ADMD
                                    1-   96     	extern	_ADR
                                    1-   97     	extern	_ADD
                                    1-   98     	extern	_ADVREFH
                                    1-   99     	extern	_ADCR
                                    1-  100     	extern	_AWUCON
                                    1-  101     	extern	_PACON
                                    1-  102     	extern	_INTEDG
                                    1-  103     	extern	_TMRH
                                    1-  104     	extern	_ANAEN
                                    1-  105     	extern	_RFC
                                    1-  106     	extern	_TM3RH
                                    1-  107     	extern	_INTE2
                                    1-  108     	extern	_TMR1
                                    1-  109     	extern	_T1CR1
                                    1-  110     	extern	_T1CR2
                                    1-  111     	extern	_PWM1DUTY
                                    1-  112     	extern	_PS1CV
                                    1-  113     	extern	_BZ1CR
                                    1-  114     	extern	_IRCR
                                    1-  115     	extern	_TBHP
                                    1-  116     	extern	_TBHD
                                    1-  117     	extern	_TMR2
                                    1-  118     	extern	_T2CR1
                                    1-  119     	extern	_T2CR2
                                    1-  120     	extern	_PWM2DUTY
                                    1-  121     	extern	_PS2CV
                                    1-  122     	extern	_BZ2CR
                                    1-  123     	extern	_OSCCR
                                    1-  124     	extern	_TMR3
                                    1-  125     	extern	_T3CR1
                                    1-  126     	extern	_T3CR2
                                    1-  127     	extern	_PWM3DUTY
                                    1-  128     	extern	_PS3CV
                                    1-  129     	extern	_BZ3CR
                                    1-  130     	extern	_IOSTA
                                    1-  131     	extern	_IOSTB
                                    1-  132     	extern	_APHCON
                                    1-  133     	extern	_PS0CV
                                    1-  134     	extern	_BODCON
                                    1-  135     	extern	_CMPCR
                                    1-  136     	extern	_PCON1
                                    1-  137     	extern	_T0MD
                                    1-  138     	extern	___sdcc_saved_fsr
                                    1-  139     	extern	___sdcc_saved_stk00
                                    1-  140     	extern	___sdcc_saved_stk01
                                    1-  141     	extern	__gptrget1
                                    1-  142     	extern	__nyc_ny8_startup
                                    1-  143     ;--------------------------------------------------------
                                    1-  144     ; global declarations
                                    1-  145     ;--------------------------------------------------------
                                    1-  146     	extern	_gotoSleep
                                    1-  147     	extern	_keyRead
                                    1-  148     	extern	_ind_light_disp
                                    1-  149     	extern	_getData
                                    1-  150     	extern	_chrgCtr
                                    1-  151     	extern	_refreshLed
                                    1-  152     	extern	_refreshChrg
                                    1-  153     	extern	_workCtr
                                    1-  154     	extern	_isr
                                    1-  155     	extern	_main
                                    1-  156     	extern	_hzH
                                    1-  157     	extern	_hzL
                                    1-  158     	extern	_hz
                                    1-  159     	extern	_chrgStep
                                    1-  160     	extern	_intCount
                                    1-  161     	extern	_IntFlag
                                    1-  162     	extern	_keyCount
                                    1-  163     	extern	_workStep
                                    1-  164     	extern	_baiwei
                                    1-  165     	extern	_shiwei
                                    1-  166     	extern	_gewei
                                    1-  167     	extern	_rockStep
                                    1-  168     	extern	_workTime
                                    1-  169     	extern	_sleepTime
                                    1-  170     	extern	_rockTime
                                    1-  171     	extern	_checkTime
                                    1-  172     	extern	_rockFlag
                                    1-  173     	extern	_deadTime
                                    1-  174     	extern	_wrongTime
                                    1-  175     	extern	_rightTime
                                    1-  176     	extern	_chrgFullTime
                                    1-  177     	extern	_waitTime
                                    1-  178     	extern	_countTime
                                    1-  180     	extern PSAVE
                                    1-  181     	extern SSAVE
                                    1-  182     	extern WSAVE
                                    1-  183     	extern STK12
                                    1-  184     	extern STK11
                                    1-  185     	extern STK10
                                    1-  186     	extern STK09
                                    1-  187     	extern STK08
                                    1-  188     	extern STK07
                                    1-  189     	extern STK06
                                    1-  190     	extern STK05
                                    1-  191     	extern STK04
                                    1-  192     	extern STK03
                                    1-  193     	extern STK02
                                    1-  194     	extern STK01
                                    1-  195     	extern STK00
                                    1-  197     .segment "uninit", 0x20000040
 20000040                           1-  198     PSAVE:
                                    1-  199     	.res 1
 20000041                           1-  200     SSAVE:
                                    1-  201     	.res 1
 20000042                           1-  202     WSAVE:
                                    1-  203     	.res 1
 20000043                           1-  204     STK12:
                                    1-  205     	.res 1
 20000044                           1-  206     STK11:
                                    1-  207     	.res 1
 20000045                           1-  208     STK10:
                                    1-  209     	.res 1
 20000046                           1-  210     STK09:
                                    1-  211     	.res 1
 20000047                           1-  212     STK08:
                                    1-  213     	.res 1
 20000048                           1-  214     STK07:
                                    1-  215     	.res 1
 20000049                           1-  216     STK06:
                                    1-  217     	.res 1
 2000004A                           1-  218     STK05:
                                    1-  219     	.res 1
 2000004B                           1-  220     STK04:
                                    1-  221     	.res 1
 2000004C                           1-  222     STK03:
                                    1-  223     	.res 1
 2000004D                           1-  224     STK02:
                                    1-  225     	.res 1
 2000004E                           1-  226     STK01:
                                    1-  227     	.res 1
 2000004F                           1-  228     STK00:
                                    1-  229     	.res 1
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     ; global definitions
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     .segment "uninit"
     0000                           1-  235     _hzH:
                                    1-  236     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     _hzL:
                                    1-  241     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     _baiwei:
                                    1-  246     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     _shiwei:
                                    1-  251     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     _gewei:
                                    1-  256     	.res	1
                                    1-  259     ;--------------------------------------------------------
                                    1-  260     ; absolute symbol definitions
                                    1-  261     ;--------------------------------------------------------
                                    1-  262     ;--------------------------------------------------------
                                    1-  263     ; compiler-defined variables
                                    1-  264     ;--------------------------------------------------------
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x1034:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1033:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x1030:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1031:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1032:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x102D:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x102C:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x102E:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x102F:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x102A:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x102B:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x1029:
                                    1-  300     	.res	1
                                    1-  301     ;--------------------------------------------------------
                                    1-  302     ; initialized data
                                    1-  303     ;--------------------------------------------------------
                                    1-  305     .segment "idata"
     0000                           1-  306     _hz:
     0000 0000 0000                 1-  307     	dw	0x00, 0x00
                                    1-  311     .segment "idata"
     0000                           1-  312     _chrgStep:
     0000 0000                      1-  313     	dw	0x00
                                    1-  317     .segment "idata"
     0000                           1-  318     _intCount:
     0000 0000                      1-  319     	dw	0x00
                                    1-  323     .segment "idata"
     0000                           1-  324     _IntFlag:
     0000 0000                      1-  325     	dw	0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _keyCount:
     0000 0000                      1-  331     	dw	0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _workStep:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _rockStep:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _workTime:
     0000 0000 0000                 1-  349     	dw	0x00, 0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _sleepTime:
     0000 0000 0000                 1-  355     	dw	0x00, 0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _rockTime:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _checkTime:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _rockFlag:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _deadTime:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _wrongTime:
     0000 0000                      1-  385     	dw	0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _rightTime:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _chrgFullTime:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _waitTime:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _countTime:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _table:
     0000 003F                      1-  415     	dw	0x3f
     0001 0006                      1-  416     	dw	0x06
     0002 005B                      1-  417     	dw	0x5b
     0003 004F                      1-  418     	dw	0x4f
     0004 0066                      1-  419     	dw	0x66
     0005 006D                      1-  420     	dw	0x6d
     0006 007D                      1-  421     	dw	0x7d
     0007 0007                      1-  422     	dw	0x07
     0008 007F                      1-  423     	dw	0x7f
     0009 006F                      1-  424     	dw	0x6f
     000A 0071                      1-  425     	dw	0x71
     000B 0038                      1-  426     	dw	0x38
                                    1-  429     ;--------------------------------------------------------
                                    1-  430     ; overlayable items in internal ram 
                                    1-  431     ;--------------------------------------------------------
                                    1-  432     ;	udata_ovr
                                    1-  433     ;--------------------------------------------------------
                                    1-  434     ; reset vector 
                                    1-  435     ;--------------------------------------------------------
                                    1-  436     ORG	0x0000
     0000 3rrr                      1-  437     	LGOTO	__nyc_ny8_startup
                                    1-  438     ;--------------------------------------------------------
                                    1-  439     ; interrupt and initialization code
                                    1-  440     ;--------------------------------------------------------
                                    1-  441     ORG 0x0008
     0008 3rrr                      1-  442     	lgoto	__sdcc_interrupt
                                    1-  444     .segment "code"
     0000                           1-  445     __sdcc_interrupt:
                                    1-  446     ;***
                                    1-  447     ;  pBlock Stats: dbName = I
                                    1-  448     ;***
                                    1-  449     ;2 compiler assigned registers:
                                    1-  450     ;   STK00
                                    1-  451     ;   STK01
                                    1-  452     ;; Starting pCode block
     0000                           1-  453     _isr:
                                    1-  454     ; 0 exit points
                                    1-  455     	.line	44, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  456     	MOVAR	WSAVE
     0001 1503                      1-  457     	SWAPR	STATUS,W
     0002 0283                      1-  458     	CLRR	STATUS
     0003 00rr                      1-  459     	MOVAR	SSAVE
     0004 010A                      1-  460     	MOVR	PCHBUF,W
     0005 028A                      1-  461     	CLRR	PCHBUF
     0006 00rr                      1-  462     	MOVAR	PSAVE
     0007 0104                      1-  463     	MOVR	FSR,W
                                    1-  464     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  465     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  466     	MOVR	STK00,W
                                    1-  467     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  468     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  469     	MOVR	STK01,W
                                    1-  470     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  471     	MOVAR	___sdcc_saved_stk01
                                    1-  472     	.line	46, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  473     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  474     	LGOTO	_00108_DS_
                                    1-  475     	.line	48, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  476     	MOVIA	0x37
     0013 03rr                      1-  477     	ADDAR	_TMR0,F
                                    1-  478     	.line	49, "main.c"; 	intCount++;
                                    1-  479     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  480     	INCR	_intCount,F
                                    1-  481     	.line	50, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  482     	MOVR	_intCount,W
     0017 2464                      1-  483     	XORIA	0x64
     0018 0903                      1-  484     	BTRSS	STATUS,2
     0019 3rrr                      1-  485     	LGOTO	_00108_DS_
                                    1-  486     	.line	52, "main.c"; 	intCount = 0;
     001A 02rr                      1-  487     	CLRR	_intCount
                                    1-  488     	.line	53, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  489     	MOVIA	0x01
                                    1-  490     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  491     	MOVAR	_IntFlag
     001E                           1-  492     _00108_DS_:
                                    1-  493     	.line	56, "main.c"; 	if(INTFbits.PABIF)
     001E 08rr                      1-  494     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  495     	LGOTO	_00110_DS_
                                    1-  496     	.line	58, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  497     	MOVIA	0xfd
     0021 00rr                      1-  498     	MOVAR	_INTF
     0022                           1-  499     _00110_DS_:
                                    1-  500     	.line	61, "main.c"; 	INTF = 0;
     0022 02rr                      1-  501     	CLRR	_INTF
                                    1-  502     	.line	63, "main.c"; 	}
                                    1-  503     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  504     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  505     	MOVAR	STK01
                                    1-  506     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  507     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  508     	MOVAR	STK00
                                    1-  509     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  510     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  511     	MOVAR	FSR
     002C 01rr                      1-  512     	MOVR	PSAVE,W
     002D 008A                      1-  513     	MOVAR	PCHBUF
     002E 0283                      1-  514     	CLRR	STATUS
     002F 15rr                      1-  515     	SWAPR	SSAVE,W
     0030 0083                      1-  516     	MOVAR	STATUS
     0031 15rr                      1-  517     	SWAPR	WSAVE,F
     0032 15rr                      1-  518     	SWAPR	WSAVE,W
     0033                           1-  519     END_OF_INTERRUPT:
     0033 0011                      1-  520     	RETIE	
                                    1-  522     ;--------------------------------------------------------
                                    1-  523     ; code
                                    1-  524     ;--------------------------------------------------------
                                    1-  525     ;***
                                    1-  526     ;  pBlock Stats: dbName = M
                                    1-  527     ;***
                                    1-  528     ;has an exit
                                    1-  529     ;functions called:
                                    1-  530     ;   _msa_init
                                    1-  531     ;   _refreshLed
                                    1-  532     ;   _refreshChrg
                                    1-  533     ;   _keyRead
                                    1-  534     ;   _ind_light_disp
                                    1-  535     ;   _chrgCtr
                                    1-  536     ;   _workCtr
                                    1-  537     ;   _getData
                                    1-  538     ;   _gotoSleep
                                    1-  539     ;   _msa_init
                                    1-  540     ;   _refreshLed
                                    1-  541     ;   _refreshChrg
                                    1-  542     ;   _keyRead
                                    1-  543     ;   _ind_light_disp
                                    1-  544     ;   _chrgCtr
                                    1-  545     ;   _workCtr
                                    1-  546     ;   _getData
                                    1-  547     ;   _gotoSleep
                                    1-  548     ;1 compiler assigned register :
                                    1-  549     ;   r0x1034
                                    1-  550     ;; Starting pCode block
                                    1-  551     .segment "code"; module=main, function=_main
     0000                           1-  553     _main:
                                    1-  554     ; 2 exit points
                                    1-  555     	.line	70, "main.c"; 	APHCON = 0xBF;
     0000 21BF                      1-  556     	MOVIA	0xbf
     0001 000r                      1-  557     	IOST	_APHCON
                                    1-  558     	.line	71, "main.c"; 	IOSTA = 0x00;     // Set PB0 & PB1 to input mode,others set to output mode
     0002 0200                      1-  559     	CLRA	
     0003 000r                      1-  560     	IOST	_IOSTA
                                    1-  561     	.line	72, "main.c"; 	IOSTB = 0x00;
     0004 000r                      1-  562     	IOST	_IOSTB
                                    1-  563     	.line	73, "main.c"; 	PORTA = 0x00; 
                                    1-  564     	BANKSEL	_PORTA
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  565     	CLRR	_PORTA
                                    1-  566     	.line	74, "main.c"; 	PORTB = 0x00;                           // PB0��PB1 & PB2 are output High	
     0007 02rr                      1-  567     	CLRR	_PORTB
                                    1-  568     	.line	75, "main.c"; 	msa_init();
     0008 2rrr                      1-  569     	LCALL	_msa_init
                                    1-  570     	.line	76, "main.c"; 	IOSTA = C_PA0_Input | C_PA3_Input | C_PA4_Input;     // Set PB0 & PB1 to input mode,others set to output mode
     0009 2119                      1-  571     	MOVIA	0x19
     000A 000r                      1-  572     	IOST	_IOSTA
                                    1-  573     	.line	77, "main.c"; 	IOSTB = 0x00;
     000B 0200                      1-  574     	CLRA	
     000C 000r                      1-  575     	IOST	_IOSTB
                                    1-  576     	.line	78, "main.c"; 	APHCON = 0xAE;		//CHRG	PA4 ����
     000D 21AE                      1-  577     	MOVIA	0xae
     000E 000r                      1-  578     	IOST	_APHCON
                                    1-  579     	.line	79, "main.c"; 	BPHCON = 0xFF;		
     000F 21FF                      1-  580     	MOVIA	0xff
     0010 00rr                      1-  581     	MOVAR	_BPHCON
                                    1-  582     	.line	80, "main.c"; 	ABPLCON = 0xF7;		//  USB PA3	����
     0011 21F7                      1-  583     	MOVIA	0xf7
     0012 00rr                      1-  584     	MOVAR	_ABPLCON
                                    1-  585     	.line	81, "main.c"; 	PORTA = 0x00; 
                                    1-  586     	BANKSEL	_PORTA
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1-  587     	CLRR	_PORTA
                                    1-  588     	.line	82, "main.c"; 	PORTB = 0x00;                           // PB0��PB1 & PB2 are output High	
     0015 02rr                      1-  589     	CLRR	_PORTB
                                    1-  590     	.line	83, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     0016 21A8                      1-  591     	MOVIA	0xa8
     0017 00rr                      1-  592     	MOVAR	_PCON
                                    1-  593     	.line	85, "main.c"; 	PCON1 = C_TMR0_Dis;
     0018 0200                      1-  594     	CLRA	
     0019 000r                      1-  595     	IOST	_PCON1
                                    1-  596     	.line	87, "main.c"; 	TMR0 = 55;
     001A 2137                      1-  597     	MOVIA	0x37
     001B 00rr                      1-  598     	MOVAR	_TMR0
                                    1-  599     	.line	88, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     001C 0200                      1-  600     	CLRA	
     001D 0003                      1-  601     	T0MD	
                                    1-  602     	.line	89, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     001E 2103                      1-  603     	MOVIA	0x03
     001F 00rr                      1-  604     	MOVAR	_INTE
                                    1-  605     	.line	90, "main.c"; 	PCON1 = C_TMR0_En;
     0020 2101                      1-  606     	MOVIA	0x01
     0021 000r                      1-  607     	IOST	_PCON1
                                    1-  608     	.line	91, "main.c"; 	ENI();
     0022 0004                      1-  609     	ENI
                                    1-  610     	.line	92, "main.c"; 	baiwei = shiwei = gewei = 0;
                                    1-  611     	BANKSEL	_gewei
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 02rr                      1-  612     	CLRR	_gewei
                                    1-  613     	BANKSEL	_shiwei
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1-  614     	CLRR	_shiwei
                                    1-  615     	BANKSEL	_baiwei
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1-  616     	CLRR	_baiwei
                                    1-  617     	.line	93, "main.c"; 	rockStep = 0;
                                    1-  618     	BANKSEL	_rockStep
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 02rr                      1-  619     	CLRR	_rockStep
     002B                           1-  620     _00154_DS_:
                                    1-  621     	.line	96, "main.c"; 	CLRWDT();			//Clear WDT, this function is defined in ny8command.h
     002B 0002                      1-  622     	clrwdt
                                    1-  623     	.line	97, "main.c"; 	if(workStep)
                                    1-  624     	BANKSEL	_workStep
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1-  625     	MOVR	_workStep,W
     002E 0D03                      1-  626     	BTRSC	STATUS,2
     002F 3rrr                      1-  627     	LGOTO	_00119_DS_
                                    1-  628     	.line	99, "main.c"; 	refreshLed();
     0030 2rrr                      1-  629     	LCALL	_refreshLed
     0031 3rrr                      1-  630     	LGOTO	_00120_DS_
     0032                           1-  631     _00119_DS_:
                                    1-  632     	.line	101, "main.c"; 	else if(chrgStep)
                                    1-  633     	BANKSEL	_chrgStep
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 01rr                      1-  634     	MOVR	_chrgStep,W
     0034 0D03                      1-  635     	BTRSC	STATUS,2
     0035 3rrr                      1-  636     	LGOTO	_00116_DS_
                                    1-  637     	.line	103, "main.c"; 	refreshChrg();
     0036 2rrr                      1-  638     	LCALL	_refreshChrg
     0037 3rrr                      1-  639     	LGOTO	_00120_DS_
     0038                           1-  640     _00116_DS_:
                                    1-  641     	.line	107, "main.c"; 	COM1 = 1;
                                    1-  642     	BANKSEL	_PORTA
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 1Brr                      1-  643     	BSR	_PORTA,7
                                    1-  644     	.line	108, "main.c"; 	COM2 = 1;
     003A 1Brr                      1-  645     	BSR	_PORTA,6
                                    1-  646     	.line	109, "main.c"; 	COM3 = 1;
     003B 18rr                      1-  647     	BSR	_PORTB,1
     003C                           1-  648     _00120_DS_:
                                    1-  649     	.line	111, "main.c"; 	if(!IntFlag)
                                    1-  650     	BANKSEL	_IntFlag
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1-  651     	MOVR	_IntFlag,W
     003E 0D03                      1-  652     	BTRSC	STATUS,2
     003F 3rrr                      1-  653     	LGOTO	_00154_DS_
                                    1-  654     	.line	113, "main.c"; 	IntFlag = 0;
     0040 02rr                      1-  655     	CLRR	_IntFlag
                                    1-  656     	.line	114, "main.c"; 	if(waitTime > 0)
                                    1-  657     	BANKSEL	_waitTime
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1-  658     	MOVR	_waitTime,W
     0043 0903                      1-  659     	BTRSS	STATUS,2
                                    1-  660     	.line	116, "main.c"; 	waitTime--;
     0044 06rr                      1-  661     	DECR	_waitTime,F
                                    1-  662     	.line	118, "main.c"; 	if(keyRead(0x01 & (~PORTA)))
                                    1-  663     	BANKSEL	_PORTA
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 07rr                      1-  664     	COMR	_PORTA,W
                                    1-  665     	BANKSEL	r0x1034
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1-  666     	MOVAR	r0x1034
     0049 2101                      1-  667     	MOVIA	0x01
     004A 10rr                      1-  668     	ANDAR	r0x1034,F
     004B 01rr                      1-  669     	MOVR	r0x1034,W
     004C 2rrr                      1-  670     	LCALL	_keyRead
                                    1-  671     	BANKSEL	r0x1034
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1-  672     	MOVAR	r0x1034
     004F 01rr                      1-  673     	MOVR	r0x1034,W
     0050 0D03                      1-  674     	BTRSC	STATUS,2
     0051 3rrr                      1-  675     	LGOTO	_00131_DS_
                                    1-  676     	.line	120, "main.c"; 	if(workStep)
                                    1-  677     	BANKSEL	_workStep
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1-  678     	MOVR	_workStep,W
     0054 0D03                      1-  679     	BTRSC	STATUS,2
     0055 3rrr                      1-  680     	LGOTO	_00128_DS_
                                    1-  681     	.line	122, "main.c"; 	workStep = 0;
     0056 02rr                      1-  682     	CLRR	_workStep
                                    1-  683     	.line	123, "main.c"; 	rockStep = 0;
                                    1-  684     	BANKSEL	_rockStep
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 02rr                      1-  685     	CLRR	_rockStep
                                    1-  686     	.line	124, "main.c"; 	rockTime = 0;
                                    1-  687     	BANKSEL	_rockTime
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 02rr                      1-  688     	CLRR	_rockTime
                                    1-  689     	.line	125, "main.c"; 	rockFlag = 0;
                                    1-  690     	BANKSEL	_rockFlag
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 02rr                      1-  691     	CLRR	_rockFlag
                                    1-  692     	.line	126, "main.c"; 	MOTOR = 0;
                                    1-  693     	BANKSEL	_PORTA
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 1Drr                      1-  694     	BCR	_PORTA,2
                                    1-  695     	.line	127, "main.c"; 	baiwei = shiwei = gewei = 0;
                                    1-  696     	BANKSEL	_gewei
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 02rr                      1-  697     	CLRR	_gewei
                                    1-  698     	BANKSEL	_shiwei
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 02rr                      1-  699     	CLRR	_shiwei
                                    1-  700     	BANKSEL	_baiwei
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 02rr                      1-  701     	CLRR	_baiwei
                                    1-  702     	.line	128, "main.c"; 	ind_light_disp(table[gewei]);
                                    1-  703     	BANKSEL	_table
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 01rr                      1-  704     	MOVR	(_table + 0),W
                                    1-  705     	BANKSEL	r0x1034
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1-  706     	MOVAR	r0x1034
     0069 2rrr                      1-  707     	LCALL	_ind_light_disp
     006A 3rrr                      1-  708     	LGOTO	_00131_DS_
     006B                           1-  709     _00128_DS_:
                                    1-  710     	.line	133, "main.c"; 	workStep = 1;
     006B 2101                      1-  711     	MOVIA	0x01
                                    1-  712     	BANKSEL	_workStep
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 00rr                      1-  713     	MOVAR	_workStep
                                    1-  714     	.line	134, "main.c"; 	workTime = 0;
                                    1-  715     	BANKSEL	_workTime
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 02rr                      1-  716     	CLRR	_workTime
     0070 02rr                      1-  717     	CLRR	(_workTime + 1)
                                    1-  718     	.line	135, "main.c"; 	rockStep = 1;
     0071 2101                      1-  719     	MOVIA	0x01
                                    1-  720     	BANKSEL	_rockStep
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 00rr                      1-  721     	MOVAR	_rockStep
                                    1-  722     	.line	136, "main.c"; 	rockFlag = 0;
                                    1-  723     	BANKSEL	_rockFlag
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 02rr                      1-  724     	CLRR	_rockFlag
                                    1-  725     	.line	137, "main.c"; 	if(chrgStep)
                                    1-  726     	BANKSEL	_chrgStep
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 01rr                      1-  727     	MOVR	_chrgStep,W
     0078 0D03                      1-  728     	BTRSC	STATUS,2
     0079 3rrr                      1-  729     	LGOTO	_00131_DS_
                                    1-  730     	.line	139, "main.c"; 	workStep = 0;
                                    1-  731     	BANKSEL	_workStep
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1-  732     	CLRR	_workStep
                                    1-  733     	.line	140, "main.c"; 	rockStep = 0;
                                    1-  734     	BANKSEL	_rockStep
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 02rr                      1-  735     	CLRR	_rockStep
     007E                           1-  736     _00131_DS_:
                                    1-  737     	.line	145, "main.c"; 	chrgCtr();
     007E 2rrr                      1-  738     	LCALL	_chrgCtr
                                    1-  739     	.line	146, "main.c"; 	workCtr();
     007F 2rrr                      1-  740     	LCALL	_workCtr
                                    1-  741     	.line	147, "main.c"; 	if(workStep == 1 && rockStep != 1)
                                    1-  742     	BANKSEL	_workStep
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1-  743     	MOVR	_workStep,W
     0082 2401                      1-  744     	XORIA	0x01
     0083 0903                      1-  745     	BTRSS	STATUS,2
     0084 3rrr                      1-  746     	LGOTO	_00142_DS_
                                    1-  747     	BANKSEL	_rockStep
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 01rr                      1-  748     	MOVR	_rockStep,W
     0087 2401                      1-  749     	XORIA	0x01
     0088 0D03                      1-  750     	BTRSC	STATUS,2
     0089 3rrr                      1-  751     	LGOTO	_00142_DS_
                                    1-  752     	.line	149, "main.c"; 	getData();
     008A 2rrr                      1-  753     	LCALL	_getData
                                    1-  754     	.line	150, "main.c"; 	if(++checkTime >= 25)
                                    1-  755     	BANKSEL	_checkTime
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 05rr                      1-  756     	INCR	_checkTime,F
                                    1-  757     ;;unsigned compare: left < lit (0x19=25), size=1
     008D 2119                      1-  758     	MOVIA	0x19
     008E 04rr                      1-  759     	SUBAR	_checkTime,W
     008F 0803                      1-  760     	BTRSS	STATUS,0
     0090 3rrr                      1-  761     	LGOTO	_00142_DS_
                                    1-  762     ;;unsigned compare: left < lit (0x7=7), size=1
                                    1-  763     	.line	152, "main.c"; 	if(rockTime >= 7)
     0091 2107                      1-  764     	MOVIA	0x07
                                    1-  765     	BANKSEL	_rockTime
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 04rr                      1-  766     	SUBAR	_rockTime,W
     0094 0803                      1-  767     	BTRSS	STATUS,0
     0095 3rrr                      1-  768     	LGOTO	_00135_DS_
                                    1-  769     	.line	154, "main.c"; 	rockFlag = 1;
     0096 2101                      1-  770     	MOVIA	0x01
                                    1-  771     	BANKSEL	_rockFlag
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 00rr                      1-  772     	MOVAR	_rockFlag
                                    1-  773     	.line	155, "main.c"; 	if(++deadTime >= 240)
                                    1-  774     	BANKSEL	_deadTime
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 05rr                      1-  775     	INCR	_deadTime,F
                                    1-  776     ;;unsigned compare: left < lit (0xF0=240), size=1
     009B 21F0                      1-  777     	MOVIA	0xf0
     009C 04rr                      1-  778     	SUBAR	_deadTime,W
     009D 0803                      1-  779     	BTRSS	STATUS,0
     009E 3rrr                      1-  780     	LGOTO	_00136_DS_
                                    1-  781     	.line	157, "main.c"; 	deadTime = 240;
     009F 21F0                      1-  782     	MOVIA	0xf0
     00A0 00rr                      1-  783     	MOVAR	_deadTime
                                    1-  784     	.line	158, "main.c"; 	rockFlag = 0;
                                    1-  785     	BANKSEL	_rockFlag
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 02rr                      1-  786     	CLRR	_rockFlag
     00A3 3rrr                      1-  787     	LGOTO	_00136_DS_
     00A4                           1-  788     _00135_DS_:
                                    1-  789     	.line	164, "main.c"; 	deadTime = 0;
                                    1-  790     	BANKSEL	_deadTime
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 02rr                      1-  791     	CLRR	_deadTime
                                    1-  792     ;;unsigned compare: left < lit (0x14=20), size=1
     00A6                           1-  793     _00136_DS_:
                                    1-  794     	.line	168, "main.c"; 	if(wrongTime >= 20)
     00A6 2114                      1-  795     	MOVIA	0x14
                                    1-  796     	BANKSEL	_wrongTime
     00A7 rrrr                      3-   71 m1      .banksel ram_address
     00A8 04rr                      1-  797     	SUBAR	_wrongTime,W
     00A9 0803                      1-  798     	BTRSS	STATUS,0
     00AA 3rrr                      1-  799     	LGOTO	_00138_DS_
                                    1-  800     	.line	170, "main.c"; 	rockFlag = 1;
     00AB 2101                      1-  801     	MOVIA	0x01
                                    1-  802     	BANKSEL	_rockFlag
     00AC rrrr                      3-   71 m1      .banksel ram_address
     00AD 00rr                      1-  803     	MOVAR	_rockFlag
                                    1-  804     	.line	171, "main.c"; 	deadTime = 0;
                                    1-  805     	BANKSEL	_deadTime
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 02rr                      1-  806     	CLRR	_deadTime
     00B0                           1-  807     _00138_DS_:
                                    1-  808     	.line	173, "main.c"; 	checkTime = 0;
                                    1-  809     	BANKSEL	_checkTime
     00B0 rrrr                      3-   71 m1      .banksel ram_address
     00B1 02rr                      1-  810     	CLRR	_checkTime
                                    1-  811     	.line	174, "main.c"; 	rockTime = 0;
                                    1-  812     	BANKSEL	_rockTime
     00B2 rrrr                      3-   71 m1      .banksel ram_address
     00B3 02rr                      1-  813     	CLRR	_rockTime
                                    1-  814     	.line	175, "main.c"; 	wrongTime = 0;
                                    1-  815     	BANKSEL	_wrongTime
     00B4 rrrr                      3-   71 m1      .banksel ram_address
     00B5 02rr                      1-  816     	CLRR	_wrongTime
     00B6                           1-  817     _00142_DS_:
                                    1-  818     	.line	179, "main.c"; 	if(workStep == 0 && rockStep == 0 && keyCount== 0 && rockTime == 0 && chrgStep == 0)
                                    1-  819     	BANKSEL	_workStep
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 01rr                      1-  820     	MOVR	_workStep,W
     00B8 0903                      1-  821     	BTRSS	STATUS,2
     00B9 3rrr                      1-  822     	LGOTO	_00147_DS_
                                    1-  823     	BANKSEL	_rockStep
     00BA rrrr                      3-   71 m1      .banksel ram_address
     00BB 01rr                      1-  824     	MOVR	_rockStep,W
     00BC 0903                      1-  825     	BTRSS	STATUS,2
     00BD 3rrr                      1-  826     	LGOTO	_00147_DS_
                                    1-  827     	BANKSEL	_keyCount
     00BE rrrr                      3-   71 m1      .banksel ram_address
     00BF 01rr                      1-  828     	MOVR	_keyCount,W
     00C0 0903                      1-  829     	BTRSS	STATUS,2
     00C1 3rrr                      1-  830     	LGOTO	_00147_DS_
                                    1-  831     	BANKSEL	_rockTime
     00C2 rrrr                      3-   71 m1      .banksel ram_address
     00C3 01rr                      1-  832     	MOVR	_rockTime,W
     00C4 0903                      1-  833     	BTRSS	STATUS,2
     00C5 3rrr                      1-  834     	LGOTO	_00147_DS_
                                    1-  835     	BANKSEL	_chrgStep
     00C6 rrrr                      3-   71 m1      .banksel ram_address
     00C7 01rr                      1-  836     	MOVR	_chrgStep,W
     00C8 0903                      1-  837     	BTRSS	STATUS,2
     00C9 3rrr                      1-  838     	LGOTO	_00147_DS_
                                    1-  839     	.line	181, "main.c"; 	if(++sleepTime > 100)
                                    1-  840     	BANKSEL	_sleepTime
     00CA rrrr                      3-   71 m1      .banksel ram_address
     00CB 05rr                      1-  841     	INCR	_sleepTime,F
     00CC 0D03                      1-  842     	BTRSC	STATUS,2
     00CD 05rr                      1-  843     	INCR	(_sleepTime + 1),F
                                    1-  844     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  845     ;;unsigned compare: left >= lit (0x65=101), size=2
     00CE 2100                      1-  846     	MOVIA	0x00
     00CF 04rr                      1-  847     	SUBAR	(_sleepTime + 1),W
     00D0 0903                      1-  848     	BTRSS	STATUS,2
     00D1 3rrr                      1-  849     	LGOTO	_00223_DS_
     00D2 2165                      1-  850     	MOVIA	0x65
     00D3 04rr                      1-  851     	SUBAR	_sleepTime,W
     00D4                           1-  852     _00223_DS_:
     00D4 0803                      1-  853     	BTRSS	STATUS,0
     00D5 3rrr                      1-  854     	LGOTO	_00154_DS_
                                    1-  855     	.line	182, "main.c"; 	gotoSleep();
     00D6 2rrr                      1-  856     	LCALL	_gotoSleep
     00D7 3rrr                      1-  857     	LGOTO	_00154_DS_
     00D8                           1-  858     _00147_DS_:
                                    1-  859     	.line	186, "main.c"; 	sleepTime = 0;
                                    1-  860     	BANKSEL	_sleepTime
     00D8 rrrr                      3-   71 m1      .banksel ram_address
     00D9 02rr                      1-  861     	CLRR	_sleepTime
     00DA 02rr                      1-  862     	CLRR	(_sleepTime + 1)
     00DB 3rrr                      1-  863     	LGOTO	_00154_DS_
                                    1-  864     	.line	189, "main.c"; 	}
                                    1-  865     	RETURN	
     00DC 0010                      3-   26 m1      ret
                                    1-  866     ; exit point of _main
                                    1-  868     ;***
                                    1-  869     ;  pBlock Stats: dbName = C
                                    1-  870     ;***
                                    1-  871     ;has an exit
                                    1-  872     ;; Starting pCode block
                                    1-  873     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  875     _gotoSleep:
                                    1-  876     ; 2 exit points
                                    1-  877     	.line	490, "main.c"; 	COM1 = 1;
                                    1-  878     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Brr                      1-  879     	BSR	_PORTA,7
                                    1-  880     	.line	491, "main.c"; 	COM2 = 1;
     0002 1Brr                      1-  881     	BSR	_PORTA,6
                                    1-  882     	.line	492, "main.c"; 	COM3 = 1;
     0003 18rr                      1-  883     	BSR	_PORTB,1
                                    1-  884     	.line	493, "main.c"; 	baiwei = shiwei = gewei = 0;
                                    1-  885     	BANKSEL	_gewei
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  886     	CLRR	_gewei
                                    1-  887     	BANKSEL	_shiwei
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  888     	CLRR	_shiwei
                                    1-  889     	BANKSEL	_baiwei
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1-  890     	CLRR	_baiwei
                                    1-  891     	.line	494, "main.c"; 	workStep = 0;
                                    1-  892     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1-  893     	CLRR	_workStep
                                    1-  894     	.line	495, "main.c"; 	rockStep = 0;
                                    1-  895     	BANKSEL	_rockStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1-  896     	CLRR	_rockStep
                                    1-  897     	.line	496, "main.c"; 	AWUCON = 0x19;
     000E 2119                      1-  898     	MOVIA	0x19
     000F 00rr                      1-  899     	MOVAR	_AWUCON
                                    1-  900     	.line	497, "main.c"; 	sleepTime = 0;	
                                    1-  901     	BANKSEL	_sleepTime
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1-  902     	CLRR	_sleepTime
     0012 02rr                      1-  903     	CLRR	(_sleepTime + 1)
                                    1-  904     	.line	498, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     0013 2103                      1-  905     	MOVIA	0x03
     0014 00rr                      1-  906     	MOVAR	_INTE
                                    1-  907     	.line	499, "main.c"; 	PCON =  C_LVR_En;	
     0015 2108                      1-  908     	MOVIA	0x08
     0016 00rr                      1-  909     	MOVAR	_PCON
                                    1-  910     	.line	500, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0017 02rr                      1-  911     	CLRR	_INTF
                                    1-  912     	.line	501, "main.c"; 	CLRWDT();
     0018 0002                      1-  913     	clrwdt
                                    1-  914     	.line	502, "main.c"; 	ENI();
     0019 0004                      1-  915     	ENI
                                    1-  916     	.line	503, "main.c"; 	SLEEP();
     001A 0001                      1-  917     	sleep
                                    1-  918     	.line	504, "main.c"; 	AWUCON = 0x00;
     001B 02rr                      1-  919     	CLRR	_AWUCON
                                    1-  920     	.line	505, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0��Timer1��WDT overflow interrupt
     001C 2103                      1-  921     	MOVIA	0x03
     001D 00rr                      1-  922     	MOVAR	_INTE
                                    1-  923     	.line	506, "main.c"; 	INTF = 0;
     001E 02rr                      1-  924     	CLRR	_INTF
                                    1-  925     	.line	511, "main.c"; 	}
                                    1-  926     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1-  927     ; exit point of _gotoSleep
                                    1-  929     ;***
                                    1-  930     ;  pBlock Stats: dbName = C
                                    1-  931     ;***
                                    1-  932     ;has an exit
                                    1-  933     ;1 compiler assigned register :
                                    1-  934     ;   r0x1029
                                    1-  935     ;; Starting pCode block
                                    1-  936     .segment "code"; module=main, function=_keyRead
                                    1-  938     ;local variable name mapping:
     0000                           1-  940     _keyRead:
                                    1-  941     ; 2 exit points
                                    1-  942     	.line	466, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  943     	BANKSEL	r0x1029
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  944     	MOVAR	r0x1029
                                    1-  945     	.line	468, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  946     	MOVR	r0x1029,W
     0003 0D03                      1-  947     	BTRSC	STATUS,2
     0004 3rrr                      1-  948     	LGOTO	_00587_DS_
                                    1-  949     	.line	470, "main.c"; 	keyCount++;
                                    1-  950     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  951     	INCR	_keyCount,F
                                    1-  952     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  953     	.line	471, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  954     	MOVIA	0xc8
     0008 04rr                      1-  955     	SUBAR	_keyCount,W
     0009 0803                      1-  956     	BTRSS	STATUS,0
     000A 3rrr                      1-  957     	LGOTO	_00588_DS_
                                    1-  958     	.line	473, "main.c"; 	keyCount = 200;
     000B 21C8                      1-  959     	MOVIA	0xc8
     000C 00rr                      1-  960     	MOVAR	_keyCount
     000D 3rrr                      1-  961     	LGOTO	_00588_DS_
                                    1-  962     ;;unsigned compare: left < lit (0x8=8), size=1
     000E                           1-  963     _00587_DS_:
                                    1-  964     	.line	478, "main.c"; 	if(keyCount >= 8)
     000E 2108                      1-  965     	MOVIA	0x08
                                    1-  966     	BANKSEL	_keyCount
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1-  967     	SUBAR	_keyCount,W
     0011 0803                      1-  968     	BTRSS	STATUS,0
     0012 3rrr                      1-  969     	LGOTO	_00585_DS_
                                    1-  970     	.line	480, "main.c"; 	keyCount = 0;
     0013 02rr                      1-  971     	CLRR	_keyCount
                                    1-  972     	.line	481, "main.c"; 	return	1;
     0014 2101                      1-  973     	MOVIA	0x01
     0015 3rrr                      1-  974     	LGOTO	_00589_DS_
     0016                           1-  975     _00585_DS_:
                                    1-  976     	.line	483, "main.c"; 	keyCount = 0;
                                    1-  977     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 02rr                      1-  978     	CLRR	_keyCount
     0018                           1-  979     _00588_DS_:
                                    1-  980     	.line	485, "main.c"; 	return 0;
     0018 2100                      1-  981     	MOVIA	0x00
     0019                           1-  982     _00589_DS_:
                                    1-  983     	.line	486, "main.c"; 	}
                                    1-  984     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1-  985     ; exit point of _keyRead
                                    1-  987     ;***
                                    1-  988     ;  pBlock Stats: dbName = C
                                    1-  989     ;***
                                    1-  990     ;has an exit
                                    1-  991     ;functions called:
                                    1-  992     ;   _Delay10Us
                                    1-  993     ;   _Delay10Us
                                    1-  994     ;   _Delay10Us
                                    1-  995     ;   _Delay10Us
                                    1-  996     ;   _Delay10Us
                                    1-  997     ;   _Delay10Us
                                    1-  998     ;   _Delay10Us
                                    1-  999     ;   _Delay10Us
                                    1- 1000     ;2 compiler assigned registers:
                                    1- 1001     ;   r0x102A
                                    1- 1002     ;   r0x102B
                                    1- 1003     ;; Starting pCode block
                                    1- 1004     .segment "code"; module=main, function=_ind_light_disp
                                    1- 1006     ;local variable name mapping:
     0000                           1- 1009     _ind_light_disp:
                                    1- 1010     ; 2 exit points
                                    1- 1011     	.line	441, "main.c"; 	void ind_light_disp( uint8_t udata )
                                    1- 1012     	BANKSEL	r0x102A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1013     	MOVAR	r0x102A
                                    1- 1014     	.line	444, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1- 1015     	BANKSEL	r0x102B
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1016     	CLRR	r0x102B
     0004                           1- 1017     _00577_DS_:
                                    1- 1018     	.line	446, "main.c"; 	CLK=0;
     0004 1Crr                      1- 1019     	BCR	_PORTB,0
                                    1- 1020     	.line	447, "main.c"; 	Delay10Us();
     0005 2rrr                      1- 1021     	LCALL	_Delay10Us
                                    1- 1022     	.line	448, "main.c"; 	if(udata&0x80)
                                    1- 1023     	BANKSEL	r0x102A
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 0Brr                      1- 1024     	BTRSS	r0x102A,7
     0008 3rrr                      1- 1025     	LGOTO	_00574_DS_
                                    1- 1026     	.line	450, "main.c"; 	DAT=1;
                                    1- 1027     	BANKSEL	_PORTA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 18rr                      1- 1028     	BSR	_PORTA,1
                                    1- 1029     	.line	451, "main.c"; 	Delay10Us();
     000B 2rrr                      1- 1030     	LCALL	_Delay10Us
     000C 3rrr                      1- 1031     	LGOTO	_00575_DS_
     000D                           1- 1032     _00574_DS_:
                                    1- 1033     	.line	455, "main.c"; 	DAT=0;
                                    1- 1034     	BANKSEL	_PORTA
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 1Crr                      1- 1035     	BCR	_PORTA,1
                                    1- 1036     	.line	456, "main.c"; 	Delay10Us();
     000F 2rrr                      1- 1037     	LCALL	_Delay10Us
     0010                           1- 1038     _00575_DS_:
                                    1- 1039     	.line	458, "main.c"; 	CLK=1;
     0010 18rr                      1- 1040     	BSR	_PORTB,0
                                    1- 1041     	.line	459, "main.c"; 	Delay10Us();
     0011 2rrr                      1- 1042     	LCALL	_Delay10Us
                                    1- 1043     	.line	460, "main.c"; 	udata<<=1;
     0012 1C03                      1- 1044     	BCR	STATUS,0
                                    1- 1045     	BANKSEL	r0x102A
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 14rr                      1- 1046     	RLR	r0x102A,F
                                    1- 1047     	.line	444, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1- 1048     	BANKSEL	r0x102B
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1- 1049     	INCR	r0x102B,F
                                    1- 1050     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1051     ;;unsigned compare: left >= lit (0x8=8), size=1
     0017 2108                      1- 1052     	MOVIA	0x08
     0018 04rr                      1- 1053     	SUBAR	r0x102B,W
     0019 0803                      1- 1054     	BTRSS	STATUS,0
     001A 3rrr                      1- 1055     	LGOTO	_00577_DS_
                                    1- 1056     	.line	462, "main.c"; 	CLK=0;
     001B 1Crr                      1- 1057     	BCR	_PORTB,0
                                    1- 1058     	.line	463, "main.c"; 	DAT=0;
                                    1- 1059     	BANKSEL	_PORTA
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 1Crr                      1- 1060     	BCR	_PORTA,1
                                    1- 1061     	.line	464, "main.c"; 	}
                                    1- 1062     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1- 1063     ; exit point of _ind_light_disp
                                    1- 1065     ;***
                                    1- 1066     ;  pBlock Stats: dbName = C
                                    1- 1067     ;***
                                    1- 1068     ;has an exit
                                    1- 1069     ;functions called:
                                    1- 1070     ;   _msa_ReadBytes
                                    1- 1071     ;   _msa_ReadBytes
                                    1- 1072     ;   _msa_ReadBytes
                                    1- 1073     ;   _msa_ReadBytes
                                    1- 1074     ;7 compiler assigned registers:
                                    1- 1075     ;   r0x102C
                                    1- 1076     ;   r0x102D
                                    1- 1077     ;   r0x102E
                                    1- 1078     ;   STK02
                                    1- 1079     ;   STK01
                                    1- 1080     ;   STK00
                                    1- 1081     ;   r0x102F
                                    1- 1082     ;; Starting pCode block
                                    1- 1083     .segment "code"; module=main, function=_getData
     0000                           1- 1085     _getData:
                                    1- 1086     ; 2 exit points
                                    1- 1087     	.line	373, "main.c"; 	msa_ReadBytes(&hzL,MSA_REG_ACC_Z_LSB);
     0000 21rr                      1- 1088     	MOVIA	((_hzL + 0) >> 8) & 0xff
                                    1- 1089     	BANKSEL	r0x102C
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1090     	MOVAR	r0x102C
     0003 21rr                      1- 1091     	MOVIA	(_hzL + 0)
                                    1- 1092     	BANKSEL	r0x102D
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 1093     	MOVAR	r0x102D
                                    1- 1094     	BANKSEL	r0x102E
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 1095     	CLRR	r0x102E
     0008 2106                      1- 1096     	MOVIA	0x06
     0009 00rr                      1- 1097     	MOVAR	STK02
                                    1- 1098     	BANKSEL	r0x102D
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1099     	MOVR	r0x102D,W
     000C 00rr                      1- 1100     	MOVAR	STK01
                                    1- 1101     	BANKSEL	r0x102C
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 1102     	MOVR	r0x102C,W
     000F 00rr                      1- 1103     	MOVAR	STK00
     0010 2100                      1- 1104     	MOVIA	0x00
     0011 2rrr                      1- 1105     	LCALL	_msa_ReadBytes
                                    1- 1106     	.line	374, "main.c"; 	msa_ReadBytes(&hzH,MSA_REG_ACC_Z_MSB);
     0012 21rr                      1- 1107     	MOVIA	((_hzH + 0) >> 8) & 0xff
                                    1- 1108     	BANKSEL	r0x102C
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1- 1109     	MOVAR	r0x102C
     0015 21rr                      1- 1110     	MOVIA	(_hzH + 0)
                                    1- 1111     	BANKSEL	r0x102D
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1112     	MOVAR	r0x102D
                                    1- 1113     	BANKSEL	r0x102E
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1- 1114     	CLRR	r0x102E
     001A 2107                      1- 1115     	MOVIA	0x07
     001B 00rr                      1- 1116     	MOVAR	STK02
                                    1- 1117     	BANKSEL	r0x102D
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 1118     	MOVR	r0x102D,W
     001E 00rr                      1- 1119     	MOVAR	STK01
                                    1- 1120     	BANKSEL	r0x102C
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 1121     	MOVR	r0x102C,W
     0021 00rr                      1- 1122     	MOVAR	STK00
     0022 2100                      1- 1123     	MOVIA	0x00
     0023 2rrr                      1- 1124     	LCALL	_msa_ReadBytes
                                    1- 1125     	.line	376, "main.c"; 	hz = ((short)(hzH << 8 | hzL))>> 4;
                                    1- 1126     	BANKSEL	_hzH
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1127     	MOVR	_hzH,W
                                    1- 1128     	BANKSEL	r0x102D
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1- 1129     	MOVAR	r0x102D
                                    1- 1130     	BANKSEL	r0x102C
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 1131     	CLRR	r0x102C
                                    1- 1132     	BANKSEL	r0x102D
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 0Brr                      1- 1133     	BTRSS	r0x102D,7
     002C 3rrr                      1- 1134     	LGOTO	_00001_DS_
                                    1- 1135     	BANKSEL	r0x102C
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 06rr                      1- 1136     	DECR	r0x102C,F
     002F                           1- 1137     _00001_DS_:
                                    1- 1138     	BANKSEL	r0x102D
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1139     	MOVR	r0x102D,W
                                    1- 1140     	BANKSEL	r0x102F
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 00rr                      1- 1141     	MOVAR	r0x102F
                                    1- 1142     	BANKSEL	r0x102E
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1- 1143     	CLRR	r0x102E
                                    1- 1144     	BANKSEL	_hzL
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1145     	MOVR	_hzL,W
                                    1- 1146     	BANKSEL	r0x102D
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 1147     	MOVAR	r0x102D
                                    1- 1148     	BANKSEL	r0x102C
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1- 1149     	CLRR	r0x102C
                                    1- 1150     	BANKSEL	r0x102D
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 0Brr                      1- 1151     	BTRSS	r0x102D,7
     003D 3rrr                      1- 1152     	LGOTO	_00002_DS_
                                    1- 1153     	BANKSEL	r0x102C
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 06rr                      1- 1154     	DECR	r0x102C,F
     0040                           1- 1155     _00002_DS_:
                                    1- 1156     	BANKSEL	r0x102D
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1- 1157     	MOVR	r0x102D,W
                                    1- 1158     	BANKSEL	r0x102E
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 11rr                      1- 1159     	IORAR	r0x102E,F
                                    1- 1160     	BANKSEL	r0x102C
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1- 1161     	MOVR	r0x102C,W
                                    1- 1162     	BANKSEL	r0x102F
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 11rr                      1- 1163     	IORAR	r0x102F,F
                                    1- 1164     	BANKSEL	r0x102E
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 15rr                      1- 1165     	SWAPR	r0x102E,W
     004A 220F                      1- 1166     	ANDIA	0x0f
                                    1- 1167     	BANKSEL	_hz
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1- 1168     	MOVAR	_hz
                                    1- 1169     	BANKSEL	r0x102F
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 15rr                      1- 1170     	SWAPR	r0x102F,W
                                    1- 1171     	BANKSEL	_hz
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1- 1172     	MOVAR	(_hz + 1)
     0051 22F0                      1- 1173     	ANDIA	0xf0
     0052 11rr                      1- 1174     	IORAR	_hz,F
     0053 12rr                      1- 1175     	XORAR	(_hz + 1),F
     0054 21F0                      1- 1176     	MOVIA	0xf0
     0055 0Drr                      1- 1177     	BTRSC	(_hz + 1),3
     0056 11rr                      1- 1178     	IORAR	(_hz + 1),F
                                    1- 1179     	.line	377, "main.c"; 	hz &= 0x0FFF;
     0057 210F                      1- 1180     	MOVIA	0x0f
     0058 10rr                      1- 1181     	ANDAR	(_hz + 1),F
                                    1- 1182     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1183     ;;unsigned compare: left >= lit (0x181=385), size=2
                                    1- 1184     	.line	378, "main.c"; 	if(hz > 0x180 && hz < 0xE70)
     0059 2101                      1- 1185     	MOVIA	0x01
     005A 04rr                      1- 1186     	SUBAR	(_hz + 1),W
     005B 0903                      1- 1187     	BTRSS	STATUS,2
     005C 3rrr                      1- 1188     	LGOTO	_00558_DS_
     005D 2181                      1- 1189     	MOVIA	0x81
     005E 04rr                      1- 1190     	SUBAR	_hz,W
     005F                           1- 1191     _00558_DS_:
     005F 0803                      1- 1192     	BTRSS	STATUS,0
     0060 3rrr                      1- 1193     	LGOTO	_00514_DS_
                                    1- 1194     ;;unsigned compare: left < lit (0xE70=3696), size=2
     0061 210E                      1- 1195     	MOVIA	0x0e
                                    1- 1196     	BANKSEL	_hz
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 04rr                      1- 1197     	SUBAR	(_hz + 1),W
     0064 0903                      1- 1198     	BTRSS	STATUS,2
     0065 3rrr                      1- 1199     	LGOTO	_00559_DS_
     0066 2170                      1- 1200     	MOVIA	0x70
     0067 04rr                      1- 1201     	SUBAR	_hz,W
     0068                           1- 1202     _00559_DS_:
     0068 0C03                      1- 1203     	BTRSC	STATUS,0
     0069 3rrr                      1- 1204     	LGOTO	_00514_DS_
                                    1- 1205     	.line	380, "main.c"; 	rightTime = 0;
                                    1- 1206     	BANKSEL	_rightTime
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 02rr                      1- 1207     	CLRR	_rightTime
                                    1- 1208     	.line	381, "main.c"; 	if(++rockTime >= 7 && rockFlag == 0)
                                    1- 1209     	BANKSEL	_rockTime
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 05rr                      1- 1210     	INCR	_rockTime,F
                                    1- 1211     ;;unsigned compare: left < lit (0x7=7), size=1
     006E 2107                      1- 1212     	MOVIA	0x07
     006F 04rr                      1- 1213     	SUBAR	_rockTime,W
     0070 0803                      1- 1214     	BTRSS	STATUS,0
     0071 3rrr                      1- 1215     	LGOTO	_00502_DS_
                                    1- 1216     	BANKSEL	_rockFlag
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 01rr                      1- 1217     	MOVR	_rockFlag,W
     0074 0903                      1- 1218     	BTRSS	STATUS,2
     0075 3rrr                      1- 1219     	LGOTO	_00502_DS_
                                    1- 1220     	.line	384, "main.c"; 	if(rockStep > 0 || waitTime > 0)
                                    1- 1221     	BANKSEL	_rockStep
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 01rr                      1- 1222     	MOVR	_rockStep,W
     0078 0903                      1- 1223     	BTRSS	STATUS,2
     0079 3rrr                      1- 1224     	LGOTO	_00488_DS_
                                    1- 1225     	BANKSEL	_waitTime
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 01rr                      1- 1226     	MOVR	_waitTime,W
     007C 0D03                      1- 1227     	BTRSC	STATUS,2
     007D 3rrr                      1- 1228     	LGOTO	_00489_DS_
     007E                           1- 1229     _00488_DS_:
                                    1- 1230     	.line	385, "main.c"; 	return 0;
     007E 2100                      1- 1231     	MOVIA	0x00
     007F 3rrr                      1- 1232     	LGOTO	_00517_DS_
                                    1- 1233     ;;unsigned compare: left < lit (0xF0=240), size=1
     0080                           1- 1234     _00489_DS_:
                                    1- 1235     	.line	386, "main.c"; 	if(deadTime < 240)
     0080 21F0                      1- 1236     	MOVIA	0xf0
                                    1- 1237     	BANKSEL	_deadTime
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 04rr                      1- 1238     	SUBAR	_deadTime,W
     0083 0C03                      1- 1239     	BTRSC	STATUS,0
     0084 3rrr                      1- 1240     	LGOTO	_00500_DS_
                                    1- 1241     	.line	388, "main.c"; 	if(++countTime < 2)
                                    1- 1242     	BANKSEL	_countTime
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 05rr                      1- 1243     	INCR	_countTime,F
                                    1- 1244     ;;signed compare: left < lit (0x2=2), size=1, mask=ff
     0087 01rr                      1- 1245     	MOVR	_countTime,W
     0088 2580                      1- 1246     	ADDIA	0x80
     0089 257E                      1- 1247     	ADDIA	0x7e
     008A 0C03                      1- 1248     	BTRSC	STATUS,0
     008B 3rrr                      1- 1249     	LGOTO	_00492_DS_
                                    1- 1250     	.line	390, "main.c"; 	rockTime = 0;
                                    1- 1251     	BANKSEL	_rockTime
     008C rrrr                      3-   71 m1      .banksel ram_address
     008D 02rr                      1- 1252     	CLRR	_rockTime
                                    1- 1253     	.line	391, "main.c"; 	return 0;
     008E 2100                      1- 1254     	MOVIA	0x00
     008F 3rrr                      1- 1255     	LGOTO	_00517_DS_
     0090                           1- 1256     _00492_DS_:
                                    1- 1257     	.line	393, "main.c"; 	waitTime = 100;
     0090 2164                      1- 1258     	MOVIA	0x64
                                    1- 1259     	BANKSEL	_waitTime
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 00rr                      1- 1260     	MOVAR	_waitTime
                                    1- 1261     	.line	394, "main.c"; 	if(++gewei >= 10)
                                    1- 1262     	BANKSEL	_gewei
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 05rr                      1- 1263     	INCR	_gewei,F
                                    1- 1264     ;;unsigned compare: left < lit (0xA=10), size=1
     0095 210A                      1- 1265     	MOVIA	0x0a
     0096 04rr                      1- 1266     	SUBAR	_gewei,W
     0097 0803                      1- 1267     	BTRSS	STATUS,0
     0098 3rrr                      1- 1268     	LGOTO	_00500_DS_
                                    1- 1269     	.line	396, "main.c"; 	gewei = 0;
     0099 02rr                      1- 1270     	CLRR	_gewei
                                    1- 1271     	.line	397, "main.c"; 	if(++shiwei >= 10)
                                    1- 1272     	BANKSEL	_shiwei
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 05rr                      1- 1273     	INCR	_shiwei,F
                                    1- 1274     ;;unsigned compare: left < lit (0xA=10), size=1
     009C 210A                      1- 1275     	MOVIA	0x0a
     009D 04rr                      1- 1276     	SUBAR	_shiwei,W
     009E 0803                      1- 1277     	BTRSS	STATUS,0
     009F 3rrr                      1- 1278     	LGOTO	_00500_DS_
                                    1- 1279     	.line	399, "main.c"; 	shiwei = 0;
     00A0 02rr                      1- 1280     	CLRR	_shiwei
                                    1- 1281     	.line	400, "main.c"; 	if(++baiwei >= 10)
                                    1- 1282     	BANKSEL	_baiwei
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 05rr                      1- 1283     	INCR	_baiwei,F
                                    1- 1284     ;;unsigned compare: left < lit (0xA=10), size=1
     00A3 210A                      1- 1285     	MOVIA	0x0a
     00A4 04rr                      1- 1286     	SUBAR	_baiwei,W
     00A5 0C03                      1- 1287     	BTRSC	STATUS,0
                                    1- 1288     	.line	402, "main.c"; 	baiwei = 0;
     00A6 02rr                      1- 1289     	CLRR	_baiwei
     00A7                           1- 1290     _00500_DS_:
                                    1- 1291     	.line	407, "main.c"; 	rockStep = 2;
     00A7 2102                      1- 1292     	MOVIA	0x02
                                    1- 1293     	BANKSEL	_rockStep
     00A8 rrrr                      3-   71 m1      .banksel ram_address
     00A9 00rr                      1- 1294     	MOVAR	_rockStep
                                    1- 1295     	.line	408, "main.c"; 	rockFlag = 1;
     00AA 2101                      1- 1296     	MOVIA	0x01
                                    1- 1297     	BANKSEL	_rockFlag
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 00rr                      1- 1298     	MOVAR	_rockFlag
                                    1- 1299     	.line	409, "main.c"; 	workTime = 0;
                                    1- 1300     	BANKSEL	_workTime
     00AD rrrr                      3-   71 m1      .banksel ram_address
     00AE 02rr                      1- 1301     	CLRR	_workTime
     00AF 02rr                      1- 1302     	CLRR	(_workTime + 1)
                                    1- 1303     	.line	410, "main.c"; 	rockTime = 0;
                                    1- 1304     	BANKSEL	_rockTime
     00B0 rrrr                      3-   71 m1      .banksel ram_address
     00B1 02rr                      1- 1305     	CLRR	_rockTime
                                    1- 1306     	.line	411, "main.c"; 	deadTime = 0;
                                    1- 1307     	BANKSEL	_deadTime
     00B2 rrrr                      3-   71 m1      .banksel ram_address
     00B3 02rr                      1- 1308     	CLRR	_deadTime
                                    1- 1309     	.line	412, "main.c"; 	return 1;
     00B4 2101                      1- 1310     	MOVIA	0x01
     00B5 3rrr                      1- 1311     	LGOTO	_00517_DS_
     00B6                           1- 1312     _00502_DS_:
                                    1- 1313     	.line	415, "main.c"; 	return 0;
     00B6 2100                      1- 1314     	MOVIA	0x00
     00B7 3rrr                      1- 1315     	LGOTO	_00517_DS_
                                    1- 1316     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1317     ;;unsigned compare: left >= lit (0xFD1=4049), size=2
     00B8                           1- 1318     _00514_DS_:
                                    1- 1319     	.line	419, "main.c"; 	if((hz > 0xFD0 && hz < 0x0FFF) || (hz > 0x000 && hz < 0x030))
     00B8 210F                      1- 1320     	MOVIA	0x0f
                                    1- 1321     	BANKSEL	_hz
     00B9 rrrr                      3-   71 m1      .banksel ram_address
     00BA 04rr                      1- 1322     	SUBAR	(_hz + 1),W
     00BB 0903                      1- 1323     	BTRSS	STATUS,2
     00BC 3rrr                      1- 1324     	LGOTO	_00566_DS_
     00BD 21D1                      1- 1325     	MOVIA	0xd1
     00BE 04rr                      1- 1326     	SUBAR	_hz,W
     00BF                           1- 1327     _00566_DS_:
     00BF 0803                      1- 1328     	BTRSS	STATUS,0
     00C0 3rrr                      1- 1329     	LGOTO	_00512_DS_
                                    1- 1330     ;;unsigned compare: left < lit (0xFFF=4095), size=2
     00C1 210F                      1- 1331     	MOVIA	0x0f
                                    1- 1332     	BANKSEL	_hz
     00C2 rrrr                      3-   71 m1      .banksel ram_address
     00C3 04rr                      1- 1333     	SUBAR	(_hz + 1),W
     00C4 0903                      1- 1334     	BTRSS	STATUS,2
     00C5 3rrr                      1- 1335     	LGOTO	_00567_DS_
     00C6 21FF                      1- 1336     	MOVIA	0xff
     00C7 04rr                      1- 1337     	SUBAR	_hz,W
     00C8                           1- 1338     _00567_DS_:
     00C8 0803                      1- 1339     	BTRSS	STATUS,0
     00C9 3rrr                      1- 1340     	LGOTO	_00507_DS_
     00CA                           1- 1341     _00512_DS_:
                                    1- 1342     	BANKSEL	_hz
     00CA rrrr                      3-   71 m1      .banksel ram_address
     00CB 01rr                      1- 1343     	MOVR	_hz,W
     00CC 11rr                      1- 1344     	IORAR	(_hz + 1),W
     00CD 0D03                      1- 1345     	BTRSC	STATUS,2
     00CE 3rrr                      1- 1346     	LGOTO	_00508_DS_
                                    1- 1347     ;;unsigned compare: left < lit (0x30=48), size=2
     00CF 2100                      1- 1348     	MOVIA	0x00
     00D0 04rr                      1- 1349     	SUBAR	(_hz + 1),W
     00D1 0903                      1- 1350     	BTRSS	STATUS,2
     00D2 3rrr                      1- 1351     	LGOTO	_00568_DS_
     00D3 2130                      1- 1352     	MOVIA	0x30
     00D4 04rr                      1- 1353     	SUBAR	_hz,W
     00D5                           1- 1354     _00568_DS_:
     00D5 0C03                      1- 1355     	BTRSC	STATUS,0
     00D6 3rrr                      1- 1356     	LGOTO	_00508_DS_
     00D7                           1- 1357     _00507_DS_:
                                    1- 1358     	.line	421, "main.c"; 	if(++rightTime >= 14)	//����ȵ���
                                    1- 1359     	BANKSEL	_rightTime
     00D7 rrrr                      3-   71 m1      .banksel ram_address
     00D8 05rr                      1- 1360     	INCR	_rightTime,F
                                    1- 1361     ;;unsigned compare: left < lit (0xE=14), size=1
     00D9 210E                      1- 1362     	MOVIA	0x0e
     00DA 04rr                      1- 1363     	SUBAR	_rightTime,W
     00DB 0803                      1- 1364     	BTRSS	STATUS,0
     00DC 3rrr                      1- 1365     	LGOTO	_00509_DS_
                                    1- 1366     	.line	423, "main.c"; 	countTime = 0;
                                    1- 1367     	BANKSEL	_countTime
     00DD rrrr                      3-   71 m1      .banksel ram_address
     00DE 02rr                      1- 1368     	CLRR	_countTime
                                    1- 1369     	.line	424, "main.c"; 	rockTime = 0;
                                    1- 1370     	BANKSEL	_rockTime
     00DF rrrr                      3-   71 m1      .banksel ram_address
     00E0 02rr                      1- 1371     	CLRR	_rockTime
                                    1- 1372     	.line	425, "main.c"; 	MOTOR = 0;
                                    1- 1373     	BANKSEL	_PORTA
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 1Drr                      1- 1374     	BCR	_PORTA,2
                                    1- 1375     	.line	426, "main.c"; 	rockStep = 0;
                                    1- 1376     	BANKSEL	_rockStep
     00E3 rrrr                      3-   71 m1      .banksel ram_address
     00E4 02rr                      1- 1377     	CLRR	_rockStep
                                    1- 1378     	.line	427, "main.c"; 	workTime = 0;
                                    1- 1379     	BANKSEL	_workTime
     00E5 rrrr                      3-   71 m1      .banksel ram_address
     00E6 02rr                      1- 1380     	CLRR	_workTime
     00E7 02rr                      1- 1381     	CLRR	(_workTime + 1)
                                    1- 1382     	.line	428, "main.c"; 	rockFlag = 0;
                                    1- 1383     	BANKSEL	_rockFlag
     00E8 rrrr                      3-   71 m1      .banksel ram_address
     00E9 02rr                      1- 1384     	CLRR	_rockFlag
                                    1- 1385     	.line	429, "main.c"; 	rightTime = 14;
     00EA 210E                      1- 1386     	MOVIA	0x0e
                                    1- 1387     	BANKSEL	_rightTime
     00EB rrrr                      3-   71 m1      .banksel ram_address
     00EC 00rr                      1- 1388     	MOVAR	_rightTime
     00ED 3rrr                      1- 1389     	LGOTO	_00509_DS_
     00EE                           1- 1390     _00508_DS_:
                                    1- 1391     	.line	434, "main.c"; 	wrongTime++;
                                    1- 1392     	BANKSEL	_wrongTime
     00EE rrrr                      3-   71 m1      .banksel ram_address
     00EF 05rr                      1- 1393     	INCR	_wrongTime,F
     00F0                           1- 1394     _00509_DS_:
                                    1- 1395     	.line	436, "main.c"; 	return 0;
     00F0 2100                      1- 1396     	MOVIA	0x00
     00F1                           1- 1397     _00517_DS_:
                                    1- 1398     	.line	438, "main.c"; 	}
                                    1- 1399     	RETURN	
     00F1 0010                      3-   26 m1      ret
                                    1- 1400     ; exit point of _getData
                                    1- 1402     ;***
                                    1- 1403     ;  pBlock Stats: dbName = C
                                    1- 1404     ;***
                                    1- 1405     ;has an exit
                                    1- 1406     ;; Starting pCode block
                                    1- 1407     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1409     _chrgCtr:
                                    1- 1410     ; 2 exit points
                                    1- 1411     	.line	339, "main.c"; 	if(PORTA & 0x08)
                                    1- 1412     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 09rr                      1- 1413     	BTRSS	_PORTA,3
     0002 3rrr                      1- 1414     	LGOTO	_00481_DS_
                                    1- 1415     	.line	342, "main.c"; 	workStep = 0;	//����в���ʹ��
                                    1- 1416     	BANKSEL	_workStep
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1- 1417     	CLRR	_workStep
                                    1- 1418     	.line	343, "main.c"; 	baiwei = shiwei = gewei = 0;
                                    1- 1419     	BANKSEL	_gewei
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1420     	CLRR	_gewei
                                    1- 1421     	BANKSEL	_shiwei
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 1422     	CLRR	_shiwei
                                    1- 1423     	BANKSEL	_baiwei
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 1424     	CLRR	_baiwei
                                    1- 1425     	.line	344, "main.c"; 	COM1 = COM2 = COM3 = 1;
     000B 18rr                      1- 1426     	BSR	_PORTB,1
     000C 0Crr                      1- 1427     	BTRSC	_PORTB,1
     000D 3rrr                      1- 1428     	LGOTO	_00003_DS_
                                    1- 1429     	BANKSEL	_PORTA
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 1Frr                      1- 1430     	BCR	_PORTA,6
     0010                           1- 1431     _00003_DS_:
     0010 08rr                      1- 1432     	BTRSS	_PORTB,1
     0011 3rrr                      1- 1433     	LGOTO	_00004_DS_
                                    1- 1434     	BANKSEL	_PORTA
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 1Brr                      1- 1435     	BSR	_PORTA,6
     0014                           1- 1436     _00004_DS_:
                                    1- 1437     	BANKSEL	_PORTA
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 0Brr                      1- 1438     	BTRSS	_PORTA,6
     0016 1Frr                      1- 1439     	BCR	_PORTA,7
     0017 0Frr                      1- 1440     	BTRSC	_PORTA,6
     0018 1Brr                      1- 1441     	BSR	_PORTA,7
                                    1- 1442     	.line	345, "main.c"; 	if(PORTA & 0x10)
     0019 0Arr                      1- 1443     	BTRSS	_PORTA,4
     001A 3rrr                      1- 1444     	LGOTO	_00478_DS_
                                    1- 1445     	.line	348, "main.c"; 	if(++chrgFullTime >= 200)
                                    1- 1446     	BANKSEL	_chrgFullTime
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 05rr                      1- 1447     	INCR	_chrgFullTime,F
                                    1- 1448     ;;unsigned compare: left < lit (0xC8=200), size=1
     001D 21C8                      1- 1449     	MOVIA	0xc8
     001E 04rr                      1- 1450     	SUBAR	_chrgFullTime,W
     001F 0803                      1- 1451     	BTRSS	STATUS,0
     0020 3rrr                      1- 1452     	LGOTO	_00475_DS_
                                    1- 1453     	.line	350, "main.c"; 	chrgFullTime = 200;
     0021 21C8                      1- 1454     	MOVIA	0xc8
     0022 00rr                      1- 1455     	MOVAR	_chrgFullTime
                                    1- 1456     	.line	351, "main.c"; 	chrgStep = 2;
     0023 2102                      1- 1457     	MOVIA	0x02
                                    1- 1458     	BANKSEL	_chrgStep
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 1459     	MOVAR	_chrgStep
     0026 3rrr                      1- 1460     	LGOTO	_00483_DS_
     0027                           1- 1461     _00475_DS_:
                                    1- 1462     	.line	354, "main.c"; 	chrgStep = 1;
     0027 2101                      1- 1463     	MOVIA	0x01
                                    1- 1464     	BANKSEL	_chrgStep
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 00rr                      1- 1465     	MOVAR	_chrgStep
     002A 3rrr                      1- 1466     	LGOTO	_00483_DS_
     002B                           1- 1467     _00478_DS_:
                                    1- 1468     	.line	358, "main.c"; 	chrgFullTime = 0;
                                    1- 1469     	BANKSEL	_chrgFullTime
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 02rr                      1- 1470     	CLRR	_chrgFullTime
                                    1- 1471     	.line	359, "main.c"; 	chrgStep = 1;
     002D 2101                      1- 1472     	MOVIA	0x01
                                    1- 1473     	BANKSEL	_chrgStep
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1- 1474     	MOVAR	_chrgStep
     0030 3rrr                      1- 1475     	LGOTO	_00483_DS_
     0031                           1- 1476     _00481_DS_:
                                    1- 1477     	.line	364, "main.c"; 	chrgFullTime = 0;
                                    1- 1478     	BANKSEL	_chrgFullTime
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 02rr                      1- 1479     	CLRR	_chrgFullTime
                                    1- 1480     	.line	365, "main.c"; 	chrgStep = 0;
                                    1- 1481     	BANKSEL	_chrgStep
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1- 1482     	CLRR	_chrgStep
     0035                           1- 1483     _00483_DS_:
                                    1- 1484     	.line	367, "main.c"; 	}
                                    1- 1485     	RETURN	
     0035 0010                      3-   26 m1      ret
                                    1- 1486     ; exit point of _chrgCtr
                                    1- 1488     ;***
                                    1- 1489     ;  pBlock Stats: dbName = C
                                    1- 1490     ;***
                                    1- 1491     ;has an exit
                                    1- 1492     ;functions called:
                                    1- 1493     ;   __gptrget1
                                    1- 1494     ;   _ind_light_disp
                                    1- 1495     ;   _delay_us
                                    1- 1496     ;   __gptrget1
                                    1- 1497     ;   _ind_light_disp
                                    1- 1498     ;   _delay_us
                                    1- 1499     ;   __gptrget1
                                    1- 1500     ;   _ind_light_disp
                                    1- 1501     ;   _delay_us
                                    1- 1502     ;   __gptrget1
                                    1- 1503     ;   _ind_light_disp
                                    1- 1504     ;   _delay_us
                                    1- 1505     ;   __gptrget1
                                    1- 1506     ;   _ind_light_disp
                                    1- 1507     ;   _delay_us
                                    1- 1508     ;   __gptrget1
                                    1- 1509     ;   _ind_light_disp
                                    1- 1510     ;   _delay_us
                                    1- 1511     ;5 compiler assigned registers:
                                    1- 1512     ;   r0x1030
                                    1- 1513     ;   r0x1031
                                    1- 1514     ;   STK01
                                    1- 1515     ;   STK00
                                    1- 1516     ;   r0x1032
                                    1- 1517     ;; Starting pCode block
                                    1- 1518     .segment "code"; module=main, function=_refreshLed
     0000                           1- 1520     _refreshLed:
                                    1- 1521     ; 2 exit points
                                    1- 1522     	.line	308, "main.c"; 	COM1 = 1;
                                    1- 1523     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Brr                      1- 1524     	BSR	_PORTA,7
                                    1- 1525     	.line	309, "main.c"; 	COM2 = 1;
     0002 1Brr                      1- 1526     	BSR	_PORTA,6
                                    1- 1527     	.line	310, "main.c"; 	COM3 = 1;
     0003 18rr                      1- 1528     	BSR	_PORTB,1
                                    1- 1529     	.line	311, "main.c"; 	ind_light_disp(table[baiwei]);
                                    1- 1530     	BANKSEL	_baiwei
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1531     	MOVR	_baiwei,W
     0006 25rr                      1- 1532     	ADDIA	(_table + 0)
                                    1- 1533     	BANKSEL	r0x1030
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 1534     	MOVAR	r0x1030
     0009 21rr                      1- 1535     	MOVIA	((_table + 0) >> 8) & 0xff
     000A 0C03                      1- 1536     	BTRSC	STATUS,0
     000B 2501                      1- 1537     	ADDIA	0x01
                                    1- 1538     	BANKSEL	r0x1031
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1539     	MOVAR	r0x1031
                                    1- 1540     	BANKSEL	r0x1030
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1541     	MOVR	r0x1030,W
     0010 00rr                      1- 1542     	MOVAR	STK01
                                    1- 1543     	BANKSEL	r0x1031
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 1544     	MOVR	r0x1031,W
     0013 00rr                      1- 1545     	MOVAR	STK00
     0014 2100                      1- 1546     	MOVIA	0x00
     0015 2rrr                      1- 1547     	LCALL	__gptrget1
                                    1- 1548     	BANKSEL	r0x1032
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1549     	MOVAR	r0x1032
     0018 2rrr                      1- 1550     	LCALL	_ind_light_disp
                                    1- 1551     	.line	312, "main.c"; 	COM1 = 0;
                                    1- 1552     	BANKSEL	_PORTA
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Frr                      1- 1553     	BCR	_PORTA,7
                                    1- 1554     	.line	313, "main.c"; 	COM2 = 1;
     001B 1Brr                      1- 1555     	BSR	_PORTA,6
                                    1- 1556     	.line	314, "main.c"; 	COM3 = 1;
     001C 18rr                      1- 1557     	BSR	_PORTB,1
                                    1- 1558     	.line	315, "main.c"; 	delay_us(100);
     001D 2164                      1- 1559     	MOVIA	0x64
     001E 00rr                      1- 1560     	MOVAR	STK00
     001F 2100                      1- 1561     	MOVIA	0x00
     0020 2rrr                      1- 1562     	LCALL	_delay_us
                                    1- 1563     	.line	316, "main.c"; 	COM1 = 1;
                                    1- 1564     	BANKSEL	_PORTA
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 1Brr                      1- 1565     	BSR	_PORTA,7
                                    1- 1566     	.line	317, "main.c"; 	COM2 = 1;
     0023 1Brr                      1- 1567     	BSR	_PORTA,6
                                    1- 1568     	.line	318, "main.c"; 	COM3 = 1;
     0024 18rr                      1- 1569     	BSR	_PORTB,1
                                    1- 1570     	.line	319, "main.c"; 	ind_light_disp(table[shiwei]);
                                    1- 1571     	BANKSEL	_shiwei
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 1572     	MOVR	_shiwei,W
     0027 25rr                      1- 1573     	ADDIA	(_table + 0)
                                    1- 1574     	BANKSEL	r0x1030
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 00rr                      1- 1575     	MOVAR	r0x1030
     002A 21rr                      1- 1576     	MOVIA	((_table + 0) >> 8) & 0xff
     002B 0C03                      1- 1577     	BTRSC	STATUS,0
     002C 2501                      1- 1578     	ADDIA	0x01
                                    1- 1579     	BANKSEL	r0x1031
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 1580     	MOVAR	r0x1031
                                    1- 1581     	BANKSEL	r0x1030
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1582     	MOVR	r0x1030,W
     0031 00rr                      1- 1583     	MOVAR	STK01
                                    1- 1584     	BANKSEL	r0x1031
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 01rr                      1- 1585     	MOVR	r0x1031,W
     0034 00rr                      1- 1586     	MOVAR	STK00
     0035 2100                      1- 1587     	MOVIA	0x00
     0036 2rrr                      1- 1588     	LCALL	__gptrget1
                                    1- 1589     	BANKSEL	r0x1032
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 1590     	MOVAR	r0x1032
     0039 2rrr                      1- 1591     	LCALL	_ind_light_disp
                                    1- 1592     	.line	320, "main.c"; 	COM1 = 1;
                                    1- 1593     	BANKSEL	_PORTA
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 1Brr                      1- 1594     	BSR	_PORTA,7
                                    1- 1595     	.line	321, "main.c"; 	COM2 = 0;
     003C 1Frr                      1- 1596     	BCR	_PORTA,6
                                    1- 1597     	.line	322, "main.c"; 	COM3 = 1;
     003D 18rr                      1- 1598     	BSR	_PORTB,1
                                    1- 1599     	.line	323, "main.c"; 	delay_us(100);
     003E 2164                      1- 1600     	MOVIA	0x64
     003F 00rr                      1- 1601     	MOVAR	STK00
     0040 2100                      1- 1602     	MOVIA	0x00
     0041 2rrr                      1- 1603     	LCALL	_delay_us
                                    1- 1604     	.line	324, "main.c"; 	COM1 = 1;
                                    1- 1605     	BANKSEL	_PORTA
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 1Brr                      1- 1606     	BSR	_PORTA,7
                                    1- 1607     	.line	325, "main.c"; 	COM2 = 1;
     0044 1Brr                      1- 1608     	BSR	_PORTA,6
                                    1- 1609     	.line	326, "main.c"; 	COM3 = 1;
     0045 18rr                      1- 1610     	BSR	_PORTB,1
                                    1- 1611     	.line	327, "main.c"; 	ind_light_disp(table[gewei]);
                                    1- 1612     	BANKSEL	_gewei
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1- 1613     	MOVR	_gewei,W
     0048 25rr                      1- 1614     	ADDIA	(_table + 0)
                                    1- 1615     	BANKSEL	r0x1030
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 00rr                      1- 1616     	MOVAR	r0x1030
     004B 21rr                      1- 1617     	MOVIA	((_table + 0) >> 8) & 0xff
     004C 0C03                      1- 1618     	BTRSC	STATUS,0
     004D 2501                      1- 1619     	ADDIA	0x01
                                    1- 1620     	BANKSEL	r0x1031
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 00rr                      1- 1621     	MOVAR	r0x1031
                                    1- 1622     	BANKSEL	r0x1030
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1- 1623     	MOVR	r0x1030,W
     0052 00rr                      1- 1624     	MOVAR	STK01
                                    1- 1625     	BANKSEL	r0x1031
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 01rr                      1- 1626     	MOVR	r0x1031,W
     0055 00rr                      1- 1627     	MOVAR	STK00
     0056 2100                      1- 1628     	MOVIA	0x00
     0057 2rrr                      1- 1629     	LCALL	__gptrget1
                                    1- 1630     	BANKSEL	r0x1032
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 00rr                      1- 1631     	MOVAR	r0x1032
     005A 2rrr                      1- 1632     	LCALL	_ind_light_disp
                                    1- 1633     	.line	328, "main.c"; 	COM1 = 1;
                                    1- 1634     	BANKSEL	_PORTA
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 1Brr                      1- 1635     	BSR	_PORTA,7
                                    1- 1636     	.line	329, "main.c"; 	COM2 = 1;
     005D 1Brr                      1- 1637     	BSR	_PORTA,6
                                    1- 1638     	.line	330, "main.c"; 	COM3 = 0;
     005E 1Crr                      1- 1639     	BCR	_PORTB,1
                                    1- 1640     	.line	331, "main.c"; 	delay_us(100);
     005F 2164                      1- 1641     	MOVIA	0x64
     0060 00rr                      1- 1642     	MOVAR	STK00
     0061 2100                      1- 1643     	MOVIA	0x00
     0062 2rrr                      1- 1644     	LCALL	_delay_us
                                    1- 1645     	.line	332, "main.c"; 	COM1 = 1;
                                    1- 1646     	BANKSEL	_PORTA
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 1Brr                      1- 1647     	BSR	_PORTA,7
                                    1- 1648     	.line	333, "main.c"; 	COM2 = 1;
     0065 1Brr                      1- 1649     	BSR	_PORTA,6
                                    1- 1650     	.line	334, "main.c"; 	COM3 = 1;
     0066 18rr                      1- 1651     	BSR	_PORTB,1
                                    1- 1652     	.line	335, "main.c"; 	}
                                    1- 1653     	RETURN	
     0067 0010                      3-   26 m1      ret
                                    1- 1654     ; exit point of _refreshLed
                                    1- 1656     ;***
                                    1- 1657     ;  pBlock Stats: dbName = C
                                    1- 1658     ;***
                                    1- 1659     ;has an exit
                                    1- 1660     ;functions called:
                                    1- 1661     ;   _delay_us
                                    1- 1662     ;   _ind_light_disp
                                    1- 1663     ;   _ind_light_disp
                                    1- 1664     ;   _delay_us
                                    1- 1665     ;   _delay_us
                                    1- 1666     ;   _ind_light_disp
                                    1- 1667     ;   _ind_light_disp
                                    1- 1668     ;   _delay_us
                                    1- 1669     ;2 compiler assigned registers:
                                    1- 1670     ;   STK00
                                    1- 1671     ;   r0x1033
                                    1- 1672     ;; Starting pCode block
                                    1- 1673     .segment "code"; module=main, function=_refreshChrg
     0000                           1- 1675     _refreshChrg:
                                    1- 1676     ; 2 exit points
                                    1- 1677     	.line	287, "main.c"; 	COM1 = 1;
                                    1- 1678     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Brr                      1- 1679     	BSR	_PORTA,7
                                    1- 1680     	.line	288, "main.c"; 	COM2 = 1;
     0002 1Brr                      1- 1681     	BSR	_PORTA,6
                                    1- 1682     	.line	289, "main.c"; 	COM3 = 1;
     0003 18rr                      1- 1683     	BSR	_PORTB,1
                                    1- 1684     	.line	290, "main.c"; 	delay_us(10);
     0004 210A                      1- 1685     	MOVIA	0x0a
     0005 00rr                      1- 1686     	MOVAR	STK00
     0006 2100                      1- 1687     	MOVIA	0x00
     0007 2rrr                      1- 1688     	LCALL	_delay_us
                                    1- 1689     	.line	291, "main.c"; 	if(chrgStep == 1)
                                    1- 1690     	BANKSEL	_chrgStep
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1- 1691     	MOVR	_chrgStep,W
     000A 2401                      1- 1692     	XORIA	0x01
     000B 0903                      1- 1693     	BTRSS	STATUS,2
     000C 3rrr                      1- 1694     	LGOTO	_00464_DS_
                                    1- 1695     	.line	293, "main.c"; 	ind_light_disp(table[11]);
                                    1- 1696     	BANKSEL	_table
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 1697     	MOVR	(_table + 11),W
                                    1- 1698     	BANKSEL	r0x1033
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 1699     	MOVAR	r0x1033
     0011 2rrr                      1- 1700     	LCALL	_ind_light_disp
     0012 3rrr                      1- 1701     	LGOTO	_00465_DS_
     0013                           1- 1702     _00464_DS_:
                                    1- 1703     	.line	295, "main.c"; 	else if(chrgStep == 2)
                                    1- 1704     	BANKSEL	_chrgStep
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1705     	MOVR	_chrgStep,W
     0015 2402                      1- 1706     	XORIA	0x02
     0016 0903                      1- 1707     	BTRSS	STATUS,2
     0017 3rrr                      1- 1708     	LGOTO	_00465_DS_
                                    1- 1709     	.line	297, "main.c"; 	ind_light_disp(table[10]);
                                    1- 1710     	BANKSEL	_table
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1711     	MOVR	(_table + 10),W
                                    1- 1712     	BANKSEL	r0x1033
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1- 1713     	MOVAR	r0x1033
     001C 2rrr                      1- 1714     	LCALL	_ind_light_disp
     001D                           1- 1715     _00465_DS_:
                                    1- 1716     	.line	299, "main.c"; 	COM1 = 0;
                                    1- 1717     	BANKSEL	_PORTA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 1Frr                      1- 1718     	BCR	_PORTA,7
                                    1- 1719     	.line	300, "main.c"; 	COM2 = 0;
     001F 1Frr                      1- 1720     	BCR	_PORTA,6
                                    1- 1721     	.line	301, "main.c"; 	COM3 = 0;
     0020 1Crr                      1- 1722     	BCR	_PORTB,1
                                    1- 1723     	.line	302, "main.c"; 	delay_us(100);
     0021 2164                      1- 1724     	MOVIA	0x64
     0022 00rr                      1- 1725     	MOVAR	STK00
     0023 2100                      1- 1726     	MOVIA	0x00
     0024 2rrr                      1- 1727     	LCALL	_delay_us
                                    1- 1728     	.line	303, "main.c"; 	}
                                    1- 1729     	RETURN	
     0025 0010                      3-   26 m1      ret
                                    1- 1730     ; exit point of _refreshChrg
                                    1- 1732     ;***
                                    1- 1733     ;  pBlock Stats: dbName = C
                                    1- 1734     ;***
                                    1- 1735     ;has an exit
                                    1- 1736     ;; Starting pCode block
                                    1- 1737     .segment "code"; module=main, function=_workCtr
     0000                           1- 1739     _workCtr:
                                    1- 1740     ; 2 exit points
                                    1- 1741     	.line	193, "main.c"; 	if(rockStep == 1)
                                    1- 1742     	BANKSEL	_rockStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1743     	MOVR	_rockStep,W
     0002 2401                      1- 1744     	XORIA	0x01
     0003 0903                      1- 1745     	BTRSS	STATUS,2
     0004 3rrr                      1- 1746     	LGOTO	_00323_DS_
                                    1- 1747     	.line	195, "main.c"; 	++workTime;
                                    1- 1748     	BANKSEL	_workTime
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1749     	INCR	_workTime,F
     0007 0D03                      1- 1750     	BTRSC	STATUS,2
     0008 05rr                      1- 1751     	INCR	(_workTime + 1),F
                                    1- 1752     ;;unsigned compare: left < lit (0x18=24), size=2
                                    1- 1753     	.line	196, "main.c"; 	if(workTime < 24)
     0009 2100                      1- 1754     	MOVIA	0x00
     000A 04rr                      1- 1755     	SUBAR	(_workTime + 1),W
     000B 0903                      1- 1756     	BTRSS	STATUS,2
     000C 3rrr                      1- 1757     	LGOTO	_00426_DS_
     000D 2118                      1- 1758     	MOVIA	0x18
     000E 04rr                      1- 1759     	SUBAR	_workTime,W
     000F                           1- 1760     _00426_DS_:
     000F 0C03                      1- 1761     	BTRSC	STATUS,0
     0010 3rrr                      1- 1762     	LGOTO	_00247_DS_
                                    1- 1763     	.line	197, "main.c"; 	MOTOR = 1;
                                    1- 1764     	BANKSEL	_PORTA
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 19rr                      1- 1765     	BSR	_PORTA,2
     0013 3rrr                      1- 1766     	LGOTO	_00325_DS_
                                    1- 1767     ;;unsigned compare: left < lit (0x2D=45), size=2
     0014                           1- 1768     _00247_DS_:
                                    1- 1769     	.line	198, "main.c"; 	else if(workTime < 45)
     0014 2100                      1- 1770     	MOVIA	0x00
                                    1- 1771     	BANKSEL	_workTime
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 04rr                      1- 1772     	SUBAR	(_workTime + 1),W
     0017 0903                      1- 1773     	BTRSS	STATUS,2
     0018 3rrr                      1- 1774     	LGOTO	_00427_DS_
     0019 212D                      1- 1775     	MOVIA	0x2d
     001A 04rr                      1- 1776     	SUBAR	_workTime,W
     001B                           1- 1777     _00427_DS_:
     001B 0C03                      1- 1778     	BTRSC	STATUS,0
     001C 3rrr                      1- 1779     	LGOTO	_00244_DS_
                                    1- 1780     	.line	199, "main.c"; 	MOTOR = 0;
                                    1- 1781     	BANKSEL	_PORTA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 1Drr                      1- 1782     	BCR	_PORTA,2
     001F 3rrr                      1- 1783     	LGOTO	_00325_DS_
                                    1- 1784     ;;unsigned compare: left < lit (0x44=68), size=2
     0020                           1- 1785     _00244_DS_:
                                    1- 1786     	.line	200, "main.c"; 	else if(workTime < 68)
     0020 2100                      1- 1787     	MOVIA	0x00
                                    1- 1788     	BANKSEL	_workTime
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 04rr                      1- 1789     	SUBAR	(_workTime + 1),W
     0023 0903                      1- 1790     	BTRSS	STATUS,2
     0024 3rrr                      1- 1791     	LGOTO	_00428_DS_
     0025 2144                      1- 1792     	MOVIA	0x44
     0026 04rr                      1- 1793     	SUBAR	_workTime,W
     0027                           1- 1794     _00428_DS_:
     0027 0C03                      1- 1795     	BTRSC	STATUS,0
     0028 3rrr                      1- 1796     	LGOTO	_00241_DS_
                                    1- 1797     	.line	201, "main.c"; 	MOTOR = 1;
                                    1- 1798     	BANKSEL	_PORTA
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 19rr                      1- 1799     	BSR	_PORTA,2
     002B 3rrr                      1- 1800     	LGOTO	_00325_DS_
                                    1- 1801     ;;unsigned compare: left < lit (0x59=89), size=2
     002C                           1- 1802     _00241_DS_:
                                    1- 1803     	.line	202, "main.c"; 	else if(workTime < 89)
     002C 2100                      1- 1804     	MOVIA	0x00
                                    1- 1805     	BANKSEL	_workTime
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 04rr                      1- 1806     	SUBAR	(_workTime + 1),W
     002F 0903                      1- 1807     	BTRSS	STATUS,2
     0030 3rrr                      1- 1808     	LGOTO	_00429_DS_
     0031 2159                      1- 1809     	MOVIA	0x59
     0032 04rr                      1- 1810     	SUBAR	_workTime,W
     0033                           1- 1811     _00429_DS_:
     0033 0C03                      1- 1812     	BTRSC	STATUS,0
     0034 3rrr                      1- 1813     	LGOTO	_00238_DS_
                                    1- 1814     	.line	203, "main.c"; 	MOTOR = 0;
                                    1- 1815     	BANKSEL	_PORTA
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 1Drr                      1- 1816     	BCR	_PORTA,2
     0037 3rrr                      1- 1817     	LGOTO	_00325_DS_
                                    1- 1818     ;;unsigned compare: left < lit (0x6F=111), size=2
     0038                           1- 1819     _00238_DS_:
                                    1- 1820     	.line	204, "main.c"; 	else if(workTime < 111)
     0038 2100                      1- 1821     	MOVIA	0x00
                                    1- 1822     	BANKSEL	_workTime
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1823     	SUBAR	(_workTime + 1),W
     003B 0903                      1- 1824     	BTRSS	STATUS,2
     003C 3rrr                      1- 1825     	LGOTO	_00430_DS_
     003D 216F                      1- 1826     	MOVIA	0x6f
     003E 04rr                      1- 1827     	SUBAR	_workTime,W
     003F                           1- 1828     _00430_DS_:
     003F 0C03                      1- 1829     	BTRSC	STATUS,0
     0040 3rrr                      1- 1830     	LGOTO	_00235_DS_
                                    1- 1831     	.line	205, "main.c"; 	MOTOR = 1;
                                    1- 1832     	BANKSEL	_PORTA
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 19rr                      1- 1833     	BSR	_PORTA,2
     0043 3rrr                      1- 1834     	LGOTO	_00325_DS_
                                    1- 1835     ;;unsigned compare: left < lit (0x8E=142), size=2
     0044                           1- 1836     _00235_DS_:
                                    1- 1837     	.line	206, "main.c"; 	else if(workTime < 142)
     0044 2100                      1- 1838     	MOVIA	0x00
                                    1- 1839     	BANKSEL	_workTime
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 04rr                      1- 1840     	SUBAR	(_workTime + 1),W
     0047 0903                      1- 1841     	BTRSS	STATUS,2
     0048 3rrr                      1- 1842     	LGOTO	_00431_DS_
     0049 218E                      1- 1843     	MOVIA	0x8e
     004A 04rr                      1- 1844     	SUBAR	_workTime,W
     004B                           1- 1845     _00431_DS_:
     004B 0C03                      1- 1846     	BTRSC	STATUS,0
     004C 3rrr                      1- 1847     	LGOTO	_00232_DS_
                                    1- 1848     	.line	207, "main.c"; 	MOTOR = 0;
                                    1- 1849     	BANKSEL	_PORTA
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 1Drr                      1- 1850     	BCR	_PORTA,2
     004F 3rrr                      1- 1851     	LGOTO	_00325_DS_
                                    1- 1852     ;;unsigned compare: left < lit (0xAE=174), size=2
     0050                           1- 1853     _00232_DS_:
                                    1- 1854     	.line	208, "main.c"; 	else if(workTime < 174)
     0050 2100                      1- 1855     	MOVIA	0x00
                                    1- 1856     	BANKSEL	_workTime
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 04rr                      1- 1857     	SUBAR	(_workTime + 1),W
     0053 0903                      1- 1858     	BTRSS	STATUS,2
     0054 3rrr                      1- 1859     	LGOTO	_00432_DS_
     0055 21AE                      1- 1860     	MOVIA	0xae
     0056 04rr                      1- 1861     	SUBAR	_workTime,W
     0057                           1- 1862     _00432_DS_:
     0057 0C03                      1- 1863     	BTRSC	STATUS,0
     0058 3rrr                      1- 1864     	LGOTO	_00229_DS_
                                    1- 1865     	.line	209, "main.c"; 	MOTOR = 1;
                                    1- 1866     	BANKSEL	_PORTA
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 19rr                      1- 1867     	BSR	_PORTA,2
     005B 3rrr                      1- 1868     	LGOTO	_00325_DS_
     005C                           1- 1869     _00229_DS_:
                                    1- 1870     	.line	212, "main.c"; 	MOTOR = 0;
                                    1- 1871     	BANKSEL	_PORTA
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 1Drr                      1- 1872     	BCR	_PORTA,2
                                    1- 1873     	.line	213, "main.c"; 	rockStep = 0;
                                    1- 1874     	BANKSEL	_rockStep
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 02rr                      1- 1875     	CLRR	_rockStep
                                    1- 1876     	.line	214, "main.c"; 	workTime = 0;
                                    1- 1877     	BANKSEL	_workTime
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 02rr                      1- 1878     	CLRR	_workTime
     0062 02rr                      1- 1879     	CLRR	(_workTime + 1)
     0063 3rrr                      1- 1880     	LGOTO	_00325_DS_
     0064                           1- 1881     _00323_DS_:
                                    1- 1882     	.line	217, "main.c"; 	else if(rockStep == 2)
                                    1- 1883     	BANKSEL	_rockStep
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 01rr                      1- 1884     	MOVR	_rockStep,W
     0066 2402                      1- 1885     	XORIA	0x02
     0067 0903                      1- 1886     	BTRSS	STATUS,2
     0068 3rrr                      1- 1887     	LGOTO	_00325_DS_
                                    1- 1888     	.line	219, "main.c"; 	++workTime;
                                    1- 1889     	BANKSEL	_workTime
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 05rr                      1- 1890     	INCR	_workTime,F
     006B 0D03                      1- 1891     	BTRSC	STATUS,2
     006C 05rr                      1- 1892     	INCR	(_workTime + 1),F
                                    1- 1893     ;;unsigned compare: left < lit (0x4F=79), size=2
                                    1- 1894     	.line	220, "main.c"; 	if(workTime < 79)
     006D 2100                      1- 1895     	MOVIA	0x00
     006E 04rr                      1- 1896     	SUBAR	(_workTime + 1),W
     006F 0903                      1- 1897     	BTRSS	STATUS,2
     0070 3rrr                      1- 1898     	LGOTO	_00433_DS_
     0071 214F                      1- 1899     	MOVIA	0x4f
     0072 04rr                      1- 1900     	SUBAR	_workTime,W
     0073                           1- 1901     _00433_DS_:
     0073 0C03                      1- 1902     	BTRSC	STATUS,0
     0074 3rrr                      1- 1903     	LGOTO	_00250_DS_
                                    1- 1904     	.line	222, "main.c"; 	MOTOR = 0;
                                    1- 1905     	BANKSEL	_PORTA
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 1Drr                      1- 1906     	BCR	_PORTA,2
                                    1- 1907     ;;unsigned compare: left < lit (0x5A=90), size=2
     0077                           1- 1908     _00250_DS_:
                                    1- 1909     	.line	224, "main.c"; 	if(workTime < 90)
     0077 2100                      1- 1910     	MOVIA	0x00
                                    1- 1911     	BANKSEL	_workTime
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 04rr                      1- 1912     	SUBAR	(_workTime + 1),W
     007A 0903                      1- 1913     	BTRSS	STATUS,2
     007B 3rrr                      1- 1914     	LGOTO	_00434_DS_
     007C 215A                      1- 1915     	MOVIA	0x5a
     007D 04rr                      1- 1916     	SUBAR	_workTime,W
     007E                           1- 1917     _00434_DS_:
     007E 0C03                      1- 1918     	BTRSC	STATUS,0
     007F 3rrr                      1- 1919     	LGOTO	_00318_DS_
                                    1- 1920     	.line	226, "main.c"; 	MOTOR = 1;
                                    1- 1921     	BANKSEL	_PORTA
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 19rr                      1- 1922     	BSR	_PORTA,2
     0082 3rrr                      1- 1923     	LGOTO	_00325_DS_
                                    1- 1924     ;;unsigned compare: left < lit (0x5F=95), size=2
     0083                           1- 1925     _00318_DS_:
                                    1- 1926     	.line	228, "main.c"; 	else if(workTime < 95)
     0083 2100                      1- 1927     	MOVIA	0x00
                                    1- 1928     	BANKSEL	_workTime
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 04rr                      1- 1929     	SUBAR	(_workTime + 1),W
     0086 0903                      1- 1930     	BTRSS	STATUS,2
     0087 3rrr                      1- 1931     	LGOTO	_00435_DS_
     0088 215F                      1- 1932     	MOVIA	0x5f
     0089 04rr                      1- 1933     	SUBAR	_workTime,W
     008A                           1- 1934     _00435_DS_:
     008A 0C03                      1- 1935     	BTRSC	STATUS,0
     008B 3rrr                      1- 1936     	LGOTO	_00315_DS_
                                    1- 1937     	.line	229, "main.c"; 	MOTOR = 0;
                                    1- 1938     	BANKSEL	_PORTA
     008C rrrr                      3-   71 m1      .banksel ram_address
     008D 1Drr                      1- 1939     	BCR	_PORTA,2
     008E 3rrr                      1- 1940     	LGOTO	_00325_DS_
                                    1- 1941     ;;unsigned compare: left < lit (0x70=112), size=2
     008F                           1- 1942     _00315_DS_:
                                    1- 1943     	.line	230, "main.c"; 	else if(workTime < 112)
     008F 2100                      1- 1944     	MOVIA	0x00
                                    1- 1945     	BANKSEL	_workTime
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 04rr                      1- 1946     	SUBAR	(_workTime + 1),W
     0092 0903                      1- 1947     	BTRSS	STATUS,2
     0093 3rrr                      1- 1948     	LGOTO	_00436_DS_
     0094 2170                      1- 1949     	MOVIA	0x70
     0095 04rr                      1- 1950     	SUBAR	_workTime,W
     0096                           1- 1951     _00436_DS_:
     0096 0C03                      1- 1952     	BTRSC	STATUS,0
     0097 3rrr                      1- 1953     	LGOTO	_00312_DS_
                                    1- 1954     	.line	232, "main.c"; 	MOTOR = 1;
                                    1- 1955     	BANKSEL	_PORTA
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 19rr                      1- 1956     	BSR	_PORTA,2
     009A 3rrr                      1- 1957     	LGOTO	_00325_DS_
                                    1- 1958     ;;unsigned compare: left < lit (0x73=115), size=2
     009B                           1- 1959     _00312_DS_:
                                    1- 1960     	.line	234, "main.c"; 	else if(workTime < 115)
     009B 2100                      1- 1961     	MOVIA	0x00
                                    1- 1962     	BANKSEL	_workTime
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 04rr                      1- 1963     	SUBAR	(_workTime + 1),W
     009E 0903                      1- 1964     	BTRSS	STATUS,2
     009F 3rrr                      1- 1965     	LGOTO	_00437_DS_
     00A0 2173                      1- 1966     	MOVIA	0x73
     00A1 04rr                      1- 1967     	SUBAR	_workTime,W
     00A2                           1- 1968     _00437_DS_:
     00A2 0C03                      1- 1969     	BTRSC	STATUS,0
     00A3 3rrr                      1- 1970     	LGOTO	_00309_DS_
                                    1- 1971     	.line	235, "main.c"; 	MOTOR = 0;
                                    1- 1972     	BANKSEL	_PORTA
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 1Drr                      1- 1973     	BCR	_PORTA,2
     00A6 3rrr                      1- 1974     	LGOTO	_00325_DS_
                                    1- 1975     ;;unsigned compare: left < lit (0x81=129), size=2
     00A7                           1- 1976     _00309_DS_:
                                    1- 1977     	.line	236, "main.c"; 	else if(workTime < 129)
     00A7 2100                      1- 1978     	MOVIA	0x00
                                    1- 1979     	BANKSEL	_workTime
     00A8 rrrr                      3-   71 m1      .banksel ram_address
     00A9 04rr                      1- 1980     	SUBAR	(_workTime + 1),W
     00AA 0903                      1- 1981     	BTRSS	STATUS,2
     00AB 3rrr                      1- 1982     	LGOTO	_00438_DS_
     00AC 2181                      1- 1983     	MOVIA	0x81
     00AD 04rr                      1- 1984     	SUBAR	_workTime,W
     00AE                           1- 1985     _00438_DS_:
     00AE 0C03                      1- 1986     	BTRSC	STATUS,0
     00AF 3rrr                      1- 1987     	LGOTO	_00306_DS_
                                    1- 1988     	.line	237, "main.c"; 	MOTOR = 1;
                                    1- 1989     	BANKSEL	_PORTA
     00B0 rrrr                      3-   71 m1      .banksel ram_address
     00B1 19rr                      1- 1990     	BSR	_PORTA,2
     00B2 3rrr                      1- 1991     	LGOTO	_00325_DS_
                                    1- 1992     ;;unsigned compare: left < lit (0xA4=164), size=2
     00B3                           1- 1993     _00306_DS_:
                                    1- 1994     	.line	238, "main.c"; 	else if(workTime < 164)
     00B3 2100                      1- 1995     	MOVIA	0x00
                                    1- 1996     	BANKSEL	_workTime
     00B4 rrrr                      3-   71 m1      .banksel ram_address
     00B5 04rr                      1- 1997     	SUBAR	(_workTime + 1),W
     00B6 0903                      1- 1998     	BTRSS	STATUS,2
     00B7 3rrr                      1- 1999     	LGOTO	_00439_DS_
     00B8 21A4                      1- 2000     	MOVIA	0xa4
     00B9 04rr                      1- 2001     	SUBAR	_workTime,W
     00BA                           1- 2002     _00439_DS_:
     00BA 0C03                      1- 2003     	BTRSC	STATUS,0
     00BB 3rrr                      1- 2004     	LGOTO	_00303_DS_
                                    1- 2005     	.line	239, "main.c"; 	MOTOR = 0;
                                    1- 2006     	BANKSEL	_PORTA
     00BC rrrr                      3-   71 m1      .banksel ram_address
     00BD 1Drr                      1- 2007     	BCR	_PORTA,2
     00BE 3rrr                      1- 2008     	LGOTO	_00325_DS_
                                    1- 2009     ;;unsigned compare: left < lit (0xAF=175), size=2
     00BF                           1- 2010     _00303_DS_:
                                    1- 2011     	.line	240, "main.c"; 	else if(workTime < 175)
     00BF 2100                      1- 2012     	MOVIA	0x00
                                    1- 2013     	BANKSEL	_workTime
     00C0 rrrr                      3-   71 m1      .banksel ram_address
     00C1 04rr                      1- 2014     	SUBAR	(_workTime + 1),W
     00C2 0903                      1- 2015     	BTRSS	STATUS,2
     00C3 3rrr                      1- 2016     	LGOTO	_00440_DS_
     00C4 21AF                      1- 2017     	MOVIA	0xaf
     00C5 04rr                      1- 2018     	SUBAR	_workTime,W
     00C6                           1- 2019     _00440_DS_:
     00C6 0C03                      1- 2020     	BTRSC	STATUS,0
     00C7 3rrr                      1- 2021     	LGOTO	_00300_DS_
                                    1- 2022     	.line	241, "main.c"; 	MOTOR = 1;
                                    1- 2023     	BANKSEL	_PORTA
     00C8 rrrr                      3-   71 m1      .banksel ram_address
     00C9 19rr                      1- 2024     	BSR	_PORTA,2
     00CA 3rrr                      1- 2025     	LGOTO	_00325_DS_
                                    1- 2026     ;;unsigned compare: left < lit (0xB4=180), size=2
     00CB                           1- 2027     _00300_DS_:
                                    1- 2028     	.line	242, "main.c"; 	else if(workTime < 180)
     00CB 2100                      1- 2029     	MOVIA	0x00
                                    1- 2030     	BANKSEL	_workTime
     00CC rrrr                      3-   71 m1      .banksel ram_address
     00CD 04rr                      1- 2031     	SUBAR	(_workTime + 1),W
     00CE 0903                      1- 2032     	BTRSS	STATUS,2
     00CF 3rrr                      1- 2033     	LGOTO	_00441_DS_
     00D0 21B4                      1- 2034     	MOVIA	0xb4
     00D1 04rr                      1- 2035     	SUBAR	_workTime,W
     00D2                           1- 2036     _00441_DS_:
     00D2 0C03                      1- 2037     	BTRSC	STATUS,0
     00D3 3rrr                      1- 2038     	LGOTO	_00297_DS_
                                    1- 2039     	.line	243, "main.c"; 	MOTOR = 0;
                                    1- 2040     	BANKSEL	_PORTA
     00D4 rrrr                      3-   71 m1      .banksel ram_address
     00D5 1Drr                      1- 2041     	BCR	_PORTA,2
     00D6 3rrr                      1- 2042     	LGOTO	_00325_DS_
                                    1- 2043     ;;unsigned compare: left < lit (0xC5=197), size=2
     00D7                           1- 2044     _00297_DS_:
                                    1- 2045     	.line	244, "main.c"; 	else if(workTime < 197)
     00D7 2100                      1- 2046     	MOVIA	0x00
                                    1- 2047     	BANKSEL	_workTime
     00D8 rrrr                      3-   71 m1      .banksel ram_address
     00D9 04rr                      1- 2048     	SUBAR	(_workTime + 1),W
     00DA 0903                      1- 2049     	BTRSS	STATUS,2
     00DB 3rrr                      1- 2050     	LGOTO	_00442_DS_
     00DC 21C5                      1- 2051     	MOVIA	0xc5
     00DD 04rr                      1- 2052     	SUBAR	_workTime,W
     00DE                           1- 2053     _00442_DS_:
     00DE 0C03                      1- 2054     	BTRSC	STATUS,0
     00DF 3rrr                      1- 2055     	LGOTO	_00294_DS_
                                    1- 2056     	.line	245, "main.c"; 	MOTOR = 1;
                                    1- 2057     	BANKSEL	_PORTA
     00E0 rrrr                      3-   71 m1      .banksel ram_address
     00E1 19rr                      1- 2058     	BSR	_PORTA,2
     00E2 3rrr                      1- 2059     	LGOTO	_00325_DS_
                                    1- 2060     ;;unsigned compare: left < lit (0xC8=200), size=2
     00E3                           1- 2061     _00294_DS_:
                                    1- 2062     	.line	246, "main.c"; 	else if(workTime < 200)
     00E3 2100                      1- 2063     	MOVIA	0x00
                                    1- 2064     	BANKSEL	_workTime
     00E4 rrrr                      3-   71 m1      .banksel ram_address
     00E5 04rr                      1- 2065     	SUBAR	(_workTime + 1),W
     00E6 0903                      1- 2066     	BTRSS	STATUS,2
     00E7 3rrr                      1- 2067     	LGOTO	_00443_DS_
     00E8 21C8                      1- 2068     	MOVIA	0xc8
     00E9 04rr                      1- 2069     	SUBAR	_workTime,W
     00EA                           1- 2070     _00443_DS_:
     00EA 0C03                      1- 2071     	BTRSC	STATUS,0
     00EB 3rrr                      1- 2072     	LGOTO	_00291_DS_
                                    1- 2073     	.line	247, "main.c"; 	MOTOR = 0;
                                    1- 2074     	BANKSEL	_PORTA
     00EC rrrr                      3-   71 m1      .banksel ram_address
     00ED 1Drr                      1- 2075     	BCR	_PORTA,2
     00EE 3rrr                      1- 2076     	LGOTO	_00325_DS_
                                    1- 2077     ;;unsigned compare: left < lit (0xD6=214), size=2
     00EF                           1- 2078     _00291_DS_:
                                    1- 2079     	.line	248, "main.c"; 	else if(workTime < 214)
     00EF 2100                      1- 2080     	MOVIA	0x00
                                    1- 2081     	BANKSEL	_workTime
     00F0 rrrr                      3-   71 m1      .banksel ram_address
     00F1 04rr                      1- 2082     	SUBAR	(_workTime + 1),W
     00F2 0903                      1- 2083     	BTRSS	STATUS,2
     00F3 3rrr                      1- 2084     	LGOTO	_00444_DS_
     00F4 21D6                      1- 2085     	MOVIA	0xd6
     00F5 04rr                      1- 2086     	SUBAR	_workTime,W
     00F6                           1- 2087     _00444_DS_:
     00F6 0C03                      1- 2088     	BTRSC	STATUS,0
     00F7 3rrr                      1- 2089     	LGOTO	_00288_DS_
                                    1- 2090     	.line	249, "main.c"; 	MOTOR = 1;
                                    1- 2091     	BANKSEL	_PORTA
     00F8 rrrr                      3-   71 m1      .banksel ram_address
     00F9 19rr                      1- 2092     	BSR	_PORTA,2
     00FA 3rrr                      1- 2093     	LGOTO	_00325_DS_
                                    1- 2094     ;;unsigned compare: left < lit (0xF9=249), size=2
     00FB                           1- 2095     _00288_DS_:
                                    1- 2096     	.line	250, "main.c"; 	else if(workTime < 249)
     00FB 2100                      1- 2097     	MOVIA	0x00
                                    1- 2098     	BANKSEL	_workTime
     00FC rrrr                      3-   71 m1      .banksel ram_address
     00FD 04rr                      1- 2099     	SUBAR	(_workTime + 1),W
     00FE 0903                      1- 2100     	BTRSS	STATUS,2
     00FF 3rrr                      1- 2101     	LGOTO	_00445_DS_
     0100 21F9                      1- 2102     	MOVIA	0xf9
     0101 04rr                      1- 2103     	SUBAR	_workTime,W
     0102                           1- 2104     _00445_DS_:
     0102 0C03                      1- 2105     	BTRSC	STATUS,0
     0103 3rrr                      1- 2106     	LGOTO	_00285_DS_
                                    1- 2107     	.line	251, "main.c"; 	MOTOR = 0;
                                    1- 2108     	BANKSEL	_PORTA
     0104 rrrr                      3-   71 m1      .banksel ram_address
     0105 1Drr                      1- 2109     	BCR	_PORTA,2
     0106 3rrr                      1- 2110     	LGOTO	_00325_DS_
                                    1- 2111     ;;unsigned compare: left < lit (0x104=260), size=2
     0107                           1- 2112     _00285_DS_:
                                    1- 2113     	.line	252, "main.c"; 	else if(workTime < 260)
     0107 2101                      1- 2114     	MOVIA	0x01
                                    1- 2115     	BANKSEL	_workTime
     0108 rrrr                      3-   71 m1      .banksel ram_address
     0109 04rr                      1- 2116     	SUBAR	(_workTime + 1),W
     010A 0903                      1- 2117     	BTRSS	STATUS,2
     010B 3rrr                      1- 2118     	LGOTO	_00446_DS_
     010C 2104                      1- 2119     	MOVIA	0x04
     010D 04rr                      1- 2120     	SUBAR	_workTime,W
     010E                           1- 2121     _00446_DS_:
     010E 0C03                      1- 2122     	BTRSC	STATUS,0
     010F 3rrr                      1- 2123     	LGOTO	_00282_DS_
                                    1- 2124     	.line	253, "main.c"; 	MOTOR = 1;
                                    1- 2125     	BANKSEL	_PORTA
     0110 rrrr                      3-   71 m1      .banksel ram_address
     0111 19rr                      1- 2126     	BSR	_PORTA,2
     0112 3rrr                      1- 2127     	LGOTO	_00325_DS_
                                    1- 2128     ;;unsigned compare: left < lit (0x109=265), size=2
     0113                           1- 2129     _00282_DS_:
                                    1- 2130     	.line	254, "main.c"; 	else if(workTime < 265)
     0113 2101                      1- 2131     	MOVIA	0x01
                                    1- 2132     	BANKSEL	_workTime
     0114 rrrr                      3-   71 m1      .banksel ram_address
     0115 04rr                      1- 2133     	SUBAR	(_workTime + 1),W
     0116 0903                      1- 2134     	BTRSS	STATUS,2
     0117 3rrr                      1- 2135     	LGOTO	_00447_DS_
     0118 2109                      1- 2136     	MOVIA	0x09
     0119 04rr                      1- 2137     	SUBAR	_workTime,W
     011A                           1- 2138     _00447_DS_:
     011A 0C03                      1- 2139     	BTRSC	STATUS,0
     011B 3rrr                      1- 2140     	LGOTO	_00279_DS_
                                    1- 2141     	.line	255, "main.c"; 	MOTOR = 0;
                                    1- 2142     	BANKSEL	_PORTA
     011C rrrr                      3-   71 m1      .banksel ram_address
     011D 1Drr                      1- 2143     	BCR	_PORTA,2
     011E 3rrr                      1- 2144     	LGOTO	_00325_DS_
                                    1- 2145     ;;unsigned compare: left < lit (0x11A=282), size=2
     011F                           1- 2146     _00279_DS_:
                                    1- 2147     	.line	256, "main.c"; 	else if(workTime < 282)
     011F 2101                      1- 2148     	MOVIA	0x01
                                    1- 2149     	BANKSEL	_workTime
     0120 rrrr                      3-   71 m1      .banksel ram_address
     0121 04rr                      1- 2150     	SUBAR	(_workTime + 1),W
     0122 0903                      1- 2151     	BTRSS	STATUS,2
     0123 3rrr                      1- 2152     	LGOTO	_00448_DS_
     0124 211A                      1- 2153     	MOVIA	0x1a
     0125 04rr                      1- 2154     	SUBAR	_workTime,W
     0126                           1- 2155     _00448_DS_:
     0126 0C03                      1- 2156     	BTRSC	STATUS,0
     0127 3rrr                      1- 2157     	LGOTO	_00276_DS_
                                    1- 2158     	.line	257, "main.c"; 	MOTOR = 1;
                                    1- 2159     	BANKSEL	_PORTA
     0128 rrrr                      3-   71 m1      .banksel ram_address
     0129 19rr                      1- 2160     	BSR	_PORTA,2
     012A 3rrr                      1- 2161     	LGOTO	_00325_DS_
                                    1- 2162     ;;unsigned compare: left < lit (0x11D=285), size=2
     012B                           1- 2163     _00276_DS_:
                                    1- 2164     	.line	258, "main.c"; 	else if(workTime < 285)
     012B 2101                      1- 2165     	MOVIA	0x01
                                    1- 2166     	BANKSEL	_workTime
     012C rrrr                      3-   71 m1      .banksel ram_address
     012D 04rr                      1- 2167     	SUBAR	(_workTime + 1),W
     012E 0903                      1- 2168     	BTRSS	STATUS,2
     012F 3rrr                      1- 2169     	LGOTO	_00449_DS_
     0130 211D                      1- 2170     	MOVIA	0x1d
     0131 04rr                      1- 2171     	SUBAR	_workTime,W
     0132                           1- 2172     _00449_DS_:
     0132 0C03                      1- 2173     	BTRSC	STATUS,0
     0133 3rrr                      1- 2174     	LGOTO	_00273_DS_
                                    1- 2175     	.line	259, "main.c"; 	MOTOR = 0;
                                    1- 2176     	BANKSEL	_PORTA
     0134 rrrr                      3-   71 m1      .banksel ram_address
     0135 1Drr                      1- 2177     	BCR	_PORTA,2
     0136 3rrr                      1- 2178     	LGOTO	_00325_DS_
                                    1- 2179     ;;unsigned compare: left < lit (0x12C=300), size=2
     0137                           1- 2180     _00273_DS_:
                                    1- 2181     	.line	260, "main.c"; 	else if(workTime < 300)
     0137 2101                      1- 2182     	MOVIA	0x01
                                    1- 2183     	BANKSEL	_workTime
     0138 rrrr                      3-   71 m1      .banksel ram_address
     0139 04rr                      1- 2184     	SUBAR	(_workTime + 1),W
     013A 0903                      1- 2185     	BTRSS	STATUS,2
     013B 3rrr                      1- 2186     	LGOTO	_00450_DS_
     013C 212C                      1- 2187     	MOVIA	0x2c
     013D 04rr                      1- 2188     	SUBAR	_workTime,W
     013E                           1- 2189     _00450_DS_:
     013E 0C03                      1- 2190     	BTRSC	STATUS,0
     013F 3rrr                      1- 2191     	LGOTO	_00270_DS_
                                    1- 2192     	.line	261, "main.c"; 	MOTOR = 1;
                                    1- 2193     	BANKSEL	_PORTA
     0140 rrrr                      3-   71 m1      .banksel ram_address
     0141 19rr                      1- 2194     	BSR	_PORTA,2
     0142 3rrr                      1- 2195     	LGOTO	_00325_DS_
                                    1- 2196     ;;unsigned compare: left < lit (0x14D=333), size=2
     0143                           1- 2197     _00270_DS_:
                                    1- 2198     	.line	262, "main.c"; 	else if(workTime < 333)
     0143 2101                      1- 2199     	MOVIA	0x01
                                    1- 2200     	BANKSEL	_workTime
     0144 rrrr                      3-   71 m1      .banksel ram_address
     0145 04rr                      1- 2201     	SUBAR	(_workTime + 1),W
     0146 0903                      1- 2202     	BTRSS	STATUS,2
     0147 3rrr                      1- 2203     	LGOTO	_00451_DS_
     0148 214D                      1- 2204     	MOVIA	0x4d
     0149 04rr                      1- 2205     	SUBAR	_workTime,W
     014A                           1- 2206     _00451_DS_:
     014A 0C03                      1- 2207     	BTRSC	STATUS,0
     014B 3rrr                      1- 2208     	LGOTO	_00267_DS_
                                    1- 2209     	.line	263, "main.c"; 	MOTOR = 0;
                                    1- 2210     	BANKSEL	_PORTA
     014C rrrr                      3-   71 m1      .banksel ram_address
     014D 1Drr                      1- 2211     	BCR	_PORTA,2
     014E 3rrr                      1- 2212     	LGOTO	_00325_DS_
                                    1- 2213     ;;unsigned compare: left < lit (0x158=344), size=2
     014F                           1- 2214     _00267_DS_:
                                    1- 2215     	.line	264, "main.c"; 	else if(workTime < 344)
     014F 2101                      1- 2216     	MOVIA	0x01
                                    1- 2217     	BANKSEL	_workTime
     0150 rrrr                      3-   71 m1      .banksel ram_address
     0151 04rr                      1- 2218     	SUBAR	(_workTime + 1),W
     0152 0903                      1- 2219     	BTRSS	STATUS,2
     0153 3rrr                      1- 2220     	LGOTO	_00452_DS_
     0154 2158                      1- 2221     	MOVIA	0x58
     0155 04rr                      1- 2222     	SUBAR	_workTime,W
     0156                           1- 2223     _00452_DS_:
     0156 0C03                      1- 2224     	BTRSC	STATUS,0
     0157 3rrr                      1- 2225     	LGOTO	_00264_DS_
                                    1- 2226     	.line	265, "main.c"; 	MOTOR = 1;
                                    1- 2227     	BANKSEL	_PORTA
     0158 rrrr                      3-   71 m1      .banksel ram_address
     0159 19rr                      1- 2228     	BSR	_PORTA,2
     015A 3rrr                      1- 2229     	LGOTO	_00325_DS_
                                    1- 2230     ;;unsigned compare: left < lit (0x15E=350), size=2
     015B                           1- 2231     _00264_DS_:
                                    1- 2232     	.line	266, "main.c"; 	else if(workTime < 350)
     015B 2101                      1- 2233     	MOVIA	0x01
                                    1- 2234     	BANKSEL	_workTime
     015C rrrr                      3-   71 m1      .banksel ram_address
     015D 04rr                      1- 2235     	SUBAR	(_workTime + 1),W
     015E 0903                      1- 2236     	BTRSS	STATUS,2
     015F 3rrr                      1- 2237     	LGOTO	_00453_DS_
     0160 215E                      1- 2238     	MOVIA	0x5e
     0161 04rr                      1- 2239     	SUBAR	_workTime,W
     0162                           1- 2240     _00453_DS_:
     0162 0C03                      1- 2241     	BTRSC	STATUS,0
     0163 3rrr                      1- 2242     	LGOTO	_00261_DS_
                                    1- 2243     	.line	267, "main.c"; 	MOTOR = 0;
                                    1- 2244     	BANKSEL	_PORTA
     0164 rrrr                      3-   71 m1      .banksel ram_address
     0165 1Drr                      1- 2245     	BCR	_PORTA,2
     0166 3rrr                      1- 2246     	LGOTO	_00325_DS_
                                    1- 2247     ;;unsigned compare: left < lit (0x16E=366), size=2
     0167                           1- 2248     _00261_DS_:
                                    1- 2249     	.line	268, "main.c"; 	else if(workTime < 366)
     0167 2101                      1- 2250     	MOVIA	0x01
                                    1- 2251     	BANKSEL	_workTime
     0168 rrrr                      3-   71 m1      .banksel ram_address
     0169 04rr                      1- 2252     	SUBAR	(_workTime + 1),W
     016A 0903                      1- 2253     	BTRSS	STATUS,2
     016B 3rrr                      1- 2254     	LGOTO	_00454_DS_
     016C 216E                      1- 2255     	MOVIA	0x6e
     016D 04rr                      1- 2256     	SUBAR	_workTime,W
     016E                           1- 2257     _00454_DS_:
     016E 0C03                      1- 2258     	BTRSC	STATUS,0
     016F 3rrr                      1- 2259     	LGOTO	_00258_DS_
                                    1- 2260     	.line	269, "main.c"; 	MOTOR = 1;
                                    1- 2261     	BANKSEL	_PORTA
     0170 rrrr                      3-   71 m1      .banksel ram_address
     0171 19rr                      1- 2262     	BSR	_PORTA,2
     0172 3rrr                      1- 2263     	LGOTO	_00325_DS_
                                    1- 2264     ;;unsigned compare: left < lit (0x172=370), size=2
     0173                           1- 2265     _00258_DS_:
                                    1- 2266     	.line	270, "main.c"; 	else if(workTime < 370)
     0173 2101                      1- 2267     	MOVIA	0x01
                                    1- 2268     	BANKSEL	_workTime
     0174 rrrr                      3-   71 m1      .banksel ram_address
     0175 04rr                      1- 2269     	SUBAR	(_workTime + 1),W
     0176 0903                      1- 2270     	BTRSS	STATUS,2
     0177 3rrr                      1- 2271     	LGOTO	_00455_DS_
     0178 2172                      1- 2272     	MOVIA	0x72
     0179 04rr                      1- 2273     	SUBAR	_workTime,W
     017A                           1- 2274     _00455_DS_:
     017A 0C03                      1- 2275     	BTRSC	STATUS,0
     017B 3rrr                      1- 2276     	LGOTO	_00255_DS_
                                    1- 2277     	.line	271, "main.c"; 	MOTOR = 0;
                                    1- 2278     	BANKSEL	_PORTA
     017C rrrr                      3-   71 m1      .banksel ram_address
     017D 1Drr                      1- 2279     	BCR	_PORTA,2
     017E 3rrr                      1- 2280     	LGOTO	_00325_DS_
                                    1- 2281     ;;unsigned compare: left < lit (0x180=384), size=2
     017F                           1- 2282     _00255_DS_:
                                    1- 2283     	.line	272, "main.c"; 	else if(workTime < 384)
     017F 2101                      1- 2284     	MOVIA	0x01
                                    1- 2285     	BANKSEL	_workTime
     0180 rrrr                      3-   71 m1      .banksel ram_address
     0181 04rr                      1- 2286     	SUBAR	(_workTime + 1),W
     0182 0903                      1- 2287     	BTRSS	STATUS,2
     0183 3rrr                      1- 2288     	LGOTO	_00456_DS_
     0184 2180                      1- 2289     	MOVIA	0x80
     0185 04rr                      1- 2290     	SUBAR	_workTime,W
     0186                           1- 2291     _00456_DS_:
     0186 0C03                      1- 2292     	BTRSC	STATUS,0
     0187 3rrr                      1- 2293     	LGOTO	_00252_DS_
                                    1- 2294     	.line	273, "main.c"; 	MOTOR = 1;
                                    1- 2295     	BANKSEL	_PORTA
     0188 rrrr                      3-   71 m1      .banksel ram_address
     0189 19rr                      1- 2296     	BSR	_PORTA,2
     018A 3rrr                      1- 2297     	LGOTO	_00325_DS_
     018B                           1- 2298     _00252_DS_:
                                    1- 2299     	.line	276, "main.c"; 	MOTOR = 0;
                                    1- 2300     	BANKSEL	_PORTA
     018B rrrr                      3-   71 m1      .banksel ram_address
     018C 1Drr                      1- 2301     	BCR	_PORTA,2
                                    1- 2302     	.line	279, "main.c"; 	workTime = 0;
                                    1- 2303     	BANKSEL	_workTime
     018D rrrr                      3-   71 m1      .banksel ram_address
     018E 02rr                      1- 2304     	CLRR	_workTime
     018F 02rr                      1- 2305     	CLRR	(_workTime + 1)
     0190                           1- 2306     _00325_DS_:
                                    1- 2307     	.line	282, "main.c"; 	}
                                    1- 2308     	RETURN	
     0190 0010                      3-   26 m1      ret
                                    1- 2309     ; exit point of _workCtr
                                    1- 2312     ;	code size estimation:
                                    1- 2313     ;	  939+  257 =  1196 instructions ( 2906 byte)
                                    1- 2315     	end
                                    1- 2315     	end

SYMBOL TABLE            TYPE     VALUE
___fs2schar             Label    00000000
___fs2sint              Label    00000000
___fs2slong             Label    00000000
___fs2uchar             Label    00000000
___fs2uint              Label    00000000
___fs2ulong             Label    00000000
___fsadd                Label    00000000
___fsdiv                Label    00000000
___fseq                 Label    00000000
___fsgt                 Label    00000000
___fslt                 Label    00000000
___fsmul                Label    00000000
___fsneq                Label    00000000
___fssub                Label    00000000
___schar2fs             Label    00000000
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
___sint2fs              Label    00000000
___slong2fs             Label    00000000
___uchar2fs             Label    00000000
___uint2fs              Label    00000000
___ulong2fs             Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__gptrget1              Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002F
_00002_DS_              Label    00000040
_00003_DS_              Label    00000010
_00004_DS_              Label    00000014
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00116_DS_              Label    00000038
_00119_DS_              Label    00000032
_00120_DS_              Label    0000003C
_00128_DS_              Label    0000006B
_00131_DS_              Label    0000007E
_00135_DS_              Label    000000A4
_00136_DS_              Label    000000A6
_00138_DS_              Label    000000B0
_00142_DS_              Label    000000B6
_00147_DS_              Label    000000D8
_00154_DS_              Label    0000002B
_00223_DS_              Label    000000D4
_00229_DS_              Label    0000005C
_00232_DS_              Label    00000050
_00235_DS_              Label    00000044
_00238_DS_              Label    00000038
_00241_DS_              Label    0000002C
_00244_DS_              Label    00000020
_00247_DS_              Label    00000014
_00250_DS_              Label    00000077
_00252_DS_              Label    0000018B
_00255_DS_              Label    0000017F
_00258_DS_              Label    00000173
_00261_DS_              Label    00000167
_00264_DS_              Label    0000015B
_00267_DS_              Label    0000014F
_00270_DS_              Label    00000143
_00273_DS_              Label    00000137
_00276_DS_              Label    0000012B
_00279_DS_              Label    0000011F
_00282_DS_              Label    00000113
_00285_DS_              Label    00000107
_00288_DS_              Label    000000FB
_00291_DS_              Label    000000EF
_00294_DS_              Label    000000E3
_00297_DS_              Label    000000D7
_00300_DS_              Label    000000CB
_00303_DS_              Label    000000BF
_00306_DS_              Label    000000B3
_00309_DS_              Label    000000A7
_00312_DS_              Label    0000009B
_00315_DS_              Label    0000008F
_00318_DS_              Label    00000083
_00323_DS_              Label    00000064
_00325_DS_              Label    00000190
_00426_DS_              Label    0000000F
_00427_DS_              Label    0000001B
_00428_DS_              Label    00000027
_00429_DS_              Label    00000033
_00430_DS_              Label    0000003F
_00431_DS_              Label    0000004B
_00432_DS_              Label    00000057
_00433_DS_              Label    00000073
_00434_DS_              Label    0000007E
_00435_DS_              Label    0000008A
_00436_DS_              Label    00000096
_00437_DS_              Label    000000A2
_00438_DS_              Label    000000AE
_00439_DS_              Label    000000BA
_00440_DS_              Label    000000C6
_00441_DS_              Label    000000D2
_00442_DS_              Label    000000DE
_00443_DS_              Label    000000EA
_00444_DS_              Label    000000F6
_00445_DS_              Label    00000102
_00446_DS_              Label    0000010E
_00447_DS_              Label    0000011A
_00448_DS_              Label    00000126
_00449_DS_              Label    00000132
_00450_DS_              Label    0000013E
_00451_DS_              Label    0000014A
_00452_DS_              Label    00000156
_00453_DS_              Label    00000162
_00454_DS_              Label    0000016E
_00455_DS_              Label    0000017A
_00456_DS_              Label    00000186
_00464_DS_              Label    00000013
_00465_DS_              Label    0000001D
_00475_DS_              Label    00000027
_00478_DS_              Label    0000002B
_00481_DS_              Label    00000031
_00483_DS_              Label    00000035
_00488_DS_              Label    0000007E
_00489_DS_              Label    00000080
_00492_DS_              Label    00000090
_00500_DS_              Label    000000A7
_00502_DS_              Label    000000B6
_00507_DS_              Label    000000D7
_00508_DS_              Label    000000EE
_00509_DS_              Label    000000F0
_00512_DS_              Label    000000CA
_00514_DS_              Label    000000B8
_00517_DS_              Label    000000F1
_00558_DS_              Label    0000005F
_00559_DS_              Label    00000068
_00566_DS_              Label    000000BF
_00567_DS_              Label    000000C8
_00568_DS_              Label    000000D5
_00574_DS_              Label    0000000D
_00575_DS_              Label    00000010
_00577_DS_              Label    00000004
_00585_DS_              Label    00000016
_00587_DS_              Label    0000000E
_00588_DS_              Label    00000018
_00589_DS_              Label    00000019
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_baiwei                 Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkTime              Label    00000000
_chrgCtr                Label    00000000
_chrgFullTime           Label    00000000
_chrgStep               Label    00000000
_CMPCR                  Label    00000000
_countTime              Label    00000000
_deadTime               Label    00000000
_delay_ms               Label    00000000
_delay_us               Label    00000000
_Delay1000Us            Label    00000000
_Delay10Us              Label    00000000
_FSR                    Label    00000000
_getData                Label    00000000
_gewei                  Label    00000000
_gotoSleep              Label    00000000
_hz                     Label    00000000
_hzH                    Label    00000000
_hzL                    Label    00000000
_i2c_write_byte_data    Label    00000000
_IIC_Ack                Label    00000000
_IIC_NAck               Label    00000000
_IIC_Read_Byte          Label    00000000
_IIC_Send_Byte          Label    00000000
_IIC_Start              Label    00000000
_IIC_Stop               Label    00000000
_IIC_Wait_Ack           Label    00000000
_ind_light_disp         Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isCalibrated           Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_main                   Label    00000000
_msa_calibrate          Label    00000000
_msa_calibrateZ         Label    00000000
_msa_flip_init          Label    00000000
_msa_flip_process       Label    00000000
_msa_get_step           Label    00000000
_msa_init               Label    00000000
_msa_read_adc           Label    00000000
_msa_read_data          Label    00000000
_msa_ReadBytes          Label    00000000
_msa_register_read_continuously Label    00000000
_msa_sqrt               Label    00000000
_msa_WriteBytes         Label    00000000
_offset_z               Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_refreshChrg            Label    00000000
_refreshLed             Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_rightTime              Label    00000000
_rockFlag               Label    00000000
_rockStep               Label    00000000
_rockTime               Label    00000000
_SDA_IN                 Label    00000000
_SDA_OUT                Label    00000000
_shiwei                 Label    00000000
_sleepTime              Label    00000000
_STATUS                 Label    00000000
_SW_i2c_udelay          Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_table                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_waitTime               Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
_workTime               Label    00000000
_wrongTime              Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
