
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	___uchar2fs
                                    1-   15     	extern	___schar2fs
                                    1-   16     	extern	___uint2fs
                                    1-   17     	extern	___sint2fs
                                    1-   18     	extern	___ulong2fs
                                    1-   19     	extern	___slong2fs
                                    1-   20     	extern	___fs2uchar
                                    1-   21     	extern	___fs2schar
                                    1-   22     	extern	___fs2uint
                                    1-   23     	extern	___fs2sint
                                    1-   24     	extern	___fs2ulong
                                    1-   25     	extern	___fs2slong
                                    1-   26     	extern	___fsadd
                                    1-   27     	extern	___fssub
                                    1-   28     	extern	___fsmul
                                    1-   29     	extern	___fsdiv
                                    1-   30     	extern	___fslt
                                    1-   31     	extern	___fseq
                                    1-   32     	extern	___fsneq
                                    1-   33     	extern	___fsgt
                                    1-   34     	extern	_msa_init
                                    1-   35     	extern	_msa_read_data
                                    1-   36     	extern	_msa_get_step
                                    1-   37     	extern	_msa_register_read_continuously
                                    1-   38     	extern	_i2c_write_byte_data
                                    1-   39     	extern	_msa_WriteBytes
                                    1-   40     	extern	_msa_calibrate
                                    1-   41     	extern	_msa_calibrateZ
                                    1-   42     	extern	_msa_ReadBytes
                                    1-   43     	extern	_SW_i2c_udelay
                                    1-   44     	extern	_msa_read_adc
                                    1-   45     	extern	_msa_flip_init
                                    1-   46     	extern	_msa_flip_process
                                    1-   47     	extern	_msa_sqrt
                                    1-   48     	extern	_Delay1000Us
                                    1-   49     	extern	_Delay10Us
                                    1-   50     	extern	_IIC_Start
                                    1-   51     	extern	_IIC_Send_Byte
                                    1-   52     	extern	_IIC_Read_Byte
                                    1-   53     	extern	_SDA_OUT
                                    1-   54     	extern	_SDA_IN
                                    1-   55     	extern	_IIC_Ack
                                    1-   56     	extern	_IIC_NAck
                                    1-   57     	extern	_delay_us
                                    1-   58     	extern	_delay_ms
                                    1-   59     	extern	_IIC_Stop
                                    1-   60     	extern	_IIC_Wait_Ack
                                    1-   61     	extern	_PORTAbits
                                    1-   62     	extern	_PORTBbits
                                    1-   63     	extern	_PCONbits
                                    1-   64     	extern	_BWUCONbits
                                    1-   65     	extern	_ABPLCONbits
                                    1-   66     	extern	_BPHCONbits
                                    1-   67     	extern	_INTEbits
                                    1-   68     	extern	_INTFbits
                                    1-   69     	extern	_ADMDbits
                                    1-   70     	extern	_ADRbits
                                    1-   71     	extern	_ADVREFHbits
                                    1-   72     	extern	_ADCRbits
                                    1-   73     	extern	_AWUCONbits
                                    1-   74     	extern	_PACONbits
                                    1-   75     	extern	_INTEDGbits
                                    1-   76     	extern	_ANAENbits
                                    1-   77     	extern	_RFCbits
                                    1-   78     	extern	_INTE2bits
                                    1-   79     	extern	_offset_z
                                    1-   80     	extern	_isCalibrated
                                    1-   81     	extern	_INDF
                                    1-   82     	extern	_TMR0
                                    1-   83     	extern	_PCL
                                    1-   84     	extern	_STATUS
                                    1-   85     	extern	_FSR
                                    1-   86     	extern	_PORTA
                                    1-   87     	extern	_PORTB
                                    1-   88     	extern	_PCON
                                    1-   89     	extern	_BWUCON
                                    1-   90     	extern	_PCHBUF
                                    1-   91     	extern	_ABPLCON
                                    1-   92     	extern	_BPHCON
                                    1-   93     	extern	_INTE
                                    1-   94     	extern	_INTF
                                    1-   95     	extern	_ADMD
                                    1-   96     	extern	_ADR
                                    1-   97     	extern	_ADD
                                    1-   98     	extern	_ADVREFH
                                    1-   99     	extern	_ADCR
                                    1-  100     	extern	_AWUCON
                                    1-  101     	extern	_PACON
                                    1-  102     	extern	_INTEDG
                                    1-  103     	extern	_TMRH
                                    1-  104     	extern	_ANAEN
                                    1-  105     	extern	_RFC
                                    1-  106     	extern	_TM3RH
                                    1-  107     	extern	_INTE2
                                    1-  108     	extern	_TMR1
                                    1-  109     	extern	_T1CR1
                                    1-  110     	extern	_T1CR2
                                    1-  111     	extern	_PWM1DUTY
                                    1-  112     	extern	_PS1CV
                                    1-  113     	extern	_BZ1CR
                                    1-  114     	extern	_IRCR
                                    1-  115     	extern	_TBHP
                                    1-  116     	extern	_TBHD
                                    1-  117     	extern	_TMR2
                                    1-  118     	extern	_T2CR1
                                    1-  119     	extern	_T2CR2
                                    1-  120     	extern	_PWM2DUTY
                                    1-  121     	extern	_PS2CV
                                    1-  122     	extern	_BZ2CR
                                    1-  123     	extern	_OSCCR
                                    1-  124     	extern	_TMR3
                                    1-  125     	extern	_T3CR1
                                    1-  126     	extern	_T3CR2
                                    1-  127     	extern	_PWM3DUTY
                                    1-  128     	extern	_PS3CV
                                    1-  129     	extern	_BZ3CR
                                    1-  130     	extern	_IOSTA
                                    1-  131     	extern	_IOSTB
                                    1-  132     	extern	_APHCON
                                    1-  133     	extern	_PS0CV
                                    1-  134     	extern	_BODCON
                                    1-  135     	extern	_CMPCR
                                    1-  136     	extern	_PCON1
                                    1-  137     	extern	_T0MD
                                    1-  138     	extern	___sdcc_saved_fsr
                                    1-  139     	extern	___sdcc_saved_stk00
                                    1-  140     	extern	___sdcc_saved_stk01
                                    1-  141     	extern	__gptrget1
                                    1-  142     	extern	__nyc_ny8_startup
                                    1-  143     ;--------------------------------------------------------
                                    1-  144     ; global declarations
                                    1-  145     ;--------------------------------------------------------
                                    1-  146     	extern	_gotoSleep
                                    1-  147     	extern	_keyRead
                                    1-  148     	extern	_ind_light_disp
                                    1-  149     	extern	_getData
                                    1-  150     	extern	_chrgCtr
                                    1-  151     	extern	_refreshLed
                                    1-  152     	extern	_workCtr
                                    1-  153     	extern	_isr
                                    1-  154     	extern	_main
                                    1-  155     	extern	_hzH
                                    1-  156     	extern	_hzL
                                    1-  157     	extern	_hz
                                    1-  158     	extern	_chrgStep
                                    1-  159     	extern	_intCount
                                    1-  160     	extern	_IntFlag
                                    1-  161     	extern	_keyCount
                                    1-  162     	extern	_workStep
                                    1-  163     	extern	_baiwei
                                    1-  164     	extern	_shiwei
                                    1-  165     	extern	_gewei
                                    1-  166     	extern	_rockStep
                                    1-  167     	extern	_workTime
                                    1-  168     	extern	_sleepTime
                                    1-  169     	extern	_rockTime
                                    1-  170     	extern	_checkTime
                                    1-  171     	extern	_rockFlag
                                    1-  172     	extern	_deadTime
                                    1-  174     	extern PSAVE
                                    1-  175     	extern SSAVE
                                    1-  176     	extern WSAVE
                                    1-  177     	extern STK12
                                    1-  178     	extern STK11
                                    1-  179     	extern STK10
                                    1-  180     	extern STK09
                                    1-  181     	extern STK08
                                    1-  182     	extern STK07
                                    1-  183     	extern STK06
                                    1-  184     	extern STK05
                                    1-  185     	extern STK04
                                    1-  186     	extern STK03
                                    1-  187     	extern STK02
                                    1-  188     	extern STK01
                                    1-  189     	extern STK00
                                    1-  191     .segment "uninit", 0x20000040
 20000040                           1-  192     PSAVE:
                                    1-  193     	.res 1
 20000041                           1-  194     SSAVE:
                                    1-  195     	.res 1
 20000042                           1-  196     WSAVE:
                                    1-  197     	.res 1
 20000043                           1-  198     STK12:
                                    1-  199     	.res 1
 20000044                           1-  200     STK11:
                                    1-  201     	.res 1
 20000045                           1-  202     STK10:
                                    1-  203     	.res 1
 20000046                           1-  204     STK09:
                                    1-  205     	.res 1
 20000047                           1-  206     STK08:
                                    1-  207     	.res 1
 20000048                           1-  208     STK07:
                                    1-  209     	.res 1
 20000049                           1-  210     STK06:
                                    1-  211     	.res 1
 2000004A                           1-  212     STK05:
                                    1-  213     	.res 1
 2000004B                           1-  214     STK04:
                                    1-  215     	.res 1
 2000004C                           1-  216     STK03:
                                    1-  217     	.res 1
 2000004D                           1-  218     STK02:
                                    1-  219     	.res 1
 2000004E                           1-  220     STK01:
                                    1-  221     	.res 1
 2000004F                           1-  222     STK00:
                                    1-  223     	.res 1
                                    1-  225     ;--------------------------------------------------------
                                    1-  226     ; global definitions
                                    1-  227     ;--------------------------------------------------------
                                    1-  228     .segment "uninit"
     0000                           1-  229     _hzH:
                                    1-  230     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     _hzL:
                                    1-  235     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     _baiwei:
                                    1-  240     	.res	1
                                    1-  243     .segment "uninit"
     0000                           1-  244     _shiwei:
                                    1-  245     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     _gewei:
                                    1-  250     	.res	1
                                    1-  253     ;--------------------------------------------------------
                                    1-  254     ; absolute symbol definitions
                                    1-  255     ;--------------------------------------------------------
                                    1-  256     ;--------------------------------------------------------
                                    1-  257     ; compiler-defined variables
                                    1-  258     ;--------------------------------------------------------
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x102F:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x102C:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x102D:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x102E:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x102B:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1028:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1027:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1029:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x102A:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1025:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x1026:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x1024:
                                    1-  294     	.res	1
                                    1-  295     ;--------------------------------------------------------
                                    1-  296     ; initialized data
                                    1-  297     ;--------------------------------------------------------
                                    1-  299     .segment "idata"
     0000                           1-  300     _hz:
     0000 0000 0000                 1-  301     	dw	0x00, 0x00
                                    1-  305     .segment "idata"
     0000                           1-  306     _chrgStep:
     0000 0000                      1-  307     	dw	0x00
                                    1-  311     .segment "idata"
     0000                           1-  312     _intCount:
     0000 0000                      1-  313     	dw	0x00
                                    1-  317     .segment "idata"
     0000                           1-  318     _IntFlag:
     0000 0000                      1-  319     	dw	0x00
                                    1-  323     .segment "idata"
     0000                           1-  324     _keyCount:
     0000 0000                      1-  325     	dw	0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _workStep:
     0000 0000                      1-  331     	dw	0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _rockStep:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _workTime:
     0000 0000 0000                 1-  343     	dw	0x00, 0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _sleepTime:
     0000 0000 0000                 1-  349     	dw	0x00, 0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _rockTime:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _checkTime:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _rockFlag:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _deadTime:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _table:
     0000 003F                      1-  379     	dw	0x3f
     0001 0006                      1-  380     	dw	0x06
     0002 005B                      1-  381     	dw	0x5b
     0003 004F                      1-  382     	dw	0x4f
     0004 0066                      1-  383     	dw	0x66
     0005 006D                      1-  384     	dw	0x6d
     0006 007D                      1-  385     	dw	0x7d
     0007 0007                      1-  386     	dw	0x07
     0008 007F                      1-  387     	dw	0x7f
     0009 006F                      1-  388     	dw	0x6f
     000A 0071                      1-  389     	dw	0x71
     000B 0038                      1-  390     	dw	0x38
                                    1-  393     ;--------------------------------------------------------
                                    1-  394     ; overlayable items in internal ram 
                                    1-  395     ;--------------------------------------------------------
                                    1-  396     ;	udata_ovr
                                    1-  397     ;--------------------------------------------------------
                                    1-  398     ; reset vector 
                                    1-  399     ;--------------------------------------------------------
                                    1-  400     ORG	0x0000
     0000 3rrr                      1-  401     	LGOTO	__nyc_ny8_startup
                                    1-  402     ;--------------------------------------------------------
                                    1-  403     ; interrupt and initialization code
                                    1-  404     ;--------------------------------------------------------
                                    1-  405     ORG 0x0008
     0008 3rrr                      1-  406     	lgoto	__sdcc_interrupt
                                    1-  408     .segment "code"
     0000                           1-  409     __sdcc_interrupt:
                                    1-  410     ;***
                                    1-  411     ;  pBlock Stats: dbName = I
                                    1-  412     ;***
                                    1-  413     ;2 compiler assigned registers:
                                    1-  414     ;   STK00
                                    1-  415     ;   STK01
                                    1-  416     ;; Starting pCode block
     0000                           1-  417     _isr:
                                    1-  418     ; 0 exit points
                                    1-  419     	.line	38, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  420     	MOVAR	WSAVE
     0001 1503                      1-  421     	SWAPR	STATUS,W
     0002 0283                      1-  422     	CLRR	STATUS
     0003 00rr                      1-  423     	MOVAR	SSAVE
     0004 010A                      1-  424     	MOVR	PCHBUF,W
     0005 028A                      1-  425     	CLRR	PCHBUF
     0006 00rr                      1-  426     	MOVAR	PSAVE
     0007 0104                      1-  427     	MOVR	FSR,W
                                    1-  428     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  429     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  430     	MOVR	STK00,W
                                    1-  431     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  432     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  433     	MOVR	STK01,W
                                    1-  434     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  435     	MOVAR	___sdcc_saved_stk01
                                    1-  436     	.line	40, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  437     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  438     	LGOTO	_00108_DS_
                                    1-  439     	.line	42, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  440     	MOVIA	0x37
     0013 03rr                      1-  441     	ADDAR	_TMR0,F
                                    1-  442     	.line	43, "main.c"; 	intCount++;
                                    1-  443     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  444     	INCR	_intCount,F
                                    1-  445     	.line	44, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  446     	MOVR	_intCount,W
     0017 2464                      1-  447     	XORIA	0x64
     0018 0903                      1-  448     	BTRSS	STATUS,2
     0019 3rrr                      1-  449     	LGOTO	_00108_DS_
                                    1-  450     	.line	46, "main.c"; 	intCount = 0;
     001A 02rr                      1-  451     	CLRR	_intCount
                                    1-  452     	.line	47, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  453     	MOVIA	0x01
                                    1-  454     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  455     	MOVAR	_IntFlag
     001E                           1-  456     _00108_DS_:
                                    1-  457     	.line	50, "main.c"; 	if(INTFbits.PABIF)
     001E 08rr                      1-  458     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  459     	LGOTO	_00110_DS_
                                    1-  460     	.line	52, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  461     	MOVIA	0xfd
     0021 00rr                      1-  462     	MOVAR	_INTF
     0022                           1-  463     _00110_DS_:
                                    1-  464     	.line	55, "main.c"; 	INTF = 0;
     0022 02rr                      1-  465     	CLRR	_INTF
                                    1-  466     	.line	57, "main.c"; 	}
                                    1-  467     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  468     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  469     	MOVAR	STK01
                                    1-  470     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  471     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  472     	MOVAR	STK00
                                    1-  473     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  474     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  475     	MOVAR	FSR
     002C 01rr                      1-  476     	MOVR	PSAVE,W
     002D 008A                      1-  477     	MOVAR	PCHBUF
     002E 0283                      1-  478     	CLRR	STATUS
     002F 15rr                      1-  479     	SWAPR	SSAVE,W
     0030 0083                      1-  480     	MOVAR	STATUS
     0031 15rr                      1-  481     	SWAPR	WSAVE,F
     0032 15rr                      1-  482     	SWAPR	WSAVE,W
     0033                           1-  483     END_OF_INTERRUPT:
     0033 0011                      1-  484     	RETIE	
                                    1-  486     ;--------------------------------------------------------
                                    1-  487     ; code
                                    1-  488     ;--------------------------------------------------------
                                    1-  489     ;***
                                    1-  490     ;  pBlock Stats: dbName = M
                                    1-  491     ;***
                                    1-  492     ;has an exit
                                    1-  493     ;functions called:
                                    1-  494     ;   _msa_init
                                    1-  495     ;   _refreshLed
                                    1-  496     ;   _keyRead
                                    1-  497     ;   _chrgCtr
                                    1-  498     ;   _workCtr
                                    1-  499     ;   _getData
                                    1-  500     ;   _gotoSleep
                                    1-  501     ;   _msa_init
                                    1-  502     ;   _refreshLed
                                    1-  503     ;   _keyRead
                                    1-  504     ;   _chrgCtr
                                    1-  505     ;   _workCtr
                                    1-  506     ;   _getData
                                    1-  507     ;   _gotoSleep
                                    1-  508     ;1 compiler assigned register :
                                    1-  509     ;   r0x102F
                                    1-  510     ;; Starting pCode block
                                    1-  511     .segment "code"; module=main, function=_main
     0000                           1-  513     _main:
                                    1-  514     ; 2 exit points
                                    1-  515     	.line	64, "main.c"; 	APHCON = 0xBF;
     0000 21BF                      1-  516     	MOVIA	0xbf
     0001 000r                      1-  517     	IOST	_APHCON
                                    1-  518     	.line	65, "main.c"; 	IOSTA = 0x00;     // Set PB0 & PB1 to input mode,others set to output mode
     0002 0200                      1-  519     	CLRA	
     0003 000r                      1-  520     	IOST	_IOSTA
                                    1-  521     	.line	66, "main.c"; 	IOSTB = 0x00;
     0004 000r                      1-  522     	IOST	_IOSTB
                                    1-  523     	.line	67, "main.c"; 	PORTA = 0x00; 
                                    1-  524     	BANKSEL	_PORTA
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  525     	CLRR	_PORTA
                                    1-  526     	.line	68, "main.c"; 	PORTB = 0x00;                           // PB0��PB1 & PB2 are output High	
     0007 02rr                      1-  527     	CLRR	_PORTB
                                    1-  528     	.line	69, "main.c"; 	msa_init();
     0008 2rrr                      1-  529     	LCALL	_msa_init
                                    1-  530     	.line	70, "main.c"; 	IOSTA = C_PA0_Input | C_PA3_Input | C_PA4_Input;     // Set PB0 & PB1 to input mode,others set to output mode
     0009 2119                      1-  531     	MOVIA	0x19
     000A 000r                      1-  532     	IOST	_IOSTA
                                    1-  533     	.line	71, "main.c"; 	IOSTB = 0x00;
     000B 0200                      1-  534     	CLRA	
     000C 000r                      1-  535     	IOST	_IOSTB
                                    1-  536     	.line	72, "main.c"; 	APHCON = 0xAE;		//CHRG	PA4 ����
     000D 21AE                      1-  537     	MOVIA	0xae
     000E 000r                      1-  538     	IOST	_APHCON
                                    1-  539     	.line	73, "main.c"; 	BPHCON = 0xFF;		
     000F 21FF                      1-  540     	MOVIA	0xff
     0010 00rr                      1-  541     	MOVAR	_BPHCON
                                    1-  542     	.line	74, "main.c"; 	ABPLCON = 0xF7;		//  USB PA3	����
     0011 21F7                      1-  543     	MOVIA	0xf7
     0012 00rr                      1-  544     	MOVAR	_ABPLCON
                                    1-  545     	.line	75, "main.c"; 	PORTA = 0x00; 
                                    1-  546     	BANKSEL	_PORTA
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1-  547     	CLRR	_PORTA
                                    1-  548     	.line	76, "main.c"; 	PORTB = 0x00;                           // PB0��PB1 & PB2 are output High	
     0015 02rr                      1-  549     	CLRR	_PORTB
                                    1-  550     	.line	77, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     0016 21A8                      1-  551     	MOVIA	0xa8
     0017 00rr                      1-  552     	MOVAR	_PCON
                                    1-  553     	.line	79, "main.c"; 	PCON1 = C_TMR0_Dis;
     0018 0200                      1-  554     	CLRA	
     0019 000r                      1-  555     	IOST	_PCON1
                                    1-  556     	.line	81, "main.c"; 	TMR0 = 55;
     001A 2137                      1-  557     	MOVIA	0x37
     001B 00rr                      1-  558     	MOVAR	_TMR0
                                    1-  559     	.line	82, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     001C 0200                      1-  560     	CLRA	
     001D 0003                      1-  561     	T0MD	
                                    1-  562     	.line	83, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     001E 2103                      1-  563     	MOVIA	0x03
     001F 00rr                      1-  564     	MOVAR	_INTE
                                    1-  565     	.line	84, "main.c"; 	PCON1 = C_TMR0_En;
     0020 2101                      1-  566     	MOVIA	0x01
     0021 000r                      1-  567     	IOST	_PCON1
                                    1-  568     	.line	85, "main.c"; 	ENI();
     0022 0004                      1-  569     	ENI
                                    1-  570     	.line	86, "main.c"; 	baiwei = shiwei = gewei = 0;
                                    1-  571     	BANKSEL	_gewei
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 02rr                      1-  572     	CLRR	_gewei
                                    1-  573     	BANKSEL	_shiwei
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1-  574     	CLRR	_shiwei
                                    1-  575     	BANKSEL	_baiwei
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1-  576     	CLRR	_baiwei
                                    1-  577     	.line	87, "main.c"; 	rockStep = 0;
                                    1-  578     	BANKSEL	_rockStep
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 02rr                      1-  579     	CLRR	_rockStep
     002B                           1-  580     _00143_DS_:
                                    1-  581     	.line	90, "main.c"; 	CLRWDT();			//Clear WDT, this function is defined in ny8command.h
     002B 0002                      1-  582     	clrwdt
                                    1-  583     	.line	92, "main.c"; 	if(workStep)
                                    1-  584     	BANKSEL	_workStep
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1-  585     	MOVR	_workStep,W
     002E 0903                      1-  586     	BTRSS	STATUS,2
                                    1-  587     	.line	94, "main.c"; 	refreshLed();
     002F 2rrr                      1-  588     	LCALL	_refreshLed
                                    1-  589     	.line	96, "main.c"; 	if(!IntFlag)
                                    1-  590     	BANKSEL	_IntFlag
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1-  591     	MOVR	_IntFlag,W
     0032 0D03                      1-  592     	BTRSC	STATUS,2
     0033 3rrr                      1-  593     	LGOTO	_00143_DS_
                                    1-  594     	.line	98, "main.c"; 	IntFlag = 0;
     0034 02rr                      1-  595     	CLRR	_IntFlag
                                    1-  596     	.line	99, "main.c"; 	if(keyRead(0x01 & (~PORTA)))
                                    1-  597     	BANKSEL	_PORTA
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 07rr                      1-  598     	COMR	_PORTA,W
                                    1-  599     	BANKSEL	r0x102F
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1-  600     	MOVAR	r0x102F
     0039 2101                      1-  601     	MOVIA	0x01
     003A 10rr                      1-  602     	ANDAR	r0x102F,F
     003B 01rr                      1-  603     	MOVR	r0x102F,W
     003C 2rrr                      1-  604     	LCALL	_keyRead
                                    1-  605     	BANKSEL	r0x102F
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 00rr                      1-  606     	MOVAR	r0x102F
     003F 01rr                      1-  607     	MOVR	r0x102F,W
     0040 0D03                      1-  608     	BTRSC	STATUS,2
     0041 3rrr                      1-  609     	LGOTO	_00123_DS_
                                    1-  610     	.line	101, "main.c"; 	if(workStep)
                                    1-  611     	BANKSEL	_workStep
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1-  612     	MOVR	_workStep,W
     0044 0D03                      1-  613     	BTRSC	STATUS,2
     0045 3rrr                      1-  614     	LGOTO	_00120_DS_
                                    1-  615     	.line	103, "main.c"; 	workStep = 0;
     0046 02rr                      1-  616     	CLRR	_workStep
                                    1-  617     	.line	104, "main.c"; 	rockStep = 0;
                                    1-  618     	BANKSEL	_rockStep
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 02rr                      1-  619     	CLRR	_rockStep
                                    1-  620     	.line	105, "main.c"; 	rockTime = 0;
                                    1-  621     	BANKSEL	_rockTime
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 02rr                      1-  622     	CLRR	_rockTime
                                    1-  623     	.line	106, "main.c"; 	rockFlag = 0;
                                    1-  624     	BANKSEL	_rockFlag
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 02rr                      1-  625     	CLRR	_rockFlag
                                    1-  626     	.line	107, "main.c"; 	MOTOR = 0;
                                    1-  627     	BANKSEL	_PORTA
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 1Drr                      1-  628     	BCR	_PORTA,2
                                    1-  629     	.line	108, "main.c"; 	baiwei = shiwei = gewei = 0;
                                    1-  630     	BANKSEL	_gewei
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 02rr                      1-  631     	CLRR	_gewei
                                    1-  632     	BANKSEL	_shiwei
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 02rr                      1-  633     	CLRR	_shiwei
                                    1-  634     	BANKSEL	_baiwei
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 02rr                      1-  635     	CLRR	_baiwei
     0055 3rrr                      1-  636     	LGOTO	_00123_DS_
     0056                           1-  637     _00120_DS_:
                                    1-  638     	.line	112, "main.c"; 	workStep = 1;
     0056 2101                      1-  639     	MOVIA	0x01
                                    1-  640     	BANKSEL	_workStep
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1-  641     	MOVAR	_workStep
                                    1-  642     	.line	113, "main.c"; 	workTime = 0;
                                    1-  643     	BANKSEL	_workTime
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 02rr                      1-  644     	CLRR	_workTime
     005B 02rr                      1-  645     	CLRR	(_workTime + 1)
                                    1-  646     	.line	114, "main.c"; 	rockStep = 1;
     005C 2101                      1-  647     	MOVIA	0x01
                                    1-  648     	BANKSEL	_rockStep
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 00rr                      1-  649     	MOVAR	_rockStep
                                    1-  650     	.line	115, "main.c"; 	rockFlag = 0;
                                    1-  651     	BANKSEL	_rockFlag
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 02rr                      1-  652     	CLRR	_rockFlag
     0061                           1-  653     _00123_DS_:
                                    1-  654     	.line	119, "main.c"; 	chrgCtr();
     0061 2rrr                      1-  655     	LCALL	_chrgCtr
                                    1-  656     	.line	120, "main.c"; 	workCtr();
     0062 2rrr                      1-  657     	LCALL	_workCtr
                                    1-  658     	.line	121, "main.c"; 	if(workStep == 1 && rockStep != 1)
                                    1-  659     	BANKSEL	_workStep
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 01rr                      1-  660     	MOVR	_workStep,W
     0065 2401                      1-  661     	XORIA	0x01
     0066 0903                      1-  662     	BTRSS	STATUS,2
     0067 3rrr                      1-  663     	LGOTO	_00132_DS_
                                    1-  664     	BANKSEL	_rockStep
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 01rr                      1-  665     	MOVR	_rockStep,W
     006A 2401                      1-  666     	XORIA	0x01
     006B 0D03                      1-  667     	BTRSC	STATUS,2
     006C 3rrr                      1-  668     	LGOTO	_00132_DS_
                                    1-  669     	.line	123, "main.c"; 	getData();
     006D 2rrr                      1-  670     	LCALL	_getData
                                    1-  671     	.line	124, "main.c"; 	if(++checkTime >= 25)
                                    1-  672     	BANKSEL	_checkTime
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 05rr                      1-  673     	INCR	_checkTime,F
                                    1-  674     ;;unsigned compare: left < lit (0x19=25), size=1
     0070 2119                      1-  675     	MOVIA	0x19
     0071 04rr                      1-  676     	SUBAR	_checkTime,W
     0072 0803                      1-  677     	BTRSS	STATUS,0
     0073 3rrr                      1-  678     	LGOTO	_00132_DS_
                                    1-  679     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1-  680     	.line	126, "main.c"; 	if(rockTime >= 5)
     0074 2105                      1-  681     	MOVIA	0x05
                                    1-  682     	BANKSEL	_rockTime
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 04rr                      1-  683     	SUBAR	_rockTime,W
     0077 0803                      1-  684     	BTRSS	STATUS,0
     0078 3rrr                      1-  685     	LGOTO	_00127_DS_
                                    1-  686     	.line	128, "main.c"; 	rockFlag = 1;
     0079 2101                      1-  687     	MOVIA	0x01
                                    1-  688     	BANKSEL	_rockFlag
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 00rr                      1-  689     	MOVAR	_rockFlag
                                    1-  690     	.line	129, "main.c"; 	if(++deadTime >= 240)
                                    1-  691     	BANKSEL	_deadTime
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 05rr                      1-  692     	INCR	_deadTime,F
                                    1-  693     ;;unsigned compare: left < lit (0xF0=240), size=1
     007E 21F0                      1-  694     	MOVIA	0xf0
     007F 04rr                      1-  695     	SUBAR	_deadTime,W
     0080 0803                      1-  696     	BTRSS	STATUS,0
     0081 3rrr                      1-  697     	LGOTO	_00128_DS_
                                    1-  698     	.line	131, "main.c"; 	deadTime = 240;
     0082 21F0                      1-  699     	MOVIA	0xf0
     0083 00rr                      1-  700     	MOVAR	_deadTime
                                    1-  701     	.line	132, "main.c"; 	rockFlag = 0;
                                    1-  702     	BANKSEL	_rockFlag
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 02rr                      1-  703     	CLRR	_rockFlag
     0086 3rrr                      1-  704     	LGOTO	_00128_DS_
     0087                           1-  705     _00127_DS_:
                                    1-  706     	.line	137, "main.c"; 	rockFlag = 0;
                                    1-  707     	BANKSEL	_rockFlag
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 02rr                      1-  708     	CLRR	_rockFlag
                                    1-  709     	.line	138, "main.c"; 	deadTime = 0;
                                    1-  710     	BANKSEL	_deadTime
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 02rr                      1-  711     	CLRR	_deadTime
     008B                           1-  712     _00128_DS_:
                                    1-  713     	.line	140, "main.c"; 	checkTime = 0;
                                    1-  714     	BANKSEL	_checkTime
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 02rr                      1-  715     	CLRR	_checkTime
                                    1-  716     	.line	141, "main.c"; 	rockTime = 0;
                                    1-  717     	BANKSEL	_rockTime
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 02rr                      1-  718     	CLRR	_rockTime
     008F                           1-  719     _00132_DS_:
                                    1-  720     	.line	145, "main.c"; 	if(workStep == 0 && rockStep == 0 && keyCount== 0 && rockTime == 0)
                                    1-  721     	BANKSEL	_workStep
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 01rr                      1-  722     	MOVR	_workStep,W
     0091 0903                      1-  723     	BTRSS	STATUS,2
     0092 3rrr                      1-  724     	LGOTO	_00137_DS_
                                    1-  725     	BANKSEL	_rockStep
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 01rr                      1-  726     	MOVR	_rockStep,W
     0095 0903                      1-  727     	BTRSS	STATUS,2
     0096 3rrr                      1-  728     	LGOTO	_00137_DS_
                                    1-  729     	BANKSEL	_keyCount
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 01rr                      1-  730     	MOVR	_keyCount,W
     0099 0903                      1-  731     	BTRSS	STATUS,2
     009A 3rrr                      1-  732     	LGOTO	_00137_DS_
                                    1-  733     	BANKSEL	_rockTime
     009B rrrr                      3-   71 m1      .banksel ram_address
     009C 01rr                      1-  734     	MOVR	_rockTime,W
     009D 0903                      1-  735     	BTRSS	STATUS,2
     009E 3rrr                      1-  736     	LGOTO	_00137_DS_
                                    1-  737     	.line	147, "main.c"; 	if(++sleepTime > 100)
                                    1-  738     	BANKSEL	_sleepTime
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 05rr                      1-  739     	INCR	_sleepTime,F
     00A1 0D03                      1-  740     	BTRSC	STATUS,2
     00A2 05rr                      1-  741     	INCR	(_sleepTime + 1),F
                                    1-  742     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  743     ;;unsigned compare: left >= lit (0x65=101), size=2
     00A3 2100                      1-  744     	MOVIA	0x00
     00A4 04rr                      1-  745     	SUBAR	(_sleepTime + 1),W
     00A5 0903                      1-  746     	BTRSS	STATUS,2
     00A6 3rrr                      1-  747     	LGOTO	_00196_DS_
     00A7 2165                      1-  748     	MOVIA	0x65
     00A8 04rr                      1-  749     	SUBAR	_sleepTime,W
     00A9                           1-  750     _00196_DS_:
     00A9 0803                      1-  751     	BTRSS	STATUS,0
     00AA 3rrr                      1-  752     	LGOTO	_00143_DS_
                                    1-  753     	.line	148, "main.c"; 	gotoSleep();
     00AB 2rrr                      1-  754     	LCALL	_gotoSleep
     00AC 3rrr                      1-  755     	LGOTO	_00143_DS_
     00AD                           1-  756     _00137_DS_:
                                    1-  757     	.line	152, "main.c"; 	sleepTime = 0;
                                    1-  758     	BANKSEL	_sleepTime
     00AD rrrr                      3-   71 m1      .banksel ram_address
     00AE 02rr                      1-  759     	CLRR	_sleepTime
     00AF 02rr                      1-  760     	CLRR	(_sleepTime + 1)
     00B0 3rrr                      1-  761     	LGOTO	_00143_DS_
                                    1-  762     	.line	155, "main.c"; 	}
                                    1-  763     	RETURN	
     00B1 0010                      3-   26 m1      ret
                                    1-  764     ; exit point of _main
                                    1-  766     ;***
                                    1-  767     ;  pBlock Stats: dbName = C
                                    1-  768     ;***
                                    1-  769     ;has an exit
                                    1-  770     ;; Starting pCode block
                                    1-  771     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  773     _gotoSleep:
                                    1-  774     ; 2 exit points
                                    1-  775     	.line	400, "main.c"; 	COM1 = 1;
                                    1-  776     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Brr                      1-  777     	BSR	_PORTA,7
                                    1-  778     	.line	401, "main.c"; 	COM2 = 1;
     0002 1Brr                      1-  779     	BSR	_PORTA,6
                                    1-  780     	.line	402, "main.c"; 	COM3 = 1;
     0003 18rr                      1-  781     	BSR	_PORTB,1
                                    1-  782     	.line	403, "main.c"; 	baiwei = shiwei = gewei = 0;
                                    1-  783     	BANKSEL	_gewei
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  784     	CLRR	_gewei
                                    1-  785     	BANKSEL	_shiwei
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  786     	CLRR	_shiwei
                                    1-  787     	BANKSEL	_baiwei
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1-  788     	CLRR	_baiwei
                                    1-  789     	.line	404, "main.c"; 	workStep = 0;
                                    1-  790     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1-  791     	CLRR	_workStep
                                    1-  792     	.line	405, "main.c"; 	rockStep = 0;
                                    1-  793     	BANKSEL	_rockStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1-  794     	CLRR	_rockStep
                                    1-  795     	.line	406, "main.c"; 	AWUCON = 0x19;
     000E 2119                      1-  796     	MOVIA	0x19
     000F 00rr                      1-  797     	MOVAR	_AWUCON
                                    1-  798     	.line	407, "main.c"; 	sleepTime = 0;	
                                    1-  799     	BANKSEL	_sleepTime
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1-  800     	CLRR	_sleepTime
     0012 02rr                      1-  801     	CLRR	(_sleepTime + 1)
                                    1-  802     	.line	408, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     0013 2103                      1-  803     	MOVIA	0x03
     0014 00rr                      1-  804     	MOVAR	_INTE
                                    1-  805     	.line	409, "main.c"; 	PCON =  C_LVR_En;	
     0015 2108                      1-  806     	MOVIA	0x08
     0016 00rr                      1-  807     	MOVAR	_PCON
                                    1-  808     	.line	410, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0017 02rr                      1-  809     	CLRR	_INTF
                                    1-  810     	.line	411, "main.c"; 	CLRWDT();
     0018 0002                      1-  811     	clrwdt
                                    1-  812     	.line	412, "main.c"; 	ENI();
     0019 0004                      1-  813     	ENI
                                    1-  814     	.line	413, "main.c"; 	SLEEP();
     001A 0001                      1-  815     	sleep
                                    1-  816     	.line	414, "main.c"; 	AWUCON = 0x00;
     001B 02rr                      1-  817     	CLRR	_AWUCON
                                    1-  818     	.line	415, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0��Timer1��WDT overflow interrupt
     001C 2103                      1-  819     	MOVIA	0x03
     001D 00rr                      1-  820     	MOVAR	_INTE
                                    1-  821     	.line	416, "main.c"; 	INTF = 0;
     001E 02rr                      1-  822     	CLRR	_INTF
                                    1-  823     	.line	421, "main.c"; 	}
                                    1-  824     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1-  825     ; exit point of _gotoSleep
                                    1-  827     ;***
                                    1-  828     ;  pBlock Stats: dbName = C
                                    1-  829     ;***
                                    1-  830     ;has an exit
                                    1-  831     ;1 compiler assigned register :
                                    1-  832     ;   r0x1024
                                    1-  833     ;; Starting pCode block
                                    1-  834     .segment "code"; module=main, function=_keyRead
                                    1-  836     ;local variable name mapping:
     0000                           1-  838     _keyRead:
                                    1-  839     ; 2 exit points
                                    1-  840     	.line	376, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  841     	BANKSEL	r0x1024
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  842     	MOVAR	r0x1024
                                    1-  843     	.line	378, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  844     	MOVR	r0x1024,W
     0003 0D03                      1-  845     	BTRSC	STATUS,2
     0004 3rrr                      1-  846     	LGOTO	_00535_DS_
                                    1-  847     	.line	380, "main.c"; 	keyCount++;
                                    1-  848     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  849     	INCR	_keyCount,F
                                    1-  850     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  851     	.line	381, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  852     	MOVIA	0xc8
     0008 04rr                      1-  853     	SUBAR	_keyCount,W
     0009 0803                      1-  854     	BTRSS	STATUS,0
     000A 3rrr                      1-  855     	LGOTO	_00536_DS_
                                    1-  856     	.line	383, "main.c"; 	keyCount = 200;
     000B 21C8                      1-  857     	MOVIA	0xc8
     000C 00rr                      1-  858     	MOVAR	_keyCount
     000D 3rrr                      1-  859     	LGOTO	_00536_DS_
                                    1-  860     ;;unsigned compare: left < lit (0x8=8), size=1
     000E                           1-  861     _00535_DS_:
                                    1-  862     	.line	388, "main.c"; 	if(keyCount >= 8)
     000E 2108                      1-  863     	MOVIA	0x08
                                    1-  864     	BANKSEL	_keyCount
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1-  865     	SUBAR	_keyCount,W
     0011 0803                      1-  866     	BTRSS	STATUS,0
     0012 3rrr                      1-  867     	LGOTO	_00533_DS_
                                    1-  868     	.line	390, "main.c"; 	keyCount = 0;
     0013 02rr                      1-  869     	CLRR	_keyCount
                                    1-  870     	.line	391, "main.c"; 	return	1;
     0014 2101                      1-  871     	MOVIA	0x01
     0015 3rrr                      1-  872     	LGOTO	_00537_DS_
     0016                           1-  873     _00533_DS_:
                                    1-  874     	.line	393, "main.c"; 	keyCount = 0;
                                    1-  875     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 02rr                      1-  876     	CLRR	_keyCount
     0018                           1-  877     _00536_DS_:
                                    1-  878     	.line	395, "main.c"; 	return 0;
     0018 2100                      1-  879     	MOVIA	0x00
     0019                           1-  880     _00537_DS_:
                                    1-  881     	.line	396, "main.c"; 	}
                                    1-  882     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1-  883     ; exit point of _keyRead
                                    1-  885     ;***
                                    1-  886     ;  pBlock Stats: dbName = C
                                    1-  887     ;***
                                    1-  888     ;has an exit
                                    1-  889     ;functions called:
                                    1-  890     ;   _Delay10Us
                                    1-  891     ;   _Delay10Us
                                    1-  892     ;   _Delay10Us
                                    1-  893     ;   _Delay10Us
                                    1-  894     ;   _Delay10Us
                                    1-  895     ;   _Delay10Us
                                    1-  896     ;   _Delay10Us
                                    1-  897     ;   _Delay10Us
                                    1-  898     ;2 compiler assigned registers:
                                    1-  899     ;   r0x1025
                                    1-  900     ;   r0x1026
                                    1-  901     ;; Starting pCode block
                                    1-  902     .segment "code"; module=main, function=_ind_light_disp
                                    1-  904     ;local variable name mapping:
     0000                           1-  907     _ind_light_disp:
                                    1-  908     ; 2 exit points
                                    1-  909     	.line	351, "main.c"; 	void ind_light_disp( uint8_t udata )
                                    1-  910     	BANKSEL	r0x1025
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  911     	MOVAR	r0x1025
                                    1-  912     	.line	354, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1-  913     	BANKSEL	r0x1026
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  914     	CLRR	r0x1026
     0004                           1-  915     _00525_DS_:
                                    1-  916     	.line	356, "main.c"; 	CLK=0;
     0004 1Crr                      1-  917     	BCR	_PORTB,0
                                    1-  918     	.line	357, "main.c"; 	Delay10Us();
     0005 2rrr                      1-  919     	LCALL	_Delay10Us
                                    1-  920     	.line	358, "main.c"; 	if(udata&0x80)
                                    1-  921     	BANKSEL	r0x1025
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 0Brr                      1-  922     	BTRSS	r0x1025,7
     0008 3rrr                      1-  923     	LGOTO	_00522_DS_
                                    1-  924     	.line	360, "main.c"; 	DAT=1;
                                    1-  925     	BANKSEL	_PORTA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 18rr                      1-  926     	BSR	_PORTA,1
                                    1-  927     	.line	361, "main.c"; 	Delay10Us();
     000B 2rrr                      1-  928     	LCALL	_Delay10Us
     000C 3rrr                      1-  929     	LGOTO	_00523_DS_
     000D                           1-  930     _00522_DS_:
                                    1-  931     	.line	365, "main.c"; 	DAT=0;
                                    1-  932     	BANKSEL	_PORTA
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 1Crr                      1-  933     	BCR	_PORTA,1
                                    1-  934     	.line	366, "main.c"; 	Delay10Us();
     000F 2rrr                      1-  935     	LCALL	_Delay10Us
     0010                           1-  936     _00523_DS_:
                                    1-  937     	.line	368, "main.c"; 	CLK=1;
     0010 18rr                      1-  938     	BSR	_PORTB,0
                                    1-  939     	.line	369, "main.c"; 	Delay10Us();
     0011 2rrr                      1-  940     	LCALL	_Delay10Us
                                    1-  941     	.line	370, "main.c"; 	udata<<=1;
     0012 1C03                      1-  942     	BCR	STATUS,0
                                    1-  943     	BANKSEL	r0x1025
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 14rr                      1-  944     	RLR	r0x1025,F
                                    1-  945     	.line	354, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1-  946     	BANKSEL	r0x1026
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  947     	INCR	r0x1026,F
                                    1-  948     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  949     ;;unsigned compare: left >= lit (0x8=8), size=1
     0017 2108                      1-  950     	MOVIA	0x08
     0018 04rr                      1-  951     	SUBAR	r0x1026,W
     0019 0803                      1-  952     	BTRSS	STATUS,0
     001A 3rrr                      1-  953     	LGOTO	_00525_DS_
                                    1-  954     	.line	372, "main.c"; 	CLK=0;
     001B 1Crr                      1-  955     	BCR	_PORTB,0
                                    1-  956     	.line	373, "main.c"; 	DAT=0;
                                    1-  957     	BANKSEL	_PORTA
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 1Crr                      1-  958     	BCR	_PORTA,1
                                    1-  959     	.line	374, "main.c"; 	}
                                    1-  960     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1-  961     ; exit point of _ind_light_disp
                                    1-  963     ;***
                                    1-  964     ;  pBlock Stats: dbName = C
                                    1-  965     ;***
                                    1-  966     ;has an exit
                                    1-  967     ;functions called:
                                    1-  968     ;   _msa_ReadBytes
                                    1-  969     ;   _msa_ReadBytes
                                    1-  970     ;   _msa_ReadBytes
                                    1-  971     ;   _msa_ReadBytes
                                    1-  972     ;7 compiler assigned registers:
                                    1-  973     ;   r0x1027
                                    1-  974     ;   r0x1028
                                    1-  975     ;   r0x1029
                                    1-  976     ;   STK02
                                    1-  977     ;   STK01
                                    1-  978     ;   STK00
                                    1-  979     ;   r0x102A
                                    1-  980     ;; Starting pCode block
                                    1-  981     .segment "code"; module=main, function=_getData
     0000                           1-  983     _getData:
                                    1-  984     ; 2 exit points
                                    1-  985     	.line	304, "main.c"; 	msa_ReadBytes(&hzL,MSA_REG_ACC_Z_LSB);
     0000 21rr                      1-  986     	MOVIA	((_hzL + 0) >> 8) & 0xff
                                    1-  987     	BANKSEL	r0x1027
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  988     	MOVAR	r0x1027
     0003 21rr                      1-  989     	MOVIA	(_hzL + 0)
                                    1-  990     	BANKSEL	r0x1028
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  991     	MOVAR	r0x1028
                                    1-  992     	BANKSEL	r0x1029
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  993     	CLRR	r0x1029
     0008 2106                      1-  994     	MOVIA	0x06
     0009 00rr                      1-  995     	MOVAR	STK02
                                    1-  996     	BANKSEL	r0x1028
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1-  997     	MOVR	r0x1028,W
     000C 00rr                      1-  998     	MOVAR	STK01
                                    1-  999     	BANKSEL	r0x1027
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 1000     	MOVR	r0x1027,W
     000F 00rr                      1- 1001     	MOVAR	STK00
     0010 2100                      1- 1002     	MOVIA	0x00
     0011 2rrr                      1- 1003     	LCALL	_msa_ReadBytes
                                    1- 1004     	.line	305, "main.c"; 	msa_ReadBytes(&hzH,MSA_REG_ACC_Z_MSB);
     0012 21rr                      1- 1005     	MOVIA	((_hzH + 0) >> 8) & 0xff
                                    1- 1006     	BANKSEL	r0x1027
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1- 1007     	MOVAR	r0x1027
     0015 21rr                      1- 1008     	MOVIA	(_hzH + 0)
                                    1- 1009     	BANKSEL	r0x1028
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1010     	MOVAR	r0x1028
                                    1- 1011     	BANKSEL	r0x1029
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1- 1012     	CLRR	r0x1029
     001A 2107                      1- 1013     	MOVIA	0x07
     001B 00rr                      1- 1014     	MOVAR	STK02
                                    1- 1015     	BANKSEL	r0x1028
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 1016     	MOVR	r0x1028,W
     001E 00rr                      1- 1017     	MOVAR	STK01
                                    1- 1018     	BANKSEL	r0x1027
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 1019     	MOVR	r0x1027,W
     0021 00rr                      1- 1020     	MOVAR	STK00
     0022 2100                      1- 1021     	MOVIA	0x00
     0023 2rrr                      1- 1022     	LCALL	_msa_ReadBytes
                                    1- 1023     	.line	307, "main.c"; 	hz = ((short)(hzH << 8 | hzL))>> 4;
                                    1- 1024     	BANKSEL	_hzH
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1025     	MOVR	_hzH,W
                                    1- 1026     	BANKSEL	r0x1028
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1- 1027     	MOVAR	r0x1028
                                    1- 1028     	BANKSEL	r0x1027
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 1029     	CLRR	r0x1027
                                    1- 1030     	BANKSEL	r0x1028
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 0Brr                      1- 1031     	BTRSS	r0x1028,7
     002C 3rrr                      1- 1032     	LGOTO	_00001_DS_
                                    1- 1033     	BANKSEL	r0x1027
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 06rr                      1- 1034     	DECR	r0x1027,F
     002F                           1- 1035     _00001_DS_:
                                    1- 1036     	BANKSEL	r0x1028
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1037     	MOVR	r0x1028,W
                                    1- 1038     	BANKSEL	r0x102A
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 00rr                      1- 1039     	MOVAR	r0x102A
                                    1- 1040     	BANKSEL	r0x1029
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1- 1041     	CLRR	r0x1029
                                    1- 1042     	BANKSEL	_hzL
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1043     	MOVR	_hzL,W
                                    1- 1044     	BANKSEL	r0x1028
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 1045     	MOVAR	r0x1028
                                    1- 1046     	BANKSEL	r0x1027
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1- 1047     	CLRR	r0x1027
                                    1- 1048     	BANKSEL	r0x1028
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 0Brr                      1- 1049     	BTRSS	r0x1028,7
     003D 3rrr                      1- 1050     	LGOTO	_00002_DS_
                                    1- 1051     	BANKSEL	r0x1027
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 06rr                      1- 1052     	DECR	r0x1027,F
     0040                           1- 1053     _00002_DS_:
                                    1- 1054     	BANKSEL	r0x1028
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1- 1055     	MOVR	r0x1028,W
                                    1- 1056     	BANKSEL	r0x1029
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 11rr                      1- 1057     	IORAR	r0x1029,F
                                    1- 1058     	BANKSEL	r0x1027
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1- 1059     	MOVR	r0x1027,W
                                    1- 1060     	BANKSEL	r0x102A
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 11rr                      1- 1061     	IORAR	r0x102A,F
                                    1- 1062     	BANKSEL	r0x1029
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 15rr                      1- 1063     	SWAPR	r0x1029,W
     004A 220F                      1- 1064     	ANDIA	0x0f
                                    1- 1065     	BANKSEL	_hz
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1- 1066     	MOVAR	_hz
                                    1- 1067     	BANKSEL	r0x102A
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 15rr                      1- 1068     	SWAPR	r0x102A,W
                                    1- 1069     	BANKSEL	_hz
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1- 1070     	MOVAR	(_hz + 1)
     0051 22F0                      1- 1071     	ANDIA	0xf0
     0052 11rr                      1- 1072     	IORAR	_hz,F
     0053 12rr                      1- 1073     	XORAR	(_hz + 1),F
     0054 21F0                      1- 1074     	MOVIA	0xf0
     0055 0Drr                      1- 1075     	BTRSC	(_hz + 1),3
     0056 11rr                      1- 1076     	IORAR	(_hz + 1),F
                                    1- 1077     	.line	308, "main.c"; 	hz &= 0x0FFF;
     0057 210F                      1- 1078     	MOVIA	0x0f
     0058 10rr                      1- 1079     	ANDAR	(_hz + 1),F
                                    1- 1080     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1081     ;;unsigned compare: left >= lit (0x81=129), size=2
                                    1- 1082     	.line	309, "main.c"; 	if(hz > 0x080 && hz < 0xF70)
     0059 2100                      1- 1083     	MOVIA	0x00
     005A 04rr                      1- 1084     	SUBAR	(_hz + 1),W
     005B 0903                      1- 1085     	BTRSS	STATUS,2
     005C 3rrr                      1- 1086     	LGOTO	_00507_DS_
     005D 2181                      1- 1087     	MOVIA	0x81
     005E 04rr                      1- 1088     	SUBAR	_hz,W
     005F                           1- 1089     _00507_DS_:
                                    1- 1090     	BANKSEL	r0x1028
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 02rr                      1- 1091     	CLRR	r0x1028
     0061 14rr                      1- 1092     	RLR	r0x1028,F
     0062 01rr                      1- 1093     	MOVR	r0x1028,W
     0063 0D03                      1- 1094     	BTRSC	STATUS,2
     0064 3rrr                      1- 1095     	LGOTO	_00469_DS_
                                    1- 1096     ;;unsigned compare: left < lit (0xF70=3952), size=2
     0065 210F                      1- 1097     	MOVIA	0x0f
                                    1- 1098     	BANKSEL	_hz
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 04rr                      1- 1099     	SUBAR	(_hz + 1),W
     0068 0903                      1- 1100     	BTRSS	STATUS,2
     0069 3rrr                      1- 1101     	LGOTO	_00508_DS_
     006A 2170                      1- 1102     	MOVIA	0x70
     006B 04rr                      1- 1103     	SUBAR	_hz,W
     006C                           1- 1104     _00508_DS_:
     006C 0C03                      1- 1105     	BTRSC	STATUS,0
     006D 3rrr                      1- 1106     	LGOTO	_00469_DS_
                                    1- 1107     	.line	311, "main.c"; 	if(++rockTime >= 5 && rockFlag == 0)
                                    1- 1108     	BANKSEL	_rockTime
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 05rr                      1- 1109     	INCR	_rockTime,F
                                    1- 1110     ;;unsigned compare: left < lit (0x5=5), size=1
     0070 2105                      1- 1111     	MOVIA	0x05
     0071 04rr                      1- 1112     	SUBAR	_rockTime,W
     0072 0803                      1- 1113     	BTRSS	STATUS,0
     0073 3rrr                      1- 1114     	LGOTO	_00460_DS_
                                    1- 1115     	BANKSEL	_rockFlag
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 01rr                      1- 1116     	MOVR	_rockFlag,W
     0076 0903                      1- 1117     	BTRSS	STATUS,2
     0077 3rrr                      1- 1118     	LGOTO	_00460_DS_
                                    1- 1119     	.line	313, "main.c"; 	if(rockStep > 0)
                                    1- 1120     	BANKSEL	_rockStep
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 01rr                      1- 1121     	MOVR	_rockStep,W
     007A 0D03                      1- 1122     	BTRSC	STATUS,2
     007B 3rrr                      1- 1123     	LGOTO	_00450_DS_
                                    1- 1124     	.line	314, "main.c"; 	return 0;
     007C 2100                      1- 1125     	MOVIA	0x00
     007D 3rrr                      1- 1126     	LGOTO	_00472_DS_
     007E                           1- 1127     _00450_DS_:
                                    1- 1128     	.line	315, "main.c"; 	rockStep = 2;
     007E 2102                      1- 1129     	MOVIA	0x02
                                    1- 1130     	BANKSEL	_rockStep
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 00rr                      1- 1131     	MOVAR	_rockStep
                                    1- 1132     	.line	316, "main.c"; 	workTime = 0;
                                    1- 1133     	BANKSEL	_workTime
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 02rr                      1- 1134     	CLRR	_workTime
     0083 02rr                      1- 1135     	CLRR	(_workTime + 1)
                                    1- 1136     	.line	317, "main.c"; 	rockTime = 0;
                                    1- 1137     	BANKSEL	_rockTime
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 02rr                      1- 1138     	CLRR	_rockTime
                                    1- 1139     	.line	318, "main.c"; 	rockFlag = 1;
     0086 2101                      1- 1140     	MOVIA	0x01
                                    1- 1141     	BANKSEL	_rockFlag
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 00rr                      1- 1142     	MOVAR	_rockFlag
                                    1- 1143     ;;unsigned compare: left < lit (0xF0=240), size=1
                                    1- 1144     	.line	319, "main.c"; 	if(deadTime < 240)
     0089 21F0                      1- 1145     	MOVIA	0xf0
                                    1- 1146     	BANKSEL	_deadTime
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 04rr                      1- 1147     	SUBAR	_deadTime,W
     008C 0C03                      1- 1148     	BTRSC	STATUS,0
     008D 3rrr                      1- 1149     	LGOTO	_00458_DS_
                                    1- 1150     	.line	321, "main.c"; 	if(++gewei >= 10)
                                    1- 1151     	BANKSEL	_gewei
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 05rr                      1- 1152     	INCR	_gewei,F
                                    1- 1153     ;;unsigned compare: left < lit (0xA=10), size=1
     0090 210A                      1- 1154     	MOVIA	0x0a
     0091 04rr                      1- 1155     	SUBAR	_gewei,W
     0092 0803                      1- 1156     	BTRSS	STATUS,0
     0093 3rrr                      1- 1157     	LGOTO	_00458_DS_
                                    1- 1158     	.line	323, "main.c"; 	gewei = 0;
     0094 02rr                      1- 1159     	CLRR	_gewei
                                    1- 1160     	.line	324, "main.c"; 	if(++shiwei >= 10)
                                    1- 1161     	BANKSEL	_shiwei
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 05rr                      1- 1162     	INCR	_shiwei,F
                                    1- 1163     ;;unsigned compare: left < lit (0xA=10), size=1
     0097 210A                      1- 1164     	MOVIA	0x0a
     0098 04rr                      1- 1165     	SUBAR	_shiwei,W
     0099 0803                      1- 1166     	BTRSS	STATUS,0
     009A 3rrr                      1- 1167     	LGOTO	_00458_DS_
                                    1- 1168     	.line	326, "main.c"; 	shiwei = 0;
     009B 02rr                      1- 1169     	CLRR	_shiwei
                                    1- 1170     	.line	327, "main.c"; 	if(++baiwei >= 10)
                                    1- 1171     	BANKSEL	_baiwei
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 05rr                      1- 1172     	INCR	_baiwei,F
                                    1- 1173     ;;unsigned compare: left < lit (0xA=10), size=1
     009E 210A                      1- 1174     	MOVIA	0x0a
     009F 04rr                      1- 1175     	SUBAR	_baiwei,W
     00A0 0C03                      1- 1176     	BTRSC	STATUS,0
                                    1- 1177     	.line	329, "main.c"; 	baiwei = 0;
     00A1 02rr                      1- 1178     	CLRR	_baiwei
     00A2                           1- 1179     _00458_DS_:
                                    1- 1180     	.line	334, "main.c"; 	deadTime = 0;
                                    1- 1181     	BANKSEL	_deadTime
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 02rr                      1- 1182     	CLRR	_deadTime
                                    1- 1183     	.line	335, "main.c"; 	return 1;
     00A4 2101                      1- 1184     	MOVIA	0x01
     00A5 3rrr                      1- 1185     	LGOTO	_00472_DS_
     00A6                           1- 1186     _00460_DS_:
                                    1- 1187     	.line	338, "main.c"; 	return 0;
     00A6 2100                      1- 1188     	MOVIA	0x00
     00A7 3rrr                      1- 1189     	LGOTO	_00472_DS_
     00A8                           1- 1190     _00469_DS_:
                                    1- 1191     	.line	342, "main.c"; 	if((hz > 0x080 && hz < 0x0FF0) || (hz > 0x003 && hz < 0x080))
                                    1- 1192     	BANKSEL	r0x1028
     00A8 rrrr                      3-   71 m1      .banksel ram_address
     00A9 01rr                      1- 1193     	MOVR	r0x1028,W
     00AA 0D03                      1- 1194     	BTRSC	STATUS,2
     00AB 3rrr                      1- 1195     	LGOTO	_00467_DS_
                                    1- 1196     ;;unsigned compare: left < lit (0xFF0=4080), size=2
     00AC 210F                      1- 1197     	MOVIA	0x0f
                                    1- 1198     	BANKSEL	_hz
     00AD rrrr                      3-   71 m1      .banksel ram_address
     00AE 04rr                      1- 1199     	SUBAR	(_hz + 1),W
     00AF 0903                      1- 1200     	BTRSS	STATUS,2
     00B0 3rrr                      1- 1201     	LGOTO	_00514_DS_
     00B1 21F0                      1- 1202     	MOVIA	0xf0
     00B2 04rr                      1- 1203     	SUBAR	_hz,W
     00B3                           1- 1204     _00514_DS_:
     00B3 0803                      1- 1205     	BTRSS	STATUS,0
     00B4 3rrr                      1- 1206     	LGOTO	_00463_DS_
                                    1- 1207     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1208     ;;unsigned compare: left >= lit (0x4=4), size=2
     00B5                           1- 1209     _00467_DS_:
     00B5 2100                      1- 1210     	MOVIA	0x00
                                    1- 1211     	BANKSEL	_hz
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 04rr                      1- 1212     	SUBAR	(_hz + 1),W
     00B8 0903                      1- 1213     	BTRSS	STATUS,2
     00B9 3rrr                      1- 1214     	LGOTO	_00515_DS_
     00BA 2104                      1- 1215     	MOVIA	0x04
     00BB 04rr                      1- 1216     	SUBAR	_hz,W
     00BC                           1- 1217     _00515_DS_:
     00BC 0803                      1- 1218     	BTRSS	STATUS,0
     00BD 3rrr                      1- 1219     	LGOTO	_00464_DS_
                                    1- 1220     ;;unsigned compare: left < lit (0x80=128), size=2
     00BE 2100                      1- 1221     	MOVIA	0x00
                                    1- 1222     	BANKSEL	_hz
     00BF rrrr                      3-   71 m1      .banksel ram_address
     00C0 04rr                      1- 1223     	SUBAR	(_hz + 1),W
     00C1 0903                      1- 1224     	BTRSS	STATUS,2
     00C2 3rrr                      1- 1225     	LGOTO	_00516_DS_
     00C3 2180                      1- 1226     	MOVIA	0x80
     00C4 04rr                      1- 1227     	SUBAR	_hz,W
     00C5                           1- 1228     _00516_DS_:
     00C5 0C03                      1- 1229     	BTRSC	STATUS,0
     00C6 3rrr                      1- 1230     	LGOTO	_00464_DS_
     00C7                           1- 1231     _00463_DS_:
                                    1- 1232     	.line	344, "main.c"; 	rockTime = 0;
                                    1- 1233     	BANKSEL	_rockTime
     00C7 rrrr                      3-   71 m1      .banksel ram_address
     00C8 02rr                      1- 1234     	CLRR	_rockTime
     00C9                           1- 1235     _00464_DS_:
                                    1- 1236     	.line	346, "main.c"; 	return 0;
     00C9 2100                      1- 1237     	MOVIA	0x00
     00CA                           1- 1238     _00472_DS_:
                                    1- 1239     	.line	348, "main.c"; 	}
                                    1- 1240     	RETURN	
     00CA 0010                      3-   26 m1      ret
                                    1- 1241     ; exit point of _getData
                                    1- 1243     ;***
                                    1- 1244     ;  pBlock Stats: dbName = C
                                    1- 1245     ;***
                                    1- 1246     ;has an exit
                                    1- 1247     ;functions called:
                                    1- 1248     ;   _ind_light_disp
                                    1- 1249     ;   _ind_light_disp
                                    1- 1250     ;   _ind_light_disp
                                    1- 1251     ;   _ind_light_disp
                                    1- 1252     ;1 compiler assigned register :
                                    1- 1253     ;   r0x102B
                                    1- 1254     ;; Starting pCode block
                                    1- 1255     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1257     _chrgCtr:
                                    1- 1258     ; 2 exit points
                                    1- 1259     	.line	277, "main.c"; 	if(PORTA & 0x08)
                                    1- 1260     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 09rr                      1- 1261     	BTRSS	_PORTA,3
     0002 3rrr                      1- 1262     	LGOTO	_00442_DS_
                                    1- 1263     	.line	280, "main.c"; 	workStep = 0;	//����в���ʹ��
                                    1- 1264     	BANKSEL	_workStep
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1- 1265     	CLRR	_workStep
                                    1- 1266     	.line	281, "main.c"; 	COM1 = COM2 = COM3 = 1;
     0005 18rr                      1- 1267     	BSR	_PORTB,1
     0006 0Crr                      1- 1268     	BTRSC	_PORTB,1
     0007 3rrr                      1- 1269     	LGOTO	_00003_DS_
                                    1- 1270     	BANKSEL	_PORTA
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 1Frr                      1- 1271     	BCR	_PORTA,6
     000A                           1- 1272     _00003_DS_:
     000A 08rr                      1- 1273     	BTRSS	_PORTB,1
     000B 3rrr                      1- 1274     	LGOTO	_00004_DS_
                                    1- 1275     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Brr                      1- 1276     	BSR	_PORTA,6
     000E                           1- 1277     _00004_DS_:
                                    1- 1278     	BANKSEL	_PORTA
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 0Brr                      1- 1279     	BTRSS	_PORTA,6
     0010 1Frr                      1- 1280     	BCR	_PORTA,7
     0011 0Frr                      1- 1281     	BTRSC	_PORTA,6
     0012 1Brr                      1- 1282     	BSR	_PORTA,7
                                    1- 1283     	.line	282, "main.c"; 	if(PORTA & 0x10)
     0013 0Arr                      1- 1284     	BTRSS	_PORTA,4
     0014 3rrr                      1- 1285     	LGOTO	_00439_DS_
                                    1- 1286     	.line	285, "main.c"; 	chrgStep = 2;
     0015 2102                      1- 1287     	MOVIA	0x02
                                    1- 1288     	BANKSEL	_chrgStep
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1289     	MOVAR	_chrgStep
                                    1- 1290     	.line	286, "main.c"; 	ind_light_disp(table[10]);
                                    1- 1291     	BANKSEL	_table
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1292     	MOVR	(_table + 10),W
                                    1- 1293     	BANKSEL	r0x102B
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1- 1294     	MOVAR	r0x102B
     001C 2rrr                      1- 1295     	LCALL	_ind_light_disp
     001D 3rrr                      1- 1296     	LGOTO	_00444_DS_
     001E                           1- 1297     _00439_DS_:
                                    1- 1298     	.line	290, "main.c"; 	chrgStep = 1;
     001E 2101                      1- 1299     	MOVIA	0x01
                                    1- 1300     	BANKSEL	_chrgStep
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 1301     	MOVAR	_chrgStep
                                    1- 1302     	.line	291, "main.c"; 	ind_light_disp(table[11]);
                                    1- 1303     	BANKSEL	_table
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1304     	MOVR	(_table + 11),W
                                    1- 1305     	BANKSEL	r0x102B
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1306     	MOVAR	r0x102B
     0025 2rrr                      1- 1307     	LCALL	_ind_light_disp
     0026 3rrr                      1- 1308     	LGOTO	_00444_DS_
     0027                           1- 1309     _00442_DS_:
                                    1- 1310     	.line	296, "main.c"; 	chrgStep = 0;
                                    1- 1311     	BANKSEL	_chrgStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1- 1312     	CLRR	_chrgStep
     0029                           1- 1313     _00444_DS_:
                                    1- 1314     	.line	298, "main.c"; 	}
                                    1- 1315     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1- 1316     ; exit point of _chrgCtr
                                    1- 1318     ;***
                                    1- 1319     ;  pBlock Stats: dbName = C
                                    1- 1320     ;***
                                    1- 1321     ;has an exit
                                    1- 1322     ;functions called:
                                    1- 1323     ;   _ind_light_disp
                                    1- 1324     ;   __gptrget1
                                    1- 1325     ;   _ind_light_disp
                                    1- 1326     ;   _delay_us
                                    1- 1327     ;   __gptrget1
                                    1- 1328     ;   _ind_light_disp
                                    1- 1329     ;   _delay_us
                                    1- 1330     ;   __gptrget1
                                    1- 1331     ;   _ind_light_disp
                                    1- 1332     ;   _delay_us
                                    1- 1333     ;   _ind_light_disp
                                    1- 1334     ;   __gptrget1
                                    1- 1335     ;   _ind_light_disp
                                    1- 1336     ;   _delay_us
                                    1- 1337     ;   __gptrget1
                                    1- 1338     ;   _ind_light_disp
                                    1- 1339     ;   _delay_us
                                    1- 1340     ;   __gptrget1
                                    1- 1341     ;   _ind_light_disp
                                    1- 1342     ;   _delay_us
                                    1- 1343     ;5 compiler assigned registers:
                                    1- 1344     ;   r0x102C
                                    1- 1345     ;   r0x102D
                                    1- 1346     ;   STK01
                                    1- 1347     ;   STK00
                                    1- 1348     ;   r0x102E
                                    1- 1349     ;; Starting pCode block
                                    1- 1350     .segment "code"; module=main, function=_refreshLed
     0000                           1- 1352     _refreshLed:
                                    1- 1353     ; 2 exit points
                                    1- 1354     	.line	245, "main.c"; 	ind_light_disp(0);
     0000 2100                      1- 1355     	MOVIA	0x00
     0001 2rrr                      1- 1356     	LCALL	_ind_light_disp
                                    1- 1357     	.line	246, "main.c"; 	COM1 = 1;
                                    1- 1358     	BANKSEL	_PORTA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 1Brr                      1- 1359     	BSR	_PORTA,7
                                    1- 1360     	.line	247, "main.c"; 	COM2 = 1;
     0004 1Brr                      1- 1361     	BSR	_PORTA,6
                                    1- 1362     	.line	248, "main.c"; 	COM3 = 1;
     0005 18rr                      1- 1363     	BSR	_PORTB,1
                                    1- 1364     	.line	249, "main.c"; 	ind_light_disp(table[baiwei]);
                                    1- 1365     	BANKSEL	_baiwei
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1- 1366     	MOVR	_baiwei,W
     0008 25rr                      1- 1367     	ADDIA	(_table + 0)
                                    1- 1368     	BANKSEL	r0x102C
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1369     	MOVAR	r0x102C
     000B 21rr                      1- 1370     	MOVIA	((_table + 0) >> 8) & 0xff
     000C 0C03                      1- 1371     	BTRSC	STATUS,0
     000D 2501                      1- 1372     	ADDIA	0x01
                                    1- 1373     	BANKSEL	r0x102D
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1374     	MOVAR	r0x102D
                                    1- 1375     	BANKSEL	r0x102C
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1376     	MOVR	r0x102C,W
     0012 00rr                      1- 1377     	MOVAR	STK01
                                    1- 1378     	BANKSEL	r0x102D
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1379     	MOVR	r0x102D,W
     0015 00rr                      1- 1380     	MOVAR	STK00
     0016 2100                      1- 1381     	MOVIA	0x00
     0017 2rrr                      1- 1382     	LCALL	__gptrget1
                                    1- 1383     	BANKSEL	r0x102E
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 1384     	MOVAR	r0x102E
     001A 2rrr                      1- 1385     	LCALL	_ind_light_disp
                                    1- 1386     	.line	250, "main.c"; 	COM1 = 0;
                                    1- 1387     	BANKSEL	_PORTA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 1Frr                      1- 1388     	BCR	_PORTA,7
                                    1- 1389     	.line	251, "main.c"; 	COM2 = 1;
     001D 1Brr                      1- 1390     	BSR	_PORTA,6
                                    1- 1391     	.line	252, "main.c"; 	COM3 = 1;
     001E 18rr                      1- 1392     	BSR	_PORTB,1
                                    1- 1393     	.line	253, "main.c"; 	delay_us(100);
     001F 2164                      1- 1394     	MOVIA	0x64
     0020 00rr                      1- 1395     	MOVAR	STK00
     0021 2100                      1- 1396     	MOVIA	0x00
     0022 2rrr                      1- 1397     	LCALL	_delay_us
                                    1- 1398     	.line	254, "main.c"; 	COM1 = 1;
                                    1- 1399     	BANKSEL	_PORTA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 1Brr                      1- 1400     	BSR	_PORTA,7
                                    1- 1401     	.line	255, "main.c"; 	COM2 = 1;
     0025 1Brr                      1- 1402     	BSR	_PORTA,6
                                    1- 1403     	.line	256, "main.c"; 	COM3 = 1;
     0026 18rr                      1- 1404     	BSR	_PORTB,1
                                    1- 1405     	.line	257, "main.c"; 	ind_light_disp(table[shiwei]);
                                    1- 1406     	BANKSEL	_shiwei
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 1407     	MOVR	_shiwei,W
     0029 25rr                      1- 1408     	ADDIA	(_table + 0)
                                    1- 1409     	BANKSEL	r0x102C
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 00rr                      1- 1410     	MOVAR	r0x102C
     002C 21rr                      1- 1411     	MOVIA	((_table + 0) >> 8) & 0xff
     002D 0C03                      1- 1412     	BTRSC	STATUS,0
     002E 2501                      1- 1413     	ADDIA	0x01
                                    1- 1414     	BANKSEL	r0x102D
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 00rr                      1- 1415     	MOVAR	r0x102D
                                    1- 1416     	BANKSEL	r0x102C
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1- 1417     	MOVR	r0x102C,W
     0033 00rr                      1- 1418     	MOVAR	STK01
                                    1- 1419     	BANKSEL	r0x102D
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 1420     	MOVR	r0x102D,W
     0036 00rr                      1- 1421     	MOVAR	STK00
     0037 2100                      1- 1422     	MOVIA	0x00
     0038 2rrr                      1- 1423     	LCALL	__gptrget1
                                    1- 1424     	BANKSEL	r0x102E
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 00rr                      1- 1425     	MOVAR	r0x102E
     003B 2rrr                      1- 1426     	LCALL	_ind_light_disp
                                    1- 1427     	.line	258, "main.c"; 	COM1 = 1;
                                    1- 1428     	BANKSEL	_PORTA
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 1Brr                      1- 1429     	BSR	_PORTA,7
                                    1- 1430     	.line	259, "main.c"; 	COM2 = 0;
     003E 1Frr                      1- 1431     	BCR	_PORTA,6
                                    1- 1432     	.line	260, "main.c"; 	COM3 = 1;
     003F 18rr                      1- 1433     	BSR	_PORTB,1
                                    1- 1434     	.line	261, "main.c"; 	delay_us(100);
     0040 2164                      1- 1435     	MOVIA	0x64
     0041 00rr                      1- 1436     	MOVAR	STK00
     0042 2100                      1- 1437     	MOVIA	0x00
     0043 2rrr                      1- 1438     	LCALL	_delay_us
                                    1- 1439     	.line	262, "main.c"; 	COM1 = 1;
                                    1- 1440     	BANKSEL	_PORTA
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 1Brr                      1- 1441     	BSR	_PORTA,7
                                    1- 1442     	.line	263, "main.c"; 	COM2 = 1;
     0046 1Brr                      1- 1443     	BSR	_PORTA,6
                                    1- 1444     	.line	264, "main.c"; 	COM3 = 1;
     0047 18rr                      1- 1445     	BSR	_PORTB,1
                                    1- 1446     	.line	265, "main.c"; 	ind_light_disp(table[gewei]);
                                    1- 1447     	BANKSEL	_gewei
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 01rr                      1- 1448     	MOVR	_gewei,W
     004A 25rr                      1- 1449     	ADDIA	(_table + 0)
                                    1- 1450     	BANKSEL	r0x102C
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1- 1451     	MOVAR	r0x102C
     004D 21rr                      1- 1452     	MOVIA	((_table + 0) >> 8) & 0xff
     004E 0C03                      1- 1453     	BTRSC	STATUS,0
     004F 2501                      1- 1454     	ADDIA	0x01
                                    1- 1455     	BANKSEL	r0x102D
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1- 1456     	MOVAR	r0x102D
                                    1- 1457     	BANKSEL	r0x102C
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1- 1458     	MOVR	r0x102C,W
     0054 00rr                      1- 1459     	MOVAR	STK01
                                    1- 1460     	BANKSEL	r0x102D
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1- 1461     	MOVR	r0x102D,W
     0057 00rr                      1- 1462     	MOVAR	STK00
     0058 2100                      1- 1463     	MOVIA	0x00
     0059 2rrr                      1- 1464     	LCALL	__gptrget1
                                    1- 1465     	BANKSEL	r0x102E
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1- 1466     	MOVAR	r0x102E
     005C 2rrr                      1- 1467     	LCALL	_ind_light_disp
                                    1- 1468     	.line	266, "main.c"; 	COM1 = 1;
                                    1- 1469     	BANKSEL	_PORTA
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 1Brr                      1- 1470     	BSR	_PORTA,7
                                    1- 1471     	.line	267, "main.c"; 	COM2 = 1;
     005F 1Brr                      1- 1472     	BSR	_PORTA,6
                                    1- 1473     	.line	268, "main.c"; 	COM3 = 0;
     0060 1Crr                      1- 1474     	BCR	_PORTB,1
                                    1- 1475     	.line	269, "main.c"; 	delay_us(100);
     0061 2164                      1- 1476     	MOVIA	0x64
     0062 00rr                      1- 1477     	MOVAR	STK00
     0063 2100                      1- 1478     	MOVIA	0x00
     0064 2rrr                      1- 1479     	LCALL	_delay_us
                                    1- 1480     	.line	270, "main.c"; 	COM1 = 1;
                                    1- 1481     	BANKSEL	_PORTA
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 1Brr                      1- 1482     	BSR	_PORTA,7
                                    1- 1483     	.line	271, "main.c"; 	COM2 = 1;
     0067 1Brr                      1- 1484     	BSR	_PORTA,6
                                    1- 1485     	.line	272, "main.c"; 	COM3 = 1;
     0068 18rr                      1- 1486     	BSR	_PORTB,1
                                    1- 1487     	.line	273, "main.c"; 	}
                                    1- 1488     	RETURN	
     0069 0010                      3-   26 m1      ret
                                    1- 1489     ; exit point of _refreshLed
                                    1- 1491     ;***
                                    1- 1492     ;  pBlock Stats: dbName = C
                                    1- 1493     ;***
                                    1- 1494     ;has an exit
                                    1- 1495     ;; Starting pCode block
                                    1- 1496     .segment "code"; module=main, function=_workCtr
     0000                           1- 1498     _workCtr:
                                    1- 1499     ; 2 exit points
                                    1- 1500     	.line	159, "main.c"; 	if(rockStep == 1)
                                    1- 1501     	BANKSEL	_rockStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1502     	MOVR	_rockStep,W
     0002 2401                      1- 1503     	XORIA	0x01
     0003 0903                      1- 1504     	BTRSS	STATUS,2
     0004 3rrr                      1- 1505     	LGOTO	_00296_DS_
                                    1- 1506     	.line	161, "main.c"; 	++workTime;
                                    1- 1507     	BANKSEL	_workTime
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1508     	INCR	_workTime,F
     0007 0D03                      1- 1509     	BTRSC	STATUS,2
     0008 05rr                      1- 1510     	INCR	(_workTime + 1),F
                                    1- 1511     ;;unsigned compare: left < lit (0x18=24), size=2
                                    1- 1512     	.line	162, "main.c"; 	if(workTime < 24)
     0009 2100                      1- 1513     	MOVIA	0x00
     000A 04rr                      1- 1514     	SUBAR	(_workTime + 1),W
     000B 0903                      1- 1515     	BTRSS	STATUS,2
     000C 3rrr                      1- 1516     	LGOTO	_00399_DS_
     000D 2118                      1- 1517     	MOVIA	0x18
     000E 04rr                      1- 1518     	SUBAR	_workTime,W
     000F                           1- 1519     _00399_DS_:
     000F 0C03                      1- 1520     	BTRSC	STATUS,0
     0010 3rrr                      1- 1521     	LGOTO	_00220_DS_
                                    1- 1522     	.line	163, "main.c"; 	MOTOR = 1;
                                    1- 1523     	BANKSEL	_PORTA
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 19rr                      1- 1524     	BSR	_PORTA,2
     0013 3rrr                      1- 1525     	LGOTO	_00298_DS_
                                    1- 1526     ;;unsigned compare: left < lit (0x2D=45), size=2
     0014                           1- 1527     _00220_DS_:
                                    1- 1528     	.line	164, "main.c"; 	else if(workTime < 45)
     0014 2100                      1- 1529     	MOVIA	0x00
                                    1- 1530     	BANKSEL	_workTime
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 04rr                      1- 1531     	SUBAR	(_workTime + 1),W
     0017 0903                      1- 1532     	BTRSS	STATUS,2
     0018 3rrr                      1- 1533     	LGOTO	_00400_DS_
     0019 212D                      1- 1534     	MOVIA	0x2d
     001A 04rr                      1- 1535     	SUBAR	_workTime,W
     001B                           1- 1536     _00400_DS_:
     001B 0C03                      1- 1537     	BTRSC	STATUS,0
     001C 3rrr                      1- 1538     	LGOTO	_00217_DS_
                                    1- 1539     	.line	165, "main.c"; 	MOTOR = 0;
                                    1- 1540     	BANKSEL	_PORTA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 1Drr                      1- 1541     	BCR	_PORTA,2
     001F 3rrr                      1- 1542     	LGOTO	_00298_DS_
                                    1- 1543     ;;unsigned compare: left < lit (0x44=68), size=2
     0020                           1- 1544     _00217_DS_:
                                    1- 1545     	.line	166, "main.c"; 	else if(workTime < 68)
     0020 2100                      1- 1546     	MOVIA	0x00
                                    1- 1547     	BANKSEL	_workTime
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 04rr                      1- 1548     	SUBAR	(_workTime + 1),W
     0023 0903                      1- 1549     	BTRSS	STATUS,2
     0024 3rrr                      1- 1550     	LGOTO	_00401_DS_
     0025 2144                      1- 1551     	MOVIA	0x44
     0026 04rr                      1- 1552     	SUBAR	_workTime,W
     0027                           1- 1553     _00401_DS_:
     0027 0C03                      1- 1554     	BTRSC	STATUS,0
     0028 3rrr                      1- 1555     	LGOTO	_00214_DS_
                                    1- 1556     	.line	167, "main.c"; 	MOTOR = 1;
                                    1- 1557     	BANKSEL	_PORTA
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 19rr                      1- 1558     	BSR	_PORTA,2
     002B 3rrr                      1- 1559     	LGOTO	_00298_DS_
                                    1- 1560     ;;unsigned compare: left < lit (0x59=89), size=2
     002C                           1- 1561     _00214_DS_:
                                    1- 1562     	.line	168, "main.c"; 	else if(workTime < 89)
     002C 2100                      1- 1563     	MOVIA	0x00
                                    1- 1564     	BANKSEL	_workTime
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 04rr                      1- 1565     	SUBAR	(_workTime + 1),W
     002F 0903                      1- 1566     	BTRSS	STATUS,2
     0030 3rrr                      1- 1567     	LGOTO	_00402_DS_
     0031 2159                      1- 1568     	MOVIA	0x59
     0032 04rr                      1- 1569     	SUBAR	_workTime,W
     0033                           1- 1570     _00402_DS_:
     0033 0C03                      1- 1571     	BTRSC	STATUS,0
     0034 3rrr                      1- 1572     	LGOTO	_00211_DS_
                                    1- 1573     	.line	169, "main.c"; 	MOTOR = 0;
                                    1- 1574     	BANKSEL	_PORTA
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 1Drr                      1- 1575     	BCR	_PORTA,2
     0037 3rrr                      1- 1576     	LGOTO	_00298_DS_
                                    1- 1577     ;;unsigned compare: left < lit (0x6F=111), size=2
     0038                           1- 1578     _00211_DS_:
                                    1- 1579     	.line	170, "main.c"; 	else if(workTime < 111)
     0038 2100                      1- 1580     	MOVIA	0x00
                                    1- 1581     	BANKSEL	_workTime
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1582     	SUBAR	(_workTime + 1),W
     003B 0903                      1- 1583     	BTRSS	STATUS,2
     003C 3rrr                      1- 1584     	LGOTO	_00403_DS_
     003D 216F                      1- 1585     	MOVIA	0x6f
     003E 04rr                      1- 1586     	SUBAR	_workTime,W
     003F                           1- 1587     _00403_DS_:
     003F 0C03                      1- 1588     	BTRSC	STATUS,0
     0040 3rrr                      1- 1589     	LGOTO	_00208_DS_
                                    1- 1590     	.line	171, "main.c"; 	MOTOR = 1;
                                    1- 1591     	BANKSEL	_PORTA
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 19rr                      1- 1592     	BSR	_PORTA,2
     0043 3rrr                      1- 1593     	LGOTO	_00298_DS_
                                    1- 1594     ;;unsigned compare: left < lit (0x8E=142), size=2
     0044                           1- 1595     _00208_DS_:
                                    1- 1596     	.line	172, "main.c"; 	else if(workTime < 142)
     0044 2100                      1- 1597     	MOVIA	0x00
                                    1- 1598     	BANKSEL	_workTime
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 04rr                      1- 1599     	SUBAR	(_workTime + 1),W
     0047 0903                      1- 1600     	BTRSS	STATUS,2
     0048 3rrr                      1- 1601     	LGOTO	_00404_DS_
     0049 218E                      1- 1602     	MOVIA	0x8e
     004A 04rr                      1- 1603     	SUBAR	_workTime,W
     004B                           1- 1604     _00404_DS_:
     004B 0C03                      1- 1605     	BTRSC	STATUS,0
     004C 3rrr                      1- 1606     	LGOTO	_00205_DS_
                                    1- 1607     	.line	173, "main.c"; 	MOTOR = 0;
                                    1- 1608     	BANKSEL	_PORTA
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 1Drr                      1- 1609     	BCR	_PORTA,2
     004F 3rrr                      1- 1610     	LGOTO	_00298_DS_
                                    1- 1611     ;;unsigned compare: left < lit (0xAE=174), size=2
     0050                           1- 1612     _00205_DS_:
                                    1- 1613     	.line	174, "main.c"; 	else if(workTime < 174)
     0050 2100                      1- 1614     	MOVIA	0x00
                                    1- 1615     	BANKSEL	_workTime
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 04rr                      1- 1616     	SUBAR	(_workTime + 1),W
     0053 0903                      1- 1617     	BTRSS	STATUS,2
     0054 3rrr                      1- 1618     	LGOTO	_00405_DS_
     0055 21AE                      1- 1619     	MOVIA	0xae
     0056 04rr                      1- 1620     	SUBAR	_workTime,W
     0057                           1- 1621     _00405_DS_:
     0057 0C03                      1- 1622     	BTRSC	STATUS,0
     0058 3rrr                      1- 1623     	LGOTO	_00202_DS_
                                    1- 1624     	.line	175, "main.c"; 	MOTOR = 1;
                                    1- 1625     	BANKSEL	_PORTA
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 19rr                      1- 1626     	BSR	_PORTA,2
     005B 3rrr                      1- 1627     	LGOTO	_00298_DS_
     005C                           1- 1628     _00202_DS_:
                                    1- 1629     	.line	178, "main.c"; 	MOTOR = 0;
                                    1- 1630     	BANKSEL	_PORTA
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 1Drr                      1- 1631     	BCR	_PORTA,2
                                    1- 1632     	.line	179, "main.c"; 	rockStep = 0;
                                    1- 1633     	BANKSEL	_rockStep
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 02rr                      1- 1634     	CLRR	_rockStep
     0060 3rrr                      1- 1635     	LGOTO	_00298_DS_
     0061                           1- 1636     _00296_DS_:
                                    1- 1637     	.line	182, "main.c"; 	else if(rockStep == 2)
                                    1- 1638     	BANKSEL	_rockStep
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 01rr                      1- 1639     	MOVR	_rockStep,W
     0063 2402                      1- 1640     	XORIA	0x02
     0064 0903                      1- 1641     	BTRSS	STATUS,2
     0065 3rrr                      1- 1642     	LGOTO	_00298_DS_
                                    1- 1643     	.line	184, "main.c"; 	++workTime;
                                    1- 1644     	BANKSEL	_workTime
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 05rr                      1- 1645     	INCR	_workTime,F
     0068 0D03                      1- 1646     	BTRSC	STATUS,2
     0069 05rr                      1- 1647     	INCR	(_workTime + 1),F
                                    1- 1648     ;;unsigned compare: left < lit (0x4F=79), size=2
                                    1- 1649     	.line	185, "main.c"; 	if(workTime < 79)
     006A 2100                      1- 1650     	MOVIA	0x00
     006B 04rr                      1- 1651     	SUBAR	(_workTime + 1),W
     006C 0903                      1- 1652     	BTRSS	STATUS,2
     006D 3rrr                      1- 1653     	LGOTO	_00406_DS_
     006E 214F                      1- 1654     	MOVIA	0x4f
     006F 04rr                      1- 1655     	SUBAR	_workTime,W
     0070                           1- 1656     _00406_DS_:
     0070 0C03                      1- 1657     	BTRSC	STATUS,0
     0071 3rrr                      1- 1658     	LGOTO	_00223_DS_
                                    1- 1659     	.line	186, "main.c"; 	MOTOR = 0;
                                    1- 1660     	BANKSEL	_PORTA
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 1Drr                      1- 1661     	BCR	_PORTA,2
                                    1- 1662     ;;unsigned compare: left < lit (0x5A=90), size=2
     0074                           1- 1663     _00223_DS_:
                                    1- 1664     	.line	187, "main.c"; 	if(workTime < 90)
     0074 2100                      1- 1665     	MOVIA	0x00
                                    1- 1666     	BANKSEL	_workTime
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 04rr                      1- 1667     	SUBAR	(_workTime + 1),W
     0077 0903                      1- 1668     	BTRSS	STATUS,2
     0078 3rrr                      1- 1669     	LGOTO	_00407_DS_
     0079 215A                      1- 1670     	MOVIA	0x5a
     007A 04rr                      1- 1671     	SUBAR	_workTime,W
     007B                           1- 1672     _00407_DS_:
     007B 0C03                      1- 1673     	BTRSC	STATUS,0
     007C 3rrr                      1- 1674     	LGOTO	_00291_DS_
                                    1- 1675     	.line	188, "main.c"; 	MOTOR = 1;
                                    1- 1676     	BANKSEL	_PORTA
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 19rr                      1- 1677     	BSR	_PORTA,2
     007F 3rrr                      1- 1678     	LGOTO	_00298_DS_
                                    1- 1679     ;;unsigned compare: left < lit (0x5F=95), size=2
     0080                           1- 1680     _00291_DS_:
                                    1- 1681     	.line	189, "main.c"; 	else if(workTime < 95)
     0080 2100                      1- 1682     	MOVIA	0x00
                                    1- 1683     	BANKSEL	_workTime
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 04rr                      1- 1684     	SUBAR	(_workTime + 1),W
     0083 0903                      1- 1685     	BTRSS	STATUS,2
     0084 3rrr                      1- 1686     	LGOTO	_00408_DS_
     0085 215F                      1- 1687     	MOVIA	0x5f
     0086 04rr                      1- 1688     	SUBAR	_workTime,W
     0087                           1- 1689     _00408_DS_:
     0087 0C03                      1- 1690     	BTRSC	STATUS,0
     0088 3rrr                      1- 1691     	LGOTO	_00288_DS_
                                    1- 1692     	.line	190, "main.c"; 	MOTOR = 0;
                                    1- 1693     	BANKSEL	_PORTA
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 1Drr                      1- 1694     	BCR	_PORTA,2
     008B 3rrr                      1- 1695     	LGOTO	_00298_DS_
                                    1- 1696     ;;unsigned compare: left < lit (0x70=112), size=2
     008C                           1- 1697     _00288_DS_:
                                    1- 1698     	.line	191, "main.c"; 	else if(workTime < 112)
     008C 2100                      1- 1699     	MOVIA	0x00
                                    1- 1700     	BANKSEL	_workTime
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 04rr                      1- 1701     	SUBAR	(_workTime + 1),W
     008F 0903                      1- 1702     	BTRSS	STATUS,2
     0090 3rrr                      1- 1703     	LGOTO	_00409_DS_
     0091 2170                      1- 1704     	MOVIA	0x70
     0092 04rr                      1- 1705     	SUBAR	_workTime,W
     0093                           1- 1706     _00409_DS_:
     0093 0C03                      1- 1707     	BTRSC	STATUS,0
     0094 3rrr                      1- 1708     	LGOTO	_00285_DS_
                                    1- 1709     	.line	192, "main.c"; 	MOTOR = 1;
                                    1- 1710     	BANKSEL	_PORTA
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 19rr                      1- 1711     	BSR	_PORTA,2
     0097 3rrr                      1- 1712     	LGOTO	_00298_DS_
                                    1- 1713     ;;unsigned compare: left < lit (0x73=115), size=2
     0098                           1- 1714     _00285_DS_:
                                    1- 1715     	.line	193, "main.c"; 	else if(workTime < 115)
     0098 2100                      1- 1716     	MOVIA	0x00
                                    1- 1717     	BANKSEL	_workTime
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 04rr                      1- 1718     	SUBAR	(_workTime + 1),W
     009B 0903                      1- 1719     	BTRSS	STATUS,2
     009C 3rrr                      1- 1720     	LGOTO	_00410_DS_
     009D 2173                      1- 1721     	MOVIA	0x73
     009E 04rr                      1- 1722     	SUBAR	_workTime,W
     009F                           1- 1723     _00410_DS_:
     009F 0C03                      1- 1724     	BTRSC	STATUS,0
     00A0 3rrr                      1- 1725     	LGOTO	_00282_DS_
                                    1- 1726     	.line	194, "main.c"; 	MOTOR = 0;
                                    1- 1727     	BANKSEL	_PORTA
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 1Drr                      1- 1728     	BCR	_PORTA,2
     00A3 3rrr                      1- 1729     	LGOTO	_00298_DS_
                                    1- 1730     ;;unsigned compare: left < lit (0x81=129), size=2
     00A4                           1- 1731     _00282_DS_:
                                    1- 1732     	.line	195, "main.c"; 	else if(workTime < 129)
     00A4 2100                      1- 1733     	MOVIA	0x00
                                    1- 1734     	BANKSEL	_workTime
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 04rr                      1- 1735     	SUBAR	(_workTime + 1),W
     00A7 0903                      1- 1736     	BTRSS	STATUS,2
     00A8 3rrr                      1- 1737     	LGOTO	_00411_DS_
     00A9 2181                      1- 1738     	MOVIA	0x81
     00AA 04rr                      1- 1739     	SUBAR	_workTime,W
     00AB                           1- 1740     _00411_DS_:
     00AB 0C03                      1- 1741     	BTRSC	STATUS,0
     00AC 3rrr                      1- 1742     	LGOTO	_00279_DS_
                                    1- 1743     	.line	196, "main.c"; 	MOTOR = 1;
                                    1- 1744     	BANKSEL	_PORTA
     00AD rrrr                      3-   71 m1      .banksel ram_address
     00AE 19rr                      1- 1745     	BSR	_PORTA,2
     00AF 3rrr                      1- 1746     	LGOTO	_00298_DS_
                                    1- 1747     ;;unsigned compare: left < lit (0xA4=164), size=2
     00B0                           1- 1748     _00279_DS_:
                                    1- 1749     	.line	197, "main.c"; 	else if(workTime < 164)
     00B0 2100                      1- 1750     	MOVIA	0x00
                                    1- 1751     	BANKSEL	_workTime
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 04rr                      1- 1752     	SUBAR	(_workTime + 1),W
     00B3 0903                      1- 1753     	BTRSS	STATUS,2
     00B4 3rrr                      1- 1754     	LGOTO	_00412_DS_
     00B5 21A4                      1- 1755     	MOVIA	0xa4
     00B6 04rr                      1- 1756     	SUBAR	_workTime,W
     00B7                           1- 1757     _00412_DS_:
     00B7 0C03                      1- 1758     	BTRSC	STATUS,0
     00B8 3rrr                      1- 1759     	LGOTO	_00276_DS_
                                    1- 1760     	.line	198, "main.c"; 	MOTOR = 0;
                                    1- 1761     	BANKSEL	_PORTA
     00B9 rrrr                      3-   71 m1      .banksel ram_address
     00BA 1Drr                      1- 1762     	BCR	_PORTA,2
     00BB 3rrr                      1- 1763     	LGOTO	_00298_DS_
                                    1- 1764     ;;unsigned compare: left < lit (0xAF=175), size=2
     00BC                           1- 1765     _00276_DS_:
                                    1- 1766     	.line	199, "main.c"; 	else if(workTime < 175)
     00BC 2100                      1- 1767     	MOVIA	0x00
                                    1- 1768     	BANKSEL	_workTime
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 04rr                      1- 1769     	SUBAR	(_workTime + 1),W
     00BF 0903                      1- 1770     	BTRSS	STATUS,2
     00C0 3rrr                      1- 1771     	LGOTO	_00413_DS_
     00C1 21AF                      1- 1772     	MOVIA	0xaf
     00C2 04rr                      1- 1773     	SUBAR	_workTime,W
     00C3                           1- 1774     _00413_DS_:
     00C3 0C03                      1- 1775     	BTRSC	STATUS,0
     00C4 3rrr                      1- 1776     	LGOTO	_00273_DS_
                                    1- 1777     	.line	200, "main.c"; 	MOTOR = 1;
                                    1- 1778     	BANKSEL	_PORTA
     00C5 rrrr                      3-   71 m1      .banksel ram_address
     00C6 19rr                      1- 1779     	BSR	_PORTA,2
     00C7 3rrr                      1- 1780     	LGOTO	_00298_DS_
                                    1- 1781     ;;unsigned compare: left < lit (0xB4=180), size=2
     00C8                           1- 1782     _00273_DS_:
                                    1- 1783     	.line	201, "main.c"; 	else if(workTime < 180)
     00C8 2100                      1- 1784     	MOVIA	0x00
                                    1- 1785     	BANKSEL	_workTime
     00C9 rrrr                      3-   71 m1      .banksel ram_address
     00CA 04rr                      1- 1786     	SUBAR	(_workTime + 1),W
     00CB 0903                      1- 1787     	BTRSS	STATUS,2
     00CC 3rrr                      1- 1788     	LGOTO	_00414_DS_
     00CD 21B4                      1- 1789     	MOVIA	0xb4
     00CE 04rr                      1- 1790     	SUBAR	_workTime,W
     00CF                           1- 1791     _00414_DS_:
     00CF 0C03                      1- 1792     	BTRSC	STATUS,0
     00D0 3rrr                      1- 1793     	LGOTO	_00270_DS_
                                    1- 1794     	.line	202, "main.c"; 	MOTOR = 0;
                                    1- 1795     	BANKSEL	_PORTA
     00D1 rrrr                      3-   71 m1      .banksel ram_address
     00D2 1Drr                      1- 1796     	BCR	_PORTA,2
     00D3 3rrr                      1- 1797     	LGOTO	_00298_DS_
                                    1- 1798     ;;unsigned compare: left < lit (0xC5=197), size=2
     00D4                           1- 1799     _00270_DS_:
                                    1- 1800     	.line	203, "main.c"; 	else if(workTime < 197)
     00D4 2100                      1- 1801     	MOVIA	0x00
                                    1- 1802     	BANKSEL	_workTime
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 04rr                      1- 1803     	SUBAR	(_workTime + 1),W
     00D7 0903                      1- 1804     	BTRSS	STATUS,2
     00D8 3rrr                      1- 1805     	LGOTO	_00415_DS_
     00D9 21C5                      1- 1806     	MOVIA	0xc5
     00DA 04rr                      1- 1807     	SUBAR	_workTime,W
     00DB                           1- 1808     _00415_DS_:
     00DB 0C03                      1- 1809     	BTRSC	STATUS,0
     00DC 3rrr                      1- 1810     	LGOTO	_00267_DS_
                                    1- 1811     	.line	204, "main.c"; 	MOTOR = 1;
                                    1- 1812     	BANKSEL	_PORTA
     00DD rrrr                      3-   71 m1      .banksel ram_address
     00DE 19rr                      1- 1813     	BSR	_PORTA,2
     00DF 3rrr                      1- 1814     	LGOTO	_00298_DS_
                                    1- 1815     ;;unsigned compare: left < lit (0xC8=200), size=2
     00E0                           1- 1816     _00267_DS_:
                                    1- 1817     	.line	205, "main.c"; 	else if(workTime < 200)
     00E0 2100                      1- 1818     	MOVIA	0x00
                                    1- 1819     	BANKSEL	_workTime
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 04rr                      1- 1820     	SUBAR	(_workTime + 1),W
     00E3 0903                      1- 1821     	BTRSS	STATUS,2
     00E4 3rrr                      1- 1822     	LGOTO	_00416_DS_
     00E5 21C8                      1- 1823     	MOVIA	0xc8
     00E6 04rr                      1- 1824     	SUBAR	_workTime,W
     00E7                           1- 1825     _00416_DS_:
     00E7 0C03                      1- 1826     	BTRSC	STATUS,0
     00E8 3rrr                      1- 1827     	LGOTO	_00264_DS_
                                    1- 1828     	.line	206, "main.c"; 	MOTOR = 0;
                                    1- 1829     	BANKSEL	_PORTA
     00E9 rrrr                      3-   71 m1      .banksel ram_address
     00EA 1Drr                      1- 1830     	BCR	_PORTA,2
     00EB 3rrr                      1- 1831     	LGOTO	_00298_DS_
                                    1- 1832     ;;unsigned compare: left < lit (0xD6=214), size=2
     00EC                           1- 1833     _00264_DS_:
                                    1- 1834     	.line	207, "main.c"; 	else if(workTime < 214)
     00EC 2100                      1- 1835     	MOVIA	0x00
                                    1- 1836     	BANKSEL	_workTime
     00ED rrrr                      3-   71 m1      .banksel ram_address
     00EE 04rr                      1- 1837     	SUBAR	(_workTime + 1),W
     00EF 0903                      1- 1838     	BTRSS	STATUS,2
     00F0 3rrr                      1- 1839     	LGOTO	_00417_DS_
     00F1 21D6                      1- 1840     	MOVIA	0xd6
     00F2 04rr                      1- 1841     	SUBAR	_workTime,W
     00F3                           1- 1842     _00417_DS_:
     00F3 0C03                      1- 1843     	BTRSC	STATUS,0
     00F4 3rrr                      1- 1844     	LGOTO	_00261_DS_
                                    1- 1845     	.line	208, "main.c"; 	MOTOR = 1;
                                    1- 1846     	BANKSEL	_PORTA
     00F5 rrrr                      3-   71 m1      .banksel ram_address
     00F6 19rr                      1- 1847     	BSR	_PORTA,2
     00F7 3rrr                      1- 1848     	LGOTO	_00298_DS_
                                    1- 1849     ;;unsigned compare: left < lit (0xF9=249), size=2
     00F8                           1- 1850     _00261_DS_:
                                    1- 1851     	.line	209, "main.c"; 	else if(workTime < 249)
     00F8 2100                      1- 1852     	MOVIA	0x00
                                    1- 1853     	BANKSEL	_workTime
     00F9 rrrr                      3-   71 m1      .banksel ram_address
     00FA 04rr                      1- 1854     	SUBAR	(_workTime + 1),W
     00FB 0903                      1- 1855     	BTRSS	STATUS,2
     00FC 3rrr                      1- 1856     	LGOTO	_00418_DS_
     00FD 21F9                      1- 1857     	MOVIA	0xf9
     00FE 04rr                      1- 1858     	SUBAR	_workTime,W
     00FF                           1- 1859     _00418_DS_:
     00FF 0C03                      1- 1860     	BTRSC	STATUS,0
     0100 3rrr                      1- 1861     	LGOTO	_00258_DS_
                                    1- 1862     	.line	210, "main.c"; 	MOTOR = 0;
                                    1- 1863     	BANKSEL	_PORTA
     0101 rrrr                      3-   71 m1      .banksel ram_address
     0102 1Drr                      1- 1864     	BCR	_PORTA,2
     0103 3rrr                      1- 1865     	LGOTO	_00298_DS_
                                    1- 1866     ;;unsigned compare: left < lit (0x104=260), size=2
     0104                           1- 1867     _00258_DS_:
                                    1- 1868     	.line	211, "main.c"; 	else if(workTime < 260)
     0104 2101                      1- 1869     	MOVIA	0x01
                                    1- 1870     	BANKSEL	_workTime
     0105 rrrr                      3-   71 m1      .banksel ram_address
     0106 04rr                      1- 1871     	SUBAR	(_workTime + 1),W
     0107 0903                      1- 1872     	BTRSS	STATUS,2
     0108 3rrr                      1- 1873     	LGOTO	_00419_DS_
     0109 2104                      1- 1874     	MOVIA	0x04
     010A 04rr                      1- 1875     	SUBAR	_workTime,W
     010B                           1- 1876     _00419_DS_:
     010B 0C03                      1- 1877     	BTRSC	STATUS,0
     010C 3rrr                      1- 1878     	LGOTO	_00255_DS_
                                    1- 1879     	.line	212, "main.c"; 	MOTOR = 1;
                                    1- 1880     	BANKSEL	_PORTA
     010D rrrr                      3-   71 m1      .banksel ram_address
     010E 19rr                      1- 1881     	BSR	_PORTA,2
     010F 3rrr                      1- 1882     	LGOTO	_00298_DS_
                                    1- 1883     ;;unsigned compare: left < lit (0x109=265), size=2
     0110                           1- 1884     _00255_DS_:
                                    1- 1885     	.line	213, "main.c"; 	else if(workTime < 265)
     0110 2101                      1- 1886     	MOVIA	0x01
                                    1- 1887     	BANKSEL	_workTime
     0111 rrrr                      3-   71 m1      .banksel ram_address
     0112 04rr                      1- 1888     	SUBAR	(_workTime + 1),W
     0113 0903                      1- 1889     	BTRSS	STATUS,2
     0114 3rrr                      1- 1890     	LGOTO	_00420_DS_
     0115 2109                      1- 1891     	MOVIA	0x09
     0116 04rr                      1- 1892     	SUBAR	_workTime,W
     0117                           1- 1893     _00420_DS_:
     0117 0C03                      1- 1894     	BTRSC	STATUS,0
     0118 3rrr                      1- 1895     	LGOTO	_00252_DS_
                                    1- 1896     	.line	214, "main.c"; 	MOTOR = 0;
                                    1- 1897     	BANKSEL	_PORTA
     0119 rrrr                      3-   71 m1      .banksel ram_address
     011A 1Drr                      1- 1898     	BCR	_PORTA,2
     011B 3rrr                      1- 1899     	LGOTO	_00298_DS_
                                    1- 1900     ;;unsigned compare: left < lit (0x11A=282), size=2
     011C                           1- 1901     _00252_DS_:
                                    1- 1902     	.line	215, "main.c"; 	else if(workTime < 282)
     011C 2101                      1- 1903     	MOVIA	0x01
                                    1- 1904     	BANKSEL	_workTime
     011D rrrr                      3-   71 m1      .banksel ram_address
     011E 04rr                      1- 1905     	SUBAR	(_workTime + 1),W
     011F 0903                      1- 1906     	BTRSS	STATUS,2
     0120 3rrr                      1- 1907     	LGOTO	_00421_DS_
     0121 211A                      1- 1908     	MOVIA	0x1a
     0122 04rr                      1- 1909     	SUBAR	_workTime,W
     0123                           1- 1910     _00421_DS_:
     0123 0C03                      1- 1911     	BTRSC	STATUS,0
     0124 3rrr                      1- 1912     	LGOTO	_00249_DS_
                                    1- 1913     	.line	216, "main.c"; 	MOTOR = 1;
                                    1- 1914     	BANKSEL	_PORTA
     0125 rrrr                      3-   71 m1      .banksel ram_address
     0126 19rr                      1- 1915     	BSR	_PORTA,2
     0127 3rrr                      1- 1916     	LGOTO	_00298_DS_
                                    1- 1917     ;;unsigned compare: left < lit (0x11D=285), size=2
     0128                           1- 1918     _00249_DS_:
                                    1- 1919     	.line	217, "main.c"; 	else if(workTime < 285)
     0128 2101                      1- 1920     	MOVIA	0x01
                                    1- 1921     	BANKSEL	_workTime
     0129 rrrr                      3-   71 m1      .banksel ram_address
     012A 04rr                      1- 1922     	SUBAR	(_workTime + 1),W
     012B 0903                      1- 1923     	BTRSS	STATUS,2
     012C 3rrr                      1- 1924     	LGOTO	_00422_DS_
     012D 211D                      1- 1925     	MOVIA	0x1d
     012E 04rr                      1- 1926     	SUBAR	_workTime,W
     012F                           1- 1927     _00422_DS_:
     012F 0C03                      1- 1928     	BTRSC	STATUS,0
     0130 3rrr                      1- 1929     	LGOTO	_00246_DS_
                                    1- 1930     	.line	218, "main.c"; 	MOTOR = 0;
                                    1- 1931     	BANKSEL	_PORTA
     0131 rrrr                      3-   71 m1      .banksel ram_address
     0132 1Drr                      1- 1932     	BCR	_PORTA,2
     0133 3rrr                      1- 1933     	LGOTO	_00298_DS_
                                    1- 1934     ;;unsigned compare: left < lit (0x12C=300), size=2
     0134                           1- 1935     _00246_DS_:
                                    1- 1936     	.line	219, "main.c"; 	else if(workTime < 300)
     0134 2101                      1- 1937     	MOVIA	0x01
                                    1- 1938     	BANKSEL	_workTime
     0135 rrrr                      3-   71 m1      .banksel ram_address
     0136 04rr                      1- 1939     	SUBAR	(_workTime + 1),W
     0137 0903                      1- 1940     	BTRSS	STATUS,2
     0138 3rrr                      1- 1941     	LGOTO	_00423_DS_
     0139 212C                      1- 1942     	MOVIA	0x2c
     013A 04rr                      1- 1943     	SUBAR	_workTime,W
     013B                           1- 1944     _00423_DS_:
     013B 0C03                      1- 1945     	BTRSC	STATUS,0
     013C 3rrr                      1- 1946     	LGOTO	_00243_DS_
                                    1- 1947     	.line	220, "main.c"; 	MOTOR = 1;
                                    1- 1948     	BANKSEL	_PORTA
     013D rrrr                      3-   71 m1      .banksel ram_address
     013E 19rr                      1- 1949     	BSR	_PORTA,2
     013F 3rrr                      1- 1950     	LGOTO	_00298_DS_
                                    1- 1951     ;;unsigned compare: left < lit (0x14D=333), size=2
     0140                           1- 1952     _00243_DS_:
                                    1- 1953     	.line	221, "main.c"; 	else if(workTime < 333)
     0140 2101                      1- 1954     	MOVIA	0x01
                                    1- 1955     	BANKSEL	_workTime
     0141 rrrr                      3-   71 m1      .banksel ram_address
     0142 04rr                      1- 1956     	SUBAR	(_workTime + 1),W
     0143 0903                      1- 1957     	BTRSS	STATUS,2
     0144 3rrr                      1- 1958     	LGOTO	_00424_DS_
     0145 214D                      1- 1959     	MOVIA	0x4d
     0146 04rr                      1- 1960     	SUBAR	_workTime,W
     0147                           1- 1961     _00424_DS_:
     0147 0C03                      1- 1962     	BTRSC	STATUS,0
     0148 3rrr                      1- 1963     	LGOTO	_00240_DS_
                                    1- 1964     	.line	222, "main.c"; 	MOTOR = 0;
                                    1- 1965     	BANKSEL	_PORTA
     0149 rrrr                      3-   71 m1      .banksel ram_address
     014A 1Drr                      1- 1966     	BCR	_PORTA,2
     014B 3rrr                      1- 1967     	LGOTO	_00298_DS_
                                    1- 1968     ;;unsigned compare: left < lit (0x158=344), size=2
     014C                           1- 1969     _00240_DS_:
                                    1- 1970     	.line	223, "main.c"; 	else if(workTime < 344)
     014C 2101                      1- 1971     	MOVIA	0x01
                                    1- 1972     	BANKSEL	_workTime
     014D rrrr                      3-   71 m1      .banksel ram_address
     014E 04rr                      1- 1973     	SUBAR	(_workTime + 1),W
     014F 0903                      1- 1974     	BTRSS	STATUS,2
     0150 3rrr                      1- 1975     	LGOTO	_00425_DS_
     0151 2158                      1- 1976     	MOVIA	0x58
     0152 04rr                      1- 1977     	SUBAR	_workTime,W
     0153                           1- 1978     _00425_DS_:
     0153 0C03                      1- 1979     	BTRSC	STATUS,0
     0154 3rrr                      1- 1980     	LGOTO	_00237_DS_
                                    1- 1981     	.line	224, "main.c"; 	MOTOR = 1;
                                    1- 1982     	BANKSEL	_PORTA
     0155 rrrr                      3-   71 m1      .banksel ram_address
     0156 19rr                      1- 1983     	BSR	_PORTA,2
     0157 3rrr                      1- 1984     	LGOTO	_00298_DS_
                                    1- 1985     ;;unsigned compare: left < lit (0x15E=350), size=2
     0158                           1- 1986     _00237_DS_:
                                    1- 1987     	.line	225, "main.c"; 	else if(workTime < 350)
     0158 2101                      1- 1988     	MOVIA	0x01
                                    1- 1989     	BANKSEL	_workTime
     0159 rrrr                      3-   71 m1      .banksel ram_address
     015A 04rr                      1- 1990     	SUBAR	(_workTime + 1),W
     015B 0903                      1- 1991     	BTRSS	STATUS,2
     015C 3rrr                      1- 1992     	LGOTO	_00426_DS_
     015D 215E                      1- 1993     	MOVIA	0x5e
     015E 04rr                      1- 1994     	SUBAR	_workTime,W
     015F                           1- 1995     _00426_DS_:
     015F 0C03                      1- 1996     	BTRSC	STATUS,0
     0160 3rrr                      1- 1997     	LGOTO	_00234_DS_
                                    1- 1998     	.line	226, "main.c"; 	MOTOR = 0;
                                    1- 1999     	BANKSEL	_PORTA
     0161 rrrr                      3-   71 m1      .banksel ram_address
     0162 1Drr                      1- 2000     	BCR	_PORTA,2
     0163 3rrr                      1- 2001     	LGOTO	_00298_DS_
                                    1- 2002     ;;unsigned compare: left < lit (0x16E=366), size=2
     0164                           1- 2003     _00234_DS_:
                                    1- 2004     	.line	227, "main.c"; 	else if(workTime < 366)
     0164 2101                      1- 2005     	MOVIA	0x01
                                    1- 2006     	BANKSEL	_workTime
     0165 rrrr                      3-   71 m1      .banksel ram_address
     0166 04rr                      1- 2007     	SUBAR	(_workTime + 1),W
     0167 0903                      1- 2008     	BTRSS	STATUS,2
     0168 3rrr                      1- 2009     	LGOTO	_00427_DS_
     0169 216E                      1- 2010     	MOVIA	0x6e
     016A 04rr                      1- 2011     	SUBAR	_workTime,W
     016B                           1- 2012     _00427_DS_:
     016B 0C03                      1- 2013     	BTRSC	STATUS,0
     016C 3rrr                      1- 2014     	LGOTO	_00231_DS_
                                    1- 2015     	.line	228, "main.c"; 	MOTOR = 1;
                                    1- 2016     	BANKSEL	_PORTA
     016D rrrr                      3-   71 m1      .banksel ram_address
     016E 19rr                      1- 2017     	BSR	_PORTA,2
     016F 3rrr                      1- 2018     	LGOTO	_00298_DS_
                                    1- 2019     ;;unsigned compare: left < lit (0x172=370), size=2
     0170                           1- 2020     _00231_DS_:
                                    1- 2021     	.line	229, "main.c"; 	else if(workTime < 370)
     0170 2101                      1- 2022     	MOVIA	0x01
                                    1- 2023     	BANKSEL	_workTime
     0171 rrrr                      3-   71 m1      .banksel ram_address
     0172 04rr                      1- 2024     	SUBAR	(_workTime + 1),W
     0173 0903                      1- 2025     	BTRSS	STATUS,2
     0174 3rrr                      1- 2026     	LGOTO	_00428_DS_
     0175 2172                      1- 2027     	MOVIA	0x72
     0176 04rr                      1- 2028     	SUBAR	_workTime,W
     0177                           1- 2029     _00428_DS_:
     0177 0C03                      1- 2030     	BTRSC	STATUS,0
     0178 3rrr                      1- 2031     	LGOTO	_00228_DS_
                                    1- 2032     	.line	230, "main.c"; 	MOTOR = 0;
                                    1- 2033     	BANKSEL	_PORTA
     0179 rrrr                      3-   71 m1      .banksel ram_address
     017A 1Drr                      1- 2034     	BCR	_PORTA,2
     017B 3rrr                      1- 2035     	LGOTO	_00298_DS_
                                    1- 2036     ;;unsigned compare: left < lit (0x180=384), size=2
     017C                           1- 2037     _00228_DS_:
                                    1- 2038     	.line	231, "main.c"; 	else if(workTime < 384)
     017C 2101                      1- 2039     	MOVIA	0x01
                                    1- 2040     	BANKSEL	_workTime
     017D rrrr                      3-   71 m1      .banksel ram_address
     017E 04rr                      1- 2041     	SUBAR	(_workTime + 1),W
     017F 0903                      1- 2042     	BTRSS	STATUS,2
     0180 3rrr                      1- 2043     	LGOTO	_00429_DS_
     0181 2180                      1- 2044     	MOVIA	0x80
     0182 04rr                      1- 2045     	SUBAR	_workTime,W
     0183                           1- 2046     _00429_DS_:
     0183 0C03                      1- 2047     	BTRSC	STATUS,0
     0184 3rrr                      1- 2048     	LGOTO	_00225_DS_
                                    1- 2049     	.line	232, "main.c"; 	MOTOR = 1;
                                    1- 2050     	BANKSEL	_PORTA
     0185 rrrr                      3-   71 m1      .banksel ram_address
     0186 19rr                      1- 2051     	BSR	_PORTA,2
     0187 3rrr                      1- 2052     	LGOTO	_00298_DS_
     0188                           1- 2053     _00225_DS_:
                                    1- 2054     	.line	235, "main.c"; 	MOTOR = 0;
                                    1- 2055     	BANKSEL	_PORTA
     0188 rrrr                      3-   71 m1      .banksel ram_address
     0189 1Drr                      1- 2056     	BCR	_PORTA,2
                                    1- 2057     	.line	236, "main.c"; 	rockStep = 0;
                                    1- 2058     	BANKSEL	_rockStep
     018A rrrr                      3-   71 m1      .banksel ram_address
     018B 02rr                      1- 2059     	CLRR	_rockStep
                                    1- 2060     	.line	237, "main.c"; 	rockTime = 0;
                                    1- 2061     	BANKSEL	_rockTime
     018C rrrr                      3-   71 m1      .banksel ram_address
     018D 02rr                      1- 2062     	CLRR	_rockTime
                                    1- 2063     	.line	238, "main.c"; 	workTime = 0;
                                    1- 2064     	BANKSEL	_workTime
     018E rrrr                      3-   71 m1      .banksel ram_address
     018F 02rr                      1- 2065     	CLRR	_workTime
     0190 02rr                      1- 2066     	CLRR	(_workTime + 1)
     0191                           1- 2067     _00298_DS_:
                                    1- 2068     	.line	241, "main.c"; 	}
                                    1- 2069     	RETURN	
     0191 0010                      3-   26 m1      ret
                                    1- 2070     ; exit point of _workCtr
                                    1- 2073     ;	code size estimation:
                                    1- 2074     ;	  843+  224 =  1067 instructions ( 2582 byte)
                                    1- 2076     	end
                                    1- 2076     	end

SYMBOL TABLE            TYPE     VALUE
___fs2schar             Label    00000000
___fs2sint              Label    00000000
___fs2slong             Label    00000000
___fs2uchar             Label    00000000
___fs2uint              Label    00000000
___fs2ulong             Label    00000000
___fsadd                Label    00000000
___fsdiv                Label    00000000
___fseq                 Label    00000000
___fsgt                 Label    00000000
___fslt                 Label    00000000
___fsmul                Label    00000000
___fsneq                Label    00000000
___fssub                Label    00000000
___schar2fs             Label    00000000
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
___sint2fs              Label    00000000
___slong2fs             Label    00000000
___uchar2fs             Label    00000000
___uint2fs              Label    00000000
___ulong2fs             Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__gptrget1              Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002F
_00002_DS_              Label    00000040
_00003_DS_              Label    0000000A
_00004_DS_              Label    0000000E
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00120_DS_              Label    00000056
_00123_DS_              Label    00000061
_00127_DS_              Label    00000087
_00128_DS_              Label    0000008B
_00132_DS_              Label    0000008F
_00137_DS_              Label    000000AD
_00143_DS_              Label    0000002B
_00196_DS_              Label    000000A9
_00202_DS_              Label    0000005C
_00205_DS_              Label    00000050
_00208_DS_              Label    00000044
_00211_DS_              Label    00000038
_00214_DS_              Label    0000002C
_00217_DS_              Label    00000020
_00220_DS_              Label    00000014
_00223_DS_              Label    00000074
_00225_DS_              Label    00000188
_00228_DS_              Label    0000017C
_00231_DS_              Label    00000170
_00234_DS_              Label    00000164
_00237_DS_              Label    00000158
_00240_DS_              Label    0000014C
_00243_DS_              Label    00000140
_00246_DS_              Label    00000134
_00249_DS_              Label    00000128
_00252_DS_              Label    0000011C
_00255_DS_              Label    00000110
_00258_DS_              Label    00000104
_00261_DS_              Label    000000F8
_00264_DS_              Label    000000EC
_00267_DS_              Label    000000E0
_00270_DS_              Label    000000D4
_00273_DS_              Label    000000C8
_00276_DS_              Label    000000BC
_00279_DS_              Label    000000B0
_00282_DS_              Label    000000A4
_00285_DS_              Label    00000098
_00288_DS_              Label    0000008C
_00291_DS_              Label    00000080
_00296_DS_              Label    00000061
_00298_DS_              Label    00000191
_00399_DS_              Label    0000000F
_00400_DS_              Label    0000001B
_00401_DS_              Label    00000027
_00402_DS_              Label    00000033
_00403_DS_              Label    0000003F
_00404_DS_              Label    0000004B
_00405_DS_              Label    00000057
_00406_DS_              Label    00000070
_00407_DS_              Label    0000007B
_00408_DS_              Label    00000087
_00409_DS_              Label    00000093
_00410_DS_              Label    0000009F
_00411_DS_              Label    000000AB
_00412_DS_              Label    000000B7
_00413_DS_              Label    000000C3
_00414_DS_              Label    000000CF
_00415_DS_              Label    000000DB
_00416_DS_              Label    000000E7
_00417_DS_              Label    000000F3
_00418_DS_              Label    000000FF
_00419_DS_              Label    0000010B
_00420_DS_              Label    00000117
_00421_DS_              Label    00000123
_00422_DS_              Label    0000012F
_00423_DS_              Label    0000013B
_00424_DS_              Label    00000147
_00425_DS_              Label    00000153
_00426_DS_              Label    0000015F
_00427_DS_              Label    0000016B
_00428_DS_              Label    00000177
_00429_DS_              Label    00000183
_00439_DS_              Label    0000001E
_00442_DS_              Label    00000027
_00444_DS_              Label    00000029
_00450_DS_              Label    0000007E
_00458_DS_              Label    000000A2
_00460_DS_              Label    000000A6
_00463_DS_              Label    000000C7
_00464_DS_              Label    000000C9
_00467_DS_              Label    000000B5
_00469_DS_              Label    000000A8
_00472_DS_              Label    000000CA
_00507_DS_              Label    0000005F
_00508_DS_              Label    0000006C
_00514_DS_              Label    000000B3
_00515_DS_              Label    000000BC
_00516_DS_              Label    000000C5
_00522_DS_              Label    0000000D
_00523_DS_              Label    00000010
_00525_DS_              Label    00000004
_00533_DS_              Label    00000016
_00535_DS_              Label    0000000E
_00536_DS_              Label    00000018
_00537_DS_              Label    00000019
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_baiwei                 Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkTime              Label    00000000
_chrgCtr                Label    00000000
_chrgStep               Label    00000000
_CMPCR                  Label    00000000
_deadTime               Label    00000000
_delay_ms               Label    00000000
_delay_us               Label    00000000
_Delay1000Us            Label    00000000
_Delay10Us              Label    00000000
_FSR                    Label    00000000
_getData                Label    00000000
_gewei                  Label    00000000
_gotoSleep              Label    00000000
_hz                     Label    00000000
_hzH                    Label    00000000
_hzL                    Label    00000000
_i2c_write_byte_data    Label    00000000
_IIC_Ack                Label    00000000
_IIC_NAck               Label    00000000
_IIC_Read_Byte          Label    00000000
_IIC_Send_Byte          Label    00000000
_IIC_Start              Label    00000000
_IIC_Stop               Label    00000000
_IIC_Wait_Ack           Label    00000000
_ind_light_disp         Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isCalibrated           Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_main                   Label    00000000
_msa_calibrate          Label    00000000
_msa_calibrateZ         Label    00000000
_msa_flip_init          Label    00000000
_msa_flip_process       Label    00000000
_msa_get_step           Label    00000000
_msa_init               Label    00000000
_msa_read_adc           Label    00000000
_msa_read_data          Label    00000000
_msa_ReadBytes          Label    00000000
_msa_register_read_continuously Label    00000000
_msa_sqrt               Label    00000000
_msa_WriteBytes         Label    00000000
_offset_z               Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_refreshLed             Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_rockFlag               Label    00000000
_rockStep               Label    00000000
_rockTime               Label    00000000
_SDA_IN                 Label    00000000
_SDA_OUT                Label    00000000
_shiwei                 Label    00000000
_sleepTime              Label    00000000
_STATUS                 Label    00000000
_SW_i2c_udelay          Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_table                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
_workTime               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
