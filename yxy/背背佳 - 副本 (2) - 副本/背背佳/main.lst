
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	___uchar2fs
                                    1-   15     	extern	___schar2fs
                                    1-   16     	extern	___uint2fs
                                    1-   17     	extern	___sint2fs
                                    1-   18     	extern	___ulong2fs
                                    1-   19     	extern	___slong2fs
                                    1-   20     	extern	___fs2uchar
                                    1-   21     	extern	___fs2schar
                                    1-   22     	extern	___fs2uint
                                    1-   23     	extern	___fs2sint
                                    1-   24     	extern	___fs2ulong
                                    1-   25     	extern	___fs2slong
                                    1-   26     	extern	___fsadd
                                    1-   27     	extern	___fssub
                                    1-   28     	extern	___fsmul
                                    1-   29     	extern	___fsdiv
                                    1-   30     	extern	___fslt
                                    1-   31     	extern	___fseq
                                    1-   32     	extern	___fsneq
                                    1-   33     	extern	___fsgt
                                    1-   34     	extern	_msa_init
                                    1-   35     	extern	_msa_read_data
                                    1-   36     	extern	_msa_get_step
                                    1-   37     	extern	_msa_register_read_continuously
                                    1-   38     	extern	_i2c_write_byte_data
                                    1-   39     	extern	_msa_WriteBytes
                                    1-   40     	extern	_msa_calibrate
                                    1-   41     	extern	_msa_calibrateZ
                                    1-   42     	extern	_msa_ReadBytes
                                    1-   43     	extern	_SW_i2c_udelay
                                    1-   44     	extern	_msa_read_adc
                                    1-   45     	extern	_msa_flip_init
                                    1-   46     	extern	_msa_flip_process
                                    1-   47     	extern	_msa_sqrt
                                    1-   48     	extern	_Delay1000Us
                                    1-   49     	extern	_Delay10Us
                                    1-   50     	extern	_IIC_Start
                                    1-   51     	extern	_IIC_Send_Byte
                                    1-   52     	extern	_IIC_Read_Byte
                                    1-   53     	extern	_SDA_OUT
                                    1-   54     	extern	_SDA_IN
                                    1-   55     	extern	_IIC_Ack
                                    1-   56     	extern	_IIC_NAck
                                    1-   57     	extern	_delay_us
                                    1-   58     	extern	_delay_ms
                                    1-   59     	extern	_IIC_Stop
                                    1-   60     	extern	_IIC_Wait_Ack
                                    1-   61     	extern	_PORTAbits
                                    1-   62     	extern	_PORTBbits
                                    1-   63     	extern	_PCONbits
                                    1-   64     	extern	_BWUCONbits
                                    1-   65     	extern	_ABPLCONbits
                                    1-   66     	extern	_BPHCONbits
                                    1-   67     	extern	_INTEbits
                                    1-   68     	extern	_INTFbits
                                    1-   69     	extern	_AWUCONbits
                                    1-   70     	extern	_INTEDGbits
                                    1-   71     	extern	_RFCbits
                                    1-   72     	extern	_INTE2bits
                                    1-   73     	extern	_offset_z
                                    1-   74     	extern	_isCalibrated
                                    1-   75     	extern	_INDF
                                    1-   76     	extern	_TMR0
                                    1-   77     	extern	_PCL
                                    1-   78     	extern	_STATUS
                                    1-   79     	extern	_FSR
                                    1-   80     	extern	_PORTA
                                    1-   81     	extern	_PORTB
                                    1-   82     	extern	_PCON
                                    1-   83     	extern	_BWUCON
                                    1-   84     	extern	_PCHBUF
                                    1-   85     	extern	_ABPLCON
                                    1-   86     	extern	_BPHCON
                                    1-   87     	extern	_INTE
                                    1-   88     	extern	_INTF
                                    1-   89     	extern	_AWUCON
                                    1-   90     	extern	_INTEDG
                                    1-   91     	extern	_TMRH
                                    1-   92     	extern	_RFC
                                    1-   93     	extern	_TM34RH
                                    1-   94     	extern	_INTE2
                                    1-   95     	extern	_TMR1
                                    1-   96     	extern	_T1CR1
                                    1-   97     	extern	_T1CR2
                                    1-   98     	extern	_PWM1DUTY
                                    1-   99     	extern	_PS1CV
                                    1-  100     	extern	_BZ1CR
                                    1-  101     	extern	_IRCR
                                    1-  102     	extern	_TBHP
                                    1-  103     	extern	_TBHD
                                    1-  104     	extern	_P2CR1
                                    1-  105     	extern	_PWM2DUTY
                                    1-  106     	extern	_OSCCR
                                    1-  107     	extern	_TMR3
                                    1-  108     	extern	_T3CR1
                                    1-  109     	extern	_T3CR2
                                    1-  110     	extern	_PWM3DUTY
                                    1-  111     	extern	_PS3CV
                                    1-  112     	extern	_P4CR1
                                    1-  113     	extern	_PWM4DUTY
                                    1-  114     	extern	_P5CR1
                                    1-  115     	extern	_PWM5DUTY
                                    1-  116     	extern	_PWM5RH
                                    1-  117     	extern	_IOSTA
                                    1-  118     	extern	_IOSTB
                                    1-  119     	extern	_APHCON
                                    1-  120     	extern	_PS0CV
                                    1-  121     	extern	_BODCON
                                    1-  122     	extern	_CMPCR
                                    1-  123     	extern	_PCON1
                                    1-  124     	extern	_T0MD
                                    1-  125     	extern	___sdcc_saved_fsr
                                    1-  126     	extern	___sdcc_saved_stk00
                                    1-  127     	extern	___sdcc_saved_stk01
                                    1-  128     	extern	__gptrget1
                                    1-  129     	extern	__nyc_ny8_startup
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; global declarations
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     	extern	_gotoSleep
                                    1-  134     	extern	_keyRead
                                    1-  135     	extern	_ind_light_disp
                                    1-  136     	extern	_getData
                                    1-  137     	extern	_chrgCtr
                                    1-  138     	extern	_refreshLed
                                    1-  139     	extern	_workCtr
                                    1-  140     	extern	_isr
                                    1-  141     	extern	_main
                                    1-  142     	extern	_hzH
                                    1-  143     	extern	_hzL
                                    1-  144     	extern	_hz
                                    1-  145     	extern	_chrgStep
                                    1-  146     	extern	_intCount
                                    1-  147     	extern	_IntFlag
                                    1-  148     	extern	_keyCount
                                    1-  149     	extern	_workStep
                                    1-  150     	extern	_baiwei
                                    1-  151     	extern	_shiwei
                                    1-  152     	extern	_gewei
                                    1-  153     	extern	_rockStep
                                    1-  154     	extern	_workTime
                                    1-  155     	extern	_sleepTime
                                    1-  157     	extern PSAVE
                                    1-  158     	extern SSAVE
                                    1-  159     	extern WSAVE
                                    1-  160     	extern STK12
                                    1-  161     	extern STK11
                                    1-  162     	extern STK10
                                    1-  163     	extern STK09
                                    1-  164     	extern STK08
                                    1-  165     	extern STK07
                                    1-  166     	extern STK06
                                    1-  167     	extern STK05
                                    1-  168     	extern STK04
                                    1-  169     	extern STK03
                                    1-  170     	extern STK02
                                    1-  171     	extern STK01
                                    1-  172     	extern STK00
                                    1-  174     .segment "uninit", 0x20000040
 20000040                           1-  175     PSAVE:
                                    1-  176     	.res 1
 20000041                           1-  177     SSAVE:
                                    1-  178     	.res 1
 20000042                           1-  179     WSAVE:
                                    1-  180     	.res 1
 20000043                           1-  181     STK12:
                                    1-  182     	.res 1
 20000044                           1-  183     STK11:
                                    1-  184     	.res 1
 20000045                           1-  185     STK10:
                                    1-  186     	.res 1
 20000046                           1-  187     STK09:
                                    1-  188     	.res 1
 20000047                           1-  189     STK08:
                                    1-  190     	.res 1
 20000048                           1-  191     STK07:
                                    1-  192     	.res 1
 20000049                           1-  193     STK06:
                                    1-  194     	.res 1
 2000004A                           1-  195     STK05:
                                    1-  196     	.res 1
 2000004B                           1-  197     STK04:
                                    1-  198     	.res 1
 2000004C                           1-  199     STK03:
                                    1-  200     	.res 1
 2000004D                           1-  201     STK02:
                                    1-  202     	.res 1
 2000004E                           1-  203     STK01:
                                    1-  204     	.res 1
 2000004F                           1-  205     STK00:
                                    1-  206     	.res 1
                                    1-  208     ;--------------------------------------------------------
                                    1-  209     ; global definitions
                                    1-  210     ;--------------------------------------------------------
                                    1-  211     .segment "uninit"
     0000                           1-  212     _hzH:
                                    1-  213     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     _hzL:
                                    1-  218     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     _baiwei:
                                    1-  223     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     _shiwei:
                                    1-  228     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     _gewei:
                                    1-  233     	.res	1
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; absolute symbol definitions
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ; compiler-defined variables
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x102C:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1029:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x102A:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x102B:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1028:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1025:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1024:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1026:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1027:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1022:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1023:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1021:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1020:
                                    1-  280     	.res	1
                                    1-  281     ;--------------------------------------------------------
                                    1-  282     ; initialized data
                                    1-  283     ;--------------------------------------------------------
                                    1-  285     .segment "idata"
     0000                           1-  286     _hz:
     0000 0000 0000                 1-  287     	dw	0x00, 0x00
                                    1-  291     .segment "idata"
     0000                           1-  292     _chrgStep:
     0000 0000                      1-  293     	dw	0x00
                                    1-  297     .segment "idata"
     0000                           1-  298     _intCount:
     0000 0000                      1-  299     	dw	0x00
                                    1-  303     .segment "idata"
     0000                           1-  304     _IntFlag:
     0000 0000                      1-  305     	dw	0x00
                                    1-  309     .segment "idata"
     0000                           1-  310     _keyCount:
     0000 0000                      1-  311     	dw	0x00
                                    1-  315     .segment "idata"
     0000                           1-  316     _workStep:
     0000 0000                      1-  317     	dw	0x00
                                    1-  321     .segment "idata"
     0000                           1-  322     _rockStep:
     0000 0000                      1-  323     	dw	0x00
                                    1-  327     .segment "idata"
     0000                           1-  328     _workTime:
     0000 0000 0000                 1-  329     	dw	0x00, 0x00
                                    1-  333     .segment "idata"
     0000                           1-  334     _sleepTime:
     0000 0000 0000                 1-  335     	dw	0x00, 0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _table:
     0000 003F                      1-  341     	dw	0x3f
     0001 0006                      1-  342     	dw	0x06
     0002 005B                      1-  343     	dw	0x5b
     0003 004F                      1-  344     	dw	0x4f
     0004 0066                      1-  345     	dw	0x66
     0005 006D                      1-  346     	dw	0x6d
     0006 007D                      1-  347     	dw	0x7d
     0007 0007                      1-  348     	dw	0x07
     0008 007F                      1-  349     	dw	0x7f
     0009 006F                      1-  350     	dw	0x6f
     000A 0071                      1-  351     	dw	0x71
     000B 0038                      1-  352     	dw	0x38
                                    1-  355     ;--------------------------------------------------------
                                    1-  356     ; overlayable items in internal ram 
                                    1-  357     ;--------------------------------------------------------
                                    1-  358     ;	udata_ovr
                                    1-  359     ;--------------------------------------------------------
                                    1-  360     ; reset vector 
                                    1-  361     ;--------------------------------------------------------
                                    1-  362     ORG	0x0000
     0000 3rrr                      1-  363     	LGOTO	__nyc_ny8_startup
                                    1-  364     ;--------------------------------------------------------
                                    1-  365     ; interrupt and initialization code
                                    1-  366     ;--------------------------------------------------------
                                    1-  367     ORG 0x0008
     0008 3rrr                      1-  368     	lgoto	__sdcc_interrupt
                                    1-  370     .segment "code"
     0000                           1-  371     __sdcc_interrupt:
                                    1-  372     ;***
                                    1-  373     ;  pBlock Stats: dbName = I
                                    1-  374     ;***
                                    1-  375     ;2 compiler assigned registers:
                                    1-  376     ;   STK00
                                    1-  377     ;   STK01
                                    1-  378     ;; Starting pCode block
     0000                           1-  379     _isr:
                                    1-  380     ; 0 exit points
                                    1-  381     	.line	33, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  382     	MOVAR	WSAVE
     0001 1503                      1-  383     	SWAPR	STATUS,W
     0002 0283                      1-  384     	CLRR	STATUS
     0003 00rr                      1-  385     	MOVAR	SSAVE
     0004 010A                      1-  386     	MOVR	PCHBUF,W
     0005 028A                      1-  387     	CLRR	PCHBUF
     0006 00rr                      1-  388     	MOVAR	PSAVE
     0007 0104                      1-  389     	MOVR	FSR,W
                                    1-  390     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  391     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  392     	MOVR	STK00,W
                                    1-  393     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  394     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  395     	MOVR	STK01,W
                                    1-  396     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  397     	MOVAR	___sdcc_saved_stk01
                                    1-  398     	.line	35, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  399     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  400     	LGOTO	_00108_DS_
                                    1-  401     	.line	37, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  402     	MOVIA	0x37
     0013 03rr                      1-  403     	ADDAR	_TMR0,F
                                    1-  404     	.line	38, "main.c"; 	intCount++;
                                    1-  405     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  406     	INCR	_intCount,F
                                    1-  407     	.line	39, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  408     	MOVR	_intCount,W
     0017 2464                      1-  409     	XORIA	0x64
     0018 0903                      1-  410     	BTRSS	STATUS,2
     0019 3rrr                      1-  411     	LGOTO	_00108_DS_
                                    1-  412     	.line	41, "main.c"; 	intCount = 0;
     001A 02rr                      1-  413     	CLRR	_intCount
                                    1-  414     	.line	42, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  415     	MOVIA	0x01
                                    1-  416     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  417     	MOVAR	_IntFlag
     001E                           1-  418     _00108_DS_:
                                    1-  419     	.line	45, "main.c"; 	if(INTFbits.PABIF)
     001E 08rr                      1-  420     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  421     	LGOTO	_00110_DS_
                                    1-  422     	.line	47, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  423     	MOVIA	0xfd
     0021 00rr                      1-  424     	MOVAR	_INTF
     0022                           1-  425     _00110_DS_:
                                    1-  426     	.line	50, "main.c"; 	INTF = 0;
     0022 02rr                      1-  427     	CLRR	_INTF
                                    1-  428     	.line	52, "main.c"; 	}
                                    1-  429     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  430     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  431     	MOVAR	STK01
                                    1-  432     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  433     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  434     	MOVAR	STK00
                                    1-  435     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  436     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  437     	MOVAR	FSR
     002C 01rr                      1-  438     	MOVR	PSAVE,W
     002D 008A                      1-  439     	MOVAR	PCHBUF
     002E 0283                      1-  440     	CLRR	STATUS
     002F 15rr                      1-  441     	SWAPR	SSAVE,W
     0030 0083                      1-  442     	MOVAR	STATUS
     0031 15rr                      1-  443     	SWAPR	WSAVE,F
     0032 15rr                      1-  444     	SWAPR	WSAVE,W
     0033                           1-  445     END_OF_INTERRUPT:
     0033 0011                      1-  446     	RETIE	
                                    1-  448     ;--------------------------------------------------------
                                    1-  449     ; code
                                    1-  450     ;--------------------------------------------------------
                                    1-  451     ;***
                                    1-  452     ;  pBlock Stats: dbName = M
                                    1-  453     ;***
                                    1-  454     ;has an exit
                                    1-  455     ;functions called:
                                    1-  456     ;   _msa_init
                                    1-  457     ;   _refreshLed
                                    1-  458     ;   _keyRead
                                    1-  459     ;   _chrgCtr
                                    1-  460     ;   _workCtr
                                    1-  461     ;   _getData
                                    1-  462     ;   _gotoSleep
                                    1-  463     ;   _msa_init
                                    1-  464     ;   _refreshLed
                                    1-  465     ;   _keyRead
                                    1-  466     ;   _chrgCtr
                                    1-  467     ;   _workCtr
                                    1-  468     ;   _getData
                                    1-  469     ;   _gotoSleep
                                    1-  470     ;1 compiler assigned register :
                                    1-  471     ;   r0x102C
                                    1-  472     ;; Starting pCode block
                                    1-  473     .segment "code"; module=main, function=_main
     0000                           1-  475     _main:
                                    1-  476     ; 2 exit points
                                    1-  477     	.line	59, "main.c"; 	APHCON = 0xBF;
     0000 21BF                      1-  478     	MOVIA	0xbf
     0001 000r                      1-  479     	IOST	_APHCON
                                    1-  480     	.line	60, "main.c"; 	IOSTA = 0x00;     // Set PB0 & PB1 to input mode,others set to output mode
     0002 0200                      1-  481     	CLRA	
     0003 000r                      1-  482     	IOST	_IOSTA
                                    1-  483     	.line	61, "main.c"; 	IOSTB = 0x00;
     0004 000r                      1-  484     	IOST	_IOSTB
                                    1-  485     	.line	62, "main.c"; 	PORTA = 0x00; 
     0005 02rr                      1-  486     	CLRR	_PORTA
                                    1-  487     	.line	63, "main.c"; 	PORTB = 0x00;                           // PB0��PB1 & PB2 are output High	
     0006 02rr                      1-  488     	CLRR	_PORTB
                                    1-  489     	.line	64, "main.c"; 	msa_init();
     0007 2rrr                      1-  490     	LCALL	_msa_init
                                    1-  491     	.line	65, "main.c"; 	IOSTA = C_PA3_Input;     // Set PB0 & PB1 to input mode,others set to output mode
     0008 2108                      1-  492     	MOVIA	0x08
     0009 000r                      1-  493     	IOST	_IOSTA
                                    1-  494     	.line	66, "main.c"; 	IOSTB = C_PB0_Input | C_PB1_Input;
     000A 2103                      1-  495     	MOVIA	0x03
     000B 000r                      1-  496     	IOST	_IOSTB
                                    1-  497     	.line	67, "main.c"; 	APHCON = 0xB7;
     000C 21B7                      1-  498     	MOVIA	0xb7
     000D 000r                      1-  499     	IOST	_APHCON
                                    1-  500     	.line	68, "main.c"; 	BPHCON = 0xFE;		//PB0����	CHRG
     000E 21FE                      1-  501     	MOVIA	0xfe
     000F 00rr                      1-  502     	MOVAR	_BPHCON
                                    1-  503     	.line	69, "main.c"; 	ABPLCON = 0xDF;		//PB1����  USB
     0010 21DF                      1-  504     	MOVIA	0xdf
     0011 00rr                      1-  505     	MOVAR	_ABPLCON
                                    1-  506     	.line	70, "main.c"; 	PORTA = 0x00; 
     0012 02rr                      1-  507     	CLRR	_PORTA
                                    1-  508     	.line	71, "main.c"; 	PORTB = 0x00;                           // PB0��PB1 & PB2 are output High	
     0013 02rr                      1-  509     	CLRR	_PORTB
                                    1-  510     	.line	72, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     0014 21A8                      1-  511     	MOVIA	0xa8
     0015 00rr                      1-  512     	MOVAR	_PCON
                                    1-  513     	.line	74, "main.c"; 	PCON1 = C_TMR0_Dis;
     0016 0200                      1-  514     	CLRA	
     0017 000r                      1-  515     	IOST	_PCON1
                                    1-  516     	.line	76, "main.c"; 	TMR0 = 55;
     0018 2137                      1-  517     	MOVIA	0x37
     0019 00rr                      1-  518     	MOVAR	_TMR0
                                    1-  519     	.line	77, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     001A 0200                      1-  520     	CLRA	
     001B 0003                      1-  521     	T0MD	
                                    1-  522     	.line	78, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     001C 2103                      1-  523     	MOVIA	0x03
     001D 00rr                      1-  524     	MOVAR	_INTE
                                    1-  525     	.line	79, "main.c"; 	PCON1 = C_TMR0_En;
     001E 2101                      1-  526     	MOVIA	0x01
     001F 000r                      1-  527     	IOST	_PCON1
                                    1-  528     	.line	80, "main.c"; 	ENI();
     0020 0004                      1-  529     	ENI
                                    1-  530     	.line	81, "main.c"; 	baiwei = shiwei = gewei = 0;
                                    1-  531     	BANKSEL	_gewei
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 02rr                      1-  532     	CLRR	_gewei
                                    1-  533     	BANKSEL	_shiwei
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 02rr                      1-  534     	CLRR	_shiwei
                                    1-  535     	BANKSEL	_baiwei
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1-  536     	CLRR	_baiwei
                                    1-  537     	.line	82, "main.c"; 	rockStep = 0;
                                    1-  538     	BANKSEL	_rockStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1-  539     	CLRR	_rockStep
     0029                           1-  540     _00134_DS_:
                                    1-  541     	.line	85, "main.c"; 	CLRWDT();			//Clear WDT, this function is defined in ny8command.h
     0029 0002                      1-  542     	clrwdt
                                    1-  543     	.line	87, "main.c"; 	if(workStep)
                                    1-  544     	BANKSEL	_workStep
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  545     	MOVR	_workStep,W
     002C 0903                      1-  546     	BTRSS	STATUS,2
                                    1-  547     	.line	89, "main.c"; 	refreshLed();
     002D 2rrr                      1-  548     	LCALL	_refreshLed
                                    1-  549     	.line	91, "main.c"; 	if(!IntFlag)
                                    1-  550     	BANKSEL	_IntFlag
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1-  551     	MOVR	_IntFlag,W
     0030 0D03                      1-  552     	BTRSC	STATUS,2
     0031 3rrr                      1-  553     	LGOTO	_00134_DS_
                                    1-  554     	.line	93, "main.c"; 	IntFlag = 0;
     0032 02rr                      1-  555     	CLRR	_IntFlag
                                    1-  556     	.line	94, "main.c"; 	if(keyRead(0x08 & (~PORTA)))
     0033 07rr                      1-  557     	COMR	_PORTA,W
                                    1-  558     	BANKSEL	r0x102C
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1-  559     	MOVAR	r0x102C
     0036 2108                      1-  560     	MOVIA	0x08
     0037 10rr                      1-  561     	ANDAR	r0x102C,F
     0038 01rr                      1-  562     	MOVR	r0x102C,W
     0039 2rrr                      1-  563     	LCALL	_keyRead
                                    1-  564     	BANKSEL	r0x102C
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 00rr                      1-  565     	MOVAR	r0x102C
     003C 01rr                      1-  566     	MOVR	r0x102C,W
     003D 0D03                      1-  567     	BTRSC	STATUS,2
     003E 3rrr                      1-  568     	LGOTO	_00123_DS_
                                    1-  569     	.line	96, "main.c"; 	if(workStep)
                                    1-  570     	BANKSEL	_workStep
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1-  571     	MOVR	_workStep,W
     0041 0D03                      1-  572     	BTRSC	STATUS,2
     0042 3rrr                      1-  573     	LGOTO	_00120_DS_
                                    1-  574     	.line	97, "main.c"; 	workStep = 0;
     0043 02rr                      1-  575     	CLRR	_workStep
     0044 3rrr                      1-  576     	LGOTO	_00123_DS_
     0045                           1-  577     _00120_DS_:
                                    1-  578     	.line	100, "main.c"; 	workStep = 1;
     0045 2101                      1-  579     	MOVIA	0x01
                                    1-  580     	BANKSEL	_workStep
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 00rr                      1-  581     	MOVAR	_workStep
                                    1-  582     	.line	101, "main.c"; 	workTime = 0;
                                    1-  583     	BANKSEL	_workTime
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 02rr                      1-  584     	CLRR	_workTime
     004A 02rr                      1-  585     	CLRR	(_workTime + 1)
                                    1-  586     	.line	102, "main.c"; 	rockStep = 1;
     004B 2101                      1-  587     	MOVIA	0x01
                                    1-  588     	BANKSEL	_rockStep
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 00rr                      1-  589     	MOVAR	_rockStep
     004E                           1-  590     _00123_DS_:
                                    1-  591     	.line	106, "main.c"; 	chrgCtr();
     004E 2rrr                      1-  592     	LCALL	_chrgCtr
                                    1-  593     	.line	107, "main.c"; 	workCtr();
     004F 2rrr                      1-  594     	LCALL	_workCtr
                                    1-  595     	.line	108, "main.c"; 	if(rockStep == 0 && workStep == 1)
                                    1-  596     	BANKSEL	_rockStep
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1-  597     	MOVR	_rockStep,W
     0052 0903                      1-  598     	BTRSS	STATUS,2
     0053 3rrr                      1-  599     	LGOTO	_00125_DS_
                                    1-  600     	BANKSEL	_workStep
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 01rr                      1-  601     	MOVR	_workStep,W
     0056 2401                      1-  602     	XORIA	0x01
     0057 0D03                      1-  603     	BTRSC	STATUS,2
                                    1-  604     	.line	110, "main.c"; 	getData();
     0058 2rrr                      1-  605     	LCALL	_getData
     0059                           1-  606     _00125_DS_:
                                    1-  607     	.line	112, "main.c"; 	if(workStep == 0 && rockStep == 0 && keyCount== 0)
                                    1-  608     	BANKSEL	_workStep
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 01rr                      1-  609     	MOVR	_workStep,W
     005B 0903                      1-  610     	BTRSS	STATUS,2
     005C 3rrr                      1-  611     	LGOTO	_00134_DS_
                                    1-  612     	BANKSEL	_rockStep
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 01rr                      1-  613     	MOVR	_rockStep,W
     005F 0903                      1-  614     	BTRSS	STATUS,2
     0060 3rrr                      1-  615     	LGOTO	_00134_DS_
                                    1-  616     	BANKSEL	_keyCount
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 01rr                      1-  617     	MOVR	_keyCount,W
     0063 0903                      1-  618     	BTRSS	STATUS,2
     0064 3rrr                      1-  619     	LGOTO	_00134_DS_
                                    1-  620     	.line	114, "main.c"; 	if(++sleepTime > 500)
                                    1-  621     	BANKSEL	_sleepTime
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 05rr                      1-  622     	INCR	_sleepTime,F
     0067 0D03                      1-  623     	BTRSC	STATUS,2
     0068 05rr                      1-  624     	INCR	(_sleepTime + 1),F
                                    1-  625     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  626     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0069 2101                      1-  627     	MOVIA	0x01
     006A 04rr                      1-  628     	SUBAR	(_sleepTime + 1),W
     006B 0903                      1-  629     	BTRSS	STATUS,2
     006C 3rrr                      1-  630     	LGOTO	_00171_DS_
     006D 21F5                      1-  631     	MOVIA	0xf5
     006E 04rr                      1-  632     	SUBAR	_sleepTime,W
     006F                           1-  633     _00171_DS_:
     006F 0803                      1-  634     	BTRSS	STATUS,0
     0070 3rrr                      1-  635     	LGOTO	_00134_DS_
                                    1-  636     	.line	115, "main.c"; 	gotoSleep();
     0071 2rrr                      1-  637     	LCALL	_gotoSleep
     0072 3rrr                      1-  638     	LGOTO	_00134_DS_
                                    1-  639     	.line	118, "main.c"; 	}
                                    1-  640     	RETURN	
     0073 0010                      3-   26 m1      ret
                                    1-  641     ; exit point of _main
                                    1-  643     ;***
                                    1-  644     ;  pBlock Stats: dbName = C
                                    1-  645     ;***
                                    1-  646     ;has an exit
                                    1-  647     ;1 compiler assigned register :
                                    1-  648     ;   r0x1020
                                    1-  649     ;; Starting pCode block
                                    1-  650     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  652     _gotoSleep:
                                    1-  653     ; 2 exit points
                                    1-  654     	.line	344, "main.c"; 	COM1 = 1;
     0000 18rr                      1-  655     	BSR	_PORTA,1
                                    1-  656     	.line	345, "main.c"; 	COM2 = 1;
     0001 18rr                      1-  657     	BSR	_PORTA,0
                                    1-  658     	.line	346, "main.c"; 	COM3 = 1;
     0002 1Arr                      1-  659     	BSR	_PORTB,5
                                    1-  660     	.line	347, "main.c"; 	IOSTA |= 0x03;
     0003 001r                      1-  661     	IOSTR	_IOSTA
                                    1-  662     	BANKSEL	r0x1020
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  663     	MOVAR	r0x1020
     0006 2103                      1-  664     	MOVIA	0x03
     0007 11rr                      1-  665     	IORAR	r0x1020,F
     0008 01rr                      1-  666     	MOVR	r0x1020,W
     0009 000r                      1-  667     	IOST	_IOSTA
                                    1-  668     	.line	348, "main.c"; 	IOSTB |= 0x20;
     000A 001r                      1-  669     	IOSTR	_IOSTB
     000B 00rr                      1-  670     	MOVAR	r0x1020
     000C 1Arr                      1-  671     	BSR	r0x1020,5
     000D 01rr                      1-  672     	MOVR	r0x1020,W
     000E 000r                      1-  673     	IOST	_IOSTB
                                    1-  674     	.line	349, "main.c"; 	workStep = 0;
                                    1-  675     	BANKSEL	_workStep
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1-  676     	CLRR	_workStep
                                    1-  677     	.line	350, "main.c"; 	rockStep = 0;
                                    1-  678     	BANKSEL	_rockStep
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 02rr                      1-  679     	CLRR	_rockStep
                                    1-  680     	.line	351, "main.c"; 	AWUCON = 0x08;
     0013 2108                      1-  681     	MOVIA	0x08
     0014 00rr                      1-  682     	MOVAR	_AWUCON
                                    1-  683     	.line	352, "main.c"; 	BWUCON = 0x03;
     0015 2103                      1-  684     	MOVIA	0x03
     0016 00rr                      1-  685     	MOVAR	_BWUCON
                                    1-  686     	.line	353, "main.c"; 	sleepTime = 0;	
                                    1-  687     	BANKSEL	_sleepTime
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 02rr                      1-  688     	CLRR	_sleepTime
     0019 02rr                      1-  689     	CLRR	(_sleepTime + 1)
                                    1-  690     	.line	354, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     001A 2103                      1-  691     	MOVIA	0x03
     001B 00rr                      1-  692     	MOVAR	_INTE
                                    1-  693     	.line	355, "main.c"; 	PCON =  C_LVR_En;	
     001C 2108                      1-  694     	MOVIA	0x08
     001D 00rr                      1-  695     	MOVAR	_PCON
                                    1-  696     	.line	356, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001E 02rr                      1-  697     	CLRR	_INTF
                                    1-  698     	.line	357, "main.c"; 	CLRWDT();
     001F 0002                      1-  699     	clrwdt
                                    1-  700     	.line	358, "main.c"; 	ENI();
     0020 0004                      1-  701     	ENI
                                    1-  702     	.line	359, "main.c"; 	SLEEP();
     0021 0001                      1-  703     	sleep
                                    1-  704     	.line	360, "main.c"; 	AWUCON = 0x00;
     0022 02rr                      1-  705     	CLRR	_AWUCON
                                    1-  706     	.line	361, "main.c"; 	BWUCON = 0x00;
     0023 02rr                      1-  707     	CLRR	_BWUCON
                                    1-  708     	.line	362, "main.c"; 	IOSTA &= 0xFC;
     0024 001r                      1-  709     	IOSTR	_IOSTA
                                    1-  710     	BANKSEL	r0x1020
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 00rr                      1-  711     	MOVAR	r0x1020
     0027 21FC                      1-  712     	MOVIA	0xfc
     0028 10rr                      1-  713     	ANDAR	r0x1020,F
     0029 01rr                      1-  714     	MOVR	r0x1020,W
     002A 000r                      1-  715     	IOST	_IOSTA
                                    1-  716     	.line	363, "main.c"; 	IOSTB &= 0xDF;
     002B 001r                      1-  717     	IOSTR	_IOSTB
     002C 00rr                      1-  718     	MOVAR	r0x1020
     002D 1Err                      1-  719     	BCR	r0x1020,5
     002E 01rr                      1-  720     	MOVR	r0x1020,W
     002F 000r                      1-  721     	IOST	_IOSTB
                                    1-  722     	.line	364, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0��Timer1��WDT overflow interrupt
     0030 2103                      1-  723     	MOVIA	0x03
     0031 00rr                      1-  724     	MOVAR	_INTE
                                    1-  725     	.line	365, "main.c"; 	INTF = 0;
     0032 02rr                      1-  726     	CLRR	_INTF
                                    1-  727     	.line	370, "main.c"; 	}
                                    1-  728     	RETURN	
     0033 0010                      3-   26 m1      ret
                                    1-  729     ; exit point of _gotoSleep
                                    1-  731     ;***
                                    1-  732     ;  pBlock Stats: dbName = C
                                    1-  733     ;***
                                    1-  734     ;has an exit
                                    1-  735     ;1 compiler assigned register :
                                    1-  736     ;   r0x1021
                                    1-  737     ;; Starting pCode block
                                    1-  738     .segment "code"; module=main, function=_keyRead
                                    1-  740     ;local variable name mapping:
     0000                           1-  742     _keyRead:
                                    1-  743     ; 2 exit points
                                    1-  744     	.line	320, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  745     	BANKSEL	r0x1021
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  746     	MOVAR	r0x1021
                                    1-  747     	.line	322, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  748     	MOVR	r0x1021,W
     0003 0D03                      1-  749     	BTRSC	STATUS,2
     0004 3rrr                      1-  750     	LGOTO	_00471_DS_
                                    1-  751     	.line	324, "main.c"; 	keyCount++;
                                    1-  752     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  753     	INCR	_keyCount,F
                                    1-  754     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  755     	.line	325, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  756     	MOVIA	0xc8
     0008 04rr                      1-  757     	SUBAR	_keyCount,W
     0009 0803                      1-  758     	BTRSS	STATUS,0
     000A 3rrr                      1-  759     	LGOTO	_00472_DS_
                                    1-  760     	.line	327, "main.c"; 	keyCount = 200;
     000B 21C8                      1-  761     	MOVIA	0xc8
     000C 00rr                      1-  762     	MOVAR	_keyCount
     000D 3rrr                      1-  763     	LGOTO	_00472_DS_
                                    1-  764     ;;unsigned compare: left < lit (0x8=8), size=1
     000E                           1-  765     _00471_DS_:
                                    1-  766     	.line	332, "main.c"; 	if(keyCount >= 8)
     000E 2108                      1-  767     	MOVIA	0x08
                                    1-  768     	BANKSEL	_keyCount
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1-  769     	SUBAR	_keyCount,W
     0011 0803                      1-  770     	BTRSS	STATUS,0
     0012 3rrr                      1-  771     	LGOTO	_00469_DS_
                                    1-  772     	.line	334, "main.c"; 	keyCount = 0;
     0013 02rr                      1-  773     	CLRR	_keyCount
                                    1-  774     	.line	335, "main.c"; 	return	1;
     0014 2101                      1-  775     	MOVIA	0x01
     0015 3rrr                      1-  776     	LGOTO	_00473_DS_
     0016                           1-  777     _00469_DS_:
                                    1-  778     	.line	337, "main.c"; 	keyCount = 0;
                                    1-  779     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 02rr                      1-  780     	CLRR	_keyCount
     0018                           1-  781     _00472_DS_:
                                    1-  782     	.line	339, "main.c"; 	return 0;
     0018 2100                      1-  783     	MOVIA	0x00
     0019                           1-  784     _00473_DS_:
                                    1-  785     	.line	340, "main.c"; 	}
                                    1-  786     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1-  787     ; exit point of _keyRead
                                    1-  789     ;***
                                    1-  790     ;  pBlock Stats: dbName = C
                                    1-  791     ;***
                                    1-  792     ;has an exit
                                    1-  793     ;functions called:
                                    1-  794     ;   _Delay10Us
                                    1-  795     ;   _Delay10Us
                                    1-  796     ;   _Delay10Us
                                    1-  797     ;   _Delay10Us
                                    1-  798     ;   _Delay10Us
                                    1-  799     ;   _Delay10Us
                                    1-  800     ;   _Delay10Us
                                    1-  801     ;   _Delay10Us
                                    1-  802     ;2 compiler assigned registers:
                                    1-  803     ;   r0x1022
                                    1-  804     ;   r0x1023
                                    1-  805     ;; Starting pCode block
                                    1-  806     .segment "code"; module=main, function=_ind_light_disp
                                    1-  808     ;local variable name mapping:
     0000                           1-  811     _ind_light_disp:
                                    1-  812     ; 2 exit points
                                    1-  813     	.line	295, "main.c"; 	void ind_light_disp( uint8_t udata )
                                    1-  814     	BANKSEL	r0x1022
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  815     	MOVAR	r0x1022
                                    1-  816     	.line	298, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1-  817     	BANKSEL	r0x1023
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  818     	CLRR	r0x1023
     0004                           1-  819     _00461_DS_:
                                    1-  820     	.line	300, "main.c"; 	CLK=0;
     0004 1Err                      1-  821     	BCR	_PORTA,4
                                    1-  822     	.line	301, "main.c"; 	Delay10Us();
     0005 2rrr                      1-  823     	LCALL	_Delay10Us
                                    1-  824     	.line	302, "main.c"; 	if(udata&0x80)
                                    1-  825     	BANKSEL	r0x1022
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 0Brr                      1-  826     	BTRSS	r0x1022,7
     0008 3rrr                      1-  827     	LGOTO	_00458_DS_
                                    1-  828     	.line	304, "main.c"; 	DAT=1;
     0009 19rr                      1-  829     	BSR	_PORTA,2
                                    1-  830     	.line	305, "main.c"; 	Delay10Us();
     000A 2rrr                      1-  831     	LCALL	_Delay10Us
     000B 3rrr                      1-  832     	LGOTO	_00459_DS_
     000C                           1-  833     _00458_DS_:
                                    1-  834     	.line	309, "main.c"; 	DAT=0;
     000C 1Drr                      1-  835     	BCR	_PORTA,2
                                    1-  836     	.line	310, "main.c"; 	Delay10Us();
     000D 2rrr                      1-  837     	LCALL	_Delay10Us
     000E                           1-  838     _00459_DS_:
                                    1-  839     	.line	312, "main.c"; 	CLK=1;
     000E 1Arr                      1-  840     	BSR	_PORTA,4
                                    1-  841     	.line	313, "main.c"; 	Delay10Us();
     000F 2rrr                      1-  842     	LCALL	_Delay10Us
                                    1-  843     	.line	314, "main.c"; 	udata<<=1;
     0010 1C03                      1-  844     	BCR	STATUS,0
                                    1-  845     	BANKSEL	r0x1022
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 14rr                      1-  846     	RLR	r0x1022,F
                                    1-  847     	.line	298, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1-  848     	BANKSEL	r0x1023
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 05rr                      1-  849     	INCR	r0x1023,F
                                    1-  850     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  851     ;;unsigned compare: left >= lit (0x8=8), size=1
     0015 2108                      1-  852     	MOVIA	0x08
     0016 04rr                      1-  853     	SUBAR	r0x1023,W
     0017 0803                      1-  854     	BTRSS	STATUS,0
     0018 3rrr                      1-  855     	LGOTO	_00461_DS_
                                    1-  856     	.line	316, "main.c"; 	CLK=0;
     0019 1Err                      1-  857     	BCR	_PORTA,4
                                    1-  858     	.line	317, "main.c"; 	DAT=0;
     001A 1Drr                      1-  859     	BCR	_PORTA,2
                                    1-  860     	.line	318, "main.c"; 	}
                                    1-  861     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1-  862     ; exit point of _ind_light_disp
                                    1-  864     ;***
                                    1-  865     ;  pBlock Stats: dbName = C
                                    1-  866     ;***
                                    1-  867     ;has an exit
                                    1-  868     ;functions called:
                                    1-  869     ;   _msa_ReadBytes
                                    1-  870     ;   _msa_ReadBytes
                                    1-  871     ;   _msa_ReadBytes
                                    1-  872     ;   _msa_ReadBytes
                                    1-  873     ;7 compiler assigned registers:
                                    1-  874     ;   r0x1024
                                    1-  875     ;   r0x1025
                                    1-  876     ;   r0x1026
                                    1-  877     ;   STK02
                                    1-  878     ;   STK01
                                    1-  879     ;   STK00
                                    1-  880     ;   r0x1027
                                    1-  881     ;; Starting pCode block
                                    1-  882     .segment "code"; module=main, function=_getData
     0000                           1-  884     _getData:
                                    1-  885     ; 2 exit points
                                    1-  886     	.line	277, "main.c"; 	msa_ReadBytes(&hzL,MSA_REG_ACC_Z_LSB);
     0000 21rr                      1-  887     	MOVIA	((_hzL + 0) >> 8) & 0xff
                                    1-  888     	BANKSEL	r0x1024
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  889     	MOVAR	r0x1024
     0003 21rr                      1-  890     	MOVIA	(_hzL + 0)
                                    1-  891     	BANKSEL	r0x1025
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  892     	MOVAR	r0x1025
                                    1-  893     	BANKSEL	r0x1026
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  894     	CLRR	r0x1026
     0008 2106                      1-  895     	MOVIA	0x06
     0009 00rr                      1-  896     	MOVAR	STK02
                                    1-  897     	BANKSEL	r0x1025
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1-  898     	MOVR	r0x1025,W
     000C 00rr                      1-  899     	MOVAR	STK01
                                    1-  900     	BANKSEL	r0x1024
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  901     	MOVR	r0x1024,W
     000F 00rr                      1-  902     	MOVAR	STK00
     0010 2100                      1-  903     	MOVIA	0x00
     0011 2rrr                      1-  904     	LCALL	_msa_ReadBytes
                                    1-  905     	.line	278, "main.c"; 	msa_ReadBytes(&hzH,MSA_REG_ACC_Z_MSB);
     0012 21rr                      1-  906     	MOVIA	((_hzH + 0) >> 8) & 0xff
                                    1-  907     	BANKSEL	r0x1024
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1-  908     	MOVAR	r0x1024
     0015 21rr                      1-  909     	MOVIA	(_hzH + 0)
                                    1-  910     	BANKSEL	r0x1025
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1-  911     	MOVAR	r0x1025
                                    1-  912     	BANKSEL	r0x1026
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1-  913     	CLRR	r0x1026
     001A 2107                      1-  914     	MOVIA	0x07
     001B 00rr                      1-  915     	MOVAR	STK02
                                    1-  916     	BANKSEL	r0x1025
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1-  917     	MOVR	r0x1025,W
     001E 00rr                      1-  918     	MOVAR	STK01
                                    1-  919     	BANKSEL	r0x1024
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  920     	MOVR	r0x1024,W
     0021 00rr                      1-  921     	MOVAR	STK00
     0022 2100                      1-  922     	MOVIA	0x00
     0023 2rrr                      1-  923     	LCALL	_msa_ReadBytes
                                    1-  924     	.line	280, "main.c"; 	hz = ((short)(hzH << 8 | hzL))>> 4;
                                    1-  925     	BANKSEL	_hzH
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  926     	MOVR	_hzH,W
                                    1-  927     	BANKSEL	r0x1025
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1-  928     	MOVAR	r0x1025
                                    1-  929     	BANKSEL	r0x1024
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1-  930     	CLRR	r0x1024
                                    1-  931     	BANKSEL	r0x1025
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 0Brr                      1-  932     	BTRSS	r0x1025,7
     002C 3rrr                      1-  933     	LGOTO	_00001_DS_
                                    1-  934     	BANKSEL	r0x1024
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 06rr                      1-  935     	DECR	r0x1024,F
     002F                           1-  936     _00001_DS_:
                                    1-  937     	BANKSEL	r0x1025
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1-  938     	MOVR	r0x1025,W
                                    1-  939     	BANKSEL	r0x1027
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 00rr                      1-  940     	MOVAR	r0x1027
                                    1-  941     	BANKSEL	r0x1026
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1-  942     	CLRR	r0x1026
                                    1-  943     	BANKSEL	_hzL
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1-  944     	MOVR	_hzL,W
                                    1-  945     	BANKSEL	r0x1025
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1-  946     	MOVAR	r0x1025
                                    1-  947     	BANKSEL	r0x1024
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1-  948     	CLRR	r0x1024
                                    1-  949     	BANKSEL	r0x1025
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 0Brr                      1-  950     	BTRSS	r0x1025,7
     003D 3rrr                      1-  951     	LGOTO	_00002_DS_
                                    1-  952     	BANKSEL	r0x1024
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 06rr                      1-  953     	DECR	r0x1024,F
     0040                           1-  954     _00002_DS_:
                                    1-  955     	BANKSEL	r0x1025
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1-  956     	MOVR	r0x1025,W
                                    1-  957     	BANKSEL	r0x1026
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 11rr                      1-  958     	IORAR	r0x1026,F
                                    1-  959     	BANKSEL	r0x1024
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  960     	MOVR	r0x1024,W
                                    1-  961     	BANKSEL	r0x1027
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 11rr                      1-  962     	IORAR	r0x1027,F
                                    1-  963     	BANKSEL	r0x1026
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 15rr                      1-  964     	SWAPR	r0x1026,W
     004A 220F                      1-  965     	ANDIA	0x0f
                                    1-  966     	BANKSEL	_hz
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1-  967     	MOVAR	_hz
                                    1-  968     	BANKSEL	r0x1027
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 15rr                      1-  969     	SWAPR	r0x1027,W
                                    1-  970     	BANKSEL	_hz
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1-  971     	MOVAR	(_hz + 1)
     0051 22F0                      1-  972     	ANDIA	0xf0
     0052 11rr                      1-  973     	IORAR	_hz,F
     0053 12rr                      1-  974     	XORAR	(_hz + 1),F
     0054 21F0                      1-  975     	MOVIA	0xf0
     0055 0Drr                      1-  976     	BTRSC	(_hz + 1),3
     0056 11rr                      1-  977     	IORAR	(_hz + 1),F
                                    1-  978     	.line	281, "main.c"; 	hz &= 0x0FFF;
     0057 210F                      1-  979     	MOVIA	0x0f
     0058 10rr                      1-  980     	ANDAR	(_hz + 1),F
                                    1-  981     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  982     ;;unsigned compare: left >= lit (0x176=374), size=2
                                    1-  983     	.line	282, "main.c"; 	if(hz > 0x175 && hz < 0xE70)
     0059 2101                      1-  984     	MOVIA	0x01
     005A 04rr                      1-  985     	SUBAR	(_hz + 1),W
     005B 0903                      1-  986     	BTRSS	STATUS,2
     005C 3rrr                      1-  987     	LGOTO	_00451_DS_
     005D 2176                      1-  988     	MOVIA	0x76
     005E 04rr                      1-  989     	SUBAR	_hz,W
     005F                           1-  990     _00451_DS_:
     005F 0803                      1-  991     	BTRSS	STATUS,0
     0060 3rrr                      1-  992     	LGOTO	_00440_DS_
                                    1-  993     ;;unsigned compare: left < lit (0xE70=3696), size=2
     0061 210E                      1-  994     	MOVIA	0x0e
                                    1-  995     	BANKSEL	_hz
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 04rr                      1-  996     	SUBAR	(_hz + 1),W
     0064 0903                      1-  997     	BTRSS	STATUS,2
     0065 3rrr                      1-  998     	LGOTO	_00452_DS_
     0066 2170                      1-  999     	MOVIA	0x70
     0067 04rr                      1- 1000     	SUBAR	_hz,W
     0068                           1- 1001     _00452_DS_:
     0068 0C03                      1- 1002     	BTRSC	STATUS,0
     0069 3rrr                      1- 1003     	LGOTO	_00440_DS_
                                    1- 1004     	.line	284, "main.c"; 	rockStep = 2;
     006A 2102                      1- 1005     	MOVIA	0x02
                                    1- 1006     	BANKSEL	_rockStep
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 00rr                      1- 1007     	MOVAR	_rockStep
                                    1- 1008     	.line	285, "main.c"; 	workTime = 0;
                                    1- 1009     	BANKSEL	_workTime
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 02rr                      1- 1010     	CLRR	_workTime
     006F 02rr                      1- 1011     	CLRR	(_workTime + 1)
                                    1- 1012     	.line	286, "main.c"; 	return 1;
     0070 2101                      1- 1013     	MOVIA	0x01
     0071 3rrr                      1- 1014     	LGOTO	_00443_DS_
     0072                           1- 1015     _00440_DS_:
                                    1- 1016     	.line	290, "main.c"; 	return 0;
     0072 2100                      1- 1017     	MOVIA	0x00
     0073                           1- 1018     _00443_DS_:
                                    1- 1019     	.line	292, "main.c"; 	}
                                    1- 1020     	RETURN	
     0073 0010                      3-   26 m1      ret
                                    1- 1021     ; exit point of _getData
                                    1- 1023     ;***
                                    1- 1024     ;  pBlock Stats: dbName = C
                                    1- 1025     ;***
                                    1- 1026     ;has an exit
                                    1- 1027     ;functions called:
                                    1- 1028     ;   _ind_light_disp
                                    1- 1029     ;   _ind_light_disp
                                    1- 1030     ;   _ind_light_disp
                                    1- 1031     ;   _ind_light_disp
                                    1- 1032     ;1 compiler assigned register :
                                    1- 1033     ;   r0x1028
                                    1- 1034     ;; Starting pCode block
                                    1- 1035     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1037     _chrgCtr:
                                    1- 1038     ; 2 exit points
                                    1- 1039     	.line	250, "main.c"; 	if(PORTB & 0x02)
     0000 08rr                      1- 1040     	BTRSS	_PORTB,1
     0001 3rrr                      1- 1041     	LGOTO	_00432_DS_
                                    1- 1042     	.line	253, "main.c"; 	workStep = 0;	//����в���ʹ��
                                    1- 1043     	BANKSEL	_workStep
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1044     	CLRR	_workStep
                                    1- 1045     	.line	254, "main.c"; 	COM1 = COM2 = COM3 = 1;
     0004 1Arr                      1- 1046     	BSR	_PORTB,5
     0005 0Arr                      1- 1047     	BTRSS	_PORTB,5
     0006 1Crr                      1- 1048     	BCR	_PORTA,0
     0007 0Err                      1- 1049     	BTRSC	_PORTB,5
     0008 18rr                      1- 1050     	BSR	_PORTA,0
     0009 08rr                      1- 1051     	BTRSS	_PORTA,0
     000A 1Crr                      1- 1052     	BCR	_PORTA,1
     000B 0Crr                      1- 1053     	BTRSC	_PORTA,0
     000C 18rr                      1- 1054     	BSR	_PORTA,1
                                    1- 1055     	.line	255, "main.c"; 	if(PORTB & 0x01)
     000D 08rr                      1- 1056     	BTRSS	_PORTB,0
     000E 3rrr                      1- 1057     	LGOTO	_00429_DS_
                                    1- 1058     	.line	258, "main.c"; 	chrgStep = 2;
     000F 2102                      1- 1059     	MOVIA	0x02
                                    1- 1060     	BANKSEL	_chrgStep
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1061     	MOVAR	_chrgStep
                                    1- 1062     	.line	259, "main.c"; 	ind_light_disp(table[10]);
                                    1- 1063     	BANKSEL	_table
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1064     	MOVR	(_table + 10),W
                                    1- 1065     	BANKSEL	r0x1028
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1066     	MOVAR	r0x1028
     0016 2rrr                      1- 1067     	LCALL	_ind_light_disp
     0017 3rrr                      1- 1068     	LGOTO	_00434_DS_
     0018                           1- 1069     _00429_DS_:
                                    1- 1070     	.line	263, "main.c"; 	chrgStep = 1;
     0018 2101                      1- 1071     	MOVIA	0x01
                                    1- 1072     	BANKSEL	_chrgStep
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 1073     	MOVAR	_chrgStep
                                    1- 1074     	.line	264, "main.c"; 	ind_light_disp(table[11]);
                                    1- 1075     	BANKSEL	_table
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 1076     	MOVR	(_table + 11),W
                                    1- 1077     	BANKSEL	r0x1028
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1078     	MOVAR	r0x1028
     001F 2rrr                      1- 1079     	LCALL	_ind_light_disp
     0020 3rrr                      1- 1080     	LGOTO	_00434_DS_
     0021                           1- 1081     _00432_DS_:
                                    1- 1082     	.line	269, "main.c"; 	chrgStep = 0;
                                    1- 1083     	BANKSEL	_chrgStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 02rr                      1- 1084     	CLRR	_chrgStep
     0023                           1- 1085     _00434_DS_:
                                    1- 1086     	.line	271, "main.c"; 	}
                                    1- 1087     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1- 1088     ; exit point of _chrgCtr
                                    1- 1090     ;***
                                    1- 1091     ;  pBlock Stats: dbName = C
                                    1- 1092     ;***
                                    1- 1093     ;has an exit
                                    1- 1094     ;functions called:
                                    1- 1095     ;   _ind_light_disp
                                    1- 1096     ;   __gptrget1
                                    1- 1097     ;   _ind_light_disp
                                    1- 1098     ;   _delay_us
                                    1- 1099     ;   __gptrget1
                                    1- 1100     ;   _ind_light_disp
                                    1- 1101     ;   _delay_us
                                    1- 1102     ;   __gptrget1
                                    1- 1103     ;   _ind_light_disp
                                    1- 1104     ;   _delay_us
                                    1- 1105     ;   _ind_light_disp
                                    1- 1106     ;   __gptrget1
                                    1- 1107     ;   _ind_light_disp
                                    1- 1108     ;   _delay_us
                                    1- 1109     ;   __gptrget1
                                    1- 1110     ;   _ind_light_disp
                                    1- 1111     ;   _delay_us
                                    1- 1112     ;   __gptrget1
                                    1- 1113     ;   _ind_light_disp
                                    1- 1114     ;   _delay_us
                                    1- 1115     ;5 compiler assigned registers:
                                    1- 1116     ;   r0x1029
                                    1- 1117     ;   r0x102A
                                    1- 1118     ;   STK01
                                    1- 1119     ;   STK00
                                    1- 1120     ;   r0x102B
                                    1- 1121     ;; Starting pCode block
                                    1- 1122     .segment "code"; module=main, function=_refreshLed
     0000                           1- 1124     _refreshLed:
                                    1- 1125     ; 2 exit points
                                    1- 1126     	.line	218, "main.c"; 	ind_light_disp(0);
     0000 2100                      1- 1127     	MOVIA	0x00
     0001 2rrr                      1- 1128     	LCALL	_ind_light_disp
                                    1- 1129     	.line	219, "main.c"; 	COM1 = 1;
     0002 18rr                      1- 1130     	BSR	_PORTA,1
                                    1- 1131     	.line	220, "main.c"; 	COM2 = 1;
     0003 18rr                      1- 1132     	BSR	_PORTA,0
                                    1- 1133     	.line	221, "main.c"; 	COM3 = 1;
     0004 1Arr                      1- 1134     	BSR	_PORTB,5
                                    1- 1135     	.line	222, "main.c"; 	ind_light_disp(table[baiwei]);
                                    1- 1136     	BANKSEL	_baiwei
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1137     	MOVR	_baiwei,W
     0007 25rr                      1- 1138     	ADDIA	(_table + 0)
                                    1- 1139     	BANKSEL	r0x1029
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 1140     	MOVAR	r0x1029
     000A 21rr                      1- 1141     	MOVIA	((_table + 0) >> 8) & 0xff
     000B 0C03                      1- 1142     	BTRSC	STATUS,0
     000C 2501                      1- 1143     	ADDIA	0x01
                                    1- 1144     	BANKSEL	r0x102A
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1145     	MOVAR	r0x102A
                                    1- 1146     	BANKSEL	r0x1029
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1147     	MOVR	r0x1029,W
     0011 00rr                      1- 1148     	MOVAR	STK01
                                    1- 1149     	BANKSEL	r0x102A
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1150     	MOVR	r0x102A,W
     0014 00rr                      1- 1151     	MOVAR	STK00
     0015 2100                      1- 1152     	MOVIA	0x00
     0016 2rrr                      1- 1153     	LCALL	__gptrget1
                                    1- 1154     	BANKSEL	r0x102B
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1155     	MOVAR	r0x102B
     0019 2rrr                      1- 1156     	LCALL	_ind_light_disp
                                    1- 1157     	.line	223, "main.c"; 	COM1 = 0;
     001A 1Crr                      1- 1158     	BCR	_PORTA,1
                                    1- 1159     	.line	224, "main.c"; 	COM2 = 1;
     001B 18rr                      1- 1160     	BSR	_PORTA,0
                                    1- 1161     	.line	225, "main.c"; 	COM3 = 1;
     001C 1Arr                      1- 1162     	BSR	_PORTB,5
                                    1- 1163     	.line	226, "main.c"; 	delay_us(100);
     001D 2164                      1- 1164     	MOVIA	0x64
     001E 00rr                      1- 1165     	MOVAR	STK00
     001F 2100                      1- 1166     	MOVIA	0x00
     0020 2rrr                      1- 1167     	LCALL	_delay_us
                                    1- 1168     	.line	227, "main.c"; 	COM1 = 1;
     0021 18rr                      1- 1169     	BSR	_PORTA,1
                                    1- 1170     	.line	228, "main.c"; 	COM2 = 1;
     0022 18rr                      1- 1171     	BSR	_PORTA,0
                                    1- 1172     	.line	229, "main.c"; 	COM3 = 1;
     0023 1Arr                      1- 1173     	BSR	_PORTB,5
                                    1- 1174     	.line	230, "main.c"; 	ind_light_disp(table[shiwei]);
                                    1- 1175     	BANKSEL	_shiwei
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1176     	MOVR	_shiwei,W
     0026 25rr                      1- 1177     	ADDIA	(_table + 0)
                                    1- 1178     	BANKSEL	r0x1029
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1- 1179     	MOVAR	r0x1029
     0029 21rr                      1- 1180     	MOVIA	((_table + 0) >> 8) & 0xff
     002A 0C03                      1- 1181     	BTRSC	STATUS,0
     002B 2501                      1- 1182     	ADDIA	0x01
                                    1- 1183     	BANKSEL	r0x102A
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 1184     	MOVAR	r0x102A
                                    1- 1185     	BANKSEL	r0x1029
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1- 1186     	MOVR	r0x1029,W
     0030 00rr                      1- 1187     	MOVAR	STK01
                                    1- 1188     	BANKSEL	r0x102A
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1- 1189     	MOVR	r0x102A,W
     0033 00rr                      1- 1190     	MOVAR	STK00
     0034 2100                      1- 1191     	MOVIA	0x00
     0035 2rrr                      1- 1192     	LCALL	__gptrget1
                                    1- 1193     	BANKSEL	r0x102B
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 1194     	MOVAR	r0x102B
     0038 2rrr                      1- 1195     	LCALL	_ind_light_disp
                                    1- 1196     	.line	231, "main.c"; 	COM1 = 1;
     0039 18rr                      1- 1197     	BSR	_PORTA,1
                                    1- 1198     	.line	232, "main.c"; 	COM2 = 0;
     003A 1Crr                      1- 1199     	BCR	_PORTA,0
                                    1- 1200     	.line	233, "main.c"; 	COM3 = 1;
     003B 1Arr                      1- 1201     	BSR	_PORTB,5
                                    1- 1202     	.line	234, "main.c"; 	delay_us(100);
     003C 2164                      1- 1203     	MOVIA	0x64
     003D 00rr                      1- 1204     	MOVAR	STK00
     003E 2100                      1- 1205     	MOVIA	0x00
     003F 2rrr                      1- 1206     	LCALL	_delay_us
                                    1- 1207     	.line	235, "main.c"; 	COM1 = 1;
     0040 18rr                      1- 1208     	BSR	_PORTA,1
                                    1- 1209     	.line	236, "main.c"; 	COM2 = 1;
     0041 18rr                      1- 1210     	BSR	_PORTA,0
                                    1- 1211     	.line	237, "main.c"; 	COM3 = 1;
     0042 1Arr                      1- 1212     	BSR	_PORTB,5
                                    1- 1213     	.line	238, "main.c"; 	ind_light_disp(table[gewei]);
                                    1- 1214     	BANKSEL	_gewei
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 01rr                      1- 1215     	MOVR	_gewei,W
     0045 25rr                      1- 1216     	ADDIA	(_table + 0)
                                    1- 1217     	BANKSEL	r0x1029
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 00rr                      1- 1218     	MOVAR	r0x1029
     0048 21rr                      1- 1219     	MOVIA	((_table + 0) >> 8) & 0xff
     0049 0C03                      1- 1220     	BTRSC	STATUS,0
     004A 2501                      1- 1221     	ADDIA	0x01
                                    1- 1222     	BANKSEL	r0x102A
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1- 1223     	MOVAR	r0x102A
                                    1- 1224     	BANKSEL	r0x1029
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1- 1225     	MOVR	r0x1029,W
     004F 00rr                      1- 1226     	MOVAR	STK01
                                    1- 1227     	BANKSEL	r0x102A
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1- 1228     	MOVR	r0x102A,W
     0052 00rr                      1- 1229     	MOVAR	STK00
     0053 2100                      1- 1230     	MOVIA	0x00
     0054 2rrr                      1- 1231     	LCALL	__gptrget1
                                    1- 1232     	BANKSEL	r0x102B
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 00rr                      1- 1233     	MOVAR	r0x102B
     0057 2rrr                      1- 1234     	LCALL	_ind_light_disp
                                    1- 1235     	.line	239, "main.c"; 	COM1 = 1;
     0058 18rr                      1- 1236     	BSR	_PORTA,1
                                    1- 1237     	.line	240, "main.c"; 	COM2 = 1;
     0059 18rr                      1- 1238     	BSR	_PORTA,0
                                    1- 1239     	.line	241, "main.c"; 	COM3 = 0;
     005A 1Err                      1- 1240     	BCR	_PORTB,5
                                    1- 1241     	.line	242, "main.c"; 	delay_us(100);
     005B 2164                      1- 1242     	MOVIA	0x64
     005C 00rr                      1- 1243     	MOVAR	STK00
     005D 2100                      1- 1244     	MOVIA	0x00
     005E 2rrr                      1- 1245     	LCALL	_delay_us
                                    1- 1246     	.line	243, "main.c"; 	COM1 = 1;
     005F 18rr                      1- 1247     	BSR	_PORTA,1
                                    1- 1248     	.line	244, "main.c"; 	COM2 = 1;
     0060 18rr                      1- 1249     	BSR	_PORTA,0
                                    1- 1250     	.line	245, "main.c"; 	COM3 = 1;
     0061 1Arr                      1- 1251     	BSR	_PORTB,5
                                    1- 1252     	.line	246, "main.c"; 	}
                                    1- 1253     	RETURN	
     0062 0010                      3-   26 m1      ret
                                    1- 1254     ; exit point of _refreshLed
                                    1- 1256     ;***
                                    1- 1257     ;  pBlock Stats: dbName = C
                                    1- 1258     ;***
                                    1- 1259     ;; Starting pCode block
                                    1- 1260     .segment "code"; module=main, function=_workCtr
     0000                           1- 1262     _workCtr:
                                    1- 1263     ; 0 exit points
                                    1- 1264     	.line	122, "main.c"; 	if(rockStep == 1)
                                    1- 1265     	BANKSEL	_rockStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1266     	MOVR	_rockStep,W
     0002 2401                      1- 1267     	XORIA	0x01
     0003 0903                      1- 1268     	BTRSS	STATUS,2
     0004 3rrr                      1- 1269     	LGOTO	_00277_DS_
                                    1- 1270     	.line	124, "main.c"; 	++workTime;
                                    1- 1271     	BANKSEL	_workTime
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1272     	INCR	_workTime,F
     0007 0D03                      1- 1273     	BTRSC	STATUS,2
     0008 05rr                      1- 1274     	INCR	(_workTime + 1),F
                                    1- 1275     ;;unsigned compare: left < lit (0x18=24), size=2
                                    1- 1276     	.line	125, "main.c"; 	if(workTime < 24)
     0009 2100                      1- 1277     	MOVIA	0x00
     000A 04rr                      1- 1278     	SUBAR	(_workTime + 1),W
     000B 0903                      1- 1279     	BTRSS	STATUS,2
     000C 3rrr                      1- 1280     	LGOTO	_00389_DS_
     000D 2118                      1- 1281     	MOVIA	0x18
     000E 04rr                      1- 1282     	SUBAR	_workTime,W
     000F                           1- 1283     _00389_DS_:
     000F 0C03                      1- 1284     	BTRSC	STATUS,0
     0010 3rrr                      1- 1285     	LGOTO	_00195_DS_
                                    1- 1286     	.line	126, "main.c"; 	MOTOR = 1;
     0011 19rr                      1- 1287     	BSR	_PORTB,2
     0012 3rrr                      1- 1288     	LGOTO	_00279_DS_
                                    1- 1289     ;;unsigned compare: left < lit (0x2D=45), size=2
     0013                           1- 1290     _00195_DS_:
                                    1- 1291     	.line	127, "main.c"; 	else if(workTime < 45)
     0013 2100                      1- 1292     	MOVIA	0x00
                                    1- 1293     	BANKSEL	_workTime
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1294     	SUBAR	(_workTime + 1),W
     0016 0903                      1- 1295     	BTRSS	STATUS,2
     0017 3rrr                      1- 1296     	LGOTO	_00390_DS_
     0018 212D                      1- 1297     	MOVIA	0x2d
     0019 04rr                      1- 1298     	SUBAR	_workTime,W
     001A                           1- 1299     _00390_DS_:
     001A 0C03                      1- 1300     	BTRSC	STATUS,0
     001B 3rrr                      1- 1301     	LGOTO	_00192_DS_
                                    1- 1302     	.line	128, "main.c"; 	MOTOR = 0;
     001C 1Drr                      1- 1303     	BCR	_PORTB,2
     001D 3rrr                      1- 1304     	LGOTO	_00279_DS_
                                    1- 1305     ;;unsigned compare: left < lit (0x44=68), size=2
     001E                           1- 1306     _00192_DS_:
                                    1- 1307     	.line	129, "main.c"; 	else if(workTime < 68)
     001E 2100                      1- 1308     	MOVIA	0x00
                                    1- 1309     	BANKSEL	_workTime
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1- 1310     	SUBAR	(_workTime + 1),W
     0021 0903                      1- 1311     	BTRSS	STATUS,2
     0022 3rrr                      1- 1312     	LGOTO	_00391_DS_
     0023 2144                      1- 1313     	MOVIA	0x44
     0024 04rr                      1- 1314     	SUBAR	_workTime,W
     0025                           1- 1315     _00391_DS_:
     0025 0C03                      1- 1316     	BTRSC	STATUS,0
     0026 3rrr                      1- 1317     	LGOTO	_00189_DS_
                                    1- 1318     	.line	130, "main.c"; 	MOTOR = 1;
     0027 19rr                      1- 1319     	BSR	_PORTB,2
     0028 3rrr                      1- 1320     	LGOTO	_00279_DS_
                                    1- 1321     ;;unsigned compare: left < lit (0x59=89), size=2
     0029                           1- 1322     _00189_DS_:
                                    1- 1323     	.line	131, "main.c"; 	else if(workTime < 89)
     0029 2100                      1- 1324     	MOVIA	0x00
                                    1- 1325     	BANKSEL	_workTime
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 04rr                      1- 1326     	SUBAR	(_workTime + 1),W
     002C 0903                      1- 1327     	BTRSS	STATUS,2
     002D 3rrr                      1- 1328     	LGOTO	_00392_DS_
     002E 2159                      1- 1329     	MOVIA	0x59
     002F 04rr                      1- 1330     	SUBAR	_workTime,W
     0030                           1- 1331     _00392_DS_:
     0030 0C03                      1- 1332     	BTRSC	STATUS,0
     0031 3rrr                      1- 1333     	LGOTO	_00186_DS_
                                    1- 1334     	.line	132, "main.c"; 	MOTOR = 0;
     0032 1Drr                      1- 1335     	BCR	_PORTB,2
     0033 3rrr                      1- 1336     	LGOTO	_00279_DS_
                                    1- 1337     ;;unsigned compare: left < lit (0x6F=111), size=2
     0034                           1- 1338     _00186_DS_:
                                    1- 1339     	.line	133, "main.c"; 	else if(workTime < 111)
     0034 2100                      1- 1340     	MOVIA	0x00
                                    1- 1341     	BANKSEL	_workTime
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 04rr                      1- 1342     	SUBAR	(_workTime + 1),W
     0037 0903                      1- 1343     	BTRSS	STATUS,2
     0038 3rrr                      1- 1344     	LGOTO	_00393_DS_
     0039 216F                      1- 1345     	MOVIA	0x6f
     003A 04rr                      1- 1346     	SUBAR	_workTime,W
     003B                           1- 1347     _00393_DS_:
     003B 0C03                      1- 1348     	BTRSC	STATUS,0
     003C 3rrr                      1- 1349     	LGOTO	_00183_DS_
                                    1- 1350     	.line	134, "main.c"; 	MOTOR = 1;
     003D 19rr                      1- 1351     	BSR	_PORTB,2
     003E 3rrr                      1- 1352     	LGOTO	_00279_DS_
                                    1- 1353     ;;unsigned compare: left < lit (0x8E=142), size=2
     003F                           1- 1354     _00183_DS_:
                                    1- 1355     	.line	135, "main.c"; 	else if(workTime < 142)
     003F 2100                      1- 1356     	MOVIA	0x00
                                    1- 1357     	BANKSEL	_workTime
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 04rr                      1- 1358     	SUBAR	(_workTime + 1),W
     0042 0903                      1- 1359     	BTRSS	STATUS,2
     0043 3rrr                      1- 1360     	LGOTO	_00394_DS_
     0044 218E                      1- 1361     	MOVIA	0x8e
     0045 04rr                      1- 1362     	SUBAR	_workTime,W
     0046                           1- 1363     _00394_DS_:
     0046 0C03                      1- 1364     	BTRSC	STATUS,0
     0047 3rrr                      1- 1365     	LGOTO	_00180_DS_
                                    1- 1366     	.line	136, "main.c"; 	MOTOR = 0;
     0048 1Drr                      1- 1367     	BCR	_PORTB,2
     0049 3rrr                      1- 1368     	LGOTO	_00279_DS_
                                    1- 1369     ;;unsigned compare: left < lit (0xAE=174), size=2
     004A                           1- 1370     _00180_DS_:
                                    1- 1371     	.line	137, "main.c"; 	else if(workTime < 174)
     004A 2100                      1- 1372     	MOVIA	0x00
                                    1- 1373     	BANKSEL	_workTime
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 04rr                      1- 1374     	SUBAR	(_workTime + 1),W
     004D 0903                      1- 1375     	BTRSS	STATUS,2
     004E 3rrr                      1- 1376     	LGOTO	_00395_DS_
     004F 21AE                      1- 1377     	MOVIA	0xae
     0050 04rr                      1- 1378     	SUBAR	_workTime,W
     0051                           1- 1379     _00395_DS_:
     0051 0C03                      1- 1380     	BTRSC	STATUS,0
     0052 3rrr                      1- 1381     	LGOTO	_00177_DS_
                                    1- 1382     	.line	138, "main.c"; 	MOTOR = 1;
     0053 19rr                      1- 1383     	BSR	_PORTB,2
     0054 3rrr                      1- 1384     	LGOTO	_00279_DS_
     0055                           1- 1385     _00177_DS_:
                                    1- 1386     	.line	141, "main.c"; 	MOTOR = 0;
     0055 1Drr                      1- 1387     	BCR	_PORTB,2
                                    1- 1388     	.line	142, "main.c"; 	rockStep = 0;
                                    1- 1389     	BANKSEL	_rockStep
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 02rr                      1- 1390     	CLRR	_rockStep
     0058 3rrr                      1- 1391     	LGOTO	_00279_DS_
     0059                           1- 1392     _00277_DS_:
                                    1- 1393     	.line	145, "main.c"; 	else if(rockStep == 2)
                                    1- 1394     	BANKSEL	_rockStep
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 01rr                      1- 1395     	MOVR	_rockStep,W
     005B 2402                      1- 1396     	XORIA	0x02
     005C 0903                      1- 1397     	BTRSS	STATUS,2
     005D 3rrr                      1- 1398     	LGOTO	_00279_DS_
                                    1- 1399     	.line	147, "main.c"; 	++workTime;
                                    1- 1400     	BANKSEL	_workTime
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 05rr                      1- 1401     	INCR	_workTime,F
     0060 0D03                      1- 1402     	BTRSC	STATUS,2
     0061 05rr                      1- 1403     	INCR	(_workTime + 1),F
                                    1- 1404     ;;unsigned compare: left < lit (0x4F=79), size=2
                                    1- 1405     	.line	148, "main.c"; 	if(workTime < 79)
     0062 2100                      1- 1406     	MOVIA	0x00
     0063 04rr                      1- 1407     	SUBAR	(_workTime + 1),W
     0064 0903                      1- 1408     	BTRSS	STATUS,2
     0065 3rrr                      1- 1409     	LGOTO	_00396_DS_
     0066 214F                      1- 1410     	MOVIA	0x4f
     0067 04rr                      1- 1411     	SUBAR	_workTime,W
     0068                           1- 1412     _00396_DS_:
     0068 0C03                      1- 1413     	BTRSC	STATUS,0
     0069 3rrr                      1- 1414     	LGOTO	_00198_DS_
                                    1- 1415     	.line	149, "main.c"; 	MOTOR = 0;
     006A 1Drr                      1- 1416     	BCR	_PORTB,2
                                    1- 1417     ;;unsigned compare: left < lit (0x5A=90), size=2
     006B                           1- 1418     _00198_DS_:
                                    1- 1419     	.line	150, "main.c"; 	if(workTime < 90)
     006B 2100                      1- 1420     	MOVIA	0x00
                                    1- 1421     	BANKSEL	_workTime
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 04rr                      1- 1422     	SUBAR	(_workTime + 1),W
     006E 0903                      1- 1423     	BTRSS	STATUS,2
     006F 3rrr                      1- 1424     	LGOTO	_00397_DS_
     0070 215A                      1- 1425     	MOVIA	0x5a
     0071 04rr                      1- 1426     	SUBAR	_workTime,W
     0072                           1- 1427     _00397_DS_:
     0072 0C03                      1- 1428     	BTRSC	STATUS,0
     0073 3rrr                      1- 1429     	LGOTO	_00272_DS_
                                    1- 1430     	.line	151, "main.c"; 	MOTOR = 1;
     0074 19rr                      1- 1431     	BSR	_PORTB,2
     0075 3rrr                      1- 1432     	LGOTO	_00279_DS_
                                    1- 1433     ;;unsigned compare: left < lit (0x5F=95), size=2
     0076                           1- 1434     _00272_DS_:
                                    1- 1435     	.line	152, "main.c"; 	else if(workTime < 95)
     0076 2100                      1- 1436     	MOVIA	0x00
                                    1- 1437     	BANKSEL	_workTime
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 04rr                      1- 1438     	SUBAR	(_workTime + 1),W
     0079 0903                      1- 1439     	BTRSS	STATUS,2
     007A 3rrr                      1- 1440     	LGOTO	_00398_DS_
     007B 215F                      1- 1441     	MOVIA	0x5f
     007C 04rr                      1- 1442     	SUBAR	_workTime,W
     007D                           1- 1443     _00398_DS_:
     007D 0C03                      1- 1444     	BTRSC	STATUS,0
     007E 3rrr                      1- 1445     	LGOTO	_00269_DS_
                                    1- 1446     	.line	153, "main.c"; 	MOTOR = 0;
     007F 1Drr                      1- 1447     	BCR	_PORTB,2
     0080 3rrr                      1- 1448     	LGOTO	_00279_DS_
                                    1- 1449     ;;unsigned compare: left < lit (0x70=112), size=2
     0081                           1- 1450     _00269_DS_:
                                    1- 1451     	.line	154, "main.c"; 	else if(workTime < 112)
     0081 2100                      1- 1452     	MOVIA	0x00
                                    1- 1453     	BANKSEL	_workTime
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 04rr                      1- 1454     	SUBAR	(_workTime + 1),W
     0084 0903                      1- 1455     	BTRSS	STATUS,2
     0085 3rrr                      1- 1456     	LGOTO	_00399_DS_
     0086 2170                      1- 1457     	MOVIA	0x70
     0087 04rr                      1- 1458     	SUBAR	_workTime,W
     0088                           1- 1459     _00399_DS_:
     0088 0C03                      1- 1460     	BTRSC	STATUS,0
     0089 3rrr                      1- 1461     	LGOTO	_00266_DS_
                                    1- 1462     	.line	155, "main.c"; 	MOTOR = 1;
     008A 19rr                      1- 1463     	BSR	_PORTB,2
     008B 3rrr                      1- 1464     	LGOTO	_00279_DS_
                                    1- 1465     ;;unsigned compare: left < lit (0x73=115), size=2
     008C                           1- 1466     _00266_DS_:
                                    1- 1467     	.line	156, "main.c"; 	else if(workTime < 115)
     008C 2100                      1- 1468     	MOVIA	0x00
                                    1- 1469     	BANKSEL	_workTime
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 04rr                      1- 1470     	SUBAR	(_workTime + 1),W
     008F 0903                      1- 1471     	BTRSS	STATUS,2
     0090 3rrr                      1- 1472     	LGOTO	_00400_DS_
     0091 2173                      1- 1473     	MOVIA	0x73
     0092 04rr                      1- 1474     	SUBAR	_workTime,W
     0093                           1- 1475     _00400_DS_:
     0093 0C03                      1- 1476     	BTRSC	STATUS,0
     0094 3rrr                      1- 1477     	LGOTO	_00263_DS_
                                    1- 1478     	.line	157, "main.c"; 	MOTOR = 0;
     0095 1Drr                      1- 1479     	BCR	_PORTB,2
     0096 3rrr                      1- 1480     	LGOTO	_00279_DS_
                                    1- 1481     ;;unsigned compare: left < lit (0x81=129), size=2
     0097                           1- 1482     _00263_DS_:
                                    1- 1483     	.line	158, "main.c"; 	else if(workTime < 129)
     0097 2100                      1- 1484     	MOVIA	0x00
                                    1- 1485     	BANKSEL	_workTime
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 04rr                      1- 1486     	SUBAR	(_workTime + 1),W
     009A 0903                      1- 1487     	BTRSS	STATUS,2
     009B 3rrr                      1- 1488     	LGOTO	_00401_DS_
     009C 2181                      1- 1489     	MOVIA	0x81
     009D 04rr                      1- 1490     	SUBAR	_workTime,W
     009E                           1- 1491     _00401_DS_:
     009E 0C03                      1- 1492     	BTRSC	STATUS,0
     009F 3rrr                      1- 1493     	LGOTO	_00260_DS_
                                    1- 1494     	.line	159, "main.c"; 	MOTOR = 1;
     00A0 19rr                      1- 1495     	BSR	_PORTB,2
     00A1 3rrr                      1- 1496     	LGOTO	_00279_DS_
                                    1- 1497     ;;unsigned compare: left < lit (0xA4=164), size=2
     00A2                           1- 1498     _00260_DS_:
                                    1- 1499     	.line	160, "main.c"; 	else if(workTime < 164)
     00A2 2100                      1- 1500     	MOVIA	0x00
                                    1- 1501     	BANKSEL	_workTime
     00A3 rrrr                      3-   71 m1      .banksel ram_address
     00A4 04rr                      1- 1502     	SUBAR	(_workTime + 1),W
     00A5 0903                      1- 1503     	BTRSS	STATUS,2
     00A6 3rrr                      1- 1504     	LGOTO	_00402_DS_
     00A7 21A4                      1- 1505     	MOVIA	0xa4
     00A8 04rr                      1- 1506     	SUBAR	_workTime,W
     00A9                           1- 1507     _00402_DS_:
     00A9 0C03                      1- 1508     	BTRSC	STATUS,0
     00AA 3rrr                      1- 1509     	LGOTO	_00257_DS_
                                    1- 1510     	.line	161, "main.c"; 	MOTOR = 0;
     00AB 1Drr                      1- 1511     	BCR	_PORTB,2
     00AC 3rrr                      1- 1512     	LGOTO	_00279_DS_
                                    1- 1513     ;;unsigned compare: left < lit (0xAF=175), size=2
     00AD                           1- 1514     _00257_DS_:
                                    1- 1515     	.line	162, "main.c"; 	else if(workTime < 175)
     00AD 2100                      1- 1516     	MOVIA	0x00
                                    1- 1517     	BANKSEL	_workTime
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 04rr                      1- 1518     	SUBAR	(_workTime + 1),W
     00B0 0903                      1- 1519     	BTRSS	STATUS,2
     00B1 3rrr                      1- 1520     	LGOTO	_00403_DS_
     00B2 21AF                      1- 1521     	MOVIA	0xaf
     00B3 04rr                      1- 1522     	SUBAR	_workTime,W
     00B4                           1- 1523     _00403_DS_:
     00B4 0C03                      1- 1524     	BTRSC	STATUS,0
     00B5 3rrr                      1- 1525     	LGOTO	_00254_DS_
                                    1- 1526     	.line	163, "main.c"; 	MOTOR = 1;
     00B6 19rr                      1- 1527     	BSR	_PORTB,2
     00B7 3rrr                      1- 1528     	LGOTO	_00279_DS_
                                    1- 1529     ;;unsigned compare: left < lit (0xB4=180), size=2
     00B8                           1- 1530     _00254_DS_:
                                    1- 1531     	.line	164, "main.c"; 	else if(workTime < 180)
     00B8 2100                      1- 1532     	MOVIA	0x00
                                    1- 1533     	BANKSEL	_workTime
     00B9 rrrr                      3-   71 m1      .banksel ram_address
     00BA 04rr                      1- 1534     	SUBAR	(_workTime + 1),W
     00BB 0903                      1- 1535     	BTRSS	STATUS,2
     00BC 3rrr                      1- 1536     	LGOTO	_00404_DS_
     00BD 21B4                      1- 1537     	MOVIA	0xb4
     00BE 04rr                      1- 1538     	SUBAR	_workTime,W
     00BF                           1- 1539     _00404_DS_:
     00BF 0C03                      1- 1540     	BTRSC	STATUS,0
     00C0 3rrr                      1- 1541     	LGOTO	_00251_DS_
                                    1- 1542     	.line	165, "main.c"; 	MOTOR = 0;
     00C1 1Drr                      1- 1543     	BCR	_PORTB,2
     00C2 3rrr                      1- 1544     	LGOTO	_00279_DS_
                                    1- 1545     ;;unsigned compare: left < lit (0xC5=197), size=2
     00C3                           1- 1546     _00251_DS_:
                                    1- 1547     	.line	166, "main.c"; 	else if(workTime < 197)
     00C3 2100                      1- 1548     	MOVIA	0x00
                                    1- 1549     	BANKSEL	_workTime
     00C4 rrrr                      3-   71 m1      .banksel ram_address
     00C5 04rr                      1- 1550     	SUBAR	(_workTime + 1),W
     00C6 0903                      1- 1551     	BTRSS	STATUS,2
     00C7 3rrr                      1- 1552     	LGOTO	_00405_DS_
     00C8 21C5                      1- 1553     	MOVIA	0xc5
     00C9 04rr                      1- 1554     	SUBAR	_workTime,W
     00CA                           1- 1555     _00405_DS_:
     00CA 0C03                      1- 1556     	BTRSC	STATUS,0
     00CB 3rrr                      1- 1557     	LGOTO	_00248_DS_
                                    1- 1558     	.line	167, "main.c"; 	MOTOR = 1;
     00CC 19rr                      1- 1559     	BSR	_PORTB,2
     00CD 3rrr                      1- 1560     	LGOTO	_00279_DS_
                                    1- 1561     ;;unsigned compare: left < lit (0xC8=200), size=2
     00CE                           1- 1562     _00248_DS_:
                                    1- 1563     	.line	168, "main.c"; 	else if(workTime < 200)
     00CE 2100                      1- 1564     	MOVIA	0x00
                                    1- 1565     	BANKSEL	_workTime
     00CF rrrr                      3-   71 m1      .banksel ram_address
     00D0 04rr                      1- 1566     	SUBAR	(_workTime + 1),W
     00D1 0903                      1- 1567     	BTRSS	STATUS,2
     00D2 3rrr                      1- 1568     	LGOTO	_00406_DS_
     00D3 21C8                      1- 1569     	MOVIA	0xc8
     00D4 04rr                      1- 1570     	SUBAR	_workTime,W
     00D5                           1- 1571     _00406_DS_:
     00D5 0C03                      1- 1572     	BTRSC	STATUS,0
     00D6 3rrr                      1- 1573     	LGOTO	_00245_DS_
                                    1- 1574     	.line	169, "main.c"; 	MOTOR = 0;
     00D7 1Drr                      1- 1575     	BCR	_PORTB,2
     00D8 3rrr                      1- 1576     	LGOTO	_00279_DS_
                                    1- 1577     ;;unsigned compare: left < lit (0xD6=214), size=2
     00D9                           1- 1578     _00245_DS_:
                                    1- 1579     	.line	170, "main.c"; 	else if(workTime < 214)
     00D9 2100                      1- 1580     	MOVIA	0x00
                                    1- 1581     	BANKSEL	_workTime
     00DA rrrr                      3-   71 m1      .banksel ram_address
     00DB 04rr                      1- 1582     	SUBAR	(_workTime + 1),W
     00DC 0903                      1- 1583     	BTRSS	STATUS,2
     00DD 3rrr                      1- 1584     	LGOTO	_00407_DS_
     00DE 21D6                      1- 1585     	MOVIA	0xd6
     00DF 04rr                      1- 1586     	SUBAR	_workTime,W
     00E0                           1- 1587     _00407_DS_:
     00E0 0C03                      1- 1588     	BTRSC	STATUS,0
     00E1 3rrr                      1- 1589     	LGOTO	_00242_DS_
                                    1- 1590     	.line	171, "main.c"; 	MOTOR = 1;
     00E2 19rr                      1- 1591     	BSR	_PORTB,2
     00E3 3rrr                      1- 1592     	LGOTO	_00279_DS_
                                    1- 1593     ;;unsigned compare: left < lit (0xF9=249), size=2
     00E4                           1- 1594     _00242_DS_:
                                    1- 1595     	.line	172, "main.c"; 	else if(workTime < 249)
     00E4 2100                      1- 1596     	MOVIA	0x00
                                    1- 1597     	BANKSEL	_workTime
     00E5 rrrr                      3-   71 m1      .banksel ram_address
     00E6 04rr                      1- 1598     	SUBAR	(_workTime + 1),W
     00E7 0903                      1- 1599     	BTRSS	STATUS,2
     00E8 3rrr                      1- 1600     	LGOTO	_00408_DS_
     00E9 21F9                      1- 1601     	MOVIA	0xf9
     00EA 04rr                      1- 1602     	SUBAR	_workTime,W
     00EB                           1- 1603     _00408_DS_:
     00EB 0C03                      1- 1604     	BTRSC	STATUS,0
     00EC 3rrr                      1- 1605     	LGOTO	_00239_DS_
                                    1- 1606     	.line	173, "main.c"; 	MOTOR = 0;
     00ED 1Drr                      1- 1607     	BCR	_PORTB,2
     00EE 3rrr                      1- 1608     	LGOTO	_00279_DS_
                                    1- 1609     ;;unsigned compare: left < lit (0x104=260), size=2
     00EF                           1- 1610     _00239_DS_:
                                    1- 1611     	.line	174, "main.c"; 	else if(workTime < 260)
     00EF 2101                      1- 1612     	MOVIA	0x01
                                    1- 1613     	BANKSEL	_workTime
     00F0 rrrr                      3-   71 m1      .banksel ram_address
     00F1 04rr                      1- 1614     	SUBAR	(_workTime + 1),W
     00F2 0903                      1- 1615     	BTRSS	STATUS,2
     00F3 3rrr                      1- 1616     	LGOTO	_00409_DS_
     00F4 2104                      1- 1617     	MOVIA	0x04
     00F5 04rr                      1- 1618     	SUBAR	_workTime,W
     00F6                           1- 1619     _00409_DS_:
     00F6 0C03                      1- 1620     	BTRSC	STATUS,0
     00F7 3rrr                      1- 1621     	LGOTO	_00236_DS_
                                    1- 1622     	.line	175, "main.c"; 	MOTOR = 1;
     00F8 19rr                      1- 1623     	BSR	_PORTB,2
     00F9 3rrr                      1- 1624     	LGOTO	_00279_DS_
                                    1- 1625     ;;unsigned compare: left < lit (0x109=265), size=2
     00FA                           1- 1626     _00236_DS_:
                                    1- 1627     	.line	176, "main.c"; 	else if(workTime < 265)
     00FA 2101                      1- 1628     	MOVIA	0x01
                                    1- 1629     	BANKSEL	_workTime
     00FB rrrr                      3-   71 m1      .banksel ram_address
     00FC 04rr                      1- 1630     	SUBAR	(_workTime + 1),W
     00FD 0903                      1- 1631     	BTRSS	STATUS,2
     00FE 3rrr                      1- 1632     	LGOTO	_00410_DS_
     00FF 2109                      1- 1633     	MOVIA	0x09
     0100 04rr                      1- 1634     	SUBAR	_workTime,W
     0101                           1- 1635     _00410_DS_:
     0101 0C03                      1- 1636     	BTRSC	STATUS,0
     0102 3rrr                      1- 1637     	LGOTO	_00233_DS_
                                    1- 1638     	.line	177, "main.c"; 	MOTOR = 0;
     0103 1Drr                      1- 1639     	BCR	_PORTB,2
     0104 3rrr                      1- 1640     	LGOTO	_00279_DS_
                                    1- 1641     ;;unsigned compare: left < lit (0x11A=282), size=2
     0105                           1- 1642     _00233_DS_:
                                    1- 1643     	.line	178, "main.c"; 	else if(workTime < 282)
     0105 2101                      1- 1644     	MOVIA	0x01
                                    1- 1645     	BANKSEL	_workTime
     0106 rrrr                      3-   71 m1      .banksel ram_address
     0107 04rr                      1- 1646     	SUBAR	(_workTime + 1),W
     0108 0903                      1- 1647     	BTRSS	STATUS,2
     0109 3rrr                      1- 1648     	LGOTO	_00411_DS_
     010A 211A                      1- 1649     	MOVIA	0x1a
     010B 04rr                      1- 1650     	SUBAR	_workTime,W
     010C                           1- 1651     _00411_DS_:
     010C 0C03                      1- 1652     	BTRSC	STATUS,0
     010D 3rrr                      1- 1653     	LGOTO	_00230_DS_
                                    1- 1654     	.line	179, "main.c"; 	MOTOR = 1;
     010E 19rr                      1- 1655     	BSR	_PORTB,2
     010F 3rrr                      1- 1656     	LGOTO	_00279_DS_
                                    1- 1657     ;;unsigned compare: left < lit (0x11D=285), size=2
     0110                           1- 1658     _00230_DS_:
                                    1- 1659     	.line	180, "main.c"; 	else if(workTime < 285)
     0110 2101                      1- 1660     	MOVIA	0x01
                                    1- 1661     	BANKSEL	_workTime
     0111 rrrr                      3-   71 m1      .banksel ram_address
     0112 04rr                      1- 1662     	SUBAR	(_workTime + 1),W
     0113 0903                      1- 1663     	BTRSS	STATUS,2
     0114 3rrr                      1- 1664     	LGOTO	_00412_DS_
     0115 211D                      1- 1665     	MOVIA	0x1d
     0116 04rr                      1- 1666     	SUBAR	_workTime,W
     0117                           1- 1667     _00412_DS_:
     0117 0C03                      1- 1668     	BTRSC	STATUS,0
     0118 3rrr                      1- 1669     	LGOTO	_00227_DS_
                                    1- 1670     	.line	181, "main.c"; 	MOTOR = 0;
     0119 1Drr                      1- 1671     	BCR	_PORTB,2
     011A 3rrr                      1- 1672     	LGOTO	_00279_DS_
                                    1- 1673     ;;unsigned compare: left < lit (0x12C=300), size=2
     011B                           1- 1674     _00227_DS_:
                                    1- 1675     	.line	182, "main.c"; 	else if(workTime < 300)
     011B 2101                      1- 1676     	MOVIA	0x01
                                    1- 1677     	BANKSEL	_workTime
     011C rrrr                      3-   71 m1      .banksel ram_address
     011D 04rr                      1- 1678     	SUBAR	(_workTime + 1),W
     011E 0903                      1- 1679     	BTRSS	STATUS,2
     011F 3rrr                      1- 1680     	LGOTO	_00413_DS_
     0120 212C                      1- 1681     	MOVIA	0x2c
     0121 04rr                      1- 1682     	SUBAR	_workTime,W
     0122                           1- 1683     _00413_DS_:
     0122 0C03                      1- 1684     	BTRSC	STATUS,0
     0123 3rrr                      1- 1685     	LGOTO	_00224_DS_
                                    1- 1686     	.line	183, "main.c"; 	MOTOR = 1;
     0124 19rr                      1- 1687     	BSR	_PORTB,2
     0125 3rrr                      1- 1688     	LGOTO	_00279_DS_
                                    1- 1689     ;;unsigned compare: left < lit (0x14D=333), size=2
     0126                           1- 1690     _00224_DS_:
                                    1- 1691     	.line	184, "main.c"; 	else if(workTime < 333)
     0126 2101                      1- 1692     	MOVIA	0x01
                                    1- 1693     	BANKSEL	_workTime
     0127 rrrr                      3-   71 m1      .banksel ram_address
     0128 04rr                      1- 1694     	SUBAR	(_workTime + 1),W
     0129 0903                      1- 1695     	BTRSS	STATUS,2
     012A 3rrr                      1- 1696     	LGOTO	_00414_DS_
     012B 214D                      1- 1697     	MOVIA	0x4d
     012C 04rr                      1- 1698     	SUBAR	_workTime,W
     012D                           1- 1699     _00414_DS_:
     012D 0C03                      1- 1700     	BTRSC	STATUS,0
     012E 3rrr                      1- 1701     	LGOTO	_00221_DS_
                                    1- 1702     	.line	185, "main.c"; 	MOTOR = 0;
     012F 1Drr                      1- 1703     	BCR	_PORTB,2
     0130 3rrr                      1- 1704     	LGOTO	_00279_DS_
                                    1- 1705     ;;unsigned compare: left < lit (0x158=344), size=2
     0131                           1- 1706     _00221_DS_:
                                    1- 1707     	.line	186, "main.c"; 	else if(workTime < 344)
     0131 2101                      1- 1708     	MOVIA	0x01
                                    1- 1709     	BANKSEL	_workTime
     0132 rrrr                      3-   71 m1      .banksel ram_address
     0133 04rr                      1- 1710     	SUBAR	(_workTime + 1),W
     0134 0903                      1- 1711     	BTRSS	STATUS,2
     0135 3rrr                      1- 1712     	LGOTO	_00415_DS_
     0136 2158                      1- 1713     	MOVIA	0x58
     0137 04rr                      1- 1714     	SUBAR	_workTime,W
     0138                           1- 1715     _00415_DS_:
     0138 0C03                      1- 1716     	BTRSC	STATUS,0
     0139 3rrr                      1- 1717     	LGOTO	_00218_DS_
                                    1- 1718     	.line	187, "main.c"; 	MOTOR = 1;
     013A 19rr                      1- 1719     	BSR	_PORTB,2
     013B 3rrr                      1- 1720     	LGOTO	_00279_DS_
                                    1- 1721     ;;unsigned compare: left < lit (0x15E=350), size=2
     013C                           1- 1722     _00218_DS_:
                                    1- 1723     	.line	188, "main.c"; 	else if(workTime < 350)
     013C 2101                      1- 1724     	MOVIA	0x01
                                    1- 1725     	BANKSEL	_workTime
     013D rrrr                      3-   71 m1      .banksel ram_address
     013E 04rr                      1- 1726     	SUBAR	(_workTime + 1),W
     013F 0903                      1- 1727     	BTRSS	STATUS,2
     0140 3rrr                      1- 1728     	LGOTO	_00416_DS_
     0141 215E                      1- 1729     	MOVIA	0x5e
     0142 04rr                      1- 1730     	SUBAR	_workTime,W
     0143                           1- 1731     _00416_DS_:
     0143 0C03                      1- 1732     	BTRSC	STATUS,0
     0144 3rrr                      1- 1733     	LGOTO	_00215_DS_
                                    1- 1734     	.line	189, "main.c"; 	MOTOR = 0;
     0145 1Drr                      1- 1735     	BCR	_PORTB,2
     0146 3rrr                      1- 1736     	LGOTO	_00279_DS_
                                    1- 1737     ;;unsigned compare: left < lit (0x16E=366), size=2
     0147                           1- 1738     _00215_DS_:
                                    1- 1739     	.line	190, "main.c"; 	else if(workTime < 366)
     0147 2101                      1- 1740     	MOVIA	0x01
                                    1- 1741     	BANKSEL	_workTime
     0148 rrrr                      3-   71 m1      .banksel ram_address
     0149 04rr                      1- 1742     	SUBAR	(_workTime + 1),W
     014A 0903                      1- 1743     	BTRSS	STATUS,2
     014B 3rrr                      1- 1744     	LGOTO	_00417_DS_
     014C 216E                      1- 1745     	MOVIA	0x6e
     014D 04rr                      1- 1746     	SUBAR	_workTime,W
     014E                           1- 1747     _00417_DS_:
     014E 0C03                      1- 1748     	BTRSC	STATUS,0
     014F 3rrr                      1- 1749     	LGOTO	_00212_DS_
                                    1- 1750     	.line	191, "main.c"; 	MOTOR = 1;
     0150 19rr                      1- 1751     	BSR	_PORTB,2
     0151 3rrr                      1- 1752     	LGOTO	_00279_DS_
                                    1- 1753     ;;unsigned compare: left < lit (0x172=370), size=2
     0152                           1- 1754     _00212_DS_:
                                    1- 1755     	.line	192, "main.c"; 	else if(workTime < 370)
     0152 2101                      1- 1756     	MOVIA	0x01
                                    1- 1757     	BANKSEL	_workTime
     0153 rrrr                      3-   71 m1      .banksel ram_address
     0154 04rr                      1- 1758     	SUBAR	(_workTime + 1),W
     0155 0903                      1- 1759     	BTRSS	STATUS,2
     0156 3rrr                      1- 1760     	LGOTO	_00418_DS_
     0157 2172                      1- 1761     	MOVIA	0x72
     0158 04rr                      1- 1762     	SUBAR	_workTime,W
     0159                           1- 1763     _00418_DS_:
     0159 0C03                      1- 1764     	BTRSC	STATUS,0
     015A 3rrr                      1- 1765     	LGOTO	_00209_DS_
                                    1- 1766     	.line	193, "main.c"; 	MOTOR = 0;
     015B 1Drr                      1- 1767     	BCR	_PORTB,2
     015C 3rrr                      1- 1768     	LGOTO	_00279_DS_
                                    1- 1769     ;;unsigned compare: left < lit (0x180=384), size=2
     015D                           1- 1770     _00209_DS_:
                                    1- 1771     	.line	194, "main.c"; 	else if(workTime < 384)
     015D 2101                      1- 1772     	MOVIA	0x01
                                    1- 1773     	BANKSEL	_workTime
     015E rrrr                      3-   71 m1      .banksel ram_address
     015F 04rr                      1- 1774     	SUBAR	(_workTime + 1),W
     0160 0903                      1- 1775     	BTRSS	STATUS,2
     0161 3rrr                      1- 1776     	LGOTO	_00419_DS_
     0162 2180                      1- 1777     	MOVIA	0x80
     0163 04rr                      1- 1778     	SUBAR	_workTime,W
     0164                           1- 1779     _00419_DS_:
     0164 0C03                      1- 1780     	BTRSC	STATUS,0
     0165 3rrr                      1- 1781     	LGOTO	_00206_DS_
                                    1- 1782     	.line	195, "main.c"; 	MOTOR = 1;
     0166 19rr                      1- 1783     	BSR	_PORTB,2
     0167 3rrr                      1- 1784     	LGOTO	_00279_DS_
     0168                           1- 1785     _00206_DS_:
                                    1- 1786     	.line	198, "main.c"; 	MOTOR = 0;
     0168 1Drr                      1- 1787     	BCR	_PORTB,2
                                    1- 1788     	.line	199, "main.c"; 	rockStep = 0;
                                    1- 1789     	BANKSEL	_rockStep
     0169 rrrr                      3-   71 m1      .banksel ram_address
     016A 02rr                      1- 1790     	CLRR	_rockStep
                                    1- 1791     	.line	200, "main.c"; 	if(++gewei >= 10)
                                    1- 1792     	BANKSEL	_gewei
     016B rrrr                      3-   71 m1      .banksel ram_address
     016C 05rr                      1- 1793     	INCR	_gewei,F
                                    1- 1794     ;;unsigned compare: left < lit (0xA=10), size=1
     016D 210A                      1- 1795     	MOVIA	0x0a
     016E 04rr                      1- 1796     	SUBAR	_gewei,W
     016F 0803                      1- 1797     	BTRSS	STATUS,0
     0170 3rrr                      1- 1798     	LGOTO	_00279_DS_
                                    1- 1799     	.line	202, "main.c"; 	gewei = 0;
     0171 02rr                      1- 1800     	CLRR	_gewei
                                    1- 1801     	.line	203, "main.c"; 	if(++shiwei >= 10)
                                    1- 1802     	BANKSEL	_shiwei
     0172 rrrr                      3-   71 m1      .banksel ram_address
     0173 05rr                      1- 1803     	INCR	_shiwei,F
                                    1- 1804     ;;unsigned compare: left < lit (0xA=10), size=1
     0174 210A                      1- 1805     	MOVIA	0x0a
     0175 04rr                      1- 1806     	SUBAR	_shiwei,W
     0176 0803                      1- 1807     	BTRSS	STATUS,0
     0177 3rrr                      1- 1808     	LGOTO	_00279_DS_
                                    1- 1809     	.line	205, "main.c"; 	shiwei = 0;
     0178 02rr                      1- 1810     	CLRR	_shiwei
                                    1- 1811     	.line	206, "main.c"; 	if(++baiwei >= 10)
                                    1- 1812     	BANKSEL	_baiwei
     0179 rrrr                      3-   71 m1      .banksel ram_address
     017A 05rr                      1- 1813     	INCR	_baiwei,F
                                    1- 1814     ;;unsigned compare: left < lit (0xA=10), size=1
     017B 210A                      1- 1815     	MOVIA	0x0a
     017C 04rr                      1- 1816     	SUBAR	_baiwei,W
     017D 0C03                      1- 1817     	BTRSC	STATUS,0
                                    1- 1818     	.line	208, "main.c"; 	baiwei = 0;
     017E 02rr                      1- 1819     	CLRR	_baiwei
     017F                           1- 1820     _00279_DS_:
                                    1- 1821     	.line	214, "main.c"; 	}
                                    1- 1822     	RETURN	
     017F 0010                      3-   26 m1      ret
                                    1- 1825     ;	code size estimation:
                                    1- 1826     ;	  766+  138 =   904 instructions ( 2084 byte)
                                    1- 1828     	end
                                    1- 1828     	end

SYMBOL TABLE            TYPE     VALUE
___fs2schar             Label    00000000
___fs2sint              Label    00000000
___fs2slong             Label    00000000
___fs2uchar             Label    00000000
___fs2uint              Label    00000000
___fs2ulong             Label    00000000
___fsadd                Label    00000000
___fsdiv                Label    00000000
___fseq                 Label    00000000
___fsgt                 Label    00000000
___fslt                 Label    00000000
___fsmul                Label    00000000
___fsneq                Label    00000000
___fssub                Label    00000000
___schar2fs             Label    00000000
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
___sint2fs              Label    00000000
___slong2fs             Label    00000000
___uchar2fs             Label    00000000
___uint2fs              Label    00000000
___ulong2fs             Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__gptrget1              Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002F
_00002_DS_              Label    00000040
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00120_DS_              Label    00000045
_00123_DS_              Label    0000004E
_00125_DS_              Label    00000059
_00134_DS_              Label    00000029
_00171_DS_              Label    0000006F
_00177_DS_              Label    00000055
_00180_DS_              Label    0000004A
_00183_DS_              Label    0000003F
_00186_DS_              Label    00000034
_00189_DS_              Label    00000029
_00192_DS_              Label    0000001E
_00195_DS_              Label    00000013
_00198_DS_              Label    0000006B
_00206_DS_              Label    00000168
_00209_DS_              Label    0000015D
_00212_DS_              Label    00000152
_00215_DS_              Label    00000147
_00218_DS_              Label    0000013C
_00221_DS_              Label    00000131
_00224_DS_              Label    00000126
_00227_DS_              Label    0000011B
_00230_DS_              Label    00000110
_00233_DS_              Label    00000105
_00236_DS_              Label    000000FA
_00239_DS_              Label    000000EF
_00242_DS_              Label    000000E4
_00245_DS_              Label    000000D9
_00248_DS_              Label    000000CE
_00251_DS_              Label    000000C3
_00254_DS_              Label    000000B8
_00257_DS_              Label    000000AD
_00260_DS_              Label    000000A2
_00263_DS_              Label    00000097
_00266_DS_              Label    0000008C
_00269_DS_              Label    00000081
_00272_DS_              Label    00000076
_00277_DS_              Label    00000059
_00279_DS_              Label    0000017F
_00389_DS_              Label    0000000F
_00390_DS_              Label    0000001A
_00391_DS_              Label    00000025
_00392_DS_              Label    00000030
_00393_DS_              Label    0000003B
_00394_DS_              Label    00000046
_00395_DS_              Label    00000051
_00396_DS_              Label    00000068
_00397_DS_              Label    00000072
_00398_DS_              Label    0000007D
_00399_DS_              Label    00000088
_00400_DS_              Label    00000093
_00401_DS_              Label    0000009E
_00402_DS_              Label    000000A9
_00403_DS_              Label    000000B4
_00404_DS_              Label    000000BF
_00405_DS_              Label    000000CA
_00406_DS_              Label    000000D5
_00407_DS_              Label    000000E0
_00408_DS_              Label    000000EB
_00409_DS_              Label    000000F6
_00410_DS_              Label    00000101
_00411_DS_              Label    0000010C
_00412_DS_              Label    00000117
_00413_DS_              Label    00000122
_00414_DS_              Label    0000012D
_00415_DS_              Label    00000138
_00416_DS_              Label    00000143
_00417_DS_              Label    0000014E
_00418_DS_              Label    00000159
_00419_DS_              Label    00000164
_00429_DS_              Label    00000018
_00432_DS_              Label    00000021
_00434_DS_              Label    00000023
_00440_DS_              Label    00000072
_00443_DS_              Label    00000073
_00451_DS_              Label    0000005F
_00452_DS_              Label    00000068
_00458_DS_              Label    0000000C
_00459_DS_              Label    0000000E
_00461_DS_              Label    00000004
_00469_DS_              Label    00000016
_00471_DS_              Label    0000000E
_00472_DS_              Label    00000018
_00473_DS_              Label    00000019
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_baiwei                 Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_chrgCtr                Label    00000000
_chrgStep               Label    00000000
_CMPCR                  Label    00000000
_delay_ms               Label    00000000
_delay_us               Label    00000000
_Delay1000Us            Label    00000000
_Delay10Us              Label    00000000
_FSR                    Label    00000000
_getData                Label    00000000
_gewei                  Label    00000000
_gotoSleep              Label    00000000
_hz                     Label    00000000
_hzH                    Label    00000000
_hzL                    Label    00000000
_i2c_write_byte_data    Label    00000000
_IIC_Ack                Label    00000000
_IIC_NAck               Label    00000000
_IIC_Read_Byte          Label    00000000
_IIC_Send_Byte          Label    00000000
_IIC_Start              Label    00000000
_IIC_Stop               Label    00000000
_IIC_Wait_Ack           Label    00000000
_ind_light_disp         Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isCalibrated           Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_main                   Label    00000000
_msa_calibrate          Label    00000000
_msa_calibrateZ         Label    00000000
_msa_flip_init          Label    00000000
_msa_flip_process       Label    00000000
_msa_get_step           Label    00000000
_msa_init               Label    00000000
_msa_read_adc           Label    00000000
_msa_read_data          Label    00000000
_msa_ReadBytes          Label    00000000
_msa_register_read_continuously Label    00000000
_msa_sqrt               Label    00000000
_msa_WriteBytes         Label    00000000
_offset_z               Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_refreshLed             Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_rockStep               Label    00000000
_SDA_IN                 Label    00000000
_SDA_OUT                Label    00000000
_shiwei                 Label    00000000
_sleepTime              Label    00000000
_STATUS                 Label    00000000
_SW_i2c_udelay          Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_table                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
_workTime               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a054d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
