
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B061D,c=on
                                    1-    9     	#include "ny8b061d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__mulint
                                    1-   15     	extern	__divuint
                                    1-   16     	extern	_PORTAbits
                                    1-   17     	extern	_PORTBbits
                                    1-   18     	extern	_PCONbits
                                    1-   19     	extern	_BWUCONbits
                                    1-   20     	extern	_ABPLCONbits
                                    1-   21     	extern	_BPHCONbits
                                    1-   22     	extern	_INTEbits
                                    1-   23     	extern	_INTFbits
                                    1-   24     	extern	_ADMDbits
                                    1-   25     	extern	_ADRbits
                                    1-   26     	extern	_ADVREFHbits
                                    1-   27     	extern	_ADCRbits
                                    1-   28     	extern	_AWUCONbits
                                    1-   29     	extern	_PACONbits
                                    1-   30     	extern	_INTEDGbits
                                    1-   31     	extern	_RFCbits
                                    1-   32     	extern	_INTE2bits
                                    1-   33     	extern	_INDF
                                    1-   34     	extern	_TMR0
                                    1-   35     	extern	_PCL
                                    1-   36     	extern	_STATUS
                                    1-   37     	extern	_FSR
                                    1-   38     	extern	_PORTA
                                    1-   39     	extern	_PORTB
                                    1-   40     	extern	_PCON
                                    1-   41     	extern	_BWUCON
                                    1-   42     	extern	_PCHBUF
                                    1-   43     	extern	_ABPLCON
                                    1-   44     	extern	_BPHCON
                                    1-   45     	extern	_INTE
                                    1-   46     	extern	_INTF
                                    1-   47     	extern	_ADMD
                                    1-   48     	extern	_ADR
                                    1-   49     	extern	_ADD
                                    1-   50     	extern	_ADVREFH
                                    1-   51     	extern	_ADCR
                                    1-   52     	extern	_AWUCON
                                    1-   53     	extern	_PACON
                                    1-   54     	extern	_INTEDG
                                    1-   55     	extern	_TMRH
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_PCON1
                                    1-   87     	extern	_T0MD
                                    1-   88     	extern	___sdcc_saved_fsr
                                    1-   89     	extern	___sdcc_saved_stk00
                                    1-   90     	extern	___sdcc_saved_stk01
                                    1-   91     	extern	__nyc_ny8_startup
                                    1-   92     ;--------------------------------------------------------
                                    1-   93     ; global declarations
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     	extern	_F_AIN4_Convert
                                    1-   96     	extern	_F_AIN3_Convert
                                    1-   97     	extern	_F_AIN1_Convert
                                    1-   98     	extern	_F_VDD_Convert
                                    1-   99     	extern	_delay
                                    1-  100     	extern	_F_wait_eoc
                                    1-  101     	extern	_modeLedShow
                                    1-  102     	extern	_initAD
                                    1-  103     	extern	_keyRead
                                    1-  104     	extern	_checkHotAD
                                    1-  105     	extern	_checkTouchAD
                                    1-  106     	extern	_checkKeyAD
                                    1-  107     	extern	_checkBAT
                                    1-  108     	extern	_PWM2Start
                                    1-  109     	extern	_PWM1Start
                                    1-  110     	extern	_ADKeyCtr
                                    1-  111     	extern	_startCtr
                                    1-  112     	extern	_workCtr
                                    1-  113     	extern	_chrgCtr
                                    1-  114     	extern	_initSys
                                    1-  115     	extern	_isr
                                    1-  116     	extern	_main
                                    1-  117     	extern	_LedInput
                                    1-  118     	extern	_LEDMODE4
                                    1-  119     	extern	_LEDMODE3
                                    1-  120     	extern	_LEDMODE2
                                    1-  121     	extern	_LEDMODE1
                                    1-  122     	extern	_BATHIGHT
                                    1-  123     	extern	_BATLOW
                                    1-  124     	extern	_POWERHIGHT
                                    1-  125     	extern	_POWERMID
                                    1-  126     	extern	_POWERLOW
                                    1-  127     	extern	_Status
                                    1-  128     	extern	_intCount
                                    1-  129     	extern	_modeStep
                                    1-  130     	extern	_keyNub
                                    1-  131     	extern	_R_VDD_DATA
                                    1-  132     	extern	_R_VDD_DATA_LB
                                    1-  133     	extern	_R_AIN1_DATA
                                    1-  134     	extern	_R_AIN1_DATA_LB
                                    1-  135     	extern	_R_AIN3_DATA
                                    1-  136     	extern	_R_AIN3_DATA_LB
                                    1-  137     	extern	_R_AIN4_DATA
                                    1-  138     	extern	_R_AIN4_DATA_LB
                                    1-  139     	extern	_keyCount
                                    1-  140     	extern	_powerStep
                                    1-  141     	extern	_chrgLedStep
                                    1-  142     	extern	_timeCount
                                    1-  143     	extern	_startStep
                                    1-  144     	extern	_checkTime
                                    1-  146     	extern PSAVE
                                    1-  147     	extern SSAVE
                                    1-  148     	extern WSAVE
                                    1-  149     	extern STK02
                                    1-  150     	extern STK01
                                    1-  151     	extern STK00
                                    1-  153     .segment "uninit", 0x20000040
 20000040                           1-  154     PSAVE:
                                    1-  155     	.res 1
 20000041                           1-  156     SSAVE:
                                    1-  157     	.res 1
 20000042                           1-  158     WSAVE:
                                    1-  159     	.res 1
 20000043                           1-  160     STK02:
                                    1-  161     	.res 1
 20000044                           1-  162     STK01:
                                    1-  163     	.res 1
 20000045                           1-  164     STK00:
                                    1-  165     	.res 1
                                    1-  167     ;--------------------------------------------------------
                                    1-  168     ; global definitions
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     .segment "uninit"
     0000                           1-  171     _R_VDD_DATA:
                                    1-  172     	.res	2
                                    1-  175     .segment "uninit"
     0000                           1-  176     _R_VDD_DATA_LB:
                                    1-  177     	.res	1
                                    1-  180     .segment "uninit"
     0000                           1-  181     _R_AIN1_DATA:
                                    1-  182     	.res	2
                                    1-  185     .segment "uninit"
     0000                           1-  186     _R_AIN1_DATA_LB:
                                    1-  187     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     _R_AIN3_DATA:
                                    1-  192     	.res	2
                                    1-  195     .segment "uninit"
     0000                           1-  196     _R_AIN3_DATA_LB:
                                    1-  197     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     _R_AIN4_DATA:
                                    1-  202     	.res	2
                                    1-  205     .segment "uninit"
     0000                           1-  206     _R_AIN4_DATA_LB:
                                    1-  207     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     _keyCount:
                                    1-  212     	.res	1
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     ; absolute symbol definitions
                                    1-  217     ;--------------------------------------------------------
                                    1-  218     ;--------------------------------------------------------
                                    1-  219     ; compiler-defined variables
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x1032:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1033:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x104A:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x1049:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1048:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1047:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1046:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1045:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1043:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x1044:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x103D:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1040:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x103B:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x103C:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1037:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1038:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1034:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1018:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1019:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x102C:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x102D:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x102E:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1031:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1026:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1027:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1028:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x102B:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x1020:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1021:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1022:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1025:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x101A:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x101B:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x101C:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x101F:
                                    1-  325     	.res	1
                                    1-  326     ;--------------------------------------------------------
                                    1-  327     ; initialized data
                                    1-  328     ;--------------------------------------------------------
                                    1-  330     .segment "idata"
     0000                           1-  331     _Status:
     0000 0000                      1-  332     	dw	0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _intCount:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _modeStep:
     0000 0000                      1-  344     	dw	0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _keyNub:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _powerStep:
     0000 0000                      1-  356     	dw	0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _chrgLedStep:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _timeCount:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _startStep:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _checkTime:
     0000 0000                      1-  380     	dw	0x00
                                    1-  383     ;--------------------------------------------------------
                                    1-  384     ; overlayable items in internal ram 
                                    1-  385     ;--------------------------------------------------------
                                    1-  386     ;	udata_ovr
                                    1-  387     ;--------------------------------------------------------
                                    1-  388     ; reset vector 
                                    1-  389     ;--------------------------------------------------------
                                    1-  390     ORG	0x0000
     0000 3rrr                      1-  391     	LGOTO	__nyc_ny8_startup
                                    1-  392     ;--------------------------------------------------------
                                    1-  393     ; interrupt and initialization code
                                    1-  394     ;--------------------------------------------------------
                                    1-  395     ORG 0x0008
     0008 3rrr                      1-  396     	lgoto	__sdcc_interrupt
                                    1-  398     .segment "code"
     0000                           1-  399     __sdcc_interrupt:
                                    1-  400     ;***
                                    1-  401     ;  pBlock Stats: dbName = I
                                    1-  402     ;***
                                    1-  403     ;2 compiler assigned registers:
                                    1-  404     ;   STK00
                                    1-  405     ;   STK01
                                    1-  406     ;; Starting pCode block
     0000                           1-  407     _isr:
                                    1-  408     ; 0 exit points
                                    1-  409     	.line	85, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  410     	MOVAR	WSAVE
     0001 1503                      1-  411     	SWAPR	STATUS,W
     0002 0283                      1-  412     	CLRR	STATUS
     0003 00rr                      1-  413     	MOVAR	SSAVE
     0004 010A                      1-  414     	MOVR	PCHBUF,W
     0005 028A                      1-  415     	CLRR	PCHBUF
     0006 00rr                      1-  416     	MOVAR	PSAVE
     0007 0104                      1-  417     	MOVR	FSR,W
                                    1-  418     	BANKSEL	___sdcc_saved_fsr
     0008 00rr                      1-  419     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  420     	MOVR	STK00,W
                                    1-  421     	BANKSEL	___sdcc_saved_stk00
     000A 00rr                      1-  422     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  423     	MOVR	STK01,W
                                    1-  424     	BANKSEL	___sdcc_saved_stk01
     000C 00rr                      1-  425     	MOVAR	___sdcc_saved_stk01
                                    1-  426     	.line	87, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  427     	BTRSS	_INTFbits,0
     000E 3rrr                      1-  428     	LGOTO	_00108_DS_
                                    1-  429     	.line	89, "main.c"; 	TMR0 += 55;
     000F 2137                      1-  430     	MOVIA	0x37
     0010 03rr                      1-  431     	ADDAR	_TMR0,F
                                    1-  432     	.line	91, "main.c"; 	if(++intCount >= 100)
                                    1-  433     	BANKSEL	_intCount
     0011 05rr                      1-  434     	INCR	_intCount,F
                                    1-  435     ;;unsigned compare: left < lit (0x64=100), size=1
     0012 2164                      1-  436     	MOVIA	0x64
     0013 04rr                      1-  437     	SUBAR	_intCount,W
     0014 0803                      1-  438     	BTRSS	STATUS,0
     0015 3rrr                      1-  439     	LGOTO	_00108_DS_
                                    1-  440     	.line	93, "main.c"; 	IntFlag = 1;
                                    1-  441     	BANKSEL	_Status
     0016 18rr                      1-  442     	BSR	_Status,0
                                    1-  443     	.line	94, "main.c"; 	intCount = 0;
                                    1-  444     	BANKSEL	_intCount
     0017 02rr                      1-  445     	CLRR	_intCount
     0018                           1-  446     _00108_DS_:
                                    1-  447     	.line	100, "main.c"; 	if(INTFbits.PABIF)
     0018 08rr                      1-  448     	BTRSS	_INTFbits,1
     0019 3rrr                      1-  449     	LGOTO	_00110_DS_
                                    1-  450     	.line	102, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     001A 21FD                      1-  451     	MOVIA	0xfd
     001B 00rr                      1-  452     	MOVAR	_INTF
     001C                           1-  453     _00110_DS_:
                                    1-  454     	.line	105, "main.c"; 	INTF = 0;
     001C 02rr                      1-  455     	CLRR	_INTF
                                    1-  456     	.line	107, "main.c"; 	}
                                    1-  457     	BANKSEL	___sdcc_saved_stk01
     001D 01rr                      1-  458     	MOVR	___sdcc_saved_stk01,W
     001E 00rr                      1-  459     	MOVAR	STK01
                                    1-  460     	BANKSEL	___sdcc_saved_stk00
     001F 01rr                      1-  461     	MOVR	___sdcc_saved_stk00,W
     0020 00rr                      1-  462     	MOVAR	STK00
                                    1-  463     	BANKSEL	___sdcc_saved_fsr
     0021 01rr                      1-  464     	MOVR	___sdcc_saved_fsr,W
     0022 0084                      1-  465     	MOVAR	FSR
     0023 01rr                      1-  466     	MOVR	PSAVE,W
     0024 008A                      1-  467     	MOVAR	PCHBUF
     0025 0283                      1-  468     	CLRR	STATUS
     0026 15rr                      1-  469     	SWAPR	SSAVE,W
     0027 0083                      1-  470     	MOVAR	STATUS
     0028 15rr                      1-  471     	SWAPR	WSAVE,F
     0029 15rr                      1-  472     	SWAPR	WSAVE,W
     002A                           1-  473     END_OF_INTERRUPT:
     002A 0011                      1-  474     	RETIE	
                                    1-  476     ;--------------------------------------------------------
                                    1-  477     ; code
                                    1-  478     ;--------------------------------------------------------
                                    1-  479     ;***
                                    1-  480     ;  pBlock Stats: dbName = M
                                    1-  481     ;***
                                    1-  482     ;has an exit
                                    1-  483     ;functions called:
                                    1-  484     ;   _initSys
                                    1-  485     ;   _initAD
                                    1-  486     ;   _modeLedShow
                                    1-  487     ;   _chrgCtr
                                    1-  488     ;   _ADKeyCtr
                                    1-  489     ;   _workCtr
                                    1-  490     ;   _startCtr
                                    1-  491     ;   _initSys
                                    1-  492     ;   _initAD
                                    1-  493     ;   _modeLedShow
                                    1-  494     ;   _chrgCtr
                                    1-  495     ;   _ADKeyCtr
                                    1-  496     ;   _workCtr
                                    1-  497     ;   _startCtr
                                    1-  498     ;; Starting pCode block
                                    1-  499     .segment "code"; module=main, function=_main
     0000                           1-  501     _main:
                                    1-  502     ; 2 exit points
                                    1-  503     	.line	138, "main.c"; 	initSys();
     0000 2rrr                      1-  504     	LCALL	_initSys
                                    1-  505     	.line	139, "main.c"; 	initAD();
     0001 2rrr                      1-  506     	LCALL	_initAD
     0002                           1-  507     _00130_DS_:
                                    1-  508     	.line	142, "main.c"; 	CLRWDT();
     0002 0002                      1-  509     	clrwdt
                                    1-  510     	.line	143, "main.c"; 	modeLedShow();
     0003 2rrr                      1-  511     	LCALL	_modeLedShow
                                    1-  512     	.line	144, "main.c"; 	if(!IntFlag)
                                    1-  513     	BANKSEL	_Status
     0004 08rr                      1-  514     	BTRSS	_Status,0
     0005 3rrr                      1-  515     	LGOTO	_00130_DS_
                                    1-  516     	.line	146, "main.c"; 	IntFlag = 0;
     0006 1Crr                      1-  517     	BCR	_Status,0
                                    1-  518     	.line	147, "main.c"; 	chrgCtr();
     0007 2rrr                      1-  519     	LCALL	_chrgCtr
                                    1-  520     	.line	148, "main.c"; 	if(chrgFlag == 0)
                                    1-  521     	BANKSEL	_Status
     0008 0Drr                      1-  522     	BTRSC	_Status,3
     0009 3rrr                      1-  523     	LGOTO	_00130_DS_
                                    1-  524     	.line	150, "main.c"; 	ADKeyCtr();
     000A 2rrr                      1-  525     	LCALL	_ADKeyCtr
                                    1-  526     	.line	151, "main.c"; 	if(startLedFlag == 0)
                                    1-  527     	BANKSEL	_Status
     000B 0Drr                      1-  528     	BTRSC	_Status,2
     000C 3rrr                      1-  529     	LGOTO	_00125_DS_
                                    1-  530     	.line	153, "main.c"; 	if(modeStep > 0)
                                    1-  531     	BANKSEL	_modeStep
     000D 01rr                      1-  532     	MOVR	_modeStep,W
     000E 0D03                      1-  533     	BTRSC	STATUS,2
     000F 3rrr                      1-  534     	LGOTO	_00122_DS_
                                    1-  535     	.line	154, "main.c"; 	workCtr();
     0010 2rrr                      1-  536     	LCALL	_workCtr
     0011 3rrr                      1-  537     	LGOTO	_00130_DS_
     0012                           1-  538     _00122_DS_:
                                    1-  539     	.line	157, "main.c"; 	T1CR1 = C_TMR1_En;
     0012 2101                      1-  540     	MOVIA	0x01
     0013 00rr                      1-  541     	SFUN	_T1CR1
                                    1-  542     	.line	158, "main.c"; 	PORTB &= 0xFE;
     0014 1Crr                      1-  543     	BCR	_PORTB,0
                                    1-  544     	.line	159, "main.c"; 	HOTOFF();
     0015 1Drr                      1-  545     	BCR	_PORTB,2
                                    1-  546     	.line	160, "main.c"; 	startStep = 0;
                                    1-  547     	BANKSEL	_startStep
     0016 02rr                      1-  548     	CLRR	_startStep
                                    1-  549     	.line	161, "main.c"; 	startLedFlag = 0;
                                    1-  550     	BANKSEL	_Status
     0017 1Drr                      1-  551     	BCR	_Status,2
                                    1-  552     	.line	162, "main.c"; 	ORANGEOFF();
     0018 1Err                      1-  553     	BCR	_PORTB,4
                                    1-  554     	.line	163, "main.c"; 	BLUEOFF();
     0019 1Err                      1-  555     	BCR	_PORTB,5
                                    1-  556     	.line	164, "main.c"; 	REDOFF();
     001A 1Crr                      1-  557     	BCR	_PORTA,0
     001B 3rrr                      1-  558     	LGOTO	_00130_DS_
     001C                           1-  559     _00125_DS_:
                                    1-  560     	.line	169, "main.c"; 	startCtr();
     001C 2rrr                      1-  561     	LCALL	_startCtr
     001D 3rrr                      1-  562     	LGOTO	_00130_DS_
                                    1-  563     	.line	173, "main.c"; 	}
                                    1-  564     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1-  565     ; exit point of _main
                                    1-  567     ;***
                                    1-  568     ;  pBlock Stats: dbName = C
                                    1-  569     ;***
                                    1-  570     ;has an exit
                                    1-  571     ;functions called:
                                    1-  572     ;   _delay
                                    1-  573     ;   _F_wait_eoc
                                    1-  574     ;   _delay
                                    1-  575     ;   _F_wait_eoc
                                    1-  576     ;6 compiler assigned registers:
                                    1-  577     ;   r0x101A
                                    1-  578     ;   r0x101B
                                    1-  579     ;   r0x101C
                                    1-  580     ;   r0x101D
                                    1-  581     ;   r0x101E
                                    1-  582     ;   r0x101F
                                    1-  583     ;; Starting pCode block
                                    1-  584     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1-  586     ;local variable name mapping:
     0000                           1-  589     _F_AIN4_Convert:
                                    1-  590     ; 2 exit points
                                    1-  591     	.line	765, "main.c"; 	void F_AIN4_Convert(char count)
                                    1-  592     	BANKSEL	r0x101A
     0000 00rr                      1-  593     	MOVAR	r0x101A
                                    1-  594     	.line	767, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1-  595     	BANKSEL	_R_AIN4_DATA_LB
     0001 02rr                      1-  596     	CLRR	_R_AIN4_DATA_LB
                                    1-  597     	BANKSEL	_R_AIN4_DATA
     0002 02rr                      1-  598     	CLRR	_R_AIN4_DATA
     0003 02rr                      1-  599     	CLRR	(_R_AIN4_DATA + 1)
                                    1-  600     	.line	769, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0004 2194                      1-  601     	MOVIA	0x94
     0005 00rr                      1-  602     	MOVAR	_ADMD
                                    1-  603     	.line	770, "main.c"; 	delay(200);	
     0006 21C8                      1-  604     	MOVIA	0xc8
     0007 2rrr                      1-  605     	LCALL	_delay
                                    1-  606     	.line	771, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  607     	MOVIA	0x01
                                    1-  608     	BANKSEL	r0x101B
     0009 00rr                      1-  609     	MOVAR	r0x101B
     000A                           1-  610     _00537_DS_:
                                    1-  611     	BANKSEL	r0x101B
     000A 01rr                      1-  612     	MOVR	r0x101B,W
                                    1-  613     	BANKSEL	r0x101A
     000B 04rr                      1-  614     	SUBAR	r0x101A,W
     000C 0803                      1-  615     	BTRSS	STATUS,0
     000D 3rrr                      1-  616     	LGOTO	_00539_DS_
                                    1-  617     	.line	773, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1-  618     	BSR	_ADMDbits,6
                                    1-  619     	.line	774, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     000F 2rrr                      1-  620     	LCALL	_F_wait_eoc
                                    1-  621     	.line	775, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1-  622     	MOVIA	0x0f
     0011 10rr                      1-  623     	ANDAR	_ADR,W
                                    1-  624     ;;3	MOVAR	r0x101C
                                    1-  625     	BANKSEL	_R_AIN4_DATA_LB
     0012 03rr                      1-  626     	ADDAR	_R_AIN4_DATA_LB,F
                                    1-  627     	.line	776, "main.c"; 	R_AIN4_DATA    += ADD; 
     0013 01rr                      1-  628     	MOVR	_ADD,W
                                    1-  629     	BANKSEL	r0x101C
     0014 00rr                      1-  630     	MOVAR	r0x101C
                                    1-  631     ;;1	CLRR	r0x101D
                                    1-  632     ;;116	MOVR	r0x101C,W
                                    1-  633     ;;114	MOVAR	r0x101E
     0015 2100                      1-  634     	MOVIA	0x00
                                    1-  635     	BANKSEL	r0x101F
     0016 00rr                      1-  636     	MOVAR	r0x101F
                                    1-  637     ;;115	MOVR	r0x101E,W
                                    1-  638     	BANKSEL	r0x101C
     0017 01rr                      1-  639     	MOVR	r0x101C,W
                                    1-  640     	BANKSEL	_R_AIN4_DATA
     0018 03rr                      1-  641     	ADDAR	_R_AIN4_DATA,F
                                    1-  642     	BANKSEL	r0x101F
     0019 01rr                      1-  643     	MOVR	r0x101F,W
     001A 0C03                      1-  644     	BTRSC	STATUS,0
     001B 05rr                      1-  645     	INCR	r0x101F,W
     001C 0D03                      1-  646     	BTRSC	STATUS,2
     001D 3rrr                      1-  647     	LGOTO	_00001_DS_
                                    1-  648     	BANKSEL	_R_AIN4_DATA
     001E 03rr                      1-  649     	ADDAR	(_R_AIN4_DATA + 1),F
     001F                           1-  650     _00001_DS_:
                                    1-  651     	.line	771, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  652     	BANKSEL	r0x101B
     001F 05rr                      1-  653     	INCR	r0x101B,F
     0020 3rrr                      1-  654     	LGOTO	_00537_DS_
     0021                           1-  655     _00539_DS_:
                                    1-  656     	.line	778, "main.c"; 	}
                                    1-  657     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1-  658     ; exit point of _F_AIN4_Convert
                                    1-  660     ;***
                                    1-  661     ;  pBlock Stats: dbName = C
                                    1-  662     ;***
                                    1-  663     ;has an exit
                                    1-  664     ;functions called:
                                    1-  665     ;   _delay
                                    1-  666     ;   _F_wait_eoc
                                    1-  667     ;   _delay
                                    1-  668     ;   _F_wait_eoc
                                    1-  669     ;6 compiler assigned registers:
                                    1-  670     ;   r0x1020
                                    1-  671     ;   r0x1021
                                    1-  672     ;   r0x1022
                                    1-  673     ;   r0x1023
                                    1-  674     ;   r0x1024
                                    1-  675     ;   r0x1025
                                    1-  676     ;; Starting pCode block
                                    1-  677     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1-  679     ;local variable name mapping:
     0000                           1-  682     _F_AIN3_Convert:
                                    1-  683     ; 2 exit points
                                    1-  684     	.line	749, "main.c"; 	void F_AIN3_Convert(char count)
                                    1-  685     	BANKSEL	r0x1020
     0000 00rr                      1-  686     	MOVAR	r0x1020
                                    1-  687     	.line	751, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1-  688     	BANKSEL	_R_AIN3_DATA_LB
     0001 02rr                      1-  689     	CLRR	_R_AIN3_DATA_LB
                                    1-  690     	BANKSEL	_R_AIN3_DATA
     0002 02rr                      1-  691     	CLRR	_R_AIN3_DATA
     0003 02rr                      1-  692     	CLRR	(_R_AIN3_DATA + 1)
                                    1-  693     	.line	753, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0004 2193                      1-  694     	MOVIA	0x93
     0005 00rr                      1-  695     	MOVAR	_ADMD
                                    1-  696     	.line	754, "main.c"; 	delay(200);	
     0006 21C8                      1-  697     	MOVIA	0xc8
     0007 2rrr                      1-  698     	LCALL	_delay
                                    1-  699     	.line	755, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  700     	MOVIA	0x01
                                    1-  701     	BANKSEL	r0x1021
     0009 00rr                      1-  702     	MOVAR	r0x1021
     000A                           1-  703     _00528_DS_:
                                    1-  704     	BANKSEL	r0x1021
     000A 01rr                      1-  705     	MOVR	r0x1021,W
                                    1-  706     	BANKSEL	r0x1020
     000B 04rr                      1-  707     	SUBAR	r0x1020,W
     000C 0803                      1-  708     	BTRSS	STATUS,0
     000D 3rrr                      1-  709     	LGOTO	_00530_DS_
                                    1-  710     	.line	757, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1-  711     	BSR	_ADMDbits,6
                                    1-  712     	.line	758, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     000F 2rrr                      1-  713     	LCALL	_F_wait_eoc
                                    1-  714     	.line	759, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1-  715     	MOVIA	0x0f
     0011 10rr                      1-  716     	ANDAR	_ADR,W
                                    1-  717     ;;3	MOVAR	r0x1022
                                    1-  718     	BANKSEL	_R_AIN3_DATA_LB
     0012 03rr                      1-  719     	ADDAR	_R_AIN3_DATA_LB,F
                                    1-  720     	.line	760, "main.c"; 	R_AIN3_DATA    += ADD; 
     0013 01rr                      1-  721     	MOVR	_ADD,W
                                    1-  722     	BANKSEL	r0x1022
     0014 00rr                      1-  723     	MOVAR	r0x1022
                                    1-  724     ;;1	CLRR	r0x1023
                                    1-  725     ;;113	MOVR	r0x1022,W
                                    1-  726     ;;111	MOVAR	r0x1024
     0015 2100                      1-  727     	MOVIA	0x00
                                    1-  728     	BANKSEL	r0x1025
     0016 00rr                      1-  729     	MOVAR	r0x1025
                                    1-  730     ;;112	MOVR	r0x1024,W
                                    1-  731     	BANKSEL	r0x1022
     0017 01rr                      1-  732     	MOVR	r0x1022,W
                                    1-  733     	BANKSEL	_R_AIN3_DATA
     0018 03rr                      1-  734     	ADDAR	_R_AIN3_DATA,F
                                    1-  735     	BANKSEL	r0x1025
     0019 01rr                      1-  736     	MOVR	r0x1025,W
     001A 0C03                      1-  737     	BTRSC	STATUS,0
     001B 05rr                      1-  738     	INCR	r0x1025,W
     001C 0D03                      1-  739     	BTRSC	STATUS,2
     001D 3rrr                      1-  740     	LGOTO	_00002_DS_
                                    1-  741     	BANKSEL	_R_AIN3_DATA
     001E 03rr                      1-  742     	ADDAR	(_R_AIN3_DATA + 1),F
     001F                           1-  743     _00002_DS_:
                                    1-  744     	.line	755, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  745     	BANKSEL	r0x1021
     001F 05rr                      1-  746     	INCR	r0x1021,F
     0020 3rrr                      1-  747     	LGOTO	_00528_DS_
     0021                           1-  748     _00530_DS_:
                                    1-  749     	.line	762, "main.c"; 	}
                                    1-  750     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1-  751     ; exit point of _F_AIN3_Convert
                                    1-  753     ;***
                                    1-  754     ;  pBlock Stats: dbName = C
                                    1-  755     ;***
                                    1-  756     ;has an exit
                                    1-  757     ;functions called:
                                    1-  758     ;   _delay
                                    1-  759     ;   _F_wait_eoc
                                    1-  760     ;   _delay
                                    1-  761     ;   _F_wait_eoc
                                    1-  762     ;6 compiler assigned registers:
                                    1-  763     ;   r0x1026
                                    1-  764     ;   r0x1027
                                    1-  765     ;   r0x1028
                                    1-  766     ;   r0x1029
                                    1-  767     ;   r0x102A
                                    1-  768     ;   r0x102B
                                    1-  769     ;; Starting pCode block
                                    1-  770     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1-  772     ;local variable name mapping:
     0000                           1-  775     _F_AIN1_Convert:
                                    1-  776     ; 2 exit points
                                    1-  777     	.line	733, "main.c"; 	void F_AIN1_Convert(char count)
                                    1-  778     	BANKSEL	r0x1026
     0000 00rr                      1-  779     	MOVAR	r0x1026
                                    1-  780     	.line	735, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
                                    1-  781     	BANKSEL	_R_AIN1_DATA_LB
     0001 02rr                      1-  782     	CLRR	_R_AIN1_DATA_LB
                                    1-  783     	BANKSEL	_R_AIN1_DATA
     0002 02rr                      1-  784     	CLRR	_R_AIN1_DATA
     0003 02rr                      1-  785     	CLRR	(_R_AIN1_DATA + 1)
                                    1-  786     	.line	737, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0004 2191                      1-  787     	MOVIA	0x91
     0005 00rr                      1-  788     	MOVAR	_ADMD
                                    1-  789     	.line	738, "main.c"; 	delay(200);	
     0006 21C8                      1-  790     	MOVIA	0xc8
     0007 2rrr                      1-  791     	LCALL	_delay
                                    1-  792     	.line	739, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  793     	MOVIA	0x01
                                    1-  794     	BANKSEL	r0x1027
     0009 00rr                      1-  795     	MOVAR	r0x1027
     000A                           1-  796     _00519_DS_:
                                    1-  797     	BANKSEL	r0x1027
     000A 01rr                      1-  798     	MOVR	r0x1027,W
                                    1-  799     	BANKSEL	r0x1026
     000B 04rr                      1-  800     	SUBAR	r0x1026,W
     000C 0803                      1-  801     	BTRSS	STATUS,0
     000D 3rrr                      1-  802     	LGOTO	_00521_DS_
                                    1-  803     	.line	741, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1-  804     	BSR	_ADMDbits,6
                                    1-  805     	.line	742, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     000F 2rrr                      1-  806     	LCALL	_F_wait_eoc
                                    1-  807     	.line	743, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1-  808     	MOVIA	0x0f
     0011 10rr                      1-  809     	ANDAR	_ADR,W
                                    1-  810     ;;3	MOVAR	r0x1028
                                    1-  811     	BANKSEL	_R_AIN1_DATA_LB
     0012 03rr                      1-  812     	ADDAR	_R_AIN1_DATA_LB,F
                                    1-  813     	.line	744, "main.c"; 	R_AIN1_DATA    += ADD; 
     0013 01rr                      1-  814     	MOVR	_ADD,W
                                    1-  815     	BANKSEL	r0x1028
     0014 00rr                      1-  816     	MOVAR	r0x1028
                                    1-  817     ;;1	CLRR	r0x1029
                                    1-  818     ;;110	MOVR	r0x1028,W
                                    1-  819     ;;108	MOVAR	r0x102A
     0015 2100                      1-  820     	MOVIA	0x00
                                    1-  821     	BANKSEL	r0x102B
     0016 00rr                      1-  822     	MOVAR	r0x102B
                                    1-  823     ;;109	MOVR	r0x102A,W
                                    1-  824     	BANKSEL	r0x1028
     0017 01rr                      1-  825     	MOVR	r0x1028,W
                                    1-  826     	BANKSEL	_R_AIN1_DATA
     0018 03rr                      1-  827     	ADDAR	_R_AIN1_DATA,F
                                    1-  828     	BANKSEL	r0x102B
     0019 01rr                      1-  829     	MOVR	r0x102B,W
     001A 0C03                      1-  830     	BTRSC	STATUS,0
     001B 05rr                      1-  831     	INCR	r0x102B,W
     001C 0D03                      1-  832     	BTRSC	STATUS,2
     001D 3rrr                      1-  833     	LGOTO	_00003_DS_
                                    1-  834     	BANKSEL	_R_AIN1_DATA
     001E 03rr                      1-  835     	ADDAR	(_R_AIN1_DATA + 1),F
     001F                           1-  836     _00003_DS_:
                                    1-  837     	.line	739, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  838     	BANKSEL	r0x1027
     001F 05rr                      1-  839     	INCR	r0x1027,F
     0020 3rrr                      1-  840     	LGOTO	_00519_DS_
     0021                           1-  841     _00521_DS_:
                                    1-  842     	.line	746, "main.c"; 	}
                                    1-  843     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1-  844     ; exit point of _F_AIN1_Convert
                                    1-  846     ;***
                                    1-  847     ;  pBlock Stats: dbName = C
                                    1-  848     ;***
                                    1-  849     ;has an exit
                                    1-  850     ;functions called:
                                    1-  851     ;   _delay
                                    1-  852     ;   _F_wait_eoc
                                    1-  853     ;   _delay
                                    1-  854     ;   _F_wait_eoc
                                    1-  855     ;6 compiler assigned registers:
                                    1-  856     ;   r0x102C
                                    1-  857     ;   r0x102D
                                    1-  858     ;   r0x102E
                                    1-  859     ;   r0x102F
                                    1-  860     ;   r0x1030
                                    1-  861     ;   r0x1031
                                    1-  862     ;; Starting pCode block
                                    1-  863     .segment "code"; module=main, function=_F_VDD_Convert
                                    1-  865     ;local variable name mapping:
     0000                           1-  868     _F_VDD_Convert:
                                    1-  869     ; 2 exit points
                                    1-  870     	.line	718, "main.c"; 	void F_VDD_Convert(char count)
                                    1-  871     	BANKSEL	r0x102C
     0000 00rr                      1-  872     	MOVAR	r0x102C
                                    1-  873     	.line	720, "main.c"; 	R_VDD_DATA=R_VDD_DATA_LB=0x00;   
                                    1-  874     	BANKSEL	_R_VDD_DATA_LB
     0001 02rr                      1-  875     	CLRR	_R_VDD_DATA_LB
                                    1-  876     	BANKSEL	_R_VDD_DATA
     0002 02rr                      1-  877     	CLRR	_R_VDD_DATA
     0003 02rr                      1-  878     	CLRR	(_R_VDD_DATA + 1)
                                    1-  879     	.line	722, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;				// Select AIN6(PB1) pad as ADC input
     0004 219B                      1-  880     	MOVIA	0x9b
     0005 00rr                      1-  881     	MOVAR	_ADMD
                                    1-  882     	.line	723, "main.c"; 	delay(200);	
     0006 21C8                      1-  883     	MOVIA	0xc8
     0007 2rrr                      1-  884     	LCALL	_delay
                                    1-  885     	.line	724, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  886     	MOVIA	0x01
                                    1-  887     	BANKSEL	r0x102D
     0009 00rr                      1-  888     	MOVAR	r0x102D
     000A                           1-  889     _00510_DS_:
                                    1-  890     	BANKSEL	r0x102D
     000A 01rr                      1-  891     	MOVR	r0x102D,W
                                    1-  892     	BANKSEL	r0x102C
     000B 04rr                      1-  893     	SUBAR	r0x102C,W
     000C 0803                      1-  894     	BTRSS	STATUS,0
     000D 3rrr                      1-  895     	LGOTO	_00512_DS_
                                    1-  896     	.line	726, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1-  897     	BSR	_ADMDbits,6
                                    1-  898     	.line	727, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     000F 2rrr                      1-  899     	LCALL	_F_wait_eoc
                                    1-  900     	.line	728, "main.c"; 	R_VDD_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1-  901     	MOVIA	0x0f
     0011 10rr                      1-  902     	ANDAR	_ADR,W
                                    1-  903     ;;3	MOVAR	r0x102E
                                    1-  904     	BANKSEL	_R_VDD_DATA_LB
     0012 03rr                      1-  905     	ADDAR	_R_VDD_DATA_LB,F
                                    1-  906     	.line	729, "main.c"; 	R_VDD_DATA    += ADD; 
     0013 01rr                      1-  907     	MOVR	_ADD,W
                                    1-  908     	BANKSEL	r0x102E
     0014 00rr                      1-  909     	MOVAR	r0x102E
                                    1-  910     ;;1	CLRR	r0x102F
                                    1-  911     ;;107	MOVR	r0x102E,W
                                    1-  912     ;;105	MOVAR	r0x1030
     0015 2100                      1-  913     	MOVIA	0x00
                                    1-  914     	BANKSEL	r0x1031
     0016 00rr                      1-  915     	MOVAR	r0x1031
                                    1-  916     ;;106	MOVR	r0x1030,W
                                    1-  917     	BANKSEL	r0x102E
     0017 01rr                      1-  918     	MOVR	r0x102E,W
                                    1-  919     	BANKSEL	_R_VDD_DATA
     0018 03rr                      1-  920     	ADDAR	_R_VDD_DATA,F
                                    1-  921     	BANKSEL	r0x1031
     0019 01rr                      1-  922     	MOVR	r0x1031,W
     001A 0C03                      1-  923     	BTRSC	STATUS,0
     001B 05rr                      1-  924     	INCR	r0x1031,W
     001C 0D03                      1-  925     	BTRSC	STATUS,2
     001D 3rrr                      1-  926     	LGOTO	_00004_DS_
                                    1-  927     	BANKSEL	_R_VDD_DATA
     001E 03rr                      1-  928     	ADDAR	(_R_VDD_DATA + 1),F
     001F                           1-  929     _00004_DS_:
                                    1-  930     	.line	724, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  931     	BANKSEL	r0x102D
     001F 05rr                      1-  932     	INCR	r0x102D,F
     0020 3rrr                      1-  933     	LGOTO	_00510_DS_
     0021                           1-  934     _00512_DS_:
                                    1-  935     	.line	731, "main.c"; 	}
                                    1-  936     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1-  937     ; exit point of _F_VDD_Convert
                                    1-  939     ;***
                                    1-  940     ;  pBlock Stats: dbName = C
                                    1-  941     ;***
                                    1-  942     ;has an exit
                                    1-  943     ;2 compiler assigned registers:
                                    1-  944     ;   r0x1018
                                    1-  945     ;   r0x1019
                                    1-  946     ;; Starting pCode block
                                    1-  947     .segment "code"; module=main, function=_delay
                                    1-  949     ;local variable name mapping:
     0000                           1-  952     _delay:
                                    1-  953     ; 2 exit points
                                    1-  954     	.line	711, "main.c"; 	void delay(u8t time)
                                    1-  955     	BANKSEL	r0x1018
     0000 00rr                      1-  956     	MOVAR	r0x1018
                                    1-  957     	.line	713, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  958     	BANKSEL	r0x1019
     0001 02rr                      1-  959     	CLRR	r0x1019
     0002                           1-  960     _00501_DS_:
                                    1-  961     	BANKSEL	r0x1018
     0002 01rr                      1-  962     	MOVR	r0x1018,W
                                    1-  963     	BANKSEL	r0x1019
     0003 04rr                      1-  964     	SUBAR	r0x1019,W
     0004 0C03                      1-  965     	BTRSC	STATUS,0
     0005 3rrr                      1-  966     	LGOTO	_00503_DS_
                                    1-  967     	.line	714, "main.c"; 	NOP();
     0006 0000                      1-  968     	nop
                                    1-  969     	.line	713, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  970     	BANKSEL	r0x1019
     0007 05rr                      1-  971     	INCR	r0x1019,F
     0008 3rrr                      1-  972     	LGOTO	_00501_DS_
     0009                           1-  973     _00503_DS_:
                                    1-  974     	.line	715, "main.c"; 	}
                                    1-  975     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1-  976     ; exit point of _delay
                                    1-  978     ;***
                                    1-  979     ;  pBlock Stats: dbName = C
                                    1-  980     ;***
                                    1-  981     ;has an exit
                                    1-  982     ;; Starting pCode block
                                    1-  983     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  985     _F_wait_eoc:
                                    1-  986     ; 2 exit points
     0000                           1-  987     _00494_DS_:
                                    1-  988     	.line	705, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  989     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  990     	LGOTO	_00494_DS_
                                    1-  991     	.line	707, "main.c"; 	}
                                    1-  992     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  993     ; exit point of _F_wait_eoc
                                    1-  995     ;***
                                    1-  996     ;  pBlock Stats: dbName = C
                                    1-  997     ;***
                                    1-  998     ;has an exit
                                    1-  999     ;functions called:
                                    1- 1000     ;   _LedInput
                                    1- 1001     ;   _LedInput
                                    1- 1002     ;   _LEDMODE4
                                    1- 1003     ;   _LEDMODE3
                                    1- 1004     ;   _LEDMODE2
                                    1- 1005     ;   _LEDMODE1
                                    1- 1006     ;   _LedInput
                                    1- 1007     ;   _LedInput
                                    1- 1008     ;   _BATLOW
                                    1- 1009     ;   _BATLOW
                                    1- 1010     ;   _BATHIGHT
                                    1- 1011     ;   _LedInput
                                    1- 1012     ;   _POWERLOW
                                    1- 1013     ;   _POWERLOW
                                    1- 1014     ;   _POWERMID
                                    1- 1015     ;   _POWERLOW
                                    1- 1016     ;   _POWERMID
                                    1- 1017     ;   _POWERHIGHT
                                    1- 1018     ;   _LedInput
                                    1- 1019     ;   _LedInput
                                    1- 1020     ;   _LEDMODE4
                                    1- 1021     ;   _LEDMODE3
                                    1- 1022     ;   _LEDMODE2
                                    1- 1023     ;   _LEDMODE1
                                    1- 1024     ;   _LedInput
                                    1- 1025     ;   _LedInput
                                    1- 1026     ;   _BATLOW
                                    1- 1027     ;   _BATLOW
                                    1- 1028     ;   _BATHIGHT
                                    1- 1029     ;   _LedInput
                                    1- 1030     ;   _POWERLOW
                                    1- 1031     ;   _POWERLOW
                                    1- 1032     ;   _POWERMID
                                    1- 1033     ;   _POWERLOW
                                    1- 1034     ;   _POWERMID
                                    1- 1035     ;   _POWERHIGHT
                                    1- 1036     ;; Starting pCode block
                                    1- 1037     .segment "code"; module=main, function=_modeLedShow
     0000                           1- 1039     _modeLedShow:
                                    1- 1040     ; 2 exit points
                                    1- 1041     	.line	645, "main.c"; 	LedInput();
     0000 2rrr                      1- 1042     	LCALL	_LedInput
                                    1- 1043     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1044     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 1045     	.line	646, "main.c"; 	switch(modeStep)
     0001 2105                      1- 1046     	MOVIA	0x05
                                    1- 1047     	BANKSEL	_modeStep
     0002 04rr                      1- 1048     	SUBAR	_modeStep,W
     0003 0C03                      1- 1049     	BTRSC	STATUS,0
     0004 3rrr                      1- 1050     	LGOTO	_00462_DS_
     0005 21rr                      1- 1051     	MOVIA	((_00485_DS_ >> 8) & 0xff)
     0006 008A                      1- 1052     	MOVAR	PCHBUF
     0007 01rr                      1- 1053     	MOVR	_modeStep,W
     0008 25rr                      1- 1054     	ADDIA	_00485_DS_
     0009 0C03                      1- 1055     	BTRSC	STATUS,0
     000A 058A                      1- 1056     	INCR	PCHBUF,F
     000B 0082                      1- 1057     	MOVAR	PCL
     000C                           1- 1058     _00485_DS_:
     000C 3rrr                      1- 1059     	LGOTO	_00457_DS_
     000D 3rrr                      1- 1060     	LGOTO	_00461_DS_
     000E 3rrr                      1- 1061     	LGOTO	_00460_DS_
     000F 3rrr                      1- 1062     	LGOTO	_00459_DS_
     0010 3rrr                      1- 1063     	LGOTO	_00458_DS_
     0011                           1- 1064     _00457_DS_:
                                    1- 1065     	.line	649, "main.c"; 	LedInput();
     0011 2rrr                      1- 1066     	LCALL	_LedInput
                                    1- 1067     	.line	650, "main.c"; 	break;
     0012 3rrr                      1- 1068     	LGOTO	_00463_DS_
     0013                           1- 1069     _00458_DS_:
                                    1- 1070     	.line	652, "main.c"; 	LEDMODE4();
     0013 2rrr                      1- 1071     	LCALL	_LEDMODE4
                                    1- 1072     	.line	653, "main.c"; 	break;
     0014 3rrr                      1- 1073     	LGOTO	_00463_DS_
     0015                           1- 1074     _00459_DS_:
                                    1- 1075     	.line	655, "main.c"; 	LEDMODE3();
     0015 2rrr                      1- 1076     	LCALL	_LEDMODE3
                                    1- 1077     	.line	656, "main.c"; 	break;
     0016 3rrr                      1- 1078     	LGOTO	_00463_DS_
     0017                           1- 1079     _00460_DS_:
                                    1- 1080     	.line	658, "main.c"; 	LEDMODE2();
     0017 2rrr                      1- 1081     	LCALL	_LEDMODE2
                                    1- 1082     	.line	659, "main.c"; 	break;
     0018 3rrr                      1- 1083     	LGOTO	_00463_DS_
     0019                           1- 1084     _00461_DS_:
                                    1- 1085     	.line	661, "main.c"; 	LEDMODE1();
     0019 2rrr                      1- 1086     	LCALL	_LEDMODE1
                                    1- 1087     	.line	662, "main.c"; 	break;
     001A 3rrr                      1- 1088     	LGOTO	_00463_DS_
     001B                           1- 1089     _00462_DS_:
                                    1- 1090     	.line	664, "main.c"; 	LedInput();
     001B 2rrr                      1- 1091     	LCALL	_LedInput
                                    1- 1092     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1093     ;;unsigned compare: left >= lit (0x3=3), size=1
     001C                           1- 1094     _00463_DS_:
                                    1- 1095     	.line	668, "main.c"; 	switch(chrgLedStep)
     001C 2103                      1- 1096     	MOVIA	0x03
                                    1- 1097     	BANKSEL	_chrgLedStep
     001D 04rr                      1- 1098     	SUBAR	_chrgLedStep,W
     001E 0C03                      1- 1099     	BTRSC	STATUS,0
     001F 3rrr                      1- 1100     	LGOTO	_00467_DS_
     0020 21rr                      1- 1101     	MOVIA	((_00487_DS_ >> 8) & 0xff)
     0021 008A                      1- 1102     	MOVAR	PCHBUF
     0022 01rr                      1- 1103     	MOVR	_chrgLedStep,W
     0023 25rr                      1- 1104     	ADDIA	_00487_DS_
     0024 0C03                      1- 1105     	BTRSC	STATUS,0
     0025 058A                      1- 1106     	INCR	PCHBUF,F
     0026 0082                      1- 1107     	MOVAR	PCL
     0027                           1- 1108     _00487_DS_:
     0027 3rrr                      1- 1109     	LGOTO	_00464_DS_
     0028 3rrr                      1- 1110     	LGOTO	_00465_DS_
     0029 3rrr                      1- 1111     	LGOTO	_00466_DS_
     002A                           1- 1112     _00464_DS_:
                                    1- 1113     	.line	671, "main.c"; 	LedInput();
     002A 2rrr                      1- 1114     	LCALL	_LedInput
                                    1- 1115     	.line	672, "main.c"; 	break;
     002B 3rrr                      1- 1116     	LGOTO	_00467_DS_
     002C                           1- 1117     _00465_DS_:
                                    1- 1118     	.line	674, "main.c"; 	BATLOW();
     002C 2rrr                      1- 1119     	LCALL	_BATLOW
                                    1- 1120     	.line	675, "main.c"; 	break;
     002D 3rrr                      1- 1121     	LGOTO	_00467_DS_
     002E                           1- 1122     _00466_DS_:
                                    1- 1123     	.line	677, "main.c"; 	BATLOW();
     002E 2rrr                      1- 1124     	LCALL	_BATLOW
                                    1- 1125     	.line	678, "main.c"; 	BATHIGHT();
     002F 2rrr                      1- 1126     	LCALL	_BATHIGHT
                                    1- 1127     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1128     ;;unsigned compare: left >= lit (0x4=4), size=1
     0030                           1- 1129     _00467_DS_:
                                    1- 1130     	.line	682, "main.c"; 	switch(powerStep)
     0030 2104                      1- 1131     	MOVIA	0x04
                                    1- 1132     	BANKSEL	_powerStep
     0031 04rr                      1- 1133     	SUBAR	_powerStep,W
     0032 0C03                      1- 1134     	BTRSC	STATUS,0
     0033 3rrr                      1- 1135     	LGOTO	_00473_DS_
     0034 21rr                      1- 1136     	MOVIA	((_00489_DS_ >> 8) & 0xff)
     0035 008A                      1- 1137     	MOVAR	PCHBUF
     0036 01rr                      1- 1138     	MOVR	_powerStep,W
     0037 25rr                      1- 1139     	ADDIA	_00489_DS_
     0038 0C03                      1- 1140     	BTRSC	STATUS,0
     0039 058A                      1- 1141     	INCR	PCHBUF,F
     003A 0082                      1- 1142     	MOVAR	PCL
     003B                           1- 1143     _00489_DS_:
     003B 3rrr                      1- 1144     	LGOTO	_00468_DS_
     003C 3rrr                      1- 1145     	LGOTO	_00469_DS_
     003D 3rrr                      1- 1146     	LGOTO	_00470_DS_
     003E 3rrr                      1- 1147     	LGOTO	_00471_DS_
     003F                           1- 1148     _00468_DS_:
                                    1- 1149     	.line	685, "main.c"; 	LedInput();
     003F 2rrr                      1- 1150     	LCALL	_LedInput
                                    1- 1151     	.line	686, "main.c"; 	break;
     0040 3rrr                      1- 1152     	LGOTO	_00473_DS_
     0041                           1- 1153     _00469_DS_:
                                    1- 1154     	.line	688, "main.c"; 	POWERLOW();
     0041 2rrr                      1- 1155     	LCALL	_POWERLOW
                                    1- 1156     	.line	689, "main.c"; 	break;
     0042 3rrr                      1- 1157     	LGOTO	_00473_DS_
     0043                           1- 1158     _00470_DS_:
                                    1- 1159     	.line	691, "main.c"; 	POWERLOW();
     0043 2rrr                      1- 1160     	LCALL	_POWERLOW
                                    1- 1161     	.line	692, "main.c"; 	POWERMID();
     0044 2rrr                      1- 1162     	LCALL	_POWERMID
                                    1- 1163     	.line	693, "main.c"; 	break;
     0045 3rrr                      1- 1164     	LGOTO	_00473_DS_
     0046                           1- 1165     _00471_DS_:
                                    1- 1166     	.line	695, "main.c"; 	POWERLOW();
     0046 2rrr                      1- 1167     	LCALL	_POWERLOW
                                    1- 1168     	.line	696, "main.c"; 	POWERMID();
     0047 2rrr                      1- 1169     	LCALL	_POWERMID
                                    1- 1170     	.line	697, "main.c"; 	POWERHIGHT();
     0048 2rrr                      1- 1171     	LCALL	_POWERHIGHT
     0049                           1- 1172     _00473_DS_:
                                    1- 1173     	.line	700, "main.c"; 	}
                                    1- 1174     	RETURN	
     0049 0010                      3-   26 m1      ret
                                    1- 1175     ; exit point of _modeLedShow
                                    1- 1177     ;***
                                    1- 1178     ;  pBlock Stats: dbName = C
                                    1- 1179     ;***
                                    1- 1180     ;has an exit
                                    1- 1181     ;functions called:
                                    1- 1182     ;   _delay
                                    1- 1183     ;   _delay
                                    1- 1184     ;; Starting pCode block
                                    1- 1185     .segment "code"; module=main, function=_initAD
     0000                           1- 1187     _initAD:
                                    1- 1188     ; 2 exit points
                                    1- 1189     	.line	622, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1190     	MOVIA	0x84
     0001 00rr                      1- 1191     	MOVAR	_ADMD
                                    1- 1192     	.line	625, "main.c"; 	ADVREFH = C_Vrefh_4V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 2102                      1- 1193     	MOVIA	0x02
     0003 00rr                      1- 1194     	MOVAR	_ADVREFH
                                    1- 1195     	.line	632, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0004 2110                      1- 1196     	MOVIA	0x10
     0005 00rr                      1- 1197     	MOVAR	_ADR
                                    1- 1198     	.line	634, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0006 2103                      1- 1199     	MOVIA	0x03
     0007 00rr                      1- 1200     	MOVAR	_ADCR
                                    1- 1201     	.line	637, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0008 1Arr                      1- 1202     	BSR	_ADMDbits,4
                                    1- 1203     	.line	638, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0009 2164                      1- 1204     	MOVIA	0x64
     000A 2rrr                      1- 1205     	LCALL	_delay
                                    1- 1206     	.line	641, "main.c"; 	}
                                    1- 1207     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 1208     ; exit point of _initAD
                                    1- 1210     ;***
                                    1- 1211     ;  pBlock Stats: dbName = C
                                    1- 1212     ;***
                                    1- 1213     ;has an exit
                                    1- 1214     ;1 compiler assigned register :
                                    1- 1215     ;   r0x1034
                                    1- 1216     ;; Starting pCode block
                                    1- 1217     .segment "code"; module=main, function=_keyRead
                                    1- 1219     ;local variable name mapping:
     0000                           1- 1221     _keyRead:
                                    1- 1222     ; 2 exit points
                                    1- 1223     	.line	583, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1224     	BANKSEL	r0x1034
     0000 00rr                      1- 1225     	MOVAR	r0x1034
                                    1- 1226     	.line	585, "main.c"; 	if(keyStatus)
     0001 01rr                      1- 1227     	MOVR	r0x1034,W
     0002 0D03                      1- 1228     	BTRSC	STATUS,2
     0003 3rrr                      1- 1229     	LGOTO	_00446_DS_
                                    1- 1230     	.line	587, "main.c"; 	keyNub = keyStatus;
     0004 01rr                      1- 1231     	MOVR	r0x1034,W
                                    1- 1232     	BANKSEL	_keyNub
     0005 00rr                      1- 1233     	MOVAR	_keyNub
                                    1- 1234     	.line	588, "main.c"; 	keyCount++;
                                    1- 1235     	BANKSEL	_keyCount
     0006 05rr                      1- 1236     	INCR	_keyCount,F
                                    1- 1237     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1238     	.line	589, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1239     	MOVIA	0xc8
     0008 04rr                      1- 1240     	SUBAR	_keyCount,W
     0009 0803                      1- 1241     	BTRSS	STATUS,0
     000A 3rrr                      1- 1242     	LGOTO	_00447_DS_
                                    1- 1243     	.line	591, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1244     	MOVIA	0xc8
     000C 00rr                      1- 1245     	MOVAR	_keyCount
                                    1- 1246     	.line	592, "main.c"; 	if(!longPressFlag)
                                    1- 1247     	BANKSEL	_Status
     000D 0Crr                      1- 1248     	BTRSC	_Status,1
     000E 3rrr                      1- 1249     	LGOTO	_00447_DS_
                                    1- 1250     	.line	594, "main.c"; 	longPressFlag = 1;
     000F 18rr                      1- 1251     	BSR	_Status,1
                                    1- 1252     	.line	595, "main.c"; 	return 2;
     0010 2102                      1- 1253     	MOVIA	0x02
     0011 3rrr                      1- 1254     	LGOTO	_00448_DS_
                                    1- 1255     ;;unsigned compare: left < lit (0xC8=200), size=1
     0012                           1- 1256     _00446_DS_:
                                    1- 1257     	.line	601, "main.c"; 	if(keyCount >= 200)
     0012 21C8                      1- 1258     	MOVIA	0xc8
                                    1- 1259     	BANKSEL	_keyCount
     0013 04rr                      1- 1260     	SUBAR	_keyCount,W
     0014 0803                      1- 1261     	BTRSS	STATUS,0
     0015 3rrr                      1- 1262     	LGOTO	_00443_DS_
                                    1- 1263     	.line	603, "main.c"; 	keyCount = 0;
     0016 02rr                      1- 1264     	CLRR	_keyCount
                                    1- 1265     	.line	604, "main.c"; 	longPressFlag = 0;
                                    1- 1266     	BANKSEL	_Status
     0017 1Crr                      1- 1267     	BCR	_Status,1
                                    1- 1268     	.line	605, "main.c"; 	return	0;
     0018 2100                      1- 1269     	MOVIA	0x00
     0019 3rrr                      1- 1270     	LGOTO	_00448_DS_
                                    1- 1271     ;;unsigned compare: left < lit (0x8=8), size=1
     001A                           1- 1272     _00443_DS_:
                                    1- 1273     	.line	607, "main.c"; 	else if(keyCount >= 8)
     001A 2108                      1- 1274     	MOVIA	0x08
                                    1- 1275     	BANKSEL	_keyCount
     001B 04rr                      1- 1276     	SUBAR	_keyCount,W
     001C 0803                      1- 1277     	BTRSS	STATUS,0
     001D 3rrr                      1- 1278     	LGOTO	_00444_DS_
                                    1- 1279     	.line	609, "main.c"; 	keyCount = 0;
     001E 02rr                      1- 1280     	CLRR	_keyCount
                                    1- 1281     	.line	610, "main.c"; 	return	1;
     001F 2101                      1- 1282     	MOVIA	0x01
     0020 3rrr                      1- 1283     	LGOTO	_00448_DS_
     0021                           1- 1284     _00444_DS_:
                                    1- 1285     	.line	612, "main.c"; 	keyCount = 0;
                                    1- 1286     	BANKSEL	_keyCount
     0021 02rr                      1- 1287     	CLRR	_keyCount
                                    1- 1288     	.line	613, "main.c"; 	keyNub = 0;
                                    1- 1289     	BANKSEL	_keyNub
     0022 02rr                      1- 1290     	CLRR	_keyNub
     0023                           1- 1291     _00447_DS_:
                                    1- 1292     	.line	615, "main.c"; 	return 0;
     0023 2100                      1- 1293     	MOVIA	0x00
     0024                           1- 1294     _00448_DS_:
                                    1- 1295     	.line	616, "main.c"; 	}
                                    1- 1296     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1- 1297     ; exit point of _keyRead
                                    1- 1299     ;***
                                    1- 1300     ;  pBlock Stats: dbName = C
                                    1- 1301     ;***
                                    1- 1302     ;has an exit
                                    1- 1303     ;functions called:
                                    1- 1304     ;   _F_AIN4_Convert
                                    1- 1305     ;   _F_AIN4_Convert
                                    1- 1306     ;4 compiler assigned registers:
                                    1- 1307     ;   r0x1035
                                    1- 1308     ;   r0x1036
                                    1- 1309     ;   r0x1037
                                    1- 1310     ;   r0x1038
                                    1- 1311     ;; Starting pCode block
                                    1- 1312     .segment "code"; module=main, function=_checkHotAD
     0000                           1- 1314     _checkHotAD:
                                    1- 1315     ; 2 exit points
                                    1- 1316     	.line	574, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1317     	BANKSEL	_R_AIN4_DATA_LB
     0000 02rr                      1- 1318     	CLRR	_R_AIN4_DATA_LB
                                    1- 1319     	BANKSEL	_R_AIN4_DATA
     0001 02rr                      1- 1320     	CLRR	_R_AIN4_DATA
     0002 02rr                      1- 1321     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1322     	.line	575, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1- 1323     	MOVIA	0x08
     0004 2rrr                      1- 1324     	LCALL	_F_AIN4_Convert
                                    1- 1325     	.line	576, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1326     	BANKSEL	_R_AIN4_DATA
     0005 15rr                      1- 1327     	SWAPR	(_R_AIN4_DATA + 1),W
     0006 22F0                      1- 1328     	ANDIA	0xf0
     0007 00rr                      1- 1329     	MOVAR	(_R_AIN4_DATA + 1)
     0008 15rr                      1- 1330     	SWAPR	_R_AIN4_DATA,W
     0009 00rr                      1- 1331     	MOVAR	_R_AIN4_DATA
     000A 220F                      1- 1332     	ANDIA	0x0f
     000B 11rr                      1- 1333     	IORAR	(_R_AIN4_DATA + 1),F
     000C 12rr                      1- 1334     	XORAR	_R_AIN4_DATA,F
                                    1- 1335     	.line	577, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1- 1336     	MOVIA	0xf0
                                    1- 1337     	BANKSEL	_R_AIN4_DATA_LB
     000E 10rr                      1- 1338     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1339     	.line	578, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1- 1340     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1341     	BANKSEL	r0x1037
     0010 00rr                      1- 1342     	MOVAR	r0x1037
                                    1- 1343     ;;1	MOVAR	r0x1035
                                    1- 1344     ;;1	CLRR	r0x1036
                                    1- 1345     ;;104	MOVR	r0x1035,W
     0011 2100                      1- 1346     	MOVIA	0x00
                                    1- 1347     	BANKSEL	r0x1038
     0012 00rr                      1- 1348     	MOVAR	r0x1038
                                    1- 1349     	BANKSEL	r0x1037
     0013 01rr                      1- 1350     	MOVR	r0x1037,W
                                    1- 1351     	BANKSEL	_R_AIN4_DATA
     0014 03rr                      1- 1352     	ADDAR	_R_AIN4_DATA,F
                                    1- 1353     	BANKSEL	r0x1038
     0015 01rr                      1- 1354     	MOVR	r0x1038,W
     0016 0C03                      1- 1355     	BTRSC	STATUS,0
     0017 05rr                      1- 1356     	INCR	r0x1038,W
     0018 0D03                      1- 1357     	BTRSC	STATUS,2
     0019 3rrr                      1- 1358     	LGOTO	_00005_DS_
                                    1- 1359     	BANKSEL	_R_AIN4_DATA
     001A 03rr                      1- 1360     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1361     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001B                           1- 1362     _00005_DS_:
                                    1- 1363     	.line	579, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     001B 1C03                      1- 1364     	BCR	STATUS,0
                                    1- 1365     	BANKSEL	_R_AIN4_DATA
     001C 13rr                      1- 1366     	RRR	(_R_AIN4_DATA + 1),F
     001D 13rr                      1- 1367     	RRR	_R_AIN4_DATA,F
                                    1- 1368     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001E 1C03                      1- 1369     	BCR	STATUS,0
     001F 13rr                      1- 1370     	RRR	(_R_AIN4_DATA + 1),F
     0020 13rr                      1- 1371     	RRR	_R_AIN4_DATA,F
                                    1- 1372     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0021 1C03                      1- 1373     	BCR	STATUS,0
     0022 13rr                      1- 1374     	RRR	(_R_AIN4_DATA + 1),F
     0023 13rr                      1- 1375     	RRR	_R_AIN4_DATA,F
                                    1- 1376     	.line	580, "main.c"; 	}
                                    1- 1377     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1- 1378     ; exit point of _checkHotAD
                                    1- 1380     ;***
                                    1- 1381     ;  pBlock Stats: dbName = C
                                    1- 1382     ;***
                                    1- 1383     ;has an exit
                                    1- 1384     ;functions called:
                                    1- 1385     ;   _F_AIN3_Convert
                                    1- 1386     ;   _F_AIN3_Convert
                                    1- 1387     ;4 compiler assigned registers:
                                    1- 1388     ;   r0x1039
                                    1- 1389     ;   r0x103A
                                    1- 1390     ;   r0x103B
                                    1- 1391     ;   r0x103C
                                    1- 1392     ;; Starting pCode block
                                    1- 1393     .segment "code"; module=main, function=_checkTouchAD
     0000                           1- 1395     _checkTouchAD:
                                    1- 1396     ; 2 exit points
                                    1- 1397     	.line	563, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1398     	BANKSEL	_R_AIN3_DATA_LB
     0000 02rr                      1- 1399     	CLRR	_R_AIN3_DATA_LB
                                    1- 1400     	BANKSEL	_R_AIN3_DATA
     0001 02rr                      1- 1401     	CLRR	_R_AIN3_DATA
     0002 02rr                      1- 1402     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1403     	.line	564, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1- 1404     	MOVIA	0x08
     0004 2rrr                      1- 1405     	LCALL	_F_AIN3_Convert
                                    1- 1406     	.line	565, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1407     	BANKSEL	_R_AIN3_DATA
     0005 15rr                      1- 1408     	SWAPR	(_R_AIN3_DATA + 1),W
     0006 22F0                      1- 1409     	ANDIA	0xf0
     0007 00rr                      1- 1410     	MOVAR	(_R_AIN3_DATA + 1)
     0008 15rr                      1- 1411     	SWAPR	_R_AIN3_DATA,W
     0009 00rr                      1- 1412     	MOVAR	_R_AIN3_DATA
     000A 220F                      1- 1413     	ANDIA	0x0f
     000B 11rr                      1- 1414     	IORAR	(_R_AIN3_DATA + 1),F
     000C 12rr                      1- 1415     	XORAR	_R_AIN3_DATA,F
                                    1- 1416     	.line	566, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1- 1417     	MOVIA	0xf0
                                    1- 1418     	BANKSEL	_R_AIN3_DATA_LB
     000E 10rr                      1- 1419     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1420     	.line	567, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1- 1421     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1422     	BANKSEL	r0x103B
     0010 00rr                      1- 1423     	MOVAR	r0x103B
                                    1- 1424     ;;1	MOVAR	r0x1039
                                    1- 1425     ;;1	CLRR	r0x103A
                                    1- 1426     ;;103	MOVR	r0x1039,W
     0011 2100                      1- 1427     	MOVIA	0x00
                                    1- 1428     	BANKSEL	r0x103C
     0012 00rr                      1- 1429     	MOVAR	r0x103C
                                    1- 1430     	BANKSEL	r0x103B
     0013 01rr                      1- 1431     	MOVR	r0x103B,W
                                    1- 1432     	BANKSEL	_R_AIN3_DATA
     0014 03rr                      1- 1433     	ADDAR	_R_AIN3_DATA,F
                                    1- 1434     	BANKSEL	r0x103C
     0015 01rr                      1- 1435     	MOVR	r0x103C,W
     0016 0C03                      1- 1436     	BTRSC	STATUS,0
     0017 05rr                      1- 1437     	INCR	r0x103C,W
     0018 0D03                      1- 1438     	BTRSC	STATUS,2
     0019 3rrr                      1- 1439     	LGOTO	_00006_DS_
                                    1- 1440     	BANKSEL	_R_AIN3_DATA
     001A 03rr                      1- 1441     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1442     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001B                           1- 1443     _00006_DS_:
                                    1- 1444     	.line	568, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     001B 1C03                      1- 1445     	BCR	STATUS,0
                                    1- 1446     	BANKSEL	_R_AIN3_DATA
     001C 13rr                      1- 1447     	RRR	(_R_AIN3_DATA + 1),F
     001D 13rr                      1- 1448     	RRR	_R_AIN3_DATA,F
                                    1- 1449     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001E 1C03                      1- 1450     	BCR	STATUS,0
     001F 13rr                      1- 1451     	RRR	(_R_AIN3_DATA + 1),F
     0020 13rr                      1- 1452     	RRR	_R_AIN3_DATA,F
                                    1- 1453     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0021 1C03                      1- 1454     	BCR	STATUS,0
     0022 13rr                      1- 1455     	RRR	(_R_AIN3_DATA + 1),F
     0023 13rr                      1- 1456     	RRR	_R_AIN3_DATA,F
                                    1- 1457     	.line	570, "main.c"; 	}
                                    1- 1458     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1- 1459     ; exit point of _checkTouchAD
                                    1- 1461     ;***
                                    1- 1462     ;  pBlock Stats: dbName = C
                                    1- 1463     ;***
                                    1- 1464     ;has an exit
                                    1- 1465     ;functions called:
                                    1- 1466     ;   _F_AIN1_Convert
                                    1- 1467     ;   _F_AIN1_Convert
                                    1- 1468     ;4 compiler assigned registers:
                                    1- 1469     ;   r0x103D
                                    1- 1470     ;   r0x103E
                                    1- 1471     ;   r0x103F
                                    1- 1472     ;   r0x1040
                                    1- 1473     ;; Starting pCode block
                                    1- 1474     .segment "code"; module=main, function=_checkKeyAD
     0000                           1- 1476     _checkKeyAD:
                                    1- 1477     ; 2 exit points
                                    1- 1478     	.line	552, "main.c"; 	IOSTA |= 0x02;
     0000 001r                      1- 1479     	IOSTR	_IOSTA
                                    1- 1480     	BANKSEL	r0x103D
     0001 00rr                      1- 1481     	MOVAR	r0x103D
     0002 18rr                      1- 1482     	BSR	r0x103D,1
     0003 01rr                      1- 1483     	MOVR	r0x103D,W
     0004 000r                      1- 1484     	IOST	_IOSTA
                                    1- 1485     	.line	553, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA_LB = 0x00;
                                    1- 1486     	BANKSEL	_R_AIN1_DATA_LB
     0005 02rr                      1- 1487     	CLRR	_R_AIN1_DATA_LB
                                    1- 1488     	BANKSEL	_R_AIN1_DATA
     0006 02rr                      1- 1489     	CLRR	_R_AIN1_DATA
     0007 02rr                      1- 1490     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1491     	.line	554, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     0008 2108                      1- 1492     	MOVIA	0x08
     0009 2rrr                      1- 1493     	LCALL	_F_AIN1_Convert
                                    1- 1494     	.line	555, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1495     	BANKSEL	_R_AIN1_DATA
     000A 15rr                      1- 1496     	SWAPR	(_R_AIN1_DATA + 1),W
     000B 22F0                      1- 1497     	ANDIA	0xf0
     000C 00rr                      1- 1498     	MOVAR	(_R_AIN1_DATA + 1)
     000D 15rr                      1- 1499     	SWAPR	_R_AIN1_DATA,W
     000E 00rr                      1- 1500     	MOVAR	_R_AIN1_DATA
     000F 220F                      1- 1501     	ANDIA	0x0f
     0010 11rr                      1- 1502     	IORAR	(_R_AIN1_DATA + 1),F
     0011 12rr                      1- 1503     	XORAR	_R_AIN1_DATA,F
                                    1- 1504     	.line	556, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0012 21F0                      1- 1505     	MOVIA	0xf0
                                    1- 1506     	BANKSEL	_R_AIN1_DATA_LB
     0013 10rr                      1- 1507     	ANDAR	_R_AIN1_DATA_LB,F
                                    1- 1508     	.line	557, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0014 01rr                      1- 1509     	MOVR	_R_AIN1_DATA_LB,W
                                    1- 1510     	BANKSEL	r0x103D
     0015 00rr                      1- 1511     	MOVAR	r0x103D
                                    1- 1512     ;;1	CLRR	r0x103E
                                    1- 1513     ;;102	MOVR	r0x103D,W
                                    1- 1514     ;;100	MOVAR	r0x103F
     0016 2100                      1- 1515     	MOVIA	0x00
                                    1- 1516     	BANKSEL	r0x1040
     0017 00rr                      1- 1517     	MOVAR	r0x1040
                                    1- 1518     ;;101	MOVR	r0x103F,W
                                    1- 1519     	BANKSEL	r0x103D
     0018 01rr                      1- 1520     	MOVR	r0x103D,W
                                    1- 1521     	BANKSEL	_R_AIN1_DATA
     0019 03rr                      1- 1522     	ADDAR	_R_AIN1_DATA,F
                                    1- 1523     	BANKSEL	r0x1040
     001A 01rr                      1- 1524     	MOVR	r0x1040,W
     001B 0C03                      1- 1525     	BTRSC	STATUS,0
     001C 05rr                      1- 1526     	INCR	r0x1040,W
     001D 0D03                      1- 1527     	BTRSC	STATUS,2
     001E 3rrr                      1- 1528     	LGOTO	_00007_DS_
                                    1- 1529     	BANKSEL	_R_AIN1_DATA
     001F 03rr                      1- 1530     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1- 1531     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0020                           1- 1532     _00007_DS_:
                                    1- 1533     	.line	558, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 8
     0020 1C03                      1- 1534     	BCR	STATUS,0
                                    1- 1535     	BANKSEL	_R_AIN1_DATA
     0021 13rr                      1- 1536     	RRR	(_R_AIN1_DATA + 1),F
     0022 13rr                      1- 1537     	RRR	_R_AIN1_DATA,F
                                    1- 1538     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0023 1C03                      1- 1539     	BCR	STATUS,0
     0024 13rr                      1- 1540     	RRR	(_R_AIN1_DATA + 1),F
     0025 13rr                      1- 1541     	RRR	_R_AIN1_DATA,F
                                    1- 1542     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0026 1C03                      1- 1543     	BCR	STATUS,0
     0027 13rr                      1- 1544     	RRR	(_R_AIN1_DATA + 1),F
     0028 13rr                      1- 1545     	RRR	_R_AIN1_DATA,F
                                    1- 1546     	.line	559, "main.c"; 	}
                                    1- 1547     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1- 1548     ; exit point of _checkKeyAD
                                    1- 1550     ;***
                                    1- 1551     ;  pBlock Stats: dbName = C
                                    1- 1552     ;***
                                    1- 1553     ;has an exit
                                    1- 1554     ;functions called:
                                    1- 1555     ;   _F_VDD_Convert
                                    1- 1556     ;   _F_VDD_Convert
                                    1- 1557     ;4 compiler assigned registers:
                                    1- 1558     ;   r0x1041
                                    1- 1559     ;   r0x1042
                                    1- 1560     ;   r0x1043
                                    1- 1561     ;   r0x1044
                                    1- 1562     ;; Starting pCode block
                                    1- 1563     .segment "code"; module=main, function=_checkBAT
     0000                           1- 1565     _checkBAT:
                                    1- 1566     ; 2 exit points
                                    1- 1567     	.line	542, "main.c"; 	R_VDD_DATA = R_VDD_DATA_LB = 0x00;
                                    1- 1568     	BANKSEL	_R_VDD_DATA_LB
     0000 02rr                      1- 1569     	CLRR	_R_VDD_DATA_LB
                                    1- 1570     	BANKSEL	_R_VDD_DATA
     0001 02rr                      1- 1571     	CLRR	_R_VDD_DATA
     0002 02rr                      1- 1572     	CLRR	(_R_VDD_DATA + 1)
                                    1- 1573     	.line	543, "main.c"; 	F_VDD_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1- 1574     	MOVIA	0x08
     0004 2rrr                      1- 1575     	LCALL	_F_VDD_Convert
                                    1- 1576     	.line	544, "main.c"; 	R_VDD_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1577     	BANKSEL	_R_VDD_DATA
     0005 15rr                      1- 1578     	SWAPR	(_R_VDD_DATA + 1),W
     0006 22F0                      1- 1579     	ANDIA	0xf0
     0007 00rr                      1- 1580     	MOVAR	(_R_VDD_DATA + 1)
     0008 15rr                      1- 1581     	SWAPR	_R_VDD_DATA,W
     0009 00rr                      1- 1582     	MOVAR	_R_VDD_DATA
     000A 220F                      1- 1583     	ANDIA	0x0f
     000B 11rr                      1- 1584     	IORAR	(_R_VDD_DATA + 1),F
     000C 12rr                      1- 1585     	XORAR	_R_VDD_DATA,F
                                    1- 1586     	.line	545, "main.c"; 	R_VDD_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1- 1587     	MOVIA	0xf0
                                    1- 1588     	BANKSEL	_R_VDD_DATA_LB
     000E 10rr                      1- 1589     	ANDAR	_R_VDD_DATA_LB,F
                                    1- 1590     	.line	546, "main.c"; 	R_VDD_DATA += R_VDD_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1- 1591     	MOVR	_R_VDD_DATA_LB,W
                                    1- 1592     	BANKSEL	r0x1043
     0010 00rr                      1- 1593     	MOVAR	r0x1043
                                    1- 1594     ;;1	MOVAR	r0x1041
                                    1- 1595     ;;1	CLRR	r0x1042
                                    1- 1596     ;;99	MOVR	r0x1041,W
     0011 2100                      1- 1597     	MOVIA	0x00
                                    1- 1598     	BANKSEL	r0x1044
     0012 00rr                      1- 1599     	MOVAR	r0x1044
                                    1- 1600     	BANKSEL	r0x1043
     0013 01rr                      1- 1601     	MOVR	r0x1043,W
                                    1- 1602     	BANKSEL	_R_VDD_DATA
     0014 03rr                      1- 1603     	ADDAR	_R_VDD_DATA,F
                                    1- 1604     	BANKSEL	r0x1044
     0015 01rr                      1- 1605     	MOVR	r0x1044,W
     0016 0C03                      1- 1606     	BTRSC	STATUS,0
     0017 05rr                      1- 1607     	INCR	r0x1044,W
     0018 0D03                      1- 1608     	BTRSC	STATUS,2
     0019 3rrr                      1- 1609     	LGOTO	_00008_DS_
                                    1- 1610     	BANKSEL	_R_VDD_DATA
     001A 03rr                      1- 1611     	ADDAR	(_R_VDD_DATA + 1),F
                                    1- 1612     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001B                           1- 1613     _00008_DS_:
                                    1- 1614     	.line	547, "main.c"; 	R_VDD_DATA >>=3;					// R_AIN0_DATA divided 8	
     001B 1C03                      1- 1615     	BCR	STATUS,0
                                    1- 1616     	BANKSEL	_R_VDD_DATA
     001C 13rr                      1- 1617     	RRR	(_R_VDD_DATA + 1),F
     001D 13rr                      1- 1618     	RRR	_R_VDD_DATA,F
                                    1- 1619     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001E 1C03                      1- 1620     	BCR	STATUS,0
     001F 13rr                      1- 1621     	RRR	(_R_VDD_DATA + 1),F
     0020 13rr                      1- 1622     	RRR	_R_VDD_DATA,F
                                    1- 1623     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0021 1C03                      1- 1624     	BCR	STATUS,0
     0022 13rr                      1- 1625     	RRR	(_R_VDD_DATA + 1),F
     0023 13rr                      1- 1626     	RRR	_R_VDD_DATA,F
                                    1- 1627     	.line	548, "main.c"; 	}
                                    1- 1628     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1- 1629     ; exit point of _checkBAT
                                    1- 1631     ;***
                                    1- 1632     ;  pBlock Stats: dbName = C
                                    1- 1633     ;***
                                    1- 1634     ;has an exit
                                    1- 1635     ;1 compiler assigned register :
                                    1- 1636     ;   r0x1045
                                    1- 1637     ;; Starting pCode block
                                    1- 1638     .segment "code"; module=main, function=_PWM2Start
     0000                           1- 1640     _PWM2Start:
                                    1- 1641     ; 2 exit points
                                    1- 1642     	.line	527, "main.c"; 	if(T2CR1 & C_PWM2_En)
     0000 00rr                      1- 1643     	SFUNR	_T2CR1
                                    1- 1644     	BANKSEL	r0x1045
     0001 00rr                      1- 1645     	MOVAR	r0x1045
     0002 0Frr                      1- 1646     	BTRSC	r0x1045,7
                                    1- 1647     	.line	528, "main.c"; 	return;
     0003 3rrr                      1- 1648     	LGOTO	_00415_DS_
                                    1- 1649     	.line	530, "main.c"; 	TMRH = 0x00;
     0004 02rr                      1- 1650     	CLRR	_TMRH
                                    1- 1651     	.line	531, "main.c"; 	TMR2 = 100;							//频率为110K
     0005 2164                      1- 1652     	MOVIA	0x64
     0006 00rr                      1- 1653     	SFUN	_TMR2
                                    1- 1654     	.line	532, "main.c"; 	PWM2DUTY = 66;				// 		
     0007 2142                      1- 1655     	MOVIA	0x42
     0008 00rr                      1- 1656     	SFUN	_PWM2DUTY
                                    1- 1657     	.line	534, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div32;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0009 2104                      1- 1658     	MOVIA	0x04
     000A 00rr                      1- 1659     	SFUN	_T2CR2
                                    1- 1660     	.line	535, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000B 2183                      1- 1661     	MOVIA	0x83
     000C 00rr                      1- 1662     	SFUN	_T2CR1
     000D                           1- 1663     _00415_DS_:
                                    1- 1664     	.line	537, "main.c"; 	}
                                    1- 1665     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1- 1666     ; exit point of _PWM2Start
                                    1- 1668     ;***
                                    1- 1669     ;  pBlock Stats: dbName = C
                                    1- 1670     ;***
                                    1- 1671     ;has an exit
                                    1- 1672     ;1 compiler assigned register :
                                    1- 1673     ;   r0x1046
                                    1- 1674     ;; Starting pCode block
                                    1- 1675     .segment "code"; module=main, function=_PWM1Start
     0000                           1- 1677     _PWM1Start:
                                    1- 1678     ; 2 exit points
                                    1- 1679     	.line	514, "main.c"; 	if(T1CR1 & C_PWM1_En)
     0000 00rr                      1- 1680     	SFUNR	_T1CR1
                                    1- 1681     	BANKSEL	r0x1046
     0001 00rr                      1- 1682     	MOVAR	r0x1046
     0002 0Frr                      1- 1683     	BTRSC	r0x1046,7
                                    1- 1684     	.line	515, "main.c"; 	return;
     0003 3rrr                      1- 1685     	LGOTO	_00408_DS_
                                    1- 1686     	.line	517, "main.c"; 	TMRH = 0x00;
     0004 02rr                      1- 1687     	CLRR	_TMRH
                                    1- 1688     	.line	518, "main.c"; 	TMR1 = 100;							//频率为110K
     0005 2164                      1- 1689     	MOVIA	0x64
     0006 00rr                      1- 1690     	SFUN	_TMR1
                                    1- 1691     	.line	519, "main.c"; 	PWM1DUTY = 66;				// 		
     0007 2142                      1- 1692     	MOVIA	0x42
     0008 00rr                      1- 1693     	SFUN	_PWM1DUTY
                                    1- 1694     	.line	521, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div32;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0009 2104                      1- 1695     	MOVIA	0x04
     000A 00rr                      1- 1696     	SFUN	_T1CR2
                                    1- 1697     	.line	522, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000B 2183                      1- 1698     	MOVIA	0x83
     000C 00rr                      1- 1699     	SFUN	_T1CR1
     000D                           1- 1700     _00408_DS_:
                                    1- 1701     	.line	523, "main.c"; 	}
                                    1- 1702     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1- 1703     ; exit point of _PWM1Start
                                    1- 1705     ;***
                                    1- 1706     ;  pBlock Stats: dbName = C
                                    1- 1707     ;***
                                    1- 1708     ;has an exit
                                    1- 1709     ;functions called:
                                    1- 1710     ;   _checkBAT
                                    1- 1711     ;   _checkKeyAD
                                    1- 1712     ;   __mulint
                                    1- 1713     ;   __mulint
                                    1- 1714     ;   _keyRead
                                    1- 1715     ;   _LedInput
                                    1- 1716     ;   _checkBAT
                                    1- 1717     ;   _checkKeyAD
                                    1- 1718     ;   __mulint
                                    1- 1719     ;   __mulint
                                    1- 1720     ;   _keyRead
                                    1- 1721     ;   _LedInput
                                    1- 1722     ;5 compiler assigned registers:
                                    1- 1723     ;   STK02
                                    1- 1724     ;   STK01
                                    1- 1725     ;   STK00
                                    1- 1726     ;   r0x1047
                                    1- 1727     ;   r0x1048
                                    1- 1728     ;; Starting pCode block
                                    1- 1729     .segment "code"; module=main, function=_ADKeyCtr
                                    1- 1731     ;local variable name mapping:
     0000                           1- 1734     _ADKeyCtr:
                                    1- 1735     ; 2 exit points
                                    1- 1736     	.line	414, "main.c"; 	if(++checkTime > 30)
                                    1- 1737     	BANKSEL	_checkTime
     0000 05rr                      1- 1738     	INCR	_checkTime,F
                                    1- 1739     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1740     ;;unsigned compare: left >= lit (0x1F=31), size=1
     0001 211F                      1- 1741     	MOVIA	0x1f
     0002 04rr                      1- 1742     	SUBAR	_checkTime,W
     0003 0803                      1- 1743     	BTRSS	STATUS,0
     0004 3rrr                      1- 1744     	LGOTO	_00275_DS_
                                    1- 1745     	.line	416, "main.c"; 	checkTime = 0;
     0005 02rr                      1- 1746     	CLRR	_checkTime
                                    1- 1747     	.line	417, "main.c"; 	checkBAT();
     0006 2rrr                      1- 1748     	LCALL	_checkBAT
     0007                           1- 1749     _00275_DS_:
                                    1- 1750     	.line	419, "main.c"; 	if(modeStep > 0 && startLedFlag == 0)
                                    1- 1751     	BANKSEL	_modeStep
     0007 01rr                      1- 1752     	MOVR	_modeStep,W
     0008 0D03                      1- 1753     	BTRSC	STATUS,2
     0009 3rrr                      1- 1754     	LGOTO	_00285_DS_
                                    1- 1755     	BANKSEL	_Status
     000A 0Drr                      1- 1756     	BTRSC	_Status,2
     000B 3rrr                      1- 1757     	LGOTO	_00285_DS_
                                    1- 1758     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1759     ;;unsigned compare: left >= lit (0x39A=922), size=2
                                    1- 1760     	.line	421, "main.c"; 	if(R_VDD_DATA > 921)
     000C 2103                      1- 1761     	MOVIA	0x03
                                    1- 1762     	BANKSEL	_R_VDD_DATA
     000D 04rr                      1- 1763     	SUBAR	(_R_VDD_DATA + 1),W
     000E 0903                      1- 1764     	BTRSS	STATUS,2
     000F 3rrr                      1- 1765     	LGOTO	_00395_DS_
     0010 219A                      1- 1766     	MOVIA	0x9a
     0011 04rr                      1- 1767     	SUBAR	_R_VDD_DATA,W
     0012                           1- 1768     _00395_DS_:
     0012 0803                      1- 1769     	BTRSS	STATUS,0
     0013 3rrr                      1- 1770     	LGOTO	_00282_DS_
                                    1- 1771     	.line	424, "main.c"; 	chrgLedStep = 2;
     0014 2102                      1- 1772     	MOVIA	0x02
                                    1- 1773     	BANKSEL	_chrgLedStep
     0015 00rr                      1- 1774     	MOVAR	_chrgLedStep
     0016 3rrr                      1- 1775     	LGOTO	_00285_DS_
     0017                           1- 1776     _00282_DS_:
                                    1- 1777     	.line	428, "main.c"; 	if(chrgLedStep == 2)
                                    1- 1778     	BANKSEL	_chrgLedStep
     0017 01rr                      1- 1779     	MOVR	_chrgLedStep,W
     0018 2402                      1- 1780     	XORIA	0x02
     0019 0903                      1- 1781     	BTRSS	STATUS,2
     001A 3rrr                      1- 1782     	LGOTO	_00279_DS_
                                    1- 1783     ;;unsigned compare: left < lit (0x38E=910), size=2
                                    1- 1784     	.line	430, "main.c"; 	if(R_VDD_DATA < 910)
     001B 2103                      1- 1785     	MOVIA	0x03
                                    1- 1786     	BANKSEL	_R_VDD_DATA
     001C 04rr                      1- 1787     	SUBAR	(_R_VDD_DATA + 1),W
     001D 0903                      1- 1788     	BTRSS	STATUS,2
     001E 3rrr                      1- 1789     	LGOTO	_00396_DS_
     001F 218E                      1- 1790     	MOVIA	0x8e
     0020 04rr                      1- 1791     	SUBAR	_R_VDD_DATA,W
     0021                           1- 1792     _00396_DS_:
     0021 0C03                      1- 1793     	BTRSC	STATUS,0
     0022 3rrr                      1- 1794     	LGOTO	_00285_DS_
                                    1- 1795     	.line	431, "main.c"; 	chrgLedStep = 1;
     0023 2101                      1- 1796     	MOVIA	0x01
                                    1- 1797     	BANKSEL	_chrgLedStep
     0024 00rr                      1- 1798     	MOVAR	_chrgLedStep
     0025 3rrr                      1- 1799     	LGOTO	_00285_DS_
     0026                           1- 1800     _00279_DS_:
                                    1- 1801     	.line	434, "main.c"; 	chrgLedStep = 1;
     0026 2101                      1- 1802     	MOVIA	0x01
                                    1- 1803     	BANKSEL	_chrgLedStep
     0027 00rr                      1- 1804     	MOVAR	_chrgLedStep
     0028                           1- 1805     _00285_DS_:
                                    1- 1806     	.line	437, "main.c"; 	if(modeStep == 0 && startLedFlag == 0)
                                    1- 1807     	BANKSEL	_modeStep
     0028 01rr                      1- 1808     	MOVR	_modeStep,W
     0029 0903                      1- 1809     	BTRSS	STATUS,2
     002A 3rrr                      1- 1810     	LGOTO	_00288_DS_
                                    1- 1811     	BANKSEL	_Status
     002B 0Drr                      1- 1812     	BTRSC	_Status,2
     002C 3rrr                      1- 1813     	LGOTO	_00288_DS_
                                    1- 1814     	.line	440, "main.c"; 	powerStep = 0;
                                    1- 1815     	BANKSEL	_powerStep
     002D 02rr                      1- 1816     	CLRR	_powerStep
                                    1- 1817     	.line	441, "main.c"; 	chrgLedStep = 0;
                                    1- 1818     	BANKSEL	_chrgLedStep
     002E 02rr                      1- 1819     	CLRR	_chrgLedStep
                                    1- 1820     	.line	442, "main.c"; 	ORANGEOFF();
     002F 1Err                      1- 1821     	BCR	_PORTB,4
                                    1- 1822     	.line	443, "main.c"; 	BLUEOFF();
     0030 1Err                      1- 1823     	BCR	_PORTB,5
                                    1- 1824     	.line	444, "main.c"; 	REDOFF();
     0031 1Crr                      1- 1825     	BCR	_PORTA,0
                                    1- 1826     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1827     ;;unsigned compare: left >= lit (0xB=11), size=1
     0032                           1- 1828     _00288_DS_:
                                    1- 1829     	.line	446, "main.c"; 	if(checkTime > 10 && checkTime < 25)
     0032 210B                      1- 1830     	MOVIA	0x0b
                                    1- 1831     	BANKSEL	_checkTime
     0033 04rr                      1- 1832     	SUBAR	_checkTime,W
     0034 0803                      1- 1833     	BTRSS	STATUS,0
     0035 3rrr                      1- 1834     	LGOTO	_00291_DS_
                                    1- 1835     ;;unsigned compare: left < lit (0x19=25), size=1
     0036 2119                      1- 1836     	MOVIA	0x19
     0037 04rr                      1- 1837     	SUBAR	_checkTime,W
     0038 0803                      1- 1838     	BTRSS	STATUS,0
                                    1- 1839     	.line	448, "main.c"; 	checkKeyAD();
     0039 2rrr                      1- 1840     	LCALL	_checkKeyAD
     003A                           1- 1841     _00291_DS_:
                                    1- 1842     	.line	451, "main.c"; 	if(R_VDD_DATA*3 > R_AIN1_DATA && R_AIN1_DATA > R_VDD_DATA)
                                    1- 1843     	BANKSEL	_R_VDD_DATA
     003A 01rr                      1- 1844     	MOVR	_R_VDD_DATA,W
     003B 00rr                      1- 1845     	MOVAR	STK02
     003C 01rr                      1- 1846     	MOVR	(_R_VDD_DATA + 1),W
     003D 00rr                      1- 1847     	MOVAR	STK01
     003E 2103                      1- 1848     	MOVIA	0x03
     003F 00rr                      1- 1849     	MOVAR	STK00
     0040 2100                      1- 1850     	MOVIA	0x00
     0041 2rrr                      1- 1851     	LCALL	__mulint
                                    1- 1852     	BANKSEL	r0x1047
     0042 00rr                      1- 1853     	MOVAR	r0x1047
     0043 01rr                      1- 1854     	MOVR	STK00,W
                                    1- 1855     	BANKSEL	r0x1048
     0044 00rr                      1- 1856     	MOVAR	r0x1048
                                    1- 1857     	BANKSEL	r0x1047
     0045 01rr                      1- 1858     	MOVR	r0x1047,W
                                    1- 1859     	BANKSEL	_R_AIN1_DATA
     0046 04rr                      1- 1860     	SUBAR	(_R_AIN1_DATA + 1),W
     0047 0903                      1- 1861     	BTRSS	STATUS,2
     0048 3rrr                      1- 1862     	LGOTO	_00399_DS_
                                    1- 1863     	BANKSEL	r0x1048
     0049 01rr                      1- 1864     	MOVR	r0x1048,W
                                    1- 1865     	BANKSEL	_R_AIN1_DATA
     004A 04rr                      1- 1866     	SUBAR	_R_AIN1_DATA,W
     004B                           1- 1867     _00399_DS_:
     004B 0C03                      1- 1868     	BTRSC	STATUS,0
     004C 3rrr                      1- 1869     	LGOTO	_00297_DS_
                                    1- 1870     	BANKSEL	_R_AIN1_DATA
     004D 01rr                      1- 1871     	MOVR	(_R_AIN1_DATA + 1),W
                                    1- 1872     	BANKSEL	_R_VDD_DATA
     004E 04rr                      1- 1873     	SUBAR	(_R_VDD_DATA + 1),W
     004F 0903                      1- 1874     	BTRSS	STATUS,2
     0050 3rrr                      1- 1875     	LGOTO	_00400_DS_
                                    1- 1876     	BANKSEL	_R_AIN1_DATA
     0051 01rr                      1- 1877     	MOVR	_R_AIN1_DATA,W
                                    1- 1878     	BANKSEL	_R_VDD_DATA
     0052 04rr                      1- 1879     	SUBAR	_R_VDD_DATA,W
     0053                           1- 1880     _00400_DS_:
     0053 0C03                      1- 1881     	BTRSC	STATUS,0
     0054 3rrr                      1- 1882     	LGOTO	_00297_DS_
                                    1- 1883     	.line	453, "main.c"; 	if(R_AIN1_DATA > R_VDD_DATA*2)
                                    1- 1884     	BANKSEL	_R_VDD_DATA
     0055 01rr                      1- 1885     	MOVR	_R_VDD_DATA,W
     0056 00rr                      1- 1886     	MOVAR	STK02
     0057 01rr                      1- 1887     	MOVR	(_R_VDD_DATA + 1),W
     0058 00rr                      1- 1888     	MOVAR	STK01
     0059 2102                      1- 1889     	MOVIA	0x02
     005A 00rr                      1- 1890     	MOVAR	STK00
     005B 2100                      1- 1891     	MOVIA	0x00
     005C 2rrr                      1- 1892     	LCALL	__mulint
                                    1- 1893     	BANKSEL	r0x1047
     005D 00rr                      1- 1894     	MOVAR	r0x1047
     005E 01rr                      1- 1895     	MOVR	STK00,W
                                    1- 1896     	BANKSEL	r0x1048
     005F 00rr                      1- 1897     	MOVAR	r0x1048
                                    1- 1898     	BANKSEL	_R_AIN1_DATA
     0060 01rr                      1- 1899     	MOVR	(_R_AIN1_DATA + 1),W
                                    1- 1900     	BANKSEL	r0x1047
     0061 04rr                      1- 1901     	SUBAR	r0x1047,W
     0062 0903                      1- 1902     	BTRSS	STATUS,2
     0063 3rrr                      1- 1903     	LGOTO	_00401_DS_
                                    1- 1904     	BANKSEL	_R_AIN1_DATA
     0064 01rr                      1- 1905     	MOVR	_R_AIN1_DATA,W
                                    1- 1906     	BANKSEL	r0x1048
     0065 04rr                      1- 1907     	SUBAR	r0x1048,W
     0066                           1- 1908     _00401_DS_:
     0066 0C03                      1- 1909     	BTRSC	STATUS,0
     0067 3rrr                      1- 1910     	LGOTO	_00294_DS_
                                    1- 1911     	.line	456, "main.c"; 	tempKey = 1;
     0068 2101                      1- 1912     	MOVIA	0x01
                                    1- 1913     	BANKSEL	r0x1048
     0069 00rr                      1- 1914     	MOVAR	r0x1048
     006A 3rrr                      1- 1915     	LGOTO	_00298_DS_
     006B                           1- 1916     _00294_DS_:
                                    1- 1917     	.line	461, "main.c"; 	tempKey = 2;
     006B 2102                      1- 1918     	MOVIA	0x02
                                    1- 1919     	BANKSEL	r0x1048
     006C 00rr                      1- 1920     	MOVAR	r0x1048
     006D 3rrr                      1- 1921     	LGOTO	_00298_DS_
     006E                           1- 1922     _00297_DS_:
                                    1- 1923     	.line	466, "main.c"; 	tempKey = 0;
                                    1- 1924     	BANKSEL	r0x1048
     006E 02rr                      1- 1925     	CLRR	r0x1048
     006F                           1- 1926     _00298_DS_:
                                    1- 1927     	.line	468, "main.c"; 	char kclick = keyRead(tempKey);
                                    1- 1928     	BANKSEL	r0x1048
     006F 01rr                      1- 1929     	MOVR	r0x1048,W
     0070 2rrr                      1- 1930     	LCALL	_keyRead
                                    1- 1931     	BANKSEL	r0x1048
     0071 00rr                      1- 1932     	MOVAR	r0x1048
                                    1- 1933     	.line	469, "main.c"; 	if(kclick == 1)
     0072 2401                      1- 1934     	XORIA	0x01
     0073 0903                      1- 1935     	BTRSS	STATUS,2
     0074 3rrr                      1- 1936     	LGOTO	_00321_DS_
                                    1- 1937     	.line	472, "main.c"; 	if(keyNub == 1)
                                    1- 1938     	BANKSEL	_keyNub
     0075 01rr                      1- 1939     	MOVR	_keyNub,W
     0076 2401                      1- 1940     	XORIA	0x01
     0077 0903                      1- 1941     	BTRSS	STATUS,2
     0078 3rrr                      1- 1942     	LGOTO	_00309_DS_
                                    1- 1943     	.line	474, "main.c"; 	if(modeStep == 0)
                                    1- 1944     	BANKSEL	_modeStep
     0079 01rr                      1- 1945     	MOVR	_modeStep,W
     007A 0903                      1- 1946     	BTRSS	STATUS,2
     007B 3rrr                      1- 1947     	LGOTO	_00301_DS_
                                    1- 1948     	.line	476, "main.c"; 	LedInput();
     007C 2rrr                      1- 1949     	LCALL	_LedInput
                                    1- 1950     	.line	477, "main.c"; 	modeStep = 0;
                                    1- 1951     	BANKSEL	_modeStep
     007D 02rr                      1- 1952     	CLRR	_modeStep
                                    1- 1953     	.line	478, "main.c"; 	powerStep = 0;
                                    1- 1954     	BANKSEL	_powerStep
     007E 02rr                      1- 1955     	CLRR	_powerStep
                                    1- 1956     	.line	479, "main.c"; 	chrgLedStep = 0;
                                    1- 1957     	BANKSEL	_chrgLedStep
     007F 02rr                      1- 1958     	CLRR	_chrgLedStep
                                    1- 1959     	.line	480, "main.c"; 	startLedFlag = 1;//开机亮灯模式
                                    1- 1960     	BANKSEL	_Status
     0080 19rr                      1- 1961     	BSR	_Status,2
     0081                           1- 1962     _00301_DS_:
                                    1- 1963     	.line	482, "main.c"; 	if(++modeStep > 4)
                                    1- 1964     	BANKSEL	_modeStep
     0081 05rr                      1- 1965     	INCR	_modeStep,F
                                    1- 1966     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1967     ;;unsigned compare: left >= lit (0x5=5), size=1
     0082 2105                      1- 1968     	MOVIA	0x05
     0083 04rr                      1- 1969     	SUBAR	_modeStep,W
     0084 0803                      1- 1970     	BTRSS	STATUS,0
     0085 3rrr                      1- 1971     	LGOTO	_00303_DS_
                                    1- 1972     	.line	483, "main.c"; 	modeStep = 1;
     0086 2101                      1- 1973     	MOVIA	0x01
     0087 00rr                      1- 1974     	MOVAR	_modeStep
     0088                           1- 1975     _00303_DS_:
                                    1- 1976     	.line	484, "main.c"; 	powerStep = 1;
     0088 2101                      1- 1977     	MOVIA	0x01
                                    1- 1978     	BANKSEL	_powerStep
     0089 00rr                      1- 1979     	MOVAR	_powerStep
     008A 3rrr                      1- 1980     	LGOTO	_00323_DS_
     008B                           1- 1981     _00309_DS_:
                                    1- 1982     	.line	486, "main.c"; 	else if(modeStep > 0)
                                    1- 1983     	BANKSEL	_modeStep
     008B 01rr                      1- 1984     	MOVR	_modeStep,W
     008C 0D03                      1- 1985     	BTRSC	STATUS,2
     008D 3rrr                      1- 1986     	LGOTO	_00323_DS_
                                    1- 1987     	.line	488, "main.c"; 	if(++powerStep > 3)
                                    1- 1988     	BANKSEL	_powerStep
     008E 05rr                      1- 1989     	INCR	_powerStep,F
                                    1- 1990     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1991     ;;unsigned compare: left >= lit (0x4=4), size=1
     008F 2104                      1- 1992     	MOVIA	0x04
     0090 04rr                      1- 1993     	SUBAR	_powerStep,W
     0091 0803                      1- 1994     	BTRSS	STATUS,0
     0092 3rrr                      1- 1995     	LGOTO	_00323_DS_
                                    1- 1996     	.line	489, "main.c"; 	powerStep = 1;
     0093 2101                      1- 1997     	MOVIA	0x01
     0094 00rr                      1- 1998     	MOVAR	_powerStep
     0095 3rrr                      1- 1999     	LGOTO	_00323_DS_
     0096                           1- 2000     _00321_DS_:
                                    1- 2001     	.line	492, "main.c"; 	else if(kclick == 2)
                                    1- 2002     	BANKSEL	r0x1048
     0096 01rr                      1- 2003     	MOVR	r0x1048,W
     0097 2402                      1- 2004     	XORIA	0x02
     0098 0903                      1- 2005     	BTRSS	STATUS,2
     0099 3rrr                      1- 2006     	LGOTO	_00323_DS_
                                    1- 2007     	.line	495, "main.c"; 	if(keyNub == 1)
                                    1- 2008     	BANKSEL	_keyNub
     009A 01rr                      1- 2009     	MOVR	_keyNub,W
     009B 2401                      1- 2010     	XORIA	0x01
     009C 0903                      1- 2011     	BTRSS	STATUS,2
     009D 3rrr                      1- 2012     	LGOTO	_00316_DS_
                                    1- 2013     	.line	497, "main.c"; 	modeStep = 0;
                                    1- 2014     	BANKSEL	_modeStep
     009E 02rr                      1- 2015     	CLRR	_modeStep
                                    1- 2016     	.line	498, "main.c"; 	powerStep = 0;
                                    1- 2017     	BANKSEL	_powerStep
     009F 02rr                      1- 2018     	CLRR	_powerStep
                                    1- 2019     	.line	499, "main.c"; 	startLedFlag = 0;
                                    1- 2020     	BANKSEL	_Status
     00A0 1Drr                      1- 2021     	BCR	_Status,2
                                    1- 2022     	.line	500, "main.c"; 	chrgLedStep = 0;
                                    1- 2023     	BANKSEL	_chrgLedStep
     00A1 02rr                      1- 2024     	CLRR	_chrgLedStep
     00A2 3rrr                      1- 2025     	LGOTO	_00323_DS_
     00A3                           1- 2026     _00316_DS_:
                                    1- 2027     	.line	503, "main.c"; 	else if(modeStep > 0)
                                    1- 2028     	BANKSEL	_modeStep
     00A3 01rr                      1- 2029     	MOVR	_modeStep,W
     00A4 0D03                      1- 2030     	BTRSC	STATUS,2
     00A5 3rrr                      1- 2031     	LGOTO	_00323_DS_
                                    1- 2032     	.line	505, "main.c"; 	if(++powerStep > 3)
                                    1- 2033     	BANKSEL	_powerStep
     00A6 05rr                      1- 2034     	INCR	_powerStep,F
                                    1- 2035     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2036     ;;unsigned compare: left >= lit (0x4=4), size=1
     00A7 2104                      1- 2037     	MOVIA	0x04
     00A8 04rr                      1- 2038     	SUBAR	_powerStep,W
     00A9 0803                      1- 2039     	BTRSS	STATUS,0
     00AA 3rrr                      1- 2040     	LGOTO	_00323_DS_
                                    1- 2041     	.line	506, "main.c"; 	powerStep = 1;
     00AB 2101                      1- 2042     	MOVIA	0x01
     00AC 00rr                      1- 2043     	MOVAR	_powerStep
     00AD                           1- 2044     _00323_DS_:
                                    1- 2045     	.line	509, "main.c"; 	}
                                    1- 2046     	RETURN	
     00AD 0010                      3-   26 m1      ret
                                    1- 2047     ; exit point of _ADKeyCtr
                                    1- 2049     ;***
                                    1- 2050     ;  pBlock Stats: dbName = C
                                    1- 2051     ;***
                                    1- 2052     ;has an exit
                                    1- 2053     ;; Starting pCode block
                                    1- 2054     .segment "code"; module=main, function=_startCtr
     0000                           1- 2056     _startCtr:
                                    1- 2057     ; 2 exit points
                                    1- 2058     	.line	359, "main.c"; 	if(++timeCount > 20)
                                    1- 2059     	BANKSEL	_timeCount
     0000 05rr                      1- 2060     	INCR	_timeCount,F
                                    1- 2061     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2062     ;;unsigned compare: left >= lit (0x15=21), size=1
     0001 2115                      1- 2063     	MOVIA	0x15
     0002 04rr                      1- 2064     	SUBAR	_timeCount,W
     0003 0803                      1- 2065     	BTRSS	STATUS,0
     0004 3rrr                      1- 2066     	LGOTO	_00269_DS_
                                    1- 2067     	.line	361, "main.c"; 	timeCount = 0;
     0005 02rr                      1- 2068     	CLRR	_timeCount
                                    1- 2069     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 2070     	.line	362, "main.c"; 	if(startStep < 5)
     0006 2105                      1- 2071     	MOVIA	0x05
                                    1- 2072     	BANKSEL	_startStep
     0007 04rr                      1- 2073     	SUBAR	_startStep,W
     0008 0C03                      1- 2074     	BTRSC	STATUS,0
     0009 3rrr                      1- 2075     	LGOTO	_00263_DS_
                                    1- 2076     	.line	364, "main.c"; 	modeStep = 5-startStep;
     000A 01rr                      1- 2077     	MOVR	_startStep,W
     000B 2705                      1- 2078     	SUBIA	0x05
                                    1- 2079     	BANKSEL	_modeStep
     000C 00rr                      1- 2080     	MOVAR	_modeStep
                                    1- 2081     	.line	365, "main.c"; 	chrgLedStep = 0;
                                    1- 2082     	BANKSEL	_chrgLedStep
     000D 02rr                      1- 2083     	CLRR	_chrgLedStep
                                    1- 2084     	.line	366, "main.c"; 	powerStep = 0;
                                    1- 2085     	BANKSEL	_powerStep
     000E 02rr                      1- 2086     	CLRR	_powerStep
     000F 3rrr                      1- 2087     	LGOTO	_00264_DS_
     0010                           1- 2088     _00263_DS_:
                                    1- 2089     	.line	368, "main.c"; 	else if(startStep == 5)
                                    1- 2090     	BANKSEL	_startStep
     0010 01rr                      1- 2091     	MOVR	_startStep,W
     0011 2405                      1- 2092     	XORIA	0x05
     0012 0903                      1- 2093     	BTRSS	STATUS,2
     0013 3rrr                      1- 2094     	LGOTO	_00260_DS_
                                    1- 2095     	.line	370, "main.c"; 	modeStep = 0;
                                    1- 2096     	BANKSEL	_modeStep
     0014 02rr                      1- 2097     	CLRR	_modeStep
                                    1- 2098     	.line	371, "main.c"; 	chrgLedStep = 0;
                                    1- 2099     	BANKSEL	_chrgLedStep
     0015 02rr                      1- 2100     	CLRR	_chrgLedStep
                                    1- 2101     	.line	372, "main.c"; 	powerStep = 3;
     0016 2103                      1- 2102     	MOVIA	0x03
                                    1- 2103     	BANKSEL	_powerStep
     0017 00rr                      1- 2104     	MOVAR	_powerStep
     0018 3rrr                      1- 2105     	LGOTO	_00264_DS_
     0019                           1- 2106     _00260_DS_:
                                    1- 2107     	.line	374, "main.c"; 	else if(startStep == 6)
                                    1- 2108     	BANKSEL	_startStep
     0019 01rr                      1- 2109     	MOVR	_startStep,W
     001A 2406                      1- 2110     	XORIA	0x06
     001B 0903                      1- 2111     	BTRSS	STATUS,2
     001C 3rrr                      1- 2112     	LGOTO	_00257_DS_
                                    1- 2113     	.line	376, "main.c"; 	modeStep = 0;
                                    1- 2114     	BANKSEL	_modeStep
     001D 02rr                      1- 2115     	CLRR	_modeStep
                                    1- 2116     	.line	377, "main.c"; 	powerStep = 0;
                                    1- 2117     	BANKSEL	_powerStep
     001E 02rr                      1- 2118     	CLRR	_powerStep
                                    1- 2119     	.line	378, "main.c"; 	chrgLedStep = 2;
     001F 2102                      1- 2120     	MOVIA	0x02
                                    1- 2121     	BANKSEL	_chrgLedStep
     0020 00rr                      1- 2122     	MOVAR	_chrgLedStep
     0021 3rrr                      1- 2123     	LGOTO	_00264_DS_
     0022                           1- 2124     _00257_DS_:
                                    1- 2125     	.line	380, "main.c"; 	else if(startStep == 7)
                                    1- 2126     	BANKSEL	_startStep
     0022 01rr                      1- 2127     	MOVR	_startStep,W
     0023 2407                      1- 2128     	XORIA	0x07
     0024 0903                      1- 2129     	BTRSS	STATUS,2
     0025 3rrr                      1- 2130     	LGOTO	_00254_DS_
                                    1- 2131     	.line	382, "main.c"; 	modeStep = 0;
                                    1- 2132     	BANKSEL	_modeStep
     0026 02rr                      1- 2133     	CLRR	_modeStep
                                    1- 2134     	.line	383, "main.c"; 	chrgLedStep = 0;
                                    1- 2135     	BANKSEL	_chrgLedStep
     0027 02rr                      1- 2136     	CLRR	_chrgLedStep
                                    1- 2137     	.line	384, "main.c"; 	powerStep = 0;
                                    1- 2138     	BANKSEL	_powerStep
     0028 02rr                      1- 2139     	CLRR	_powerStep
                                    1- 2140     	.line	385, "main.c"; 	REDON();
     0029 18rr                      1- 2141     	BSR	_PORTA,0
     002A 3rrr                      1- 2142     	LGOTO	_00264_DS_
     002B                           1- 2143     _00254_DS_:
                                    1- 2144     	.line	387, "main.c"; 	else if(startStep == 8)
                                    1- 2145     	BANKSEL	_startStep
     002B 01rr                      1- 2146     	MOVR	_startStep,W
     002C 2408                      1- 2147     	XORIA	0x08
     002D 0903                      1- 2148     	BTRSS	STATUS,2
     002E 3rrr                      1- 2149     	LGOTO	_00251_DS_
                                    1- 2150     	.line	389, "main.c"; 	REDOFF();
     002F 1Crr                      1- 2151     	BCR	_PORTA,0
                                    1- 2152     	.line	390, "main.c"; 	ORANGEON();
     0030 1Arr                      1- 2153     	BSR	_PORTB,4
     0031 3rrr                      1- 2154     	LGOTO	_00264_DS_
     0032                           1- 2155     _00251_DS_:
                                    1- 2156     	.line	392, "main.c"; 	else if(startStep == 9)
                                    1- 2157     	BANKSEL	_startStep
     0032 01rr                      1- 2158     	MOVR	_startStep,W
     0033 2409                      1- 2159     	XORIA	0x09
     0034 0903                      1- 2160     	BTRSS	STATUS,2
     0035 3rrr                      1- 2161     	LGOTO	_00264_DS_
                                    1- 2162     	.line	394, "main.c"; 	ORANGEOFF();
     0036 1Err                      1- 2163     	BCR	_PORTB,4
                                    1- 2164     	.line	395, "main.c"; 	BLUEON();
     0037 1Arr                      1- 2165     	BSR	_PORTB,5
     0038                           1- 2166     _00264_DS_:
                                    1- 2167     	.line	398, "main.c"; 	if(++startStep > 9)
                                    1- 2168     	BANKSEL	_startStep
     0038 05rr                      1- 2169     	INCR	_startStep,F
                                    1- 2170     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2171     ;;unsigned compare: left >= lit (0xA=10), size=1
     0039 210A                      1- 2172     	MOVIA	0x0a
     003A 04rr                      1- 2173     	SUBAR	_startStep,W
     003B 0803                      1- 2174     	BTRSS	STATUS,0
     003C 3rrr                      1- 2175     	LGOTO	_00269_DS_
                                    1- 2176     	.line	400, "main.c"; 	BLUEOFF();
     003D 1Err                      1- 2177     	BCR	_PORTB,5
                                    1- 2178     	.line	401, "main.c"; 	startStep = 0;
     003E 02rr                      1- 2179     	CLRR	_startStep
                                    1- 2180     	.line	402, "main.c"; 	startLedFlag = 0;
                                    1- 2181     	BANKSEL	_Status
     003F 1Drr                      1- 2182     	BCR	_Status,2
                                    1- 2183     	.line	403, "main.c"; 	modeStep = 1;
     0040 2101                      1- 2184     	MOVIA	0x01
                                    1- 2185     	BANKSEL	_modeStep
     0041 00rr                      1- 2186     	MOVAR	_modeStep
                                    1- 2187     	.line	404, "main.c"; 	powerStep = 1;
                                    1- 2188     	BANKSEL	_powerStep
     0042 00rr                      1- 2189     	MOVAR	_powerStep
                                    1- 2190     	.line	405, "main.c"; 	timeCount = 0;
                                    1- 2191     	BANKSEL	_timeCount
     0043 02rr                      1- 2192     	CLRR	_timeCount
     0044                           1- 2193     _00269_DS_:
                                    1- 2194     	.line	408, "main.c"; 	}
                                    1- 2195     	RETURN	
     0044 0010                      3-   26 m1      ret
                                    1- 2196     ; exit point of _startCtr
                                    1- 2198     ;***
                                    1- 2199     ;  pBlock Stats: dbName = C
                                    1- 2200     ;***
                                    1- 2201     ;has an exit
                                    1- 2202     ;functions called:
                                    1- 2203     ;   _checkTouchAD
                                    1- 2204     ;   _PWM1Start
                                    1- 2205     ;   _checkHotAD
                                    1- 2206     ;   __mulint
                                    1- 2207     ;   __divuint
                                    1- 2208     ;   _checkTouchAD
                                    1- 2209     ;   _PWM1Start
                                    1- 2210     ;   _checkHotAD
                                    1- 2211     ;   __mulint
                                    1- 2212     ;   __divuint
                                    1- 2213     ;5 compiler assigned registers:
                                    1- 2214     ;   STK02
                                    1- 2215     ;   STK01
                                    1- 2216     ;   STK00
                                    1- 2217     ;   r0x1049
                                    1- 2218     ;   r0x104A
                                    1- 2219     ;; Starting pCode block
                                    1- 2220     .segment "code"; module=main, function=_workCtr
     0000                           1- 2222     _workCtr:
                                    1- 2223     ; 2 exit points
                                    1- 2224     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 2225     	.line	301, "main.c"; 	if(checkTime < 5)
     0000 2105                      1- 2226     	MOVIA	0x05
                                    1- 2227     	BANKSEL	_checkTime
     0001 04rr                      1- 2228     	SUBAR	_checkTime,W
     0002 0803                      1- 2229     	BTRSS	STATUS,0
                                    1- 2230     	.line	302, "main.c"; 	checkTouchAD();
     0003 2rrr                      1- 2231     	LCALL	_checkTouchAD
                                    1- 2232     	.line	303, "main.c"; 	if(R_AIN3_DATA < 1000)
     0004 2103                      1- 2233     	MOVIA	0x03
                                    1- 2234     	BANKSEL	_R_AIN3_DATA
     0005 04rr                      1- 2235     	SUBAR	(_R_AIN3_DATA + 1),W
     0006 0903                      1- 2236     	BTRSS	STATUS,2
     0007 3rrr                      1- 2237     	LGOTO	_00240_DS_
     0008 21E8                      1- 2238     	MOVIA	0xe8
     0009 04rr                      1- 2239     	SUBAR	_R_AIN3_DATA,W
     000A                           1- 2240     _00240_DS_:
     000A 0C03                      1- 2241     	BTRSC	STATUS,0
     000B 3rrr                      1- 2242     	LGOTO	_00197_DS_
                                    1- 2243     	.line	306, "main.c"; 	T1CR1 = C_TMR1_En;
     000C 2101                      1- 2244     	MOVIA	0x01
     000D 00rr                      1- 2245     	SFUN	_T1CR1
                                    1- 2246     	.line	307, "main.c"; 	HOTOFF();
     000E 1Drr                      1- 2247     	BCR	_PORTB,2
     000F 3rrr                      1- 2248     	LGOTO	_00198_DS_
     0010                           1- 2249     _00197_DS_:
                                    1- 2250     	.line	311, "main.c"; 	PWM1Start();
     0010 2rrr                      1- 2251     	LCALL	_PWM1Start
                                    1- 2252     	.line	312, "main.c"; 	if(modeStep == 2)
                                    1- 2253     	BANKSEL	_modeStep
     0011 01rr                      1- 2254     	MOVR	_modeStep,W
     0012 2402                      1- 2255     	XORIA	0x02
     0013 0903                      1- 2256     	BTRSS	STATUS,2
     0014 3rrr                      1- 2257     	LGOTO	_00198_DS_
                                    1- 2258     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2259     ;;unsigned compare: left >= lit (0x1D=29), size=1
                                    1- 2260     	.line	314, "main.c"; 	if(checkTime > 28)
     0015 211D                      1- 2261     	MOVIA	0x1d
                                    1- 2262     	BANKSEL	_checkTime
     0016 04rr                      1- 2263     	SUBAR	_checkTime,W
     0017 0C03                      1- 2264     	BTRSC	STATUS,0
                                    1- 2265     	.line	315, "main.c"; 	checkHotAD();
     0018 2rrr                      1- 2266     	LCALL	_checkHotAD
                                    1- 2267     	.line	316, "main.c"; 	if(R_AIN3_DATA > (R_VDD_DATA*4/3))
                                    1- 2268     	BANKSEL	_R_VDD_DATA
     0019 01rr                      1- 2269     	MOVR	_R_VDD_DATA,W
     001A 00rr                      1- 2270     	MOVAR	STK02
     001B 01rr                      1- 2271     	MOVR	(_R_VDD_DATA + 1),W
     001C 00rr                      1- 2272     	MOVAR	STK01
     001D 2104                      1- 2273     	MOVIA	0x04
     001E 00rr                      1- 2274     	MOVAR	STK00
     001F 2100                      1- 2275     	MOVIA	0x00
     0020 2rrr                      1- 2276     	LCALL	__mulint
                                    1- 2277     	BANKSEL	r0x1049
     0021 00rr                      1- 2278     	MOVAR	r0x1049
     0022 01rr                      1- 2279     	MOVR	STK00,W
                                    1- 2280     	BANKSEL	r0x104A
     0023 00rr                      1- 2281     	MOVAR	r0x104A
     0024 2103                      1- 2282     	MOVIA	0x03
     0025 00rr                      1- 2283     	MOVAR	STK02
     0026 2100                      1- 2284     	MOVIA	0x00
     0027 00rr                      1- 2285     	MOVAR	STK01
     0028 01rr                      1- 2286     	MOVR	r0x104A,W
     0029 00rr                      1- 2287     	MOVAR	STK00
                                    1- 2288     	BANKSEL	r0x1049
     002A 01rr                      1- 2289     	MOVR	r0x1049,W
     002B 2rrr                      1- 2290     	LCALL	__divuint
                                    1- 2291     	BANKSEL	r0x1049
     002C 00rr                      1- 2292     	MOVAR	r0x1049
     002D 01rr                      1- 2293     	MOVR	STK00,W
                                    1- 2294     	BANKSEL	r0x104A
     002E 00rr                      1- 2295     	MOVAR	r0x104A
                                    1- 2296     	BANKSEL	_R_AIN3_DATA
     002F 01rr                      1- 2297     	MOVR	(_R_AIN3_DATA + 1),W
                                    1- 2298     	BANKSEL	r0x1049
     0030 04rr                      1- 2299     	SUBAR	r0x1049,W
     0031 0903                      1- 2300     	BTRSS	STATUS,2
     0032 3rrr                      1- 2301     	LGOTO	_00242_DS_
                                    1- 2302     	BANKSEL	_R_AIN3_DATA
     0033 01rr                      1- 2303     	MOVR	_R_AIN3_DATA,W
                                    1- 2304     	BANKSEL	r0x104A
     0034 04rr                      1- 2305     	SUBAR	r0x104A,W
     0035                           1- 2306     _00242_DS_:
     0035 0C03                      1- 2307     	BTRSC	STATUS,0
     0036 3rrr                      1- 2308     	LGOTO	_00192_DS_
                                    1- 2309     	.line	319, "main.c"; 	HOTOFF();
     0037 1Drr                      1- 2310     	BCR	_PORTB,2
     0038 3rrr                      1- 2311     	LGOTO	_00198_DS_
     0039                           1- 2312     _00192_DS_:
                                    1- 2313     	.line	323, "main.c"; 	HOTON();
     0039 19rr                      1- 2314     	BSR	_PORTB,2
                                    1- 2315     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2316     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     003A                           1- 2317     _00198_DS_:
                                    1- 2318     	.line	327, "main.c"; 	if(R_AIN3_DATA > 1000)
     003A 2103                      1- 2319     	MOVIA	0x03
                                    1- 2320     	BANKSEL	_R_AIN3_DATA
     003B 04rr                      1- 2321     	SUBAR	(_R_AIN3_DATA + 1),W
     003C 0903                      1- 2322     	BTRSS	STATUS,2
     003D 3rrr                      1- 2323     	LGOTO	_00243_DS_
     003E 21E9                      1- 2324     	MOVIA	0xe9
     003F 04rr                      1- 2325     	SUBAR	_R_AIN3_DATA,W
     0040                           1- 2326     _00243_DS_:
     0040 0803                      1- 2327     	BTRSS	STATUS,0
     0041 3rrr                      1- 2328     	LGOTO	_00208_DS_
                                    1- 2329     	.line	329, "main.c"; 	if(modeStep == 1)
                                    1- 2330     	BANKSEL	_modeStep
     0042 01rr                      1- 2331     	MOVR	_modeStep,W
     0043 2401                      1- 2332     	XORIA	0x01
     0044 0903                      1- 2333     	BTRSS	STATUS,2
     0045 3rrr                      1- 2334     	LGOTO	_00205_DS_
                                    1- 2335     	.line	331, "main.c"; 	BLUEON();
     0046 1Arr                      1- 2336     	BSR	_PORTB,5
                                    1- 2337     	.line	332, "main.c"; 	ORANGEOFF();
     0047 1Err                      1- 2338     	BCR	_PORTB,4
                                    1- 2339     	.line	333, "main.c"; 	REDOFF();
     0048 1Crr                      1- 2340     	BCR	_PORTA,0
     0049 3rrr                      1- 2341     	LGOTO	_00210_DS_
     004A                           1- 2342     _00205_DS_:
                                    1- 2343     	.line	335, "main.c"; 	else if(modeStep == 2)
                                    1- 2344     	BANKSEL	_modeStep
     004A 01rr                      1- 2345     	MOVR	_modeStep,W
     004B 2402                      1- 2346     	XORIA	0x02
     004C 0903                      1- 2347     	BTRSS	STATUS,2
     004D 3rrr                      1- 2348     	LGOTO	_00202_DS_
                                    1- 2349     	.line	337, "main.c"; 	BLUEOFF();
     004E 1Err                      1- 2350     	BCR	_PORTB,5
                                    1- 2351     	.line	338, "main.c"; 	ORANGEON();
     004F 1Arr                      1- 2352     	BSR	_PORTB,4
                                    1- 2353     	.line	339, "main.c"; 	REDOFF();
     0050 1Crr                      1- 2354     	BCR	_PORTA,0
     0051 3rrr                      1- 2355     	LGOTO	_00210_DS_
                                    1- 2356     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2357     ;;unsigned compare: left >= lit (0x3=3), size=1
     0052                           1- 2358     _00202_DS_:
                                    1- 2359     	.line	341, "main.c"; 	else if(modeStep > 2)
     0052 2103                      1- 2360     	MOVIA	0x03
                                    1- 2361     	BANKSEL	_modeStep
     0053 04rr                      1- 2362     	SUBAR	_modeStep,W
     0054 0803                      1- 2363     	BTRSS	STATUS,0
     0055 3rrr                      1- 2364     	LGOTO	_00210_DS_
                                    1- 2365     	.line	343, "main.c"; 	BLUEOFF();
     0056 1Err                      1- 2366     	BCR	_PORTB,5
                                    1- 2367     	.line	344, "main.c"; 	REDON();
     0057 18rr                      1- 2368     	BSR	_PORTA,0
                                    1- 2369     	.line	345, "main.c"; 	ORANGEOFF();
     0058 1Err                      1- 2370     	BCR	_PORTB,4
     0059 3rrr                      1- 2371     	LGOTO	_00210_DS_
     005A                           1- 2372     _00208_DS_:
                                    1- 2373     	.line	350, "main.c"; 	BLUEOFF();
     005A 1Err                      1- 2374     	BCR	_PORTB,5
                                    1- 2375     	.line	351, "main.c"; 	REDOFF();
     005B 1Crr                      1- 2376     	BCR	_PORTA,0
                                    1- 2377     	.line	352, "main.c"; 	ORANGEOFF();
     005C 1Err                      1- 2378     	BCR	_PORTB,4
     005D                           1- 2379     _00210_DS_:
                                    1- 2380     	.line	354, "main.c"; 	}
                                    1- 2381     	RETURN	
     005D 0010                      3-   26 m1      ret
                                    1- 2382     ; exit point of _workCtr
                                    1- 2384     ;***
                                    1- 2385     ;  pBlock Stats: dbName = C
                                    1- 2386     ;***
                                    1- 2387     ;; Starting pCode block
                                    1- 2388     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2390     _chrgCtr:
                                    1- 2391     ; 0 exit points
                                    1- 2392     	.line	277, "main.c"; 	if(PORTA & 0x20)
     0000 0Arr                      1- 2393     	BTRSS	_PORTA,5
     0001 3rrr                      1- 2394     	LGOTO	_00180_DS_
                                    1- 2395     	.line	279, "main.c"; 	chrgFlag = 0;
                                    1- 2396     	BANKSEL	_Status
     0002 1Drr                      1- 2397     	BCR	_Status,3
     0003 3rrr                      1- 2398     	LGOTO	_00182_DS_
     0004                           1- 2399     _00180_DS_:
                                    1- 2400     	.line	283, "main.c"; 	chrgFlag = 1;//充电中
                                    1- 2401     	BANKSEL	_Status
     0004 19rr                      1- 2402     	BSR	_Status,3
                                    1- 2403     	.line	284, "main.c"; 	modeStep = 0;
                                    1- 2404     	BANKSEL	_modeStep
     0005 02rr                      1- 2405     	CLRR	_modeStep
                                    1- 2406     	.line	285, "main.c"; 	powerStep = 0;
                                    1- 2407     	BANKSEL	_powerStep
     0006 02rr                      1- 2408     	CLRR	_powerStep
                                    1- 2409     	.line	286, "main.c"; 	if(++timeCount > 50)
                                    1- 2410     	BANKSEL	_timeCount
     0007 05rr                      1- 2411     	INCR	_timeCount,F
                                    1- 2412     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2413     ;;unsigned compare: left >= lit (0x33=51), size=1
     0008 2133                      1- 2414     	MOVIA	0x33
     0009 04rr                      1- 2415     	SUBAR	_timeCount,W
     000A 0803                      1- 2416     	BTRSS	STATUS,0
     000B 3rrr                      1- 2417     	LGOTO	_00182_DS_
                                    1- 2418     	.line	288, "main.c"; 	timeCount = 0;
     000C 02rr                      1- 2419     	CLRR	_timeCount
                                    1- 2420     	.line	290, "main.c"; 	if(++chrgLedStep > 2)
                                    1- 2421     	BANKSEL	_chrgLedStep
     000D 05rr                      1- 2422     	INCR	_chrgLedStep,F
                                    1- 2423     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2424     ;;unsigned compare: left >= lit (0x3=3), size=1
     000E 2103                      1- 2425     	MOVIA	0x03
     000F 04rr                      1- 2426     	SUBAR	_chrgLedStep,W
     0010 0C03                      1- 2427     	BTRSC	STATUS,0
                                    1- 2428     	.line	292, "main.c"; 	chrgLedStep = 0;
     0011 02rr                      1- 2429     	CLRR	_chrgLedStep
     0012                           1- 2430     _00182_DS_:
                                    1- 2431     	.line	296, "main.c"; 	}
                                    1- 2432     	RETURN	
     0012 0010                      3-   26 m1      ret
                                    1- 2434     ;***
                                    1- 2435     ;  pBlock Stats: dbName = C
                                    1- 2436     ;***
                                    1- 2437     ;has an exit
                                    1- 2438     ;functions called:
                                    1- 2439     ;   _delay
                                    1- 2440     ;   _LedInput
                                    1- 2441     ;   _delay
                                    1- 2442     ;   _LedInput
                                    1- 2443     ;1 compiler assigned register :
                                    1- 2444     ;   r0x1033
                                    1- 2445     ;; Starting pCode block
                                    1- 2446     .segment "code"; module=main, function=_POWERLOW
     0000                           1- 2448     _POWERLOW:
                                    1- 2449     ; 2 exit points
                                    1- 2450     	.line	266, "main.c"; 	LEDL0OUT();
     0000 001r                      1- 2451     	IOSTR	_IOSTA
                                    1- 2452     	BANKSEL	r0x1033
     0001 00rr                      1- 2453     	MOVAR	r0x1033
     0002 1Frr                      1- 2454     	BCR	r0x1033,6
     0003 01rr                      1- 2455     	MOVR	r0x1033,W
     0004 000r                      1- 2456     	IOST	_IOSTA
                                    1- 2457     	.line	267, "main.c"; 	LEDW0OUT();
     0005 001r                      1- 2458     	IOSTR	_IOSTB
     0006 00rr                      1- 2459     	MOVAR	r0x1033
     0007 1Crr                      1- 2460     	BCR	r0x1033,0
     0008 01rr                      1- 2461     	MOVR	r0x1033,W
     0009 000r                      1- 2462     	IOST	_IOSTB
                                    1- 2463     	.line	268, "main.c"; 	LEDL0ON();
     000A 1Brr                      1- 2464     	BSR	_PORTA,6
                                    1- 2465     	.line	269, "main.c"; 	LEDW0OFF();
     000B 1Crr                      1- 2466     	BCR	_PORTB,0
                                    1- 2467     	.line	270, "main.c"; 	delay(100);
     000C 2164                      1- 2468     	MOVIA	0x64
     000D 2rrr                      1- 2469     	LCALL	_delay
                                    1- 2470     	.line	271, "main.c"; 	LedInput();
     000E 2rrr                      1- 2471     	LCALL	_LedInput
                                    1- 2472     	.line	272, "main.c"; 	}
                                    1- 2473     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2474     ; exit point of _POWERLOW
                                    1- 2476     ;***
                                    1- 2477     ;  pBlock Stats: dbName = C
                                    1- 2478     ;***
                                    1- 2479     ;has an exit
                                    1- 2480     ;functions called:
                                    1- 2481     ;   _delay
                                    1- 2482     ;   _LedInput
                                    1- 2483     ;   _delay
                                    1- 2484     ;   _LedInput
                                    1- 2485     ;1 compiler assigned register :
                                    1- 2486     ;   r0x1033
                                    1- 2487     ;; Starting pCode block
                                    1- 2488     .segment "code"; module=main, function=_POWERMID
     0000                           1- 2490     _POWERMID:
                                    1- 2491     ; 2 exit points
                                    1- 2492     	.line	256, "main.c"; 	LEDL1OUT();
     0000 001r                      1- 2493     	IOSTR	_IOSTA
                                    1- 2494     	BANKSEL	r0x1033
     0001 00rr                      1- 2495     	MOVAR	r0x1033
     0002 1Frr                      1- 2496     	BCR	r0x1033,7
     0003 01rr                      1- 2497     	MOVR	r0x1033,W
     0004 000r                      1- 2498     	IOST	_IOSTA
                                    1- 2499     	.line	257, "main.c"; 	LEDW0OUT();
     0005 001r                      1- 2500     	IOSTR	_IOSTB
     0006 00rr                      1- 2501     	MOVAR	r0x1033
     0007 1Crr                      1- 2502     	BCR	r0x1033,0
     0008 01rr                      1- 2503     	MOVR	r0x1033,W
     0009 000r                      1- 2504     	IOST	_IOSTB
                                    1- 2505     	.line	258, "main.c"; 	LEDL1ON();
     000A 1Brr                      1- 2506     	BSR	_PORTA,7
                                    1- 2507     	.line	259, "main.c"; 	LEDW0OFF();
     000B 1Crr                      1- 2508     	BCR	_PORTB,0
                                    1- 2509     	.line	260, "main.c"; 	delay(100);
     000C 2164                      1- 2510     	MOVIA	0x64
     000D 2rrr                      1- 2511     	LCALL	_delay
                                    1- 2512     	.line	261, "main.c"; 	LedInput();
     000E 2rrr                      1- 2513     	LCALL	_LedInput
                                    1- 2514     	.line	262, "main.c"; 	}
                                    1- 2515     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2516     ; exit point of _POWERMID
                                    1- 2518     ;***
                                    1- 2519     ;  pBlock Stats: dbName = C
                                    1- 2520     ;***
                                    1- 2521     ;has an exit
                                    1- 2522     ;functions called:
                                    1- 2523     ;   _delay
                                    1- 2524     ;   _LedInput
                                    1- 2525     ;   _delay
                                    1- 2526     ;   _LedInput
                                    1- 2527     ;1 compiler assigned register :
                                    1- 2528     ;   r0x1033
                                    1- 2529     ;; Starting pCode block
                                    1- 2530     .segment "code"; module=main, function=_POWERHIGHT
     0000                           1- 2532     _POWERHIGHT:
                                    1- 2533     ; 2 exit points
                                    1- 2534     	.line	246, "main.c"; 	LEDL2OUT();
     0000 001r                      1- 2535     	IOSTR	_IOSTB
                                    1- 2536     	BANKSEL	r0x1033
     0001 00rr                      1- 2537     	MOVAR	r0x1033
     0002 1Crr                      1- 2538     	BCR	r0x1033,1
     0003 01rr                      1- 2539     	MOVR	r0x1033,W
     0004 000r                      1- 2540     	IOST	_IOSTB
                                    1- 2541     	.line	247, "main.c"; 	LEDW0OUT();
     0005 001r                      1- 2542     	IOSTR	_IOSTB
     0006 00rr                      1- 2543     	MOVAR	r0x1033
     0007 1Crr                      1- 2544     	BCR	r0x1033,0
     0008 01rr                      1- 2545     	MOVR	r0x1033,W
     0009 000r                      1- 2546     	IOST	_IOSTB
                                    1- 2547     	.line	248, "main.c"; 	LEDL2ON();
     000A 18rr                      1- 2548     	BSR	_PORTB,1
                                    1- 2549     	.line	249, "main.c"; 	LEDW0OFF();
     000B 1Crr                      1- 2550     	BCR	_PORTB,0
                                    1- 2551     	.line	250, "main.c"; 	delay(100);
     000C 2164                      1- 2552     	MOVIA	0x64
     000D 2rrr                      1- 2553     	LCALL	_delay
                                    1- 2554     	.line	251, "main.c"; 	LedInput();
     000E 2rrr                      1- 2555     	LCALL	_LedInput
                                    1- 2556     	.line	252, "main.c"; 	}
                                    1- 2557     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2558     ; exit point of _POWERHIGHT
                                    1- 2560     ;***
                                    1- 2561     ;  pBlock Stats: dbName = C
                                    1- 2562     ;***
                                    1- 2563     ;has an exit
                                    1- 2564     ;functions called:
                                    1- 2565     ;   _delay
                                    1- 2566     ;   _LedInput
                                    1- 2567     ;   _delay
                                    1- 2568     ;   _LedInput
                                    1- 2569     ;1 compiler assigned register :
                                    1- 2570     ;   r0x1033
                                    1- 2571     ;; Starting pCode block
                                    1- 2572     .segment "code"; module=main, function=_BATLOW
     0000                           1- 2574     _BATLOW:
                                    1- 2575     ; 2 exit points
                                    1- 2576     	.line	236, "main.c"; 	LEDL0OUT();
     0000 001r                      1- 2577     	IOSTR	_IOSTA
                                    1- 2578     	BANKSEL	r0x1033
     0001 00rr                      1- 2579     	MOVAR	r0x1033
     0002 1Frr                      1- 2580     	BCR	r0x1033,6
     0003 01rr                      1- 2581     	MOVR	r0x1033,W
     0004 000r                      1- 2582     	IOST	_IOSTA
                                    1- 2583     	.line	237, "main.c"; 	LEDW1OUT();
     0005 001r                      1- 2584     	IOSTR	_IOSTA
     0006 00rr                      1- 2585     	MOVAR	r0x1033
     0007 1Drr                      1- 2586     	BCR	r0x1033,2
     0008 01rr                      1- 2587     	MOVR	r0x1033,W
     0009 000r                      1- 2588     	IOST	_IOSTA
                                    1- 2589     	.line	238, "main.c"; 	LEDL0ON();
     000A 1Brr                      1- 2590     	BSR	_PORTA,6
                                    1- 2591     	.line	239, "main.c"; 	LEDW1OFF();
     000B 1Drr                      1- 2592     	BCR	_PORTA,2
                                    1- 2593     	.line	240, "main.c"; 	delay(100);
     000C 2164                      1- 2594     	MOVIA	0x64
     000D 2rrr                      1- 2595     	LCALL	_delay
                                    1- 2596     	.line	241, "main.c"; 	LedInput();
     000E 2rrr                      1- 2597     	LCALL	_LedInput
                                    1- 2598     	.line	242, "main.c"; 	}
                                    1- 2599     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2600     ; exit point of _BATLOW
                                    1- 2602     ;***
                                    1- 2603     ;  pBlock Stats: dbName = C
                                    1- 2604     ;***
                                    1- 2605     ;has an exit
                                    1- 2606     ;functions called:
                                    1- 2607     ;   _delay
                                    1- 2608     ;   _LedInput
                                    1- 2609     ;   _delay
                                    1- 2610     ;   _LedInput
                                    1- 2611     ;1 compiler assigned register :
                                    1- 2612     ;   r0x1033
                                    1- 2613     ;; Starting pCode block
                                    1- 2614     .segment "code"; module=main, function=_BATHIGHT
     0000                           1- 2616     _BATHIGHT:
                                    1- 2617     ; 2 exit points
                                    1- 2618     	.line	226, "main.c"; 	LEDL1OUT();
     0000 001r                      1- 2619     	IOSTR	_IOSTA
                                    1- 2620     	BANKSEL	r0x1033
     0001 00rr                      1- 2621     	MOVAR	r0x1033
     0002 1Frr                      1- 2622     	BCR	r0x1033,7
     0003 01rr                      1- 2623     	MOVR	r0x1033,W
     0004 000r                      1- 2624     	IOST	_IOSTA
                                    1- 2625     	.line	227, "main.c"; 	LEDW1OUT();
     0005 001r                      1- 2626     	IOSTR	_IOSTA
     0006 00rr                      1- 2627     	MOVAR	r0x1033
     0007 1Drr                      1- 2628     	BCR	r0x1033,2
     0008 01rr                      1- 2629     	MOVR	r0x1033,W
     0009 000r                      1- 2630     	IOST	_IOSTA
                                    1- 2631     	.line	228, "main.c"; 	LEDL1ON();
     000A 1Brr                      1- 2632     	BSR	_PORTA,7
                                    1- 2633     	.line	229, "main.c"; 	LEDW1OFF();
     000B 1Drr                      1- 2634     	BCR	_PORTA,2
                                    1- 2635     	.line	230, "main.c"; 	delay(100);
     000C 2164                      1- 2636     	MOVIA	0x64
     000D 2rrr                      1- 2637     	LCALL	_delay
                                    1- 2638     	.line	231, "main.c"; 	LedInput();
     000E 2rrr                      1- 2639     	LCALL	_LedInput
                                    1- 2640     	.line	232, "main.c"; 	}
                                    1- 2641     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2642     ; exit point of _BATHIGHT
                                    1- 2644     ;***
                                    1- 2645     ;  pBlock Stats: dbName = C
                                    1- 2646     ;***
                                    1- 2647     ;has an exit
                                    1- 2648     ;functions called:
                                    1- 2649     ;   _delay
                                    1- 2650     ;   _LedInput
                                    1- 2651     ;   _delay
                                    1- 2652     ;   _LedInput
                                    1- 2653     ;1 compiler assigned register :
                                    1- 2654     ;   r0x1033
                                    1- 2655     ;; Starting pCode block
                                    1- 2656     .segment "code"; module=main, function=_LEDMODE1
     0000                           1- 2658     _LEDMODE1:
                                    1- 2659     ; 2 exit points
                                    1- 2660     	.line	216, "main.c"; 	LEDL2OUT();
     0000 001r                      1- 2661     	IOSTR	_IOSTB
                                    1- 2662     	BANKSEL	r0x1033
     0001 00rr                      1- 2663     	MOVAR	r0x1033
     0002 1Crr                      1- 2664     	BCR	r0x1033,1
     0003 01rr                      1- 2665     	MOVR	r0x1033,W
     0004 000r                      1- 2666     	IOST	_IOSTB
                                    1- 2667     	.line	217, "main.c"; 	LEDW1OUT();
     0005 001r                      1- 2668     	IOSTR	_IOSTA
     0006 00rr                      1- 2669     	MOVAR	r0x1033
     0007 1Drr                      1- 2670     	BCR	r0x1033,2
     0008 01rr                      1- 2671     	MOVR	r0x1033,W
     0009 000r                      1- 2672     	IOST	_IOSTA
                                    1- 2673     	.line	218, "main.c"; 	LEDL2ON();
     000A 18rr                      1- 2674     	BSR	_PORTB,1
                                    1- 2675     	.line	219, "main.c"; 	LEDW1OFF();
     000B 1Drr                      1- 2676     	BCR	_PORTA,2
                                    1- 2677     	.line	220, "main.c"; 	delay(100);
     000C 2164                      1- 2678     	MOVIA	0x64
     000D 2rrr                      1- 2679     	LCALL	_delay
                                    1- 2680     	.line	221, "main.c"; 	LedInput();
     000E 2rrr                      1- 2681     	LCALL	_LedInput
                                    1- 2682     	.line	222, "main.c"; 	}
                                    1- 2683     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2684     ; exit point of _LEDMODE1
                                    1- 2686     ;***
                                    1- 2687     ;  pBlock Stats: dbName = C
                                    1- 2688     ;***
                                    1- 2689     ;has an exit
                                    1- 2690     ;functions called:
                                    1- 2691     ;   _delay
                                    1- 2692     ;   _LedInput
                                    1- 2693     ;   _delay
                                    1- 2694     ;   _LedInput
                                    1- 2695     ;1 compiler assigned register :
                                    1- 2696     ;   r0x1033
                                    1- 2697     ;; Starting pCode block
                                    1- 2698     .segment "code"; module=main, function=_LEDMODE2
     0000                           1- 2700     _LEDMODE2:
                                    1- 2701     ; 2 exit points
                                    1- 2702     	.line	206, "main.c"; 	LEDW0OUT();
     0000 001r                      1- 2703     	IOSTR	_IOSTB
                                    1- 2704     	BANKSEL	r0x1033
     0001 00rr                      1- 2705     	MOVAR	r0x1033
     0002 1Crr                      1- 2706     	BCR	r0x1033,0
     0003 01rr                      1- 2707     	MOVR	r0x1033,W
     0004 000r                      1- 2708     	IOST	_IOSTB
                                    1- 2709     	.line	207, "main.c"; 	LEDL0OUT();
     0005 001r                      1- 2710     	IOSTR	_IOSTA
     0006 00rr                      1- 2711     	MOVAR	r0x1033
     0007 1Frr                      1- 2712     	BCR	r0x1033,6
     0008 01rr                      1- 2713     	MOVR	r0x1033,W
     0009 000r                      1- 2714     	IOST	_IOSTA
                                    1- 2715     	.line	208, "main.c"; 	LEDW0ON();
     000A 18rr                      1- 2716     	BSR	_PORTB,0
                                    1- 2717     	.line	209, "main.c"; 	LEDL0OFF();
     000B 1Frr                      1- 2718     	BCR	_PORTA,6
                                    1- 2719     	.line	210, "main.c"; 	delay(100);
     000C 2164                      1- 2720     	MOVIA	0x64
     000D 2rrr                      1- 2721     	LCALL	_delay
                                    1- 2722     	.line	211, "main.c"; 	LedInput();
     000E 2rrr                      1- 2723     	LCALL	_LedInput
                                    1- 2724     	.line	212, "main.c"; 	}
                                    1- 2725     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2726     ; exit point of _LEDMODE2
                                    1- 2728     ;***
                                    1- 2729     ;  pBlock Stats: dbName = C
                                    1- 2730     ;***
                                    1- 2731     ;has an exit
                                    1- 2732     ;functions called:
                                    1- 2733     ;   _delay
                                    1- 2734     ;   _LedInput
                                    1- 2735     ;   _delay
                                    1- 2736     ;   _LedInput
                                    1- 2737     ;1 compiler assigned register :
                                    1- 2738     ;   r0x1033
                                    1- 2739     ;; Starting pCode block
                                    1- 2740     .segment "code"; module=main, function=_LEDMODE3
     0000                           1- 2742     _LEDMODE3:
                                    1- 2743     ; 2 exit points
                                    1- 2744     	.line	196, "main.c"; 	LEDW0OUT();
     0000 001r                      1- 2745     	IOSTR	_IOSTB
                                    1- 2746     	BANKSEL	r0x1033
     0001 00rr                      1- 2747     	MOVAR	r0x1033
     0002 1Crr                      1- 2748     	BCR	r0x1033,0
     0003 01rr                      1- 2749     	MOVR	r0x1033,W
     0004 000r                      1- 2750     	IOST	_IOSTB
                                    1- 2751     	.line	197, "main.c"; 	LEDL1OUT();
     0005 001r                      1- 2752     	IOSTR	_IOSTA
     0006 00rr                      1- 2753     	MOVAR	r0x1033
     0007 1Frr                      1- 2754     	BCR	r0x1033,7
     0008 01rr                      1- 2755     	MOVR	r0x1033,W
     0009 000r                      1- 2756     	IOST	_IOSTA
                                    1- 2757     	.line	198, "main.c"; 	LEDW0ON();
     000A 18rr                      1- 2758     	BSR	_PORTB,0
                                    1- 2759     	.line	199, "main.c"; 	LEDL1OFF();
     000B 1Frr                      1- 2760     	BCR	_PORTA,7
                                    1- 2761     	.line	200, "main.c"; 	delay(100);
     000C 2164                      1- 2762     	MOVIA	0x64
     000D 2rrr                      1- 2763     	LCALL	_delay
                                    1- 2764     	.line	201, "main.c"; 	LedInput();
     000E 2rrr                      1- 2765     	LCALL	_LedInput
                                    1- 2766     	.line	202, "main.c"; 	}
                                    1- 2767     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2768     ; exit point of _LEDMODE3
                                    1- 2770     ;***
                                    1- 2771     ;  pBlock Stats: dbName = C
                                    1- 2772     ;***
                                    1- 2773     ;has an exit
                                    1- 2774     ;functions called:
                                    1- 2775     ;   _delay
                                    1- 2776     ;   _LedInput
                                    1- 2777     ;   _delay
                                    1- 2778     ;   _LedInput
                                    1- 2779     ;1 compiler assigned register :
                                    1- 2780     ;   r0x1033
                                    1- 2781     ;; Starting pCode block
                                    1- 2782     .segment "code"; module=main, function=_LEDMODE4
     0000                           1- 2784     _LEDMODE4:
                                    1- 2785     ; 2 exit points
                                    1- 2786     	.line	186, "main.c"; 	LEDW1OUT();
     0000 001r                      1- 2787     	IOSTR	_IOSTA
                                    1- 2788     	BANKSEL	r0x1033
     0001 00rr                      1- 2789     	MOVAR	r0x1033
     0002 1Drr                      1- 2790     	BCR	r0x1033,2
     0003 01rr                      1- 2791     	MOVR	r0x1033,W
     0004 000r                      1- 2792     	IOST	_IOSTA
                                    1- 2793     	.line	187, "main.c"; 	LEDL2OUT();
     0005 001r                      1- 2794     	IOSTR	_IOSTB
     0006 00rr                      1- 2795     	MOVAR	r0x1033
     0007 1Crr                      1- 2796     	BCR	r0x1033,1
     0008 01rr                      1- 2797     	MOVR	r0x1033,W
     0009 000r                      1- 2798     	IOST	_IOSTB
                                    1- 2799     	.line	188, "main.c"; 	LEDW1ON();
     000A 19rr                      1- 2800     	BSR	_PORTA,2
                                    1- 2801     	.line	189, "main.c"; 	LEDL2OFF();
     000B 1Crr                      1- 2802     	BCR	_PORTB,1
                                    1- 2803     	.line	190, "main.c"; 	delay(100);
     000C 2164                      1- 2804     	MOVIA	0x64
     000D 2rrr                      1- 2805     	LCALL	_delay
                                    1- 2806     	.line	191, "main.c"; 	LedInput();
     000E 2rrr                      1- 2807     	LCALL	_LedInput
                                    1- 2808     	.line	192, "main.c"; 	}
                                    1- 2809     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2810     ; exit point of _LEDMODE4
                                    1- 2812     ;***
                                    1- 2813     ;  pBlock Stats: dbName = C
                                    1- 2814     ;***
                                    1- 2815     ;has an exit
                                    1- 2816     ;1 compiler assigned register :
                                    1- 2817     ;   r0x1032
                                    1- 2818     ;; Starting pCode block
                                    1- 2819     .segment "code"; module=main, function=_LedInput
     0000                           1- 2821     _LedInput:
                                    1- 2822     ; 2 exit points
                                    1- 2823     	.line	177, "main.c"; 	PORTA &= 0x3B;
     0000 213B                      1- 2824     	MOVIA	0x3b
     0001 10rr                      1- 2825     	ANDAR	_PORTA,F
                                    1- 2826     	.line	178, "main.c"; 	PORTB &= 0xFC;
     0002 21FC                      1- 2827     	MOVIA	0xfc
     0003 10rr                      1- 2828     	ANDAR	_PORTB,F
                                    1- 2829     	.line	179, "main.c"; 	IOSTA |= 0xC4;
     0004 001r                      1- 2830     	IOSTR	_IOSTA
                                    1- 2831     	BANKSEL	r0x1032
     0005 00rr                      1- 2832     	MOVAR	r0x1032
     0006 21C4                      1- 2833     	MOVIA	0xc4
     0007 11rr                      1- 2834     	IORAR	r0x1032,F
     0008 01rr                      1- 2835     	MOVR	r0x1032,W
     0009 000r                      1- 2836     	IOST	_IOSTA
                                    1- 2837     	.line	180, "main.c"; 	IOSTB |= 0x03;
     000A 001r                      1- 2838     	IOSTR	_IOSTB
     000B 00rr                      1- 2839     	MOVAR	r0x1032
     000C 2103                      1- 2840     	MOVIA	0x03
     000D 11rr                      1- 2841     	IORAR	r0x1032,F
     000E 01rr                      1- 2842     	MOVR	r0x1032,W
     000F 000r                      1- 2843     	IOST	_IOSTB
                                    1- 2844     	.line	181, "main.c"; 	}
                                    1- 2845     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 2846     ; exit point of _LedInput
                                    1- 2848     ;***
                                    1- 2849     ;  pBlock Stats: dbName = C
                                    1- 2850     ;***
                                    1- 2851     ;has an exit
                                    1- 2852     ;; Starting pCode block
                                    1- 2853     .segment "code"; module=main, function=_initSys
     0000                           1- 2855     _initSys:
                                    1- 2856     ; 2 exit points
                                    1- 2857     	.line	111, "main.c"; 	DISI();
     0000 0013                      1- 2858     	DISI
                                    1- 2859     	.line	112, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA1_Input;
     0001 213A                      1- 2860     	MOVIA	0x3a
     0002 000r                      1- 2861     	IOST	_IOSTA
                                    1- 2862     	.line	113, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2863     	CLRA	
     0004 000r                      1- 2864     	IOST	_IOSTB
                                    1- 2865     	.line	114, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2866     	CLRR	_PORTB
                                    1- 2867     	.line	115, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1- 2868     	CLRR	_PORTA
                                    1- 2869     	.line	116, "main.c"; 	APHCON = 0xFF;
     0007 21FF                      1- 2870     	MOVIA	0xff
     0008 000r                      1- 2871     	IOST	_APHCON
                                    1- 2872     	.line	117, "main.c"; 	BPHCON = 0xFF;
     0009 00rr                      1- 2873     	MOVAR	_BPHCON
                                    1- 2874     	.line	119, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000A 2101                      1- 2875     	MOVIA	0x01
     000B 00rr                      1- 2876     	MOVAR	_INTE
                                    1- 2877     	.line	121, "main.c"; 	PCON1 = C_TMR0_Dis;
     000C 0200                      1- 2878     	CLRA	
     000D 000r                      1- 2879     	IOST	_PCON1
                                    1- 2880     	.line	123, "main.c"; 	TMR0 = 55;
     000E 2137                      1- 2881     	MOVIA	0x37
     000F 00rr                      1- 2882     	MOVAR	_TMR0
                                    1- 2883     	.line	124, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0010 0200                      1- 2884     	CLRA	
     0011 0003                      1- 2885     	T0MD	
                                    1- 2886     	.line	126, "main.c"; 	PCON1 = C_TMR0_En;
     0012 2101                      1- 2887     	MOVIA	0x01
     0013 000r                      1- 2888     	IOST	_PCON1
                                    1- 2889     	.line	129, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0014 2188                      1- 2890     	MOVIA	0x88
     0015 00rr                      1- 2891     	MOVAR	_PCON
                                    1- 2892     	.line	132, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0016 2101                      1- 2893     	MOVIA	0x01
     0017 000r                      1- 2894     	IOST	_PCON1
                                    1- 2895     	.line	133, "main.c"; 	ENI();
     0018 0004                      1- 2896     	ENI
                                    1- 2897     	.line	134, "main.c"; 	}
                                    1- 2898     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1- 2899     ; exit point of _initSys
                                    1- 2902     ;	code size estimation:
                                    1- 2903     ;	 1066+  248 =  1314 instructions ( 3124 byte)
                                    1- 2905     	end
                                    1- 2905     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuint               Label    00000000
__mulint                Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810613
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001F
_00002_DS_              Label    0000001F
_00003_DS_              Label    0000001F
_00004_DS_              Label    0000001F
_00005_DS_              Label    0000001B
_00006_DS_              Label    0000001B
_00007_DS_              Label    00000020
_00008_DS_              Label    0000001B
_00108_DS_              Label    00000018
_00110_DS_              Label    0000001C
_00122_DS_              Label    00000012
_00125_DS_              Label    0000001C
_00130_DS_              Label    00000002
_00180_DS_              Label    00000004
_00182_DS_              Label    00000012
_00192_DS_              Label    00000039
_00197_DS_              Label    00000010
_00198_DS_              Label    0000003A
_00202_DS_              Label    00000052
_00205_DS_              Label    0000004A
_00208_DS_              Label    0000005A
_00210_DS_              Label    0000005D
_00240_DS_              Label    0000000A
_00242_DS_              Label    00000035
_00243_DS_              Label    00000040
_00251_DS_              Label    00000032
_00254_DS_              Label    0000002B
_00257_DS_              Label    00000022
_00260_DS_              Label    00000019
_00263_DS_              Label    00000010
_00264_DS_              Label    00000038
_00269_DS_              Label    00000044
_00275_DS_              Label    00000007
_00279_DS_              Label    00000026
_00282_DS_              Label    00000017
_00285_DS_              Label    00000028
_00288_DS_              Label    00000032
_00291_DS_              Label    0000003A
_00294_DS_              Label    0000006B
_00297_DS_              Label    0000006E
_00298_DS_              Label    0000006F
_00301_DS_              Label    00000081
_00303_DS_              Label    00000088
_00309_DS_              Label    0000008B
_00316_DS_              Label    000000A3
_00321_DS_              Label    00000096
_00323_DS_              Label    000000AD
_00395_DS_              Label    00000012
_00396_DS_              Label    00000021
_00399_DS_              Label    0000004B
_00400_DS_              Label    00000053
_00401_DS_              Label    00000066
_00408_DS_              Label    0000000D
_00415_DS_              Label    0000000D
_00443_DS_              Label    0000001A
_00444_DS_              Label    00000021
_00446_DS_              Label    00000012
_00447_DS_              Label    00000023
_00448_DS_              Label    00000024
_00457_DS_              Label    00000011
_00458_DS_              Label    00000013
_00459_DS_              Label    00000015
_00460_DS_              Label    00000017
_00461_DS_              Label    00000019
_00462_DS_              Label    0000001B
_00463_DS_              Label    0000001C
_00464_DS_              Label    0000002A
_00465_DS_              Label    0000002C
_00466_DS_              Label    0000002E
_00467_DS_              Label    00000030
_00468_DS_              Label    0000003F
_00469_DS_              Label    00000041
_00470_DS_              Label    00000043
_00471_DS_              Label    00000046
_00473_DS_              Label    00000049
_00485_DS_              Label    0000000C
_00487_DS_              Label    00000027
_00489_DS_              Label    0000003B
_00494_DS_              Label    00000000
_00501_DS_              Label    00000002
_00503_DS_              Label    00000009
_00510_DS_              Label    0000000A
_00512_DS_              Label    00000021
_00519_DS_              Label    0000000A
_00521_DS_              Label    00000021
_00528_DS_              Label    0000000A
_00530_DS_              Label    00000021
_00537_DS_              Label    0000000A
_00539_DS_              Label    00000021
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADKeyCtr               Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BATHIGHT               Label    00000000
_BATLOW                 Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBAT               Label    00000000
_checkHotAD             Label    00000000
_checkKeyAD             Label    00000000
_checkTime              Label    00000000
_checkTouchAD           Label    00000000
_chrgCtr                Label    00000000
_chrgLedStep            Label    00000000
_delay                  Label    00000000
_F_AIN1_Convert         Label    00000000
_F_AIN3_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_VDD_Convert          Label    00000000
_F_wait_eoc             Label    00000000
_FSR                    Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyNub                 Label    00000000
_keyRead                Label    00000000
_LedInput               Label    00000000
_LEDMODE1               Label    00000000
_LEDMODE2               Label    00000000
_LEDMODE3               Label    00000000
_LEDMODE4               Label    00000000
_main                   Label    00000000
_modeLedShow            Label    00000000
_modeStep               Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_POWERHIGHT             Label    00000000
_POWERLOW               Label    00000000
_POWERMID               Label    00000000
_powerStep              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM1Start              Label    00000000
_PWM2DUTY               Label    00000000
_PWM2Start              Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN1_DATA            Label    00000000
_R_AIN1_DATA_LB         Label    00000000
_R_AIN3_DATA            Label    00000000
_R_AIN3_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_R_VDD_DATA             Label    00000000
_R_VDD_DATA_LB          Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_startCtr               Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_timeCount              Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    0000002A
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
r0x101A                 Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
r0x103D                 Label    00000000
r0x1040                 Label    00000000
r0x1043                 Label    00000000
r0x1044                 Label    00000000
r0x1045                 Label    00000000
r0x1046                 Label    00000000
r0x1047                 Label    00000000
r0x1048                 Label    00000000
r0x1049                 Label    00000000
r0x104A                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b061d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B061D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000005FF
DATA ROM     = 0x00000000 - 0x000005FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
