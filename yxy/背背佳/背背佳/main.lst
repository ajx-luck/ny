
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	___uchar2fs
                                    1-   15     	extern	___schar2fs
                                    1-   16     	extern	___uint2fs
                                    1-   17     	extern	___sint2fs
                                    1-   18     	extern	___ulong2fs
                                    1-   19     	extern	___slong2fs
                                    1-   20     	extern	___fs2uchar
                                    1-   21     	extern	___fs2schar
                                    1-   22     	extern	___fs2uint
                                    1-   23     	extern	___fs2sint
                                    1-   24     	extern	___fs2ulong
                                    1-   25     	extern	___fs2slong
                                    1-   26     	extern	___fsadd
                                    1-   27     	extern	___fssub
                                    1-   28     	extern	___fsmul
                                    1-   29     	extern	___fsdiv
                                    1-   30     	extern	___fslt
                                    1-   31     	extern	___fseq
                                    1-   32     	extern	___fsneq
                                    1-   33     	extern	___fsgt
                                    1-   34     	extern	_msa_init
                                    1-   35     	extern	_msa_read_data
                                    1-   36     	extern	_msa_get_step
                                    1-   37     	extern	_msa_register_read_continuously
                                    1-   38     	extern	_i2c_write_byte_data
                                    1-   39     	extern	_msa_WriteBytes
                                    1-   40     	extern	_msa_calibrate
                                    1-   41     	extern	_msa_calibrateZ
                                    1-   42     	extern	_msa_ReadBytes
                                    1-   43     	extern	_SW_i2c_udelay
                                    1-   44     	extern	_msa_read_adc
                                    1-   45     	extern	_msa_flip_init
                                    1-   46     	extern	_msa_flip_process
                                    1-   47     	extern	_msa_sqrt
                                    1-   48     	extern	_Delay1000Us
                                    1-   49     	extern	_Delay10Us
                                    1-   50     	extern	_IIC_Start
                                    1-   51     	extern	_IIC_Send_Byte
                                    1-   52     	extern	_IIC_Read_Byte
                                    1-   53     	extern	_SDA_OUT
                                    1-   54     	extern	_SDA_IN
                                    1-   55     	extern	_IIC_Ack
                                    1-   56     	extern	_IIC_NAck
                                    1-   57     	extern	_delay_us
                                    1-   58     	extern	_delay_ms
                                    1-   59     	extern	_IIC_Stop
                                    1-   60     	extern	_IIC_Wait_Ack
                                    1-   61     	extern	_PORTAbits
                                    1-   62     	extern	_PORTBbits
                                    1-   63     	extern	_PCONbits
                                    1-   64     	extern	_BWUCONbits
                                    1-   65     	extern	_ABPLCONbits
                                    1-   66     	extern	_BPHCONbits
                                    1-   67     	extern	_INTEbits
                                    1-   68     	extern	_INTFbits
                                    1-   69     	extern	_AWUCONbits
                                    1-   70     	extern	_INTEDGbits
                                    1-   71     	extern	_RFCbits
                                    1-   72     	extern	_INTE2bits
                                    1-   73     	extern	_offset_z
                                    1-   74     	extern	_isCalibrated
                                    1-   75     	extern	_INDF
                                    1-   76     	extern	_TMR0
                                    1-   77     	extern	_PCL
                                    1-   78     	extern	_STATUS
                                    1-   79     	extern	_FSR
                                    1-   80     	extern	_PORTA
                                    1-   81     	extern	_PORTB
                                    1-   82     	extern	_PCON
                                    1-   83     	extern	_BWUCON
                                    1-   84     	extern	_PCHBUF
                                    1-   85     	extern	_ABPLCON
                                    1-   86     	extern	_BPHCON
                                    1-   87     	extern	_INTE
                                    1-   88     	extern	_INTF
                                    1-   89     	extern	_AWUCON
                                    1-   90     	extern	_INTEDG
                                    1-   91     	extern	_TMRH
                                    1-   92     	extern	_RFC
                                    1-   93     	extern	_TM34RH
                                    1-   94     	extern	_INTE2
                                    1-   95     	extern	_TMR1
                                    1-   96     	extern	_T1CR1
                                    1-   97     	extern	_T1CR2
                                    1-   98     	extern	_PWM1DUTY
                                    1-   99     	extern	_PS1CV
                                    1-  100     	extern	_BZ1CR
                                    1-  101     	extern	_IRCR
                                    1-  102     	extern	_TBHP
                                    1-  103     	extern	_TBHD
                                    1-  104     	extern	_P2CR1
                                    1-  105     	extern	_PWM2DUTY
                                    1-  106     	extern	_OSCCR
                                    1-  107     	extern	_TMR3
                                    1-  108     	extern	_T3CR1
                                    1-  109     	extern	_T3CR2
                                    1-  110     	extern	_PWM3DUTY
                                    1-  111     	extern	_PS3CV
                                    1-  112     	extern	_P4CR1
                                    1-  113     	extern	_PWM4DUTY
                                    1-  114     	extern	_P5CR1
                                    1-  115     	extern	_PWM5DUTY
                                    1-  116     	extern	_PWM5RH
                                    1-  117     	extern	_IOSTA
                                    1-  118     	extern	_IOSTB
                                    1-  119     	extern	_APHCON
                                    1-  120     	extern	_PS0CV
                                    1-  121     	extern	_BODCON
                                    1-  122     	extern	_CMPCR
                                    1-  123     	extern	_PCON1
                                    1-  124     	extern	_T0MD
                                    1-  125     	extern	___sdcc_saved_fsr
                                    1-  126     	extern	___sdcc_saved_stk00
                                    1-  127     	extern	___sdcc_saved_stk01
                                    1-  128     	extern	__gptrget1
                                    1-  129     	extern	__nyc_ny8_startup
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; global declarations
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     	extern	_gotoSleep
                                    1-  134     	extern	_keyRead
                                    1-  135     	extern	_ind_light_disp
                                    1-  136     	extern	_getData
                                    1-  137     	extern	_chrgCtr
                                    1-  138     	extern	_refreshLed
                                    1-  139     	extern	_workCtr
                                    1-  140     	extern	_isr
                                    1-  141     	extern	_main
                                    1-  142     	extern	_hzH
                                    1-  143     	extern	_hzL
                                    1-  144     	extern	_hz
                                    1-  145     	extern	_chrgStep
                                    1-  146     	extern	_intCount
                                    1-  147     	extern	_IntFlag
                                    1-  148     	extern	_keyCount
                                    1-  149     	extern	_workStep
                                    1-  150     	extern	_baiwei
                                    1-  151     	extern	_shiwei
                                    1-  152     	extern	_gewei
                                    1-  153     	extern	_rockStep
                                    1-  154     	extern	_workTime
                                    1-  155     	extern	_sleepTime
                                    1-  157     	extern PSAVE
                                    1-  158     	extern SSAVE
                                    1-  159     	extern WSAVE
                                    1-  160     	extern STK12
                                    1-  161     	extern STK11
                                    1-  162     	extern STK10
                                    1-  163     	extern STK09
                                    1-  164     	extern STK08
                                    1-  165     	extern STK07
                                    1-  166     	extern STK06
                                    1-  167     	extern STK05
                                    1-  168     	extern STK04
                                    1-  169     	extern STK03
                                    1-  170     	extern STK02
                                    1-  171     	extern STK01
                                    1-  172     	extern STK00
                                    1-  174     .segment "uninit", 0x20000040
 20000040                           1-  175     PSAVE:
                                    1-  176     	.res 1
 20000041                           1-  177     SSAVE:
                                    1-  178     	.res 1
 20000042                           1-  179     WSAVE:
                                    1-  180     	.res 1
 20000043                           1-  181     STK12:
                                    1-  182     	.res 1
 20000044                           1-  183     STK11:
                                    1-  184     	.res 1
 20000045                           1-  185     STK10:
                                    1-  186     	.res 1
 20000046                           1-  187     STK09:
                                    1-  188     	.res 1
 20000047                           1-  189     STK08:
                                    1-  190     	.res 1
 20000048                           1-  191     STK07:
                                    1-  192     	.res 1
 20000049                           1-  193     STK06:
                                    1-  194     	.res 1
 2000004A                           1-  195     STK05:
                                    1-  196     	.res 1
 2000004B                           1-  197     STK04:
                                    1-  198     	.res 1
 2000004C                           1-  199     STK03:
                                    1-  200     	.res 1
 2000004D                           1-  201     STK02:
                                    1-  202     	.res 1
 2000004E                           1-  203     STK01:
                                    1-  204     	.res 1
 2000004F                           1-  205     STK00:
                                    1-  206     	.res 1
                                    1-  208     ;--------------------------------------------------------
                                    1-  209     ; global definitions
                                    1-  210     ;--------------------------------------------------------
                                    1-  211     .segment "uninit"
     0000                           1-  212     _hzH:
                                    1-  213     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     _hzL:
                                    1-  218     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     _baiwei:
                                    1-  223     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     _shiwei:
                                    1-  228     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     _gewei:
                                    1-  233     	.res	1
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; absolute symbol definitions
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ; compiler-defined variables
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x102E:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x102B:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x102C:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x102D:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x102A:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1027:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1026:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1028:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1029:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1022:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1023:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1024:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1021:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1020:
                                    1-  283     	.res	1
                                    1-  284     ;--------------------------------------------------------
                                    1-  285     ; initialized data
                                    1-  286     ;--------------------------------------------------------
                                    1-  288     .segment "idata"
     0000                           1-  289     _hz:
     0000 0000 0000                 1-  290     	dw	0x00, 0x00
                                    1-  294     .segment "idata"
     0000                           1-  295     _chrgStep:
     0000 0000                      1-  296     	dw	0x00
                                    1-  300     .segment "idata"
     0000                           1-  301     _intCount:
     0000 0000                      1-  302     	dw	0x00
                                    1-  306     .segment "idata"
     0000                           1-  307     _IntFlag:
     0000 0000                      1-  308     	dw	0x00
                                    1-  312     .segment "idata"
     0000                           1-  313     _keyCount:
     0000 0000                      1-  314     	dw	0x00
                                    1-  318     .segment "idata"
     0000                           1-  319     _workStep:
     0000 0000                      1-  320     	dw	0x00
                                    1-  324     .segment "idata"
     0000                           1-  325     _rockStep:
     0000 0000                      1-  326     	dw	0x00
                                    1-  330     .segment "idata"
     0000                           1-  331     _workTime:
     0000 0000 0000                 1-  332     	dw	0x00, 0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _sleepTime:
     0000 0000 0000                 1-  338     	dw	0x00, 0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _table:
     0000 003F                      1-  344     	dw	0x3f
     0001 0006                      1-  345     	dw	0x06
     0002 005B                      1-  346     	dw	0x5b
     0003 004F                      1-  347     	dw	0x4f
     0004 0066                      1-  348     	dw	0x66
     0005 006D                      1-  349     	dw	0x6d
     0006 007D                      1-  350     	dw	0x7d
     0007 0007                      1-  351     	dw	0x07
     0008 007F                      1-  352     	dw	0x7f
     0009 006F                      1-  353     	dw	0x6f
     000A 0071                      1-  354     	dw	0x71
     000B 0038                      1-  355     	dw	0x38
                                    1-  358     ;--------------------------------------------------------
                                    1-  359     ; overlayable items in internal ram 
                                    1-  360     ;--------------------------------------------------------
                                    1-  361     ;	udata_ovr
                                    1-  362     ;--------------------------------------------------------
                                    1-  363     ; reset vector 
                                    1-  364     ;--------------------------------------------------------
                                    1-  365     ORG	0x0000
     0000 3rrr                      1-  366     	LGOTO	__nyc_ny8_startup
                                    1-  367     ;--------------------------------------------------------
                                    1-  368     ; interrupt and initialization code
                                    1-  369     ;--------------------------------------------------------
                                    1-  370     ORG 0x0008
     0008 3rrr                      1-  371     	lgoto	__sdcc_interrupt
                                    1-  373     .segment "code"
     0000                           1-  374     __sdcc_interrupt:
                                    1-  375     ;***
                                    1-  376     ;  pBlock Stats: dbName = I
                                    1-  377     ;***
                                    1-  378     ;2 compiler assigned registers:
                                    1-  379     ;   STK00
                                    1-  380     ;   STK01
                                    1-  381     ;; Starting pCode block
     0000                           1-  382     _isr:
                                    1-  383     ; 0 exit points
                                    1-  384     	.line	33, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  385     	MOVAR	WSAVE
     0001 1503                      1-  386     	SWAPR	STATUS,W
     0002 0283                      1-  387     	CLRR	STATUS
     0003 00rr                      1-  388     	MOVAR	SSAVE
     0004 010A                      1-  389     	MOVR	PCHBUF,W
     0005 028A                      1-  390     	CLRR	PCHBUF
     0006 00rr                      1-  391     	MOVAR	PSAVE
     0007 0104                      1-  392     	MOVR	FSR,W
                                    1-  393     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  394     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  395     	MOVR	STK00,W
                                    1-  396     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  397     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  398     	MOVR	STK01,W
                                    1-  399     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  400     	MOVAR	___sdcc_saved_stk01
                                    1-  401     	.line	35, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  402     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  403     	LGOTO	_00108_DS_
                                    1-  404     	.line	37, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  405     	MOVIA	0x37
     0013 03rr                      1-  406     	ADDAR	_TMR0,F
                                    1-  407     	.line	38, "main.c"; 	intCount++;
                                    1-  408     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  409     	INCR	_intCount,F
                                    1-  410     	.line	39, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  411     	MOVR	_intCount,W
     0017 2464                      1-  412     	XORIA	0x64
     0018 0903                      1-  413     	BTRSS	STATUS,2
     0019 3rrr                      1-  414     	LGOTO	_00108_DS_
                                    1-  415     	.line	41, "main.c"; 	intCount = 0;
     001A 02rr                      1-  416     	CLRR	_intCount
                                    1-  417     	.line	42, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  418     	MOVIA	0x01
                                    1-  419     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  420     	MOVAR	_IntFlag
     001E                           1-  421     _00108_DS_:
                                    1-  422     	.line	45, "main.c"; 	if(INTFbits.PABIF)
     001E 08rr                      1-  423     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  424     	LGOTO	_00110_DS_
                                    1-  425     	.line	47, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  426     	MOVIA	0xfd
     0021 00rr                      1-  427     	MOVAR	_INTF
     0022                           1-  428     _00110_DS_:
                                    1-  429     	.line	50, "main.c"; 	INTF = 0;
     0022 02rr                      1-  430     	CLRR	_INTF
                                    1-  431     	.line	52, "main.c"; 	}
                                    1-  432     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  433     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  434     	MOVAR	STK01
                                    1-  435     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  436     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  437     	MOVAR	STK00
                                    1-  438     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  439     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  440     	MOVAR	FSR
     002C 01rr                      1-  441     	MOVR	PSAVE,W
     002D 008A                      1-  442     	MOVAR	PCHBUF
     002E 0283                      1-  443     	CLRR	STATUS
     002F 15rr                      1-  444     	SWAPR	SSAVE,W
     0030 0083                      1-  445     	MOVAR	STATUS
     0031 15rr                      1-  446     	SWAPR	WSAVE,F
     0032 15rr                      1-  447     	SWAPR	WSAVE,W
     0033                           1-  448     END_OF_INTERRUPT:
     0033 0011                      1-  449     	RETIE	
                                    1-  451     ;--------------------------------------------------------
                                    1-  452     ; code
                                    1-  453     ;--------------------------------------------------------
                                    1-  454     ;***
                                    1-  455     ;  pBlock Stats: dbName = M
                                    1-  456     ;***
                                    1-  457     ;has an exit
                                    1-  458     ;functions called:
                                    1-  459     ;   _msa_init
                                    1-  460     ;   _getData
                                    1-  461     ;   _keyRead
                                    1-  462     ;   _msa_init
                                    1-  463     ;   _chrgCtr
                                    1-  464     ;   _workCtr
                                    1-  465     ;   _getData
                                    1-  466     ;   _gotoSleep
                                    1-  467     ;   _msa_init
                                    1-  468     ;   _getData
                                    1-  469     ;   _keyRead
                                    1-  470     ;   _msa_init
                                    1-  471     ;   _chrgCtr
                                    1-  472     ;   _workCtr
                                    1-  473     ;   _getData
                                    1-  474     ;   _gotoSleep
                                    1-  475     ;1 compiler assigned register :
                                    1-  476     ;   r0x102E
                                    1-  477     ;; Starting pCode block
                                    1-  478     .segment "code"; module=main, function=_main
     0000                           1-  480     _main:
                                    1-  481     ; 2 exit points
                                    1-  482     	.line	60, "main.c"; 	APHCON = 0xBF;
     0000 21BF                      1-  483     	MOVIA	0xbf
     0001 000r                      1-  484     	IOST	_APHCON
                                    1-  485     	.line	61, "main.c"; 	IOSTA = 0x00;     // Set PB0 & PB1 to input mode,others set to output mode
     0002 0200                      1-  486     	CLRA	
     0003 000r                      1-  487     	IOST	_IOSTA
                                    1-  488     	.line	62, "main.c"; 	IOSTB = 0x00;
     0004 000r                      1-  489     	IOST	_IOSTB
                                    1-  490     	.line	63, "main.c"; 	PORTA = 0x00; 
     0005 02rr                      1-  491     	CLRR	_PORTA
                                    1-  492     	.line	64, "main.c"; 	PORTB = 0x00;                           // PB0��PB1 & PB2 are output High	
     0006 02rr                      1-  493     	CLRR	_PORTB
                                    1-  494     	.line	65, "main.c"; 	msa_init();
     0007 2rrr                      1-  495     	LCALL	_msa_init
     0008                           1-  496     _00127_DS_:
                                    1-  497     	.line	87, "main.c"; 	CLRWDT();			//Clear WDT, this function is defined in ny8command.h
     0008 0002                      1-  498     	clrwdt
                                    1-  499     	.line	88, "main.c"; 	getData();
     0009 2rrr                      1-  500     	LCALL	_getData
                                    1-  501     	.line	96, "main.c"; 	if(keyRead(0x08 & (~PORTA)))
     000A 07rr                      1-  502     	COMR	_PORTA,W
                                    1-  503     	BANKSEL	r0x102E
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  504     	MOVAR	r0x102E
     000D 2108                      1-  505     	MOVIA	0x08
     000E 10rr                      1-  506     	ANDAR	r0x102E,F
     000F 01rr                      1-  507     	MOVR	r0x102E,W
     0010 2rrr                      1-  508     	LCALL	_keyRead
                                    1-  509     	BANKSEL	r0x102E
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1-  510     	MOVAR	r0x102E
     0013 01rr                      1-  511     	MOVR	r0x102E,W
     0014 0D03                      1-  512     	BTRSC	STATUS,2
     0015 3rrr                      1-  513     	LGOTO	_00119_DS_
                                    1-  514     	.line	98, "main.c"; 	if(workStep)
                                    1-  515     	BANKSEL	_workStep
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1-  516     	MOVR	_workStep,W
     0018 0D03                      1-  517     	BTRSC	STATUS,2
     0019 3rrr                      1-  518     	LGOTO	_00116_DS_
                                    1-  519     	.line	99, "main.c"; 	workStep = 0;
     001A 02rr                      1-  520     	CLRR	_workStep
     001B 3rrr                      1-  521     	LGOTO	_00119_DS_
     001C                           1-  522     _00116_DS_:
                                    1-  523     	.line	102, "main.c"; 	workStep = 1;
     001C 2101                      1-  524     	MOVIA	0x01
                                    1-  525     	BANKSEL	_workStep
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  526     	MOVAR	_workStep
                                    1-  527     	.line	103, "main.c"; 	workTime = 0;
                                    1-  528     	BANKSEL	_workTime
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 02rr                      1-  529     	CLRR	_workTime
     0021 02rr                      1-  530     	CLRR	(_workTime + 1)
                                    1-  531     	.line	104, "main.c"; 	rockStep = 1;
     0022 2101                      1-  532     	MOVIA	0x01
                                    1-  533     	BANKSEL	_rockStep
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1-  534     	MOVAR	_rockStep
                                    1-  535     	.line	105, "main.c"; 	msa_init();
     0025 2rrr                      1-  536     	LCALL	_msa_init
     0026                           1-  537     _00119_DS_:
                                    1-  538     	.line	108, "main.c"; 	chrgCtr();
     0026 2rrr                      1-  539     	LCALL	_chrgCtr
                                    1-  540     	.line	109, "main.c"; 	workCtr();
     0027 2rrr                      1-  541     	LCALL	_workCtr
                                    1-  542     	.line	110, "main.c"; 	getData();
     0028 2rrr                      1-  543     	LCALL	_getData
                                    1-  544     	.line	112, "main.c"; 	if(workStep == 0 && rockStep == 0 && keyCount== 0)
                                    1-  545     	BANKSEL	_workStep
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  546     	MOVR	_workStep,W
     002B 0903                      1-  547     	BTRSS	STATUS,2
     002C 3rrr                      1-  548     	LGOTO	_00127_DS_
                                    1-  549     	BANKSEL	_rockStep
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  550     	MOVR	_rockStep,W
     002F 0903                      1-  551     	BTRSS	STATUS,2
     0030 3rrr                      1-  552     	LGOTO	_00127_DS_
                                    1-  553     	BANKSEL	_keyCount
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1-  554     	MOVR	_keyCount,W
     0033 0903                      1-  555     	BTRSS	STATUS,2
     0034 3rrr                      1-  556     	LGOTO	_00127_DS_
                                    1-  557     	.line	114, "main.c"; 	if(++sleepTime > 1000)
                                    1-  558     	BANKSEL	_sleepTime
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 05rr                      1-  559     	INCR	_sleepTime,F
     0037 0D03                      1-  560     	BTRSC	STATUS,2
     0038 05rr                      1-  561     	INCR	(_sleepTime + 1),F
                                    1-  562     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  563     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     0039 2103                      1-  564     	MOVIA	0x03
     003A 04rr                      1-  565     	SUBAR	(_sleepTime + 1),W
     003B 0903                      1-  566     	BTRSS	STATUS,2
     003C 3rrr                      1-  567     	LGOTO	_00152_DS_
     003D 21E9                      1-  568     	MOVIA	0xe9
     003E 04rr                      1-  569     	SUBAR	_sleepTime,W
     003F                           1-  570     _00152_DS_:
     003F 0803                      1-  571     	BTRSS	STATUS,0
     0040 3rrr                      1-  572     	LGOTO	_00127_DS_
                                    1-  573     	.line	115, "main.c"; 	gotoSleep();
     0041 2rrr                      1-  574     	LCALL	_gotoSleep
     0042 3rrr                      1-  575     	LGOTO	_00127_DS_
                                    1-  576     	.line	119, "main.c"; 	}
                                    1-  577     	RETURN	
     0043 0010                      3-   26 m1      ret
                                    1-  578     ; exit point of _main
                                    1-  580     ;***
                                    1-  581     ;  pBlock Stats: dbName = C
                                    1-  582     ;***
                                    1-  583     ;has an exit
                                    1-  584     ;1 compiler assigned register :
                                    1-  585     ;   r0x1020
                                    1-  586     ;; Starting pCode block
                                    1-  587     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  589     _gotoSleep:
                                    1-  590     ; 2 exit points
                                    1-  591     	.line	325, "main.c"; 	COM1 = 1;
     0000 18rr                      1-  592     	BSR	_PORTA,1
                                    1-  593     	.line	326, "main.c"; 	COM2 = 1;
     0001 18rr                      1-  594     	BSR	_PORTA,0
                                    1-  595     	.line	327, "main.c"; 	COM3 = 1;
     0002 1Arr                      1-  596     	BSR	_PORTB,5
                                    1-  597     	.line	328, "main.c"; 	IOSTA |= 0x03;
     0003 001r                      1-  598     	IOSTR	_IOSTA
                                    1-  599     	BANKSEL	r0x1020
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  600     	MOVAR	r0x1020
     0006 2103                      1-  601     	MOVIA	0x03
     0007 11rr                      1-  602     	IORAR	r0x1020,F
     0008 01rr                      1-  603     	MOVR	r0x1020,W
     0009 000r                      1-  604     	IOST	_IOSTA
                                    1-  605     	.line	329, "main.c"; 	IOSTB |= 0x20;
     000A 001r                      1-  606     	IOSTR	_IOSTB
     000B 00rr                      1-  607     	MOVAR	r0x1020
     000C 1Arr                      1-  608     	BSR	r0x1020,5
     000D 01rr                      1-  609     	MOVR	r0x1020,W
     000E 000r                      1-  610     	IOST	_IOSTB
                                    1-  611     	.line	330, "main.c"; 	workStep = 0;
                                    1-  612     	BANKSEL	_workStep
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1-  613     	CLRR	_workStep
                                    1-  614     	.line	331, "main.c"; 	rockStep = 0;
                                    1-  615     	BANKSEL	_rockStep
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 02rr                      1-  616     	CLRR	_rockStep
                                    1-  617     	.line	332, "main.c"; 	AWUCON = 0x08;
     0013 2108                      1-  618     	MOVIA	0x08
     0014 00rr                      1-  619     	MOVAR	_AWUCON
                                    1-  620     	.line	333, "main.c"; 	BWUCON = 0x03;
     0015 2103                      1-  621     	MOVIA	0x03
     0016 00rr                      1-  622     	MOVAR	_BWUCON
                                    1-  623     	.line	334, "main.c"; 	sleepTime = 0;	
                                    1-  624     	BANKSEL	_sleepTime
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 02rr                      1-  625     	CLRR	_sleepTime
     0019 02rr                      1-  626     	CLRR	(_sleepTime + 1)
                                    1-  627     	.line	335, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     001A 2103                      1-  628     	MOVIA	0x03
     001B 00rr                      1-  629     	MOVAR	_INTE
                                    1-  630     	.line	336, "main.c"; 	PCON =  C_LVR_En;	
     001C 2108                      1-  631     	MOVIA	0x08
     001D 00rr                      1-  632     	MOVAR	_PCON
                                    1-  633     	.line	337, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001E 02rr                      1-  634     	CLRR	_INTF
                                    1-  635     	.line	338, "main.c"; 	CLRWDT();
     001F 0002                      1-  636     	clrwdt
                                    1-  637     	.line	339, "main.c"; 	ENI();
     0020 0004                      1-  638     	ENI
                                    1-  639     	.line	340, "main.c"; 	SLEEP();
     0021 0001                      1-  640     	sleep
                                    1-  641     	.line	341, "main.c"; 	AWUCON = 0x00;
     0022 02rr                      1-  642     	CLRR	_AWUCON
                                    1-  643     	.line	342, "main.c"; 	BWUCON = 0x00;
     0023 02rr                      1-  644     	CLRR	_BWUCON
                                    1-  645     	.line	343, "main.c"; 	IOSTA &= 0xFC;
     0024 001r                      1-  646     	IOSTR	_IOSTA
                                    1-  647     	BANKSEL	r0x1020
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 00rr                      1-  648     	MOVAR	r0x1020
     0027 21FC                      1-  649     	MOVIA	0xfc
     0028 10rr                      1-  650     	ANDAR	r0x1020,F
     0029 01rr                      1-  651     	MOVR	r0x1020,W
     002A 000r                      1-  652     	IOST	_IOSTA
                                    1-  653     	.line	344, "main.c"; 	IOSTB &= 0xDF;
     002B 001r                      1-  654     	IOSTR	_IOSTB
     002C 00rr                      1-  655     	MOVAR	r0x1020
     002D 1Err                      1-  656     	BCR	r0x1020,5
     002E 01rr                      1-  657     	MOVR	r0x1020,W
     002F 000r                      1-  658     	IOST	_IOSTB
                                    1-  659     	.line	345, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0��Timer1��WDT overflow interrupt
     0030 2103                      1-  660     	MOVIA	0x03
     0031 00rr                      1-  661     	MOVAR	_INTE
                                    1-  662     	.line	346, "main.c"; 	INTF = 0;
     0032 02rr                      1-  663     	CLRR	_INTF
                                    1-  664     	.line	351, "main.c"; 	}
                                    1-  665     	RETURN	
     0033 0010                      3-   26 m1      ret
                                    1-  666     ; exit point of _gotoSleep
                                    1-  668     ;***
                                    1-  669     ;  pBlock Stats: dbName = C
                                    1-  670     ;***
                                    1-  671     ;has an exit
                                    1-  672     ;1 compiler assigned register :
                                    1-  673     ;   r0x1021
                                    1-  674     ;; Starting pCode block
                                    1-  675     .segment "code"; module=main, function=_keyRead
                                    1-  677     ;local variable name mapping:
     0000                           1-  679     _keyRead:
                                    1-  680     ; 2 exit points
                                    1-  681     	.line	301, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  682     	BANKSEL	r0x1021
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  683     	MOVAR	r0x1021
                                    1-  684     	.line	303, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  685     	MOVR	r0x1021,W
     0003 0D03                      1-  686     	BTRSC	STATUS,2
     0004 3rrr                      1-  687     	LGOTO	_00446_DS_
                                    1-  688     	.line	305, "main.c"; 	keyCount++;
                                    1-  689     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  690     	INCR	_keyCount,F
                                    1-  691     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  692     	.line	306, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  693     	MOVIA	0xc8
     0008 04rr                      1-  694     	SUBAR	_keyCount,W
     0009 0803                      1-  695     	BTRSS	STATUS,0
     000A 3rrr                      1-  696     	LGOTO	_00447_DS_
                                    1-  697     	.line	308, "main.c"; 	keyCount = 200;
     000B 21C8                      1-  698     	MOVIA	0xc8
     000C 00rr                      1-  699     	MOVAR	_keyCount
     000D 3rrr                      1-  700     	LGOTO	_00447_DS_
                                    1-  701     ;;unsigned compare: left < lit (0x8=8), size=1
     000E                           1-  702     _00446_DS_:
                                    1-  703     	.line	313, "main.c"; 	if(keyCount >= 8)
     000E 2108                      1-  704     	MOVIA	0x08
                                    1-  705     	BANKSEL	_keyCount
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1-  706     	SUBAR	_keyCount,W
     0011 0803                      1-  707     	BTRSS	STATUS,0
     0012 3rrr                      1-  708     	LGOTO	_00444_DS_
                                    1-  709     	.line	315, "main.c"; 	keyCount = 0;
     0013 02rr                      1-  710     	CLRR	_keyCount
                                    1-  711     	.line	316, "main.c"; 	return	1;
     0014 2101                      1-  712     	MOVIA	0x01
     0015 3rrr                      1-  713     	LGOTO	_00448_DS_
     0016                           1-  714     _00444_DS_:
                                    1-  715     	.line	318, "main.c"; 	keyCount = 0;
                                    1-  716     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 02rr                      1-  717     	CLRR	_keyCount
     0018                           1-  718     _00447_DS_:
                                    1-  719     	.line	320, "main.c"; 	return 0;
     0018 2100                      1-  720     	MOVIA	0x00
     0019                           1-  721     _00448_DS_:
                                    1-  722     	.line	321, "main.c"; 	}
                                    1-  723     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1-  724     ; exit point of _keyRead
                                    1-  726     ;***
                                    1-  727     ;  pBlock Stats: dbName = C
                                    1-  728     ;***
                                    1-  729     ;has an exit
                                    1-  730     ;functions called:
                                    1-  731     ;   _delay_us
                                    1-  732     ;   _delay_us
                                    1-  733     ;4 compiler assigned registers:
                                    1-  734     ;   r0x1022
                                    1-  735     ;   r0x1023
                                    1-  736     ;   r0x1024
                                    1-  737     ;   r0x1025
                                    1-  738     ;; Starting pCode block
                                    1-  739     .segment "code"; module=main, function=_ind_light_disp
                                    1-  741     ;local variable name mapping:
     0000                           1-  745     _ind_light_disp:
                                    1-  746     ; 2 exit points
                                    1-  747     	.line	278, "main.c"; 	void ind_light_disp(uint8_t ind_num)//������һλ������1
                                    1-  748     	BANKSEL	r0x1022
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  749     	MOVAR	r0x1022
                                    1-  750     	.line	281, "main.c"; 	i = 0x80;
     0002 2180                      1-  751     	MOVIA	0x80
                                    1-  752     	BANKSEL	r0x1023
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  753     	MOVAR	r0x1023
                                    1-  754     	.line	282, "main.c"; 	for(j=0; j<8; j++)
                                    1-  755     	BANKSEL	r0x1024
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  756     	CLRR	r0x1024
     0007                           1-  757     _00436_DS_:
                                    1-  758     	.line	284, "main.c"; 	if((i&ind_num) == i)
                                    1-  759     	BANKSEL	r0x1022
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1-  760     	MOVR	r0x1022,W
                                    1-  761     	BANKSEL	r0x1023
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 10rr                      1-  762     	ANDAR	r0x1023,W
                                    1-  763     ;;1	MOVAR	r0x1025
     000B 12rr                      1-  764     	XORAR	r0x1023,W
     000C 0903                      1-  765     	BTRSS	STATUS,2
     000D 3rrr                      1-  766     	LGOTO	_00433_DS_
                                    1-  767     	.line	286, "main.c"; 	CLK = 0; //�˴��������CLK = 1��ϲ���һ��������
     000E 1Err                      1-  768     	BCR	_PORTA,4
                                    1-  769     	.line	287, "main.c"; 	SDO = 0;
     000F 1Drr                      1-  770     	BCR	_PORTA,2
                                    1-  771     	.line	288, "main.c"; 	CLK = 1;
     0010 1Arr                      1-  772     	BSR	_PORTA,4
     0011 3rrr                      1-  773     	LGOTO	_00434_DS_
     0012                           1-  774     _00433_DS_:
                                    1-  775     	.line	292, "main.c"; 	CLK = 0;
     0012 1Err                      1-  776     	BCR	_PORTA,4
                                    1-  777     	.line	293, "main.c"; 	SDO = 1;
     0013 19rr                      1-  778     	BSR	_PORTA,2
                                    1-  779     	.line	294, "main.c"; 	CLK = 1;
     0014 1Arr                      1-  780     	BSR	_PORTA,4
                                    1-  781     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=1, sign=0, same=1, offr=0
     0015                           1-  782     _00434_DS_:
                                    1-  783     	.line	296, "main.c"; 	i >>= 1;
     0015 1C03                      1-  784     	BCR	STATUS,0
                                    1-  785     	BANKSEL	r0x1023
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 13rr                      1-  786     	RRR	r0x1023,F
                                    1-  787     	.line	282, "main.c"; 	for(j=0; j<8; j++)
                                    1-  788     	BANKSEL	r0x1024
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 05rr                      1-  789     	INCR	r0x1024,F
                                    1-  790     ;;unsigned compare: left < lit (0x8=8), size=1
     001A 2108                      1-  791     	MOVIA	0x08
     001B 04rr                      1-  792     	SUBAR	r0x1024,W
     001C 0803                      1-  793     	BTRSS	STATUS,0
     001D 3rrr                      1-  794     	LGOTO	_00436_DS_
                                    1-  795     	.line	298, "main.c"; 	delay_us(100);
     001E 2164                      1-  796     	MOVIA	0x64
     001F 2rrr                      1-  797     	LCALL	_delay_us
                                    1-  798     	.line	299, "main.c"; 	}
                                    1-  799     	RETURN	
     0020 0010                      3-   26 m1      ret
                                    1-  800     ; exit point of _ind_light_disp
                                    1-  802     ;***
                                    1-  803     ;  pBlock Stats: dbName = C
                                    1-  804     ;***
                                    1-  805     ;has an exit
                                    1-  806     ;functions called:
                                    1-  807     ;   _msa_ReadBytes
                                    1-  808     ;   _msa_ReadBytes
                                    1-  809     ;   _msa_ReadBytes
                                    1-  810     ;   _msa_ReadBytes
                                    1-  811     ;7 compiler assigned registers:
                                    1-  812     ;   r0x1026
                                    1-  813     ;   r0x1027
                                    1-  814     ;   r0x1028
                                    1-  815     ;   STK02
                                    1-  816     ;   STK01
                                    1-  817     ;   STK00
                                    1-  818     ;   r0x1029
                                    1-  819     ;; Starting pCode block
                                    1-  820     .segment "code"; module=main, function=_getData
     0000                           1-  822     _getData:
                                    1-  823     ; 2 exit points
                                    1-  824     	.line	257, "main.c"; 	msa_ReadBytes(&hzL,MSA_REG_ACC_Z_LSB);
     0000 21rr                      1-  825     	MOVIA	((_hzL + 0) >> 8) & 0xff
                                    1-  826     	BANKSEL	r0x1026
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  827     	MOVAR	r0x1026
     0003 21rr                      1-  828     	MOVIA	(_hzL + 0)
                                    1-  829     	BANKSEL	r0x1027
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  830     	MOVAR	r0x1027
                                    1-  831     	BANKSEL	r0x1028
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  832     	CLRR	r0x1028
     0008 2106                      1-  833     	MOVIA	0x06
     0009 00rr                      1-  834     	MOVAR	STK02
                                    1-  835     	BANKSEL	r0x1027
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1-  836     	MOVR	r0x1027,W
     000C 00rr                      1-  837     	MOVAR	STK01
                                    1-  838     	BANKSEL	r0x1026
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  839     	MOVR	r0x1026,W
     000F 00rr                      1-  840     	MOVAR	STK00
     0010 2100                      1-  841     	MOVIA	0x00
     0011 2rrr                      1-  842     	LCALL	_msa_ReadBytes
                                    1-  843     	.line	258, "main.c"; 	msa_ReadBytes(&hzH,MSA_REG_ACC_Z_MSB);
     0012 21rr                      1-  844     	MOVIA	((_hzH + 0) >> 8) & 0xff
                                    1-  845     	BANKSEL	r0x1026
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1-  846     	MOVAR	r0x1026
     0015 21rr                      1-  847     	MOVIA	(_hzH + 0)
                                    1-  848     	BANKSEL	r0x1027
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1-  849     	MOVAR	r0x1027
                                    1-  850     	BANKSEL	r0x1028
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1-  851     	CLRR	r0x1028
     001A 2107                      1-  852     	MOVIA	0x07
     001B 00rr                      1-  853     	MOVAR	STK02
                                    1-  854     	BANKSEL	r0x1027
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1-  855     	MOVR	r0x1027,W
     001E 00rr                      1-  856     	MOVAR	STK01
                                    1-  857     	BANKSEL	r0x1026
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  858     	MOVR	r0x1026,W
     0021 00rr                      1-  859     	MOVAR	STK00
     0022 2100                      1-  860     	MOVIA	0x00
     0023 2rrr                      1-  861     	LCALL	_msa_ReadBytes
                                    1-  862     	.line	259, "main.c"; 	hz = ((short)(hzH << 8 | hzL))>> 4;
                                    1-  863     	BANKSEL	_hzH
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  864     	MOVR	_hzH,W
                                    1-  865     	BANKSEL	r0x1027
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1-  866     	MOVAR	r0x1027
                                    1-  867     	BANKSEL	r0x1026
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1-  868     	CLRR	r0x1026
                                    1-  869     	BANKSEL	r0x1027
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 0Brr                      1-  870     	BTRSS	r0x1027,7
     002C 3rrr                      1-  871     	LGOTO	_00001_DS_
                                    1-  872     	BANKSEL	r0x1026
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 06rr                      1-  873     	DECR	r0x1026,F
     002F                           1-  874     _00001_DS_:
                                    1-  875     	BANKSEL	r0x1027
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1-  876     	MOVR	r0x1027,W
                                    1-  877     	BANKSEL	r0x1029
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 00rr                      1-  878     	MOVAR	r0x1029
                                    1-  879     	BANKSEL	r0x1028
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1-  880     	CLRR	r0x1028
                                    1-  881     	BANKSEL	_hzL
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1-  882     	MOVR	_hzL,W
                                    1-  883     	BANKSEL	r0x1027
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1-  884     	MOVAR	r0x1027
                                    1-  885     	BANKSEL	r0x1026
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1-  886     	CLRR	r0x1026
                                    1-  887     	BANKSEL	r0x1027
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 0Brr                      1-  888     	BTRSS	r0x1027,7
     003D 3rrr                      1-  889     	LGOTO	_00002_DS_
                                    1-  890     	BANKSEL	r0x1026
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 06rr                      1-  891     	DECR	r0x1026,F
     0040                           1-  892     _00002_DS_:
                                    1-  893     	BANKSEL	r0x1027
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1-  894     	MOVR	r0x1027,W
                                    1-  895     	BANKSEL	r0x1028
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 11rr                      1-  896     	IORAR	r0x1028,F
                                    1-  897     	BANKSEL	r0x1026
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  898     	MOVR	r0x1026,W
                                    1-  899     	BANKSEL	r0x1029
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 11rr                      1-  900     	IORAR	r0x1029,F
                                    1-  901     	BANKSEL	r0x1028
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 15rr                      1-  902     	SWAPR	r0x1028,W
     004A 220F                      1-  903     	ANDIA	0x0f
                                    1-  904     	BANKSEL	_hz
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1-  905     	MOVAR	_hz
                                    1-  906     	BANKSEL	r0x1029
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 15rr                      1-  907     	SWAPR	r0x1029,W
                                    1-  908     	BANKSEL	_hz
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1-  909     	MOVAR	(_hz + 1)
     0051 22F0                      1-  910     	ANDIA	0xf0
     0052 11rr                      1-  911     	IORAR	_hz,F
     0053 12rr                      1-  912     	XORAR	(_hz + 1),F
     0054 21F0                      1-  913     	MOVIA	0xf0
     0055 0Drr                      1-  914     	BTRSC	(_hz + 1),3
     0056 11rr                      1-  915     	IORAR	(_hz + 1),F
                                    1-  916     	.line	260, "main.c"; 	hz &= 0x0FFF;
     0057 210F                      1-  917     	MOVIA	0x0f
     0058 10rr                      1-  918     	ANDAR	(_hz + 1),F
                                    1-  919     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  920     ;;unsigned compare: left >= lit (0x176=374), size=2
                                    1-  921     	.line	261, "main.c"; 	if(hz > 0x175 && hz < 0xE70)
     0059 2101                      1-  922     	MOVIA	0x01
     005A 04rr                      1-  923     	SUBAR	(_hz + 1),W
     005B 0903                      1-  924     	BTRSS	STATUS,2
     005C 3rrr                      1-  925     	LGOTO	_00426_DS_
     005D 2176                      1-  926     	MOVIA	0x76
     005E 04rr                      1-  927     	SUBAR	_hz,W
     005F                           1-  928     _00426_DS_:
     005F 0803                      1-  929     	BTRSS	STATUS,0
     0060 3rrr                      1-  930     	LGOTO	_00409_DS_
                                    1-  931     ;;unsigned compare: left < lit (0xE70=3696), size=2
     0061 210E                      1-  932     	MOVIA	0x0e
                                    1-  933     	BANKSEL	_hz
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 04rr                      1-  934     	SUBAR	(_hz + 1),W
     0064 0903                      1-  935     	BTRSS	STATUS,2
     0065 3rrr                      1-  936     	LGOTO	_00427_DS_
     0066 2170                      1-  937     	MOVIA	0x70
     0067 04rr                      1-  938     	SUBAR	_hz,W
     0068                           1-  939     _00427_DS_:
     0068 0C03                      1-  940     	BTRSC	STATUS,0
     0069 3rrr                      1-  941     	LGOTO	_00409_DS_
                                    1-  942     	.line	263, "main.c"; 	if(rockStep == 0 && workStep == 1)
                                    1-  943     	BANKSEL	_rockStep
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 01rr                      1-  944     	MOVR	_rockStep,W
     006C 0903                      1-  945     	BTRSS	STATUS,2
     006D 3rrr                      1-  946     	LGOTO	_00406_DS_
                                    1-  947     	BANKSEL	_workStep
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 01rr                      1-  948     	MOVR	_workStep,W
     0070 2401                      1-  949     	XORIA	0x01
     0071 0903                      1-  950     	BTRSS	STATUS,2
     0072 3rrr                      1-  951     	LGOTO	_00406_DS_
                                    1-  952     	.line	265, "main.c"; 	rockStep = 2;
     0073 2102                      1-  953     	MOVIA	0x02
                                    1-  954     	BANKSEL	_rockStep
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 00rr                      1-  955     	MOVAR	_rockStep
                                    1-  956     	.line	266, "main.c"; 	workTime = 0;
                                    1-  957     	BANKSEL	_workTime
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 02rr                      1-  958     	CLRR	_workTime
     0078 02rr                      1-  959     	CLRR	(_workTime + 1)
     0079                           1-  960     _00406_DS_:
                                    1-  961     	.line	269, "main.c"; 	return 1;
     0079 2101                      1-  962     	MOVIA	0x01
     007A 3rrr                      1-  963     	LGOTO	_00412_DS_
     007B                           1-  964     _00409_DS_:
                                    1-  965     	.line	273, "main.c"; 	return 0;
     007B 2100                      1-  966     	MOVIA	0x00
     007C                           1-  967     _00412_DS_:
                                    1-  968     	.line	275, "main.c"; 	}
                                    1-  969     	RETURN	
     007C 0010                      3-   26 m1      ret
                                    1-  970     ; exit point of _getData
                                    1-  972     ;***
                                    1-  973     ;  pBlock Stats: dbName = C
                                    1-  974     ;***
                                    1-  975     ;has an exit
                                    1-  976     ;functions called:
                                    1-  977     ;   _ind_light_disp
                                    1-  978     ;   _ind_light_disp
                                    1-  979     ;   _ind_light_disp
                                    1-  980     ;   _ind_light_disp
                                    1-  981     ;1 compiler assigned register :
                                    1-  982     ;   r0x102A
                                    1-  983     ;; Starting pCode block
                                    1-  984     .segment "code"; module=main, function=_chrgCtr
     0000                           1-  986     _chrgCtr:
                                    1-  987     ; 2 exit points
                                    1-  988     	.line	231, "main.c"; 	if(PORTB & 0x02)
     0000 08rr                      1-  989     	BTRSS	_PORTB,1
     0001 3rrr                      1-  990     	LGOTO	_00398_DS_
                                    1-  991     	.line	234, "main.c"; 	workStep = 0;	//����в���ʹ��
                                    1-  992     	BANKSEL	_workStep
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  993     	CLRR	_workStep
                                    1-  994     	.line	235, "main.c"; 	COM1 = COM2 = COM3 = 1;
     0004 1Arr                      1-  995     	BSR	_PORTB,5
     0005 0Arr                      1-  996     	BTRSS	_PORTB,5
     0006 1Crr                      1-  997     	BCR	_PORTA,0
     0007 0Err                      1-  998     	BTRSC	_PORTB,5
     0008 18rr                      1-  999     	BSR	_PORTA,0
     0009 08rr                      1- 1000     	BTRSS	_PORTA,0
     000A 1Crr                      1- 1001     	BCR	_PORTA,1
     000B 0Crr                      1- 1002     	BTRSC	_PORTA,0
     000C 18rr                      1- 1003     	BSR	_PORTA,1
                                    1- 1004     	.line	236, "main.c"; 	if(PORTB & 0x01)
     000D 08rr                      1- 1005     	BTRSS	_PORTB,0
     000E 3rrr                      1- 1006     	LGOTO	_00395_DS_
                                    1- 1007     	.line	239, "main.c"; 	chrgStep = 2;
     000F 2102                      1- 1008     	MOVIA	0x02
                                    1- 1009     	BANKSEL	_chrgStep
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1010     	MOVAR	_chrgStep
                                    1- 1011     	.line	240, "main.c"; 	ind_light_disp(table[10]);
                                    1- 1012     	BANKSEL	_table
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1013     	MOVR	(_table + 10),W
                                    1- 1014     	BANKSEL	r0x102A
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1015     	MOVAR	r0x102A
     0016 2rrr                      1- 1016     	LCALL	_ind_light_disp
     0017 3rrr                      1- 1017     	LGOTO	_00400_DS_
     0018                           1- 1018     _00395_DS_:
                                    1- 1019     	.line	244, "main.c"; 	chrgStep = 1;
     0018 2101                      1- 1020     	MOVIA	0x01
                                    1- 1021     	BANKSEL	_chrgStep
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 1022     	MOVAR	_chrgStep
                                    1- 1023     	.line	245, "main.c"; 	ind_light_disp(table[11]);
                                    1- 1024     	BANKSEL	_table
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 1025     	MOVR	(_table + 11),W
                                    1- 1026     	BANKSEL	r0x102A
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1027     	MOVAR	r0x102A
     001F 2rrr                      1- 1028     	LCALL	_ind_light_disp
     0020 3rrr                      1- 1029     	LGOTO	_00400_DS_
     0021                           1- 1030     _00398_DS_:
                                    1- 1031     	.line	250, "main.c"; 	chrgStep = 0;
                                    1- 1032     	BANKSEL	_chrgStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 02rr                      1- 1033     	CLRR	_chrgStep
     0023                           1- 1034     _00400_DS_:
                                    1- 1035     	.line	252, "main.c"; 	}
                                    1- 1036     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1- 1037     ; exit point of _chrgCtr
                                    1- 1039     ;***
                                    1- 1040     ;  pBlock Stats: dbName = C
                                    1- 1041     ;***
                                    1- 1042     ;has an exit
                                    1- 1043     ;functions called:
                                    1- 1044     ;   _delay_us
                                    1- 1045     ;   __gptrget1
                                    1- 1046     ;   _ind_light_disp
                                    1- 1047     ;   _delay_us
                                    1- 1048     ;   __gptrget1
                                    1- 1049     ;   _ind_light_disp
                                    1- 1050     ;   _delay_us
                                    1- 1051     ;   __gptrget1
                                    1- 1052     ;   _ind_light_disp
                                    1- 1053     ;   _delay_us
                                    1- 1054     ;   _delay_us
                                    1- 1055     ;   __gptrget1
                                    1- 1056     ;   _ind_light_disp
                                    1- 1057     ;   _delay_us
                                    1- 1058     ;   __gptrget1
                                    1- 1059     ;   _ind_light_disp
                                    1- 1060     ;   _delay_us
                                    1- 1061     ;   __gptrget1
                                    1- 1062     ;   _ind_light_disp
                                    1- 1063     ;   _delay_us
                                    1- 1064     ;5 compiler assigned registers:
                                    1- 1065     ;   r0x102B
                                    1- 1066     ;   r0x102C
                                    1- 1067     ;   STK01
                                    1- 1068     ;   STK00
                                    1- 1069     ;   r0x102D
                                    1- 1070     ;; Starting pCode block
                                    1- 1071     .segment "code"; module=main, function=_refreshLed
     0000                           1- 1073     _refreshLed:
                                    1- 1074     ; 2 exit points
                                    1- 1075     	.line	207, "main.c"; 	COM1 = 1;
     0000 18rr                      1- 1076     	BSR	_PORTA,1
                                    1- 1077     	.line	208, "main.c"; 	COM2 = 1;
     0001 18rr                      1- 1078     	BSR	_PORTA,0
                                    1- 1079     	.line	209, "main.c"; 	COM3 = 1;
     0002 1Arr                      1- 1080     	BSR	_PORTB,5
                                    1- 1081     	.line	210, "main.c"; 	delay_us(100);
     0003 2164                      1- 1082     	MOVIA	0x64
     0004 2rrr                      1- 1083     	LCALL	_delay_us
                                    1- 1084     	.line	211, "main.c"; 	ind_light_disp(table[baiwei]);
                                    1- 1085     	BANKSEL	_baiwei
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1086     	MOVR	_baiwei,W
     0007 25rr                      1- 1087     	ADDIA	(_table + 0)
                                    1- 1088     	BANKSEL	r0x102B
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 1089     	MOVAR	r0x102B
     000A 21rr                      1- 1090     	MOVIA	((_table + 0) >> 8) & 0xff
     000B 0C03                      1- 1091     	BTRSC	STATUS,0
     000C 2501                      1- 1092     	ADDIA	0x01
                                    1- 1093     	BANKSEL	r0x102C
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1094     	MOVAR	r0x102C
                                    1- 1095     	BANKSEL	r0x102B
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1096     	MOVR	r0x102B,W
     0011 00rr                      1- 1097     	MOVAR	STK01
                                    1- 1098     	BANKSEL	r0x102C
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1099     	MOVR	r0x102C,W
     0014 00rr                      1- 1100     	MOVAR	STK00
     0015 2100                      1- 1101     	MOVIA	0x00
     0016 2rrr                      1- 1102     	LCALL	__gptrget1
                                    1- 1103     	BANKSEL	r0x102D
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1104     	MOVAR	r0x102D
     0019 2rrr                      1- 1105     	LCALL	_ind_light_disp
                                    1- 1106     	.line	212, "main.c"; 	COM1 = 0;
     001A 1Crr                      1- 1107     	BCR	_PORTA,1
                                    1- 1108     	.line	213, "main.c"; 	COM2 = 1;
     001B 18rr                      1- 1109     	BSR	_PORTA,0
                                    1- 1110     	.line	214, "main.c"; 	COM3 = 1;
     001C 1Arr                      1- 1111     	BSR	_PORTB,5
                                    1- 1112     	.line	215, "main.c"; 	delay_us(100);
     001D 2164                      1- 1113     	MOVIA	0x64
     001E 2rrr                      1- 1114     	LCALL	_delay_us
                                    1- 1115     	.line	216, "main.c"; 	ind_light_disp(table[shiwei]);
                                    1- 1116     	BANKSEL	_shiwei
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 1117     	MOVR	_shiwei,W
     0021 25rr                      1- 1118     	ADDIA	(_table + 0)
                                    1- 1119     	BANKSEL	r0x102B
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 00rr                      1- 1120     	MOVAR	r0x102B
     0024 21rr                      1- 1121     	MOVIA	((_table + 0) >> 8) & 0xff
     0025 0C03                      1- 1122     	BTRSC	STATUS,0
     0026 2501                      1- 1123     	ADDIA	0x01
                                    1- 1124     	BANKSEL	r0x102C
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1- 1125     	MOVAR	r0x102C
                                    1- 1126     	BANKSEL	r0x102B
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 1127     	MOVR	r0x102B,W
     002B 00rr                      1- 1128     	MOVAR	STK01
                                    1- 1129     	BANKSEL	r0x102C
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1- 1130     	MOVR	r0x102C,W
     002E 00rr                      1- 1131     	MOVAR	STK00
     002F 2100                      1- 1132     	MOVIA	0x00
     0030 2rrr                      1- 1133     	LCALL	__gptrget1
                                    1- 1134     	BANKSEL	r0x102D
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 00rr                      1- 1135     	MOVAR	r0x102D
     0033 2rrr                      1- 1136     	LCALL	_ind_light_disp
                                    1- 1137     	.line	217, "main.c"; 	COM1 = 1;
     0034 18rr                      1- 1138     	BSR	_PORTA,1
                                    1- 1139     	.line	218, "main.c"; 	COM2 = 0;
     0035 1Crr                      1- 1140     	BCR	_PORTA,0
                                    1- 1141     	.line	219, "main.c"; 	COM3 = 1;
     0036 1Arr                      1- 1142     	BSR	_PORTB,5
                                    1- 1143     	.line	220, "main.c"; 	delay_us(100);
     0037 2164                      1- 1144     	MOVIA	0x64
     0038 2rrr                      1- 1145     	LCALL	_delay_us
                                    1- 1146     	.line	221, "main.c"; 	ind_light_disp(table[gewei]);
                                    1- 1147     	BANKSEL	_gewei
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 1148     	MOVR	_gewei,W
     003B 25rr                      1- 1149     	ADDIA	(_table + 0)
                                    1- 1150     	BANKSEL	r0x102B
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 00rr                      1- 1151     	MOVAR	r0x102B
     003E 21rr                      1- 1152     	MOVIA	((_table + 0) >> 8) & 0xff
     003F 0C03                      1- 1153     	BTRSC	STATUS,0
     0040 2501                      1- 1154     	ADDIA	0x01
                                    1- 1155     	BANKSEL	r0x102C
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 00rr                      1- 1156     	MOVAR	r0x102C
                                    1- 1157     	BANKSEL	r0x102B
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 01rr                      1- 1158     	MOVR	r0x102B,W
     0045 00rr                      1- 1159     	MOVAR	STK01
                                    1- 1160     	BANKSEL	r0x102C
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1- 1161     	MOVR	r0x102C,W
     0048 00rr                      1- 1162     	MOVAR	STK00
     0049 2100                      1- 1163     	MOVIA	0x00
     004A 2rrr                      1- 1164     	LCALL	__gptrget1
                                    1- 1165     	BANKSEL	r0x102D
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1- 1166     	MOVAR	r0x102D
     004D 2rrr                      1- 1167     	LCALL	_ind_light_disp
                                    1- 1168     	.line	222, "main.c"; 	COM1 = 1;
     004E 18rr                      1- 1169     	BSR	_PORTA,1
                                    1- 1170     	.line	223, "main.c"; 	COM2 = 1;
     004F 18rr                      1- 1171     	BSR	_PORTA,0
                                    1- 1172     	.line	224, "main.c"; 	COM3 = 0;
     0050 1Err                      1- 1173     	BCR	_PORTB,5
                                    1- 1174     	.line	225, "main.c"; 	delay_us(100);
     0051 2164                      1- 1175     	MOVIA	0x64
     0052 2rrr                      1- 1176     	LCALL	_delay_us
                                    1- 1177     	.line	226, "main.c"; 	}
                                    1- 1178     	RETURN	
     0053 0010                      3-   26 m1      ret
                                    1- 1179     ; exit point of _refreshLed
                                    1- 1181     ;***
                                    1- 1182     ;  pBlock Stats: dbName = C
                                    1- 1183     ;***
                                    1- 1184     ;has an exit
                                    1- 1185     ;; Starting pCode block
                                    1- 1186     .segment "code"; module=main, function=_workCtr
     0000                           1- 1188     _workCtr:
                                    1- 1189     ; 2 exit points
                                    1- 1190     	.line	123, "main.c"; 	if(rockStep == 1)
                                    1- 1191     	BANKSEL	_rockStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1192     	MOVR	_rockStep,W
     0002 2401                      1- 1193     	XORIA	0x01
     0003 0903                      1- 1194     	BTRSS	STATUS,2
     0004 3rrr                      1- 1195     	LGOTO	_00252_DS_
                                    1- 1196     	.line	125, "main.c"; 	++workTime;
                                    1- 1197     	BANKSEL	_workTime
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1198     	INCR	_workTime,F
     0007 0D03                      1- 1199     	BTRSC	STATUS,2
     0008 05rr                      1- 1200     	INCR	(_workTime + 1),F
                                    1- 1201     ;;unsigned compare: left < lit (0x18=24), size=2
                                    1- 1202     	.line	126, "main.c"; 	if(workTime < 24)
     0009 2100                      1- 1203     	MOVIA	0x00
     000A 04rr                      1- 1204     	SUBAR	(_workTime + 1),W
     000B 0903                      1- 1205     	BTRSS	STATUS,2
     000C 3rrr                      1- 1206     	LGOTO	_00355_DS_
     000D 2118                      1- 1207     	MOVIA	0x18
     000E 04rr                      1- 1208     	SUBAR	_workTime,W
     000F                           1- 1209     _00355_DS_:
     000F 0C03                      1- 1210     	BTRSC	STATUS,0
     0010 3rrr                      1- 1211     	LGOTO	_00176_DS_
                                    1- 1212     	.line	127, "main.c"; 	MOTOR = 1;
     0011 19rr                      1- 1213     	BSR	_PORTB,2
     0012 3rrr                      1- 1214     	LGOTO	_00254_DS_
                                    1- 1215     ;;unsigned compare: left < lit (0x2D=45), size=2
     0013                           1- 1216     _00176_DS_:
                                    1- 1217     	.line	128, "main.c"; 	else if(workTime < 45)
     0013 2100                      1- 1218     	MOVIA	0x00
                                    1- 1219     	BANKSEL	_workTime
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1220     	SUBAR	(_workTime + 1),W
     0016 0903                      1- 1221     	BTRSS	STATUS,2
     0017 3rrr                      1- 1222     	LGOTO	_00356_DS_
     0018 212D                      1- 1223     	MOVIA	0x2d
     0019 04rr                      1- 1224     	SUBAR	_workTime,W
     001A                           1- 1225     _00356_DS_:
     001A 0C03                      1- 1226     	BTRSC	STATUS,0
     001B 3rrr                      1- 1227     	LGOTO	_00173_DS_
                                    1- 1228     	.line	129, "main.c"; 	MOTOR = 0;
     001C 1Drr                      1- 1229     	BCR	_PORTB,2
     001D 3rrr                      1- 1230     	LGOTO	_00254_DS_
                                    1- 1231     ;;unsigned compare: left < lit (0x44=68), size=2
     001E                           1- 1232     _00173_DS_:
                                    1- 1233     	.line	130, "main.c"; 	else if(workTime < 68)
     001E 2100                      1- 1234     	MOVIA	0x00
                                    1- 1235     	BANKSEL	_workTime
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1- 1236     	SUBAR	(_workTime + 1),W
     0021 0903                      1- 1237     	BTRSS	STATUS,2
     0022 3rrr                      1- 1238     	LGOTO	_00357_DS_
     0023 2144                      1- 1239     	MOVIA	0x44
     0024 04rr                      1- 1240     	SUBAR	_workTime,W
     0025                           1- 1241     _00357_DS_:
     0025 0C03                      1- 1242     	BTRSC	STATUS,0
     0026 3rrr                      1- 1243     	LGOTO	_00170_DS_
                                    1- 1244     	.line	131, "main.c"; 	MOTOR = 1;
     0027 19rr                      1- 1245     	BSR	_PORTB,2
     0028 3rrr                      1- 1246     	LGOTO	_00254_DS_
                                    1- 1247     ;;unsigned compare: left < lit (0x59=89), size=2
     0029                           1- 1248     _00170_DS_:
                                    1- 1249     	.line	132, "main.c"; 	else if(workTime < 89)
     0029 2100                      1- 1250     	MOVIA	0x00
                                    1- 1251     	BANKSEL	_workTime
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 04rr                      1- 1252     	SUBAR	(_workTime + 1),W
     002C 0903                      1- 1253     	BTRSS	STATUS,2
     002D 3rrr                      1- 1254     	LGOTO	_00358_DS_
     002E 2159                      1- 1255     	MOVIA	0x59
     002F 04rr                      1- 1256     	SUBAR	_workTime,W
     0030                           1- 1257     _00358_DS_:
     0030 0C03                      1- 1258     	BTRSC	STATUS,0
     0031 3rrr                      1- 1259     	LGOTO	_00167_DS_
                                    1- 1260     	.line	133, "main.c"; 	MOTOR = 0;
     0032 1Drr                      1- 1261     	BCR	_PORTB,2
     0033 3rrr                      1- 1262     	LGOTO	_00254_DS_
                                    1- 1263     ;;unsigned compare: left < lit (0x6F=111), size=2
     0034                           1- 1264     _00167_DS_:
                                    1- 1265     	.line	134, "main.c"; 	else if(workTime < 111)
     0034 2100                      1- 1266     	MOVIA	0x00
                                    1- 1267     	BANKSEL	_workTime
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 04rr                      1- 1268     	SUBAR	(_workTime + 1),W
     0037 0903                      1- 1269     	BTRSS	STATUS,2
     0038 3rrr                      1- 1270     	LGOTO	_00359_DS_
     0039 216F                      1- 1271     	MOVIA	0x6f
     003A 04rr                      1- 1272     	SUBAR	_workTime,W
     003B                           1- 1273     _00359_DS_:
     003B 0C03                      1- 1274     	BTRSC	STATUS,0
     003C 3rrr                      1- 1275     	LGOTO	_00164_DS_
                                    1- 1276     	.line	135, "main.c"; 	MOTOR = 1;
     003D 19rr                      1- 1277     	BSR	_PORTB,2
     003E 3rrr                      1- 1278     	LGOTO	_00254_DS_
                                    1- 1279     ;;unsigned compare: left < lit (0x8E=142), size=2
     003F                           1- 1280     _00164_DS_:
                                    1- 1281     	.line	136, "main.c"; 	else if(workTime < 142)
     003F 2100                      1- 1282     	MOVIA	0x00
                                    1- 1283     	BANKSEL	_workTime
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 04rr                      1- 1284     	SUBAR	(_workTime + 1),W
     0042 0903                      1- 1285     	BTRSS	STATUS,2
     0043 3rrr                      1- 1286     	LGOTO	_00360_DS_
     0044 218E                      1- 1287     	MOVIA	0x8e
     0045 04rr                      1- 1288     	SUBAR	_workTime,W
     0046                           1- 1289     _00360_DS_:
     0046 0C03                      1- 1290     	BTRSC	STATUS,0
     0047 3rrr                      1- 1291     	LGOTO	_00161_DS_
                                    1- 1292     	.line	137, "main.c"; 	MOTOR = 0;
     0048 1Drr                      1- 1293     	BCR	_PORTB,2
     0049 3rrr                      1- 1294     	LGOTO	_00254_DS_
                                    1- 1295     ;;unsigned compare: left < lit (0xAE=174), size=2
     004A                           1- 1296     _00161_DS_:
                                    1- 1297     	.line	138, "main.c"; 	else if(workTime < 174)
     004A 2100                      1- 1298     	MOVIA	0x00
                                    1- 1299     	BANKSEL	_workTime
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 04rr                      1- 1300     	SUBAR	(_workTime + 1),W
     004D 0903                      1- 1301     	BTRSS	STATUS,2
     004E 3rrr                      1- 1302     	LGOTO	_00361_DS_
     004F 21AE                      1- 1303     	MOVIA	0xae
     0050 04rr                      1- 1304     	SUBAR	_workTime,W
     0051                           1- 1305     _00361_DS_:
     0051 0C03                      1- 1306     	BTRSC	STATUS,0
     0052 3rrr                      1- 1307     	LGOTO	_00158_DS_
                                    1- 1308     	.line	139, "main.c"; 	MOTOR = 1;
     0053 19rr                      1- 1309     	BSR	_PORTB,2
     0054 3rrr                      1- 1310     	LGOTO	_00254_DS_
     0055                           1- 1311     _00158_DS_:
                                    1- 1312     	.line	142, "main.c"; 	MOTOR = 0;
     0055 1Drr                      1- 1313     	BCR	_PORTB,2
                                    1- 1314     	.line	143, "main.c"; 	rockStep = 0;
                                    1- 1315     	BANKSEL	_rockStep
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 02rr                      1- 1316     	CLRR	_rockStep
     0058 3rrr                      1- 1317     	LGOTO	_00254_DS_
     0059                           1- 1318     _00252_DS_:
                                    1- 1319     	.line	146, "main.c"; 	else if(rockStep == 2)
                                    1- 1320     	BANKSEL	_rockStep
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 01rr                      1- 1321     	MOVR	_rockStep,W
     005B 2402                      1- 1322     	XORIA	0x02
     005C 0903                      1- 1323     	BTRSS	STATUS,2
     005D 3rrr                      1- 1324     	LGOTO	_00254_DS_
                                    1- 1325     	.line	148, "main.c"; 	++workTime;
                                    1- 1326     	BANKSEL	_workTime
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 05rr                      1- 1327     	INCR	_workTime,F
     0060 0D03                      1- 1328     	BTRSC	STATUS,2
     0061 05rr                      1- 1329     	INCR	(_workTime + 1),F
                                    1- 1330     ;;unsigned compare: left < lit (0x4F=79), size=2
                                    1- 1331     	.line	149, "main.c"; 	if(workTime < 79)
     0062 2100                      1- 1332     	MOVIA	0x00
     0063 04rr                      1- 1333     	SUBAR	(_workTime + 1),W
     0064 0903                      1- 1334     	BTRSS	STATUS,2
     0065 3rrr                      1- 1335     	LGOTO	_00362_DS_
     0066 214F                      1- 1336     	MOVIA	0x4f
     0067 04rr                      1- 1337     	SUBAR	_workTime,W
     0068                           1- 1338     _00362_DS_:
     0068 0C03                      1- 1339     	BTRSC	STATUS,0
     0069 3rrr                      1- 1340     	LGOTO	_00179_DS_
                                    1- 1341     	.line	150, "main.c"; 	MOTOR = 0;
     006A 1Drr                      1- 1342     	BCR	_PORTB,2
                                    1- 1343     ;;unsigned compare: left < lit (0x5A=90), size=2
     006B                           1- 1344     _00179_DS_:
                                    1- 1345     	.line	151, "main.c"; 	if(workTime < 90)
     006B 2100                      1- 1346     	MOVIA	0x00
                                    1- 1347     	BANKSEL	_workTime
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 04rr                      1- 1348     	SUBAR	(_workTime + 1),W
     006E 0903                      1- 1349     	BTRSS	STATUS,2
     006F 3rrr                      1- 1350     	LGOTO	_00363_DS_
     0070 215A                      1- 1351     	MOVIA	0x5a
     0071 04rr                      1- 1352     	SUBAR	_workTime,W
     0072                           1- 1353     _00363_DS_:
     0072 0C03                      1- 1354     	BTRSC	STATUS,0
     0073 3rrr                      1- 1355     	LGOTO	_00247_DS_
                                    1- 1356     	.line	152, "main.c"; 	MOTOR = 1;
     0074 19rr                      1- 1357     	BSR	_PORTB,2
     0075 3rrr                      1- 1358     	LGOTO	_00254_DS_
                                    1- 1359     ;;unsigned compare: left < lit (0x5F=95), size=2
     0076                           1- 1360     _00247_DS_:
                                    1- 1361     	.line	153, "main.c"; 	else if(workTime < 95)
     0076 2100                      1- 1362     	MOVIA	0x00
                                    1- 1363     	BANKSEL	_workTime
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 04rr                      1- 1364     	SUBAR	(_workTime + 1),W
     0079 0903                      1- 1365     	BTRSS	STATUS,2
     007A 3rrr                      1- 1366     	LGOTO	_00364_DS_
     007B 215F                      1- 1367     	MOVIA	0x5f
     007C 04rr                      1- 1368     	SUBAR	_workTime,W
     007D                           1- 1369     _00364_DS_:
     007D 0C03                      1- 1370     	BTRSC	STATUS,0
     007E 3rrr                      1- 1371     	LGOTO	_00244_DS_
                                    1- 1372     	.line	154, "main.c"; 	MOTOR = 0;
     007F 1Drr                      1- 1373     	BCR	_PORTB,2
     0080 3rrr                      1- 1374     	LGOTO	_00254_DS_
                                    1- 1375     ;;unsigned compare: left < lit (0x70=112), size=2
     0081                           1- 1376     _00244_DS_:
                                    1- 1377     	.line	155, "main.c"; 	else if(workTime < 112)
     0081 2100                      1- 1378     	MOVIA	0x00
                                    1- 1379     	BANKSEL	_workTime
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 04rr                      1- 1380     	SUBAR	(_workTime + 1),W
     0084 0903                      1- 1381     	BTRSS	STATUS,2
     0085 3rrr                      1- 1382     	LGOTO	_00365_DS_
     0086 2170                      1- 1383     	MOVIA	0x70
     0087 04rr                      1- 1384     	SUBAR	_workTime,W
     0088                           1- 1385     _00365_DS_:
     0088 0C03                      1- 1386     	BTRSC	STATUS,0
     0089 3rrr                      1- 1387     	LGOTO	_00241_DS_
                                    1- 1388     	.line	156, "main.c"; 	MOTOR = 1;
     008A 19rr                      1- 1389     	BSR	_PORTB,2
     008B 3rrr                      1- 1390     	LGOTO	_00254_DS_
                                    1- 1391     ;;unsigned compare: left < lit (0x73=115), size=2
     008C                           1- 1392     _00241_DS_:
                                    1- 1393     	.line	157, "main.c"; 	else if(workTime < 115)
     008C 2100                      1- 1394     	MOVIA	0x00
                                    1- 1395     	BANKSEL	_workTime
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 04rr                      1- 1396     	SUBAR	(_workTime + 1),W
     008F 0903                      1- 1397     	BTRSS	STATUS,2
     0090 3rrr                      1- 1398     	LGOTO	_00366_DS_
     0091 2173                      1- 1399     	MOVIA	0x73
     0092 04rr                      1- 1400     	SUBAR	_workTime,W
     0093                           1- 1401     _00366_DS_:
     0093 0C03                      1- 1402     	BTRSC	STATUS,0
     0094 3rrr                      1- 1403     	LGOTO	_00238_DS_
                                    1- 1404     	.line	158, "main.c"; 	MOTOR = 0;
     0095 1Drr                      1- 1405     	BCR	_PORTB,2
     0096 3rrr                      1- 1406     	LGOTO	_00254_DS_
                                    1- 1407     ;;unsigned compare: left < lit (0x81=129), size=2
     0097                           1- 1408     _00238_DS_:
                                    1- 1409     	.line	159, "main.c"; 	else if(workTime < 129)
     0097 2100                      1- 1410     	MOVIA	0x00
                                    1- 1411     	BANKSEL	_workTime
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 04rr                      1- 1412     	SUBAR	(_workTime + 1),W
     009A 0903                      1- 1413     	BTRSS	STATUS,2
     009B 3rrr                      1- 1414     	LGOTO	_00367_DS_
     009C 2181                      1- 1415     	MOVIA	0x81
     009D 04rr                      1- 1416     	SUBAR	_workTime,W
     009E                           1- 1417     _00367_DS_:
     009E 0C03                      1- 1418     	BTRSC	STATUS,0
     009F 3rrr                      1- 1419     	LGOTO	_00235_DS_
                                    1- 1420     	.line	160, "main.c"; 	MOTOR = 1;
     00A0 19rr                      1- 1421     	BSR	_PORTB,2
     00A1 3rrr                      1- 1422     	LGOTO	_00254_DS_
                                    1- 1423     ;;unsigned compare: left < lit (0xA4=164), size=2
     00A2                           1- 1424     _00235_DS_:
                                    1- 1425     	.line	161, "main.c"; 	else if(workTime < 164)
     00A2 2100                      1- 1426     	MOVIA	0x00
                                    1- 1427     	BANKSEL	_workTime
     00A3 rrrr                      3-   71 m1      .banksel ram_address
     00A4 04rr                      1- 1428     	SUBAR	(_workTime + 1),W
     00A5 0903                      1- 1429     	BTRSS	STATUS,2
     00A6 3rrr                      1- 1430     	LGOTO	_00368_DS_
     00A7 21A4                      1- 1431     	MOVIA	0xa4
     00A8 04rr                      1- 1432     	SUBAR	_workTime,W
     00A9                           1- 1433     _00368_DS_:
     00A9 0C03                      1- 1434     	BTRSC	STATUS,0
     00AA 3rrr                      1- 1435     	LGOTO	_00232_DS_
                                    1- 1436     	.line	162, "main.c"; 	MOTOR = 0;
     00AB 1Drr                      1- 1437     	BCR	_PORTB,2
     00AC 3rrr                      1- 1438     	LGOTO	_00254_DS_
                                    1- 1439     ;;unsigned compare: left < lit (0xAF=175), size=2
     00AD                           1- 1440     _00232_DS_:
                                    1- 1441     	.line	163, "main.c"; 	else if(workTime < 175)
     00AD 2100                      1- 1442     	MOVIA	0x00
                                    1- 1443     	BANKSEL	_workTime
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 04rr                      1- 1444     	SUBAR	(_workTime + 1),W
     00B0 0903                      1- 1445     	BTRSS	STATUS,2
     00B1 3rrr                      1- 1446     	LGOTO	_00369_DS_
     00B2 21AF                      1- 1447     	MOVIA	0xaf
     00B3 04rr                      1- 1448     	SUBAR	_workTime,W
     00B4                           1- 1449     _00369_DS_:
     00B4 0C03                      1- 1450     	BTRSC	STATUS,0
     00B5 3rrr                      1- 1451     	LGOTO	_00229_DS_
                                    1- 1452     	.line	164, "main.c"; 	MOTOR = 1;
     00B6 19rr                      1- 1453     	BSR	_PORTB,2
     00B7 3rrr                      1- 1454     	LGOTO	_00254_DS_
                                    1- 1455     ;;unsigned compare: left < lit (0xB4=180), size=2
     00B8                           1- 1456     _00229_DS_:
                                    1- 1457     	.line	165, "main.c"; 	else if(workTime < 180)
     00B8 2100                      1- 1458     	MOVIA	0x00
                                    1- 1459     	BANKSEL	_workTime
     00B9 rrrr                      3-   71 m1      .banksel ram_address
     00BA 04rr                      1- 1460     	SUBAR	(_workTime + 1),W
     00BB 0903                      1- 1461     	BTRSS	STATUS,2
     00BC 3rrr                      1- 1462     	LGOTO	_00370_DS_
     00BD 21B4                      1- 1463     	MOVIA	0xb4
     00BE 04rr                      1- 1464     	SUBAR	_workTime,W
     00BF                           1- 1465     _00370_DS_:
     00BF 0C03                      1- 1466     	BTRSC	STATUS,0
     00C0 3rrr                      1- 1467     	LGOTO	_00226_DS_
                                    1- 1468     	.line	166, "main.c"; 	MOTOR = 0;
     00C1 1Drr                      1- 1469     	BCR	_PORTB,2
     00C2 3rrr                      1- 1470     	LGOTO	_00254_DS_
                                    1- 1471     ;;unsigned compare: left < lit (0xC5=197), size=2
     00C3                           1- 1472     _00226_DS_:
                                    1- 1473     	.line	167, "main.c"; 	else if(workTime < 197)
     00C3 2100                      1- 1474     	MOVIA	0x00
                                    1- 1475     	BANKSEL	_workTime
     00C4 rrrr                      3-   71 m1      .banksel ram_address
     00C5 04rr                      1- 1476     	SUBAR	(_workTime + 1),W
     00C6 0903                      1- 1477     	BTRSS	STATUS,2
     00C7 3rrr                      1- 1478     	LGOTO	_00371_DS_
     00C8 21C5                      1- 1479     	MOVIA	0xc5
     00C9 04rr                      1- 1480     	SUBAR	_workTime,W
     00CA                           1- 1481     _00371_DS_:
     00CA 0C03                      1- 1482     	BTRSC	STATUS,0
     00CB 3rrr                      1- 1483     	LGOTO	_00223_DS_
                                    1- 1484     	.line	168, "main.c"; 	MOTOR = 1;
     00CC 19rr                      1- 1485     	BSR	_PORTB,2
     00CD 3rrr                      1- 1486     	LGOTO	_00254_DS_
                                    1- 1487     ;;unsigned compare: left < lit (0xC8=200), size=2
     00CE                           1- 1488     _00223_DS_:
                                    1- 1489     	.line	169, "main.c"; 	else if(workTime < 200)
     00CE 2100                      1- 1490     	MOVIA	0x00
                                    1- 1491     	BANKSEL	_workTime
     00CF rrrr                      3-   71 m1      .banksel ram_address
     00D0 04rr                      1- 1492     	SUBAR	(_workTime + 1),W
     00D1 0903                      1- 1493     	BTRSS	STATUS,2
     00D2 3rrr                      1- 1494     	LGOTO	_00372_DS_
     00D3 21C8                      1- 1495     	MOVIA	0xc8
     00D4 04rr                      1- 1496     	SUBAR	_workTime,W
     00D5                           1- 1497     _00372_DS_:
     00D5 0C03                      1- 1498     	BTRSC	STATUS,0
     00D6 3rrr                      1- 1499     	LGOTO	_00220_DS_
                                    1- 1500     	.line	170, "main.c"; 	MOTOR = 0;
     00D7 1Drr                      1- 1501     	BCR	_PORTB,2
     00D8 3rrr                      1- 1502     	LGOTO	_00254_DS_
                                    1- 1503     ;;unsigned compare: left < lit (0xD6=214), size=2
     00D9                           1- 1504     _00220_DS_:
                                    1- 1505     	.line	171, "main.c"; 	else if(workTime < 214)
     00D9 2100                      1- 1506     	MOVIA	0x00
                                    1- 1507     	BANKSEL	_workTime
     00DA rrrr                      3-   71 m1      .banksel ram_address
     00DB 04rr                      1- 1508     	SUBAR	(_workTime + 1),W
     00DC 0903                      1- 1509     	BTRSS	STATUS,2
     00DD 3rrr                      1- 1510     	LGOTO	_00373_DS_
     00DE 21D6                      1- 1511     	MOVIA	0xd6
     00DF 04rr                      1- 1512     	SUBAR	_workTime,W
     00E0                           1- 1513     _00373_DS_:
     00E0 0C03                      1- 1514     	BTRSC	STATUS,0
     00E1 3rrr                      1- 1515     	LGOTO	_00217_DS_
                                    1- 1516     	.line	172, "main.c"; 	MOTOR = 1;
     00E2 19rr                      1- 1517     	BSR	_PORTB,2
     00E3 3rrr                      1- 1518     	LGOTO	_00254_DS_
                                    1- 1519     ;;unsigned compare: left < lit (0xF9=249), size=2
     00E4                           1- 1520     _00217_DS_:
                                    1- 1521     	.line	173, "main.c"; 	else if(workTime < 249)
     00E4 2100                      1- 1522     	MOVIA	0x00
                                    1- 1523     	BANKSEL	_workTime
     00E5 rrrr                      3-   71 m1      .banksel ram_address
     00E6 04rr                      1- 1524     	SUBAR	(_workTime + 1),W
     00E7 0903                      1- 1525     	BTRSS	STATUS,2
     00E8 3rrr                      1- 1526     	LGOTO	_00374_DS_
     00E9 21F9                      1- 1527     	MOVIA	0xf9
     00EA 04rr                      1- 1528     	SUBAR	_workTime,W
     00EB                           1- 1529     _00374_DS_:
     00EB 0C03                      1- 1530     	BTRSC	STATUS,0
     00EC 3rrr                      1- 1531     	LGOTO	_00214_DS_
                                    1- 1532     	.line	174, "main.c"; 	MOTOR = 0;
     00ED 1Drr                      1- 1533     	BCR	_PORTB,2
     00EE 3rrr                      1- 1534     	LGOTO	_00254_DS_
                                    1- 1535     ;;unsigned compare: left < lit (0x104=260), size=2
     00EF                           1- 1536     _00214_DS_:
                                    1- 1537     	.line	175, "main.c"; 	else if(workTime < 260)
     00EF 2101                      1- 1538     	MOVIA	0x01
                                    1- 1539     	BANKSEL	_workTime
     00F0 rrrr                      3-   71 m1      .banksel ram_address
     00F1 04rr                      1- 1540     	SUBAR	(_workTime + 1),W
     00F2 0903                      1- 1541     	BTRSS	STATUS,2
     00F3 3rrr                      1- 1542     	LGOTO	_00375_DS_
     00F4 2104                      1- 1543     	MOVIA	0x04
     00F5 04rr                      1- 1544     	SUBAR	_workTime,W
     00F6                           1- 1545     _00375_DS_:
     00F6 0C03                      1- 1546     	BTRSC	STATUS,0
     00F7 3rrr                      1- 1547     	LGOTO	_00211_DS_
                                    1- 1548     	.line	176, "main.c"; 	MOTOR = 1;
     00F8 19rr                      1- 1549     	BSR	_PORTB,2
     00F9 3rrr                      1- 1550     	LGOTO	_00254_DS_
                                    1- 1551     ;;unsigned compare: left < lit (0x109=265), size=2
     00FA                           1- 1552     _00211_DS_:
                                    1- 1553     	.line	177, "main.c"; 	else if(workTime < 265)
     00FA 2101                      1- 1554     	MOVIA	0x01
                                    1- 1555     	BANKSEL	_workTime
     00FB rrrr                      3-   71 m1      .banksel ram_address
     00FC 04rr                      1- 1556     	SUBAR	(_workTime + 1),W
     00FD 0903                      1- 1557     	BTRSS	STATUS,2
     00FE 3rrr                      1- 1558     	LGOTO	_00376_DS_
     00FF 2109                      1- 1559     	MOVIA	0x09
     0100 04rr                      1- 1560     	SUBAR	_workTime,W
     0101                           1- 1561     _00376_DS_:
     0101 0C03                      1- 1562     	BTRSC	STATUS,0
     0102 3rrr                      1- 1563     	LGOTO	_00208_DS_
                                    1- 1564     	.line	178, "main.c"; 	MOTOR = 0;
     0103 1Drr                      1- 1565     	BCR	_PORTB,2
     0104 3rrr                      1- 1566     	LGOTO	_00254_DS_
                                    1- 1567     ;;unsigned compare: left < lit (0x11A=282), size=2
     0105                           1- 1568     _00208_DS_:
                                    1- 1569     	.line	179, "main.c"; 	else if(workTime < 282)
     0105 2101                      1- 1570     	MOVIA	0x01
                                    1- 1571     	BANKSEL	_workTime
     0106 rrrr                      3-   71 m1      .banksel ram_address
     0107 04rr                      1- 1572     	SUBAR	(_workTime + 1),W
     0108 0903                      1- 1573     	BTRSS	STATUS,2
     0109 3rrr                      1- 1574     	LGOTO	_00377_DS_
     010A 211A                      1- 1575     	MOVIA	0x1a
     010B 04rr                      1- 1576     	SUBAR	_workTime,W
     010C                           1- 1577     _00377_DS_:
     010C 0C03                      1- 1578     	BTRSC	STATUS,0
     010D 3rrr                      1- 1579     	LGOTO	_00205_DS_
                                    1- 1580     	.line	180, "main.c"; 	MOTOR = 1;
     010E 19rr                      1- 1581     	BSR	_PORTB,2
     010F 3rrr                      1- 1582     	LGOTO	_00254_DS_
                                    1- 1583     ;;unsigned compare: left < lit (0x11D=285), size=2
     0110                           1- 1584     _00205_DS_:
                                    1- 1585     	.line	181, "main.c"; 	else if(workTime < 285)
     0110 2101                      1- 1586     	MOVIA	0x01
                                    1- 1587     	BANKSEL	_workTime
     0111 rrrr                      3-   71 m1      .banksel ram_address
     0112 04rr                      1- 1588     	SUBAR	(_workTime + 1),W
     0113 0903                      1- 1589     	BTRSS	STATUS,2
     0114 3rrr                      1- 1590     	LGOTO	_00378_DS_
     0115 211D                      1- 1591     	MOVIA	0x1d
     0116 04rr                      1- 1592     	SUBAR	_workTime,W
     0117                           1- 1593     _00378_DS_:
     0117 0C03                      1- 1594     	BTRSC	STATUS,0
     0118 3rrr                      1- 1595     	LGOTO	_00202_DS_
                                    1- 1596     	.line	182, "main.c"; 	MOTOR = 0;
     0119 1Drr                      1- 1597     	BCR	_PORTB,2
     011A 3rrr                      1- 1598     	LGOTO	_00254_DS_
                                    1- 1599     ;;unsigned compare: left < lit (0x12C=300), size=2
     011B                           1- 1600     _00202_DS_:
                                    1- 1601     	.line	183, "main.c"; 	else if(workTime < 300)
     011B 2101                      1- 1602     	MOVIA	0x01
                                    1- 1603     	BANKSEL	_workTime
     011C rrrr                      3-   71 m1      .banksel ram_address
     011D 04rr                      1- 1604     	SUBAR	(_workTime + 1),W
     011E 0903                      1- 1605     	BTRSS	STATUS,2
     011F 3rrr                      1- 1606     	LGOTO	_00379_DS_
     0120 212C                      1- 1607     	MOVIA	0x2c
     0121 04rr                      1- 1608     	SUBAR	_workTime,W
     0122                           1- 1609     _00379_DS_:
     0122 0C03                      1- 1610     	BTRSC	STATUS,0
     0123 3rrr                      1- 1611     	LGOTO	_00199_DS_
                                    1- 1612     	.line	184, "main.c"; 	MOTOR = 1;
     0124 19rr                      1- 1613     	BSR	_PORTB,2
     0125 3rrr                      1- 1614     	LGOTO	_00254_DS_
                                    1- 1615     ;;unsigned compare: left < lit (0x14D=333), size=2
     0126                           1- 1616     _00199_DS_:
                                    1- 1617     	.line	185, "main.c"; 	else if(workTime < 333)
     0126 2101                      1- 1618     	MOVIA	0x01
                                    1- 1619     	BANKSEL	_workTime
     0127 rrrr                      3-   71 m1      .banksel ram_address
     0128 04rr                      1- 1620     	SUBAR	(_workTime + 1),W
     0129 0903                      1- 1621     	BTRSS	STATUS,2
     012A 3rrr                      1- 1622     	LGOTO	_00380_DS_
     012B 214D                      1- 1623     	MOVIA	0x4d
     012C 04rr                      1- 1624     	SUBAR	_workTime,W
     012D                           1- 1625     _00380_DS_:
     012D 0C03                      1- 1626     	BTRSC	STATUS,0
     012E 3rrr                      1- 1627     	LGOTO	_00196_DS_
                                    1- 1628     	.line	186, "main.c"; 	MOTOR = 0;
     012F 1Drr                      1- 1629     	BCR	_PORTB,2
     0130 3rrr                      1- 1630     	LGOTO	_00254_DS_
                                    1- 1631     ;;unsigned compare: left < lit (0x158=344), size=2
     0131                           1- 1632     _00196_DS_:
                                    1- 1633     	.line	187, "main.c"; 	else if(workTime < 344)
     0131 2101                      1- 1634     	MOVIA	0x01
                                    1- 1635     	BANKSEL	_workTime
     0132 rrrr                      3-   71 m1      .banksel ram_address
     0133 04rr                      1- 1636     	SUBAR	(_workTime + 1),W
     0134 0903                      1- 1637     	BTRSS	STATUS,2
     0135 3rrr                      1- 1638     	LGOTO	_00381_DS_
     0136 2158                      1- 1639     	MOVIA	0x58
     0137 04rr                      1- 1640     	SUBAR	_workTime,W
     0138                           1- 1641     _00381_DS_:
     0138 0C03                      1- 1642     	BTRSC	STATUS,0
     0139 3rrr                      1- 1643     	LGOTO	_00193_DS_
                                    1- 1644     	.line	188, "main.c"; 	MOTOR = 1;
     013A 19rr                      1- 1645     	BSR	_PORTB,2
     013B 3rrr                      1- 1646     	LGOTO	_00254_DS_
                                    1- 1647     ;;unsigned compare: left < lit (0x15E=350), size=2
     013C                           1- 1648     _00193_DS_:
                                    1- 1649     	.line	189, "main.c"; 	else if(workTime < 350)
     013C 2101                      1- 1650     	MOVIA	0x01
                                    1- 1651     	BANKSEL	_workTime
     013D rrrr                      3-   71 m1      .banksel ram_address
     013E 04rr                      1- 1652     	SUBAR	(_workTime + 1),W
     013F 0903                      1- 1653     	BTRSS	STATUS,2
     0140 3rrr                      1- 1654     	LGOTO	_00382_DS_
     0141 215E                      1- 1655     	MOVIA	0x5e
     0142 04rr                      1- 1656     	SUBAR	_workTime,W
     0143                           1- 1657     _00382_DS_:
     0143 0C03                      1- 1658     	BTRSC	STATUS,0
     0144 3rrr                      1- 1659     	LGOTO	_00190_DS_
                                    1- 1660     	.line	190, "main.c"; 	MOTOR = 0;
     0145 1Drr                      1- 1661     	BCR	_PORTB,2
     0146 3rrr                      1- 1662     	LGOTO	_00254_DS_
                                    1- 1663     ;;unsigned compare: left < lit (0x16E=366), size=2
     0147                           1- 1664     _00190_DS_:
                                    1- 1665     	.line	191, "main.c"; 	else if(workTime < 366)
     0147 2101                      1- 1666     	MOVIA	0x01
                                    1- 1667     	BANKSEL	_workTime
     0148 rrrr                      3-   71 m1      .banksel ram_address
     0149 04rr                      1- 1668     	SUBAR	(_workTime + 1),W
     014A 0903                      1- 1669     	BTRSS	STATUS,2
     014B 3rrr                      1- 1670     	LGOTO	_00383_DS_
     014C 216E                      1- 1671     	MOVIA	0x6e
     014D 04rr                      1- 1672     	SUBAR	_workTime,W
     014E                           1- 1673     _00383_DS_:
     014E 0C03                      1- 1674     	BTRSC	STATUS,0
     014F 3rrr                      1- 1675     	LGOTO	_00187_DS_
                                    1- 1676     	.line	192, "main.c"; 	MOTOR = 1;
     0150 19rr                      1- 1677     	BSR	_PORTB,2
     0151 3rrr                      1- 1678     	LGOTO	_00254_DS_
                                    1- 1679     ;;unsigned compare: left < lit (0x172=370), size=2
     0152                           1- 1680     _00187_DS_:
                                    1- 1681     	.line	193, "main.c"; 	else if(workTime < 370)
     0152 2101                      1- 1682     	MOVIA	0x01
                                    1- 1683     	BANKSEL	_workTime
     0153 rrrr                      3-   71 m1      .banksel ram_address
     0154 04rr                      1- 1684     	SUBAR	(_workTime + 1),W
     0155 0903                      1- 1685     	BTRSS	STATUS,2
     0156 3rrr                      1- 1686     	LGOTO	_00384_DS_
     0157 2172                      1- 1687     	MOVIA	0x72
     0158 04rr                      1- 1688     	SUBAR	_workTime,W
     0159                           1- 1689     _00384_DS_:
     0159 0C03                      1- 1690     	BTRSC	STATUS,0
     015A 3rrr                      1- 1691     	LGOTO	_00184_DS_
                                    1- 1692     	.line	194, "main.c"; 	MOTOR = 0;
     015B 1Drr                      1- 1693     	BCR	_PORTB,2
     015C 3rrr                      1- 1694     	LGOTO	_00254_DS_
                                    1- 1695     ;;unsigned compare: left < lit (0x180=384), size=2
     015D                           1- 1696     _00184_DS_:
                                    1- 1697     	.line	195, "main.c"; 	else if(workTime < 384)
     015D 2101                      1- 1698     	MOVIA	0x01
                                    1- 1699     	BANKSEL	_workTime
     015E rrrr                      3-   71 m1      .banksel ram_address
     015F 04rr                      1- 1700     	SUBAR	(_workTime + 1),W
     0160 0903                      1- 1701     	BTRSS	STATUS,2
     0161 3rrr                      1- 1702     	LGOTO	_00385_DS_
     0162 2180                      1- 1703     	MOVIA	0x80
     0163 04rr                      1- 1704     	SUBAR	_workTime,W
     0164                           1- 1705     _00385_DS_:
     0164 0C03                      1- 1706     	BTRSC	STATUS,0
     0165 3rrr                      1- 1707     	LGOTO	_00181_DS_
                                    1- 1708     	.line	196, "main.c"; 	MOTOR = 1;
     0166 19rr                      1- 1709     	BSR	_PORTB,2
     0167 3rrr                      1- 1710     	LGOTO	_00254_DS_
     0168                           1- 1711     _00181_DS_:
                                    1- 1712     	.line	199, "main.c"; 	MOTOR = 0;
     0168 1Drr                      1- 1713     	BCR	_PORTB,2
                                    1- 1714     	.line	200, "main.c"; 	rockStep = 0;
                                    1- 1715     	BANKSEL	_rockStep
     0169 rrrr                      3-   71 m1      .banksel ram_address
     016A 02rr                      1- 1716     	CLRR	_rockStep
     016B                           1- 1717     _00254_DS_:
                                    1- 1718     	.line	203, "main.c"; 	}
                                    1- 1719     	RETURN	
     016B 0010                      3-   26 m1      ret
                                    1- 1720     ; exit point of _workCtr
                                    1- 1723     ;	code size estimation:
                                    1- 1724     ;	  705+  131 =   836 instructions ( 1934 byte)
                                    1- 1726     	end
                                    1- 1726     	end

SYMBOL TABLE            TYPE     VALUE
___fs2schar             Label    00000000
___fs2sint              Label    00000000
___fs2slong             Label    00000000
___fs2uchar             Label    00000000
___fs2uint              Label    00000000
___fs2ulong             Label    00000000
___fsadd                Label    00000000
___fsdiv                Label    00000000
___fseq                 Label    00000000
___fsgt                 Label    00000000
___fslt                 Label    00000000
___fsmul                Label    00000000
___fsneq                Label    00000000
___fssub                Label    00000000
___schar2fs             Label    00000000
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
___sint2fs              Label    00000000
___slong2fs             Label    00000000
___uchar2fs             Label    00000000
___uint2fs              Label    00000000
___ulong2fs             Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__gptrget1              Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002F
_00002_DS_              Label    00000040
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00116_DS_              Label    0000001C
_00119_DS_              Label    00000026
_00127_DS_              Label    00000008
_00152_DS_              Label    0000003F
_00158_DS_              Label    00000055
_00161_DS_              Label    0000004A
_00164_DS_              Label    0000003F
_00167_DS_              Label    00000034
_00170_DS_              Label    00000029
_00173_DS_              Label    0000001E
_00176_DS_              Label    00000013
_00179_DS_              Label    0000006B
_00181_DS_              Label    00000168
_00184_DS_              Label    0000015D
_00187_DS_              Label    00000152
_00190_DS_              Label    00000147
_00193_DS_              Label    0000013C
_00196_DS_              Label    00000131
_00199_DS_              Label    00000126
_00202_DS_              Label    0000011B
_00205_DS_              Label    00000110
_00208_DS_              Label    00000105
_00211_DS_              Label    000000FA
_00214_DS_              Label    000000EF
_00217_DS_              Label    000000E4
_00220_DS_              Label    000000D9
_00223_DS_              Label    000000CE
_00226_DS_              Label    000000C3
_00229_DS_              Label    000000B8
_00232_DS_              Label    000000AD
_00235_DS_              Label    000000A2
_00238_DS_              Label    00000097
_00241_DS_              Label    0000008C
_00244_DS_              Label    00000081
_00247_DS_              Label    00000076
_00252_DS_              Label    00000059
_00254_DS_              Label    0000016B
_00355_DS_              Label    0000000F
_00356_DS_              Label    0000001A
_00357_DS_              Label    00000025
_00358_DS_              Label    00000030
_00359_DS_              Label    0000003B
_00360_DS_              Label    00000046
_00361_DS_              Label    00000051
_00362_DS_              Label    00000068
_00363_DS_              Label    00000072
_00364_DS_              Label    0000007D
_00365_DS_              Label    00000088
_00366_DS_              Label    00000093
_00367_DS_              Label    0000009E
_00368_DS_              Label    000000A9
_00369_DS_              Label    000000B4
_00370_DS_              Label    000000BF
_00371_DS_              Label    000000CA
_00372_DS_              Label    000000D5
_00373_DS_              Label    000000E0
_00374_DS_              Label    000000EB
_00375_DS_              Label    000000F6
_00376_DS_              Label    00000101
_00377_DS_              Label    0000010C
_00378_DS_              Label    00000117
_00379_DS_              Label    00000122
_00380_DS_              Label    0000012D
_00381_DS_              Label    00000138
_00382_DS_              Label    00000143
_00383_DS_              Label    0000014E
_00384_DS_              Label    00000159
_00385_DS_              Label    00000164
_00395_DS_              Label    00000018
_00398_DS_              Label    00000021
_00400_DS_              Label    00000023
_00406_DS_              Label    00000079
_00409_DS_              Label    0000007B
_00412_DS_              Label    0000007C
_00426_DS_              Label    0000005F
_00427_DS_              Label    00000068
_00433_DS_              Label    00000012
_00434_DS_              Label    00000015
_00436_DS_              Label    00000007
_00444_DS_              Label    00000016
_00446_DS_              Label    0000000E
_00447_DS_              Label    00000018
_00448_DS_              Label    00000019
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_baiwei                 Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_chrgCtr                Label    00000000
_chrgStep               Label    00000000
_CMPCR                  Label    00000000
_delay_ms               Label    00000000
_delay_us               Label    00000000
_Delay1000Us            Label    00000000
_Delay10Us              Label    00000000
_FSR                    Label    00000000
_getData                Label    00000000
_gewei                  Label    00000000
_gotoSleep              Label    00000000
_hz                     Label    00000000
_hzH                    Label    00000000
_hzL                    Label    00000000
_i2c_write_byte_data    Label    00000000
_IIC_Ack                Label    00000000
_IIC_NAck               Label    00000000
_IIC_Read_Byte          Label    00000000
_IIC_Send_Byte          Label    00000000
_IIC_Start              Label    00000000
_IIC_Stop               Label    00000000
_IIC_Wait_Ack           Label    00000000
_ind_light_disp         Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isCalibrated           Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_main                   Label    00000000
_msa_calibrate          Label    00000000
_msa_calibrateZ         Label    00000000
_msa_flip_init          Label    00000000
_msa_flip_process       Label    00000000
_msa_get_step           Label    00000000
_msa_init               Label    00000000
_msa_read_adc           Label    00000000
_msa_read_data          Label    00000000
_msa_ReadBytes          Label    00000000
_msa_register_read_continuously Label    00000000
_msa_sqrt               Label    00000000
_msa_WriteBytes         Label    00000000
_offset_z               Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_refreshLed             Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_rockStep               Label    00000000
_SDA_IN                 Label    00000000
_SDA_OUT                Label    00000000
_shiwei                 Label    00000000
_sleepTime              Label    00000000
_STATUS                 Label    00000000
_SW_i2c_udelay          Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_table                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
_workTime               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a054d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
