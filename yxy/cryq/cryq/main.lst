
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A053D,c=on
                                    1-    9     	#include "ny8a053d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduint
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_INDF
                                    1-   24     	extern	_TMR0
                                    1-   25     	extern	_PCL
                                    1-   26     	extern	_STATUS
                                    1-   27     	extern	_FSR
                                    1-   28     	extern	_PORTA
                                    1-   29     	extern	_PORTB
                                    1-   30     	extern	_PCON
                                    1-   31     	extern	_BWUCON
                                    1-   32     	extern	_PCHBUF
                                    1-   33     	extern	_ABPLCON
                                    1-   34     	extern	_BPHCON
                                    1-   35     	extern	_INTE
                                    1-   36     	extern	_INTF
                                    1-   37     	extern	_TMR1
                                    1-   38     	extern	_T1CR1
                                    1-   39     	extern	_T1CR2
                                    1-   40     	extern	_PWM1DUTY
                                    1-   41     	extern	_PS1CV
                                    1-   42     	extern	_BZ1CR
                                    1-   43     	extern	_IRCR
                                    1-   44     	extern	_TBHP
                                    1-   45     	extern	_TBHD
                                    1-   46     	extern	_OSCCR
                                    1-   47     	extern	_IOSTA
                                    1-   48     	extern	_IOSTB
                                    1-   49     	extern	_PS0CV
                                    1-   50     	extern	_BODCON
                                    1-   51     	extern	_PCON1
                                    1-   52     	extern	_T0MD
                                    1-   53     	extern	___sdcc_saved_fsr
                                    1-   54     	extern	___sdcc_saved_stk00
                                    1-   55     	extern	___sdcc_saved_stk01
                                    1-   56     	extern	__gptrget1
                                    1-   57     	extern	__gptrput1
                                    1-   58     	extern	__nyc_ny8_startup
                                    1-   59     ;--------------------------------------------------------
                                    1-   60     ; global declarations
                                    1-   61     ;--------------------------------------------------------
                                    1-   62     	extern	_gotoSleep
                                    1-   63     	extern	_motor1
                                    1-   64     	extern	_motor2
                                    1-   65     	extern	_keyRead2
                                    1-   66     	extern	_keyCon
                                    1-   67     	extern	_workCon
                                    1-   68     	extern	_ledCon
                                    1-   69     	extern	_isr
                                    1-   70     	extern	_main
                                    1-   71     	extern	_intCount
                                    1-   72     	extern	_IntFlag
                                    1-   73     	extern	_duty
                                    1-   74     	extern	_power
                                    1-   75     	extern	_modeSpeed
                                    1-   76     	extern	_modeStep
                                    1-   77     	extern	_ledCount
                                    1-   78     	extern	_motorEn
                                    1-   79     	extern	_timeCount
                                    1-   80     	extern	_sleepCount
                                    1-   81     	extern	_count1s
                                    1-   82     	extern	_keyCount1
                                    1-   83     	extern	_keyCount2
                                    1-   84     	extern	_keyCount3
                                    1-   85     	extern	_keyCount4
                                    1-   86     	extern	_keyCount5
                                    1-   88     	extern PSAVE
                                    1-   89     	extern SSAVE
                                    1-   90     	extern WSAVE
                                    1-   91     	extern STK02
                                    1-   92     	extern STK01
                                    1-   93     	extern STK00
                                    1-   95     .segment "uninit", 0x20000020
 20000020                           1-   96     PSAVE:
                                    1-   97     	.res 1
 20000021                           1-   98     SSAVE:
                                    1-   99     	.res 1
 20000022                           1-  100     WSAVE:
                                    1-  101     	.res 1
 20000023                           1-  102     STK02:
                                    1-  103     	.res 1
 20000024                           1-  104     STK01:
                                    1-  105     	.res 1
 20000025                           1-  106     STK00:
                                    1-  107     	.res 1
                                    1-  109     ;--------------------------------------------------------
                                    1-  110     ; global definitions
                                    1-  111     ;--------------------------------------------------------
                                    1-  112     .segment "uninit"
     0000                           1-  113     _keyCount1:
                                    1-  114     	.res	1
                                    1-  117     .segment "uninit"
     0000                           1-  118     _keyCount2:
                                    1-  119     	.res	1
                                    1-  122     .segment "uninit"
     0000                           1-  123     _keyCount3:
                                    1-  124     	.res	1
                                    1-  127     .segment "uninit"
     0000                           1-  128     _keyCount4:
                                    1-  129     	.res	1
                                    1-  132     .segment "uninit"
     0000                           1-  133     _keyCount5:
                                    1-  134     	.res	1
                                    1-  137     ;--------------------------------------------------------
                                    1-  138     ; absolute symbol definitions
                                    1-  139     ;--------------------------------------------------------
                                    1-  140     ;--------------------------------------------------------
                                    1-  141     ; compiler-defined variables
                                    1-  142     ;--------------------------------------------------------
                                    1-  143     .segment "uninit"
     0000                           1-  144     r0x101C:
                                    1-  145     	.res	1
                                    1-  146     .segment "uninit"
     0000                           1-  147     r0x101D:
                                    1-  148     	.res	1
                                    1-  149     .segment "uninit"
     0000                           1-  150     r0x1018:
                                    1-  151     	.res	1
                                    1-  152     .segment "uninit"
     0000                           1-  153     r0x101A:
                                    1-  154     	.res	1
                                    1-  155     .segment "uninit"
     0000                           1-  156     r0x1019:
                                    1-  157     	.res	1
                                    1-  158     .segment "uninit"
     0000                           1-  159     r0x101B:
                                    1-  160     	.res	1
                                    1-  161     .segment "uninit"
     0000                           1-  162     r0x1014:
                                    1-  163     	.res	1
                                    1-  164     .segment "uninit"
     0000                           1-  165     r0x1017:
                                    1-  166     	.res	1
                                    1-  167     .segment "uninit"
     0000                           1-  168     r0x1016:
                                    1-  169     	.res	1
                                    1-  170     .segment "uninit"
     0000                           1-  171     r0x1015:
                                    1-  172     	.res	1
                                    1-  173     ;--------------------------------------------------------
                                    1-  174     ; initialized data
                                    1-  175     ;--------------------------------------------------------
                                    1-  177     .segment "idata"
     0000                           1-  178     _intCount:
     0000 0000                      1-  179     	dw	0x00
                                    1-  183     .segment "idata"
     0000                           1-  184     _IntFlag:
     0000 0000                      1-  185     	dw	0x00
                                    1-  189     .segment "idata"
     0000                           1-  190     _duty:
     0000 0000                      1-  191     	dw	0x00
                                    1-  195     .segment "idata"
     0000                           1-  196     _power:
     0000 0000                      1-  197     	dw	0x00
                                    1-  201     .segment "idata"
     0000                           1-  202     _modeSpeed:
     0000 0000                      1-  203     	dw	0x00
                                    1-  207     .segment "idata"
     0000                           1-  208     _modeStep:
     0000 0000                      1-  209     	dw	0x00
                                    1-  213     .segment "idata"
     0000                           1-  214     _ledCount:
     0000 0000                      1-  215     	dw	0x00
                                    1-  219     .segment "idata"
     0000                           1-  220     _motorEn:
     0000 0000                      1-  221     	dw	0x00
                                    1-  225     .segment "idata"
     0000                           1-  226     _timeCount:
     0000 0000 0000                 1-  227     	dw	0x00, 0x00
                                    1-  231     .segment "idata"
     0000                           1-  232     _sleepCount:
     0000 0000                      1-  233     	dw	0x00
                                    1-  237     .segment "idata"
     0000                           1-  238     _count1s:
     0000 0000                      1-  239     	dw	0x00
                                    1-  242     ;--------------------------------------------------------
                                    1-  243     ; overlayable items in internal ram 
                                    1-  244     ;--------------------------------------------------------
                                    1-  245     ;	udata_ovr
                                    1-  246     ;--------------------------------------------------------
                                    1-  247     ; reset vector 
                                    1-  248     ;--------------------------------------------------------
                                    1-  249     ORG	0x0000
     0000 3rrr                      1-  250     	LGOTO	__nyc_ny8_startup
                                    1-  251     ;--------------------------------------------------------
                                    1-  252     ; interrupt and initialization code
                                    1-  253     ;--------------------------------------------------------
                                    1-  254     ORG 0x0008
     0008 3rrr                      1-  255     	lgoto	__sdcc_interrupt
                                    1-  257     .segment "code"
     0000                           1-  258     __sdcc_interrupt:
                                    1-  259     ;***
                                    1-  260     ;  pBlock Stats: dbName = I
                                    1-  261     ;***
                                    1-  262     ;functions called:
                                    1-  263     ;   _motor1
                                    1-  264     ;   _motor2
                                    1-  265     ;   _motor1
                                    1-  266     ;   _motor2
                                    1-  267     ;2 compiler assigned registers:
                                    1-  268     ;   STK00
                                    1-  269     ;   STK01
                                    1-  270     ;; Starting pCode block
     0000                           1-  271     _isr:
                                    1-  272     ; 0 exit points
                                    1-  273     	.line	35, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  274     	MOVAR	WSAVE
     0001 1503                      1-  275     	SWAPR	STATUS,W
     0002 0283                      1-  276     	CLRR	STATUS
     0003 00rr                      1-  277     	MOVAR	SSAVE
     0004 010A                      1-  278     	MOVR	PCHBUF,W
     0005 028A                      1-  279     	CLRR	PCHBUF
     0006 00rr                      1-  280     	MOVAR	PSAVE
     0007 0104                      1-  281     	MOVR	FSR,W
                                    1-  282     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  283     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  284     	MOVR	STK00,W
                                    1-  285     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  286     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  287     	MOVR	STK01,W
                                    1-  288     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  289     	MOVAR	___sdcc_saved_stk01
                                    1-  290     	.line	37, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  291     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  292     	LGOTO	_00114_DS_
                                    1-  293     	.line	39, "main.c"; 	TMR0 += 57;
     0012 2139                      1-  294     	MOVIA	0x39
     0013 03rr                      1-  295     	ADDAR	_TMR0,F
                                    1-  296     	.line	40, "main.c"; 	if(power && motorEn)
                                    1-  297     	BANKSEL	_power
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1-  298     	MOVR	_power,W
     0016 0D03                      1-  299     	BTRSC	STATUS,2
     0017 3rrr                      1-  300     	LGOTO	_00109_DS_
                                    1-  301     	BANKSEL	_motorEn
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1-  302     	MOVR	_motorEn,W
     001A 0D03                      1-  303     	BTRSC	STATUS,2
     001B 3rrr                      1-  304     	LGOTO	_00109_DS_
                                    1-  305     	.line	42, "main.c"; 	if(power == 1)
                                    1-  306     	BANKSEL	_power
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1-  307     	MOVR	_power,W
     001E 2401                      1-  308     	XORIA	0x01
     001F 0903                      1-  309     	BTRSS	STATUS,2
     0020 3rrr                      1-  310     	LGOTO	_00106_DS_
                                    1-  311     	.line	43, "main.c"; 	motor1();
     0021 2rrr                      1-  312     	LCALL	_motor1
     0022 3rrr                      1-  313     	LGOTO	_00107_DS_
     0023                           1-  314     _00106_DS_:
                                    1-  315     	.line	45, "main.c"; 	motor2();
     0023 2rrr                      1-  316     	LCALL	_motor2
     0024                           1-  317     _00107_DS_:
                                    1-  318     	.line	46, "main.c"; 	ledCount++;
                                    1-  319     	BANKSEL	_ledCount
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 05rr                      1-  320     	INCR	_ledCount,F
     0026                           1-  321     _00109_DS_:
                                    1-  322     	.line	48, "main.c"; 	if(++intCount >= 100)
                                    1-  323     	BANKSEL	_intCount
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 05rr                      1-  324     	INCR	_intCount,F
                                    1-  325     ;;unsigned compare: left < lit (0x64=100), size=1
     0028 2164                      1-  326     	MOVIA	0x64
     0029 04rr                      1-  327     	SUBAR	_intCount,W
     002A 0803                      1-  328     	BTRSS	STATUS,0
     002B 3rrr                      1-  329     	LGOTO	_00114_DS_
                                    1-  330     	.line	50, "main.c"; 	intCount = 0;
     002C 02rr                      1-  331     	CLRR	_intCount
                                    1-  332     	.line	51, "main.c"; 	IntFlag = 1;
     002D 2101                      1-  333     	MOVIA	0x01
                                    1-  334     	BANKSEL	_IntFlag
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1-  335     	MOVAR	_IntFlag
     0030                           1-  336     _00114_DS_:
                                    1-  337     	.line	54, "main.c"; 	if(INTFbits.PBIF)
     0030 08rr                      1-  338     	BTRSS	_INTFbits,1
     0031 3rrr                      1-  339     	LGOTO	_00116_DS_
                                    1-  340     	.line	56, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0032 21FD                      1-  341     	MOVIA	0xfd
     0033 00rr                      1-  342     	MOVAR	_INTF
     0034                           1-  343     _00116_DS_:
                                    1-  344     	.line	59, "main.c"; 	INTF = 0;
     0034 02rr                      1-  345     	CLRR	_INTF
                                    1-  346     	.line	61, "main.c"; 	}
                                    1-  347     	BANKSEL	___sdcc_saved_stk01
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1-  348     	MOVR	___sdcc_saved_stk01,W
     0037 00rr                      1-  349     	MOVAR	STK01
                                    1-  350     	BANKSEL	___sdcc_saved_stk00
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 01rr                      1-  351     	MOVR	___sdcc_saved_stk00,W
     003A 00rr                      1-  352     	MOVAR	STK00
                                    1-  353     	BANKSEL	___sdcc_saved_fsr
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 01rr                      1-  354     	MOVR	___sdcc_saved_fsr,W
     003D 0084                      1-  355     	MOVAR	FSR
     003E 01rr                      1-  356     	MOVR	PSAVE,W
     003F 008A                      1-  357     	MOVAR	PCHBUF
     0040 0283                      1-  358     	CLRR	STATUS
     0041 15rr                      1-  359     	SWAPR	SSAVE,W
     0042 0083                      1-  360     	MOVAR	STATUS
     0043 15rr                      1-  361     	SWAPR	WSAVE,F
     0044 15rr                      1-  362     	SWAPR	WSAVE,W
     0045                           1-  363     END_OF_INTERRUPT:
     0045 0011                      1-  364     	RETIE	
                                    1-  366     ;--------------------------------------------------------
                                    1-  367     ; code
                                    1-  368     ;--------------------------------------------------------
                                    1-  369     ;***
                                    1-  370     ;  pBlock Stats: dbName = M
                                    1-  371     ;***
                                    1-  372     ;has an exit
                                    1-  373     ;functions called:
                                    1-  374     ;   _ledCon
                                    1-  375     ;   _keyCon
                                    1-  376     ;   _workCon
                                    1-  377     ;   _gotoSleep
                                    1-  378     ;   _ledCon
                                    1-  379     ;   _keyCon
                                    1-  380     ;   _workCon
                                    1-  381     ;   _gotoSleep
                                    1-  382     ;; Starting pCode block
                                    1-  383     .segment "code"; module=main, function=_main
     0000                           1-  385     _main:
                                    1-  386     ; 2 exit points
                                    1-  387     	.line	68, "main.c"; 	keyCount1 = keyCount2 = keyCount3 = keyCount4 = keyCount5 = 0;
                                    1-  388     	BANKSEL	_keyCount5
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  389     	CLRR	_keyCount5
                                    1-  390     	BANKSEL	_keyCount4
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  391     	CLRR	_keyCount4
                                    1-  392     	BANKSEL	_keyCount3
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  393     	CLRR	_keyCount3
                                    1-  394     	BANKSEL	_keyCount2
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  395     	CLRR	_keyCount2
                                    1-  396     	BANKSEL	_keyCount1
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1-  397     	CLRR	_keyCount1
                                    1-  398     	.line	69, "main.c"; 	PORTB = 0x00;
     000A 02rr                      1-  399     	CLRR	_PORTB
                                    1-  400     	.line	70, "main.c"; 	PORTA = 0x00;
     000B 02rr                      1-  401     	CLRR	_PORTA
                                    1-  402     	.line	71, "main.c"; 	IOSTA = C_PA3_Input;
     000C 2108                      1-  403     	MOVIA	0x08
     000D 000r                      1-  404     	IOST	_IOSTA
                                    1-  405     	.line	72, "main.c"; 	IOSTB = C_PB3_Input | C_PB4_Input | C_PB5_Input | C_PB0_Input | C_PB1_Input | C_PB2_Input;
     000E 213F                      1-  406     	MOVIA	0x3f
     000F 000r                      1-  407     	IOST	_IOSTB
                                    1-  408     	.line	73, "main.c"; 	BPHCON = 0xD0;
     0010 21D0                      1-  409     	MOVIA	0xd0
     0011 00rr                      1-  410     	MOVAR	_BPHCON
                                    1-  411     	.line	74, "main.c"; 	PCON = C_WDT_En | C_LVR_En ;				// Enable WDT & LVR
     0012 2188                      1-  412     	MOVIA	0x88
     0013 00rr                      1-  413     	MOVAR	_PCON
                                    1-  414     	.line	76, "main.c"; 	PCON1 = C_TMR0_Dis;
     0014 0200                      1-  415     	CLRA	
     0015 000r                      1-  416     	IOST	_PCON1
                                    1-  417     	.line	78, "main.c"; 	TMR0 = 55;
     0016 2137                      1-  418     	MOVIA	0x37
     0017 00rr                      1-  419     	MOVAR	_TMR0
                                    1-  420     	.line	79, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0018 0200                      1-  421     	CLRA	
     0019 0003                      1-  422     	T0MD	
                                    1-  423     	.line	81, "main.c"; 	PCON1 = C_TMR0_En;
     001A 2101                      1-  424     	MOVIA	0x01
     001B 000r                      1-  425     	IOST	_PCON1
                                    1-  426     	.line	82, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     001C 00rr                      1-  427     	MOVAR	_INTE
                                    1-  428     	.line	83, "main.c"; 	INTF = 0;
     001D 02rr                      1-  429     	CLRR	_INTF
                                    1-  430     	.line	84, "main.c"; 	ENI();
     001E 0004                      1-  431     	ENI
     001F                           1-  432     _00144_DS_:
                                    1-  433     	.line	87, "main.c"; 	CLRWDT();			//Clear WDT, this function is defined in ny8command.h
     001F 0002                      1-  434     	clrwdt
                                    1-  435     	.line	88, "main.c"; 	if(motorEn == 0 || power == 0)
                                    1-  436     	BANKSEL	_motorEn
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  437     	MOVR	_motorEn,W
     0022 0D03                      1-  438     	BTRSC	STATUS,2
     0023 3rrr                      1-  439     	LGOTO	_00121_DS_
                                    1-  440     	BANKSEL	_power
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  441     	MOVR	_power,W
     0026 0903                      1-  442     	BTRSS	STATUS,2
     0027 3rrr                      1-  443     	LGOTO	_00122_DS_
     0028                           1-  444     _00121_DS_:
                                    1-  445     	.line	90, "main.c"; 	PORTA &= 0xFD;
     0028 1Crr                      1-  446     	BCR	_PORTA,1
                                    1-  447     	.line	91, "main.c"; 	PORTB &= 0xBF;
     0029 1Frr                      1-  448     	BCR	_PORTB,6
     002A                           1-  449     _00122_DS_:
                                    1-  450     	.line	93, "main.c"; 	if(!IntFlag)
                                    1-  451     	BANKSEL	_IntFlag
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  452     	MOVR	_IntFlag,W
     002C 0D03                      1-  453     	BTRSC	STATUS,2
     002D 3rrr                      1-  454     	LGOTO	_00144_DS_
                                    1-  455     	.line	95, "main.c"; 	IntFlag = 0;
     002E 02rr                      1-  456     	CLRR	_IntFlag
                                    1-  457     	.line	96, "main.c"; 	if(PORTB & 0X08)
     002F 09rr                      1-  458     	BTRSS	_PORTB,3
     0030 3rrr                      1-  459     	LGOTO	_00135_DS_
                                    1-  460     	.line	99, "main.c"; 	if(PORTB & 0X10)
     0031 0Arr                      1-  461     	BTRSS	_PORTB,4
     0032 3rrr                      1-  462     	LGOTO	_00132_DS_
                                    1-  463     	.line	102, "main.c"; 	LEDON();
     0033 18rr                      1-  464     	BSR	_PORTA,0
     0034 3rrr                      1-  465     	LGOTO	_00136_DS_
     0035                           1-  466     _00132_DS_:
                                    1-  467     	.line	106, "main.c"; 	if(++count1s >= 100)
                                    1-  468     	BANKSEL	_count1s
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 05rr                      1-  469     	INCR	_count1s,F
                                    1-  470     ;;unsigned compare: left < lit (0x64=100), size=1
     0037 2164                      1-  471     	MOVIA	0x64
     0038 04rr                      1-  472     	SUBAR	_count1s,W
     0039 0C03                      1-  473     	BTRSC	STATUS,0
                                    1-  474     	.line	107, "main.c"; 	count1s = 0;
     003A 02rr                      1-  475     	CLRR	_count1s
                                    1-  476     	.line	108, "main.c"; 	if(count1s < 50)
     003B 2132                      1-  477     	MOVIA	0x32
     003C 04rr                      1-  478     	SUBAR	_count1s,W
     003D 0C03                      1-  479     	BTRSC	STATUS,0
     003E 3rrr                      1-  480     	LGOTO	_00129_DS_
                                    1-  481     	.line	109, "main.c"; 	LEDON();
     003F 18rr                      1-  482     	BSR	_PORTA,0
     0040 3rrr                      1-  483     	LGOTO	_00136_DS_
     0041                           1-  484     _00129_DS_:
                                    1-  485     	.line	111, "main.c"; 	LEDOFF();
     0041 1Crr                      1-  486     	BCR	_PORTA,0
     0042 3rrr                      1-  487     	LGOTO	_00136_DS_
     0043                           1-  488     _00135_DS_:
                                    1-  489     	.line	116, "main.c"; 	ledCon();
     0043 2rrr                      1-  490     	LCALL	_ledCon
     0044                           1-  491     _00136_DS_:
                                    1-  492     	.line	118, "main.c"; 	keyCon();
     0044 2rrr                      1-  493     	LCALL	_keyCon
                                    1-  494     	.line	119, "main.c"; 	if(power)
                                    1-  495     	BANKSEL	_power
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1-  496     	MOVR	_power,W
     0047 0903                      1-  497     	BTRSS	STATUS,2
                                    1-  498     	.line	120, "main.c"; 	workCon();
     0048 2rrr                      1-  499     	LCALL	_workCon
                                    1-  500     	.line	121, "main.c"; 	if(power == 0 && keyCount1 == 0 && ++sleepCount > 200)
                                    1-  501     	BANKSEL	_power
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 01rr                      1-  502     	MOVR	_power,W
     004B 0903                      1-  503     	BTRSS	STATUS,2
     004C 3rrr                      1-  504     	LGOTO	_00144_DS_
                                    1-  505     	BANKSEL	_keyCount1
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1-  506     	MOVR	_keyCount1,W
     004F 0903                      1-  507     	BTRSS	STATUS,2
     0050 3rrr                      1-  508     	LGOTO	_00144_DS_
                                    1-  509     	BANKSEL	_sleepCount
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 05rr                      1-  510     	INCR	_sleepCount,F
                                    1-  511     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  512     ;;unsigned compare: left >= lit (0xC9=201), size=1
     0053 21C9                      1-  513     	MOVIA	0xc9
     0054 04rr                      1-  514     	SUBAR	_sleepCount,W
     0055 0803                      1-  515     	BTRSS	STATUS,0
     0056 3rrr                      1-  516     	LGOTO	_00144_DS_
                                    1-  517     	.line	122, "main.c"; 	gotoSleep();
     0057 2rrr                      1-  518     	LCALL	_gotoSleep
     0058 3rrr                      1-  519     	LGOTO	_00144_DS_
                                    1-  520     	.line	124, "main.c"; 	}
                                    1-  521     	RETURN	
     0059 0010                      3-   26 m1      ret
                                    1-  522     ; exit point of _main
                                    1-  524     ;***
                                    1-  525     ;  pBlock Stats: dbName = C
                                    1-  526     ;***
                                    1-  527     ;has an exit
                                    1-  528     ;; Starting pCode block
                                    1-  529     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  531     _gotoSleep:
                                    1-  532     ; 2 exit points
                                    1-  533     	.line	341, "main.c"; 	sleepCount = 0;
                                    1-  534     	BANKSEL	_sleepCount
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  535     	CLRR	_sleepCount
                                    1-  536     	.line	342, "main.c"; 	BWUCON = 0x30;		//PB5唤醒
     0002 2130                      1-  537     	MOVIA	0x30
     0003 00rr                      1-  538     	MOVAR	_BWUCON
                                    1-  539     	.line	343, "main.c"; 	INTE =  C_INT_PBKey;
     0004 2102                      1-  540     	MOVIA	0x02
     0005 00rr                      1-  541     	MOVAR	_INTE
                                    1-  542     	.line	344, "main.c"; 	PCON =  C_LVR_En;	
     0006 2108                      1-  543     	MOVIA	0x08
     0007 00rr                      1-  544     	MOVAR	_PCON
                                    1-  545     	.line	345, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0008 02rr                      1-  546     	CLRR	_INTF
                                    1-  547     	.line	346, "main.c"; 	CLRWDT();
     0009 0002                      1-  548     	clrwdt
                                    1-  549     	.line	347, "main.c"; 	SLEEP();
     000A 0001                      1-  550     	sleep
                                    1-  551     	.line	348, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     000B 2101                      1-  552     	MOVIA	0x01
     000C 00rr                      1-  553     	MOVAR	_INTE
                                    1-  554     	.line	349, "main.c"; 	INTF = 0;
     000D 02rr                      1-  555     	CLRR	_INTF
                                    1-  556     	.line	351, "main.c"; 	PCON = C_WDT_En | C_LVR_En ;				// Enable WDT ,  Enable LVR
     000E 2188                      1-  557     	MOVIA	0x88
     000F 00rr                      1-  558     	MOVAR	_PCON
                                    1-  559     	.line	352, "main.c"; 	}
                                    1-  560     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1-  561     ; exit point of _gotoSleep
                                    1-  563     ;***
                                    1-  564     ;  pBlock Stats: dbName = C
                                    1-  565     ;***
                                    1-  566     ;; Starting pCode block
                                    1-  567     .segment "code"; module=main, function=_motor1
     0000                           1-  569     _motor1:
                                    1-  570     ; 0 exit points
                                    1-  571     	.line	331, "main.c"; 	if(ledCount >= duty)
                                    1-  572     	BANKSEL	_duty
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1-  573     	MOVR	_duty,W
                                    1-  574     	BANKSEL	_ledCount
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1-  575     	SUBAR	_ledCount,W
     0004 0803                      1-  576     	BTRSS	STATUS,0
     0005 3rrr                      1-  577     	LGOTO	_00336_DS_
                                    1-  578     	.line	332, "main.c"; 	PORTA &= 0xFD;
     0006 1Crr                      1-  579     	BCR	_PORTA,1
     0007 3rrr                      1-  580     	LGOTO	_00337_DS_
     0008                           1-  581     _00336_DS_:
                                    1-  582     	.line	334, "main.c"; 	PORTA |= 0x02;
     0008 18rr                      1-  583     	BSR	_PORTA,1
                                    1-  584     ;;unsigned compare: left < lit (0x64=100), size=1
     0009                           1-  585     _00337_DS_:
                                    1-  586     	.line	335, "main.c"; 	if(ledCount >= 100)
     0009 2164                      1-  587     	MOVIA	0x64
                                    1-  588     	BANKSEL	_ledCount
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 04rr                      1-  589     	SUBAR	_ledCount,W
     000C 0C03                      1-  590     	BTRSC	STATUS,0
                                    1-  591     	.line	336, "main.c"; 	ledCount = 0;
     000D 02rr                      1-  592     	CLRR	_ledCount
                                    1-  593     	.line	337, "main.c"; 	}
                                    1-  594     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1-  596     ;***
                                    1-  597     ;  pBlock Stats: dbName = C
                                    1-  598     ;***
                                    1-  599     ;; Starting pCode block
                                    1-  600     .segment "code"; module=main, function=_motor2
     0000                           1-  602     _motor2:
                                    1-  603     ; 0 exit points
                                    1-  604     	.line	319, "main.c"; 	if(ledCount >= duty)
                                    1-  605     	BANKSEL	_duty
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1-  606     	MOVR	_duty,W
                                    1-  607     	BANKSEL	_ledCount
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1-  608     	SUBAR	_ledCount,W
     0004 0803                      1-  609     	BTRSS	STATUS,0
     0005 3rrr                      1-  610     	LGOTO	_00326_DS_
                                    1-  611     	.line	320, "main.c"; 	PORTB &= 0xBF;
     0006 1Frr                      1-  612     	BCR	_PORTB,6
     0007 3rrr                      1-  613     	LGOTO	_00327_DS_
     0008                           1-  614     _00326_DS_:
                                    1-  615     	.line	322, "main.c"; 	PORTB |= 0x40;
     0008 1Brr                      1-  616     	BSR	_PORTB,6
                                    1-  617     ;;unsigned compare: left < lit (0x64=100), size=1
     0009                           1-  618     _00327_DS_:
                                    1-  619     	.line	323, "main.c"; 	if(ledCount >= 100)
     0009 2164                      1-  620     	MOVIA	0x64
                                    1-  621     	BANKSEL	_ledCount
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 04rr                      1-  622     	SUBAR	_ledCount,W
     000C 0C03                      1-  623     	BTRSC	STATUS,0
                                    1-  624     	.line	324, "main.c"; 	ledCount = 0;
     000D 02rr                      1-  625     	CLRR	_ledCount
                                    1-  626     	.line	325, "main.c"; 	}
                                    1-  627     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1-  629     ;***
                                    1-  630     ;  pBlock Stats: dbName = C
                                    1-  631     ;***
                                    1-  632     ;has an exit
                                    1-  633     ;functions called:
                                    1-  634     ;   __gptrget1
                                    1-  635     ;   __gptrput1
                                    1-  636     ;   __gptrput1
                                    1-  637     ;   __gptrget1
                                    1-  638     ;   __gptrput1
                                    1-  639     ;   __gptrput1
                                    1-  640     ;   __gptrget1
                                    1-  641     ;   __gptrput1
                                    1-  642     ;   __gptrput1
                                    1-  643     ;   __gptrget1
                                    1-  644     ;   __gptrput1
                                    1-  645     ;   __gptrput1
                                    1-  646     ;7 compiler assigned registers:
                                    1-  647     ;   r0x1014
                                    1-  648     ;   STK00
                                    1-  649     ;   r0x1015
                                    1-  650     ;   STK01
                                    1-  651     ;   r0x1016
                                    1-  652     ;   STK02
                                    1-  653     ;   r0x1017
                                    1-  654     ;; Starting pCode block
                                    1-  655     .segment "code"; module=main, function=_keyRead2
                                    1-  657     ;local variable name mapping:
     0000                           1-  662     _keyRead2:
                                    1-  663     ; 2 exit points
                                    1-  664     	.line	294, "main.c"; 	char keyRead2(char KeyStatus,u8t* keyCount)	
                                    1-  665     	BANKSEL	r0x1014
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  666     	MOVAR	r0x1014
     0002 01rr                      1-  667     	MOVR	STK00,W
                                    1-  668     	BANKSEL	r0x1015
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  669     	MOVAR	r0x1015
     0005 01rr                      1-  670     	MOVR	STK01,W
                                    1-  671     	BANKSEL	r0x1016
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  672     	MOVAR	r0x1016
     0008 01rr                      1-  673     	MOVR	STK02,W
                                    1-  674     	BANKSEL	r0x1017
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  675     	MOVAR	r0x1017
                                    1-  676     	.line	296, "main.c"; 	if (KeyStatus)
                                    1-  677     	BANKSEL	r0x1014
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1-  678     	MOVR	r0x1014,W
     000D 0D03                      1-  679     	BTRSC	STATUS,2
     000E 3rrr                      1-  680     	LGOTO	_00318_DS_
                                    1-  681     	.line	298, "main.c"; 	(*keyCount)++;
                                    1-  682     	BANKSEL	r0x1017
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  683     	MOVR	r0x1017,W
     0011 00rr                      1-  684     	MOVAR	STK01
                                    1-  685     	BANKSEL	r0x1016
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1-  686     	MOVR	r0x1016,W
     0014 00rr                      1-  687     	MOVAR	STK00
                                    1-  688     	BANKSEL	r0x1015
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  689     	MOVR	r0x1015,W
     0017 2rrr                      1-  690     	LCALL	__gptrget1
                                    1-  691     	BANKSEL	r0x1014
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1-  692     	MOVAR	r0x1014
     001A 05rr                      1-  693     	INCR	r0x1014,F
     001B 01rr                      1-  694     	MOVR	r0x1014,W
     001C 00rr                      1-  695     	MOVAR	STK02
                                    1-  696     	BANKSEL	r0x1017
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  697     	MOVR	r0x1017,W
     001F 00rr                      1-  698     	MOVAR	STK01
                                    1-  699     	BANKSEL	r0x1016
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  700     	MOVR	r0x1016,W
     0022 00rr                      1-  701     	MOVAR	STK00
                                    1-  702     	BANKSEL	r0x1015
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  703     	MOVR	r0x1015,W
     0025 2rrr                      1-  704     	LCALL	__gptrput1
                                    1-  705     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  706     	.line	299, "main.c"; 	if(*keyCount >= 200)
     0026 21C8                      1-  707     	MOVIA	0xc8
                                    1-  708     	BANKSEL	r0x1014
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 04rr                      1-  709     	SUBAR	r0x1014,W
     0029 0803                      1-  710     	BTRSS	STATUS,0
     002A 3rrr                      1-  711     	LGOTO	_00319_DS_
                                    1-  712     	.line	301, "main.c"; 	*keyCount = 200;
     002B 21C8                      1-  713     	MOVIA	0xc8
     002C 00rr                      1-  714     	MOVAR	STK02
                                    1-  715     	BANKSEL	r0x1017
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  716     	MOVR	r0x1017,W
     002F 00rr                      1-  717     	MOVAR	STK01
                                    1-  718     	BANKSEL	r0x1016
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1-  719     	MOVR	r0x1016,W
     0032 00rr                      1-  720     	MOVAR	STK00
                                    1-  721     	BANKSEL	r0x1015
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  722     	MOVR	r0x1015,W
     0035 2rrr                      1-  723     	LCALL	__gptrput1
     0036 3rrr                      1-  724     	LGOTO	_00319_DS_
     0037                           1-  725     _00318_DS_:
                                    1-  726     	.line	306, "main.c"; 	if(*keyCount >= 8)
                                    1-  727     	BANKSEL	r0x1017
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1-  728     	MOVR	r0x1017,W
     0039 00rr                      1-  729     	MOVAR	STK01
                                    1-  730     	BANKSEL	r0x1016
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1-  731     	MOVR	r0x1016,W
     003C 00rr                      1-  732     	MOVAR	STK00
                                    1-  733     	BANKSEL	r0x1015
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1-  734     	MOVR	r0x1015,W
     003F 2rrr                      1-  735     	LCALL	__gptrget1
                                    1-  736     	BANKSEL	r0x1014
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 00rr                      1-  737     	MOVAR	r0x1014
                                    1-  738     ;;unsigned compare: left < lit (0x8=8), size=1
     0042 2108                      1-  739     	MOVIA	0x08
     0043 04rr                      1-  740     	SUBAR	r0x1014,W
     0044 0803                      1-  741     	BTRSS	STATUS,0
     0045 3rrr                      1-  742     	LGOTO	_00316_DS_
                                    1-  743     	.line	308, "main.c"; 	*keyCount = 0;
     0046 2100                      1-  744     	MOVIA	0x00
     0047 00rr                      1-  745     	MOVAR	STK02
                                    1-  746     	BANKSEL	r0x1017
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 01rr                      1-  747     	MOVR	r0x1017,W
     004A 00rr                      1-  748     	MOVAR	STK01
                                    1-  749     	BANKSEL	r0x1016
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1-  750     	MOVR	r0x1016,W
     004D 00rr                      1-  751     	MOVAR	STK00
                                    1-  752     	BANKSEL	r0x1015
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1-  753     	MOVR	r0x1015,W
     0050 2rrr                      1-  754     	LCALL	__gptrput1
                                    1-  755     	.line	309, "main.c"; 	return	1;
     0051 2101                      1-  756     	MOVIA	0x01
     0052 3rrr                      1-  757     	LGOTO	_00320_DS_
     0053                           1-  758     _00316_DS_:
                                    1-  759     	.line	311, "main.c"; 	*keyCount = 0;
     0053 2100                      1-  760     	MOVIA	0x00
     0054 00rr                      1-  761     	MOVAR	STK02
                                    1-  762     	BANKSEL	r0x1017
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1-  763     	MOVR	r0x1017,W
     0057 00rr                      1-  764     	MOVAR	STK01
                                    1-  765     	BANKSEL	r0x1016
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 01rr                      1-  766     	MOVR	r0x1016,W
     005A 00rr                      1-  767     	MOVAR	STK00
                                    1-  768     	BANKSEL	r0x1015
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 01rr                      1-  769     	MOVR	r0x1015,W
     005D 2rrr                      1-  770     	LCALL	__gptrput1
     005E                           1-  771     _00319_DS_:
                                    1-  772     	.line	313, "main.c"; 	return 0;
     005E 2100                      1-  773     	MOVIA	0x00
     005F                           1-  774     _00320_DS_:
                                    1-  775     	.line	314, "main.c"; 	}
                                    1-  776     	RETURN	
     005F 0010                      3-   26 m1      ret
                                    1-  777     ; exit point of _keyRead2
                                    1-  779     ;***
                                    1-  780     ;  pBlock Stats: dbName = C
                                    1-  781     ;***
                                    1-  782     ;has an exit
                                    1-  783     ;functions called:
                                    1-  784     ;   _keyRead2
                                    1-  785     ;   _keyRead2
                                    1-  786     ;   _keyRead2
                                    1-  787     ;   _keyRead2
                                    1-  788     ;   _keyRead2
                                    1-  789     ;   _keyRead2
                                    1-  790     ;   _keyRead2
                                    1-  791     ;   _keyRead2
                                    1-  792     ;   _keyRead2
                                    1-  793     ;   _keyRead2
                                    1-  794     ;7 compiler assigned registers:
                                    1-  795     ;   r0x1018
                                    1-  796     ;   r0x1019
                                    1-  797     ;   r0x101A
                                    1-  798     ;   r0x101B
                                    1-  799     ;   STK02
                                    1-  800     ;   STK01
                                    1-  801     ;   STK00
                                    1-  802     ;; Starting pCode block
                                    1-  803     .segment "code"; module=main, function=_keyCon
     0000                           1-  805     _keyCon:
                                    1-  806     ; 2 exit points
                                    1-  807     	.line	223, "main.c"; 	if(keyRead2(0x20&~PORTB,&keyCount1))
     0000 07rr                      1-  808     	COMR	_PORTB,W
                                    1-  809     	BANKSEL	r0x1018
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  810     	MOVAR	r0x1018
     0003 2120                      1-  811     	MOVIA	0x20
     0004 10rr                      1-  812     	ANDAR	r0x1018,F
     0005 21rr                      1-  813     	MOVIA	((_keyCount1 + 0) >> 8) & 0xff
                                    1-  814     	BANKSEL	r0x1019
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  815     	MOVAR	r0x1019
     0008 21rr                      1-  816     	MOVIA	(_keyCount1 + 0)
                                    1-  817     	BANKSEL	r0x101A
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  818     	MOVAR	r0x101A
                                    1-  819     	BANKSEL	r0x101B
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1-  820     	CLRR	r0x101B
                                    1-  821     	BANKSEL	r0x101A
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  822     	MOVR	r0x101A,W
     000F 00rr                      1-  823     	MOVAR	STK02
                                    1-  824     	BANKSEL	r0x1019
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1-  825     	MOVR	r0x1019,W
     0012 00rr                      1-  826     	MOVAR	STK01
     0013 2100                      1-  827     	MOVIA	0x00
     0014 00rr                      1-  828     	MOVAR	STK00
                                    1-  829     	BANKSEL	r0x1018
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  830     	MOVR	r0x1018,W
     0017 2rrr                      1-  831     	LCALL	_keyRead2
                                    1-  832     	BANKSEL	r0x1018
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1-  833     	MOVAR	r0x1018
     001A 01rr                      1-  834     	MOVR	r0x1018,W
     001B 0D03                      1-  835     	BTRSC	STATUS,2
     001C 3rrr                      1-  836     	LGOTO	_00283_DS_
                                    1-  837     	.line	226, "main.c"; 	count1s = 100;
     001D 2164                      1-  838     	MOVIA	0x64
                                    1-  839     	BANKSEL	_count1s
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  840     	MOVAR	_count1s
                                    1-  841     	.line	227, "main.c"; 	if(power)
                                    1-  842     	BANKSEL	_power
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  843     	MOVR	_power,W
     0022 0D03                      1-  844     	BTRSC	STATUS,2
     0023 3rrr                      1-  845     	LGOTO	_00280_DS_
                                    1-  846     	.line	229, "main.c"; 	power = 0;
     0024 02rr                      1-  847     	CLRR	_power
                                    1-  848     	.line	230, "main.c"; 	modeSpeed = 0;
                                    1-  849     	BANKSEL	_modeSpeed
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1-  850     	CLRR	_modeSpeed
                                    1-  851     	.line	231, "main.c"; 	modeStep = 0;
                                    1-  852     	BANKSEL	_modeStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1-  853     	CLRR	_modeStep
     0029 3rrr                      1-  854     	LGOTO	_00283_DS_
     002A                           1-  855     _00280_DS_:
                                    1-  856     	.line	235, "main.c"; 	modeStep = 1;
     002A 2101                      1-  857     	MOVIA	0x01
                                    1-  858     	BANKSEL	_modeStep
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 00rr                      1-  859     	MOVAR	_modeStep
                                    1-  860     	.line	236, "main.c"; 	modeSpeed = 1;
                                    1-  861     	BANKSEL	_modeSpeed
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1-  862     	MOVAR	_modeSpeed
                                    1-  863     	.line	237, "main.c"; 	power = 1;
                                    1-  864     	BANKSEL	_power
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 00rr                      1-  865     	MOVAR	_power
     0031                           1-  866     _00283_DS_:
                                    1-  867     	.line	241, "main.c"; 	if(power)
                                    1-  868     	BANKSEL	_power
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1-  869     	MOVR	_power,W
     0033 0D03                      1-  870     	BTRSC	STATUS,2
     0034 3rrr                      1-  871     	LGOTO	_00308_DS_
                                    1-  872     	.line	243, "main.c"; 	if(keyRead2(0x01&~PORTB,&keyCount2))
     0035 07rr                      1-  873     	COMR	_PORTB,W
                                    1-  874     	BANKSEL	r0x1018
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1-  875     	MOVAR	r0x1018
     0038 2101                      1-  876     	MOVIA	0x01
     0039 10rr                      1-  877     	ANDAR	r0x1018,F
     003A 21rr                      1-  878     	MOVIA	((_keyCount2 + 0) >> 8) & 0xff
                                    1-  879     	BANKSEL	r0x1019
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 00rr                      1-  880     	MOVAR	r0x1019
     003D 21rr                      1-  881     	MOVIA	(_keyCount2 + 0)
                                    1-  882     	BANKSEL	r0x101A
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 00rr                      1-  883     	MOVAR	r0x101A
                                    1-  884     	BANKSEL	r0x101B
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 02rr                      1-  885     	CLRR	r0x101B
                                    1-  886     	BANKSEL	r0x101A
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1-  887     	MOVR	r0x101A,W
     0044 00rr                      1-  888     	MOVAR	STK02
                                    1-  889     	BANKSEL	r0x1019
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1-  890     	MOVR	r0x1019,W
     0047 00rr                      1-  891     	MOVAR	STK01
     0048 2100                      1-  892     	MOVIA	0x00
     0049 00rr                      1-  893     	MOVAR	STK00
                                    1-  894     	BANKSEL	r0x1018
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 01rr                      1-  895     	MOVR	r0x1018,W
     004C 2rrr                      1-  896     	LCALL	_keyRead2
                                    1-  897     	BANKSEL	r0x1018
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1-  898     	MOVAR	r0x1018
     004F 01rr                      1-  899     	MOVR	r0x1018,W
     0050 0D03                      1-  900     	BTRSC	STATUS,2
     0051 3rrr                      1-  901     	LGOTO	_00290_DS_
                                    1-  902     	.line	246, "main.c"; 	count1s = 100;
     0052 2164                      1-  903     	MOVIA	0x64
                                    1-  904     	BANKSEL	_count1s
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1-  905     	MOVAR	_count1s
                                    1-  906     	.line	247, "main.c"; 	if(power == 1)
                                    1-  907     	BANKSEL	_power
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1-  908     	MOVR	_power,W
     0057 2401                      1-  909     	XORIA	0x01
     0058 0903                      1-  910     	BTRSS	STATUS,2
     0059 3rrr                      1-  911     	LGOTO	_00287_DS_
                                    1-  912     	.line	249, "main.c"; 	timeCount = 0;
                                    1-  913     	BANKSEL	_timeCount
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 02rr                      1-  914     	CLRR	_timeCount
     005C 02rr                      1-  915     	CLRR	(_timeCount + 1)
                                    1-  916     	.line	250, "main.c"; 	if(++modeStep > 5)
                                    1-  917     	BANKSEL	_modeStep
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 05rr                      1-  918     	INCR	_modeStep,F
                                    1-  919     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  920     ;;unsigned compare: left >= lit (0x6=6), size=1
     005F 2106                      1-  921     	MOVIA	0x06
     0060 04rr                      1-  922     	SUBAR	_modeStep,W
     0061 0803                      1-  923     	BTRSS	STATUS,0
     0062 3rrr                      1-  924     	LGOTO	_00290_DS_
                                    1-  925     	.line	251, "main.c"; 	modeStep = 1;
     0063 2101                      1-  926     	MOVIA	0x01
     0064 00rr                      1-  927     	MOVAR	_modeStep
     0065 3rrr                      1-  928     	LGOTO	_00290_DS_
     0066                           1-  929     _00287_DS_:
                                    1-  930     	.line	255, "main.c"; 	power = 1;
     0066 2101                      1-  931     	MOVIA	0x01
                                    1-  932     	BANKSEL	_power
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1-  933     	MOVAR	_power
     0069                           1-  934     _00290_DS_:
                                    1-  935     	.line	259, "main.c"; 	if(keyRead2(0x02&~PORTB,&keyCount3))
     0069 07rr                      1-  936     	COMR	_PORTB,W
                                    1-  937     	BANKSEL	r0x1018
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 00rr                      1-  938     	MOVAR	r0x1018
     006C 2102                      1-  939     	MOVIA	0x02
     006D 10rr                      1-  940     	ANDAR	r0x1018,F
     006E 21rr                      1-  941     	MOVIA	((_keyCount3 + 0) >> 8) & 0xff
                                    1-  942     	BANKSEL	r0x1019
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 00rr                      1-  943     	MOVAR	r0x1019
     0071 21rr                      1-  944     	MOVIA	(_keyCount3 + 0)
                                    1-  945     	BANKSEL	r0x101A
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 00rr                      1-  946     	MOVAR	r0x101A
                                    1-  947     	BANKSEL	r0x101B
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 02rr                      1-  948     	CLRR	r0x101B
                                    1-  949     	BANKSEL	r0x101A
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 01rr                      1-  950     	MOVR	r0x101A,W
     0078 00rr                      1-  951     	MOVAR	STK02
                                    1-  952     	BANKSEL	r0x1019
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 01rr                      1-  953     	MOVR	r0x1019,W
     007B 00rr                      1-  954     	MOVAR	STK01
     007C 2100                      1-  955     	MOVIA	0x00
     007D 00rr                      1-  956     	MOVAR	STK00
                                    1-  957     	BANKSEL	r0x1018
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 01rr                      1-  958     	MOVR	r0x1018,W
     0080 2rrr                      1-  959     	LCALL	_keyRead2
                                    1-  960     	BANKSEL	r0x1018
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 00rr                      1-  961     	MOVAR	r0x1018
     0083 01rr                      1-  962     	MOVR	r0x1018,W
     0084 0D03                      1-  963     	BTRSC	STATUS,2
     0085 3rrr                      1-  964     	LGOTO	_00297_DS_
                                    1-  965     	.line	262, "main.c"; 	count1s = 100;
     0086 2164                      1-  966     	MOVIA	0x64
                                    1-  967     	BANKSEL	_count1s
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 00rr                      1-  968     	MOVAR	_count1s
                                    1-  969     	.line	263, "main.c"; 	if(power == 2)
                                    1-  970     	BANKSEL	_power
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 01rr                      1-  971     	MOVR	_power,W
     008B 2402                      1-  972     	XORIA	0x02
     008C 0903                      1-  973     	BTRSS	STATUS,2
     008D 3rrr                      1-  974     	LGOTO	_00294_DS_
                                    1-  975     	.line	265, "main.c"; 	timeCount = 0;
                                    1-  976     	BANKSEL	_timeCount
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 02rr                      1-  977     	CLRR	_timeCount
     0090 02rr                      1-  978     	CLRR	(_timeCount + 1)
                                    1-  979     	.line	266, "main.c"; 	if(++modeStep > 5)
                                    1-  980     	BANKSEL	_modeStep
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 05rr                      1-  981     	INCR	_modeStep,F
                                    1-  982     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  983     ;;unsigned compare: left >= lit (0x6=6), size=1
     0093 2106                      1-  984     	MOVIA	0x06
     0094 04rr                      1-  985     	SUBAR	_modeStep,W
     0095 0803                      1-  986     	BTRSS	STATUS,0
     0096 3rrr                      1-  987     	LGOTO	_00297_DS_
                                    1-  988     	.line	267, "main.c"; 	modeStep = 1;
     0097 2101                      1-  989     	MOVIA	0x01
     0098 00rr                      1-  990     	MOVAR	_modeStep
     0099 3rrr                      1-  991     	LGOTO	_00297_DS_
     009A                           1-  992     _00294_DS_:
                                    1-  993     	.line	271, "main.c"; 	power = 2;
     009A 2102                      1-  994     	MOVIA	0x02
                                    1-  995     	BANKSEL	_power
     009B rrrr                      3-   71 m1      .banksel ram_address
     009C 00rr                      1-  996     	MOVAR	_power
     009D                           1-  997     _00297_DS_:
                                    1-  998     	.line	275, "main.c"; 	if(keyRead2(0x04&~PORTB,&keyCount4))
     009D 07rr                      1-  999     	COMR	_PORTB,W
                                    1- 1000     	BANKSEL	r0x1018
     009E rrrr                      3-   71 m1      .banksel ram_address
     009F 00rr                      1- 1001     	MOVAR	r0x1018
     00A0 2104                      1- 1002     	MOVIA	0x04
     00A1 10rr                      1- 1003     	ANDAR	r0x1018,F
     00A2 21rr                      1- 1004     	MOVIA	((_keyCount4 + 0) >> 8) & 0xff
                                    1- 1005     	BANKSEL	r0x1019
     00A3 rrrr                      3-   71 m1      .banksel ram_address
     00A4 00rr                      1- 1006     	MOVAR	r0x1019
     00A5 21rr                      1- 1007     	MOVIA	(_keyCount4 + 0)
                                    1- 1008     	BANKSEL	r0x101A
     00A6 rrrr                      3-   71 m1      .banksel ram_address
     00A7 00rr                      1- 1009     	MOVAR	r0x101A
                                    1- 1010     	BANKSEL	r0x101B
     00A8 rrrr                      3-   71 m1      .banksel ram_address
     00A9 02rr                      1- 1011     	CLRR	r0x101B
                                    1- 1012     	BANKSEL	r0x101A
     00AA rrrr                      3-   71 m1      .banksel ram_address
     00AB 01rr                      1- 1013     	MOVR	r0x101A,W
     00AC 00rr                      1- 1014     	MOVAR	STK02
                                    1- 1015     	BANKSEL	r0x1019
     00AD rrrr                      3-   71 m1      .banksel ram_address
     00AE 01rr                      1- 1016     	MOVR	r0x1019,W
     00AF 00rr                      1- 1017     	MOVAR	STK01
     00B0 2100                      1- 1018     	MOVIA	0x00
     00B1 00rr                      1- 1019     	MOVAR	STK00
                                    1- 1020     	BANKSEL	r0x1018
     00B2 rrrr                      3-   71 m1      .banksel ram_address
     00B3 01rr                      1- 1021     	MOVR	r0x1018,W
     00B4 2rrr                      1- 1022     	LCALL	_keyRead2
                                    1- 1023     	BANKSEL	r0x1018
     00B5 rrrr                      3-   71 m1      .banksel ram_address
     00B6 00rr                      1- 1024     	MOVAR	r0x1018
     00B7 01rr                      1- 1025     	MOVR	r0x1018,W
     00B8 0D03                      1- 1026     	BTRSC	STATUS,2
     00B9 3rrr                      1- 1027     	LGOTO	_00301_DS_
                                    1- 1028     	.line	278, "main.c"; 	count1s = 100;
     00BA 2164                      1- 1029     	MOVIA	0x64
                                    1- 1030     	BANKSEL	_count1s
     00BB rrrr                      3-   71 m1      .banksel ram_address
     00BC 00rr                      1- 1031     	MOVAR	_count1s
                                    1- 1032     	.line	279, "main.c"; 	if(++modeSpeed > 5)
                                    1- 1033     	BANKSEL	_modeSpeed
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 05rr                      1- 1034     	INCR	_modeSpeed,F
                                    1- 1035     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1036     ;;unsigned compare: left >= lit (0x6=6), size=1
     00BF 2106                      1- 1037     	MOVIA	0x06
     00C0 04rr                      1- 1038     	SUBAR	_modeSpeed,W
     00C1 0803                      1- 1039     	BTRSS	STATUS,0
     00C2 3rrr                      1- 1040     	LGOTO	_00301_DS_
                                    1- 1041     	.line	280, "main.c"; 	modeSpeed = 5;
     00C3 2105                      1- 1042     	MOVIA	0x05
     00C4 00rr                      1- 1043     	MOVAR	_modeSpeed
     00C5                           1- 1044     _00301_DS_:
                                    1- 1045     	.line	283, "main.c"; 	if(keyRead2(0x08&~PORTA,&keyCount5))
     00C5 07rr                      1- 1046     	COMR	_PORTA,W
                                    1- 1047     	BANKSEL	r0x1018
     00C6 rrrr                      3-   71 m1      .banksel ram_address
     00C7 00rr                      1- 1048     	MOVAR	r0x1018
     00C8 2108                      1- 1049     	MOVIA	0x08
     00C9 10rr                      1- 1050     	ANDAR	r0x1018,F
     00CA 21rr                      1- 1051     	MOVIA	((_keyCount5 + 0) >> 8) & 0xff
                                    1- 1052     	BANKSEL	r0x1019
     00CB rrrr                      3-   71 m1      .banksel ram_address
     00CC 00rr                      1- 1053     	MOVAR	r0x1019
     00CD 21rr                      1- 1054     	MOVIA	(_keyCount5 + 0)
                                    1- 1055     	BANKSEL	r0x101A
     00CE rrrr                      3-   71 m1      .banksel ram_address
     00CF 00rr                      1- 1056     	MOVAR	r0x101A
                                    1- 1057     	BANKSEL	r0x101B
     00D0 rrrr                      3-   71 m1      .banksel ram_address
     00D1 02rr                      1- 1058     	CLRR	r0x101B
                                    1- 1059     	BANKSEL	r0x101A
     00D2 rrrr                      3-   71 m1      .banksel ram_address
     00D3 01rr                      1- 1060     	MOVR	r0x101A,W
     00D4 00rr                      1- 1061     	MOVAR	STK02
                                    1- 1062     	BANKSEL	r0x1019
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 01rr                      1- 1063     	MOVR	r0x1019,W
     00D7 00rr                      1- 1064     	MOVAR	STK01
     00D8 2100                      1- 1065     	MOVIA	0x00
     00D9 00rr                      1- 1066     	MOVAR	STK00
                                    1- 1067     	BANKSEL	r0x1018
     00DA rrrr                      3-   71 m1      .banksel ram_address
     00DB 01rr                      1- 1068     	MOVR	r0x1018,W
     00DC 2rrr                      1- 1069     	LCALL	_keyRead2
                                    1- 1070     	BANKSEL	r0x1018
     00DD rrrr                      3-   71 m1      .banksel ram_address
     00DE 00rr                      1- 1071     	MOVAR	r0x1018
     00DF 01rr                      1- 1072     	MOVR	r0x1018,W
     00E0 0D03                      1- 1073     	BTRSC	STATUS,2
     00E1 3rrr                      1- 1074     	LGOTO	_00308_DS_
                                    1- 1075     	.line	286, "main.c"; 	count1s = 100;
     00E2 2164                      1- 1076     	MOVIA	0x64
                                    1- 1077     	BANKSEL	_count1s
     00E3 rrrr                      3-   71 m1      .banksel ram_address
     00E4 00rr                      1- 1078     	MOVAR	_count1s
                                    1- 1079     	.line	287, "main.c"; 	if(--modeSpeed < 1)
                                    1- 1080     	BANKSEL	_modeSpeed
     00E5 rrrr                      3-   71 m1      .banksel ram_address
     00E6 06rr                      1- 1081     	DECR	_modeSpeed,F
                                    1- 1082     ;;unsigned compare: left < lit (0x1=1), size=1
     00E7 2101                      1- 1083     	MOVIA	0x01
     00E8 04rr                      1- 1084     	SUBAR	_modeSpeed,W
     00E9 0C03                      1- 1085     	BTRSC	STATUS,0
     00EA 3rrr                      1- 1086     	LGOTO	_00308_DS_
                                    1- 1087     	.line	288, "main.c"; 	modeSpeed = 1;
     00EB 2101                      1- 1088     	MOVIA	0x01
     00EC 00rr                      1- 1089     	MOVAR	_modeSpeed
     00ED                           1- 1090     _00308_DS_:
                                    1- 1091     	.line	292, "main.c"; 	}
                                    1- 1092     	RETURN	
     00ED 0010                      3-   26 m1      ret
                                    1- 1093     ; exit point of _keyCon
                                    1- 1095     ;***
                                    1- 1096     ;  pBlock Stats: dbName = C
                                    1- 1097     ;***
                                    1- 1098     ;has an exit
                                    1- 1099     ;functions called:
                                    1- 1100     ;   __moduint
                                    1- 1101     ;   __moduint
                                    1- 1102     ;   __moduint
                                    1- 1103     ;   __moduint
                                    1- 1104     ;   __moduint
                                    1- 1105     ;   __moduint
                                    1- 1106     ;5 compiler assigned registers:
                                    1- 1107     ;   r0x101C
                                    1- 1108     ;   STK02
                                    1- 1109     ;   STK01
                                    1- 1110     ;   STK00
                                    1- 1111     ;   r0x101D
                                    1- 1112     ;; Starting pCode block
                                    1- 1113     .segment "code"; module=main, function=_workCon
     0000                           1- 1115     _workCon:
                                    1- 1116     ; 2 exit points
                                    1- 1117     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1- 1118     	.line	140, "main.c"; 	switch(modeSpeed)
     0000 2101                      1- 1119     	MOVIA	0x01
                                    1- 1120     	BANKSEL	_modeSpeed
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1121     	SUBAR	_modeSpeed,W
     0003 0803                      1- 1122     	BTRSS	STATUS,0
     0004 3rrr                      1- 1123     	LGOTO	_00162_DS_
                                    1- 1124     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1125     ;;unsigned compare: left >= lit (0x6=6), size=1
     0005 2106                      1- 1126     	MOVIA	0x06
     0006 04rr                      1- 1127     	SUBAR	_modeSpeed,W
     0007 0C03                      1- 1128     	BTRSC	STATUS,0
     0008 3rrr                      1- 1129     	LGOTO	_00162_DS_
     0009 06rr                      1- 1130     	DECR	_modeSpeed,W
                                    1- 1131     	BANKSEL	r0x101C
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1132     	MOVAR	r0x101C
     000C 21rr                      1- 1133     	MOVIA	((_00258_DS_ >> 8) & 0xff)
     000D 008A                      1- 1134     	MOVAR	PCHBUF
     000E 01rr                      1- 1135     	MOVR	r0x101C,W
     000F 25rr                      1- 1136     	ADDIA	_00258_DS_
     0010 0C03                      1- 1137     	BTRSC	STATUS,0
     0011 058A                      1- 1138     	INCR	PCHBUF,F
     0012 0082                      1- 1139     	MOVAR	PCL
     0013                           1- 1140     _00258_DS_:
     0013 3rrr                      1- 1141     	LGOTO	_00157_DS_
     0014 3rrr                      1- 1142     	LGOTO	_00158_DS_
     0015 3rrr                      1- 1143     	LGOTO	_00159_DS_
     0016 3rrr                      1- 1144     	LGOTO	_00160_DS_
     0017 3rrr                      1- 1145     	LGOTO	_00161_DS_
     0018                           1- 1146     _00157_DS_:
                                    1- 1147     	.line	143, "main.c"; 	duty = 35;
     0018 2123                      1- 1148     	MOVIA	0x23
                                    1- 1149     	BANKSEL	_duty
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 1150     	MOVAR	_duty
                                    1- 1151     	.line	144, "main.c"; 	break;
     001B 3rrr                      1- 1152     	LGOTO	_00162_DS_
     001C                           1- 1153     _00158_DS_:
                                    1- 1154     	.line	146, "main.c"; 	duty = 50;
     001C 2132                      1- 1155     	MOVIA	0x32
                                    1- 1156     	BANKSEL	_duty
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1157     	MOVAR	_duty
                                    1- 1158     	.line	147, "main.c"; 	break;
     001F 3rrr                      1- 1159     	LGOTO	_00162_DS_
     0020                           1- 1160     _00159_DS_:
                                    1- 1161     	.line	149, "main.c"; 	duty = 65;
     0020 2141                      1- 1162     	MOVIA	0x41
                                    1- 1163     	BANKSEL	_duty
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 00rr                      1- 1164     	MOVAR	_duty
                                    1- 1165     	.line	150, "main.c"; 	break;
     0023 3rrr                      1- 1166     	LGOTO	_00162_DS_
     0024                           1- 1167     _00160_DS_:
                                    1- 1168     	.line	152, "main.c"; 	duty = 80;
     0024 2150                      1- 1169     	MOVIA	0x50
                                    1- 1170     	BANKSEL	_duty
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 00rr                      1- 1171     	MOVAR	_duty
                                    1- 1172     	.line	153, "main.c"; 	break;
     0027 3rrr                      1- 1173     	LGOTO	_00162_DS_
     0028                           1- 1174     _00161_DS_:
                                    1- 1175     	.line	155, "main.c"; 	duty = 100;
     0028 2164                      1- 1176     	MOVIA	0x64
                                    1- 1177     	BANKSEL	_duty
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 00rr                      1- 1178     	MOVAR	_duty
                                    1- 1179     ;;unsigned compare: left < lit (0x1=1), size=1
     002B                           1- 1180     _00162_DS_:
                                    1- 1181     	.line	159, "main.c"; 	switch(modeStep)
     002B 2101                      1- 1182     	MOVIA	0x01
                                    1- 1183     	BANKSEL	_modeStep
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 04rr                      1- 1184     	SUBAR	_modeStep,W
     002E 0803                      1- 1185     	BTRSS	STATUS,0
     002F 3rrr                      1- 1186     	LGOTO	_00203_DS_
                                    1- 1187     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1188     ;;unsigned compare: left >= lit (0x6=6), size=1
     0030 2106                      1- 1189     	MOVIA	0x06
     0031 04rr                      1- 1190     	SUBAR	_modeStep,W
     0032 0C03                      1- 1191     	BTRSC	STATUS,0
     0033 3rrr                      1- 1192     	LGOTO	_00203_DS_
     0034 06rr                      1- 1193     	DECR	_modeStep,W
                                    1- 1194     	BANKSEL	r0x101C
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 00rr                      1- 1195     	MOVAR	r0x101C
     0037 21rr                      1- 1196     	MOVIA	((_00261_DS_ >> 8) & 0xff)
     0038 008A                      1- 1197     	MOVAR	PCHBUF
     0039 01rr                      1- 1198     	MOVR	r0x101C,W
     003A 25rr                      1- 1199     	ADDIA	_00261_DS_
     003B 0C03                      1- 1200     	BTRSC	STATUS,0
     003C 058A                      1- 1201     	INCR	PCHBUF,F
     003D 0082                      1- 1202     	MOVAR	PCL
     003E                           1- 1203     _00261_DS_:
     003E 3rrr                      1- 1204     	LGOTO	_00163_DS_
     003F 3rrr                      1- 1205     	LGOTO	_00164_DS_
     0040 3rrr                      1- 1206     	LGOTO	_00170_DS_
     0041 3rrr                      1- 1207     	LGOTO	_00176_DS_
     0042 3rrr                      1- 1208     	LGOTO	_00185_DS_
     0043                           1- 1209     _00163_DS_:
                                    1- 1210     	.line	162, "main.c"; 	motorEn = 1;
     0043 2101                      1- 1211     	MOVIA	0x01
                                    1- 1212     	BANKSEL	_motorEn
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 00rr                      1- 1213     	MOVAR	_motorEn
                                    1- 1214     	.line	163, "main.c"; 	break;
     0046 3rrr                      1- 1215     	LGOTO	_00203_DS_
     0047                           1- 1216     _00164_DS_:
                                    1- 1217     	.line	165, "main.c"; 	if(++timeCount >= 39)
                                    1- 1218     	BANKSEL	_timeCount
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 05rr                      1- 1219     	INCR	_timeCount,F
     0049 0D03                      1- 1220     	BTRSC	STATUS,2
     004A 05rr                      1- 1221     	INCR	(_timeCount + 1),F
                                    1- 1222     ;;unsigned compare: left < lit (0x27=39), size=2
     004B 2100                      1- 1223     	MOVIA	0x00
     004C 04rr                      1- 1224     	SUBAR	(_timeCount + 1),W
     004D 0903                      1- 1225     	BTRSS	STATUS,2
     004E 3rrr                      1- 1226     	LGOTO	_00262_DS_
     004F 2127                      1- 1227     	MOVIA	0x27
     0050 04rr                      1- 1228     	SUBAR	_timeCount,W
     0051                           1- 1229     _00262_DS_:
     0051 0803                      1- 1230     	BTRSS	STATUS,0
     0052 3rrr                      1- 1231     	LGOTO	_00166_DS_
                                    1- 1232     	.line	166, "main.c"; 	timeCount = 0;
                                    1- 1233     	BANKSEL	_timeCount
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 02rr                      1- 1234     	CLRR	_timeCount
     0055 02rr                      1- 1235     	CLRR	(_timeCount + 1)
                                    1- 1236     ;;unsigned compare: left < lit (0x11=17), size=2
     0056                           1- 1237     _00166_DS_:
                                    1- 1238     	.line	167, "main.c"; 	if(timeCount < 17)
     0056 2100                      1- 1239     	MOVIA	0x00
                                    1- 1240     	BANKSEL	_timeCount
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 04rr                      1- 1241     	SUBAR	(_timeCount + 1),W
     0059 0903                      1- 1242     	BTRSS	STATUS,2
     005A 3rrr                      1- 1243     	LGOTO	_00263_DS_
     005B 2111                      1- 1244     	MOVIA	0x11
     005C 04rr                      1- 1245     	SUBAR	_timeCount,W
     005D                           1- 1246     _00263_DS_:
     005D 0C03                      1- 1247     	BTRSC	STATUS,0
     005E 3rrr                      1- 1248     	LGOTO	_00168_DS_
                                    1- 1249     	.line	168, "main.c"; 	motorEn = 1;
     005F 2101                      1- 1250     	MOVIA	0x01
                                    1- 1251     	BANKSEL	_motorEn
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 00rr                      1- 1252     	MOVAR	_motorEn
     0062 3rrr                      1- 1253     	LGOTO	_00203_DS_
     0063                           1- 1254     _00168_DS_:
                                    1- 1255     	.line	170, "main.c"; 	motorEn = 0;
                                    1- 1256     	BANKSEL	_motorEn
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 02rr                      1- 1257     	CLRR	_motorEn
                                    1- 1258     	.line	171, "main.c"; 	break;
     0065 3rrr                      1- 1259     	LGOTO	_00203_DS_
     0066                           1- 1260     _00170_DS_:
                                    1- 1261     	.line	173, "main.c"; 	if(++timeCount >= 18)
                                    1- 1262     	BANKSEL	_timeCount
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 05rr                      1- 1263     	INCR	_timeCount,F
     0068 0D03                      1- 1264     	BTRSC	STATUS,2
     0069 05rr                      1- 1265     	INCR	(_timeCount + 1),F
                                    1- 1266     ;;unsigned compare: left < lit (0x12=18), size=2
     006A 2100                      1- 1267     	MOVIA	0x00
     006B 04rr                      1- 1268     	SUBAR	(_timeCount + 1),W
     006C 0903                      1- 1269     	BTRSS	STATUS,2
     006D 3rrr                      1- 1270     	LGOTO	_00264_DS_
     006E 2112                      1- 1271     	MOVIA	0x12
     006F 04rr                      1- 1272     	SUBAR	_timeCount,W
     0070                           1- 1273     _00264_DS_:
     0070 0803                      1- 1274     	BTRSS	STATUS,0
     0071 3rrr                      1- 1275     	LGOTO	_00172_DS_
                                    1- 1276     	.line	174, "main.c"; 	timeCount = 0;
                                    1- 1277     	BANKSEL	_timeCount
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 02rr                      1- 1278     	CLRR	_timeCount
     0074 02rr                      1- 1279     	CLRR	(_timeCount + 1)
                                    1- 1280     ;;unsigned compare: left < lit (0x8=8), size=2
     0075                           1- 1281     _00172_DS_:
                                    1- 1282     	.line	175, "main.c"; 	if(timeCount < 8)
     0075 2100                      1- 1283     	MOVIA	0x00
                                    1- 1284     	BANKSEL	_timeCount
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 04rr                      1- 1285     	SUBAR	(_timeCount + 1),W
     0078 0903                      1- 1286     	BTRSS	STATUS,2
     0079 3rrr                      1- 1287     	LGOTO	_00265_DS_
     007A 2108                      1- 1288     	MOVIA	0x08
     007B 04rr                      1- 1289     	SUBAR	_timeCount,W
     007C                           1- 1290     _00265_DS_:
     007C 0C03                      1- 1291     	BTRSC	STATUS,0
     007D 3rrr                      1- 1292     	LGOTO	_00174_DS_
                                    1- 1293     	.line	176, "main.c"; 	motorEn = 1;
     007E 2101                      1- 1294     	MOVIA	0x01
                                    1- 1295     	BANKSEL	_motorEn
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 00rr                      1- 1296     	MOVAR	_motorEn
     0081 3rrr                      1- 1297     	LGOTO	_00203_DS_
     0082                           1- 1298     _00174_DS_:
                                    1- 1299     	.line	178, "main.c"; 	motorEn = 0;
                                    1- 1300     	BANKSEL	_motorEn
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 02rr                      1- 1301     	CLRR	_motorEn
                                    1- 1302     	.line	179, "main.c"; 	break;
     0084 3rrr                      1- 1303     	LGOTO	_00203_DS_
     0085                           1- 1304     _00176_DS_:
                                    1- 1305     	.line	181, "main.c"; 	if(++timeCount >= 259)
                                    1- 1306     	BANKSEL	_timeCount
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 05rr                      1- 1307     	INCR	_timeCount,F
     0087 0D03                      1- 1308     	BTRSC	STATUS,2
     0088 05rr                      1- 1309     	INCR	(_timeCount + 1),F
                                    1- 1310     ;;unsigned compare: left < lit (0x103=259), size=2
     0089 2101                      1- 1311     	MOVIA	0x01
     008A 04rr                      1- 1312     	SUBAR	(_timeCount + 1),W
     008B 0903                      1- 1313     	BTRSS	STATUS,2
     008C 3rrr                      1- 1314     	LGOTO	_00266_DS_
     008D 2103                      1- 1315     	MOVIA	0x03
     008E 04rr                      1- 1316     	SUBAR	_timeCount,W
     008F                           1- 1317     _00266_DS_:
     008F 0803                      1- 1318     	BTRSS	STATUS,0
     0090 3rrr                      1- 1319     	LGOTO	_00178_DS_
                                    1- 1320     	.line	182, "main.c"; 	timeCount = 0;
                                    1- 1321     	BANKSEL	_timeCount
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 02rr                      1- 1322     	CLRR	_timeCount
     0093 02rr                      1- 1323     	CLRR	(_timeCount + 1)
                                    1- 1324     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1325     ;;unsigned compare: left >= lit (0xAB=171), size=2
     0094                           1- 1326     _00178_DS_:
                                    1- 1327     	.line	183, "main.c"; 	if(timeCount > 170)
     0094 2100                      1- 1328     	MOVIA	0x00
                                    1- 1329     	BANKSEL	_timeCount
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 04rr                      1- 1330     	SUBAR	(_timeCount + 1),W
     0097 0903                      1- 1331     	BTRSS	STATUS,2
     0098 3rrr                      1- 1332     	LGOTO	_00267_DS_
     0099 21AB                      1- 1333     	MOVIA	0xab
     009A 04rr                      1- 1334     	SUBAR	_timeCount,W
     009B                           1- 1335     _00267_DS_:
     009B 0803                      1- 1336     	BTRSS	STATUS,0
     009C 3rrr                      1- 1337     	LGOTO	_00183_DS_
                                    1- 1338     	.line	184, "main.c"; 	motorEn = 1;
     009D 2101                      1- 1339     	MOVIA	0x01
                                    1- 1340     	BANKSEL	_motorEn
     009E rrrr                      3-   71 m1      .banksel ram_address
     009F 00rr                      1- 1341     	MOVAR	_motorEn
     00A0 3rrr                      1- 1342     	LGOTO	_00203_DS_
     00A1                           1- 1343     _00183_DS_:
                                    1- 1344     	.line	187, "main.c"; 	if((timeCount % 17) > 9)
     00A1 2111                      1- 1345     	MOVIA	0x11
     00A2 00rr                      1- 1346     	MOVAR	STK02
     00A3 2100                      1- 1347     	MOVIA	0x00
     00A4 00rr                      1- 1348     	MOVAR	STK01
                                    1- 1349     	BANKSEL	_timeCount
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 01rr                      1- 1350     	MOVR	_timeCount,W
     00A7 00rr                      1- 1351     	MOVAR	STK00
     00A8 01rr                      1- 1352     	MOVR	(_timeCount + 1),W
     00A9 2rrr                      1- 1353     	LCALL	__moduint
                                    1- 1354     	BANKSEL	r0x101D
     00AA rrrr                      3-   71 m1      .banksel ram_address
     00AB 00rr                      1- 1355     	MOVAR	r0x101D
     00AC 01rr                      1- 1356     	MOVR	STK00,W
                                    1- 1357     	BANKSEL	r0x101C
     00AD rrrr                      3-   71 m1      .banksel ram_address
     00AE 00rr                      1- 1358     	MOVAR	r0x101C
                                    1- 1359     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1360     ;;unsigned compare: left >= lit (0xA=10), size=2
     00AF 2100                      1- 1361     	MOVIA	0x00
                                    1- 1362     	BANKSEL	r0x101D
     00B0 rrrr                      3-   71 m1      .banksel ram_address
     00B1 04rr                      1- 1363     	SUBAR	r0x101D,W
     00B2 0903                      1- 1364     	BTRSS	STATUS,2
     00B3 3rrr                      1- 1365     	LGOTO	_00268_DS_
     00B4 210A                      1- 1366     	MOVIA	0x0a
                                    1- 1367     	BANKSEL	r0x101C
     00B5 rrrr                      3-   71 m1      .banksel ram_address
     00B6 04rr                      1- 1368     	SUBAR	r0x101C,W
     00B7                           1- 1369     _00268_DS_:
     00B7 0803                      1- 1370     	BTRSS	STATUS,0
     00B8 3rrr                      1- 1371     	LGOTO	_00180_DS_
                                    1- 1372     	.line	188, "main.c"; 	motorEn = 1;
     00B9 2101                      1- 1373     	MOVIA	0x01
                                    1- 1374     	BANKSEL	_motorEn
     00BA rrrr                      3-   71 m1      .banksel ram_address
     00BB 00rr                      1- 1375     	MOVAR	_motorEn
     00BC 3rrr                      1- 1376     	LGOTO	_00203_DS_
     00BD                           1- 1377     _00180_DS_:
                                    1- 1378     	.line	190, "main.c"; 	motorEn = 0;
                                    1- 1379     	BANKSEL	_motorEn
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 02rr                      1- 1380     	CLRR	_motorEn
                                    1- 1381     	.line	192, "main.c"; 	break;
     00BF 3rrr                      1- 1382     	LGOTO	_00203_DS_
     00C0                           1- 1383     _00185_DS_:
                                    1- 1384     	.line	194, "main.c"; 	if(++timeCount >= 889)
                                    1- 1385     	BANKSEL	_timeCount
     00C0 rrrr                      3-   71 m1      .banksel ram_address
     00C1 05rr                      1- 1386     	INCR	_timeCount,F
     00C2 0D03                      1- 1387     	BTRSC	STATUS,2
     00C3 05rr                      1- 1388     	INCR	(_timeCount + 1),F
                                    1- 1389     ;;unsigned compare: left < lit (0x379=889), size=2
     00C4 2103                      1- 1390     	MOVIA	0x03
     00C5 04rr                      1- 1391     	SUBAR	(_timeCount + 1),W
     00C6 0903                      1- 1392     	BTRSS	STATUS,2
     00C7 3rrr                      1- 1393     	LGOTO	_00269_DS_
     00C8 2179                      1- 1394     	MOVIA	0x79
     00C9 04rr                      1- 1395     	SUBAR	_timeCount,W
     00CA                           1- 1396     _00269_DS_:
     00CA 0803                      1- 1397     	BTRSS	STATUS,0
     00CB 3rrr                      1- 1398     	LGOTO	_00187_DS_
                                    1- 1399     	.line	195, "main.c"; 	timeCount = 0;
                                    1- 1400     	BANKSEL	_timeCount
     00CC rrrr                      3-   71 m1      .banksel ram_address
     00CD 02rr                      1- 1401     	CLRR	_timeCount
     00CE 02rr                      1- 1402     	CLRR	(_timeCount + 1)
                                    1- 1403     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1404     ;;unsigned compare: left >= lit (0x2A9=681), size=2
     00CF                           1- 1405     _00187_DS_:
                                    1- 1406     	.line	196, "main.c"; 	if(timeCount > 680)
     00CF 2102                      1- 1407     	MOVIA	0x02
                                    1- 1408     	BANKSEL	_timeCount
     00D0 rrrr                      3-   71 m1      .banksel ram_address
     00D1 04rr                      1- 1409     	SUBAR	(_timeCount + 1),W
     00D2 0903                      1- 1410     	BTRSS	STATUS,2
     00D3 3rrr                      1- 1411     	LGOTO	_00270_DS_
     00D4 21A9                      1- 1412     	MOVIA	0xa9
     00D5 04rr                      1- 1413     	SUBAR	_timeCount,W
     00D6                           1- 1414     _00270_DS_:
     00D6 0803                      1- 1415     	BTRSS	STATUS,0
     00D7 3rrr                      1- 1416     	LGOTO	_00200_DS_
                                    1- 1417     	.line	197, "main.c"; 	motorEn = 1;
     00D8 2101                      1- 1418     	MOVIA	0x01
                                    1- 1419     	BANKSEL	_motorEn
     00D9 rrrr                      3-   71 m1      .banksel ram_address
     00DA 00rr                      1- 1420     	MOVAR	_motorEn
     00DB 3rrr                      1- 1421     	LGOTO	_00203_DS_
                                    1- 1422     ;;unsigned compare: left < lit (0xED=237), size=2
     00DC                           1- 1423     _00200_DS_:
                                    1- 1424     	.line	200, "main.c"; 	if(timeCount < 237)
     00DC 2100                      1- 1425     	MOVIA	0x00
                                    1- 1426     	BANKSEL	_timeCount
     00DD rrrr                      3-   71 m1      .banksel ram_address
     00DE 04rr                      1- 1427     	SUBAR	(_timeCount + 1),W
     00DF 0903                      1- 1428     	BTRSS	STATUS,2
     00E0 3rrr                      1- 1429     	LGOTO	_00271_DS_
     00E1 21ED                      1- 1430     	MOVIA	0xed
     00E2 04rr                      1- 1431     	SUBAR	_timeCount,W
     00E3                           1- 1432     _00271_DS_:
     00E3 0C03                      1- 1433     	BTRSC	STATUS,0
     00E4 3rrr                      1- 1434     	LGOTO	_00197_DS_
                                    1- 1435     	.line	202, "main.c"; 	if((timeCount % 35) > 30)
     00E5 2123                      1- 1436     	MOVIA	0x23
     00E6 00rr                      1- 1437     	MOVAR	STK02
     00E7 2100                      1- 1438     	MOVIA	0x00
     00E8 00rr                      1- 1439     	MOVAR	STK01
                                    1- 1440     	BANKSEL	_timeCount
     00E9 rrrr                      3-   71 m1      .banksel ram_address
     00EA 01rr                      1- 1441     	MOVR	_timeCount,W
     00EB 00rr                      1- 1442     	MOVAR	STK00
     00EC 01rr                      1- 1443     	MOVR	(_timeCount + 1),W
     00ED 2rrr                      1- 1444     	LCALL	__moduint
                                    1- 1445     	BANKSEL	r0x101D
     00EE rrrr                      3-   71 m1      .banksel ram_address
     00EF 00rr                      1- 1446     	MOVAR	r0x101D
     00F0 01rr                      1- 1447     	MOVR	STK00,W
                                    1- 1448     	BANKSEL	r0x101C
     00F1 rrrr                      3-   71 m1      .banksel ram_address
     00F2 00rr                      1- 1449     	MOVAR	r0x101C
                                    1- 1450     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1451     ;;unsigned compare: left >= lit (0x1F=31), size=2
     00F3 2100                      1- 1452     	MOVIA	0x00
                                    1- 1453     	BANKSEL	r0x101D
     00F4 rrrr                      3-   71 m1      .banksel ram_address
     00F5 04rr                      1- 1454     	SUBAR	r0x101D,W
     00F6 0903                      1- 1455     	BTRSS	STATUS,2
     00F7 3rrr                      1- 1456     	LGOTO	_00272_DS_
     00F8 211F                      1- 1457     	MOVIA	0x1f
                                    1- 1458     	BANKSEL	r0x101C
     00F9 rrrr                      3-   71 m1      .banksel ram_address
     00FA 04rr                      1- 1459     	SUBAR	r0x101C,W
     00FB                           1- 1460     _00272_DS_:
     00FB 0803                      1- 1461     	BTRSS	STATUS,0
     00FC 3rrr                      1- 1462     	LGOTO	_00189_DS_
                                    1- 1463     	.line	203, "main.c"; 	motorEn = 1;
     00FD 2101                      1- 1464     	MOVIA	0x01
                                    1- 1465     	BANKSEL	_motorEn
     00FE rrrr                      3-   71 m1      .banksel ram_address
     00FF 00rr                      1- 1466     	MOVAR	_motorEn
     0100 3rrr                      1- 1467     	LGOTO	_00203_DS_
     0101                           1- 1468     _00189_DS_:
                                    1- 1469     	.line	205, "main.c"; 	motorEn = 0;
                                    1- 1470     	BANKSEL	_motorEn
     0101 rrrr                      3-   71 m1      .banksel ram_address
     0102 02rr                      1- 1471     	CLRR	_motorEn
     0103 3rrr                      1- 1472     	LGOTO	_00203_DS_
                                    1- 1473     ;;unsigned compare: left < lit (0x2A8=680), size=2
     0104                           1- 1474     _00197_DS_:
                                    1- 1475     	.line	207, "main.c"; 	else if(timeCount < 680)
     0104 2102                      1- 1476     	MOVIA	0x02
                                    1- 1477     	BANKSEL	_timeCount
     0105 rrrr                      3-   71 m1      .banksel ram_address
     0106 04rr                      1- 1478     	SUBAR	(_timeCount + 1),W
     0107 0903                      1- 1479     	BTRSS	STATUS,2
     0108 3rrr                      1- 1480     	LGOTO	_00273_DS_
     0109 21A8                      1- 1481     	MOVIA	0xa8
     010A 04rr                      1- 1482     	SUBAR	_timeCount,W
     010B                           1- 1483     _00273_DS_:
     010B 0C03                      1- 1484     	BTRSC	STATUS,0
     010C 3rrr                      1- 1485     	LGOTO	_00203_DS_
                                    1- 1486     	.line	209, "main.c"; 	if((timeCount % 63) > 26)
     010D 213F                      1- 1487     	MOVIA	0x3f
     010E 00rr                      1- 1488     	MOVAR	STK02
     010F 2100                      1- 1489     	MOVIA	0x00
     0110 00rr                      1- 1490     	MOVAR	STK01
                                    1- 1491     	BANKSEL	_timeCount
     0111 rrrr                      3-   71 m1      .banksel ram_address
     0112 01rr                      1- 1492     	MOVR	_timeCount,W
     0113 00rr                      1- 1493     	MOVAR	STK00
     0114 01rr                      1- 1494     	MOVR	(_timeCount + 1),W
     0115 2rrr                      1- 1495     	LCALL	__moduint
                                    1- 1496     	BANKSEL	r0x101D
     0116 rrrr                      3-   71 m1      .banksel ram_address
     0117 00rr                      1- 1497     	MOVAR	r0x101D
     0118 01rr                      1- 1498     	MOVR	STK00,W
                                    1- 1499     	BANKSEL	r0x101C
     0119 rrrr                      3-   71 m1      .banksel ram_address
     011A 00rr                      1- 1500     	MOVAR	r0x101C
                                    1- 1501     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1502     ;;unsigned compare: left >= lit (0x1B=27), size=2
     011B 2100                      1- 1503     	MOVIA	0x00
                                    1- 1504     	BANKSEL	r0x101D
     011C rrrr                      3-   71 m1      .banksel ram_address
     011D 04rr                      1- 1505     	SUBAR	r0x101D,W
     011E 0903                      1- 1506     	BTRSS	STATUS,2
     011F 3rrr                      1- 1507     	LGOTO	_00274_DS_
     0120 211B                      1- 1508     	MOVIA	0x1b
                                    1- 1509     	BANKSEL	r0x101C
     0121 rrrr                      3-   71 m1      .banksel ram_address
     0122 04rr                      1- 1510     	SUBAR	r0x101C,W
     0123                           1- 1511     _00274_DS_:
     0123 0803                      1- 1512     	BTRSS	STATUS,0
     0124 3rrr                      1- 1513     	LGOTO	_00192_DS_
                                    1- 1514     	.line	210, "main.c"; 	motorEn = 0;
                                    1- 1515     	BANKSEL	_motorEn
     0125 rrrr                      3-   71 m1      .banksel ram_address
     0126 02rr                      1- 1516     	CLRR	_motorEn
     0127 3rrr                      1- 1517     	LGOTO	_00203_DS_
     0128                           1- 1518     _00192_DS_:
                                    1- 1519     	.line	212, "main.c"; 	motorEn = 1;
     0128 2101                      1- 1520     	MOVIA	0x01
                                    1- 1521     	BANKSEL	_motorEn
     0129 rrrr                      3-   71 m1      .banksel ram_address
     012A 00rr                      1- 1522     	MOVAR	_motorEn
     012B                           1- 1523     _00203_DS_:
                                    1- 1524     	.line	219, "main.c"; 	}
                                    1- 1525     	RETURN	
     012B 0010                      3-   26 m1      ret
                                    1- 1526     ; exit point of _workCon
                                    1- 1528     ;***
                                    1- 1529     ;  pBlock Stats: dbName = C
                                    1- 1530     ;***
                                    1- 1531     ;has an exit
                                    1- 1532     ;; Starting pCode block
                                    1- 1533     .segment "code"; module=main, function=_ledCon
     0000                           1- 1535     _ledCon:
                                    1- 1536     ; 2 exit points
                                    1- 1537     	.line	129, "main.c"; 	if(count1s > 0)
                                    1- 1538     	BANKSEL	_count1s
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1539     	MOVR	_count1s,W
     0002 0D03                      1- 1540     	BTRSC	STATUS,2
     0003 3rrr                      1- 1541     	LGOTO	_00150_DS_
                                    1- 1542     	.line	131, "main.c"; 	LEDON();
     0004 18rr                      1- 1543     	BSR	_PORTA,0
                                    1- 1544     	.line	132, "main.c"; 	count1s--;
     0005 06rr                      1- 1545     	DECR	_count1s,F
     0006 3rrr                      1- 1546     	LGOTO	_00152_DS_
     0007                           1- 1547     _00150_DS_:
                                    1- 1548     	.line	135, "main.c"; 	LEDOFF();
     0007 1Crr                      1- 1549     	BCR	_PORTA,0
     0008                           1- 1550     _00152_DS_:
                                    1- 1551     	.line	136, "main.c"; 	}
                                    1- 1552     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1- 1553     ; exit point of _ledCon
                                    1- 1556     ;	code size estimation:
                                    1- 1557     ;	  674+  172 =   846 instructions ( 2036 byte)
                                    1- 1559     	end
                                    1- 1559     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__gptrget1              Label    00000000
__gptrput1              Label    00000000
__moduint               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800533
__sdcc_interrupt        Label    00000000
_00106_DS_              Label    00000023
_00107_DS_              Label    00000024
_00109_DS_              Label    00000026
_00114_DS_              Label    00000030
_00116_DS_              Label    00000034
_00121_DS_              Label    00000028
_00122_DS_              Label    0000002A
_00129_DS_              Label    00000041
_00132_DS_              Label    00000035
_00135_DS_              Label    00000043
_00136_DS_              Label    00000044
_00144_DS_              Label    0000001F
_00150_DS_              Label    00000007
_00152_DS_              Label    00000008
_00157_DS_              Label    00000018
_00158_DS_              Label    0000001C
_00159_DS_              Label    00000020
_00160_DS_              Label    00000024
_00161_DS_              Label    00000028
_00162_DS_              Label    0000002B
_00163_DS_              Label    00000043
_00164_DS_              Label    00000047
_00166_DS_              Label    00000056
_00168_DS_              Label    00000063
_00170_DS_              Label    00000066
_00172_DS_              Label    00000075
_00174_DS_              Label    00000082
_00176_DS_              Label    00000085
_00178_DS_              Label    00000094
_00180_DS_              Label    000000BD
_00183_DS_              Label    000000A1
_00185_DS_              Label    000000C0
_00187_DS_              Label    000000CF
_00189_DS_              Label    00000101
_00192_DS_              Label    00000128
_00197_DS_              Label    00000104
_00200_DS_              Label    000000DC
_00203_DS_              Label    0000012B
_00258_DS_              Label    00000013
_00261_DS_              Label    0000003E
_00262_DS_              Label    00000051
_00263_DS_              Label    0000005D
_00264_DS_              Label    00000070
_00265_DS_              Label    0000007C
_00266_DS_              Label    0000008F
_00267_DS_              Label    0000009B
_00268_DS_              Label    000000B7
_00269_DS_              Label    000000CA
_00270_DS_              Label    000000D6
_00271_DS_              Label    000000E3
_00272_DS_              Label    000000FB
_00273_DS_              Label    0000010B
_00274_DS_              Label    00000123
_00280_DS_              Label    0000002A
_00283_DS_              Label    00000031
_00287_DS_              Label    00000066
_00290_DS_              Label    00000069
_00294_DS_              Label    0000009A
_00297_DS_              Label    0000009D
_00301_DS_              Label    000000C5
_00308_DS_              Label    000000ED
_00316_DS_              Label    00000053
_00318_DS_              Label    00000037
_00319_DS_              Label    0000005E
_00320_DS_              Label    0000005F
_00326_DS_              Label    00000008
_00327_DS_              Label    00000009
_00336_DS_              Label    00000008
_00337_DS_              Label    00000009
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_count1s                Label    00000000
_duty                   Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCon                 Label    00000000
_keyCount1              Label    00000000
_keyCount2              Label    00000000
_keyCount3              Label    00000000
_keyCount4              Label    00000000
_keyCount5              Label    00000000
_keyRead2               Label    00000000
_ledCon                 Label    00000000
_ledCount               Label    00000000
_main                   Label    00000000
_modeSpeed              Label    00000000
_modeStep               Label    00000000
_motor1                 Label    00000000
_motor2                 Label    00000000
_motorEn                Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_power                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_sleepCount             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_timeCount              Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_workCon                Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000045
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1014                 Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
r0x101A                 Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
r0x101D                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a053d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A053D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
