
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduint
                                    1-   15     	extern	__divuint
                                    1-   16     	extern	_PORTAbits
                                    1-   17     	extern	_PORTBbits
                                    1-   18     	extern	_PCONbits
                                    1-   19     	extern	_BWUCONbits
                                    1-   20     	extern	_ABPLCONbits
                                    1-   21     	extern	_BPHCONbits
                                    1-   22     	extern	_INTEbits
                                    1-   23     	extern	_INTFbits
                                    1-   24     	extern	_AWUCONbits
                                    1-   25     	extern	_INTEDGbits
                                    1-   26     	extern	_RFCbits
                                    1-   27     	extern	_INTE2bits
                                    1-   28     	extern	_INDF
                                    1-   29     	extern	_TMR0
                                    1-   30     	extern	_PCL
                                    1-   31     	extern	_STATUS
                                    1-   32     	extern	_FSR
                                    1-   33     	extern	_PORTA
                                    1-   34     	extern	_PORTB
                                    1-   35     	extern	_PCON
                                    1-   36     	extern	_BWUCON
                                    1-   37     	extern	_PCHBUF
                                    1-   38     	extern	_ABPLCON
                                    1-   39     	extern	_BPHCON
                                    1-   40     	extern	_INTE
                                    1-   41     	extern	_INTF
                                    1-   42     	extern	_AWUCON
                                    1-   43     	extern	_INTEDG
                                    1-   44     	extern	_TMRH
                                    1-   45     	extern	_RFC
                                    1-   46     	extern	_TM34RH
                                    1-   47     	extern	_INTE2
                                    1-   48     	extern	_TMR1
                                    1-   49     	extern	_T1CR1
                                    1-   50     	extern	_T1CR2
                                    1-   51     	extern	_PWM1DUTY
                                    1-   52     	extern	_PS1CV
                                    1-   53     	extern	_BZ1CR
                                    1-   54     	extern	_IRCR
                                    1-   55     	extern	_TBHP
                                    1-   56     	extern	_TBHD
                                    1-   57     	extern	_P2CR1
                                    1-   58     	extern	_PWM2DUTY
                                    1-   59     	extern	_OSCCR
                                    1-   60     	extern	_TMR3
                                    1-   61     	extern	_T3CR1
                                    1-   62     	extern	_T3CR2
                                    1-   63     	extern	_PWM3DUTY
                                    1-   64     	extern	_PS3CV
                                    1-   65     	extern	_P4CR1
                                    1-   66     	extern	_PWM4DUTY
                                    1-   67     	extern	_P5CR1
                                    1-   68     	extern	_PWM5DUTY
                                    1-   69     	extern	_PWM5RH
                                    1-   70     	extern	_IOSTA
                                    1-   71     	extern	_IOSTB
                                    1-   72     	extern	_APHCON
                                    1-   73     	extern	_PS0CV
                                    1-   74     	extern	_BODCON
                                    1-   75     	extern	_CMPCR
                                    1-   76     	extern	_PCON1
                                    1-   77     	extern	_T0MD
                                    1-   78     	extern	___sdcc_saved_fsr
                                    1-   79     	extern	___sdcc_saved_stk00
                                    1-   80     	extern	___sdcc_saved_stk01
                                    1-   81     	extern	__gptrput1
                                    1-   82     	extern	__mulchar
                                    1-   83     	extern	__mulint
                                    1-   84     	extern	__nyc_ny8_startup
                                    1-   85     ;--------------------------------------------------------
                                    1-   86     ; global declarations
                                    1-   87     ;--------------------------------------------------------
                                    1-   88     	extern	_sendtoLast
                                    1-   89     	extern	_sendRGB
                                    1-   90     	extern	_Delay80us
                                    1-   91     	extern	_work10
                                    1-   92     	extern	_work9
                                    1-   93     	extern	_setColor
                                    1-   94     	extern	_workCtr
                                    1-   95     	extern	_delay
                                    1-   96     	extern	_WByte
                                    1-   97     	extern	_WaitTF0
                                    1-   98     	extern	_RByte
                                    1-   99     	extern	_rankNub
                                    1-  100     	extern	_revData
                                    1-  101     	extern	_isr
                                    1-  102     	extern	_main
                                    1-  103     	extern	_Delay10Us
                                    1-  104     	extern	_TM0_FLAG
                                    1-  105     	extern	_REC_FLAG
                                    1-  106     	extern	_SEND_FLAG
                                    1-  107     	extern	_intCount
                                    1-  108     	extern	_IntFlag
                                    1-  109     	extern	_uartFlag
                                    1-  110     	extern	_revList
                                    1-  111     	extern	_data
                                    1-  112     	extern	_recData
                                    1-  113     	extern	_Hcount
                                    1-  114     	extern	_index
                                    1-  115     	extern	_uartTime
                                    1-  116     	extern	_workStep
                                    1-  117     	extern	_colorIndex
                                    1-  118     	extern	_timeCount
                                    1-  119     	extern	_firstFlag
                                    1-  120     	extern	_randNub
                                    1-  121     	extern	_snub
                                    1-  122     	extern	_preColorIndex
                                    1-  123     	extern	_Rdata
                                    1-  124     	extern	_Gdata
                                    1-  125     	extern	_Bdata
                                    1-  126     	extern	_duty
                                    1-  127     	extern	_ledCount
                                    1-  129     	extern PSAVE
                                    1-  130     	extern SSAVE
                                    1-  131     	extern WSAVE
                                    1-  132     	extern STK12
                                    1-  133     	extern STK11
                                    1-  134     	extern STK10
                                    1-  135     	extern STK09
                                    1-  136     	extern STK08
                                    1-  137     	extern STK07
                                    1-  138     	extern STK06
                                    1-  139     	extern STK05
                                    1-  140     	extern STK04
                                    1-  141     	extern STK03
                                    1-  142     	extern STK02
                                    1-  143     	extern STK01
                                    1-  144     	extern STK00
                                    1-  146     .segment "uninit", 0x20000040
 20000040                           1-  147     PSAVE:
                                    1-  148     	.res 1
 20000041                           1-  149     SSAVE:
                                    1-  150     	.res 1
 20000042                           1-  151     WSAVE:
                                    1-  152     	.res 1
 20000043                           1-  153     STK12:
                                    1-  154     	.res 1
 20000044                           1-  155     STK11:
                                    1-  156     	.res 1
 20000045                           1-  157     STK10:
                                    1-  158     	.res 1
 20000046                           1-  159     STK09:
                                    1-  160     	.res 1
 20000047                           1-  161     STK08:
                                    1-  162     	.res 1
 20000048                           1-  163     STK07:
                                    1-  164     	.res 1
 20000049                           1-  165     STK06:
                                    1-  166     	.res 1
 2000004A                           1-  167     STK05:
                                    1-  168     	.res 1
 2000004B                           1-  169     STK04:
                                    1-  170     	.res 1
 2000004C                           1-  171     STK03:
                                    1-  172     	.res 1
 2000004D                           1-  173     STK02:
                                    1-  174     	.res 1
 2000004E                           1-  175     STK01:
                                    1-  176     	.res 1
 2000004F                           1-  177     STK00:
                                    1-  178     	.res 1
                                    1-  180     ;--------------------------------------------------------
                                    1-  181     ; global definitions
                                    1-  182     ;--------------------------------------------------------
                                    1-  183     .segment "uninit"
     0000                           1-  184     _revList:
                                    1-  185     	.res	5
                                    1-  188     ;--------------------------------------------------------
                                    1-  189     ; absolute symbol definitions
                                    1-  190     ;--------------------------------------------------------
                                    1-  191     ;--------------------------------------------------------
                                    1-  192     ; compiler-defined variables
                                    1-  193     ;--------------------------------------------------------
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x1039:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x103A:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x103B:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x103C:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x103D:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x103E:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1037:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1038:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x102F:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x1030:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1031:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1032:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x1036:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x102C:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x102D:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x102E:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1029:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x102A:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x102B:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1027:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1028:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1024:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x101E:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x101F:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1020:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1021:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1022:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1023:
                                    1-  277     	.res	1
                                    1-  278     ;--------------------------------------------------------
                                    1-  279     ; initialized data
                                    1-  280     ;--------------------------------------------------------
                                    1-  282     .segment "idata"
     0000                           1-  283     _TM0_FLAG:
     0000 0000                      1-  284     	dw	0x00
                                    1-  288     .segment "idata"
     0000                           1-  289     _REC_FLAG:
     0000 0000                      1-  290     	dw	0x00
                                    1-  294     .segment "idata"
     0000                           1-  295     _SEND_FLAG:
     0000 0000                      1-  296     	dw	0x00
                                    1-  300     .segment "idata"
     0000                           1-  301     _intCount:
     0000 0000                      1-  302     	dw	0x00
                                    1-  306     .segment "idata"
     0000                           1-  307     _IntFlag:
     0000 0000                      1-  308     	dw	0x00
                                    1-  312     .segment "idata"
     0000                           1-  313     _uartFlag:
     0000 0000                      1-  314     	dw	0x00
                                    1-  318     .segment "idata"
     0000                           1-  319     _data:
     0000 0025                      1-  320     	dw	0x25
                                    1-  324     .segment "idata"
     0000                           1-  325     _recData:
     0000 0000                      1-  326     	dw	0x00
                                    1-  330     .segment "idata"
     0000                           1-  331     _Hcount:
     0000 0000                      1-  332     	dw	0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _index:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _uartTime:
     0000 0000                      1-  344     	dw	0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _workStep:
     0000 0007                      1-  350     	dw	0x07
                                    1-  354     .segment "idata"
     0000                           1-  355     _colorIndex:
     0000 0001                      1-  356     	dw	0x01
                                    1-  360     .segment "idata"
     0000                           1-  361     _timeCount:
     0000 0000 0000                 1-  362     	dw	0x00, 0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _firstFlag:
     0000 0002                      1-  368     	dw	0x02
                                    1-  372     .segment "idata"
     0000                           1-  373     _randNub:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _snub:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _preColorIndex:
     0000 0000                      1-  386     	dw	0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _Rdata:
     0000 0000                      1-  392     	dw	0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _Gdata:
     0000 0000                      1-  398     	dw	0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _Bdata:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _duty:
     0000 0000                      1-  410     	dw	0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _ledCount:
     0000 0000                      1-  416     	dw	0x00
                                    1-  419     ;--------------------------------------------------------
                                    1-  420     ; overlayable items in internal ram 
                                    1-  421     ;--------------------------------------------------------
                                    1-  422     ;	udata_ovr
                                    1-  423     ;--------------------------------------------------------
                                    1-  424     ; reset vector 
                                    1-  425     ;--------------------------------------------------------
                                    1-  426     ORG	0x0000
     0000 3rrr                      1-  427     	LGOTO	__nyc_ny8_startup
                                    1-  428     ;--------------------------------------------------------
                                    1-  429     ; interrupt and initialization code
                                    1-  430     ;--------------------------------------------------------
                                    1-  431     ORG 0x0008
     0008 3rrr                      1-  432     	lgoto	__sdcc_interrupt
                                    1-  434     .segment "code"
     0000                           1-  435     __sdcc_interrupt:
                                    1-  436     ;***
                                    1-  437     ;  pBlock Stats: dbName = I
                                    1-  438     ;***
                                    1-  439     ;functions called:
                                    1-  440     ;   __moduint
                                    1-  441     ;   _rankNub
                                    1-  442     ;   _rankNub
                                    1-  443     ;   __moduint
                                    1-  444     ;   __moduint
                                    1-  445     ;   _rankNub
                                    1-  446     ;   _rankNub
                                    1-  447     ;   __moduint
                                    1-  448     ;9 compiler assigned registers:
                                    1-  449     ;   STK00
                                    1-  450     ;   STK01
                                    1-  451     ;   r0x1039
                                    1-  452     ;   r0x103A
                                    1-  453     ;   r0x103B
                                    1-  454     ;   r0x103C
                                    1-  455     ;   r0x103D
                                    1-  456     ;   r0x103E
                                    1-  457     ;   STK02
                                    1-  458     ;; Starting pCode block
     0000                           1-  459     _isr:
                                    1-  460     ; 0 exit points
                                    1-  461     	.line	117, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  462     	MOVAR	WSAVE
     0001 1503                      1-  463     	SWAPR	STATUS,W
     0002 0283                      1-  464     	CLRR	STATUS
     0003 00rr                      1-  465     	MOVAR	SSAVE
     0004 010A                      1-  466     	MOVR	PCHBUF,W
     0005 028A                      1-  467     	CLRR	PCHBUF
     0006 00rr                      1-  468     	MOVAR	PSAVE
     0007 0104                      1-  469     	MOVR	FSR,W
                                    1-  470     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  471     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  472     	MOVR	STK00,W
                                    1-  473     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  474     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  475     	MOVR	STK01,W
                                    1-  476     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  477     	MOVAR	___sdcc_saved_stk01
                                    1-  478     	.line	119, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  479     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  480     	LGOTO	_00132_DS_
                                    1-  481     	.line	122, "main.c"; 	TMR0 += 65;
     0012 2141                      1-  482     	MOVIA	0x41
     0013 03rr                      1-  483     	ADDAR	_TMR0,F
                                    1-  484     	.line	123, "main.c"; 	intCount++;
                                    1-  485     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  486     	INCR	_intCount,F
                                    1-  487     	.line	124, "main.c"; 	if(intCount == 50)
     0016 01rr                      1-  488     	MOVR	_intCount,W
     0017 2432                      1-  489     	XORIA	0x32
     0018 0903                      1-  490     	BTRSS	STATUS,2
     0019 3rrr                      1-  491     	LGOTO	_00132_DS_
                                    1-  492     	.line	126, "main.c"; 	intCount = 0;
     001A 02rr                      1-  493     	CLRR	_intCount
                                    1-  494     	.line	127, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  495     	MOVIA	0x01
                                    1-  496     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  497     	MOVAR	_IntFlag
                                    1-  498     ;;unsigned compare: left < lit (0x14=20), size=1
                                    1-  499     	.line	128, "main.c"; 	if(uartTime < 20)
     001E 2114                      1-  500     	MOVIA	0x14
                                    1-  501     	BANKSEL	_uartTime
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1-  502     	SUBAR	_uartTime,W
     0021 0C03                      1-  503     	BTRSC	STATUS,0
     0022 3rrr                      1-  504     	LGOTO	_00115_DS_
                                    1-  505     	.line	130, "main.c"; 	if(++uartTime == 20)
     0023 05rr                      1-  506     	INCR	_uartTime,F
     0024 01rr                      1-  507     	MOVR	_uartTime,W
     0025 2414                      1-  508     	XORIA	0x14
     0026 0903                      1-  509     	BTRSS	STATUS,2
     0027 3rrr                      1-  510     	LGOTO	_00115_DS_
                                    1-  511     	.line	132, "main.c"; 	index = 0;
                                    1-  512     	BANKSEL	_index
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1-  513     	CLRR	_index
                                    1-  514     	.line	138, "main.c"; 	if(revList[1] == 3 && (revList[1] + revList[2]) == revList[3])
                                    1-  515     	BANKSEL	_revList
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  516     	MOVR	(_revList + 1),W
                                    1-  517     	BANKSEL	r0x1039
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1-  518     	MOVAR	r0x1039
     002E 2403                      1-  519     	XORIA	0x03
     002F 0903                      1-  520     	BTRSS	STATUS,2
     0030 3rrr                      1-  521     	LGOTO	_00106_DS_
     0031 01rr                      1-  522     	MOVR	r0x1039,W
                                    1-  523     	BANKSEL	r0x103A
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1-  524     	MOVAR	r0x103A
                                    1-  525     	BANKSEL	r0x103B
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 02rr                      1-  526     	CLRR	r0x103B
                                    1-  527     	BANKSEL	_revList
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1-  528     	MOVR	(_revList + 2),W
                                    1-  529     	BANKSEL	r0x1039
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 00rr                      1-  530     	MOVAR	r0x1039
                                    1-  531     	BANKSEL	r0x103C
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 00rr                      1-  532     	MOVAR	r0x103C
                                    1-  533     	BANKSEL	r0x103D
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 02rr                      1-  534     	CLRR	r0x103D
                                    1-  535     	BANKSEL	r0x103C
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1-  536     	MOVR	r0x103C,W
                                    1-  537     	BANKSEL	r0x103A
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 03rr                      1-  538     	ADDAR	r0x103A,F
     0042 2100                      1-  539     	MOVIA	0x00
     0043 0803                      1-  540     	BTRSS	STATUS,0
     0044 3rrr                      1-  541     	LGOTO	_00008_DS_
                                    1-  542     	BANKSEL	r0x103D
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 05rr                      1-  543     	INCR	r0x103D,W
     0047 0D03                      1-  544     	BTRSC	STATUS,2
     0048 3rrr                      1-  545     	LGOTO	_00009_DS_
     0049                           1-  546     _00008_DS_:
                                    1-  547     	BANKSEL	r0x103B
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 03rr                      1-  548     	ADDAR	r0x103B,F
     004B                           1-  549     _00009_DS_:
                                    1-  550     	BANKSEL	_revList
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1-  551     	MOVR	(_revList + 3),W
                                    1-  552     	BANKSEL	r0x103C
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1-  553     	MOVAR	r0x103C
                                    1-  554     	BANKSEL	r0x103D
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1-  555     	MOVAR	r0x103D
                                    1-  556     	BANKSEL	r0x103E
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 02rr                      1-  557     	CLRR	r0x103E
                                    1-  558     	BANKSEL	r0x103D
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 01rr                      1-  559     	MOVR	r0x103D,W
                                    1-  560     	BANKSEL	r0x103A
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 12rr                      1-  561     	XORAR	r0x103A,W
     0057 0903                      1-  562     	BTRSS	STATUS,2
     0058 3rrr                      1-  563     	LGOTO	_00106_DS_
                                    1-  564     	BANKSEL	r0x103E
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 01rr                      1-  565     	MOVR	r0x103E,W
                                    1-  566     	BANKSEL	r0x103B
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 12rr                      1-  567     	XORAR	r0x103B,W
     005D 0903                      1-  568     	BTRSS	STATUS,2
     005E 3rrr                      1-  569     	LGOTO	_00106_DS_
                                    1-  570     	.line	140, "main.c"; 	workStep = revList[2];
                                    1-  571     	BANKSEL	r0x1039
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 01rr                      1-  572     	MOVR	r0x1039,W
                                    1-  573     	BANKSEL	_workStep
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 00rr                      1-  574     	MOVAR	_workStep
                                    1-  575     	.line	141, "main.c"; 	colorIndex = 1;
     0063 2101                      1-  576     	MOVIA	0x01
                                    1-  577     	BANKSEL	_colorIndex
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 00rr                      1-  578     	MOVAR	_colorIndex
                                    1-  579     	.line	142, "main.c"; 	timeCount = 0;
                                    1-  580     	BANKSEL	_timeCount
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 02rr                      1-  581     	CLRR	_timeCount
     0068 02rr                      1-  582     	CLRR	(_timeCount + 1)
     0069                           1-  583     _00106_DS_:
                                    1-  584     	.line	144, "main.c"; 	if(firstFlag)
                                    1-  585     	BANKSEL	_firstFlag
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 01rr                      1-  586     	MOVR	_firstFlag,W
     006B 0D03                      1-  587     	BTRSC	STATUS,2
     006C 3rrr                      1-  588     	LGOTO	_00115_DS_
                                    1-  589     	.line	146, "main.c"; 	TM0_FLAG=1; 
     006D 2101                      1-  590     	MOVIA	0x01
                                    1-  591     	BANKSEL	_TM0_FLAG
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 00rr                      1-  592     	MOVAR	_TM0_FLAG
                                    1-  593     	.line	147, "main.c"; 	REC_FLAG = 0;
                                    1-  594     	BANKSEL	_REC_FLAG
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 02rr                      1-  595     	CLRR	_REC_FLAG
                                    1-  596     	.line	148, "main.c"; 	recData = 0;
                                    1-  597     	BANKSEL	_recData
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 02rr                      1-  598     	CLRR	_recData
                                    1-  599     	.line	149, "main.c"; 	colorIndex = 1;
     0074 2101                      1-  600     	MOVIA	0x01
                                    1-  601     	BANKSEL	_colorIndex
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 00rr                      1-  602     	MOVAR	_colorIndex
                                    1-  603     	.line	150, "main.c"; 	timeCount = 0;
                                    1-  604     	BANKSEL	_timeCount
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 02rr                      1-  605     	CLRR	_timeCount
     0079 02rr                      1-  606     	CLRR	(_timeCount + 1)
                                    1-  607     	.line	151, "main.c"; 	if(--firstFlag == 0)
                                    1-  608     	BANKSEL	_firstFlag
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 17rr                      1-  609     	DECRSZ	_firstFlag,F
     007C 3rrr                      1-  610     	LGOTO	_00109_DS_
                                    1-  611     	.line	152, "main.c"; 	workStep = revList[2];
                                    1-  612     	BANKSEL	_revList
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 01rr                      1-  613     	MOVR	(_revList + 2),W
                                    1-  614     	BANKSEL	_workStep
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 00rr                      1-  615     	MOVAR	_workStep
                                    1-  616     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     0081                           1-  617     _00109_DS_:
                                    1-  618     	.line	153, "main.c"; 	revList[0] = revList[1] = revList[2] = revList[3] = revList[4] = 0;
                                    1-  619     	BANKSEL	_revList
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 02rr                      1-  620     	CLRR	(_revList + 4)
                                    1-  621     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     0083 02rr                      1-  622     	CLRR	(_revList + 3)
                                    1-  623     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     0084 02rr                      1-  624     	CLRR	(_revList + 2)
                                    1-  625     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     0085 02rr                      1-  626     	CLRR	(_revList + 1)
                                    1-  627     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     0086 02rr                      1-  628     	CLRR	(_revList + 0)
     0087                           1-  629     _00115_DS_:
                                    1-  630     	.line	158, "main.c"; 	if(++timeCount >= 1000)
                                    1-  631     	BANKSEL	_timeCount
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 05rr                      1-  632     	INCR	_timeCount,F
     0089 0D03                      1-  633     	BTRSC	STATUS,2
     008A 05rr                      1-  634     	INCR	(_timeCount + 1),F
                                    1-  635     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     008B 2103                      1-  636     	MOVIA	0x03
     008C 04rr                      1-  637     	SUBAR	(_timeCount + 1),W
     008D 0903                      1-  638     	BTRSS	STATUS,2
     008E 3rrr                      1-  639     	LGOTO	_00200_DS_
     008F 21E8                      1-  640     	MOVIA	0xe8
     0090 04rr                      1-  641     	SUBAR	_timeCount,W
     0091                           1-  642     _00200_DS_:
     0091 0803                      1-  643     	BTRSS	STATUS,0
     0092 3rrr                      1-  644     	LGOTO	_00120_DS_
                                    1-  645     	.line	160, "main.c"; 	timeCount = 0;
                                    1-  646     	BANKSEL	_timeCount
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 02rr                      1-  647     	CLRR	_timeCount
     0095 02rr                      1-  648     	CLRR	(_timeCount + 1)
                                    1-  649     	.line	161, "main.c"; 	if(workStep == 9 && ++colorIndex > 8)
                                    1-  650     	BANKSEL	_workStep
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 01rr                      1-  651     	MOVR	_workStep,W
     0098 2409                      1-  652     	XORIA	0x09
     0099 0903                      1-  653     	BTRSS	STATUS,2
     009A 3rrr                      1-  654     	LGOTO	_00120_DS_
                                    1-  655     	BANKSEL	_colorIndex
     009B rrrr                      3-   71 m1      .banksel ram_address
     009C 05rr                      1-  656     	INCR	_colorIndex,F
                                    1-  657     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  658     ;;unsigned compare: left >= lit (0x9=9), size=1
     009D 2109                      1-  659     	MOVIA	0x09
     009E 04rr                      1-  660     	SUBAR	_colorIndex,W
     009F 0803                      1-  661     	BTRSS	STATUS,0
     00A0 3rrr                      1-  662     	LGOTO	_00120_DS_
                                    1-  663     	.line	163, "main.c"; 	colorIndex = 1;
     00A1 2101                      1-  664     	MOVIA	0x01
     00A2 00rr                      1-  665     	MOVAR	_colorIndex
     00A3                           1-  666     _00120_DS_:
                                    1-  667     	.line	166, "main.c"; 	if(workStep == 10 && (timeCount % 200 == 0))
                                    1-  668     	BANKSEL	_workStep
     00A3 rrrr                      3-   71 m1      .banksel ram_address
     00A4 01rr                      1-  669     	MOVR	_workStep,W
     00A5 240A                      1-  670     	XORIA	0x0a
     00A6 0903                      1-  671     	BTRSS	STATUS,2
     00A7 3rrr                      1-  672     	LGOTO	_00132_DS_
     00A8 21C8                      1-  673     	MOVIA	0xc8
     00A9 00rr                      1-  674     	MOVAR	STK02
     00AA 2100                      1-  675     	MOVIA	0x00
     00AB 00rr                      1-  676     	MOVAR	STK01
                                    1-  677     	BANKSEL	_timeCount
     00AC rrrr                      3-   71 m1      .banksel ram_address
     00AD 01rr                      1-  678     	MOVR	_timeCount,W
     00AE 00rr                      1-  679     	MOVAR	STK00
     00AF 01rr                      1-  680     	MOVR	(_timeCount + 1),W
     00B0 2rrr                      1-  681     	LCALL	__moduint
                                    1-  682     	BANKSEL	r0x103A
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 00rr                      1-  683     	MOVAR	r0x103A
     00B3 01rr                      1-  684     	MOVR	STK00,W
                                    1-  685     	BANKSEL	r0x1039
     00B4 rrrr                      3-   71 m1      .banksel ram_address
     00B5 00rr                      1-  686     	MOVAR	r0x1039
                                    1-  687     	BANKSEL	r0x103A
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 11rr                      1-  688     	IORAR	r0x103A,W
     00B8 0903                      1-  689     	BTRSS	STATUS,2
     00B9 3rrr                      1-  690     	LGOTO	_00132_DS_
                                    1-  691     	.line	168, "main.c"; 	rankNub(randNub+3);
     00BA 2103                      1-  692     	MOVIA	0x03
                                    1-  693     	BANKSEL	_randNub
     00BB rrrr                      3-   71 m1      .banksel ram_address
     00BC 03rr                      1-  694     	ADDAR	_randNub,W
                                    1-  695     	BANKSEL	r0x1039
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 00rr                      1-  696     	MOVAR	r0x1039
     00BF 2rrr                      1-  697     	LCALL	_rankNub
                                    1-  698     	.line	169, "main.c"; 	preColorIndex = colorIndex;
                                    1-  699     	BANKSEL	_colorIndex
     00C0 rrrr                      3-   71 m1      .banksel ram_address
     00C1 01rr                      1-  700     	MOVR	_colorIndex,W
                                    1-  701     	BANKSEL	_preColorIndex
     00C2 rrrr                      3-   71 m1      .banksel ram_address
     00C3 00rr                      1-  702     	MOVAR	_preColorIndex
     00C4                           1-  703     _00123_DS_:
                                    1-  704     	.line	172, "main.c"; 	colorIndex = (randNub%8)  + 1;
     00C4 2107                      1-  705     	MOVIA	0x07
                                    1-  706     	BANKSEL	_randNub
     00C5 rrrr                      3-   71 m1      .banksel ram_address
     00C6 10rr                      1-  707     	ANDAR	_randNub,W
                                    1-  708     	BANKSEL	r0x1039
     00C7 rrrr                      3-   71 m1      .banksel ram_address
     00C8 00rr                      1-  709     	MOVAR	r0x1039
     00C9 05rr                      1-  710     	INCR	r0x1039,W
                                    1-  711     	BANKSEL	_colorIndex
     00CA rrrr                      3-   71 m1      .banksel ram_address
     00CB 00rr                      1-  712     	MOVAR	_colorIndex
                                    1-  713     	.line	173, "main.c"; 	rankNub(randNub+3);
     00CC 2103                      1-  714     	MOVIA	0x03
                                    1-  715     	BANKSEL	_randNub
     00CD rrrr                      3-   71 m1      .banksel ram_address
     00CE 03rr                      1-  716     	ADDAR	_randNub,W
                                    1-  717     	BANKSEL	r0x1039
     00CF rrrr                      3-   71 m1      .banksel ram_address
     00D0 00rr                      1-  718     	MOVAR	r0x1039
     00D1 2rrr                      1-  719     	LCALL	_rankNub
                                    1-  720     	.line	174, "main.c"; 	if(timeCount % 3 == 0)
     00D2 2103                      1-  721     	MOVIA	0x03
     00D3 00rr                      1-  722     	MOVAR	STK02
     00D4 2100                      1-  723     	MOVIA	0x00
     00D5 00rr                      1-  724     	MOVAR	STK01
                                    1-  725     	BANKSEL	_timeCount
     00D6 rrrr                      3-   71 m1      .banksel ram_address
     00D7 01rr                      1-  726     	MOVR	_timeCount,W
     00D8 00rr                      1-  727     	MOVAR	STK00
     00D9 01rr                      1-  728     	MOVR	(_timeCount + 1),W
     00DA 2rrr                      1-  729     	LCALL	__moduint
                                    1-  730     	BANKSEL	r0x103A
     00DB rrrr                      3-   71 m1      .banksel ram_address
     00DC 00rr                      1-  731     	MOVAR	r0x103A
     00DD 01rr                      1-  732     	MOVR	STK00,W
                                    1-  733     	BANKSEL	r0x1039
     00DE rrrr                      3-   71 m1      .banksel ram_address
     00DF 00rr                      1-  734     	MOVAR	r0x1039
                                    1-  735     	BANKSEL	r0x103A
     00E0 rrrr                      3-   71 m1      .banksel ram_address
     00E1 11rr                      1-  736     	IORAR	r0x103A,W
     00E2 0903                      1-  737     	BTRSS	STATUS,2
     00E3 3rrr                      1-  738     	LGOTO	_00122_DS_
                                    1-  739     	.line	175, "main.c"; 	snub+=3;
     00E4 2103                      1-  740     	MOVIA	0x03
                                    1-  741     	BANKSEL	_snub
     00E5 rrrr                      3-   71 m1      .banksel ram_address
     00E6 03rr                      1-  742     	ADDAR	_snub,F
     00E7                           1-  743     _00122_DS_:
                                    1-  744     	.line	176, "main.c"; 	CLRWDT();
     00E7 0002                      1-  745     	clrwdt
                                    1-  746     	.line	178, "main.c"; 	while(preColorIndex == colorIndex);
                                    1-  747     	BANKSEL	_colorIndex
     00E8 rrrr                      3-   71 m1      .banksel ram_address
     00E9 01rr                      1-  748     	MOVR	_colorIndex,W
                                    1-  749     	BANKSEL	_preColorIndex
     00EA rrrr                      3-   71 m1      .banksel ram_address
     00EB 12rr                      1-  750     	XORAR	_preColorIndex,W
     00EC 0D03                      1-  751     	BTRSC	STATUS,2
     00ED 3rrr                      1-  752     	LGOTO	_00123_DS_
     00EE                           1-  753     _00132_DS_:
                                    1-  754     	.line	182, "main.c"; 	if(INTFbits.T1IF)
     00EE 09rr                      1-  755     	BTRSS	_INTFbits,3
     00EF 3rrr                      1-  756     	LGOTO	_00134_DS_
                                    1-  757     	.line	184, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR1);	// Clear PABIF(PortB input change interrupt flag bit)
     00F0 21F7                      1-  758     	MOVIA	0xf7
     00F1 00rr                      1-  759     	MOVAR	_INTF
                                    1-  760     	.line	185, "main.c"; 	TM0_FLAG=1; //���ñ�־λ��
     00F2 2101                      1-  761     	MOVIA	0x01
                                    1-  762     	BANKSEL	_TM0_FLAG
     00F3 rrrr                      3-   71 m1      .banksel ram_address
     00F4 00rr                      1-  763     	MOVAR	_TM0_FLAG
     00F5                           1-  764     _00134_DS_:
                                    1-  765     	.line	187, "main.c"; 	if(INTFbits.PABIF)
     00F5 08rr                      1-  766     	BTRSS	_INTFbits,1
     00F6 3rrr                      1-  767     	LGOTO	_00139_DS_
                                    1-  768     	.line	189, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     00F7 21FD                      1-  769     	MOVIA	0xfd
     00F8 00rr                      1-  770     	MOVAR	_INTF
                                    1-  771     	.line	190, "main.c"; 	if(REC_FLAG == 0 && (PORTA & 0x04) == 0)
                                    1-  772     	BANKSEL	_REC_FLAG
     00F9 rrrr                      3-   71 m1      .banksel ram_address
     00FA 01rr                      1-  773     	MOVR	_REC_FLAG,W
     00FB 0903                      1-  774     	BTRSS	STATUS,2
     00FC 3rrr                      1-  775     	LGOTO	_00139_DS_
                                    1-  776     	BANKSEL	_PORTA
     00FD rrrr                      3-   71 m1      .banksel ram_address
     00FE 0Drr                      1-  777     	BTRSC	_PORTA,2
     00FF 3rrr                      1-  778     	LGOTO	_00139_DS_
                                    1-  779     	.line	192, "main.c"; 	uartFlag = 1;
     0100 2101                      1-  780     	MOVIA	0x01
                                    1-  781     	BANKSEL	_uartFlag
     0101 rrrr                      3-   71 m1      .banksel ram_address
     0102 00rr                      1-  782     	MOVAR	_uartFlag
     0103                           1-  783     _00139_DS_:
                                    1-  784     	.line	197, "main.c"; 	INTF = 0;
     0103 02rr                      1-  785     	CLRR	_INTF
                                    1-  786     	.line	199, "main.c"; 	}
                                    1-  787     	BANKSEL	___sdcc_saved_stk01
     0104 rrrr                      3-   71 m1      .banksel ram_address
     0105 01rr                      1-  788     	MOVR	___sdcc_saved_stk01,W
     0106 00rr                      1-  789     	MOVAR	STK01
                                    1-  790     	BANKSEL	___sdcc_saved_stk00
     0107 rrrr                      3-   71 m1      .banksel ram_address
     0108 01rr                      1-  791     	MOVR	___sdcc_saved_stk00,W
     0109 00rr                      1-  792     	MOVAR	STK00
                                    1-  793     	BANKSEL	___sdcc_saved_fsr
     010A rrrr                      3-   71 m1      .banksel ram_address
     010B 01rr                      1-  794     	MOVR	___sdcc_saved_fsr,W
     010C 0084                      1-  795     	MOVAR	FSR
     010D 01rr                      1-  796     	MOVR	PSAVE,W
     010E 008A                      1-  797     	MOVAR	PCHBUF
     010F 0283                      1-  798     	CLRR	STATUS
     0110 15rr                      1-  799     	SWAPR	SSAVE,W
     0111 0083                      1-  800     	MOVAR	STATUS
     0112 15rr                      1-  801     	SWAPR	WSAVE,F
     0113 15rr                      1-  802     	SWAPR	WSAVE,W
     0114                           1-  803     END_OF_INTERRUPT:
     0114 0011                      1-  804     	RETIE	
                                    1-  806     ;--------------------------------------------------------
                                    1-  807     ; code
                                    1-  808     ;--------------------------------------------------------
                                    1-  809     ;***
                                    1-  810     ;  pBlock Stats: dbName = M
                                    1-  811     ;***
                                    1-  812     ;has an exit
                                    1-  813     ;functions called:
                                    1-  814     ;   _revData
                                    1-  815     ;   _workCtr
                                    1-  816     ;   _revData
                                    1-  817     ;   _workCtr
                                    1-  818     ;; Starting pCode block
                                    1-  819     .segment "code"; module=main, function=_main
     0000                           1-  821     _main:
                                    1-  822     ; 2 exit points
                                    1-  823     	.line	228, "main.c"; 	PORTA = 0x00;
                                    1-  824     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  825     	CLRR	_PORTA
                                    1-  826     	.line	229, "main.c"; 	APHCON = 0xDB;		//PA5����
     0002 21DB                      1-  827     	MOVIA	0xdb
     0003 000r                      1-  828     	IOST	_APHCON
                                    1-  829     	.line	231, "main.c"; 	IOSTA =  C_PA2_Input | C_PA5_Input;					//PA5����
     0004 2124                      1-  830     	MOVIA	0x24
     0005 000r                      1-  831     	IOST	_IOSTA
                                    1-  832     	.line	232, "main.c"; 	IOSTB =  C_PB0_Input;					//PB0����
     0006 2101                      1-  833     	MOVIA	0x01
     0007 000r                      1-  834     	IOST	_IOSTB
                                    1-  835     	.line	233, "main.c"; 	PORTA = 0x00;  
     0008 02rr                      1-  836     	CLRR	_PORTA
                                    1-  837     	.line	234, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     0009 21A8                      1-  838     	MOVIA	0xa8
     000A 00rr                      1-  839     	MOVAR	_PCON
                                    1-  840     	.line	236, "main.c"; 	PCON1 = C_TMR0_Dis;
     000B 0200                      1-  841     	CLRA	
     000C 000r                      1-  842     	IOST	_PCON1
                                    1-  843     	.line	238, "main.c"; 	TMR0 = 55;
     000D 2137                      1-  844     	MOVIA	0x37
     000E 00rr                      1-  845     	MOVAR	_TMR0
                                    1-  846     	.line	239, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     000F 0200                      1-  847     	CLRA	
     0010 0003                      1-  848     	T0MD	
                                    1-  849     	.line	240, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0011 210B                      1-  850     	MOVIA	0x0b
     0012 00rr                      1-  851     	MOVAR	_INTE
                                    1-  852     	.line	241, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0013 2111                      1-  853     	MOVIA	0x11
     0014 000r                      1-  854     	IOST	_PCON1
                                    1-  855     	.line	244, "main.c"; 	TMRH = 0;
     0015 02rr                      1-  856     	CLRR	_TMRH
                                    1-  857     	.line	245, "main.c"; 	TMR1 = 104;
     0016 2168                      1-  858     	MOVIA	0x68
     0017 00rr                      1-  859     	SFUN	_TMR1
                                    1-  860     	.line	246, "main.c"; 	T1CR2 = C_PS1_Div4 | C_PS1_EN | C_TMR1_ClkSrc_Inst;
     0018 2101                      1-  861     	MOVIA	0x01
     0019 00rr                      1-  862     	SFUN	_T1CR2
                                    1-  863     	.line	247, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     001A 2103                      1-  864     	MOVIA	0x03
     001B 00rr                      1-  865     	SFUN	_T1CR1
                                    1-  866     	.line	251, "main.c"; 	ENI();
     001C 0004                      1-  867     	ENI
     001D                           1-  868     _00223_DS_:
                                    1-  869     	.line	255, "main.c"; 	CLRWDT();
     001D 0002                      1-  870     	clrwdt
                                    1-  871     	.line	256, "main.c"; 	revData();
     001E 2rrr                      1-  872     	LCALL	_revData
                                    1-  873     	.line	257, "main.c"; 	snub++;
                                    1-  874     	BANKSEL	_snub
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 05rr                      1-  875     	INCR	_snub,F
                                    1-  876     	.line	258, "main.c"; 	if(!IntFlag)
                                    1-  877     	BANKSEL	_IntFlag
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1-  878     	MOVR	_IntFlag,W
     0023 0D03                      1-  879     	BTRSC	STATUS,2
     0024 3rrr                      1-  880     	LGOTO	_00223_DS_
                                    1-  881     	.line	260, "main.c"; 	IntFlag = 0;
     0025 02rr                      1-  882     	CLRR	_IntFlag
                                    1-  883     	.line	261, "main.c"; 	if(uartFlag == 0)
                                    1-  884     	BANKSEL	_uartFlag
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  885     	MOVR	_uartFlag,W
     0028 0903                      1-  886     	BTRSS	STATUS,2
     0029 3rrr                      1-  887     	LGOTO	_00223_DS_
                                    1-  888     	.line	262, "main.c"; 	workCtr();
     002A 2rrr                      1-  889     	LCALL	_workCtr
     002B 3rrr                      1-  890     	LGOTO	_00223_DS_
                                    1-  891     	.line	265, "main.c"; 	}
                                    1-  892     	RETURN	
     002C 0010                      3-   26 m1      ret
                                    1-  893     ; exit point of _main
                                    1-  895     ;***
                                    1-  896     ;  pBlock Stats: dbName = C
                                    1-  897     ;***
                                    1-  898     ;has an exit
                                    1-  899     ;functions called:
                                    1-  900     ;   _sendRGB
                                    1-  901     ;   _Delay80us
                                    1-  902     ;   _sendRGB
                                    1-  903     ;   _Delay80us
                                    1-  904     ;7 compiler assigned registers:
                                    1-  905     ;   r0x101F
                                    1-  906     ;   STK00
                                    1-  907     ;   r0x1020
                                    1-  908     ;   STK01
                                    1-  909     ;   r0x1021
                                    1-  910     ;   r0x1022
                                    1-  911     ;   r0x1023
                                    1-  912     ;; Starting pCode block
                                    1-  913     .segment "code"; module=main, function=_sendtoLast
                                    1-  915     ;local variable name mapping:
     0000                           1-  921     _sendtoLast:
                                    1-  922     ; 2 exit points
                                    1-  923     	.line	595, "main.c"; 	void sendtoLast(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1-  924     	BANKSEL	r0x101F
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  925     	MOVAR	r0x101F
     0002 01rr                      1-  926     	MOVR	STK00,W
                                    1-  927     	BANKSEL	r0x1020
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  928     	MOVAR	r0x1020
     0005 01rr                      1-  929     	MOVR	STK01,W
                                    1-  930     	BANKSEL	r0x1021
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  931     	MOVAR	r0x1021
                                    1-  932     	.line	600, "main.c"; 	for(int i=0;i<LED_N;i++)
                                    1-  933     	BANKSEL	r0x1022
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1-  934     	CLRR	r0x1022
                                    1-  935     	BANKSEL	r0x1023
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1-  936     	CLRR	r0x1023
                                    1-  937     ;;signed compare: left < lit (0x2=2), size=2, mask=ffff
     000C                           1-  938     _00565_DS_:
                                    1-  939     	BANKSEL	r0x1023
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  940     	MOVR	r0x1023,W
     000E 2580                      1-  941     	ADDIA	0x80
     000F 2580                      1-  942     	ADDIA	0x80
     0010 0903                      1-  943     	BTRSS	STATUS,2
     0011 3rrr                      1-  944     	LGOTO	_00578_DS_
     0012 2102                      1-  945     	MOVIA	0x02
                                    1-  946     	BANKSEL	r0x1022
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 04rr                      1-  947     	SUBAR	r0x1022,W
     0015                           1-  948     _00578_DS_:
     0015 0C03                      1-  949     	BTRSC	STATUS,0
     0016 3rrr                      1-  950     	LGOTO	_00563_DS_
                                    1-  951     	.line	602, "main.c"; 	sendRGB(colorR,colorG,colorB);
                                    1-  952     	BANKSEL	r0x1021
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1-  953     	MOVR	r0x1021,W
     0019 00rr                      1-  954     	MOVAR	STK01
                                    1-  955     	BANKSEL	r0x1020
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  956     	MOVR	r0x1020,W
     001C 00rr                      1-  957     	MOVAR	STK00
                                    1-  958     	BANKSEL	r0x101F
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  959     	MOVR	r0x101F,W
     001F 2rrr                      1-  960     	LCALL	_sendRGB
                                    1-  961     	.line	603, "main.c"; 	if(uartFlag)
                                    1-  962     	BANKSEL	_uartFlag
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  963     	MOVR	_uartFlag,W
     0022 0903                      1-  964     	BTRSS	STATUS,2
                                    1-  965     	.line	604, "main.c"; 	return;
     0023 3rrr                      1-  966     	LGOTO	_00567_DS_
                                    1-  967     	.line	600, "main.c"; 	for(int i=0;i<LED_N;i++)
                                    1-  968     	BANKSEL	r0x1022
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 05rr                      1-  969     	INCR	r0x1022,F
     0026 0903                      1-  970     	BTRSS	STATUS,2
     0027 3rrr                      1-  971     	LGOTO	_00001_DS_
                                    1-  972     	BANKSEL	r0x1023
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 05rr                      1-  973     	INCR	r0x1023,F
     002A                           1-  974     _00001_DS_:
     002A 3rrr                      1-  975     	LGOTO	_00565_DS_
     002B                           1-  976     _00563_DS_:
                                    1-  977     	.line	606, "main.c"; 	Delay80us();
     002B 2rrr                      1-  978     	LCALL	_Delay80us
     002C                           1-  979     _00567_DS_:
                                    1-  980     	.line	607, "main.c"; 	}
                                    1-  981     	RETURN	
     002C 0010                      3-   26 m1      ret
                                    1-  982     ; exit point of _sendtoLast
                                    1-  984     ;***
                                    1-  985     ;  pBlock Stats: dbName = C
                                    1-  986     ;***
                                    1-  987     ;has an exit
                                    1-  988     ;2 compiler assigned registers:
                                    1-  989     ;   STK00
                                    1-  990     ;   STK01
                                    1-  991     ;; Starting pCode block
                                    1-  992     .segment "code"; module=main, function=_sendRGB
     0000                           1-  994     _sendRGB:
                                    1-  995     ; 2 exit points
                                    1-  996     	.line	483, "main.c"; 	void sendRGB(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1-  997     	BANKSEL	_Gdata
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  998     	MOVAR	_Gdata
     0002 01rr                      1-  999     	MOVR	STK00,W
                                    1- 1000     	BANKSEL	_Rdata
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1001     	MOVAR	_Rdata
     0005 01rr                      1- 1002     	MOVR	STK01,W
                                    1- 1003     	BANKSEL	_Bdata
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1004     	MOVAR	_Bdata
                                    1- 1005     	.line	491, "main.c"; 	DISI();	
     0008 0013                      1- 1006     	DISI
                                    1- 1007     	.line	492, "main.c"; 	if(R7)
                                    1- 1008     	BANKSEL	_Rdata
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 0Brr                      1- 1009     	BTRSS	_Rdata,7
     000B 3rrr                      1- 1010     	LGOTO	_00344_DS_
                                    1- 1011     	.line	493, "main.c"; 	NUB1();
     000C 1Drr                      1- 1012     	BCR	_PORTAbits,3
     000D 0000                      1- 1013     	nop
     000E 19rr                      1- 1014     	BSR	_PORTAbits,3
     000F 0000                      1- 1015     	nop
     0010 0000                      1- 1016     	nop
     0011 3rrr                      1- 1017     	LGOTO	_00349_DS_
     0012                           1- 1018     _00344_DS_:
                                    1- 1019     	.line	495, "main.c"; 	NUB0();
     0012 1Drr                      1- 1020     	BCR	_PORTAbits,3
     0013 0000                      1- 1021     	nop
     0014 19rr                      1- 1022     	BSR	_PORTAbits,3
     0015 0000                      1- 1023     	nop
     0016 1Drr                      1- 1024     	BCR	_PORTAbits,3
     0017 0000                      1- 1025     	nop
     0018                           1- 1026     _00349_DS_:
                                    1- 1027     	.line	496, "main.c"; 	if(R6)
                                    1- 1028     	BANKSEL	_Rdata
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 0Brr                      1- 1029     	BTRSS	_Rdata,6
     001A 3rrr                      1- 1030     	LGOTO	_00353_DS_
                                    1- 1031     	.line	497, "main.c"; 	NUB1();
     001B 1Drr                      1- 1032     	BCR	_PORTAbits,3
     001C 0000                      1- 1033     	nop
     001D 19rr                      1- 1034     	BSR	_PORTAbits,3
     001E 0000                      1- 1035     	nop
     001F 0000                      1- 1036     	nop
     0020 3rrr                      1- 1037     	LGOTO	_00358_DS_
     0021                           1- 1038     _00353_DS_:
                                    1- 1039     	.line	499, "main.c"; 	NUB0();
     0021 1Drr                      1- 1040     	BCR	_PORTAbits,3
     0022 0000                      1- 1041     	nop
     0023 19rr                      1- 1042     	BSR	_PORTAbits,3
     0024 0000                      1- 1043     	nop
     0025 1Drr                      1- 1044     	BCR	_PORTAbits,3
     0026 0000                      1- 1045     	nop
     0027                           1- 1046     _00358_DS_:
                                    1- 1047     	.line	500, "main.c"; 	if(R5)
                                    1- 1048     	BANKSEL	_Rdata
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 0Arr                      1- 1049     	BTRSS	_Rdata,5
     0029 3rrr                      1- 1050     	LGOTO	_00362_DS_
                                    1- 1051     	.line	501, "main.c"; 	NUB1();
     002A 1Drr                      1- 1052     	BCR	_PORTAbits,3
     002B 0000                      1- 1053     	nop
     002C 19rr                      1- 1054     	BSR	_PORTAbits,3
     002D 0000                      1- 1055     	nop
     002E 0000                      1- 1056     	nop
     002F 3rrr                      1- 1057     	LGOTO	_00367_DS_
     0030                           1- 1058     _00362_DS_:
                                    1- 1059     	.line	503, "main.c"; 	NUB0();
     0030 1Drr                      1- 1060     	BCR	_PORTAbits,3
     0031 0000                      1- 1061     	nop
     0032 19rr                      1- 1062     	BSR	_PORTAbits,3
     0033 0000                      1- 1063     	nop
     0034 1Drr                      1- 1064     	BCR	_PORTAbits,3
     0035 0000                      1- 1065     	nop
     0036                           1- 1066     _00367_DS_:
                                    1- 1067     	.line	504, "main.c"; 	if(R4)
                                    1- 1068     	BANKSEL	_Rdata
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 0Arr                      1- 1069     	BTRSS	_Rdata,4
     0038 3rrr                      1- 1070     	LGOTO	_00371_DS_
                                    1- 1071     	.line	505, "main.c"; 	NUB1();
     0039 1Drr                      1- 1072     	BCR	_PORTAbits,3
     003A 0000                      1- 1073     	nop
     003B 19rr                      1- 1074     	BSR	_PORTAbits,3
     003C 0000                      1- 1075     	nop
     003D 0000                      1- 1076     	nop
     003E 3rrr                      1- 1077     	LGOTO	_00376_DS_
     003F                           1- 1078     _00371_DS_:
                                    1- 1079     	.line	507, "main.c"; 	NUB0();
     003F 1Drr                      1- 1080     	BCR	_PORTAbits,3
     0040 0000                      1- 1081     	nop
     0041 19rr                      1- 1082     	BSR	_PORTAbits,3
     0042 0000                      1- 1083     	nop
     0043 1Drr                      1- 1084     	BCR	_PORTAbits,3
     0044 0000                      1- 1085     	nop
     0045                           1- 1086     _00376_DS_:
                                    1- 1087     	.line	508, "main.c"; 	if(R3)
                                    1- 1088     	BANKSEL	_Rdata
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 09rr                      1- 1089     	BTRSS	_Rdata,3
     0047 3rrr                      1- 1090     	LGOTO	_00380_DS_
                                    1- 1091     	.line	509, "main.c"; 	NUB1();
     0048 1Drr                      1- 1092     	BCR	_PORTAbits,3
     0049 0000                      1- 1093     	nop
     004A 19rr                      1- 1094     	BSR	_PORTAbits,3
     004B 0000                      1- 1095     	nop
     004C 0000                      1- 1096     	nop
     004D 3rrr                      1- 1097     	LGOTO	_00385_DS_
     004E                           1- 1098     _00380_DS_:
                                    1- 1099     	.line	511, "main.c"; 	NUB0();
     004E 1Drr                      1- 1100     	BCR	_PORTAbits,3
     004F 0000                      1- 1101     	nop
     0050 19rr                      1- 1102     	BSR	_PORTAbits,3
     0051 0000                      1- 1103     	nop
     0052 1Drr                      1- 1104     	BCR	_PORTAbits,3
     0053 0000                      1- 1105     	nop
     0054                           1- 1106     _00385_DS_:
                                    1- 1107     	.line	512, "main.c"; 	if(R2)
                                    1- 1108     	BANKSEL	_Rdata
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 09rr                      1- 1109     	BTRSS	_Rdata,2
     0056 3rrr                      1- 1110     	LGOTO	_00389_DS_
                                    1- 1111     	.line	513, "main.c"; 	NUB1();
     0057 1Drr                      1- 1112     	BCR	_PORTAbits,3
     0058 0000                      1- 1113     	nop
     0059 19rr                      1- 1114     	BSR	_PORTAbits,3
     005A 0000                      1- 1115     	nop
     005B 0000                      1- 1116     	nop
     005C 3rrr                      1- 1117     	LGOTO	_00394_DS_
     005D                           1- 1118     _00389_DS_:
                                    1- 1119     	.line	515, "main.c"; 	NUB0();
     005D 1Drr                      1- 1120     	BCR	_PORTAbits,3
     005E 0000                      1- 1121     	nop
     005F 19rr                      1- 1122     	BSR	_PORTAbits,3
     0060 0000                      1- 1123     	nop
     0061 1Drr                      1- 1124     	BCR	_PORTAbits,3
     0062 0000                      1- 1125     	nop
     0063                           1- 1126     _00394_DS_:
                                    1- 1127     	.line	516, "main.c"; 	if(R1)
                                    1- 1128     	BANKSEL	_Rdata
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 08rr                      1- 1129     	BTRSS	_Rdata,1
     0065 3rrr                      1- 1130     	LGOTO	_00398_DS_
                                    1- 1131     	.line	517, "main.c"; 	NUB1();
     0066 1Drr                      1- 1132     	BCR	_PORTAbits,3
     0067 0000                      1- 1133     	nop
     0068 19rr                      1- 1134     	BSR	_PORTAbits,3
     0069 0000                      1- 1135     	nop
     006A 0000                      1- 1136     	nop
     006B 3rrr                      1- 1137     	LGOTO	_00403_DS_
     006C                           1- 1138     _00398_DS_:
                                    1- 1139     	.line	519, "main.c"; 	NUB0();
     006C 1Drr                      1- 1140     	BCR	_PORTAbits,3
     006D 0000                      1- 1141     	nop
     006E 19rr                      1- 1142     	BSR	_PORTAbits,3
     006F 0000                      1- 1143     	nop
     0070 1Drr                      1- 1144     	BCR	_PORTAbits,3
     0071 0000                      1- 1145     	nop
     0072                           1- 1146     _00403_DS_:
                                    1- 1147     	.line	520, "main.c"; 	if(R0)
                                    1- 1148     	BANKSEL	_Rdata
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 08rr                      1- 1149     	BTRSS	_Rdata,0
     0074 3rrr                      1- 1150     	LGOTO	_00407_DS_
                                    1- 1151     	.line	521, "main.c"; 	NUB1();
     0075 1Drr                      1- 1152     	BCR	_PORTAbits,3
     0076 0000                      1- 1153     	nop
     0077 19rr                      1- 1154     	BSR	_PORTAbits,3
     0078 0000                      1- 1155     	nop
     0079 0000                      1- 1156     	nop
     007A 3rrr                      1- 1157     	LGOTO	_00412_DS_
     007B                           1- 1158     _00407_DS_:
                                    1- 1159     	.line	523, "main.c"; 	NUB0();
     007B 1Drr                      1- 1160     	BCR	_PORTAbits,3
     007C 0000                      1- 1161     	nop
     007D 19rr                      1- 1162     	BSR	_PORTAbits,3
     007E 0000                      1- 1163     	nop
     007F 1Drr                      1- 1164     	BCR	_PORTAbits,3
     0080 0000                      1- 1165     	nop
     0081                           1- 1166     _00412_DS_:
                                    1- 1167     	.line	525, "main.c"; 	if(G7)
                                    1- 1168     	BANKSEL	_Gdata
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 0Brr                      1- 1169     	BTRSS	_Gdata,7
     0083 3rrr                      1- 1170     	LGOTO	_00416_DS_
                                    1- 1171     	.line	526, "main.c"; 	NUB1();
     0084 1Drr                      1- 1172     	BCR	_PORTAbits,3
     0085 0000                      1- 1173     	nop
     0086 19rr                      1- 1174     	BSR	_PORTAbits,3
     0087 0000                      1- 1175     	nop
     0088 0000                      1- 1176     	nop
     0089 3rrr                      1- 1177     	LGOTO	_00421_DS_
     008A                           1- 1178     _00416_DS_:
                                    1- 1179     	.line	528, "main.c"; 	NUB0();
     008A 1Drr                      1- 1180     	BCR	_PORTAbits,3
     008B 0000                      1- 1181     	nop
     008C 19rr                      1- 1182     	BSR	_PORTAbits,3
     008D 0000                      1- 1183     	nop
     008E 1Drr                      1- 1184     	BCR	_PORTAbits,3
     008F 0000                      1- 1185     	nop
     0090                           1- 1186     _00421_DS_:
                                    1- 1187     	.line	529, "main.c"; 	if(G6)
                                    1- 1188     	BANKSEL	_Gdata
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 0Brr                      1- 1189     	BTRSS	_Gdata,6
     0092 3rrr                      1- 1190     	LGOTO	_00425_DS_
                                    1- 1191     	.line	530, "main.c"; 	NUB1();
     0093 1Drr                      1- 1192     	BCR	_PORTAbits,3
     0094 0000                      1- 1193     	nop
     0095 19rr                      1- 1194     	BSR	_PORTAbits,3
     0096 0000                      1- 1195     	nop
     0097 0000                      1- 1196     	nop
     0098 3rrr                      1- 1197     	LGOTO	_00430_DS_
     0099                           1- 1198     _00425_DS_:
                                    1- 1199     	.line	532, "main.c"; 	NUB0();
     0099 1Drr                      1- 1200     	BCR	_PORTAbits,3
     009A 0000                      1- 1201     	nop
     009B 19rr                      1- 1202     	BSR	_PORTAbits,3
     009C 0000                      1- 1203     	nop
     009D 1Drr                      1- 1204     	BCR	_PORTAbits,3
     009E 0000                      1- 1205     	nop
     009F                           1- 1206     _00430_DS_:
                                    1- 1207     	.line	533, "main.c"; 	if(G5)
                                    1- 1208     	BANKSEL	_Gdata
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 0Arr                      1- 1209     	BTRSS	_Gdata,5
     00A1 3rrr                      1- 1210     	LGOTO	_00434_DS_
                                    1- 1211     	.line	534, "main.c"; 	NUB1();
     00A2 1Drr                      1- 1212     	BCR	_PORTAbits,3
     00A3 0000                      1- 1213     	nop
     00A4 19rr                      1- 1214     	BSR	_PORTAbits,3
     00A5 0000                      1- 1215     	nop
     00A6 0000                      1- 1216     	nop
     00A7 3rrr                      1- 1217     	LGOTO	_00439_DS_
     00A8                           1- 1218     _00434_DS_:
                                    1- 1219     	.line	536, "main.c"; 	NUB0();
     00A8 1Drr                      1- 1220     	BCR	_PORTAbits,3
     00A9 0000                      1- 1221     	nop
     00AA 19rr                      1- 1222     	BSR	_PORTAbits,3
     00AB 0000                      1- 1223     	nop
     00AC 1Drr                      1- 1224     	BCR	_PORTAbits,3
     00AD 0000                      1- 1225     	nop
     00AE                           1- 1226     _00439_DS_:
                                    1- 1227     	.line	537, "main.c"; 	if(G4)
                                    1- 1228     	BANKSEL	_Gdata
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 0Arr                      1- 1229     	BTRSS	_Gdata,4
     00B0 3rrr                      1- 1230     	LGOTO	_00443_DS_
                                    1- 1231     	.line	538, "main.c"; 	NUB1();
     00B1 1Drr                      1- 1232     	BCR	_PORTAbits,3
     00B2 0000                      1- 1233     	nop
     00B3 19rr                      1- 1234     	BSR	_PORTAbits,3
     00B4 0000                      1- 1235     	nop
     00B5 0000                      1- 1236     	nop
     00B6 3rrr                      1- 1237     	LGOTO	_00448_DS_
     00B7                           1- 1238     _00443_DS_:
                                    1- 1239     	.line	540, "main.c"; 	NUB0();
     00B7 1Drr                      1- 1240     	BCR	_PORTAbits,3
     00B8 0000                      1- 1241     	nop
     00B9 19rr                      1- 1242     	BSR	_PORTAbits,3
     00BA 0000                      1- 1243     	nop
     00BB 1Drr                      1- 1244     	BCR	_PORTAbits,3
     00BC 0000                      1- 1245     	nop
     00BD                           1- 1246     _00448_DS_:
                                    1- 1247     	.line	541, "main.c"; 	if(G3)
                                    1- 1248     	BANKSEL	_Gdata
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 09rr                      1- 1249     	BTRSS	_Gdata,3
     00BF 3rrr                      1- 1250     	LGOTO	_00452_DS_
                                    1- 1251     	.line	542, "main.c"; 	NUB1();
     00C0 1Drr                      1- 1252     	BCR	_PORTAbits,3
     00C1 0000                      1- 1253     	nop
     00C2 19rr                      1- 1254     	BSR	_PORTAbits,3
     00C3 0000                      1- 1255     	nop
     00C4 0000                      1- 1256     	nop
     00C5 3rrr                      1- 1257     	LGOTO	_00457_DS_
     00C6                           1- 1258     _00452_DS_:
                                    1- 1259     	.line	544, "main.c"; 	NUB0();
     00C6 1Drr                      1- 1260     	BCR	_PORTAbits,3
     00C7 0000                      1- 1261     	nop
     00C8 19rr                      1- 1262     	BSR	_PORTAbits,3
     00C9 0000                      1- 1263     	nop
     00CA 1Drr                      1- 1264     	BCR	_PORTAbits,3
     00CB 0000                      1- 1265     	nop
     00CC                           1- 1266     _00457_DS_:
                                    1- 1267     	.line	545, "main.c"; 	if(G2)
                                    1- 1268     	BANKSEL	_Gdata
     00CC rrrr                      3-   71 m1      .banksel ram_address
     00CD 09rr                      1- 1269     	BTRSS	_Gdata,2
     00CE 3rrr                      1- 1270     	LGOTO	_00461_DS_
                                    1- 1271     	.line	546, "main.c"; 	NUB1();
     00CF 1Drr                      1- 1272     	BCR	_PORTAbits,3
     00D0 0000                      1- 1273     	nop
     00D1 19rr                      1- 1274     	BSR	_PORTAbits,3
     00D2 0000                      1- 1275     	nop
     00D3 0000                      1- 1276     	nop
     00D4 3rrr                      1- 1277     	LGOTO	_00466_DS_
     00D5                           1- 1278     _00461_DS_:
                                    1- 1279     	.line	548, "main.c"; 	NUB0();
     00D5 1Drr                      1- 1280     	BCR	_PORTAbits,3
     00D6 0000                      1- 1281     	nop
     00D7 19rr                      1- 1282     	BSR	_PORTAbits,3
     00D8 0000                      1- 1283     	nop
     00D9 1Drr                      1- 1284     	BCR	_PORTAbits,3
     00DA 0000                      1- 1285     	nop
     00DB                           1- 1286     _00466_DS_:
                                    1- 1287     	.line	549, "main.c"; 	if(G1)
                                    1- 1288     	BANKSEL	_Gdata
     00DB rrrr                      3-   71 m1      .banksel ram_address
     00DC 08rr                      1- 1289     	BTRSS	_Gdata,1
     00DD 3rrr                      1- 1290     	LGOTO	_00470_DS_
                                    1- 1291     	.line	550, "main.c"; 	NUB1();
     00DE 1Drr                      1- 1292     	BCR	_PORTAbits,3
     00DF 0000                      1- 1293     	nop
     00E0 19rr                      1- 1294     	BSR	_PORTAbits,3
     00E1 0000                      1- 1295     	nop
     00E2 0000                      1- 1296     	nop
     00E3 3rrr                      1- 1297     	LGOTO	_00475_DS_
     00E4                           1- 1298     _00470_DS_:
                                    1- 1299     	.line	552, "main.c"; 	NUB0();
     00E4 1Drr                      1- 1300     	BCR	_PORTAbits,3
     00E5 0000                      1- 1301     	nop
     00E6 19rr                      1- 1302     	BSR	_PORTAbits,3
     00E7 0000                      1- 1303     	nop
     00E8 1Drr                      1- 1304     	BCR	_PORTAbits,3
     00E9 0000                      1- 1305     	nop
     00EA                           1- 1306     _00475_DS_:
                                    1- 1307     	.line	553, "main.c"; 	if(G0)
                                    1- 1308     	BANKSEL	_Gdata
     00EA rrrr                      3-   71 m1      .banksel ram_address
     00EB 08rr                      1- 1309     	BTRSS	_Gdata,0
     00EC 3rrr                      1- 1310     	LGOTO	_00479_DS_
                                    1- 1311     	.line	554, "main.c"; 	NUB1();
     00ED 1Drr                      1- 1312     	BCR	_PORTAbits,3
     00EE 0000                      1- 1313     	nop
     00EF 19rr                      1- 1314     	BSR	_PORTAbits,3
     00F0 0000                      1- 1315     	nop
     00F1 0000                      1- 1316     	nop
     00F2 3rrr                      1- 1317     	LGOTO	_00484_DS_
     00F3                           1- 1318     _00479_DS_:
                                    1- 1319     	.line	556, "main.c"; 	NUB0();
     00F3 1Drr                      1- 1320     	BCR	_PORTAbits,3
     00F4 0000                      1- 1321     	nop
     00F5 19rr                      1- 1322     	BSR	_PORTAbits,3
     00F6 0000                      1- 1323     	nop
     00F7 1Drr                      1- 1324     	BCR	_PORTAbits,3
     00F8 0000                      1- 1325     	nop
     00F9                           1- 1326     _00484_DS_:
                                    1- 1327     	.line	558, "main.c"; 	if(B7)
                                    1- 1328     	BANKSEL	_Bdata
     00F9 rrrr                      3-   71 m1      .banksel ram_address
     00FA 0Brr                      1- 1329     	BTRSS	_Bdata,7
     00FB 3rrr                      1- 1330     	LGOTO	_00488_DS_
                                    1- 1331     	.line	559, "main.c"; 	NUB1();
     00FC 1Drr                      1- 1332     	BCR	_PORTAbits,3
     00FD 0000                      1- 1333     	nop
     00FE 19rr                      1- 1334     	BSR	_PORTAbits,3
     00FF 0000                      1- 1335     	nop
     0100 0000                      1- 1336     	nop
     0101 3rrr                      1- 1337     	LGOTO	_00493_DS_
     0102                           1- 1338     _00488_DS_:
                                    1- 1339     	.line	561, "main.c"; 	NUB0();
     0102 1Drr                      1- 1340     	BCR	_PORTAbits,3
     0103 0000                      1- 1341     	nop
     0104 19rr                      1- 1342     	BSR	_PORTAbits,3
     0105 0000                      1- 1343     	nop
     0106 1Drr                      1- 1344     	BCR	_PORTAbits,3
     0107 0000                      1- 1345     	nop
     0108                           1- 1346     _00493_DS_:
                                    1- 1347     	.line	562, "main.c"; 	if(B6)
                                    1- 1348     	BANKSEL	_Bdata
     0108 rrrr                      3-   71 m1      .banksel ram_address
     0109 0Brr                      1- 1349     	BTRSS	_Bdata,6
     010A 3rrr                      1- 1350     	LGOTO	_00497_DS_
                                    1- 1351     	.line	563, "main.c"; 	NUB1();
     010B 1Drr                      1- 1352     	BCR	_PORTAbits,3
     010C 0000                      1- 1353     	nop
     010D 19rr                      1- 1354     	BSR	_PORTAbits,3
     010E 0000                      1- 1355     	nop
     010F 0000                      1- 1356     	nop
     0110 3rrr                      1- 1357     	LGOTO	_00502_DS_
     0111                           1- 1358     _00497_DS_:
                                    1- 1359     	.line	565, "main.c"; 	NUB0();
     0111 1Drr                      1- 1360     	BCR	_PORTAbits,3
     0112 0000                      1- 1361     	nop
     0113 19rr                      1- 1362     	BSR	_PORTAbits,3
     0114 0000                      1- 1363     	nop
     0115 1Drr                      1- 1364     	BCR	_PORTAbits,3
     0116 0000                      1- 1365     	nop
     0117                           1- 1366     _00502_DS_:
                                    1- 1367     	.line	566, "main.c"; 	if(B5)
                                    1- 1368     	BANKSEL	_Bdata
     0117 rrrr                      3-   71 m1      .banksel ram_address
     0118 0Arr                      1- 1369     	BTRSS	_Bdata,5
     0119 3rrr                      1- 1370     	LGOTO	_00506_DS_
                                    1- 1371     	.line	567, "main.c"; 	NUB1();
     011A 1Drr                      1- 1372     	BCR	_PORTAbits,3
     011B 0000                      1- 1373     	nop
     011C 19rr                      1- 1374     	BSR	_PORTAbits,3
     011D 0000                      1- 1375     	nop
     011E 0000                      1- 1376     	nop
     011F 3rrr                      1- 1377     	LGOTO	_00511_DS_
     0120                           1- 1378     _00506_DS_:
                                    1- 1379     	.line	569, "main.c"; 	NUB0();
     0120 1Drr                      1- 1380     	BCR	_PORTAbits,3
     0121 0000                      1- 1381     	nop
     0122 19rr                      1- 1382     	BSR	_PORTAbits,3
     0123 0000                      1- 1383     	nop
     0124 1Drr                      1- 1384     	BCR	_PORTAbits,3
     0125 0000                      1- 1385     	nop
     0126                           1- 1386     _00511_DS_:
                                    1- 1387     	.line	570, "main.c"; 	if(B4)
                                    1- 1388     	BANKSEL	_Bdata
     0126 rrrr                      3-   71 m1      .banksel ram_address
     0127 0Arr                      1- 1389     	BTRSS	_Bdata,4
     0128 3rrr                      1- 1390     	LGOTO	_00515_DS_
                                    1- 1391     	.line	571, "main.c"; 	NUB1();
     0129 1Drr                      1- 1392     	BCR	_PORTAbits,3
     012A 0000                      1- 1393     	nop
     012B 19rr                      1- 1394     	BSR	_PORTAbits,3
     012C 0000                      1- 1395     	nop
     012D 0000                      1- 1396     	nop
     012E 3rrr                      1- 1397     	LGOTO	_00520_DS_
     012F                           1- 1398     _00515_DS_:
                                    1- 1399     	.line	573, "main.c"; 	NUB0();
     012F 1Drr                      1- 1400     	BCR	_PORTAbits,3
     0130 0000                      1- 1401     	nop
     0131 19rr                      1- 1402     	BSR	_PORTAbits,3
     0132 0000                      1- 1403     	nop
     0133 1Drr                      1- 1404     	BCR	_PORTAbits,3
     0134 0000                      1- 1405     	nop
     0135                           1- 1406     _00520_DS_:
                                    1- 1407     	.line	574, "main.c"; 	if(B3)
                                    1- 1408     	BANKSEL	_Bdata
     0135 rrrr                      3-   71 m1      .banksel ram_address
     0136 09rr                      1- 1409     	BTRSS	_Bdata,3
     0137 3rrr                      1- 1410     	LGOTO	_00524_DS_
                                    1- 1411     	.line	575, "main.c"; 	NUB1();
     0138 1Drr                      1- 1412     	BCR	_PORTAbits,3
     0139 0000                      1- 1413     	nop
     013A 19rr                      1- 1414     	BSR	_PORTAbits,3
     013B 0000                      1- 1415     	nop
     013C 0000                      1- 1416     	nop
     013D 3rrr                      1- 1417     	LGOTO	_00529_DS_
     013E                           1- 1418     _00524_DS_:
                                    1- 1419     	.line	577, "main.c"; 	NUB0();
     013E 1Drr                      1- 1420     	BCR	_PORTAbits,3
     013F 0000                      1- 1421     	nop
     0140 19rr                      1- 1422     	BSR	_PORTAbits,3
     0141 0000                      1- 1423     	nop
     0142 1Drr                      1- 1424     	BCR	_PORTAbits,3
     0143 0000                      1- 1425     	nop
     0144                           1- 1426     _00529_DS_:
                                    1- 1427     	.line	578, "main.c"; 	if(B2)
                                    1- 1428     	BANKSEL	_Bdata
     0144 rrrr                      3-   71 m1      .banksel ram_address
     0145 09rr                      1- 1429     	BTRSS	_Bdata,2
     0146 3rrr                      1- 1430     	LGOTO	_00533_DS_
                                    1- 1431     	.line	579, "main.c"; 	NUB1();
     0147 1Drr                      1- 1432     	BCR	_PORTAbits,3
     0148 0000                      1- 1433     	nop
     0149 19rr                      1- 1434     	BSR	_PORTAbits,3
     014A 0000                      1- 1435     	nop
     014B 0000                      1- 1436     	nop
     014C 3rrr                      1- 1437     	LGOTO	_00538_DS_
     014D                           1- 1438     _00533_DS_:
                                    1- 1439     	.line	581, "main.c"; 	NUB0();
     014D 1Drr                      1- 1440     	BCR	_PORTAbits,3
     014E 0000                      1- 1441     	nop
     014F 19rr                      1- 1442     	BSR	_PORTAbits,3
     0150 0000                      1- 1443     	nop
     0151 1Drr                      1- 1444     	BCR	_PORTAbits,3
     0152 0000                      1- 1445     	nop
     0153                           1- 1446     _00538_DS_:
                                    1- 1447     	.line	582, "main.c"; 	if(B1)
                                    1- 1448     	BANKSEL	_Bdata
     0153 rrrr                      3-   71 m1      .banksel ram_address
     0154 08rr                      1- 1449     	BTRSS	_Bdata,1
     0155 3rrr                      1- 1450     	LGOTO	_00542_DS_
                                    1- 1451     	.line	583, "main.c"; 	NUB1();
     0156 1Drr                      1- 1452     	BCR	_PORTAbits,3
     0157 0000                      1- 1453     	nop
     0158 19rr                      1- 1454     	BSR	_PORTAbits,3
     0159 0000                      1- 1455     	nop
     015A 0000                      1- 1456     	nop
     015B 3rrr                      1- 1457     	LGOTO	_00547_DS_
     015C                           1- 1458     _00542_DS_:
                                    1- 1459     	.line	585, "main.c"; 	NUB0();
     015C 1Drr                      1- 1460     	BCR	_PORTAbits,3
     015D 0000                      1- 1461     	nop
     015E 19rr                      1- 1462     	BSR	_PORTAbits,3
     015F 0000                      1- 1463     	nop
     0160 1Drr                      1- 1464     	BCR	_PORTAbits,3
     0161 0000                      1- 1465     	nop
     0162                           1- 1466     _00547_DS_:
                                    1- 1467     	.line	586, "main.c"; 	if(B0)
                                    1- 1468     	BANKSEL	_Bdata
     0162 rrrr                      3-   71 m1      .banksel ram_address
     0163 08rr                      1- 1469     	BTRSS	_Bdata,0
     0164 3rrr                      1- 1470     	LGOTO	_00551_DS_
                                    1- 1471     	.line	587, "main.c"; 	NUB1();
     0165 1Drr                      1- 1472     	BCR	_PORTAbits,3
     0166 0000                      1- 1473     	nop
     0167 19rr                      1- 1474     	BSR	_PORTAbits,3
     0168 0000                      1- 1475     	nop
     0169 0000                      1- 1476     	nop
     016A 3rrr                      1- 1477     	LGOTO	_00556_DS_
     016B                           1- 1478     _00551_DS_:
                                    1- 1479     	.line	589, "main.c"; 	NUB0();
     016B 1Drr                      1- 1480     	BCR	_PORTAbits,3
     016C 0000                      1- 1481     	nop
     016D 19rr                      1- 1482     	BSR	_PORTAbits,3
     016E 0000                      1- 1483     	nop
     016F 1Drr                      1- 1484     	BCR	_PORTAbits,3
     0170 0000                      1- 1485     	nop
     0171                           1- 1486     _00556_DS_:
                                    1- 1487     	.line	591, "main.c"; 	PORTAbits.PA3 = 0;
     0171 1Drr                      1- 1488     	BCR	_PORTAbits,3
                                    1- 1489     	.line	592, "main.c"; 	ENI();	
     0172 0004                      1- 1490     	ENI
                                    1- 1491     	.line	593, "main.c"; 	}
                                    1- 1492     	RETURN	
     0173 0010                      3-   26 m1      ret
                                    1- 1493     ; exit point of _sendRGB
                                    1- 1495     ;***
                                    1- 1496     ;  pBlock Stats: dbName = C
                                    1- 1497     ;***
                                    1- 1498     ;has an exit
                                    1- 1499     ;; Starting pCode block
                                    1- 1500     .segment "code"; module=main, function=_Delay10Us
     0000                           1- 1502     _Delay10Us:
                                    1- 1503     ; 2 exit points
                                    1- 1504     	.line	474, "main.c"; 	NOP();
     0000 0000                      1- 1505     	nop
                                    1- 1506     	.line	475, "main.c"; 	NOP();
     0001 0000                      1- 1507     	nop
                                    1- 1508     	.line	476, "main.c"; 	NOP();
     0002 0000                      1- 1509     	nop
                                    1- 1510     	.line	477, "main.c"; 	NOP();
     0003 0000                      1- 1511     	nop
                                    1- 1512     	.line	478, "main.c"; 	NOP();
     0004 0000                      1- 1513     	nop
                                    1- 1514     	.line	479, "main.c"; 	NOP();
     0005 0000                      1- 1515     	nop
                                    1- 1516     	.line	480, "main.c"; 	}
                                    1- 1517     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1- 1518     ; exit point of _Delay10Us
                                    1- 1520     ;***
                                    1- 1521     ;  pBlock Stats: dbName = C
                                    1- 1522     ;***
                                    1- 1523     ;has an exit
                                    1- 1524     ;1 compiler assigned register :
                                    1- 1525     ;   r0x101E
                                    1- 1526     ;; Starting pCode block
                                    1- 1527     .segment "code"; module=main, function=_Delay80us
                                    1- 1529     ;local variable name mapping:
     0000                           1- 1531     _Delay80us:
                                    1- 1532     ; 2 exit points
                                    1- 1533     	.line	465, "main.c"; 	for(unsigned char i=0;i<60;i++)
                                    1- 1534     	BANKSEL	r0x101E
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1535     	CLRR	r0x101E
                                    1- 1536     ;;unsigned compare: left < lit (0x3C=60), size=1
     0002                           1- 1537     _00330_DS_:
     0002 213C                      1- 1538     	MOVIA	0x3c
                                    1- 1539     	BANKSEL	r0x101E
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 04rr                      1- 1540     	SUBAR	r0x101E,W
     0005 0C03                      1- 1541     	BTRSC	STATUS,0
     0006 3rrr                      1- 1542     	LGOTO	_00332_DS_
                                    1- 1543     	.line	467, "main.c"; 	if(uartFlag)
                                    1- 1544     	BANKSEL	_uartFlag
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1- 1545     	MOVR	_uartFlag,W
     0009 0903                      1- 1546     	BTRSS	STATUS,2
                                    1- 1547     	.line	468, "main.c"; 	return;
     000A 3rrr                      1- 1548     	LGOTO	_00332_DS_
                                    1- 1549     	.line	465, "main.c"; 	for(unsigned char i=0;i<60;i++)
                                    1- 1550     	BANKSEL	r0x101E
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 1551     	INCR	r0x101E,F
     000D 3rrr                      1- 1552     	LGOTO	_00330_DS_
     000E                           1- 1553     _00332_DS_:
                                    1- 1554     	.line	470, "main.c"; 	}
                                    1- 1555     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1556     ; exit point of _Delay80us
                                    1- 1558     ;***
                                    1- 1559     ;  pBlock Stats: dbName = C
                                    1- 1560     ;***
                                    1- 1561     ;has an exit
                                    1- 1562     ;functions called:
                                    1- 1563     ;   _setColor
                                    1- 1564     ;   _setColor
                                    1- 1565     ;; Starting pCode block
                                    1- 1566     .segment "code"; module=main, function=_work10
     0000                           1- 1568     _work10:
                                    1- 1569     ; 2 exit points
                                    1- 1570     	.line	458, "main.c"; 	setColor(colorIndex);
                                    1- 1571     	BANKSEL	_colorIndex
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1572     	MOVR	_colorIndex,W
     0002 2rrr                      1- 1573     	LCALL	_setColor
                                    1- 1574     	.line	460, "main.c"; 	}
                                    1- 1575     	RETURN	
     0003 0010                      3-   26 m1      ret
                                    1- 1576     ; exit point of _work10
                                    1- 1578     ;***
                                    1- 1579     ;  pBlock Stats: dbName = C
                                    1- 1580     ;***
                                    1- 1581     ;has an exit
                                    1- 1582     ;functions called:
                                    1- 1583     ;   __divuint
                                    1- 1584     ;   _sendtoLast
                                    1- 1585     ;   _setColor
                                    1- 1586     ;   __divuint
                                    1- 1587     ;   _sendtoLast
                                    1- 1588     ;   _setColor
                                    1- 1589     ;5 compiler assigned registers:
                                    1- 1590     ;   STK02
                                    1- 1591     ;   STK01
                                    1- 1592     ;   STK00
                                    1- 1593     ;   r0x1025
                                    1- 1594     ;   r0x1026
                                    1- 1595     ;; Starting pCode block
                                    1- 1596     .segment "code"; module=main, function=_work9
     0000                           1- 1598     _work9:
                                    1- 1599     ; 2 exit points
                                    1- 1600     	.line	439, "main.c"; 	if(++ledCount > 100)
                                    1- 1601     	BANKSEL	_ledCount
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1602     	INCR	_ledCount,F
                                    1- 1603     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1604     ;;unsigned compare: left >= lit (0x65=101), size=1
     0002 2165                      1- 1605     	MOVIA	0x65
     0003 04rr                      1- 1606     	SUBAR	_ledCount,W
     0004 0C03                      1- 1607     	BTRSC	STATUS,0
                                    1- 1608     	.line	441, "main.c"; 	ledCount = 0;
     0005 02rr                      1- 1609     	CLRR	_ledCount
                                    1- 1610     	.line	443, "main.c"; 	duty = timeCount/10;
     0006 210A                      1- 1611     	MOVIA	0x0a
     0007 00rr                      1- 1612     	MOVAR	STK02
     0008 2100                      1- 1613     	MOVIA	0x00
     0009 00rr                      1- 1614     	MOVAR	STK01
                                    1- 1615     	BANKSEL	_timeCount
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1616     	MOVR	_timeCount,W
     000C 00rr                      1- 1617     	MOVAR	STK00
     000D 01rr                      1- 1618     	MOVR	(_timeCount + 1),W
     000E 2rrr                      1- 1619     	LCALL	__divuint
                                    1- 1620     ;;1	MOVAR	r0x1025
     000F 01rr                      1- 1621     	MOVR	STK00,W
                                    1- 1622     ;;1	MOVAR	r0x1026
                                    1- 1623     	BANKSEL	_duty
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1624     	MOVAR	_duty
                                    1- 1625     	.line	444, "main.c"; 	if(ledCount < duty)
                                    1- 1626     	BANKSEL	_ledCount
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1627     	SUBAR	_ledCount,W
     0014 0C03                      1- 1628     	BTRSC	STATUS,0
     0015 3rrr                      1- 1629     	LGOTO	_00315_DS_
                                    1- 1630     	.line	447, "main.c"; 	sendtoLast(COLOR0);
     0016 2100                      1- 1631     	MOVIA	0x00
     0017 00rr                      1- 1632     	MOVAR	STK01
     0018 00rr                      1- 1633     	MOVAR	STK00
     0019 2rrr                      1- 1634     	LCALL	_sendtoLast
     001A 3rrr                      1- 1635     	LGOTO	_00317_DS_
     001B                           1- 1636     _00315_DS_:
                                    1- 1637     	.line	451, "main.c"; 	setColor(colorIndex);
                                    1- 1638     	BANKSEL	_colorIndex
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 1639     	MOVR	_colorIndex,W
     001D 2rrr                      1- 1640     	LCALL	_setColor
     001E                           1- 1641     _00317_DS_:
                                    1- 1642     	.line	454, "main.c"; 	}
                                    1- 1643     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1- 1644     ; exit point of _work9
                                    1- 1646     ;***
                                    1- 1647     ;  pBlock Stats: dbName = C
                                    1- 1648     ;***
                                    1- 1649     ;has an exit
                                    1- 1650     ;functions called:
                                    1- 1651     ;   _sendtoLast
                                    1- 1652     ;   _sendtoLast
                                    1- 1653     ;   _sendtoLast
                                    1- 1654     ;   _sendtoLast
                                    1- 1655     ;   _sendtoLast
                                    1- 1656     ;   _sendtoLast
                                    1- 1657     ;   _sendtoLast
                                    1- 1658     ;   _sendtoLast
                                    1- 1659     ;   _sendtoLast
                                    1- 1660     ;   _sendtoLast
                                    1- 1661     ;   _sendtoLast
                                    1- 1662     ;   _sendtoLast
                                    1- 1663     ;   _sendtoLast
                                    1- 1664     ;   _sendtoLast
                                    1- 1665     ;   _sendtoLast
                                    1- 1666     ;   _sendtoLast
                                    1- 1667     ;   _sendtoLast
                                    1- 1668     ;   _sendtoLast
                                    1- 1669     ;3 compiler assigned registers:
                                    1- 1670     ;   r0x1024
                                    1- 1671     ;   STK01
                                    1- 1672     ;   STK00
                                    1- 1673     ;; Starting pCode block
                                    1- 1674     .segment "code"; module=main, function=_setColor
                                    1- 1676     ;local variable name mapping:
     0000                           1- 1678     _setColor:
                                    1- 1679     ; 2 exit points
                                    1- 1680     	.line	399, "main.c"; 	void setColor(u8t cindex)
                                    1- 1681     	BANKSEL	r0x1024
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1682     	MOVAR	r0x1024
                                    1- 1683     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1684     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 1685     	.line	401, "main.c"; 	switch(cindex)
     0002 2109                      1- 1686     	MOVIA	0x09
     0003 04rr                      1- 1687     	SUBAR	r0x1024,W
     0004 0C03                      1- 1688     	BTRSC	STATUS,0
     0005 3rrr                      1- 1689     	LGOTO	_00295_DS_
     0006 21rr                      1- 1690     	MOVIA	((_00307_DS_ >> 8) & 0xff)
     0007 008A                      1- 1691     	MOVAR	PCHBUF
     0008 01rr                      1- 1692     	MOVR	r0x1024,W
     0009 25rr                      1- 1693     	ADDIA	_00307_DS_
     000A 0C03                      1- 1694     	BTRSC	STATUS,0
     000B 058A                      1- 1695     	INCR	PCHBUF,F
     000C 0082                      1- 1696     	MOVAR	PCL
     000D                           1- 1697     _00307_DS_:
     000D 3rrr                      1- 1698     	LGOTO	_00281_DS_
     000E 3rrr                      1- 1699     	LGOTO	_00286_DS_
     000F 3rrr                      1- 1700     	LGOTO	_00287_DS_
     0010 3rrr                      1- 1701     	LGOTO	_00288_DS_
     0011 3rrr                      1- 1702     	LGOTO	_00289_DS_
     0012 3rrr                      1- 1703     	LGOTO	_00290_DS_
     0013 3rrr                      1- 1704     	LGOTO	_00291_DS_
     0014 3rrr                      1- 1705     	LGOTO	_00292_DS_
     0015 3rrr                      1- 1706     	LGOTO	_00293_DS_
     0016                           1- 1707     _00281_DS_:
                                    1- 1708     	.line	404, "main.c"; 	if(Rdata != 0 || Gdata!=0 || Bdata != 0)
                                    1- 1709     	BANKSEL	_Rdata
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1710     	MOVR	_Rdata,W
     0018 0903                      1- 1711     	BTRSS	STATUS,2
     0019 3rrr                      1- 1712     	LGOTO	_00282_DS_
                                    1- 1713     	BANKSEL	_Gdata
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1- 1714     	MOVR	_Gdata,W
     001C 0903                      1- 1715     	BTRSS	STATUS,2
     001D 3rrr                      1- 1716     	LGOTO	_00282_DS_
                                    1- 1717     	BANKSEL	_Bdata
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1718     	MOVR	_Bdata,W
     0020 0D03                      1- 1719     	BTRSC	STATUS,2
     0021 3rrr                      1- 1720     	LGOTO	_00295_DS_
     0022                           1- 1721     _00282_DS_:
                                    1- 1722     	.line	406, "main.c"; 	sendtoLast(COLOR0);
     0022 2100                      1- 1723     	MOVIA	0x00
     0023 00rr                      1- 1724     	MOVAR	STK01
     0024 00rr                      1- 1725     	MOVAR	STK00
     0025 2rrr                      1- 1726     	LCALL	_sendtoLast
                                    1- 1727     	.line	408, "main.c"; 	break;
     0026 3rrr                      1- 1728     	LGOTO	_00295_DS_
     0027                           1- 1729     _00286_DS_:
                                    1- 1730     	.line	410, "main.c"; 	sendtoLast(COLOR1);
     0027 2100                      1- 1731     	MOVIA	0x00
     0028 00rr                      1- 1732     	MOVAR	STK01
     0029 00rr                      1- 1733     	MOVAR	STK00
     002A 21FF                      1- 1734     	MOVIA	0xff
     002B 2rrr                      1- 1735     	LCALL	_sendtoLast
                                    1- 1736     	.line	411, "main.c"; 	break;
     002C 3rrr                      1- 1737     	LGOTO	_00295_DS_
     002D                           1- 1738     _00287_DS_:
                                    1- 1739     	.line	413, "main.c"; 	sendtoLast(COLOR2);
     002D 2100                      1- 1740     	MOVIA	0x00
     002E 00rr                      1- 1741     	MOVAR	STK01
     002F 21A5                      1- 1742     	MOVIA	0xa5
     0030 00rr                      1- 1743     	MOVAR	STK00
     0031 21FF                      1- 1744     	MOVIA	0xff
     0032 2rrr                      1- 1745     	LCALL	_sendtoLast
                                    1- 1746     	.line	414, "main.c"; 	break;
     0033 3rrr                      1- 1747     	LGOTO	_00295_DS_
     0034                           1- 1748     _00288_DS_:
                                    1- 1749     	.line	416, "main.c"; 	sendtoLast(COLOR3);
     0034 2100                      1- 1750     	MOVIA	0x00
     0035 00rr                      1- 1751     	MOVAR	STK01
     0036 21FF                      1- 1752     	MOVIA	0xff
     0037 00rr                      1- 1753     	MOVAR	STK00
     0038 2rrr                      1- 1754     	LCALL	_sendtoLast
                                    1- 1755     	.line	417, "main.c"; 	break;
     0039 3rrr                      1- 1756     	LGOTO	_00295_DS_
     003A                           1- 1757     _00289_DS_:
                                    1- 1758     	.line	419, "main.c"; 	sendtoLast(COLOR4);
     003A 2100                      1- 1759     	MOVIA	0x00
     003B 00rr                      1- 1760     	MOVAR	STK01
     003C 21FF                      1- 1761     	MOVIA	0xff
     003D 00rr                      1- 1762     	MOVAR	STK00
     003E 2100                      1- 1763     	MOVIA	0x00
     003F 2rrr                      1- 1764     	LCALL	_sendtoLast
                                    1- 1765     	.line	420, "main.c"; 	break;
     0040 3rrr                      1- 1766     	LGOTO	_00295_DS_
     0041                           1- 1767     _00290_DS_:
                                    1- 1768     	.line	422, "main.c"; 	sendtoLast(COLOR5);
     0041 21FF                      1- 1769     	MOVIA	0xff
     0042 00rr                      1- 1770     	MOVAR	STK01
     0043 00rr                      1- 1771     	MOVAR	STK00
     0044 2100                      1- 1772     	MOVIA	0x00
     0045 2rrr                      1- 1773     	LCALL	_sendtoLast
                                    1- 1774     	.line	423, "main.c"; 	break;
     0046 3rrr                      1- 1775     	LGOTO	_00295_DS_
     0047                           1- 1776     _00291_DS_:
                                    1- 1777     	.line	425, "main.c"; 	sendtoLast(COLOR6);
     0047 21FF                      1- 1778     	MOVIA	0xff
     0048 00rr                      1- 1779     	MOVAR	STK01
     0049 2100                      1- 1780     	MOVIA	0x00
     004A 00rr                      1- 1781     	MOVAR	STK00
     004B 2rrr                      1- 1782     	LCALL	_sendtoLast
                                    1- 1783     	.line	426, "main.c"; 	break;
     004C 3rrr                      1- 1784     	LGOTO	_00295_DS_
     004D                           1- 1785     _00292_DS_:
                                    1- 1786     	.line	428, "main.c"; 	sendtoLast(COLOR7);
     004D 21FF                      1- 1787     	MOVIA	0xff
     004E 00rr                      1- 1788     	MOVAR	STK01
     004F 2100                      1- 1789     	MOVIA	0x00
     0050 00rr                      1- 1790     	MOVAR	STK00
     0051 21FF                      1- 1791     	MOVIA	0xff
     0052 2rrr                      1- 1792     	LCALL	_sendtoLast
                                    1- 1793     	.line	429, "main.c"; 	break;
     0053 3rrr                      1- 1794     	LGOTO	_00295_DS_
     0054                           1- 1795     _00293_DS_:
                                    1- 1796     	.line	431, "main.c"; 	sendtoLast(COLOR8);
     0054 21FF                      1- 1797     	MOVIA	0xff
     0055 00rr                      1- 1798     	MOVAR	STK01
     0056 00rr                      1- 1799     	MOVAR	STK00
     0057 2rrr                      1- 1800     	LCALL	_sendtoLast
     0058                           1- 1801     _00295_DS_:
                                    1- 1802     	.line	435, "main.c"; 	}
                                    1- 1803     	RETURN	
     0058 0010                      3-   26 m1      ret
                                    1- 1804     ; exit point of _setColor
                                    1- 1806     ;***
                                    1- 1807     ;  pBlock Stats: dbName = C
                                    1- 1808     ;***
                                    1- 1809     ;has an exit
                                    1- 1810     ;functions called:
                                    1- 1811     ;   _setColor
                                    1- 1812     ;   _work9
                                    1- 1813     ;   _work10
                                    1- 1814     ;   _setColor
                                    1- 1815     ;   _work9
                                    1- 1816     ;   _work10
                                    1- 1817     ;; Starting pCode block
                                    1- 1818     .segment "code"; module=main, function=_workCtr
     0000                           1- 1820     _workCtr:
                                    1- 1821     ; 2 exit points
                                    1- 1822     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1823     ;;unsigned compare: left >= lit (0xB=11), size=1
                                    1- 1824     	.line	385, "main.c"; 	if(workStep > 10)
     0000 210B                      1- 1825     	MOVIA	0x0b
                                    1- 1826     	BANKSEL	_workStep
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1827     	SUBAR	_workStep,W
     0003 0C03                      1- 1828     	BTRSC	STATUS,0
                                    1- 1829     	.line	386, "main.c"; 	return;
     0004 3rrr                      1- 1830     	LGOTO	_00276_DS_
                                    1- 1831     	.line	387, "main.c"; 	if(workStep < 9)
     0005 2109                      1- 1832     	MOVIA	0x09
     0006 04rr                      1- 1833     	SUBAR	_workStep,W
     0007 0C03                      1- 1834     	BTRSC	STATUS,0
     0008 3rrr                      1- 1835     	LGOTO	_00274_DS_
                                    1- 1836     	.line	388, "main.c"; 	setColor(workStep);
     0009 01rr                      1- 1837     	MOVR	_workStep,W
     000A 2rrr                      1- 1838     	LCALL	_setColor
     000B 3rrr                      1- 1839     	LGOTO	_00276_DS_
     000C                           1- 1840     _00274_DS_:
                                    1- 1841     	.line	389, "main.c"; 	else if(workStep == 9)
                                    1- 1842     	BANKSEL	_workStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 1843     	MOVR	_workStep,W
     000E 2409                      1- 1844     	XORIA	0x09
     000F 0903                      1- 1845     	BTRSS	STATUS,2
     0010 3rrr                      1- 1846     	LGOTO	_00271_DS_
                                    1- 1847     	.line	391, "main.c"; 	work9();
     0011 2rrr                      1- 1848     	LCALL	_work9
     0012 3rrr                      1- 1849     	LGOTO	_00276_DS_
     0013                           1- 1850     _00271_DS_:
                                    1- 1851     	.line	395, "main.c"; 	work10();
     0013 2rrr                      1- 1852     	LCALL	_work10
     0014                           1- 1853     _00276_DS_:
                                    1- 1854     	.line	397, "main.c"; 	}
                                    1- 1855     	RETURN	
     0014 0010                      3-   26 m1      ret
                                    1- 1856     ; exit point of _workCtr
                                    1- 1858     ;***
                                    1- 1859     ;  pBlock Stats: dbName = C
                                    1- 1860     ;***
                                    1- 1861     ;has an exit
                                    1- 1862     ;2 compiler assigned registers:
                                    1- 1863     ;   r0x1027
                                    1- 1864     ;   r0x1028
                                    1- 1865     ;; Starting pCode block
                                    1- 1866     .segment "code"; module=main, function=_delay
                                    1- 1868     ;local variable name mapping:
     0000                           1- 1870     _delay:
                                    1- 1871     ; 2 exit points
                                    1- 1872     	.line	377, "main.c"; 	void delay(u8t time)
                                    1- 1873     	BANKSEL	r0x1027
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1874     	MOVAR	r0x1027
     0002                           1- 1875     _00263_DS_:
                                    1- 1876     	.line	379, "main.c"; 	while(--time);
                                    1- 1877     	BANKSEL	r0x1027
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 06rr                      1- 1878     	DECR	r0x1027,W
                                    1- 1879     	BANKSEL	r0x1028
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 1880     	MOVAR	r0x1028
                                    1- 1881     	BANKSEL	r0x1027
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1882     	MOVAR	r0x1027
                                    1- 1883     	BANKSEL	r0x1028
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1- 1884     	MOVR	r0x1028,W
     000A 0903                      1- 1885     	BTRSS	STATUS,2
     000B 3rrr                      1- 1886     	LGOTO	_00263_DS_
                                    1- 1887     	.line	380, "main.c"; 	}
                                    1- 1888     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 1889     ; exit point of _delay
                                    1- 1891     ;***
                                    1- 1892     ;  pBlock Stats: dbName = C
                                    1- 1893     ;***
                                    1- 1894     ;has an exit
                                    1- 1895     ;functions called:
                                    1- 1896     ;   _WaitTF0
                                    1- 1897     ;   _WaitTF0
                                    1- 1898     ;   _WaitTF0
                                    1- 1899     ;   _WaitTF0
                                    1- 1900     ;   _WaitTF0
                                    1- 1901     ;   _WaitTF0
                                    1- 1902     ;3 compiler assigned registers:
                                    1- 1903     ;   r0x1029
                                    1- 1904     ;   r0x102A
                                    1- 1905     ;   r0x102B
                                    1- 1906     ;; Starting pCode block
                                    1- 1907     .segment "code"; module=main, function=_WByte
                                    1- 1909     ;local variable name mapping:
     0000                           1- 1912     _WByte:
                                    1- 1913     ; 2 exit points
                                    1- 1914     	.line	337, "main.c"; 	void WByte(u8t input) {
                                    1- 1915     	BANKSEL	r0x1029
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1916     	MOVAR	r0x1029
                                    1- 1917     	.line	340, "main.c"; 	SEND_FLAG = 1;
     0002 2101                      1- 1918     	MOVIA	0x01
                                    1- 1919     	BANKSEL	_SEND_FLAG
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1920     	MOVAR	_SEND_FLAG
                                    1- 1921     	.line	342, "main.c"; 	TMRH = 0;
     0005 02rr                      1- 1922     	CLRR	_TMRH
                                    1- 1923     	.line	343, "main.c"; 	TMR1 = 104;
     0006 2168                      1- 1924     	MOVIA	0x68
     0007 00rr                      1- 1925     	SFUN	_TMR1
                                    1- 1926     	.line	344, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload; //���Timer1
     0008 2103                      1- 1927     	MOVIA	0x03
     0009 00rr                      1- 1928     	SFUN	_T1CR1
                                    1- 1929     	.line	345, "main.c"; 	PCON1 = C_TMR0_Dis;
     000A 0200                      1- 1930     	CLRA	
     000B 000r                      1- 1931     	IOST	_PCON1
                                    1- 1932     	.line	346, "main.c"; 	TXD = 0;
                                    1- 1933     	BANKSEL	_PORTB
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1- 1934     	BCR	_PORTB,1
                                    1- 1935     	.line	348, "main.c"; 	WaitTF0();
     000E 2rrr                      1- 1936     	LCALL	_WaitTF0
                                    1- 1937     	.line	352, "main.c"; 	while (i--) {
     000F 2108                      1- 1938     	MOVIA	0x08
                                    1- 1939     	BANKSEL	r0x102A
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1940     	MOVAR	r0x102A
     0012                           1- 1941     _00256_DS_:
                                    1- 1942     	BANKSEL	r0x102A
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1943     	MOVR	r0x102A,W
                                    1- 1944     	BANKSEL	r0x102B
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1945     	MOVAR	r0x102B
                                    1- 1946     	BANKSEL	r0x102A
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 06rr                      1- 1947     	DECR	r0x102A,F
                                    1- 1948     	BANKSEL	r0x102B
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1949     	MOVR	r0x102B,W
     001A 0D03                      1- 1950     	BTRSC	STATUS,2
     001B 3rrr                      1- 1951     	LGOTO	_00258_DS_
                                    1- 1952     	.line	354, "main.c"; 	TXD = (input & 0x01);//�ȴ���λ
                                    1- 1953     	BANKSEL	r0x1029
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 1954     	MOVR	r0x1029,W
     001E 2201                      1- 1955     	ANDIA	0x01
                                    1- 1956     	BANKSEL	r0x102B
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 1957     	MOVAR	r0x102B
     0021 13rr                      1- 1958     	RRR	r0x102B,W
     0022 0C03                      1- 1959     	BTRSC	STATUS,0
     0023 3rrr                      1- 1960     	LGOTO	_00002_DS_
                                    1- 1961     	BANKSEL	_PORTB
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 1Crr                      1- 1962     	BCR	_PORTB,1
     0026                           1- 1963     _00002_DS_:
     0026 0803                      1- 1964     	BTRSS	STATUS,0
     0027 3rrr                      1- 1965     	LGOTO	_00003_DS_
                                    1- 1966     	BANKSEL	_PORTB
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 18rr                      1- 1967     	BSR	_PORTB,1
     002A                           1- 1968     _00003_DS_:
                                    1- 1969     	.line	356, "main.c"; 	WaitTF0();
     002A 2rrr                      1- 1970     	LCALL	_WaitTF0
                                    1- 1971     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=1, sign=0, same=1, offr=0
                                    1- 1972     	.line	358, "main.c"; 	input = input >> 1;
     002B 1C03                      1- 1973     	BCR	STATUS,0
                                    1- 1974     	BANKSEL	r0x1029
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 13rr                      1- 1975     	RRR	r0x1029,F
     002E 3rrr                      1- 1976     	LGOTO	_00256_DS_
     002F                           1- 1977     _00258_DS_:
                                    1- 1978     	.line	366, "main.c"; 	TXD =  1;
                                    1- 1979     	BANKSEL	_PORTB
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 18rr                      1- 1980     	BSR	_PORTB,1
                                    1- 1981     	.line	368, "main.c"; 	WaitTF0();
     0031 2rrr                      1- 1982     	LCALL	_WaitTF0
                                    1- 1983     	.line	370, "main.c"; 	T1CR1 = C_TMR1_Dis; //ֹͣTimer1
     0032 0200                      1- 1984     	CLRA	
     0033 00rr                      1- 1985     	SFUN	_T1CR1
                                    1- 1986     	.line	371, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0034 2111                      1- 1987     	MOVIA	0x11
     0035 000r                      1- 1988     	IOST	_PCON1
                                    1- 1989     	.line	372, "main.c"; 	SEND_FLAG = 0;
                                    1- 1990     	BANKSEL	_SEND_FLAG
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 02rr                      1- 1991     	CLRR	_SEND_FLAG
                                    1- 1992     	.line	375, "main.c"; 	}
                                    1- 1993     	RETURN	
     0038 0010                      3-   26 m1      ret
                                    1- 1994     ; exit point of _WByte
                                    1- 1996     ;***
                                    1- 1997     ;  pBlock Stats: dbName = C
                                    1- 1998     ;***
                                    1- 1999     ;has an exit
                                    1- 2000     ;; Starting pCode block
                                    1- 2001     .segment "code"; module=main, function=_WaitTF0
     0000                           1- 2003     _WaitTF0:
                                    1- 2004     ; 2 exit points
     0000                           1- 2005     _00251_DS_:
                                    1- 2006     	.line	326, "main.c"; 	while (!TM0_FLAG);
                                    1- 2007     	BANKSEL	_TM0_FLAG
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2008     	MOVR	_TM0_FLAG,W
     0002 0D03                      1- 2009     	BTRSC	STATUS,2
     0003 3rrr                      1- 2010     	LGOTO	_00251_DS_
                                    1- 2011     	.line	328, "main.c"; 	TM0_FLAG = 0; //���־λ
     0004 02rr                      1- 2012     	CLRR	_TM0_FLAG
                                    1- 2013     	.line	330, "main.c"; 	}
                                    1- 2014     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1- 2015     ; exit point of _WaitTF0
                                    1- 2017     ;***
                                    1- 2018     ;  pBlock Stats: dbName = C
                                    1- 2019     ;***
                                    1- 2020     ;has an exit
                                    1- 2021     ;functions called:
                                    1- 2022     ;   _WaitTF0
                                    1- 2023     ;   _WaitTF0
                                    1- 2024     ;   _WaitTF0
                                    1- 2025     ;   _WaitTF0
                                    1- 2026     ;3 compiler assigned registers:
                                    1- 2027     ;   r0x102C
                                    1- 2028     ;   r0x102D
                                    1- 2029     ;   r0x102E
                                    1- 2030     ;; Starting pCode block
                                    1- 2031     .segment "code"; module=main, function=_RByte
                                    1- 2033     ;local variable name mapping:
     0000                           1- 2036     _RByte:
                                    1- 2037     ; 2 exit points
                                    1- 2038     	.line	288, "main.c"; 	REC_FLAG = 1;
     0000 2101                      1- 2039     	MOVIA	0x01
                                    1- 2040     	BANKSEL	_REC_FLAG
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2041     	MOVAR	_REC_FLAG
                                    1- 2042     	.line	289, "main.c"; 	u8t Output = 0;
                                    1- 2043     	BANKSEL	r0x102C
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1- 2044     	CLRR	r0x102C
                                    1- 2045     	.line	292, "main.c"; 	TMRH = 0;
     0005 02rr                      1- 2046     	CLRR	_TMRH
                                    1- 2047     	.line	293, "main.c"; 	TMR1 = 105;
     0006 2169                      1- 2048     	MOVIA	0x69
     0007 00rr                      1- 2049     	SFUN	_TMR1
                                    1- 2050     	.line	294, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload; //���Timer1
     0008 2103                      1- 2051     	MOVIA	0x03
     0009 00rr                      1- 2052     	SFUN	_T1CR1
                                    1- 2053     	.line	295, "main.c"; 	PCON1 = C_TMR0_Dis;
     000A 0200                      1- 2054     	CLRA	
     000B 000r                      1- 2055     	IOST	_PCON1
                                    1- 2056     	.line	297, "main.c"; 	WaitTF0(); //�ȹ���ʼλ
     000C 2rrr                      1- 2057     	LCALL	_WaitTF0
                                    1- 2058     	.line	301, "main.c"; 	while (i--) {
     000D 2108                      1- 2059     	MOVIA	0x08
                                    1- 2060     	BANKSEL	r0x102D
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 2061     	MOVAR	r0x102D
     0010                           1- 2062     _00239_DS_:
                                    1- 2063     	BANKSEL	r0x102D
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 2064     	MOVR	r0x102D,W
                                    1- 2065     	BANKSEL	r0x102E
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2066     	MOVAR	r0x102E
                                    1- 2067     	BANKSEL	r0x102D
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 06rr                      1- 2068     	DECR	r0x102D,F
                                    1- 2069     	BANKSEL	r0x102E
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 2070     	MOVR	r0x102E,W
     0018 0D03                      1- 2071     	BTRSC	STATUS,2
     0019 3rrr                      1- 2072     	LGOTO	_00244_DS_
                                    1- 2073     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=1, sign=0, same=1, offr=0
                                    1- 2074     	.line	303, "main.c"; 	Output >>= 1;
     001A 1C03                      1- 2075     	BCR	STATUS,0
                                    1- 2076     	BANKSEL	r0x102C
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 13rr                      1- 2077     	RRR	r0x102C,F
                                    1- 2078     	.line	305, "main.c"; 	if (RXD) Output |= 0x80; //���յ�λ
                                    1- 2079     	BANKSEL	_PORTA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 09rr                      1- 2080     	BTRSS	_PORTA,2
     001F 3rrr                      1- 2081     	LGOTO	_00004_DS_
                                    1- 2082     	BANKSEL	r0x102C
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 1Brr                      1- 2083     	BSR	r0x102C,7
     0022                           1- 2084     _00004_DS_:
                                    1- 2085     	.line	307, "main.c"; 	WaitTF0(); //λ����ʱ
     0022 2rrr                      1- 2086     	LCALL	_WaitTF0
     0023 3rrr                      1- 2087     	LGOTO	_00239_DS_
     0024                           1- 2088     _00244_DS_:
                                    1- 2089     	.line	311, "main.c"; 	while (!TM0_FLAG) if (RXD) break;
                                    1- 2090     	BANKSEL	_TM0_FLAG
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 2091     	MOVR	_TM0_FLAG,W
     0026 0903                      1- 2092     	BTRSS	STATUS,2
     0027 3rrr                      1- 2093     	LGOTO	_00246_DS_
                                    1- 2094     	BANKSEL	_PORTA
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 09rr                      1- 2095     	BTRSS	_PORTA,2
     002A 3rrr                      1- 2096     	LGOTO	_00244_DS_
     002B                           1- 2097     _00246_DS_:
                                    1- 2098     	.line	313, "main.c"; 	T1CR1 = C_TMR1_Dis; //ֹͣTimer1
     002B 0200                      1- 2099     	CLRA	
     002C 00rr                      1- 2100     	SFUN	_T1CR1
                                    1- 2101     	.line	314, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     002D 2111                      1- 2102     	MOVIA	0x11
     002E 000r                      1- 2103     	IOST	_PCON1
                                    1- 2104     	.line	315, "main.c"; 	REC_FLAG = 0;
                                    1- 2105     	BANKSEL	_REC_FLAG
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1- 2106     	CLRR	_REC_FLAG
                                    1- 2107     	.line	316, "main.c"; 	uartTime = 0;
                                    1- 2108     	BANKSEL	_uartTime
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 02rr                      1- 2109     	CLRR	_uartTime
                                    1- 2110     	.line	317, "main.c"; 	return Output;
                                    1- 2111     	BANKSEL	r0x102C
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 2112     	MOVR	r0x102C,W
                                    1- 2113     	.line	319, "main.c"; 	}
                                    1- 2114     	RETURN	
     0035 0010                      3-   26 m1      ret
                                    1- 2115     ; exit point of _RByte
                                    1- 2117     ;***
                                    1- 2118     ;  pBlock Stats: dbName = C
                                    1- 2119     ;***
                                    1- 2120     ;has an exit
                                    1- 2121     ;functions called:
                                    1- 2122     ;   __mulchar
                                    1- 2123     ;   __mulint
                                    1- 2124     ;   __mulchar
                                    1- 2125     ;   __mulint
                                    1- 2126     ;11 compiler assigned registers:
                                    1- 2127     ;   r0x102F
                                    1- 2128     ;   STK00
                                    1- 2129     ;   r0x1030
                                    1- 2130     ;   r0x1031
                                    1- 2131     ;   r0x1032
                                    1- 2132     ;   STK02
                                    1- 2133     ;   STK01
                                    1- 2134     ;   r0x1033
                                    1- 2135     ;   r0x1034
                                    1- 2136     ;   r0x1035
                                    1- 2137     ;   r0x1036
                                    1- 2138     ;; Starting pCode block
                                    1- 2139     .segment "code"; module=main, function=_rankNub
                                    1- 2141     ;local variable name mapping:
     0000                           1- 2146     _rankNub:
                                    1- 2147     ; 2 exit points
                                    1- 2148     	.line	267, "main.c"; 	void rankNub(char nub)
                                    1- 2149     	BANKSEL	r0x102F
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2150     	MOVAR	r0x102F
                                    1- 2151     	.line	269, "main.c"; 	u16t aNub = 3*randNub;
     0002 2103                      1- 2152     	MOVIA	0x03
     0003 00rr                      1- 2153     	MOVAR	STK00
                                    1- 2154     	BANKSEL	_randNub
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 2155     	MOVR	_randNub,W
     0006 2rrr                      1- 2156     	LCALL	__mulchar
                                    1- 2157     	BANKSEL	r0x1030
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 2158     	MOVAR	r0x1030
                                    1- 2159     	BANKSEL	r0x1031
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 2160     	CLRR	r0x1031
                                    1- 2161     	.line	271, "main.c"; 	for(i=0;i<nub;i++)
                                    1- 2162     	BANKSEL	r0x1032
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1- 2163     	CLRR	r0x1032
     000D                           1- 2164     _00232_DS_:
                                    1- 2165     	BANKSEL	r0x102F
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 2166     	MOVR	r0x102F,W
                                    1- 2167     	BANKSEL	r0x1032
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1- 2168     	SUBAR	r0x1032,W
     0011 0C03                      1- 2169     	BTRSC	STATUS,0
     0012 3rrr                      1- 2170     	LGOTO	_00230_DS_
                                    1- 2171     	.line	273, "main.c"; 	aNub += i*snub;
                                    1- 2172     	BANKSEL	_snub
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 2173     	MOVR	_snub,W
     0015 00rr                      1- 2174     	MOVAR	STK02
     0016 0200                      1- 2175     	CLRA	
     0017 00rr                      1- 2176     	MOVAR	STK01
                                    1- 2177     	BANKSEL	r0x1032
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 2178     	MOVR	r0x1032,W
     001A 00rr                      1- 2179     	MOVAR	STK00
     001B 0200                      1- 2180     	CLRA	
     001C 2rrr                      1- 2181     	LCALL	__mulint
                                    1- 2182     	BANKSEL	r0x1036
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 2183     	MOVAR	r0x1036
                                    1- 2184     ;;1	MOVAR	r0x1033
     001F 01rr                      1- 2185     	MOVR	STK00,W
                                    1- 2186     ;;1	MOVAR	r0x1035
                                    1- 2187     	BANKSEL	r0x1030
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 03rr                      1- 2188     	ADDAR	r0x1030,F
                                    1- 2189     	BANKSEL	r0x1036
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 2190     	MOVR	r0x1036,W
     0024 0C03                      1- 2191     	BTRSC	STATUS,0
     0025 05rr                      1- 2192     	INCR	r0x1036,W
     0026 0D03                      1- 2193     	BTRSC	STATUS,2
     0027 3rrr                      1- 2194     	LGOTO	_00005_DS_
                                    1- 2195     	BANKSEL	r0x1031
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 03rr                      1- 2196     	ADDAR	r0x1031,F
                                    1- 2197     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 2198     ;;unsigned compare: left >= lit (0x5=5), size=1
     002A                           1- 2199     _00005_DS_:
                                    1- 2200     	.line	274, "main.c"; 	if(i>4)
     002A 2105                      1- 2201     	MOVIA	0x05
                                    1- 2202     	BANKSEL	r0x1032
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 04rr                      1- 2203     	SUBAR	r0x1032,W
     002D 0803                      1- 2204     	BTRSS	STATUS,0
     002E 3rrr                      1- 2205     	LGOTO	_00006_DS_
                                    1- 2206     	.line	275, "main.c"; 	aNub--;
     002F 21FF                      1- 2207     	MOVIA	0xff
                                    1- 2208     	BANKSEL	r0x1030
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 03rr                      1- 2209     	ADDAR	r0x1030,F
     0032 0C03                      1- 2210     	BTRSC	STATUS,0
     0033 3rrr                      1- 2211     	LGOTO	_00006_DS_
                                    1- 2212     	BANKSEL	r0x1031
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 06rr                      1- 2213     	DECR	r0x1031,F
     0036                           1- 2214     _00006_DS_:
                                    1- 2215     	.line	276, "main.c"; 	aNub += 3;
     0036 2103                      1- 2216     	MOVIA	0x03
                                    1- 2217     	BANKSEL	r0x1030
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 03rr                      1- 2218     	ADDAR	r0x1030,F
     0039 0803                      1- 2219     	BTRSS	STATUS,0
     003A 3rrr                      1- 2220     	LGOTO	_00007_DS_
                                    1- 2221     	BANKSEL	r0x1031
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 05rr                      1- 2222     	INCR	r0x1031,F
     003D                           1- 2223     _00007_DS_:
                                    1- 2224     	.line	271, "main.c"; 	for(i=0;i<nub;i++)
                                    1- 2225     	BANKSEL	r0x1032
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 05rr                      1- 2226     	INCR	r0x1032,F
     003F 3rrr                      1- 2227     	LGOTO	_00232_DS_
     0040                           1- 2228     _00230_DS_:
                                    1- 2229     	.line	279, "main.c"; 	randNub = aNub%8 +1;
     0040 2107                      1- 2230     	MOVIA	0x07
                                    1- 2231     	BANKSEL	r0x1030
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 10rr                      1- 2232     	ANDAR	r0x1030,F
                                    1- 2233     	BANKSEL	r0x1031
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 02rr                      1- 2234     	CLRR	r0x1031
                                    1- 2235     	BANKSEL	r0x1030
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1- 2236     	MOVR	r0x1030,W
                                    1- 2237     	BANKSEL	r0x102F
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 2238     	MOVAR	r0x102F
     0049 05rr                      1- 2239     	INCR	r0x102F,W
                                    1- 2240     	BANKSEL	_randNub
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 00rr                      1- 2241     	MOVAR	_randNub
                                    1- 2242     	.line	281, "main.c"; 	}
                                    1- 2243     	RETURN	
     004C 0010                      3-   26 m1      ret
                                    1- 2244     ; exit point of _rankNub
                                    1- 2246     ;***
                                    1- 2247     ;  pBlock Stats: dbName = C
                                    1- 2248     ;***
                                    1- 2249     ;has an exit
                                    1- 2250     ;functions called:
                                    1- 2251     ;   _RByte
                                    1- 2252     ;   __gptrput1
                                    1- 2253     ;   _RByte
                                    1- 2254     ;   __gptrput1
                                    1- 2255     ;5 compiler assigned registers:
                                    1- 2256     ;   r0x1037
                                    1- 2257     ;   r0x1038
                                    1- 2258     ;   STK02
                                    1- 2259     ;   STK01
                                    1- 2260     ;   STK00
                                    1- 2261     ;; Starting pCode block
                                    1- 2262     .segment "code"; module=main, function=_revData
     0000                           1- 2264     _revData:
                                    1- 2265     ; 2 exit points
                                    1- 2266     	.line	203, "main.c"; 	if(REC_FLAG == 0 && (PORTA & 0x04) == 0)
                                    1- 2267     	BANKSEL	_REC_FLAG
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2268     	MOVR	_REC_FLAG,W
     0002 0903                      1- 2269     	BTRSS	STATUS,2
     0003 3rrr                      1- 2270     	LGOTO	_00213_DS_
                                    1- 2271     	BANKSEL	_PORTA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 0Drr                      1- 2272     	BTRSC	_PORTA,2
     0006 3rrr                      1- 2273     	LGOTO	_00213_DS_
                                    1- 2274     	.line	205, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1;
     0007 2109                      1- 2275     	MOVIA	0x09
     0008 00rr                      1- 2276     	MOVAR	_INTE
                                    1- 2277     	.line	206, "main.c"; 	REC_FLAG = 1;
     0009 2101                      1- 2278     	MOVIA	0x01
                                    1- 2279     	BANKSEL	_REC_FLAG
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 2280     	MOVAR	_REC_FLAG
                                    1- 2281     	.line	207, "main.c"; 	if(!SEND_FLAG)
                                    1- 2282     	BANKSEL	_SEND_FLAG
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 2283     	MOVR	_SEND_FLAG,W
     000E 0903                      1- 2284     	BTRSS	STATUS,2
     000F 3rrr                      1- 2285     	LGOTO	_00210_DS_
                                    1- 2286     	.line	209, "main.c"; 	recData = RByte();
     0010 2rrr                      1- 2287     	LCALL	_RByte
                                    1- 2288     	BANKSEL	_recData
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 2289     	MOVAR	_recData
                                    1- 2290     	.line	210, "main.c"; 	revList[index] = recData;
                                    1- 2291     	BANKSEL	_index
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 2292     	MOVR	_index,W
     0015 25rr                      1- 2293     	ADDIA	(_revList + 0)
                                    1- 2294     	BANKSEL	r0x1037
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 2295     	MOVAR	r0x1037
     0018 21rr                      1- 2296     	MOVIA	((_revList + 0) >> 8) & 0xff
     0019 0C03                      1- 2297     	BTRSC	STATUS,0
     001A 2501                      1- 2298     	ADDIA	0x01
                                    1- 2299     	BANKSEL	r0x1038
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 2300     	MOVAR	r0x1038
                                    1- 2301     	BANKSEL	_recData
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 2302     	MOVR	_recData,W
     001F 00rr                      1- 2303     	MOVAR	STK02
                                    1- 2304     	BANKSEL	r0x1037
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 2305     	MOVR	r0x1037,W
     0022 00rr                      1- 2306     	MOVAR	STK01
                                    1- 2307     	BANKSEL	r0x1038
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1- 2308     	MOVR	r0x1038,W
     0025 00rr                      1- 2309     	MOVAR	STK00
     0026 2100                      1- 2310     	MOVIA	0x00
     0027 2rrr                      1- 2311     	LCALL	__gptrput1
                                    1- 2312     	.line	211, "main.c"; 	if(++index > 5)
                                    1- 2313     	BANKSEL	_index
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 05rr                      1- 2314     	INCR	_index,F
                                    1- 2315     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2316     ;;unsigned compare: left >= lit (0x6=6), size=1
     002A 2106                      1- 2317     	MOVIA	0x06
     002B 04rr                      1- 2318     	SUBAR	_index,W
     002C 0803                      1- 2319     	BTRSS	STATUS,0
     002D 3rrr                      1- 2320     	LGOTO	_00211_DS_
                                    1- 2321     	.line	212, "main.c"; 	index = 0;
     002E 02rr                      1- 2322     	CLRR	_index
     002F 3rrr                      1- 2323     	LGOTO	_00211_DS_
     0030                           1- 2324     _00210_DS_:
                                    1- 2325     	.line	216, "main.c"; 	REC_FLAG = 0;
                                    1- 2326     	BANKSEL	_REC_FLAG
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 02rr                      1- 2327     	CLRR	_REC_FLAG
     0032                           1- 2328     _00211_DS_:
                                    1- 2329     	.line	218, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0032 210B                      1- 2330     	MOVIA	0x0b
     0033 00rr                      1- 2331     	MOVAR	_INTE
     0034                           1- 2332     _00213_DS_:
                                    1- 2333     	.line	222, "main.c"; 	uartFlag = 0;
                                    1- 2334     	BANKSEL	_uartFlag
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 02rr                      1- 2335     	CLRR	_uartFlag
                                    1- 2336     	.line	223, "main.c"; 	}
                                    1- 2337     	RETURN	
     0036 0010                      3-   26 m1      ret
                                    1- 2338     ; exit point of _revData
                                    1- 2341     ;	code size estimation:
                                    1- 2342     ;	  806+  207 =  1013 instructions ( 2440 byte)
                                    1- 2344     	end
                                    1- 2344     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuint               Label    00000000
__gptrput1              Label    00000000
__moduint               Label    00000000
__mulchar               Label    00000000
__mulint                Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002A
_00002_DS_              Label    00000026
_00003_DS_              Label    0000002A
_00004_DS_              Label    00000022
_00005_DS_              Label    0000002A
_00006_DS_              Label    00000036
_00007_DS_              Label    0000003D
_00008_DS_              Label    00000049
_00009_DS_              Label    0000004B
_00106_DS_              Label    00000069
_00109_DS_              Label    00000081
_00115_DS_              Label    00000087
_00120_DS_              Label    000000A3
_00122_DS_              Label    000000E7
_00123_DS_              Label    000000C4
_00132_DS_              Label    000000EE
_00134_DS_              Label    000000F5
_00139_DS_              Label    00000103
_00200_DS_              Label    00000091
_00210_DS_              Label    00000030
_00211_DS_              Label    00000032
_00213_DS_              Label    00000034
_00223_DS_              Label    0000001D
_00230_DS_              Label    00000040
_00232_DS_              Label    0000000D
_00239_DS_              Label    00000010
_00244_DS_              Label    00000024
_00246_DS_              Label    0000002B
_00251_DS_              Label    00000000
_00256_DS_              Label    00000012
_00258_DS_              Label    0000002F
_00263_DS_              Label    00000002
_00271_DS_              Label    00000013
_00274_DS_              Label    0000000C
_00276_DS_              Label    00000014
_00281_DS_              Label    00000016
_00282_DS_              Label    00000022
_00286_DS_              Label    00000027
_00287_DS_              Label    0000002D
_00288_DS_              Label    00000034
_00289_DS_              Label    0000003A
_00290_DS_              Label    00000041
_00291_DS_              Label    00000047
_00292_DS_              Label    0000004D
_00293_DS_              Label    00000054
_00295_DS_              Label    00000058
_00307_DS_              Label    0000000D
_00315_DS_              Label    0000001B
_00317_DS_              Label    0000001E
_00330_DS_              Label    00000002
_00332_DS_              Label    0000000E
_00344_DS_              Label    00000012
_00349_DS_              Label    00000018
_00353_DS_              Label    00000021
_00358_DS_              Label    00000027
_00362_DS_              Label    00000030
_00367_DS_              Label    00000036
_00371_DS_              Label    0000003F
_00376_DS_              Label    00000045
_00380_DS_              Label    0000004E
_00385_DS_              Label    00000054
_00389_DS_              Label    0000005D
_00394_DS_              Label    00000063
_00398_DS_              Label    0000006C
_00403_DS_              Label    00000072
_00407_DS_              Label    0000007B
_00412_DS_              Label    00000081
_00416_DS_              Label    0000008A
_00421_DS_              Label    00000090
_00425_DS_              Label    00000099
_00430_DS_              Label    0000009F
_00434_DS_              Label    000000A8
_00439_DS_              Label    000000AE
_00443_DS_              Label    000000B7
_00448_DS_              Label    000000BD
_00452_DS_              Label    000000C6
_00457_DS_              Label    000000CC
_00461_DS_              Label    000000D5
_00466_DS_              Label    000000DB
_00470_DS_              Label    000000E4
_00475_DS_              Label    000000EA
_00479_DS_              Label    000000F3
_00484_DS_              Label    000000F9
_00488_DS_              Label    00000102
_00493_DS_              Label    00000108
_00497_DS_              Label    00000111
_00502_DS_              Label    00000117
_00506_DS_              Label    00000120
_00511_DS_              Label    00000126
_00515_DS_              Label    0000012F
_00520_DS_              Label    00000135
_00524_DS_              Label    0000013E
_00529_DS_              Label    00000144
_00533_DS_              Label    0000014D
_00538_DS_              Label    00000153
_00542_DS_              Label    0000015C
_00547_DS_              Label    00000162
_00551_DS_              Label    0000016B
_00556_DS_              Label    00000171
_00563_DS_              Label    0000002B
_00565_DS_              Label    0000000C
_00567_DS_              Label    0000002C
_00578_DS_              Label    00000015
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_Bdata                  Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_CMPCR                  Label    00000000
_colorIndex             Label    00000000
_data                   Label    00000000
_delay                  Label    00000000
_Delay10Us              Label    00000000
_Delay80us              Label    00000000
_duty                   Label    00000000
_firstFlag              Label    00000000
_FSR                    Label    00000000
_Gdata                  Label    00000000
_Hcount                 Label    00000000
_index                  Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_ledCount               Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_preColorIndex          Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_randNub                Label    00000000
_rankNub                Label    00000000
_RByte                  Label    00000000
_Rdata                  Label    00000000
_REC_FLAG               Label    00000000
_recData                Label    00000000
_revData                Label    00000000
_revList                Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_SEND_FLAG              Label    00000000
_sendRGB                Label    00000000
_sendtoLast             Label    00000000
_setColor               Label    00000000
_snub                   Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_timeCount              Label    00000000
_TM0_FLAG               Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_uartFlag               Label    00000000
_uartTime               Label    00000000
_WaitTF0                Label    00000000
_WByte                  Label    00000000
_work10                 Label    00000000
_work9                  Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000114
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
r0x103D                 Label    00000000
r0x103E                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a054d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
