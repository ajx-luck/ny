
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_ADMDbits
                                    1-   24     	extern	_ADRbits
                                    1-   25     	extern	_ADVREFHbits
                                    1-   26     	extern	_ADCRbits
                                    1-   27     	extern	_AWUCONbits
                                    1-   28     	extern	_PACONbits
                                    1-   29     	extern	_INTEDGbits
                                    1-   30     	extern	_ANAENbits
                                    1-   31     	extern	_RFCbits
                                    1-   32     	extern	_INTE2bits
                                    1-   33     	extern	_INDF
                                    1-   34     	extern	_TMR0
                                    1-   35     	extern	_PCL
                                    1-   36     	extern	_STATUS
                                    1-   37     	extern	_FSR
                                    1-   38     	extern	_PORTA
                                    1-   39     	extern	_PORTB
                                    1-   40     	extern	_PCON
                                    1-   41     	extern	_BWUCON
                                    1-   42     	extern	_PCHBUF
                                    1-   43     	extern	_ABPLCON
                                    1-   44     	extern	_BPHCON
                                    1-   45     	extern	_INTE
                                    1-   46     	extern	_INTF
                                    1-   47     	extern	_ADMD
                                    1-   48     	extern	_ADR
                                    1-   49     	extern	_ADD
                                    1-   50     	extern	_ADVREFH
                                    1-   51     	extern	_ADCR
                                    1-   52     	extern	_AWUCON
                                    1-   53     	extern	_PACON
                                    1-   54     	extern	_INTEDG
                                    1-   55     	extern	_TMRH
                                    1-   56     	extern	_ANAEN
                                    1-   57     	extern	_RFC
                                    1-   58     	extern	_TM3RH
                                    1-   59     	extern	_INTE2
                                    1-   60     	extern	_TMR1
                                    1-   61     	extern	_T1CR1
                                    1-   62     	extern	_T1CR2
                                    1-   63     	extern	_PWM1DUTY
                                    1-   64     	extern	_PS1CV
                                    1-   65     	extern	_BZ1CR
                                    1-   66     	extern	_IRCR
                                    1-   67     	extern	_TBHP
                                    1-   68     	extern	_TBHD
                                    1-   69     	extern	_TMR2
                                    1-   70     	extern	_T2CR1
                                    1-   71     	extern	_T2CR2
                                    1-   72     	extern	_PWM2DUTY
                                    1-   73     	extern	_PS2CV
                                    1-   74     	extern	_BZ2CR
                                    1-   75     	extern	_OSCCR
                                    1-   76     	extern	_TMR3
                                    1-   77     	extern	_T3CR1
                                    1-   78     	extern	_T3CR2
                                    1-   79     	extern	_PWM3DUTY
                                    1-   80     	extern	_PS3CV
                                    1-   81     	extern	_BZ3CR
                                    1-   82     	extern	_IOSTA
                                    1-   83     	extern	_IOSTB
                                    1-   84     	extern	_APHCON
                                    1-   85     	extern	_PS0CV
                                    1-   86     	extern	_BODCON
                                    1-   87     	extern	_CMPCR
                                    1-   88     	extern	_PCON1
                                    1-   89     	extern	_T0MD
                                    1-   90     	extern	___sdcc_saved_fsr
                                    1-   91     	extern	___sdcc_saved_stk00
                                    1-   92     	extern	___sdcc_saved_stk01
                                    1-   93     	extern	__nyc_ny8_startup
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     ; global declarations
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     	extern	_F_wait_eoc
                                    1-   98     	extern	_F_AIN5_Convert
                                    1-   99     	extern	_checkBatAD
                                    1-  100     	extern	_initAD
                                    1-  101     	extern	_delay
                                    1-  102     	extern	_chrgCtr
                                    1-  103     	extern	_keyRead
                                    1-  104     	extern	_gotoSleep
                                    1-  105     	extern	_keyCtr
                                    1-  106     	extern	_ledCtr
                                    1-  107     	extern	_LedCtr2
                                    1-  108     	extern	_workCtr
                                    1-  109     	extern	_pwmStop
                                    1-  110     	extern	_pwmInit
                                    1-  111     	extern	_LED4ON
                                    1-  112     	extern	_LED3ON
                                    1-  113     	extern	_LED2ON
                                    1-  114     	extern	_LED1ON
                                    1-  115     	extern	_LedInput
                                    1-  116     	extern	_ledShow
                                    1-  117     	extern	_initSys
                                    1-  118     	extern	_fgCtr
                                    1-  119     	extern	_isr
                                    1-  120     	extern	_main
                                    1-  121     	extern	_LEDHON
                                    1-  122     	extern	_LEDLON
                                    1-  123     	extern	_LEDHOFF
                                    1-  124     	extern	_LEDLOFF
                                    1-  125     	extern	_Status
                                    1-  126     	extern	_duty
                                    1-  127     	extern	_intCount
                                    1-  128     	extern	_count500ms
                                    1-  129     	extern	_keyCount
                                    1-  130     	extern	_workStep
                                    1-  131     	extern	_ledStep
                                    1-  132     	extern	_fgCount
                                    1-  133     	extern	_fgPRD
                                    1-  134     	extern	_preFG
                                    1-  135     	extern	_maxDuty
                                    1-  136     	extern	_pwStep
                                    1-  137     	extern	_R_AIN5_DATA
                                    1-  138     	extern	_R_AIN5_DATA_LB
                                    1-  139     	extern	_chrgTime
                                    1-  140     	extern	_startStep
                                    1-  141     	extern	_sleepTime
                                    1-  142     	extern	_count200ms
                                    1-  143     	extern	_workStartFlag
                                    1-  145     	extern PSAVE
                                    1-  146     	extern SSAVE
                                    1-  147     	extern WSAVE
                                    1-  148     	extern STK02
                                    1-  149     	extern STK01
                                    1-  150     	extern STK00
                                    1-  152     .segment "uninit", 0x20000040
 20000040                           1-  153     PSAVE:
                                    1-  154     	.res 1
 20000041                           1-  155     SSAVE:
                                    1-  156     	.res 1
 20000042                           1-  157     WSAVE:
                                    1-  158     	.res 1
 20000043                           1-  159     STK02:
                                    1-  160     	.res 1
 20000044                           1-  161     STK01:
                                    1-  162     	.res 1
 20000045                           1-  163     STK00:
                                    1-  164     	.res 1
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ; global definitions
                                    1-  168     ;--------------------------------------------------------
                                    1-  169     .segment "uninit"
     0000                           1-  170     _R_AIN5_DATA:
                                    1-  171     	.res	2
                                    1-  174     .segment "uninit"
     0000                           1-  175     _R_AIN5_DATA_LB:
                                    1-  176     	.res	1
                                    1-  179     ;--------------------------------------------------------
                                    1-  180     ; absolute symbol definitions
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     ;--------------------------------------------------------
                                    1-  183     ; compiler-defined variables
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1027:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x1030:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x102F:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x102E:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x102D:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x1029:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x102B:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x102C:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x102A:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1028:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x101B:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x101C:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x1025:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1026:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x101D:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x101E:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x101F:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1022:
                                    1-  238     	.res	1
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ; initialized data
                                    1-  241     ;--------------------------------------------------------
                                    1-  243     .segment "idata"
     0000                           1-  244     _Status:
     0000 0000                      1-  245     	dw	0x00
                                    1-  249     .segment "idata"
     0000                           1-  250     _duty:
     0000 0000 0000                 1-  251     	dw	0x00, 0x00
                                    1-  255     .segment "idata"
     0000                           1-  256     _intCount:
     0000 0000                      1-  257     	dw	0x00
                                    1-  261     .segment "idata"
     0000                           1-  262     _count500ms:
     0000 0000                      1-  263     	dw	0x00
                                    1-  267     .segment "idata"
     0000                           1-  268     _keyCount:
     0000 0000                      1-  269     	dw	0x00
                                    1-  273     .segment "idata"
     0000                           1-  274     _workStep:
     0000 0000                      1-  275     	dw	0x00
                                    1-  279     .segment "idata"
     0000                           1-  280     _ledStep:
     0000 0000                      1-  281     	dw	0x00
                                    1-  285     .segment "idata"
     0000                           1-  286     _fgCount:
     0000 0000 0000                 1-  287     	dw	0x00, 0x00
                                    1-  291     .segment "idata"
     0000                           1-  292     _fgPRD:
     0000 0000 0000                 1-  293     	dw	0x00, 0x00
                                    1-  297     .segment "idata"
     0000                           1-  298     _preFG:
     0000 0000                      1-  299     	dw	0x00
                                    1-  303     .segment "idata"
     0000                           1-  304     _maxDuty:
     0000 0000                      1-  305     	dw	0x00
                                    1-  309     .segment "idata"
     0000                           1-  310     _pwStep:
     0000 0000                      1-  311     	dw	0x00
                                    1-  315     .segment "idata"
     0000                           1-  316     _chrgTime:
     0000 0000 0000                 1-  317     	dw	0x00, 0x00
                                    1-  321     .segment "idata"
     0000                           1-  322     _startStep:
     0000 0000                      1-  323     	dw	0x00
                                    1-  327     .segment "idata"
     0000                           1-  328     _sleepTime:
     0000 0000 0000                 1-  329     	dw	0x00, 0x00
                                    1-  333     .segment "idata"
     0000                           1-  334     _count200ms:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _workStartFlag:
     0000 0000                      1-  341     	dw	0x00
                                    1-  344     ;--------------------------------------------------------
                                    1-  345     ; overlayable items in internal ram 
                                    1-  346     ;--------------------------------------------------------
                                    1-  347     ;	udata_ovr
                                    1-  348     ;--------------------------------------------------------
                                    1-  349     ; reset vector 
                                    1-  350     ;--------------------------------------------------------
                                    1-  351     ORG	0x0000
     0000 3rrr                      1-  352     	LGOTO	__nyc_ny8_startup
                                    1-  353     ;--------------------------------------------------------
                                    1-  354     ; interrupt and initialization code
                                    1-  355     ;--------------------------------------------------------
                                    1-  356     ORG 0x0008
     0008 3rrr                      1-  357     	lgoto	__sdcc_interrupt
                                    1-  359     .segment "code"
     0000                           1-  360     __sdcc_interrupt:
                                    1-  361     ;***
                                    1-  362     ;  pBlock Stats: dbName = I
                                    1-  363     ;***
                                    1-  364     ;2 compiler assigned registers:
                                    1-  365     ;   STK00
                                    1-  366     ;   STK01
                                    1-  367     ;; Starting pCode block
     0000                           1-  368     _isr:
                                    1-  369     ; 0 exit points
                                    1-  370     	.line	73, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  371     	MOVAR	WSAVE
     0001 1503                      1-  372     	SWAPR	STATUS,W
     0002 0283                      1-  373     	CLRR	STATUS
     0003 00rr                      1-  374     	MOVAR	SSAVE
     0004 010A                      1-  375     	MOVR	PCHBUF,W
     0005 028A                      1-  376     	CLRR	PCHBUF
     0006 00rr                      1-  377     	MOVAR	PSAVE
     0007 0104                      1-  378     	MOVR	FSR,W
                                    1-  379     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  380     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  381     	MOVR	STK00,W
                                    1-  382     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  383     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  384     	MOVR	STK01,W
                                    1-  385     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  386     	MOVAR	___sdcc_saved_stk01
                                    1-  387     	.line	75, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  388     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  389     	LGOTO	_00112_DS_
                                    1-  390     	.line	77, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  391     	MOVIA	0x37
     0013 03rr                      1-  392     	ADDAR	_TMR0,F
                                    1-  393     	.line	78, "main.c"; 	++fgCount;
                                    1-  394     	BANKSEL	_fgCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  395     	INCR	_fgCount,F
     0016 0D03                      1-  396     	BTRSC	STATUS,2
     0017 05rr                      1-  397     	INCR	(_fgCount + 1),F
                                    1-  398     	.line	79, "main.c"; 	if(++intCount >= 100)
                                    1-  399     	BANKSEL	_intCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 05rr                      1-  400     	INCR	_intCount,F
                                    1-  401     ;;unsigned compare: left < lit (0x64=100), size=1
     001A 2164                      1-  402     	MOVIA	0x64
     001B 04rr                      1-  403     	SUBAR	_intCount,W
     001C 0803                      1-  404     	BTRSS	STATUS,0
     001D 3rrr                      1-  405     	LGOTO	_00112_DS_
                                    1-  406     	.line	81, "main.c"; 	IntFlag = 1;
                                    1-  407     	BANKSEL	_Status
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 18rr                      1-  408     	BSR	_Status,0
                                    1-  409     	.line	82, "main.c"; 	intCount = 0;
                                    1-  410     	BANKSEL	_intCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 02rr                      1-  411     	CLRR	_intCount
                                    1-  412     	.line	83, "main.c"; 	if(++count500ms >= 40)
                                    1-  413     	BANKSEL	_count500ms
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  414     	INCR	_count500ms,F
                                    1-  415     ;;unsigned compare: left < lit (0x28=40), size=1
     0024 2128                      1-  416     	MOVIA	0x28
     0025 04rr                      1-  417     	SUBAR	_count500ms,W
     0026 0C03                      1-  418     	BTRSC	STATUS,0
                                    1-  419     	.line	84, "main.c"; 	count500ms = 0;
     0027 02rr                      1-  420     	CLRR	_count500ms
                                    1-  421     	.line	85, "main.c"; 	if(++count200ms >= 20)
                                    1-  422     	BANKSEL	_count200ms
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 05rr                      1-  423     	INCR	_count200ms,F
     002A 2114                      1-  424     	MOVIA	0x14
     002B 04rr                      1-  425     	SUBAR	_count200ms,W
     002C 0C03                      1-  426     	BTRSC	STATUS,0
                                    1-  427     	.line	86, "main.c"; 	count200ms = 0;
     002D 02rr                      1-  428     	CLRR	_count200ms
     002E                           1-  429     _00112_DS_:
                                    1-  430     	.line	92, "main.c"; 	if(INTFbits.PABIF)
     002E 08rr                      1-  431     	BTRSS	_INTFbits,1
     002F 3rrr                      1-  432     	LGOTO	_00114_DS_
                                    1-  433     	.line	94, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0030 21FD                      1-  434     	MOVIA	0xfd
     0031 00rr                      1-  435     	MOVAR	_INTF
     0032                           1-  436     _00114_DS_:
                                    1-  437     	.line	97, "main.c"; 	INTF = 0;
     0032 02rr                      1-  438     	CLRR	_INTF
                                    1-  439     	.line	99, "main.c"; 	}
                                    1-  440     	BANKSEL	___sdcc_saved_stk01
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  441     	MOVR	___sdcc_saved_stk01,W
     0035 00rr                      1-  442     	MOVAR	STK01
                                    1-  443     	BANKSEL	___sdcc_saved_stk00
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1-  444     	MOVR	___sdcc_saved_stk00,W
     0038 00rr                      1-  445     	MOVAR	STK00
                                    1-  446     	BANKSEL	___sdcc_saved_fsr
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  447     	MOVR	___sdcc_saved_fsr,W
     003B 0084                      1-  448     	MOVAR	FSR
     003C 01rr                      1-  449     	MOVR	PSAVE,W
     003D 008A                      1-  450     	MOVAR	PCHBUF
     003E 0283                      1-  451     	CLRR	STATUS
     003F 15rr                      1-  452     	SWAPR	SSAVE,W
     0040 0083                      1-  453     	MOVAR	STATUS
     0041 15rr                      1-  454     	SWAPR	WSAVE,F
     0042 15rr                      1-  455     	SWAPR	WSAVE,W
     0043                           1-  456     END_OF_INTERRUPT:
     0043 0011                      1-  457     	RETIE	
                                    1-  459     ;--------------------------------------------------------
                                    1-  460     ; code
                                    1-  461     ;--------------------------------------------------------
                                    1-  462     ;***
                                    1-  463     ;  pBlock Stats: dbName = M
                                    1-  464     ;***
                                    1-  465     ;has an exit
                                    1-  466     ;functions called:
                                    1-  467     ;   _initSys
                                    1-  468     ;   _initAD
                                    1-  469     ;   _ledShow
                                    1-  470     ;   _fgCtr
                                    1-  471     ;   _keyCtr
                                    1-  472     ;   _checkBatAD
                                    1-  473     ;   _ledCtr
                                    1-  474     ;   _chrgCtr
                                    1-  475     ;   _LedCtr2
                                    1-  476     ;   _workCtr
                                    1-  477     ;   _gotoSleep
                                    1-  478     ;   _initSys
                                    1-  479     ;   _initAD
                                    1-  480     ;   _ledShow
                                    1-  481     ;   _fgCtr
                                    1-  482     ;   _keyCtr
                                    1-  483     ;   _checkBatAD
                                    1-  484     ;   _ledCtr
                                    1-  485     ;   _chrgCtr
                                    1-  486     ;   _LedCtr2
                                    1-  487     ;   _workCtr
                                    1-  488     ;   _gotoSleep
                                    1-  489     ;; Starting pCode block
                                    1-  490     .segment "code"; module=main, function=_main
     0000                           1-  492     _main:
                                    1-  493     ; 2 exit points
                                    1-  494     	.line	103, "main.c"; 	initSys();
     0000 2rrr                      1-  495     	LCALL	_initSys
                                    1-  496     	.line	104, "main.c"; 	initAD();
     0001 2rrr                      1-  497     	LCALL	_initAD
     0002                           1-  498     _00140_DS_:
                                    1-  499     	.line	107, "main.c"; 	ledShow();
     0002 2rrr                      1-  500     	LCALL	_ledShow
                                    1-  501     	.line	108, "main.c"; 	CLRWDT();
     0003 0002                      1-  502     	clrwdt
                                    1-  503     	.line	109, "main.c"; 	fgCtr();
     0004 2rrr                      1-  504     	LCALL	_fgCtr
                                    1-  505     	.line	110, "main.c"; 	if(!IntFlag)
                                    1-  506     	BANKSEL	_Status
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 08rr                      1-  507     	BTRSS	_Status,0
     0007 3rrr                      1-  508     	LGOTO	_00140_DS_
                                    1-  509     	.line	112, "main.c"; 	IntFlag = 0;
     0008 1Crr                      1-  510     	BCR	_Status,0
                                    1-  511     	.line	113, "main.c"; 	if((PORTA & 0x20) == 0)
                                    1-  512     	BANKSEL	_PORTA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 0Arr                      1-  513     	BTRSS	_PORTA,5
                                    1-  514     	.line	114, "main.c"; 	keyCtr();
     000B 2rrr                      1-  515     	LCALL	_keyCtr
                                    1-  516     	.line	115, "main.c"; 	if(count200ms == 0)
                                    1-  517     	BANKSEL	_count200ms
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  518     	MOVR	_count200ms,W
     000E 0903                      1-  519     	BTRSS	STATUS,2
     000F 3rrr                      1-  520     	LGOTO	_00124_DS_
                                    1-  521     	.line	117, "main.c"; 	checkBatAD();
     0010 2rrr                      1-  522     	LCALL	_checkBatAD
                                    1-  523     	.line	118, "main.c"; 	ledCtr();
     0011 2rrr                      1-  524     	LCALL	_ledCtr
     0012                           1-  525     _00124_DS_:
                                    1-  526     	.line	120, "main.c"; 	if(count500ms == 0)
                                    1-  527     	BANKSEL	_count500ms
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1-  528     	MOVR	_count500ms,W
     0014 0903                      1-  529     	BTRSS	STATUS,2
     0015 3rrr                      1-  530     	LGOTO	_00129_DS_
                                    1-  531     	.line	122, "main.c"; 	chrgCtr();
     0016 2rrr                      1-  532     	LCALL	_chrgCtr
                                    1-  533     	.line	123, "main.c"; 	if(workStartFlag == 1 || workStartFlag == 3)
                                    1-  534     	BANKSEL	_workStartFlag
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1-  535     	MOVR	_workStartFlag,W
     0019 2401                      1-  536     	XORIA	0x01
     001A 0D03                      1-  537     	BTRSC	STATUS,2
     001B 3rrr                      1-  538     	LGOTO	_00125_DS_
     001C 01rr                      1-  539     	MOVR	_workStartFlag,W
     001D 2403                      1-  540     	XORIA	0x03
     001E 0D03                      1-  541     	BTRSC	STATUS,2
     001F                           1-  542     _00125_DS_:
                                    1-  543     	.line	124, "main.c"; 	LedCtr2();
     001F 2rrr                      1-  544     	LCALL	_LedCtr2
     0020                           1-  545     _00129_DS_:
                                    1-  546     	.line	126, "main.c"; 	if(workStep)
                                    1-  547     	BANKSEL	_workStep
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  548     	MOVR	_workStep,W
     0022 0903                      1-  549     	BTRSS	STATUS,2
                                    1-  550     	.line	127, "main.c"; 	workCtr();
     0023 2rrr                      1-  551     	LCALL	_workCtr
                                    1-  552     	.line	128, "main.c"; 	if(workStep == 0 && keyCount == 0 && workStartFlag == 0 && ((PORTA & 0x20) == 0))
                                    1-  553     	BANKSEL	_workStep
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  554     	MOVR	_workStep,W
     0026 0903                      1-  555     	BTRSS	STATUS,2
     0027 3rrr                      1-  556     	LGOTO	_00140_DS_
                                    1-  557     	BANKSEL	_keyCount
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1-  558     	MOVR	_keyCount,W
     002A 0903                      1-  559     	BTRSS	STATUS,2
     002B 3rrr                      1-  560     	LGOTO	_00140_DS_
                                    1-  561     	BANKSEL	_workStartFlag
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1-  562     	MOVR	_workStartFlag,W
     002E 0903                      1-  563     	BTRSS	STATUS,2
     002F 3rrr                      1-  564     	LGOTO	_00140_DS_
                                    1-  565     	BANKSEL	_PORTA
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 0Err                      1-  566     	BTRSC	_PORTA,5
     0032 3rrr                      1-  567     	LGOTO	_00140_DS_
                                    1-  568     	.line	130, "main.c"; 	if(++sleepTime > 2000)
                                    1-  569     	BANKSEL	_sleepTime
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 05rr                      1-  570     	INCR	_sleepTime,F
     0035 0D03                      1-  571     	BTRSC	STATUS,2
     0036 05rr                      1-  572     	INCR	(_sleepTime + 1),F
                                    1-  573     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  574     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0037 2107                      1-  575     	MOVIA	0x07
     0038 04rr                      1-  576     	SUBAR	(_sleepTime + 1),W
     0039 0903                      1-  577     	BTRSS	STATUS,2
     003A 3rrr                      1-  578     	LGOTO	_00181_DS_
     003B 21D1                      1-  579     	MOVIA	0xd1
     003C 04rr                      1-  580     	SUBAR	_sleepTime,W
     003D                           1-  581     _00181_DS_:
     003D 0803                      1-  582     	BTRSS	STATUS,0
     003E 3rrr                      1-  583     	LGOTO	_00140_DS_
                                    1-  584     	.line	132, "main.c"; 	gotoSleep();
     003F 2rrr                      1-  585     	LCALL	_gotoSleep
     0040 3rrr                      1-  586     	LGOTO	_00140_DS_
                                    1-  587     	.line	136, "main.c"; 	}
                                    1-  588     	RETURN	
     0041 0010                      3-   26 m1      ret
                                    1-  589     ; exit point of _main
                                    1-  591     ;***
                                    1-  592     ;  pBlock Stats: dbName = C
                                    1-  593     ;***
                                    1-  594     ;has an exit
                                    1-  595     ;; Starting pCode block
                                    1-  596     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  598     _F_wait_eoc:
                                    1-  599     ; 2 exit points
     0000                           1-  600     _00484_DS_:
                                    1-  601     	.line	651, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  602     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  603     	LGOTO	_00484_DS_
                                    1-  604     	.line	653, "main.c"; 	}
                                    1-  605     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  606     ; exit point of _F_wait_eoc
                                    1-  608     ;***
                                    1-  609     ;  pBlock Stats: dbName = C
                                    1-  610     ;***
                                    1-  611     ;has an exit
                                    1-  612     ;functions called:
                                    1-  613     ;   _delay
                                    1-  614     ;   _F_wait_eoc
                                    1-  615     ;   _delay
                                    1-  616     ;   _F_wait_eoc
                                    1-  617     ;6 compiler assigned registers:
                                    1-  618     ;   r0x101D
                                    1-  619     ;   r0x101E
                                    1-  620     ;   r0x101F
                                    1-  621     ;   r0x1020
                                    1-  622     ;   r0x1021
                                    1-  623     ;   r0x1022
                                    1-  624     ;; Starting pCode block
                                    1-  625     .segment "code"; module=main, function=_F_AIN5_Convert
                                    1-  627     ;local variable name mapping:
     0000                           1-  630     _F_AIN5_Convert:
                                    1-  631     ; 2 exit points
                                    1-  632     	.line	634, "main.c"; 	void F_AIN5_Convert(char count)
                                    1-  633     	BANKSEL	r0x101D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  634     	MOVAR	r0x101D
                                    1-  635     	.line	636, "main.c"; 	R_AIN5_DATA=R_AIN5_DATA_LB=0x00;   
                                    1-  636     	BANKSEL	_R_AIN5_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  637     	CLRR	_R_AIN5_DATA_LB
                                    1-  638     	BANKSEL	_R_AIN5_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  639     	CLRR	_R_AIN5_DATA
     0006 02rr                      1-  640     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  641     	.line	638, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  642     	MOVIA	0x94
     0008 00rr                      1-  643     	MOVAR	_ADMD
                                    1-  644     	.line	639, "main.c"; 	delay(200);	
     0009 21C8                      1-  645     	MOVIA	0xc8
     000A 2rrr                      1-  646     	LCALL	_delay
                                    1-  647     	.line	640, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  648     	MOVIA	0x01
                                    1-  649     	BANKSEL	r0x101E
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  650     	MOVAR	r0x101E
     000E                           1-  651     _00477_DS_:
                                    1-  652     	BANKSEL	r0x101E
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1-  653     	MOVR	r0x101E,W
                                    1-  654     	BANKSEL	r0x101D
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  655     	SUBAR	r0x101D,W
     0012 0803                      1-  656     	BTRSS	STATUS,0
     0013 3rrr                      1-  657     	LGOTO	_00479_DS_
                                    1-  658     	.line	642, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  659     	BSR	_ADMDbits,6
                                    1-  660     	.line	643, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1-  661     	LCALL	_F_wait_eoc
                                    1-  662     	.line	644, "main.c"; 	R_AIN5_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  663     	MOVIA	0x0f
     0017 10rr                      1-  664     	ANDAR	_ADR,W
                                    1-  665     ;;3	MOVAR	r0x101F
                                    1-  666     	BANKSEL	_R_AIN5_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1-  667     	ADDAR	_R_AIN5_DATA_LB,F
                                    1-  668     	.line	645, "main.c"; 	R_AIN5_DATA    += ADD; 
     001A 01rr                      1-  669     	MOVR	_ADD,W
                                    1-  670     	BANKSEL	r0x101F
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  671     	MOVAR	r0x101F
                                    1-  672     ;;1	CLRR	r0x1020
                                    1-  673     ;;102	MOVR	r0x101F,W
                                    1-  674     ;;100	MOVAR	r0x1021
     001D 2100                      1-  675     	MOVIA	0x00
                                    1-  676     	BANKSEL	r0x1022
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  677     	MOVAR	r0x1022
                                    1-  678     ;;101	MOVR	r0x1021,W
                                    1-  679     	BANKSEL	r0x101F
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  680     	MOVR	r0x101F,W
                                    1-  681     	BANKSEL	_R_AIN5_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1-  682     	ADDAR	_R_AIN5_DATA,F
                                    1-  683     	BANKSEL	r0x1022
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  684     	MOVR	r0x1022,W
     0026 0C03                      1-  685     	BTRSC	STATUS,0
     0027 05rr                      1-  686     	INCR	r0x1022,W
     0028 0D03                      1-  687     	BTRSC	STATUS,2
     0029 3rrr                      1-  688     	LGOTO	_00001_DS_
                                    1-  689     	BANKSEL	_R_AIN5_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1-  690     	ADDAR	(_R_AIN5_DATA + 1),F
     002C                           1-  691     _00001_DS_:
                                    1-  692     	.line	640, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  693     	BANKSEL	r0x101E
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  694     	INCR	r0x101E,F
     002E 3rrr                      1-  695     	LGOTO	_00477_DS_
     002F                           1-  696     _00479_DS_:
                                    1-  697     	.line	647, "main.c"; 	}
                                    1-  698     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1-  699     ; exit point of _F_AIN5_Convert
                                    1-  701     ;***
                                    1-  702     ;  pBlock Stats: dbName = C
                                    1-  703     ;***
                                    1-  704     ;has an exit
                                    1-  705     ;functions called:
                                    1-  706     ;   _F_AIN5_Convert
                                    1-  707     ;   _F_AIN5_Convert
                                    1-  708     ;4 compiler assigned registers:
                                    1-  709     ;   r0x1023
                                    1-  710     ;   r0x1024
                                    1-  711     ;   r0x1025
                                    1-  712     ;   r0x1026
                                    1-  713     ;; Starting pCode block
                                    1-  714     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  716     _checkBatAD:
                                    1-  717     ; 2 exit points
                                    1-  718     	.line	576, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA_LB = 0x00;
                                    1-  719     	BANKSEL	_R_AIN5_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  720     	CLRR	_R_AIN5_DATA_LB
                                    1-  721     	BANKSEL	_R_AIN5_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  722     	CLRR	_R_AIN5_DATA
     0004 02rr                      1-  723     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  724     	.line	577, "main.c"; 	F_AIN5_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  725     	MOVIA	0x08
     0006 2rrr                      1-  726     	LCALL	_F_AIN5_Convert
                                    1-  727     	.line	578, "main.c"; 	R_AIN5_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  728     	BANKSEL	_R_AIN5_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1-  729     	SWAPR	(_R_AIN5_DATA + 1),W
     0009 22F0                      1-  730     	ANDIA	0xf0
     000A 00rr                      1-  731     	MOVAR	(_R_AIN5_DATA + 1)
     000B 15rr                      1-  732     	SWAPR	_R_AIN5_DATA,W
     000C 00rr                      1-  733     	MOVAR	_R_AIN5_DATA
     000D 220F                      1-  734     	ANDIA	0x0f
     000E 11rr                      1-  735     	IORAR	(_R_AIN5_DATA + 1),F
     000F 12rr                      1-  736     	XORAR	_R_AIN5_DATA,F
                                    1-  737     	.line	579, "main.c"; 	R_AIN5_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  738     	MOVIA	0xf0
                                    1-  739     	BANKSEL	_R_AIN5_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1-  740     	ANDAR	_R_AIN5_DATA_LB,F
                                    1-  741     	.line	580, "main.c"; 	R_AIN5_DATA += R_AIN5_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  742     	MOVR	_R_AIN5_DATA_LB,W
                                    1-  743     	BANKSEL	r0x1025
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1-  744     	MOVAR	r0x1025
                                    1-  745     ;;1	MOVAR	r0x1023
                                    1-  746     ;;1	CLRR	r0x1024
                                    1-  747     ;;99	MOVR	r0x1023,W
     0016 2100                      1-  748     	MOVIA	0x00
                                    1-  749     	BANKSEL	r0x1026
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1-  750     	MOVAR	r0x1026
                                    1-  751     	BANKSEL	r0x1025
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  752     	MOVR	r0x1025,W
                                    1-  753     	BANKSEL	_R_AIN5_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1-  754     	ADDAR	_R_AIN5_DATA,F
                                    1-  755     	BANKSEL	r0x1026
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  756     	MOVR	r0x1026,W
     001F 0C03                      1-  757     	BTRSC	STATUS,0
     0020 05rr                      1-  758     	INCR	r0x1026,W
     0021 0D03                      1-  759     	BTRSC	STATUS,2
     0022 3rrr                      1-  760     	LGOTO	_00002_DS_
                                    1-  761     	BANKSEL	_R_AIN5_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1-  762     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1-  763     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  764     _00002_DS_:
                                    1-  765     	.line	581, "main.c"; 	R_AIN5_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1-  766     	BCR	STATUS,0
                                    1-  767     	BANKSEL	_R_AIN5_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1-  768     	RRR	(_R_AIN5_DATA + 1),F
     0028 13rr                      1-  769     	RRR	_R_AIN5_DATA,F
                                    1-  770     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  771     	BCR	STATUS,0
     002A 13rr                      1-  772     	RRR	(_R_AIN5_DATA + 1),F
     002B 13rr                      1-  773     	RRR	_R_AIN5_DATA,F
                                    1-  774     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  775     	BCR	STATUS,0
     002D 13rr                      1-  776     	RRR	(_R_AIN5_DATA + 1),F
     002E 13rr                      1-  777     	RRR	_R_AIN5_DATA,F
                                    1-  778     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  779     ;;unsigned compare: left >= lit (0x614=1556), size=2
                                    1-  780     	.line	582, "main.c"; 	if(R_AIN5_DATA > 1555)
     002F 2106                      1-  781     	MOVIA	0x06
     0030 04rr                      1-  782     	SUBAR	(_R_AIN5_DATA + 1),W
     0031 0903                      1-  783     	BTRSS	STATUS,2
     0032 3rrr                      1-  784     	LGOTO	_00464_DS_
     0033 2114                      1-  785     	MOVIA	0x14
     0034 04rr                      1-  786     	SUBAR	_R_AIN5_DATA,W
     0035                           1-  787     _00464_DS_:
     0035 0803                      1-  788     	BTRSS	STATUS,0
     0036 3rrr                      1-  789     	LGOTO	_00436_DS_
                                    1-  790     	.line	584, "main.c"; 	pwStep = 6;
     0037 2106                      1-  791     	MOVIA	0x06
                                    1-  792     	BANKSEL	_pwStep
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 00rr                      1-  793     	MOVAR	_pwStep
     003A 3rrr                      1-  794     	LGOTO	_00438_DS_
                                    1-  795     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  796     ;;unsigned compare: left >= lit (0x571=1393), size=2
     003B                           1-  797     _00436_DS_:
                                    1-  798     	.line	586, "main.c"; 	else if(R_AIN5_DATA > 1392)
     003B 2105                      1-  799     	MOVIA	0x05
                                    1-  800     	BANKSEL	_R_AIN5_DATA
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 04rr                      1-  801     	SUBAR	(_R_AIN5_DATA + 1),W
     003E 0903                      1-  802     	BTRSS	STATUS,2
     003F 3rrr                      1-  803     	LGOTO	_00465_DS_
     0040 2171                      1-  804     	MOVIA	0x71
     0041 04rr                      1-  805     	SUBAR	_R_AIN5_DATA,W
     0042                           1-  806     _00465_DS_:
     0042 0803                      1-  807     	BTRSS	STATUS,0
     0043 3rrr                      1-  808     	LGOTO	_00433_DS_
                                    1-  809     	.line	589, "main.c"; 	if(pwStep == 6)
                                    1-  810     	BANKSEL	_pwStep
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  811     	MOVR	_pwStep,W
     0046 2406                      1-  812     	XORIA	0x06
     0047 0903                      1-  813     	BTRSS	STATUS,2
     0048 3rrr                      1-  814     	LGOTO	_00419_DS_
                                    1-  815     ;;unsigned compare: left < lit (0x5DC=1500), size=2
                                    1-  816     	.line	591, "main.c"; 	if(R_AIN5_DATA < 1500)
     0049 2105                      1-  817     	MOVIA	0x05
                                    1-  818     	BANKSEL	_R_AIN5_DATA
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 04rr                      1-  819     	SUBAR	(_R_AIN5_DATA + 1),W
     004C 0903                      1-  820     	BTRSS	STATUS,2
     004D 3rrr                      1-  821     	LGOTO	_00466_DS_
     004E 21DC                      1-  822     	MOVIA	0xdc
     004F 04rr                      1-  823     	SUBAR	_R_AIN5_DATA,W
     0050                           1-  824     _00466_DS_:
     0050 0C03                      1-  825     	BTRSC	STATUS,0
     0051 3rrr                      1-  826     	LGOTO	_00420_DS_
                                    1-  827     	.line	592, "main.c"; 	pwStep = 5;
     0052 2105                      1-  828     	MOVIA	0x05
                                    1-  829     	BANKSEL	_pwStep
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1-  830     	MOVAR	_pwStep
     0055 3rrr                      1-  831     	LGOTO	_00420_DS_
     0056                           1-  832     _00419_DS_:
                                    1-  833     	.line	596, "main.c"; 	pwStep = 5;
     0056 2105                      1-  834     	MOVIA	0x05
                                    1-  835     	BANKSEL	_pwStep
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1-  836     	MOVAR	_pwStep
     0059                           1-  837     _00420_DS_:
                                    1-  838     	.line	598, "main.c"; 	if(++chrgTime > 1800)
                                    1-  839     	BANKSEL	_chrgTime
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 05rr                      1-  840     	INCR	_chrgTime,F
     005B 0D03                      1-  841     	BTRSC	STATUS,2
     005C 05rr                      1-  842     	INCR	(_chrgTime + 1),F
                                    1-  843     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  844     ;;unsigned compare: left >= lit (0x709=1801), size=2
     005D 2107                      1-  845     	MOVIA	0x07
     005E 04rr                      1-  846     	SUBAR	(_chrgTime + 1),W
     005F 0903                      1-  847     	BTRSS	STATUS,2
     0060 3rrr                      1-  848     	LGOTO	_00467_DS_
     0061 2109                      1-  849     	MOVIA	0x09
     0062 04rr                      1-  850     	SUBAR	_chrgTime,W
     0063                           1-  851     _00467_DS_:
     0063 0803                      1-  852     	BTRSS	STATUS,0
     0064 3rrr                      1-  853     	LGOTO	_00438_DS_
                                    1-  854     	.line	600, "main.c"; 	chrgTime = 1800;
     0065 2108                      1-  855     	MOVIA	0x08
                                    1-  856     	BANKSEL	_chrgTime
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 00rr                      1-  857     	MOVAR	_chrgTime
     0068 2107                      1-  858     	MOVIA	0x07
     0069 00rr                      1-  859     	MOVAR	(_chrgTime + 1)
                                    1-  860     	.line	601, "main.c"; 	pwStep = 6;
     006A 2106                      1-  861     	MOVIA	0x06
                                    1-  862     	BANKSEL	_pwStep
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 00rr                      1-  863     	MOVAR	_pwStep
     006D 3rrr                      1-  864     	LGOTO	_00438_DS_
                                    1-  865     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  866     ;;unsigned compare: left >= lit (0x3A0=928), size=2
     006E                           1-  867     _00433_DS_:
                                    1-  868     	.line	604, "main.c"; 	else if(R_AIN5_DATA > 927)
     006E 2103                      1-  869     	MOVIA	0x03
                                    1-  870     	BANKSEL	_R_AIN5_DATA
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 04rr                      1-  871     	SUBAR	(_R_AIN5_DATA + 1),W
     0071 0903                      1-  872     	BTRSS	STATUS,2
     0072 3rrr                      1-  873     	LGOTO	_00468_DS_
     0073 21A0                      1-  874     	MOVIA	0xa0
     0074 04rr                      1-  875     	SUBAR	_R_AIN5_DATA,W
     0075                           1-  876     _00468_DS_:
     0075 0803                      1-  877     	BTRSS	STATUS,0
     0076 3rrr                      1-  878     	LGOTO	_00430_DS_
                                    1-  879     	.line	607, "main.c"; 	pwStep = 4;
     0077 2104                      1-  880     	MOVIA	0x04
                                    1-  881     	BANKSEL	_pwStep
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 00rr                      1-  882     	MOVAR	_pwStep
                                    1-  883     	.line	608, "main.c"; 	chrgTime = 0;
                                    1-  884     	BANKSEL	_chrgTime
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1-  885     	CLRR	_chrgTime
     007C 02rr                      1-  886     	CLRR	(_chrgTime + 1)
     007D 3rrr                      1-  887     	LGOTO	_00438_DS_
                                    1-  888     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  889     ;;unsigned compare: left >= lit (0x1D0=464), size=2
     007E                           1-  890     _00430_DS_:
                                    1-  891     	.line	610, "main.c"; 	else if(R_AIN5_DATA > 463)
     007E 2101                      1-  892     	MOVIA	0x01
                                    1-  893     	BANKSEL	_R_AIN5_DATA
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 04rr                      1-  894     	SUBAR	(_R_AIN5_DATA + 1),W
     0081 0903                      1-  895     	BTRSS	STATUS,2
     0082 3rrr                      1-  896     	LGOTO	_00469_DS_
     0083 21D0                      1-  897     	MOVIA	0xd0
     0084 04rr                      1-  898     	SUBAR	_R_AIN5_DATA,W
     0085                           1-  899     _00469_DS_:
     0085 0803                      1-  900     	BTRSS	STATUS,0
     0086 3rrr                      1-  901     	LGOTO	_00427_DS_
                                    1-  902     	.line	613, "main.c"; 	pwStep = 3;
     0087 2103                      1-  903     	MOVIA	0x03
                                    1-  904     	BANKSEL	_pwStep
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 00rr                      1-  905     	MOVAR	_pwStep
                                    1-  906     	.line	614, "main.c"; 	chrgTime = 0;
                                    1-  907     	BANKSEL	_chrgTime
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 02rr                      1-  908     	CLRR	_chrgTime
     008C 02rr                      1-  909     	CLRR	(_chrgTime + 1)
     008D 3rrr                      1-  910     	LGOTO	_00438_DS_
                                    1-  911     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  912     ;;unsigned compare: left >= lit (0x9B=155), size=2
     008E                           1-  913     _00427_DS_:
                                    1-  914     	.line	616, "main.c"; 	else if(R_AIN5_DATA > 154)
     008E 2100                      1-  915     	MOVIA	0x00
                                    1-  916     	BANKSEL	_R_AIN5_DATA
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 04rr                      1-  917     	SUBAR	(_R_AIN5_DATA + 1),W
     0091 0903                      1-  918     	BTRSS	STATUS,2
     0092 3rrr                      1-  919     	LGOTO	_00470_DS_
     0093 219B                      1-  920     	MOVIA	0x9b
     0094 04rr                      1-  921     	SUBAR	_R_AIN5_DATA,W
     0095                           1-  922     _00470_DS_:
     0095 0803                      1-  923     	BTRSS	STATUS,0
     0096 3rrr                      1-  924     	LGOTO	_00424_DS_
                                    1-  925     	.line	619, "main.c"; 	pwStep = 2;
     0097 2102                      1-  926     	MOVIA	0x02
                                    1-  927     	BANKSEL	_pwStep
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 00rr                      1-  928     	MOVAR	_pwStep
                                    1-  929     	.line	620, "main.c"; 	chrgTime = 0;
                                    1-  930     	BANKSEL	_chrgTime
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 02rr                      1-  931     	CLRR	_chrgTime
     009C 02rr                      1-  932     	CLRR	(_chrgTime + 1)
     009D 3rrr                      1-  933     	LGOTO	_00438_DS_
     009E                           1-  934     _00424_DS_:
                                    1-  935     	.line	625, "main.c"; 	pwStep = 1;
     009E 2101                      1-  936     	MOVIA	0x01
                                    1-  937     	BANKSEL	_pwStep
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 00rr                      1-  938     	MOVAR	_pwStep
                                    1-  939     	.line	626, "main.c"; 	chrgTime = 0;
                                    1-  940     	BANKSEL	_chrgTime
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 02rr                      1-  941     	CLRR	_chrgTime
     00A3 02rr                      1-  942     	CLRR	(_chrgTime + 1)
     00A4                           1-  943     _00438_DS_:
                                    1-  944     	.line	629, "main.c"; 	}
                                    1-  945     	RETURN	
     00A4 0010                      3-   26 m1      ret
                                    1-  946     ; exit point of _checkBatAD
                                    1-  948     ;***
                                    1-  949     ;  pBlock Stats: dbName = C
                                    1-  950     ;***
                                    1-  951     ;has an exit
                                    1-  952     ;functions called:
                                    1-  953     ;   _delay
                                    1-  954     ;   _delay
                                    1-  955     ;; Starting pCode block
                                    1-  956     .segment "code"; module=main, function=_initAD
     0000                           1-  958     _initAD:
                                    1-  959     ; 2 exit points
                                    1-  960     	.line	552, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1-  961     	MOVIA	0x84
     0001 00rr                      1-  962     	MOVAR	_ADMD
                                    1-  963     	.line	557, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1-  964     	CLRR	_ADVREFH
                                    1-  965     	.line	562, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1-  966     	MOVIA	0x10
     0004 00rr                      1-  967     	MOVAR	_ADR
                                    1-  968     	.line	564, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1-  969     	MOVIA	0x03
     0006 00rr                      1-  970     	MOVAR	_ADCR
                                    1-  971     	.line	567, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1-  972     	BSR	_ADMDbits,4
                                    1-  973     	.line	568, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1-  974     	MOVIA	0x64
     0009 2rrr                      1-  975     	LCALL	_delay
                                    1-  976     	.line	571, "main.c"; 	}
                                    1-  977     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1-  978     ; exit point of _initAD
                                    1-  980     ;***
                                    1-  981     ;  pBlock Stats: dbName = C
                                    1-  982     ;***
                                    1-  983     ;has an exit
                                    1-  984     ;2 compiler assigned registers:
                                    1-  985     ;   r0x101B
                                    1-  986     ;   r0x101C
                                    1-  987     ;; Starting pCode block
                                    1-  988     .segment "code"; module=main, function=_delay
                                    1-  990     ;local variable name mapping:
     0000                           1-  993     _delay:
                                    1-  994     ; 2 exit points
                                    1-  995     	.line	542, "main.c"; 	void delay(u8t time)
                                    1-  996     	BANKSEL	r0x101B
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  997     	MOVAR	r0x101B
                                    1-  998     	.line	544, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  999     	BANKSEL	r0x101C
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1000     	CLRR	r0x101C
     0004                           1- 1001     _00405_DS_:
                                    1- 1002     	BANKSEL	r0x101B
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1003     	MOVR	r0x101B,W
                                    1- 1004     	BANKSEL	r0x101C
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 1005     	SUBAR	r0x101C,W
     0008 0C03                      1- 1006     	BTRSC	STATUS,0
     0009 3rrr                      1- 1007     	LGOTO	_00407_DS_
                                    1- 1008     	.line	545, "main.c"; 	NOP();
     000A 0000                      1- 1009     	nop
                                    1- 1010     	.line	544, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1011     	BANKSEL	r0x101C
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 1012     	INCR	r0x101C,F
     000D 3rrr                      1- 1013     	LGOTO	_00405_DS_
     000E                           1- 1014     _00407_DS_:
                                    1- 1015     	.line	546, "main.c"; 	}
                                    1- 1016     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1017     ; exit point of _delay
                                    1- 1019     ;***
                                    1- 1020     ;  pBlock Stats: dbName = C
                                    1- 1021     ;***
                                    1- 1022     ;has an exit
                                    1- 1023     ;functions called:
                                    1- 1024     ;   _pwmStop
                                    1- 1025     ;   _LedInput
                                    1- 1026     ;   _LEDLOFF
                                    1- 1027     ;   _LEDHON
                                    1- 1028     ;   _LEDHOFF
                                    1- 1029     ;   _LEDHOFF
                                    1- 1030     ;   _LEDLOFF
                                    1- 1031     ;   _pwmStop
                                    1- 1032     ;   _LedInput
                                    1- 1033     ;   _LEDLOFF
                                    1- 1034     ;   _LEDHON
                                    1- 1035     ;   _LEDHOFF
                                    1- 1036     ;   _LEDHOFF
                                    1- 1037     ;   _LEDLOFF
                                    1- 1038     ;; Starting pCode block
                                    1- 1039     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1041     _chrgCtr:
                                    1- 1042     ; 2 exit points
                                    1- 1043     	.line	506, "main.c"; 	if(PORTA & 0x20)
                                    1- 1044     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 0Arr                      1- 1045     	BTRSS	_PORTA,5
     0002 3rrr                      1- 1046     	LGOTO	_00396_DS_
                                    1- 1047     	.line	509, "main.c"; 	workStep = 0;
                                    1- 1048     	BANKSEL	_workStep
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1- 1049     	CLRR	_workStep
                                    1- 1050     	.line	510, "main.c"; 	ledStep = 0;
                                    1- 1051     	BANKSEL	_ledStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1052     	CLRR	_ledStep
                                    1- 1053     	.line	511, "main.c"; 	pwmStop();
     0007 2rrr                      1- 1054     	LCALL	_pwmStop
                                    1- 1055     	.line	512, "main.c"; 	LedInput();
     0008 2rrr                      1- 1056     	LCALL	_LedInput
                                    1- 1057     	.line	513, "main.c"; 	PORTB &= 0xFD;
     0009 1Crr                      1- 1058     	BCR	_PORTB,1
                                    1- 1059     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1060     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 1061     	.line	514, "main.c"; 	if(pwStep > 5)
     000A 2106                      1- 1062     	MOVIA	0x06
                                    1- 1063     	BANKSEL	_pwStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1- 1064     	SUBAR	_pwStep,W
     000D 0803                      1- 1065     	BTRSS	STATUS,0
     000E 3rrr                      1- 1066     	LGOTO	_00391_DS_
                                    1- 1067     	.line	517, "main.c"; 	LEDLOFF();
     000F 2rrr                      1- 1068     	LCALL	_LEDLOFF
                                    1- 1069     	.line	518, "main.c"; 	LEDHON();
     0010 2rrr                      1- 1070     	LCALL	_LEDHON
     0011 3rrr                      1- 1071     	LGOTO	_00398_DS_
     0012                           1- 1072     _00391_DS_:
                                    1- 1073     	.line	522, "main.c"; 	if(pwStep == 6)
                                    1- 1074     	BANKSEL	_pwStep
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1075     	MOVR	_pwStep,W
     0014 2406                      1- 1076     	XORIA	0x06
     0015 0903                      1- 1077     	BTRSS	STATUS,2
     0016 3rrr                      1- 1078     	LGOTO	_00389_DS_
                                    1- 1079     	.line	524, "main.c"; 	pwStep = 5;
     0017 2105                      1- 1080     	MOVIA	0x05
     0018 00rr                      1- 1081     	MOVAR	_pwStep
     0019                           1- 1082     _00389_DS_:
                                    1- 1083     	.line	526, "main.c"; 	LEDHOFF();
     0019 2rrr                      1- 1084     	LCALL	_LEDHOFF
                                    1- 1085     	.line	527, "main.c"; 	PORTA ^= 0x08;
     001A 2108                      1- 1086     	MOVIA	0x08
                                    1- 1087     	BANKSEL	_PORTA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 12rr                      1- 1088     	XORAR	_PORTA,F
     001D 3rrr                      1- 1089     	LGOTO	_00398_DS_
     001E                           1- 1090     _00396_DS_:
                                    1- 1091     	.line	532, "main.c"; 	if(workStartFlag == 0)
                                    1- 1092     	BANKSEL	_workStartFlag
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1093     	MOVR	_workStartFlag,W
     0020 0903                      1- 1094     	BTRSS	STATUS,2
     0021 3rrr                      1- 1095     	LGOTO	_00398_DS_
                                    1- 1096     	.line	534, "main.c"; 	LEDHOFF();
     0022 2rrr                      1- 1097     	LCALL	_LEDHOFF
                                    1- 1098     	.line	535, "main.c"; 	LEDLOFF();	
     0023 2rrr                      1- 1099     	LCALL	_LEDLOFF
     0024                           1- 1100     _00398_DS_:
                                    1- 1101     	.line	539, "main.c"; 	}
                                    1- 1102     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1- 1103     ; exit point of _chrgCtr
                                    1- 1105     ;***
                                    1- 1106     ;  pBlock Stats: dbName = C
                                    1- 1107     ;***
                                    1- 1108     ;has an exit
                                    1- 1109     ;1 compiler assigned register :
                                    1- 1110     ;   r0x1028
                                    1- 1111     ;; Starting pCode block
                                    1- 1112     .segment "code"; module=main, function=_keyRead
                                    1- 1114     ;local variable name mapping:
     0000                           1- 1116     _keyRead:
                                    1- 1117     ; 2 exit points
                                    1- 1118     	.line	469, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1119     	BANKSEL	r0x1028
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1120     	MOVAR	r0x1028
                                    1- 1121     	.line	471, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1122     	MOVR	r0x1028,W
     0003 0D03                      1- 1123     	BTRSC	STATUS,2
     0004 3rrr                      1- 1124     	LGOTO	_00381_DS_
                                    1- 1125     	.line	473, "main.c"; 	keyCount++;
                                    1- 1126     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1127     	INCR	_keyCount,F
                                    1- 1128     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1129     	.line	474, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1130     	MOVIA	0xc8
     0008 04rr                      1- 1131     	SUBAR	_keyCount,W
     0009 0803                      1- 1132     	BTRSS	STATUS,0
     000A 3rrr                      1- 1133     	LGOTO	_00382_DS_
                                    1- 1134     	.line	476, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1135     	MOVIA	0xc8
     000C 00rr                      1- 1136     	MOVAR	_keyCount
                                    1- 1137     	.line	477, "main.c"; 	if(!longPressFlag)
                                    1- 1138     	BANKSEL	_Status
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 0Crr                      1- 1139     	BTRSC	_Status,1
     000F 3rrr                      1- 1140     	LGOTO	_00382_DS_
                                    1- 1141     	.line	479, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1142     	BSR	_Status,1
                                    1- 1143     	.line	480, "main.c"; 	return 2;
     0011 2102                      1- 1144     	MOVIA	0x02
     0012 3rrr                      1- 1145     	LGOTO	_00383_DS_
                                    1- 1146     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 1147     _00381_DS_:
                                    1- 1148     	.line	486, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 1149     	MOVIA	0xc8
                                    1- 1150     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1151     	SUBAR	_keyCount,W
     0016 0803                      1- 1152     	BTRSS	STATUS,0
     0017 3rrr                      1- 1153     	LGOTO	_00378_DS_
                                    1- 1154     	.line	488, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1155     	CLRR	_keyCount
                                    1- 1156     	.line	489, "main.c"; 	longPressFlag = 0;
                                    1- 1157     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Crr                      1- 1158     	BCR	_Status,1
                                    1- 1159     	.line	490, "main.c"; 	return	0;
     001B 2100                      1- 1160     	MOVIA	0x00
     001C 3rrr                      1- 1161     	LGOTO	_00383_DS_
                                    1- 1162     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 1163     _00378_DS_:
                                    1- 1164     	.line	492, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 1165     	MOVIA	0x08
                                    1- 1166     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 1167     	SUBAR	_keyCount,W
     0020 0803                      1- 1168     	BTRSS	STATUS,0
     0021 3rrr                      1- 1169     	LGOTO	_00379_DS_
                                    1- 1170     	.line	494, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1171     	CLRR	_keyCount
                                    1- 1172     	.line	495, "main.c"; 	return	1;
     0023 2101                      1- 1173     	MOVIA	0x01
     0024 3rrr                      1- 1174     	LGOTO	_00383_DS_
     0025                           1- 1175     _00379_DS_:
                                    1- 1176     	.line	497, "main.c"; 	keyCount = 0;
                                    1- 1177     	BANKSEL	_keyCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 1178     	CLRR	_keyCount
     0027                           1- 1179     _00382_DS_:
                                    1- 1180     	.line	499, "main.c"; 	return 0;
     0027 2100                      1- 1181     	MOVIA	0x00
     0028                           1- 1182     _00383_DS_:
                                    1- 1183     	.line	500, "main.c"; 	}
                                    1- 1184     	RETURN	
     0028 0010                      3-   26 m1      ret
                                    1- 1185     ; exit point of _keyRead
                                    1- 1187     ;***
                                    1- 1188     ;  pBlock Stats: dbName = C
                                    1- 1189     ;***
                                    1- 1190     ;has an exit
                                    1- 1191     ;functions called:
                                    1- 1192     ;   _LedInput
                                    1- 1193     ;   _pwmStop
                                    1- 1194     ;   _LedInput
                                    1- 1195     ;   _pwmStop
                                    1- 1196     ;; Starting pCode block
                                    1- 1197     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1199     _gotoSleep:
                                    1- 1200     ; 2 exit points
                                    1- 1201     	.line	449, "main.c"; 	LedInput();
     0000 2rrr                      1- 1202     	LCALL	_LedInput
                                    1- 1203     	.line	450, "main.c"; 	sleepTime = 0;
                                    1- 1204     	BANKSEL	_sleepTime
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1- 1205     	CLRR	_sleepTime
     0003 02rr                      1- 1206     	CLRR	(_sleepTime + 1)
                                    1- 1207     	.line	451, "main.c"; 	pwmStop();
     0004 2rrr                      1- 1208     	LCALL	_pwmStop
                                    1- 1209     	.line	452, "main.c"; 	workStep = 0;
                                    1- 1210     	BANKSEL	_workStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1211     	CLRR	_workStep
                                    1- 1212     	.line	453, "main.c"; 	AWUCON = 0x60;
     0007 2160                      1- 1213     	MOVIA	0x60
     0008 00rr                      1- 1214     	MOVAR	_AWUCON
                                    1- 1215     	.line	454, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0009 210B                      1- 1216     	MOVIA	0x0b
     000A 00rr                      1- 1217     	MOVAR	_INTE
                                    1- 1218     	.line	455, "main.c"; 	PCON =  C_LVR_En;	
     000B 2108                      1- 1219     	MOVIA	0x08
     000C 00rr                      1- 1220     	MOVAR	_PCON
                                    1- 1221     	.line	456, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000D 02rr                      1- 1222     	CLRR	_INTF
                                    1- 1223     	.line	457, "main.c"; 	CLRWDT();
     000E 0002                      1- 1224     	clrwdt
                                    1- 1225     	.line	458, "main.c"; 	ENI();
     000F 0004                      1- 1226     	ENI
                                    1- 1227     	.line	459, "main.c"; 	SLEEP();
     0010 0001                      1- 1228     	sleep
                                    1- 1229     	.line	460, "main.c"; 	AWUCON = 0x00;
     0011 02rr                      1- 1230     	CLRR	_AWUCON
                                    1- 1231     	.line	461, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0012 2101                      1- 1232     	MOVIA	0x01
     0013 00rr                      1- 1233     	MOVAR	_INTE
                                    1- 1234     	.line	462, "main.c"; 	INTF = 0;
     0014 02rr                      1- 1235     	CLRR	_INTF
                                    1- 1236     	.line	464, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0015 21A8                      1- 1237     	MOVIA	0xa8
     0016 00rr                      1- 1238     	MOVAR	_PCON
                                    1- 1239     	.line	466, "main.c"; 	}
                                    1- 1240     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 1241     ; exit point of _gotoSleep
                                    1- 1243     ;***
                                    1- 1244     ;  pBlock Stats: dbName = C
                                    1- 1245     ;***
                                    1- 1246     ;has an exit
                                    1- 1247     ;functions called:
                                    1- 1248     ;   _keyRead
                                    1- 1249     ;   _pwmInit
                                    1- 1250     ;   _pwmStop
                                    1- 1251     ;   _LEDHOFF
                                    1- 1252     ;   _LEDLOFF
                                    1- 1253     ;   _pwmInit
                                    1- 1254     ;   _keyRead
                                    1- 1255     ;   _pwmInit
                                    1- 1256     ;   _pwmStop
                                    1- 1257     ;   _LEDHOFF
                                    1- 1258     ;   _LEDLOFF
                                    1- 1259     ;   _pwmInit
                                    1- 1260     ;1 compiler assigned register :
                                    1- 1261     ;   r0x102A
                                    1- 1262     ;; Starting pCode block
                                    1- 1263     .segment "code"; module=main, function=_keyCtr
                                    1- 1265     ;local variable name mapping:
     0000                           1- 1267     _keyCtr:
                                    1- 1268     ; 2 exit points
                                    1- 1269     	.line	392, "main.c"; 	if(workStep > 0)
                                    1- 1270     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1271     	MOVR	_workStep,W
     0002 0D03                      1- 1272     	BTRSC	STATUS,2
     0003 3rrr                      1- 1273     	LGOTO	_00338_DS_
                                    1- 1274     	.line	394, "main.c"; 	PORTB |= 0x02;
     0004 18rr                      1- 1275     	BSR	_PORTB,1
     0005 3rrr                      1- 1276     	LGOTO	_00339_DS_
     0006                           1- 1277     _00338_DS_:
                                    1- 1278     	.line	398, "main.c"; 	PORTB &= 0xFD;
     0006 1Crr                      1- 1279     	BCR	_PORTB,1
     0007                           1- 1280     _00339_DS_:
                                    1- 1281     	.line	401, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 1282     	BANKSEL	_PORTA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 07rr                      1- 1283     	COMR	_PORTA,W
                                    1- 1284     	BANKSEL	r0x102A
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1285     	MOVAR	r0x102A
     000B 2140                      1- 1286     	MOVIA	0x40
     000C 10rr                      1- 1287     	ANDAR	r0x102A,F
     000D 01rr                      1- 1288     	MOVR	r0x102A,W
     000E 2rrr                      1- 1289     	LCALL	_keyRead
                                    1- 1290     	BANKSEL	r0x102A
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 1291     	MOVAR	r0x102A
                                    1- 1292     	.line	402, "main.c"; 	if(kclick == 1 && workStep > 0)
     0011 2401                      1- 1293     	XORIA	0x01
     0012 0903                      1- 1294     	BTRSS	STATUS,2
     0013 3rrr                      1- 1295     	LGOTO	_00359_DS_
                                    1- 1296     	BANKSEL	_workStep
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 1297     	MOVR	_workStep,W
     0016 0D03                      1- 1298     	BTRSC	STATUS,2
     0017 3rrr                      1- 1299     	LGOTO	_00359_DS_
                                    1- 1300     	.line	404, "main.c"; 	count500ms = 0;
                                    1- 1301     	BANKSEL	_count500ms
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1- 1302     	CLRR	_count500ms
                                    1- 1303     	.line	405, "main.c"; 	if(++workStep > 4)
                                    1- 1304     	BANKSEL	_workStep
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 05rr                      1- 1305     	INCR	_workStep,F
                                    1- 1306     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1307     ;;unsigned compare: left >= lit (0x5=5), size=1
     001C 2105                      1- 1308     	MOVIA	0x05
     001D 04rr                      1- 1309     	SUBAR	_workStep,W
     001E 0803                      1- 1310     	BTRSS	STATUS,0
     001F 3rrr                      1- 1311     	LGOTO	_00341_DS_
                                    1- 1312     	.line	406, "main.c"; 	workStep = 1;
     0020 2101                      1- 1313     	MOVIA	0x01
     0021 00rr                      1- 1314     	MOVAR	_workStep
     0022                           1- 1315     _00341_DS_:
                                    1- 1316     	.line	407, "main.c"; 	pwmInit();
     0022 2rrr                      1- 1317     	LCALL	_pwmInit
                                    1- 1318     	.line	408, "main.c"; 	duty = 1;
     0023 2101                      1- 1319     	MOVIA	0x01
                                    1- 1320     	BANKSEL	_duty
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 1321     	MOVAR	_duty
     0026 02rr                      1- 1322     	CLRR	(_duty + 1)
                                    1- 1323     	.line	409, "main.c"; 	fgCount = 0;
                                    1- 1324     	BANKSEL	_fgCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1- 1325     	CLRR	_fgCount
     0029 02rr                      1- 1326     	CLRR	(_fgCount + 1)
                                    1- 1327     	.line	410, "main.c"; 	workStartFlag = 0;
                                    1- 1328     	BANKSEL	_workStartFlag
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 02rr                      1- 1329     	CLRR	_workStartFlag
                                    1- 1330     	.line	411, "main.c"; 	if(workStep == 1)
                                    1- 1331     	BANKSEL	_workStep
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1- 1332     	MOVR	_workStep,W
     002E 2401                      1- 1333     	XORIA	0x01
     002F 0903                      1- 1334     	BTRSS	STATUS,2
     0030 3rrr                      1- 1335     	LGOTO	_00351_DS_
                                    1- 1336     	.line	412, "main.c"; 	maxDuty = 54;
     0031 2136                      1- 1337     	MOVIA	0x36
                                    1- 1338     	BANKSEL	_maxDuty
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1- 1339     	MOVAR	_maxDuty
     0034 3rrr                      1- 1340     	LGOTO	_00352_DS_
     0035                           1- 1341     _00351_DS_:
                                    1- 1342     	.line	413, "main.c"; 	else if(workStep == 2)
                                    1- 1343     	BANKSEL	_workStep
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1344     	MOVR	_workStep,W
     0037 2402                      1- 1345     	XORIA	0x02
     0038 0903                      1- 1346     	BTRSS	STATUS,2
     0039 3rrr                      1- 1347     	LGOTO	_00348_DS_
                                    1- 1348     	.line	414, "main.c"; 	maxDuty = 30;
     003A 211E                      1- 1349     	MOVIA	0x1e
                                    1- 1350     	BANKSEL	_maxDuty
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 00rr                      1- 1351     	MOVAR	_maxDuty
     003D 3rrr                      1- 1352     	LGOTO	_00352_DS_
     003E                           1- 1353     _00348_DS_:
                                    1- 1354     	.line	415, "main.c"; 	else if(workStep == 3)
                                    1- 1355     	BANKSEL	_workStep
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1- 1356     	MOVR	_workStep,W
     0040 2403                      1- 1357     	XORIA	0x03
     0041 0903                      1- 1358     	BTRSS	STATUS,2
     0042 3rrr                      1- 1359     	LGOTO	_00345_DS_
                                    1- 1360     	.line	416, "main.c"; 	maxDuty = 14;
     0043 210E                      1- 1361     	MOVIA	0x0e
                                    1- 1362     	BANKSEL	_maxDuty
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 00rr                      1- 1363     	MOVAR	_maxDuty
     0046 3rrr                      1- 1364     	LGOTO	_00352_DS_
     0047                           1- 1365     _00345_DS_:
                                    1- 1366     	.line	417, "main.c"; 	else if(workStep == 4)
                                    1- 1367     	BANKSEL	_workStep
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1- 1368     	MOVR	_workStep,W
     0049 2404                      1- 1369     	XORIA	0x04
     004A 0903                      1- 1370     	BTRSS	STATUS,2
     004B 3rrr                      1- 1371     	LGOTO	_00352_DS_
                                    1- 1372     	.line	418, "main.c"; 	maxDuty = 5;
     004C 2105                      1- 1373     	MOVIA	0x05
                                    1- 1374     	BANKSEL	_maxDuty
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1- 1375     	MOVAR	_maxDuty
     004F                           1- 1376     _00352_DS_:
                                    1- 1377     	.line	419, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1378     	BANKSEL	_maxDuty
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 1379     	MOVR	_maxDuty,W
     0051 00rr                      1- 1380     	SFUN	_PWM2DUTY
     0052 3rrr                      1- 1381     	LGOTO	_00362_DS_
     0053                           1- 1382     _00359_DS_:
                                    1- 1383     	.line	421, "main.c"; 	else if(kclick == 2)
                                    1- 1384     	BANKSEL	r0x102A
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 01rr                      1- 1385     	MOVR	r0x102A,W
     0055 2402                      1- 1386     	XORIA	0x02
     0056 0903                      1- 1387     	BTRSS	STATUS,2
     0057 3rrr                      1- 1388     	LGOTO	_00362_DS_
                                    1- 1389     	.line	423, "main.c"; 	if(workStep > 0)
                                    1- 1390     	BANKSEL	_workStep
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 01rr                      1- 1391     	MOVR	_workStep,W
     005A 0D03                      1- 1392     	BTRSC	STATUS,2
     005B 3rrr                      1- 1393     	LGOTO	_00354_DS_
                                    1- 1394     	.line	425, "main.c"; 	workStep = 0;
     005C 02rr                      1- 1395     	CLRR	_workStep
                                    1- 1396     	.line	426, "main.c"; 	pwmStop();
     005D 2rrr                      1- 1397     	LCALL	_pwmStop
                                    1- 1398     	.line	427, "main.c"; 	LEDHOFF();
     005E 2rrr                      1- 1399     	LCALL	_LEDHOFF
                                    1- 1400     	.line	428, "main.c"; 	LEDLOFF();
     005F 2rrr                      1- 1401     	LCALL	_LEDLOFF
                                    1- 1402     	.line	429, "main.c"; 	ledStep = 5;
     0060 2105                      1- 1403     	MOVIA	0x05
                                    1- 1404     	BANKSEL	_ledStep
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 00rr                      1- 1405     	MOVAR	_ledStep
                                    1- 1406     	.line	430, "main.c"; 	workStartFlag = 2;
     0063 2102                      1- 1407     	MOVIA	0x02
                                    1- 1408     	BANKSEL	_workStartFlag
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 00rr                      1- 1409     	MOVAR	_workStartFlag
     0066 3rrr                      1- 1410     	LGOTO	_00362_DS_
     0067                           1- 1411     _00354_DS_:
                                    1- 1412     	.line	434, "main.c"; 	workStartFlag = 1;
     0067 2101                      1- 1413     	MOVIA	0x01
                                    1- 1414     	BANKSEL	_workStartFlag
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 00rr                      1- 1415     	MOVAR	_workStartFlag
                                    1- 1416     	.line	435, "main.c"; 	maxDuty = 46;
     006A 212E                      1- 1417     	MOVIA	0x2e
                                    1- 1418     	BANKSEL	_maxDuty
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 00rr                      1- 1419     	MOVAR	_maxDuty
                                    1- 1420     	.line	436, "main.c"; 	workStep = 1;
     006D 2101                      1- 1421     	MOVIA	0x01
                                    1- 1422     	BANKSEL	_workStep
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 00rr                      1- 1423     	MOVAR	_workStep
                                    1- 1424     	.line	437, "main.c"; 	ledStep = 0;
                                    1- 1425     	BANKSEL	_ledStep
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 02rr                      1- 1426     	CLRR	_ledStep
                                    1- 1427     	.line	438, "main.c"; 	count500ms = 0;
                                    1- 1428     	BANKSEL	_count500ms
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 02rr                      1- 1429     	CLRR	_count500ms
                                    1- 1430     	.line	439, "main.c"; 	pwmInit();
     0074 2rrr                      1- 1431     	LCALL	_pwmInit
                                    1- 1432     	.line	440, "main.c"; 	duty = 1;
     0075 2101                      1- 1433     	MOVIA	0x01
                                    1- 1434     	BANKSEL	_duty
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 00rr                      1- 1435     	MOVAR	_duty
     0078 02rr                      1- 1436     	CLRR	(_duty + 1)
                                    1- 1437     	.line	441, "main.c"; 	fgCount = 0;
                                    1- 1438     	BANKSEL	_fgCount
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 02rr                      1- 1439     	CLRR	_fgCount
     007B 02rr                      1- 1440     	CLRR	(_fgCount + 1)
     007C                           1- 1441     _00362_DS_:
                                    1- 1442     	.line	445, "main.c"; 	}
                                    1- 1443     	RETURN	
     007C 0010                      3-   26 m1      ret
                                    1- 1444     ; exit point of _keyCtr
                                    1- 1446     ;***
                                    1- 1447     ;  pBlock Stats: dbName = C
                                    1- 1448     ;***
                                    1- 1449     ;functions called:
                                    1- 1450     ;   _pwmInit
                                    1- 1451     ;   _pwmInit
                                    1- 1452     ;; Starting pCode block
                                    1- 1453     .segment "code"; module=main, function=_ledCtr
     0000                           1- 1455     _ledCtr:
                                    1- 1456     ; 0 exit points
                                    1- 1457     	.line	361, "main.c"; 	if(workStartFlag == 1)
                                    1- 1458     	BANKSEL	_workStartFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1459     	MOVR	_workStartFlag,W
     0002 2401                      1- 1460     	XORIA	0x01
     0003 0903                      1- 1461     	BTRSS	STATUS,2
     0004 3rrr                      1- 1462     	LGOTO	_00330_DS_
                                    1- 1463     	.line	364, "main.c"; 	if(++ledStep > 4)
                                    1- 1464     	BANKSEL	_ledStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1465     	INCR	_ledStep,F
                                    1- 1466     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1467     ;;unsigned compare: left >= lit (0x5=5), size=1
     0007 2105                      1- 1468     	MOVIA	0x05
     0008 04rr                      1- 1469     	SUBAR	_ledStep,W
     0009 0803                      1- 1470     	BTRSS	STATUS,0
     000A 3rrr                      1- 1471     	LGOTO	_00332_DS_
                                    1- 1472     	.line	366, "main.c"; 	ledStep = workStep;
                                    1- 1473     	BANKSEL	_workStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1474     	MOVR	_workStep,W
                                    1- 1475     	BANKSEL	_ledStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1476     	MOVAR	_ledStep
                                    1- 1477     	.line	367, "main.c"; 	workStartFlag = 3;
     000F 2103                      1- 1478     	MOVIA	0x03
                                    1- 1479     	BANKSEL	_workStartFlag
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1480     	MOVAR	_workStartFlag
     0012 3rrr                      1- 1481     	LGOTO	_00332_DS_
     0013                           1- 1482     _00330_DS_:
                                    1- 1483     	.line	371, "main.c"; 	else if(workStartFlag == 2)
                                    1- 1484     	BANKSEL	_workStartFlag
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1485     	MOVR	_workStartFlag,W
     0015 2402                      1- 1486     	XORIA	0x02
     0016 0903                      1- 1487     	BTRSS	STATUS,2
     0017 3rrr                      1- 1488     	LGOTO	_00327_DS_
                                    1- 1489     	.line	373, "main.c"; 	if(ledStep > 0)
                                    1- 1490     	BANKSEL	_ledStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1491     	MOVR	_ledStep,W
     001A 0D03                      1- 1492     	BTRSC	STATUS,2
     001B 3rrr                      1- 1493     	LGOTO	_00332_DS_
                                    1- 1494     	.line	375, "main.c"; 	ledStep--;
     001C 17rr                      1- 1495     	DECRSZ	_ledStep,F
                                    1- 1496     	.line	376, "main.c"; 	if(ledStep == 0)
     001D 3rrr                      1- 1497     	LGOTO	_00332_DS_
                                    1- 1498     	.line	377, "main.c"; 	workStartFlag = 0;
                                    1- 1499     	BANKSEL	_workStartFlag
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 02rr                      1- 1500     	CLRR	_workStartFlag
     0020 3rrr                      1- 1501     	LGOTO	_00332_DS_
     0021                           1- 1502     _00327_DS_:
                                    1- 1503     	.line	382, "main.c"; 	ledStep = workStep;
                                    1- 1504     	BANKSEL	_workStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1505     	MOVR	_workStep,W
                                    1- 1506     	BANKSEL	_ledStep
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1507     	MOVAR	_ledStep
                                    1- 1508     	.line	383, "main.c"; 	if(workStep)
                                    1- 1509     	BANKSEL	_workStep
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 1510     	MOVR	_workStep,W
     0027 0903                      1- 1511     	BTRSS	STATUS,2
                                    1- 1512     	.line	384, "main.c"; 	pwmInit();
     0028 2rrr                      1- 1513     	LCALL	_pwmInit
     0029                           1- 1514     _00332_DS_:
                                    1- 1515     	.line	387, "main.c"; 	}
                                    1- 1516     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1- 1518     ;***
                                    1- 1519     ;  pBlock Stats: dbName = C
                                    1- 1520     ;***
                                    1- 1521     ;has an exit
                                    1- 1522     ;functions called:
                                    1- 1523     ;   _LEDLON
                                    1- 1524     ;   _LEDHON
                                    1- 1525     ;   _LEDHOFF
                                    1- 1526     ;   _LEDLOFF
                                    1- 1527     ;   _LEDHON
                                    1- 1528     ;   _LEDHOFF
                                    1- 1529     ;   _LEDHON
                                    1- 1530     ;   _LEDLOFF
                                    1- 1531     ;   _LEDHOFF
                                    1- 1532     ;   _LEDLON
                                    1- 1533     ;   _LEDHON
                                    1- 1534     ;   _LEDHOFF
                                    1- 1535     ;   _LEDLOFF
                                    1- 1536     ;   _LEDHON
                                    1- 1537     ;   _LEDHOFF
                                    1- 1538     ;   _LEDHON
                                    1- 1539     ;   _LEDLOFF
                                    1- 1540     ;   _LEDHOFF
                                    1- 1541     ;; Starting pCode block
                                    1- 1542     .segment "code"; module=main, function=_LedCtr2
     0000                           1- 1544     _LedCtr2:
                                    1- 1545     ; 2 exit points
                                    1- 1546     	.line	316, "main.c"; 	if(++startStep > 6)
                                    1- 1547     	BANKSEL	_startStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1548     	INCR	_startStep,F
                                    1- 1549     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1550     ;;unsigned compare: left >= lit (0x7=7), size=1
     0002 2107                      1- 1551     	MOVIA	0x07
     0003 04rr                      1- 1552     	SUBAR	_startStep,W
     0004 0803                      1- 1553     	BTRSS	STATUS,0
     0005 3rrr                      1- 1554     	LGOTO	_00290_DS_
                                    1- 1555     	.line	318, "main.c"; 	workStartFlag = 0;
                                    1- 1556     	BANKSEL	_workStartFlag
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 1557     	CLRR	_workStartFlag
                                    1- 1558     	.line	319, "main.c"; 	startStep = 0;
                                    1- 1559     	BANKSEL	_startStep
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 1560     	CLRR	_startStep
                                    1- 1561     	.line	320, "main.c"; 	ledStep = workStep;
                                    1- 1562     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1563     	MOVR	_workStep,W
                                    1- 1564     	BANKSEL	_ledStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1565     	MOVAR	_ledStep
     000E                           1- 1566     _00290_DS_:
                                    1- 1567     	.line	324, "main.c"; 	if(startStep == 1)
                                    1- 1568     	BANKSEL	_startStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1569     	MOVR	_startStep,W
     0010 2401                      1- 1570     	XORIA	0x01
     0011 0903                      1- 1571     	BTRSS	STATUS,2
     0012 3rrr                      1- 1572     	LGOTO	_00311_DS_
                                    1- 1573     	.line	326, "main.c"; 	if(pwStep == 1)
                                    1- 1574     	BANKSEL	_pwStep
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1575     	MOVR	_pwStep,W
     0015 2401                      1- 1576     	XORIA	0x01
     0016 0903                      1- 1577     	BTRSS	STATUS,2
     0017 3rrr                      1- 1578     	LGOTO	_00294_DS_
                                    1- 1579     	.line	328, "main.c"; 	LEDLON();
     0018 2rrr                      1- 1580     	LCALL	_LEDLON
     0019 3rrr                      1- 1581     	LGOTO	_00313_DS_
                                    1- 1582     ;;unsigned compare: left < lit (0x2=2), size=1
     001A                           1- 1583     _00294_DS_:
                                    1- 1584     	.line	330, "main.c"; 	else if(pwStep >= 2)
     001A 2102                      1- 1585     	MOVIA	0x02
                                    1- 1586     	BANKSEL	_pwStep
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 04rr                      1- 1587     	SUBAR	_pwStep,W
     001D 0803                      1- 1588     	BTRSS	STATUS,0
     001E 3rrr                      1- 1589     	LGOTO	_00313_DS_
                                    1- 1590     	.line	332, "main.c"; 	LEDHON();
     001F 2rrr                      1- 1591     	LCALL	_LEDHON
     0020 3rrr                      1- 1592     	LGOTO	_00313_DS_
     0021                           1- 1593     _00311_DS_:
                                    1- 1594     	.line	335, "main.c"; 	else if(startStep == 2)
                                    1- 1595     	BANKSEL	_startStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1596     	MOVR	_startStep,W
     0023 2402                      1- 1597     	XORIA	0x02
     0024 0903                      1- 1598     	BTRSS	STATUS,2
     0025 3rrr                      1- 1599     	LGOTO	_00308_DS_
                                    1- 1600     	.line	337, "main.c"; 	LEDHOFF();
     0026 2rrr                      1- 1601     	LCALL	_LEDHOFF
                                    1- 1602     	.line	338, "main.c"; 	LEDLOFF();
     0027 2rrr                      1- 1603     	LCALL	_LEDLOFF
     0028 3rrr                      1- 1604     	LGOTO	_00313_DS_
     0029                           1- 1605     _00308_DS_:
                                    1- 1606     	.line	340, "main.c"; 	else if(startStep == 3 && pwStep >= 3)
                                    1- 1607     	BANKSEL	_startStep
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 1608     	MOVR	_startStep,W
     002B 2403                      1- 1609     	XORIA	0x03
     002C 0903                      1- 1610     	BTRSS	STATUS,2
     002D 3rrr                      1- 1611     	LGOTO	_00304_DS_
                                    1- 1612     ;;unsigned compare: left < lit (0x3=3), size=1
     002E 2103                      1- 1613     	MOVIA	0x03
                                    1- 1614     	BANKSEL	_pwStep
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 04rr                      1- 1615     	SUBAR	_pwStep,W
     0031 0803                      1- 1616     	BTRSS	STATUS,0
     0032 3rrr                      1- 1617     	LGOTO	_00304_DS_
                                    1- 1618     	.line	342, "main.c"; 	LEDHON();
     0033 2rrr                      1- 1619     	LCALL	_LEDHON
     0034 3rrr                      1- 1620     	LGOTO	_00313_DS_
     0035                           1- 1621     _00304_DS_:
                                    1- 1622     	.line	344, "main.c"; 	else if(startStep == 4)
                                    1- 1623     	BANKSEL	_startStep
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1624     	MOVR	_startStep,W
     0037 2404                      1- 1625     	XORIA	0x04
     0038 0903                      1- 1626     	BTRSS	STATUS,2
     0039 3rrr                      1- 1627     	LGOTO	_00301_DS_
                                    1- 1628     	.line	346, "main.c"; 	LEDHOFF();
     003A 2rrr                      1- 1629     	LCALL	_LEDHOFF
     003B 3rrr                      1- 1630     	LGOTO	_00313_DS_
     003C                           1- 1631     _00301_DS_:
                                    1- 1632     	.line	348, "main.c"; 	else if(startStep == 5 && pwStep >= 4)
                                    1- 1633     	BANKSEL	_startStep
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 1634     	MOVR	_startStep,W
     003E 2405                      1- 1635     	XORIA	0x05
     003F 0903                      1- 1636     	BTRSS	STATUS,2
     0040 3rrr                      1- 1637     	LGOTO	_00297_DS_
                                    1- 1638     ;;unsigned compare: left < lit (0x4=4), size=1
     0041 2104                      1- 1639     	MOVIA	0x04
                                    1- 1640     	BANKSEL	_pwStep
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 04rr                      1- 1641     	SUBAR	_pwStep,W
     0044 0803                      1- 1642     	BTRSS	STATUS,0
     0045 3rrr                      1- 1643     	LGOTO	_00297_DS_
                                    1- 1644     	.line	350, "main.c"; 	LEDHON();
     0046 2rrr                      1- 1645     	LCALL	_LEDHON
     0047 3rrr                      1- 1646     	LGOTO	_00313_DS_
     0048                           1- 1647     _00297_DS_:
                                    1- 1648     	.line	354, "main.c"; 	LEDLOFF();
     0048 2rrr                      1- 1649     	LCALL	_LEDLOFF
                                    1- 1650     	.line	355, "main.c"; 	LEDHOFF();
     0049 2rrr                      1- 1651     	LCALL	_LEDHOFF
     004A                           1- 1652     _00313_DS_:
                                    1- 1653     	.line	357, "main.c"; 	}
                                    1- 1654     	RETURN	
     004A 0010                      3-   26 m1      ret
                                    1- 1655     ; exit point of _LedCtr2
                                    1- 1657     ;***
                                    1- 1658     ;  pBlock Stats: dbName = C
                                    1- 1659     ;***
                                    1- 1660     ;has an exit
                                    1- 1661     ;2 compiler assigned registers:
                                    1- 1662     ;   r0x102B
                                    1- 1663     ;   r0x102C
                                    1- 1664     ;; Starting pCode block
                                    1- 1665     .segment "code"; module=main, function=_workCtr
     0000                           1- 1667     _workCtr:
                                    1- 1668     ; 2 exit points
                                    1- 1669     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1670     ;;unsigned compare: left >= lit (0x47=71), size=2
                                    1- 1671     	.line	294, "main.c"; 	if(fgPRD > 70)
     0000 2100                      1- 1672     	MOVIA	0x00
                                    1- 1673     	BANKSEL	_fgPRD
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1674     	SUBAR	(_fgPRD + 1),W
     0003 0903                      1- 1675     	BTRSS	STATUS,2
     0004 3rrr                      1- 1676     	LGOTO	_00282_DS_
     0005 2147                      1- 1677     	MOVIA	0x47
     0006 04rr                      1- 1678     	SUBAR	_fgPRD,W
     0007                           1- 1679     _00282_DS_:
     0007 0803                      1- 1680     	BTRSS	STATUS,0
     0008 3rrr                      1- 1681     	LGOTO	_00269_DS_
                                    1- 1682     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1683     ;;unsigned compare: left >= lit (0x3=3), size=2
                                    1- 1684     	.line	297, "main.c"; 	if(duty > 2)
     0009 2100                      1- 1685     	MOVIA	0x00
                                    1- 1686     	BANKSEL	_duty
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 04rr                      1- 1687     	SUBAR	(_duty + 1),W
     000C 0903                      1- 1688     	BTRSS	STATUS,2
     000D 3rrr                      1- 1689     	LGOTO	_00283_DS_
     000E 2103                      1- 1690     	MOVIA	0x03
     000F 04rr                      1- 1691     	SUBAR	_duty,W
     0010                           1- 1692     _00283_DS_:
     0010 0803                      1- 1693     	BTRSS	STATUS,0
     0011 3rrr                      1- 1694     	LGOTO	_00271_DS_
                                    1- 1695     	.line	299, "main.c"; 	--duty;
     0012 21FF                      1- 1696     	MOVIA	0xff
                                    1- 1697     	BANKSEL	_duty
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 03rr                      1- 1698     	ADDAR	_duty,F
     0015 0803                      1- 1699     	BTRSS	STATUS,0
     0016 06rr                      1- 1700     	DECR	(_duty + 1),F
                                    1- 1701     	.line	300, "main.c"; 	PWM2DUTY = duty;
     0017 01rr                      1- 1702     	MOVR	_duty,W
                                    1- 1703     	BANKSEL	r0x102B
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 1704     	MOVAR	r0x102B
     001A 00rr                      1- 1705     	SFUN	_PWM2DUTY
     001B 3rrr                      1- 1706     	LGOTO	_00271_DS_
     001C                           1- 1707     _00269_DS_:
                                    1- 1708     	.line	305, "main.c"; 	if(++duty >= maxDuty)
                                    1- 1709     	BANKSEL	_duty
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 05rr                      1- 1710     	INCR	_duty,F
     001E 0D03                      1- 1711     	BTRSC	STATUS,2
     001F 05rr                      1- 1712     	INCR	(_duty + 1),F
                                    1- 1713     	BANKSEL	_maxDuty
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1714     	MOVR	_maxDuty,W
                                    1- 1715     	BANKSEL	r0x102B
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 00rr                      1- 1716     	MOVAR	r0x102B
                                    1- 1717     	BANKSEL	r0x102C
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1- 1718     	CLRR	r0x102C
     0026 2100                      1- 1719     	MOVIA	0x00
                                    1- 1720     	BANKSEL	_duty
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 04rr                      1- 1721     	SUBAR	(_duty + 1),W
     0029 0903                      1- 1722     	BTRSS	STATUS,2
     002A 3rrr                      1- 1723     	LGOTO	_00284_DS_
                                    1- 1724     	BANKSEL	r0x102B
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 1725     	MOVR	r0x102B,W
                                    1- 1726     	BANKSEL	_duty
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 04rr                      1- 1727     	SUBAR	_duty,W
     002F                           1- 1728     _00284_DS_:
     002F 0803                      1- 1729     	BTRSS	STATUS,0
     0030 3rrr                      1- 1730     	LGOTO	_00267_DS_
                                    1- 1731     	.line	307, "main.c"; 	duty = maxDuty;
                                    1- 1732     	BANKSEL	r0x102B
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1- 1733     	MOVR	r0x102B,W
                                    1- 1734     	BANKSEL	_duty
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1- 1735     	MOVAR	_duty
                                    1- 1736     	BANKSEL	r0x102C
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1737     	MOVR	r0x102C,W
                                    1- 1738     	BANKSEL	_duty
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 1739     	MOVAR	(_duty + 1)
     0039                           1- 1740     _00267_DS_:
                                    1- 1741     	.line	309, "main.c"; 	PWM2DUTY = duty;
                                    1- 1742     	BANKSEL	_duty
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 1743     	MOVR	_duty,W
                                    1- 1744     	BANKSEL	r0x102B
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 00rr                      1- 1745     	MOVAR	r0x102B
     003D 00rr                      1- 1746     	SFUN	_PWM2DUTY
     003E                           1- 1747     _00271_DS_:
                                    1- 1748     	.line	311, "main.c"; 	}
                                    1- 1749     	RETURN	
     003E 0010                      3-   26 m1      ret
                                    1- 1750     ; exit point of _workCtr
                                    1- 1752     ;***
                                    1- 1753     ;  pBlock Stats: dbName = C
                                    1- 1754     ;***
                                    1- 1755     ;has an exit
                                    1- 1756     ;; Starting pCode block
                                    1- 1757     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1759     _pwmStop:
                                    1- 1760     ; 2 exit points
                                    1- 1761     	.line	288, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 1762     	CLRA	
     0001 00rr                      1- 1763     	SFUN	_T2CR1
                                    1- 1764     	.line	289, "main.c"; 	}
                                    1- 1765     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1766     ; exit point of _pwmStop
                                    1- 1768     ;***
                                    1- 1769     ;  pBlock Stats: dbName = C
                                    1- 1770     ;***
                                    1- 1771     ;has an exit
                                    1- 1772     ;1 compiler assigned register :
                                    1- 1773     ;   r0x1029
                                    1- 1774     ;; Starting pCode block
                                    1- 1775     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1777     _pwmInit:
                                    1- 1778     ; 2 exit points
                                    1- 1779     	.line	276, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1780     	SFUNR	_T2CR1
                                    1- 1781     	BANKSEL	r0x1029
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1782     	MOVAR	r0x1029
     0003 0Frr                      1- 1783     	BTRSC	r0x1029,7
                                    1- 1784     	.line	277, "main.c"; 	return;
     0004 3rrr                      1- 1785     	LGOTO	_00255_DS_
                                    1- 1786     	.line	278, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1787     	CLRR	_TMRH
                                    1- 1788     	.line	279, "main.c"; 	TMR2 = 128;							//频率为110K
     0006 2180                      1- 1789     	MOVIA	0x80
     0007 00rr                      1- 1790     	SFUN	_TMR2
                                    1- 1791     	.line	280, "main.c"; 	PWM2DUTY = 0x08;				// 		
     0008 2108                      1- 1792     	MOVIA	0x08
     0009 00rr                      1- 1793     	SFUN	_PWM2DUTY
                                    1- 1794     	.line	282, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     000A 0200                      1- 1795     	CLRA	
     000B 00rr                      1- 1796     	SFUN	_T2CR2
                                    1- 1797     	.line	283, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 1798     	MOVIA	0x83
     000D 00rr                      1- 1799     	SFUN	_T2CR1
     000E                           1- 1800     _00255_DS_:
                                    1- 1801     	.line	284, "main.c"; 	}
                                    1- 1802     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1803     ; exit point of _pwmInit
                                    1- 1805     ;***
                                    1- 1806     ;  pBlock Stats: dbName = C
                                    1- 1807     ;***
                                    1- 1808     ;has an exit
                                    1- 1809     ;functions called:
                                    1- 1810     ;   _delay
                                    1- 1811     ;   _LedInput
                                    1- 1812     ;   _delay
                                    1- 1813     ;   _LedInput
                                    1- 1814     ;1 compiler assigned register :
                                    1- 1815     ;   r0x102D
                                    1- 1816     ;; Starting pCode block
                                    1- 1817     .segment "code"; module=main, function=_LED4ON
     0000                           1- 1819     _LED4ON:
                                    1- 1820     ; 2 exit points
                                    1- 1821     	.line	265, "main.c"; 	PB3P53OUT();
     0000 001r                      1- 1822     	IOSTR	_IOSTB
                                    1- 1823     	BANKSEL	r0x102D
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1824     	MOVAR	r0x102D
     0003 1Drr                      1- 1825     	BCR	r0x102D,3
     0004 01rr                      1- 1826     	MOVR	r0x102D,W
     0005 000r                      1- 1827     	IOST	_IOSTB
                                    1- 1828     	.line	266, "main.c"; 	PA7P02OUT();
     0006 001r                      1- 1829     	IOSTR	_IOSTA
     0007 00rr                      1- 1830     	MOVAR	r0x102D
     0008 1Frr                      1- 1831     	BCR	r0x102D,7
     0009 01rr                      1- 1832     	MOVR	r0x102D,W
     000A 000r                      1- 1833     	IOST	_IOSTA
                                    1- 1834     	.line	267, "main.c"; 	PB3P53ON();
     000B 19rr                      1- 1835     	BSR	_PORTB,3
                                    1- 1836     	.line	268, "main.c"; 	PA7P02OFF();
                                    1- 1837     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Frr                      1- 1838     	BCR	_PORTA,7
                                    1- 1839     	.line	269, "main.c"; 	delay(100);
     000E 2164                      1- 1840     	MOVIA	0x64
     000F 2rrr                      1- 1841     	LCALL	_delay
                                    1- 1842     	.line	270, "main.c"; 	LedInput();
     0010 2rrr                      1- 1843     	LCALL	_LedInput
                                    1- 1844     	.line	271, "main.c"; 	}
                                    1- 1845     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1846     ; exit point of _LED4ON
                                    1- 1848     ;***
                                    1- 1849     ;  pBlock Stats: dbName = C
                                    1- 1850     ;***
                                    1- 1851     ;has an exit
                                    1- 1852     ;functions called:
                                    1- 1853     ;   _delay
                                    1- 1854     ;   _LedInput
                                    1- 1855     ;   _delay
                                    1- 1856     ;   _LedInput
                                    1- 1857     ;1 compiler assigned register :
                                    1- 1858     ;   r0x102E
                                    1- 1859     ;; Starting pCode block
                                    1- 1860     .segment "code"; module=main, function=_LED3ON
     0000                           1- 1862     _LED3ON:
                                    1- 1863     ; 2 exit points
                                    1- 1864     	.line	255, "main.c"; 	PA7P02OUT();
     0000 001r                      1- 1865     	IOSTR	_IOSTA
                                    1- 1866     	BANKSEL	r0x102E
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1867     	MOVAR	r0x102E
     0003 1Frr                      1- 1868     	BCR	r0x102E,7
     0004 01rr                      1- 1869     	MOVR	r0x102E,W
     0005 000r                      1- 1870     	IOST	_IOSTA
                                    1- 1871     	.line	256, "main.c"; 	PA0P40OUT();
     0006 001r                      1- 1872     	IOSTR	_IOSTA
     0007 00rr                      1- 1873     	MOVAR	r0x102E
     0008 1Crr                      1- 1874     	BCR	r0x102E,0
     0009 01rr                      1- 1875     	MOVR	r0x102E,W
     000A 000r                      1- 1876     	IOST	_IOSTA
                                    1- 1877     	.line	257, "main.c"; 	PA7P02OFF();
                                    1- 1878     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 1Frr                      1- 1879     	BCR	_PORTA,7
                                    1- 1880     	.line	258, "main.c"; 	PA0P40ON();
     000D 18rr                      1- 1881     	BSR	_PORTA,0
                                    1- 1882     	.line	259, "main.c"; 	delay(100);
     000E 2164                      1- 1883     	MOVIA	0x64
     000F 2rrr                      1- 1884     	LCALL	_delay
                                    1- 1885     	.line	260, "main.c"; 	LedInput();
     0010 2rrr                      1- 1886     	LCALL	_LedInput
                                    1- 1887     	.line	261, "main.c"; 	}
                                    1- 1888     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1889     ; exit point of _LED3ON
                                    1- 1891     ;***
                                    1- 1892     ;  pBlock Stats: dbName = C
                                    1- 1893     ;***
                                    1- 1894     ;has an exit
                                    1- 1895     ;functions called:
                                    1- 1896     ;   _delay
                                    1- 1897     ;   _LedInput
                                    1- 1898     ;   _delay
                                    1- 1899     ;   _LedInput
                                    1- 1900     ;1 compiler assigned register :
                                    1- 1901     ;   r0x102F
                                    1- 1902     ;; Starting pCode block
                                    1- 1903     .segment "code"; module=main, function=_LED2ON
     0000                           1- 1905     _LED2ON:
                                    1- 1906     ; 2 exit points
                                    1- 1907     	.line	245, "main.c"; 	PA7P02OUT();
     0000 001r                      1- 1908     	IOSTR	_IOSTA
                                    1- 1909     	BANKSEL	r0x102F
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1910     	MOVAR	r0x102F
     0003 1Frr                      1- 1911     	BCR	r0x102F,7
     0004 01rr                      1- 1912     	MOVR	r0x102F,W
     0005 000r                      1- 1913     	IOST	_IOSTA
                                    1- 1914     	.line	246, "main.c"; 	PA0P40OUT();
     0006 001r                      1- 1915     	IOSTR	_IOSTA
     0007 00rr                      1- 1916     	MOVAR	r0x102F
     0008 1Crr                      1- 1917     	BCR	r0x102F,0
     0009 01rr                      1- 1918     	MOVR	r0x102F,W
     000A 000r                      1- 1919     	IOST	_IOSTA
                                    1- 1920     	.line	247, "main.c"; 	PA7P02ON();
                                    1- 1921     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 1Brr                      1- 1922     	BSR	_PORTA,7
                                    1- 1923     	.line	248, "main.c"; 	PA0P40OFF();
     000D 1Crr                      1- 1924     	BCR	_PORTA,0
                                    1- 1925     	.line	249, "main.c"; 	delay(100);
     000E 2164                      1- 1926     	MOVIA	0x64
     000F 2rrr                      1- 1927     	LCALL	_delay
                                    1- 1928     	.line	250, "main.c"; 	LedInput();
     0010 2rrr                      1- 1929     	LCALL	_LedInput
                                    1- 1930     	.line	251, "main.c"; 	}
                                    1- 1931     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1932     ; exit point of _LED2ON
                                    1- 1934     ;***
                                    1- 1935     ;  pBlock Stats: dbName = C
                                    1- 1936     ;***
                                    1- 1937     ;has an exit
                                    1- 1938     ;functions called:
                                    1- 1939     ;   _delay
                                    1- 1940     ;   _LedInput
                                    1- 1941     ;   _delay
                                    1- 1942     ;   _LedInput
                                    1- 1943     ;1 compiler assigned register :
                                    1- 1944     ;   r0x1030
                                    1- 1945     ;; Starting pCode block
                                    1- 1946     .segment "code"; module=main, function=_LED1ON
     0000                           1- 1948     _LED1ON:
                                    1- 1949     ; 2 exit points
                                    1- 1950     	.line	235, "main.c"; 	PB3P53OUT();
     0000 001r                      1- 1951     	IOSTR	_IOSTB
                                    1- 1952     	BANKSEL	r0x1030
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1953     	MOVAR	r0x1030
     0003 1Drr                      1- 1954     	BCR	r0x1030,3
     0004 01rr                      1- 1955     	MOVR	r0x1030,W
     0005 000r                      1- 1956     	IOST	_IOSTB
                                    1- 1957     	.line	236, "main.c"; 	PA0P40OUT();
     0006 001r                      1- 1958     	IOSTR	_IOSTA
     0007 00rr                      1- 1959     	MOVAR	r0x1030
     0008 1Crr                      1- 1960     	BCR	r0x1030,0
     0009 01rr                      1- 1961     	MOVR	r0x1030,W
     000A 000r                      1- 1962     	IOST	_IOSTA
                                    1- 1963     	.line	237, "main.c"; 	PB3P53ON();
     000B 19rr                      1- 1964     	BSR	_PORTB,3
                                    1- 1965     	.line	238, "main.c"; 	PA0P40OFF();
                                    1- 1966     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1- 1967     	BCR	_PORTA,0
                                    1- 1968     	.line	239, "main.c"; 	delay(100);
     000E 2164                      1- 1969     	MOVIA	0x64
     000F 2rrr                      1- 1970     	LCALL	_delay
                                    1- 1971     	.line	240, "main.c"; 	LedInput();
     0010 2rrr                      1- 1972     	LCALL	_LedInput
                                    1- 1973     	.line	241, "main.c"; 	}
                                    1- 1974     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1975     ; exit point of _LED1ON
                                    1- 1977     ;***
                                    1- 1978     ;  pBlock Stats: dbName = C
                                    1- 1979     ;***
                                    1- 1980     ;has an exit
                                    1- 1981     ;1 compiler assigned register :
                                    1- 1982     ;   r0x1027
                                    1- 1983     ;; Starting pCode block
                                    1- 1984     .segment "code"; module=main, function=_LedInput
     0000                           1- 1986     _LedInput:
                                    1- 1987     ; 2 exit points
                                    1- 1988     	.line	227, "main.c"; 	IOSTA |= 0x81;
     0000 001r                      1- 1989     	IOSTR	_IOSTA
                                    1- 1990     	BANKSEL	r0x1027
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1991     	MOVAR	r0x1027
     0003 2181                      1- 1992     	MOVIA	0x81
     0004 11rr                      1- 1993     	IORAR	r0x1027,F
     0005 01rr                      1- 1994     	MOVR	r0x1027,W
     0006 000r                      1- 1995     	IOST	_IOSTA
                                    1- 1996     	.line	228, "main.c"; 	IOSTB |= 0x08;
     0007 001r                      1- 1997     	IOSTR	_IOSTB
     0008 00rr                      1- 1998     	MOVAR	r0x1027
     0009 19rr                      1- 1999     	BSR	r0x1027,3
     000A 01rr                      1- 2000     	MOVR	r0x1027,W
     000B 000r                      1- 2001     	IOST	_IOSTB
                                    1- 2002     	.line	229, "main.c"; 	PORTA &= 0x7E;
     000C 217E                      1- 2003     	MOVIA	0x7e
                                    1- 2004     	BANKSEL	_PORTA
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 10rr                      1- 2005     	ANDAR	_PORTA,F
                                    1- 2006     	.line	230, "main.c"; 	PORTB &= 0xF7;
     000F 1Drr                      1- 2007     	BCR	_PORTB,3
                                    1- 2008     	.line	231, "main.c"; 	}
                                    1- 2009     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 2010     ; exit point of _LedInput
                                    1- 2012     ;***
                                    1- 2013     ;  pBlock Stats: dbName = C
                                    1- 2014     ;***
                                    1- 2015     ;has an exit
                                    1- 2016     ;functions called:
                                    1- 2017     ;   _LedInput
                                    1- 2018     ;   _LedInput
                                    1- 2019     ;   _LED4ON
                                    1- 2020     ;   _LED3ON
                                    1- 2021     ;   _LED2ON
                                    1- 2022     ;   _LED1ON
                                    1- 2023     ;   _LedInput
                                    1- 2024     ;   _LedInput
                                    1- 2025     ;   _LED4ON
                                    1- 2026     ;   _LED3ON
                                    1- 2027     ;   _LED2ON
                                    1- 2028     ;   _LED1ON
                                    1- 2029     ;; Starting pCode block
                                    1- 2030     .segment "code"; module=main, function=_ledShow
     0000                           1- 2032     _ledShow:
                                    1- 2033     ; 2 exit points
                                    1- 2034     	.line	205, "main.c"; 	LedInput();
     0000 2rrr                      1- 2035     	LCALL	_LedInput
                                    1- 2036     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2037     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2038     	.line	206, "main.c"; 	switch(ledStep)
     0001 2105                      1- 2039     	MOVIA	0x05
                                    1- 2040     	BANKSEL	_ledStep
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 2041     	SUBAR	_ledStep,W
     0004 0C03                      1- 2042     	BTRSC	STATUS,0
     0005 3rrr                      1- 2043     	LGOTO	_00222_DS_
     0006 21rr                      1- 2044     	MOVIA	((_00228_DS_ >> 8) & 0xff)
     0007 008A                      1- 2045     	MOVAR	PCHBUF
     0008 01rr                      1- 2046     	MOVR	_ledStep,W
     0009 25rr                      1- 2047     	ADDIA	_00228_DS_
     000A 0C03                      1- 2048     	BTRSC	STATUS,0
     000B 058A                      1- 2049     	INCR	PCHBUF,F
     000C 0082                      1- 2050     	MOVAR	PCL
     000D                           1- 2051     _00228_DS_:
     000D 3rrr                      1- 2052     	LGOTO	_00216_DS_
     000E 3rrr                      1- 2053     	LGOTO	_00220_DS_
     000F 3rrr                      1- 2054     	LGOTO	_00219_DS_
     0010 3rrr                      1- 2055     	LGOTO	_00218_DS_
     0011 3rrr                      1- 2056     	LGOTO	_00217_DS_
     0012                           1- 2057     _00216_DS_:
                                    1- 2058     	.line	209, "main.c"; 	LedInput();
     0012 2rrr                      1- 2059     	LCALL	_LedInput
                                    1- 2060     	.line	210, "main.c"; 	break;
     0013 3rrr                      1- 2061     	LGOTO	_00222_DS_
     0014                           1- 2062     _00217_DS_:
                                    1- 2063     	.line	212, "main.c"; 	LED4ON();
     0014 2rrr                      1- 2064     	LCALL	_LED4ON
     0015                           1- 2065     _00218_DS_:
                                    1- 2066     	.line	214, "main.c"; 	LED3ON();
     0015 2rrr                      1- 2067     	LCALL	_LED3ON
     0016                           1- 2068     _00219_DS_:
                                    1- 2069     	.line	216, "main.c"; 	LED2ON();
     0016 2rrr                      1- 2070     	LCALL	_LED2ON
     0017                           1- 2071     _00220_DS_:
                                    1- 2072     	.line	218, "main.c"; 	LED1ON();
     0017 2rrr                      1- 2073     	LCALL	_LED1ON
     0018                           1- 2074     _00222_DS_:
                                    1- 2075     	.line	221, "main.c"; 	}
                                    1- 2076     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 2077     ; exit point of _ledShow
                                    1- 2079     ;***
                                    1- 2080     ;  pBlock Stats: dbName = C
                                    1- 2081     ;***
                                    1- 2082     ;has an exit
                                    1- 2083     ;; Starting pCode block
                                    1- 2084     .segment "code"; module=main, function=_initSys
     0000                           1- 2086     _initSys:
                                    1- 2087     ; 2 exit points
                                    1- 2088     	.line	178, "main.c"; 	DISI();
     0000 0013                      1- 2089     	DISI
                                    1- 2090     	.line	179, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input;
     0001 2170                      1- 2091     	MOVIA	0x70
     0002 000r                      1- 2092     	IOST	_IOSTA
                                    1- 2093     	.line	180, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1- 2094     	MOVIA	0x01
     0004 000r                      1- 2095     	IOST	_IOSTB
                                    1- 2096     	.line	181, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2097     	CLRR	_PORTB
                                    1- 2098     	.line	182, "main.c"; 	PORTA = 0x00;
                                    1- 2099     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 2100     	CLRR	_PORTA
                                    1- 2101     	.line	183, "main.c"; 	APHCON = 0x9F;
     0008 219F                      1- 2102     	MOVIA	0x9f
     0009 000r                      1- 2103     	IOST	_APHCON
                                    1- 2104     	.line	184, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 2105     	MOVIA	0xff
     000B 00rr                      1- 2106     	MOVAR	_BPHCON
                                    1- 2107     	.line	186, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2108     	MOVIA	0x01
     000D 00rr                      1- 2109     	MOVAR	_INTE
                                    1- 2110     	.line	188, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2111     	CLRA	
     000F 000r                      1- 2112     	IOST	_PCON1
                                    1- 2113     	.line	190, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2114     	MOVIA	0x37
     0011 00rr                      1- 2115     	MOVAR	_TMR0
                                    1- 2116     	.line	191, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0012 0200                      1- 2117     	CLRA	
     0013 0003                      1- 2118     	T0MD	
                                    1- 2119     	.line	193, "main.c"; 	PCON1 = C_TMR0_En;
     0014 2101                      1- 2120     	MOVIA	0x01
     0015 000r                      1- 2121     	IOST	_PCON1
                                    1- 2122     	.line	196, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0016 2188                      1- 2123     	MOVIA	0x88
     0017 00rr                      1- 2124     	MOVAR	_PCON
                                    1- 2125     	.line	199, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0018 2101                      1- 2126     	MOVIA	0x01
     0019 000r                      1- 2127     	IOST	_PCON1
                                    1- 2128     	.line	200, "main.c"; 	ENI();
     001A 0004                      1- 2129     	ENI
                                    1- 2130     	.line	201, "main.c"; 	}
                                    1- 2131     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1- 2132     ; exit point of _initSys
                                    1- 2134     ;***
                                    1- 2135     ;  pBlock Stats: dbName = C
                                    1- 2136     ;***
                                    1- 2137     ;has an exit
                                    1- 2138     ;; Starting pCode block
                                    1- 2139     .segment "code"; module=main, function=_fgCtr
     0000                           1- 2141     _fgCtr:
                                    1- 2142     ; 2 exit points
                                    1- 2143     	.line	161, "main.c"; 	if(PORTB & 0x01)
     0000 08rr                      1- 2144     	BTRSS	_PORTB,0
     0001 3rrr                      1- 2145     	LGOTO	_00205_DS_
                                    1- 2146     	.line	163, "main.c"; 	if(preFG == 0)
                                    1- 2147     	BANKSEL	_preFG
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 01rr                      1- 2148     	MOVR	_preFG,W
     0004 0903                      1- 2149     	BTRSS	STATUS,2
     0005 3rrr                      1- 2150     	LGOTO	_00203_DS_
                                    1- 2151     	.line	165, "main.c"; 	fgPRD = fgCount;
                                    1- 2152     	BANKSEL	_fgCount
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1- 2153     	MOVR	_fgCount,W
                                    1- 2154     	BANKSEL	_fgPRD
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 2155     	MOVAR	_fgPRD
                                    1- 2156     	BANKSEL	_fgCount
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 2157     	MOVR	(_fgCount + 1),W
                                    1- 2158     	BANKSEL	_fgPRD
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 2159     	MOVAR	(_fgPRD + 1)
                                    1- 2160     	.line	166, "main.c"; 	fgCount = 0;
                                    1- 2161     	BANKSEL	_fgCount
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 2162     	CLRR	_fgCount
     0010 02rr                      1- 2163     	CLRR	(_fgCount + 1)
     0011                           1- 2164     _00203_DS_:
                                    1- 2165     	.line	168, "main.c"; 	preFG = 1;
     0011 2101                      1- 2166     	MOVIA	0x01
                                    1- 2167     	BANKSEL	_preFG
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2168     	MOVAR	_preFG
     0014 3rrr                      1- 2169     	LGOTO	_00207_DS_
     0015                           1- 2170     _00205_DS_:
                                    1- 2171     	.line	172, "main.c"; 	preFG = 0;
                                    1- 2172     	BANKSEL	_preFG
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 2173     	CLRR	_preFG
     0017                           1- 2174     _00207_DS_:
                                    1- 2175     	.line	174, "main.c"; 	}
                                    1- 2176     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 2177     ; exit point of _fgCtr
                                    1- 2179     ;***
                                    1- 2180     ;  pBlock Stats: dbName = C
                                    1- 2181     ;***
                                    1- 2182     ;has an exit
                                    1- 2183     ;; Starting pCode block
                                    1- 2184     .segment "code"; module=main, function=_LEDLOFF
     0000                           1- 2186     _LEDLOFF:
                                    1- 2187     ; 2 exit points
                                    1- 2188     	.line	155, "main.c"; 	PORTA &= 0xF7;
                                    1- 2189     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Drr                      1- 2190     	BCR	_PORTA,3
                                    1- 2191     	.line	157, "main.c"; 	}
                                    1- 2192     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2193     ; exit point of _LEDLOFF
                                    1- 2195     ;***
                                    1- 2196     ;  pBlock Stats: dbName = C
                                    1- 2197     ;***
                                    1- 2198     ;has an exit
                                    1- 2199     ;; Starting pCode block
                                    1- 2200     .segment "code"; module=main, function=_LEDHOFF
     0000                           1- 2202     _LEDHOFF:
                                    1- 2203     ; 2 exit points
                                    1- 2204     	.line	150, "main.c"; 	PORTA &= 0xFB;
                                    1- 2205     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Drr                      1- 2206     	BCR	_PORTA,2
                                    1- 2207     	.line	152, "main.c"; 	}
                                    1- 2208     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2209     ; exit point of _LEDHOFF
                                    1- 2211     ;***
                                    1- 2212     ;  pBlock Stats: dbName = C
                                    1- 2213     ;***
                                    1- 2214     ;has an exit
                                    1- 2215     ;; Starting pCode block
                                    1- 2216     .segment "code"; module=main, function=_LEDLON
     0000                           1- 2218     _LEDLON:
                                    1- 2219     ; 2 exit points
                                    1- 2220     	.line	145, "main.c"; 	PORTA |= 0x08;
                                    1- 2221     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 2222     	BSR	_PORTA,3
                                    1- 2223     	.line	147, "main.c"; 	}
                                    1- 2224     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2225     ; exit point of _LEDLON
                                    1- 2227     ;***
                                    1- 2228     ;  pBlock Stats: dbName = C
                                    1- 2229     ;***
                                    1- 2230     ;has an exit
                                    1- 2231     ;; Starting pCode block
                                    1- 2232     .segment "code"; module=main, function=_LEDHON
     0000                           1- 2234     _LEDHON:
                                    1- 2235     ; 2 exit points
                                    1- 2236     	.line	140, "main.c"; 	PORTA |= 0x04;
                                    1- 2237     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 2238     	BSR	_PORTA,2
                                    1- 2239     	.line	142, "main.c"; 	}
                                    1- 2240     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2241     ; exit point of _LEDHON
                                    1- 2244     ;	code size estimation:
                                    1- 2245     ;	  786+  186 =   972 instructions ( 2316 byte)
                                    1- 2247     	end
                                    1- 2247     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002C
_00002_DS_              Label    00000025
_00112_DS_              Label    0000002E
_00114_DS_              Label    00000032
_00124_DS_              Label    00000012
_00125_DS_              Label    0000001F
_00129_DS_              Label    00000020
_00140_DS_              Label    00000002
_00181_DS_              Label    0000003D
_00203_DS_              Label    00000011
_00205_DS_              Label    00000015
_00207_DS_              Label    00000017
_00216_DS_              Label    00000012
_00217_DS_              Label    00000014
_00218_DS_              Label    00000015
_00219_DS_              Label    00000016
_00220_DS_              Label    00000017
_00222_DS_              Label    00000018
_00228_DS_              Label    0000000D
_00255_DS_              Label    0000000E
_00267_DS_              Label    00000039
_00269_DS_              Label    0000001C
_00271_DS_              Label    0000003E
_00282_DS_              Label    00000007
_00283_DS_              Label    00000010
_00284_DS_              Label    0000002F
_00290_DS_              Label    0000000E
_00294_DS_              Label    0000001A
_00297_DS_              Label    00000048
_00301_DS_              Label    0000003C
_00304_DS_              Label    00000035
_00308_DS_              Label    00000029
_00311_DS_              Label    00000021
_00313_DS_              Label    0000004A
_00327_DS_              Label    00000021
_00330_DS_              Label    00000013
_00332_DS_              Label    00000029
_00338_DS_              Label    00000006
_00339_DS_              Label    00000007
_00341_DS_              Label    00000022
_00345_DS_              Label    00000047
_00348_DS_              Label    0000003E
_00351_DS_              Label    00000035
_00352_DS_              Label    0000004F
_00354_DS_              Label    00000067
_00359_DS_              Label    00000053
_00362_DS_              Label    0000007C
_00378_DS_              Label    0000001D
_00379_DS_              Label    00000025
_00381_DS_              Label    00000013
_00382_DS_              Label    00000027
_00383_DS_              Label    00000028
_00389_DS_              Label    00000019
_00391_DS_              Label    00000012
_00396_DS_              Label    0000001E
_00398_DS_              Label    00000024
_00405_DS_              Label    00000004
_00407_DS_              Label    0000000E
_00419_DS_              Label    00000056
_00420_DS_              Label    00000059
_00424_DS_              Label    0000009E
_00427_DS_              Label    0000008E
_00430_DS_              Label    0000007E
_00433_DS_              Label    0000006E
_00436_DS_              Label    0000003B
_00438_DS_              Label    000000A4
_00464_DS_              Label    00000035
_00465_DS_              Label    00000042
_00466_DS_              Label    00000050
_00467_DS_              Label    00000063
_00468_DS_              Label    00000075
_00469_DS_              Label    00000085
_00470_DS_              Label    00000095
_00477_DS_              Label    0000000E
_00479_DS_              Label    0000002F
_00484_DS_              Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBatAD             Label    00000000
_chrgCtr                Label    00000000
_chrgTime               Label    00000000
_CMPCR                  Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_F_AIN5_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_fgCount                Label    00000000
_fgCtr                  Label    00000000
_fgPRD                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IO_Init                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_LEDHOFF                Label    00000000
_LEDHON                 Label    00000000
_LedInput               Label    00000000
_LEDLOFF                Label    00000000
_LEDLON                 Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_preFG                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN5_DATA            Label    00000000
_R_AIN5_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepTime              Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStartFlag          Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000043
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
r0x101D                 Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1022                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
