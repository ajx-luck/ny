
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_ADMDbits
                                    1-   24     	extern	_ADRbits
                                    1-   25     	extern	_ADVREFHbits
                                    1-   26     	extern	_ADCRbits
                                    1-   27     	extern	_AWUCONbits
                                    1-   28     	extern	_PACONbits
                                    1-   29     	extern	_INTEDGbits
                                    1-   30     	extern	_ANAENbits
                                    1-   31     	extern	_RFCbits
                                    1-   32     	extern	_INTE2bits
                                    1-   33     	extern	_INDF
                                    1-   34     	extern	_TMR0
                                    1-   35     	extern	_PCL
                                    1-   36     	extern	_STATUS
                                    1-   37     	extern	_FSR
                                    1-   38     	extern	_PORTA
                                    1-   39     	extern	_PORTB
                                    1-   40     	extern	_PCON
                                    1-   41     	extern	_BWUCON
                                    1-   42     	extern	_PCHBUF
                                    1-   43     	extern	_ABPLCON
                                    1-   44     	extern	_BPHCON
                                    1-   45     	extern	_INTE
                                    1-   46     	extern	_INTF
                                    1-   47     	extern	_ADMD
                                    1-   48     	extern	_ADR
                                    1-   49     	extern	_ADD
                                    1-   50     	extern	_ADVREFH
                                    1-   51     	extern	_ADCR
                                    1-   52     	extern	_AWUCON
                                    1-   53     	extern	_PACON
                                    1-   54     	extern	_INTEDG
                                    1-   55     	extern	_TMRH
                                    1-   56     	extern	_ANAEN
                                    1-   57     	extern	_RFC
                                    1-   58     	extern	_TM3RH
                                    1-   59     	extern	_INTE2
                                    1-   60     	extern	_TMR1
                                    1-   61     	extern	_T1CR1
                                    1-   62     	extern	_T1CR2
                                    1-   63     	extern	_PWM1DUTY
                                    1-   64     	extern	_PS1CV
                                    1-   65     	extern	_BZ1CR
                                    1-   66     	extern	_IRCR
                                    1-   67     	extern	_TBHP
                                    1-   68     	extern	_TBHD
                                    1-   69     	extern	_TMR2
                                    1-   70     	extern	_T2CR1
                                    1-   71     	extern	_T2CR2
                                    1-   72     	extern	_PWM2DUTY
                                    1-   73     	extern	_PS2CV
                                    1-   74     	extern	_BZ2CR
                                    1-   75     	extern	_OSCCR
                                    1-   76     	extern	_TMR3
                                    1-   77     	extern	_T3CR1
                                    1-   78     	extern	_T3CR2
                                    1-   79     	extern	_PWM3DUTY
                                    1-   80     	extern	_PS3CV
                                    1-   81     	extern	_BZ3CR
                                    1-   82     	extern	_IOSTA
                                    1-   83     	extern	_IOSTB
                                    1-   84     	extern	_APHCON
                                    1-   85     	extern	_PS0CV
                                    1-   86     	extern	_BODCON
                                    1-   87     	extern	_CMPCR
                                    1-   88     	extern	_PCON1
                                    1-   89     	extern	_T0MD
                                    1-   90     	extern	___sdcc_saved_fsr
                                    1-   91     	extern	___sdcc_saved_stk00
                                    1-   92     	extern	___sdcc_saved_stk01
                                    1-   93     	extern	__nyc_ny8_startup
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     ; global declarations
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     	extern	_F_wait_eoc
                                    1-   98     	extern	_F_AIN5_Convert
                                    1-   99     	extern	_checkBatAD
                                    1-  100     	extern	_initAD
                                    1-  101     	extern	_delay
                                    1-  102     	extern	_chrgCtr
                                    1-  103     	extern	_keyRead
                                    1-  104     	extern	_gotoSleep
                                    1-  105     	extern	_keyCtr
                                    1-  106     	extern	_ledCtr
                                    1-  107     	extern	_LedCtr2
                                    1-  108     	extern	_workCtr
                                    1-  109     	extern	_pwmStop
                                    1-  110     	extern	_pwmInit
                                    1-  111     	extern	_LED4ON
                                    1-  112     	extern	_LED3ON
                                    1-  113     	extern	_LED2ON
                                    1-  114     	extern	_LED1ON
                                    1-  115     	extern	_LedInput
                                    1-  116     	extern	_ledShow
                                    1-  117     	extern	_initSys
                                    1-  118     	extern	_fgCtr
                                    1-  119     	extern	_isr
                                    1-  120     	extern	_main
                                    1-  121     	extern	_LEDHON
                                    1-  122     	extern	_LEDLON
                                    1-  123     	extern	_LEDHOFF
                                    1-  124     	extern	_LEDLOFF
                                    1-  125     	extern	_Status
                                    1-  126     	extern	_duty
                                    1-  127     	extern	_intCount
                                    1-  128     	extern	_count500ms
                                    1-  129     	extern	_keyCount
                                    1-  130     	extern	_workStep
                                    1-  131     	extern	_ledStep
                                    1-  132     	extern	_fgCount
                                    1-  133     	extern	_fgPRD
                                    1-  134     	extern	_preFG
                                    1-  135     	extern	_maxDuty
                                    1-  136     	extern	_pwStep
                                    1-  137     	extern	_R_AIN5_DATA
                                    1-  138     	extern	_R_AIN5_DATA_LB
                                    1-  139     	extern	_chrgTime
                                    1-  140     	extern	_startStep
                                    1-  141     	extern	_sleepTime
                                    1-  142     	extern	_count200ms
                                    1-  143     	extern	_workStartFlag
                                    1-  145     	extern PSAVE
                                    1-  146     	extern SSAVE
                                    1-  147     	extern WSAVE
                                    1-  148     	extern STK02
                                    1-  149     	extern STK01
                                    1-  150     	extern STK00
                                    1-  152     .segment "uninit", 0x20000040
 20000040                           1-  153     PSAVE:
                                    1-  154     	.res 1
 20000041                           1-  155     SSAVE:
                                    1-  156     	.res 1
 20000042                           1-  157     WSAVE:
                                    1-  158     	.res 1
 20000043                           1-  159     STK02:
                                    1-  160     	.res 1
 20000044                           1-  161     STK01:
                                    1-  162     	.res 1
 20000045                           1-  163     STK00:
                                    1-  164     	.res 1
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ; global definitions
                                    1-  168     ;--------------------------------------------------------
                                    1-  169     .segment "uninit"
     0000                           1-  170     _R_AIN5_DATA:
                                    1-  171     	.res	2
                                    1-  174     .segment "uninit"
     0000                           1-  175     _R_AIN5_DATA_LB:
                                    1-  176     	.res	1
                                    1-  179     ;--------------------------------------------------------
                                    1-  180     ; absolute symbol definitions
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     ;--------------------------------------------------------
                                    1-  183     ; compiler-defined variables
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1027:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x102F:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x102E:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x102D:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x102C:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x1029:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x102B:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x102A:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x1028:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x101B:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x101C:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x1025:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x1026:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x101D:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x101E:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x101F:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1022:
                                    1-  235     	.res	1
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; initialized data
                                    1-  238     ;--------------------------------------------------------
                                    1-  240     .segment "idata"
     0000                           1-  241     _Status:
     0000 0000                      1-  242     	dw	0x00
                                    1-  246     .segment "idata"
     0000                           1-  247     _duty:
     0000 0000 0000                 1-  248     	dw	0x00, 0x00
                                    1-  252     .segment "idata"
     0000                           1-  253     _intCount:
     0000 0000                      1-  254     	dw	0x00
                                    1-  258     .segment "idata"
     0000                           1-  259     _count500ms:
     0000 0000                      1-  260     	dw	0x00
                                    1-  264     .segment "idata"
     0000                           1-  265     _keyCount:
     0000 0000                      1-  266     	dw	0x00
                                    1-  270     .segment "idata"
     0000                           1-  271     _workStep:
     0000 0000                      1-  272     	dw	0x00
                                    1-  276     .segment "idata"
     0000                           1-  277     _ledStep:
     0000 0000                      1-  278     	dw	0x00
                                    1-  282     .segment "idata"
     0000                           1-  283     _fgCount:
     0000 0000 0000                 1-  284     	dw	0x00, 0x00
                                    1-  288     .segment "idata"
     0000                           1-  289     _fgPRD:
     0000 0000 0000                 1-  290     	dw	0x00, 0x00
                                    1-  294     .segment "idata"
     0000                           1-  295     _preFG:
     0000 0000                      1-  296     	dw	0x00
                                    1-  300     .segment "idata"
     0000                           1-  301     _maxDuty:
     0000 0000                      1-  302     	dw	0x00
                                    1-  306     .segment "idata"
     0000                           1-  307     _pwStep:
     0000 0000                      1-  308     	dw	0x00
                                    1-  312     .segment "idata"
     0000                           1-  313     _chrgTime:
     0000 0000 0000                 1-  314     	dw	0x00, 0x00
                                    1-  318     .segment "idata"
     0000                           1-  319     _startStep:
     0000 0000                      1-  320     	dw	0x00
                                    1-  324     .segment "idata"
     0000                           1-  325     _sleepTime:
     0000 0000 0000                 1-  326     	dw	0x00, 0x00
                                    1-  330     .segment "idata"
     0000                           1-  331     _count200ms:
     0000 0000                      1-  332     	dw	0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _workStartFlag:
     0000 0000                      1-  338     	dw	0x00
                                    1-  341     ;--------------------------------------------------------
                                    1-  342     ; overlayable items in internal ram 
                                    1-  343     ;--------------------------------------------------------
                                    1-  344     ;	udata_ovr
                                    1-  345     ;--------------------------------------------------------
                                    1-  346     ; reset vector 
                                    1-  347     ;--------------------------------------------------------
                                    1-  348     ORG	0x0000
     0000 3rrr                      1-  349     	LGOTO	__nyc_ny8_startup
                                    1-  350     ;--------------------------------------------------------
                                    1-  351     ; interrupt and initialization code
                                    1-  352     ;--------------------------------------------------------
                                    1-  353     ORG 0x0008
     0008 3rrr                      1-  354     	lgoto	__sdcc_interrupt
                                    1-  356     .segment "code"
     0000                           1-  357     __sdcc_interrupt:
                                    1-  358     ;***
                                    1-  359     ;  pBlock Stats: dbName = I
                                    1-  360     ;***
                                    1-  361     ;2 compiler assigned registers:
                                    1-  362     ;   STK00
                                    1-  363     ;   STK01
                                    1-  364     ;; Starting pCode block
     0000                           1-  365     _isr:
                                    1-  366     ; 0 exit points
                                    1-  367     	.line	73, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  368     	MOVAR	WSAVE
     0001 1503                      1-  369     	SWAPR	STATUS,W
     0002 0283                      1-  370     	CLRR	STATUS
     0003 00rr                      1-  371     	MOVAR	SSAVE
     0004 010A                      1-  372     	MOVR	PCHBUF,W
     0005 028A                      1-  373     	CLRR	PCHBUF
     0006 00rr                      1-  374     	MOVAR	PSAVE
     0007 0104                      1-  375     	MOVR	FSR,W
                                    1-  376     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  377     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  378     	MOVR	STK00,W
                                    1-  379     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  380     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  381     	MOVR	STK01,W
                                    1-  382     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  383     	MOVAR	___sdcc_saved_stk01
                                    1-  384     	.line	75, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  385     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  386     	LGOTO	_00112_DS_
                                    1-  387     	.line	77, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  388     	MOVIA	0x37
     0013 03rr                      1-  389     	ADDAR	_TMR0,F
                                    1-  390     	.line	78, "main.c"; 	++fgCount;
                                    1-  391     	BANKSEL	_fgCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  392     	INCR	_fgCount,F
     0016 0D03                      1-  393     	BTRSC	STATUS,2
     0017 05rr                      1-  394     	INCR	(_fgCount + 1),F
                                    1-  395     	.line	79, "main.c"; 	if(++intCount >= 100)
                                    1-  396     	BANKSEL	_intCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 05rr                      1-  397     	INCR	_intCount,F
                                    1-  398     ;;unsigned compare: left < lit (0x64=100), size=1
     001A 2164                      1-  399     	MOVIA	0x64
     001B 04rr                      1-  400     	SUBAR	_intCount,W
     001C 0803                      1-  401     	BTRSS	STATUS,0
     001D 3rrr                      1-  402     	LGOTO	_00112_DS_
                                    1-  403     	.line	81, "main.c"; 	IntFlag = 1;
                                    1-  404     	BANKSEL	_Status
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 18rr                      1-  405     	BSR	_Status,0
                                    1-  406     	.line	82, "main.c"; 	intCount = 0;
                                    1-  407     	BANKSEL	_intCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 02rr                      1-  408     	CLRR	_intCount
                                    1-  409     	.line	83, "main.c"; 	if(++count500ms >= 40)
                                    1-  410     	BANKSEL	_count500ms
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  411     	INCR	_count500ms,F
                                    1-  412     ;;unsigned compare: left < lit (0x28=40), size=1
     0024 2128                      1-  413     	MOVIA	0x28
     0025 04rr                      1-  414     	SUBAR	_count500ms,W
     0026 0C03                      1-  415     	BTRSC	STATUS,0
                                    1-  416     	.line	84, "main.c"; 	count500ms = 0;
     0027 02rr                      1-  417     	CLRR	_count500ms
                                    1-  418     	.line	85, "main.c"; 	if(++count200ms >= 20)
                                    1-  419     	BANKSEL	_count200ms
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 05rr                      1-  420     	INCR	_count200ms,F
     002A 2114                      1-  421     	MOVIA	0x14
     002B 04rr                      1-  422     	SUBAR	_count200ms,W
     002C 0C03                      1-  423     	BTRSC	STATUS,0
                                    1-  424     	.line	86, "main.c"; 	count200ms = 0;
     002D 02rr                      1-  425     	CLRR	_count200ms
     002E                           1-  426     _00112_DS_:
                                    1-  427     	.line	92, "main.c"; 	if(INTFbits.PABIF)
     002E 08rr                      1-  428     	BTRSS	_INTFbits,1
     002F 3rrr                      1-  429     	LGOTO	_00114_DS_
                                    1-  430     	.line	94, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0030 21FD                      1-  431     	MOVIA	0xfd
     0031 00rr                      1-  432     	MOVAR	_INTF
     0032                           1-  433     _00114_DS_:
                                    1-  434     	.line	97, "main.c"; 	INTF = 0;
     0032 02rr                      1-  435     	CLRR	_INTF
                                    1-  436     	.line	99, "main.c"; 	}
                                    1-  437     	BANKSEL	___sdcc_saved_stk01
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  438     	MOVR	___sdcc_saved_stk01,W
     0035 00rr                      1-  439     	MOVAR	STK01
                                    1-  440     	BANKSEL	___sdcc_saved_stk00
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1-  441     	MOVR	___sdcc_saved_stk00,W
     0038 00rr                      1-  442     	MOVAR	STK00
                                    1-  443     	BANKSEL	___sdcc_saved_fsr
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  444     	MOVR	___sdcc_saved_fsr,W
     003B 0084                      1-  445     	MOVAR	FSR
     003C 01rr                      1-  446     	MOVR	PSAVE,W
     003D 008A                      1-  447     	MOVAR	PCHBUF
     003E 0283                      1-  448     	CLRR	STATUS
     003F 15rr                      1-  449     	SWAPR	SSAVE,W
     0040 0083                      1-  450     	MOVAR	STATUS
     0041 15rr                      1-  451     	SWAPR	WSAVE,F
     0042 15rr                      1-  452     	SWAPR	WSAVE,W
     0043                           1-  453     END_OF_INTERRUPT:
     0043 0011                      1-  454     	RETIE	
                                    1-  456     ;--------------------------------------------------------
                                    1-  457     ; code
                                    1-  458     ;--------------------------------------------------------
                                    1-  459     ;***
                                    1-  460     ;  pBlock Stats: dbName = M
                                    1-  461     ;***
                                    1-  462     ;has an exit
                                    1-  463     ;functions called:
                                    1-  464     ;   _initSys
                                    1-  465     ;   _initAD
                                    1-  466     ;   _ledShow
                                    1-  467     ;   _fgCtr
                                    1-  468     ;   _keyCtr
                                    1-  469     ;   _checkBatAD
                                    1-  470     ;   _ledCtr
                                    1-  471     ;   _chrgCtr
                                    1-  472     ;   _LedCtr2
                                    1-  473     ;   _workCtr
                                    1-  474     ;   _gotoSleep
                                    1-  475     ;   _initSys
                                    1-  476     ;   _initAD
                                    1-  477     ;   _ledShow
                                    1-  478     ;   _fgCtr
                                    1-  479     ;   _keyCtr
                                    1-  480     ;   _checkBatAD
                                    1-  481     ;   _ledCtr
                                    1-  482     ;   _chrgCtr
                                    1-  483     ;   _LedCtr2
                                    1-  484     ;   _workCtr
                                    1-  485     ;   _gotoSleep
                                    1-  486     ;; Starting pCode block
                                    1-  487     .segment "code"; module=main, function=_main
     0000                           1-  489     _main:
                                    1-  490     ; 2 exit points
                                    1-  491     	.line	103, "main.c"; 	initSys();
     0000 2rrr                      1-  492     	LCALL	_initSys
                                    1-  493     	.line	104, "main.c"; 	initAD();
     0001 2rrr                      1-  494     	LCALL	_initAD
     0002                           1-  495     _00140_DS_:
                                    1-  496     	.line	107, "main.c"; 	ledShow();
     0002 2rrr                      1-  497     	LCALL	_ledShow
                                    1-  498     	.line	108, "main.c"; 	CLRWDT();
     0003 0002                      1-  499     	clrwdt
                                    1-  500     	.line	109, "main.c"; 	fgCtr();
     0004 2rrr                      1-  501     	LCALL	_fgCtr
                                    1-  502     	.line	110, "main.c"; 	if(!IntFlag)
                                    1-  503     	BANKSEL	_Status
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 08rr                      1-  504     	BTRSS	_Status,0
     0007 3rrr                      1-  505     	LGOTO	_00140_DS_
                                    1-  506     	.line	112, "main.c"; 	IntFlag = 0;
     0008 1Crr                      1-  507     	BCR	_Status,0
                                    1-  508     	.line	113, "main.c"; 	if((PORTA & 0x20) == 0)
                                    1-  509     	BANKSEL	_PORTA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 0Arr                      1-  510     	BTRSS	_PORTA,5
                                    1-  511     	.line	114, "main.c"; 	keyCtr();
     000B 2rrr                      1-  512     	LCALL	_keyCtr
                                    1-  513     	.line	115, "main.c"; 	if(count200ms == 0)
                                    1-  514     	BANKSEL	_count200ms
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  515     	MOVR	_count200ms,W
     000E 0903                      1-  516     	BTRSS	STATUS,2
     000F 3rrr                      1-  517     	LGOTO	_00124_DS_
                                    1-  518     	.line	117, "main.c"; 	checkBatAD();
     0010 2rrr                      1-  519     	LCALL	_checkBatAD
                                    1-  520     	.line	118, "main.c"; 	ledCtr();
     0011 2rrr                      1-  521     	LCALL	_ledCtr
     0012                           1-  522     _00124_DS_:
                                    1-  523     	.line	120, "main.c"; 	if(count500ms == 0)
                                    1-  524     	BANKSEL	_count500ms
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1-  525     	MOVR	_count500ms,W
     0014 0903                      1-  526     	BTRSS	STATUS,2
     0015 3rrr                      1-  527     	LGOTO	_00129_DS_
                                    1-  528     	.line	122, "main.c"; 	chrgCtr();
     0016 2rrr                      1-  529     	LCALL	_chrgCtr
                                    1-  530     	.line	123, "main.c"; 	if(workStartFlag == 1 || workStartFlag == 3)
                                    1-  531     	BANKSEL	_workStartFlag
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1-  532     	MOVR	_workStartFlag,W
     0019 2401                      1-  533     	XORIA	0x01
     001A 0D03                      1-  534     	BTRSC	STATUS,2
     001B 3rrr                      1-  535     	LGOTO	_00125_DS_
     001C 01rr                      1-  536     	MOVR	_workStartFlag,W
     001D 2403                      1-  537     	XORIA	0x03
     001E 0D03                      1-  538     	BTRSC	STATUS,2
     001F                           1-  539     _00125_DS_:
                                    1-  540     	.line	124, "main.c"; 	LedCtr2();
     001F 2rrr                      1-  541     	LCALL	_LedCtr2
     0020                           1-  542     _00129_DS_:
                                    1-  543     	.line	126, "main.c"; 	if(workStep)
                                    1-  544     	BANKSEL	_workStep
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  545     	MOVR	_workStep,W
     0022 0903                      1-  546     	BTRSS	STATUS,2
                                    1-  547     	.line	127, "main.c"; 	workCtr();
     0023 2rrr                      1-  548     	LCALL	_workCtr
                                    1-  549     	.line	128, "main.c"; 	if(workStep == 0 && keyCount == 0 && workStartFlag == 0 && ((PORTA & 0x20) == 0))
                                    1-  550     	BANKSEL	_workStep
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  551     	MOVR	_workStep,W
     0026 0903                      1-  552     	BTRSS	STATUS,2
     0027 3rrr                      1-  553     	LGOTO	_00140_DS_
                                    1-  554     	BANKSEL	_keyCount
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1-  555     	MOVR	_keyCount,W
     002A 0903                      1-  556     	BTRSS	STATUS,2
     002B 3rrr                      1-  557     	LGOTO	_00140_DS_
                                    1-  558     	BANKSEL	_workStartFlag
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1-  559     	MOVR	_workStartFlag,W
     002E 0903                      1-  560     	BTRSS	STATUS,2
     002F 3rrr                      1-  561     	LGOTO	_00140_DS_
                                    1-  562     	BANKSEL	_PORTA
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 0Err                      1-  563     	BTRSC	_PORTA,5
     0032 3rrr                      1-  564     	LGOTO	_00140_DS_
                                    1-  565     	.line	130, "main.c"; 	if(++sleepTime > 2000)
                                    1-  566     	BANKSEL	_sleepTime
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 05rr                      1-  567     	INCR	_sleepTime,F
     0035 0D03                      1-  568     	BTRSC	STATUS,2
     0036 05rr                      1-  569     	INCR	(_sleepTime + 1),F
                                    1-  570     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  571     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0037 2107                      1-  572     	MOVIA	0x07
     0038 04rr                      1-  573     	SUBAR	(_sleepTime + 1),W
     0039 0903                      1-  574     	BTRSS	STATUS,2
     003A 3rrr                      1-  575     	LGOTO	_00181_DS_
     003B 21D1                      1-  576     	MOVIA	0xd1
     003C 04rr                      1-  577     	SUBAR	_sleepTime,W
     003D                           1-  578     _00181_DS_:
     003D 0803                      1-  579     	BTRSS	STATUS,0
     003E 3rrr                      1-  580     	LGOTO	_00140_DS_
                                    1-  581     	.line	132, "main.c"; 	gotoSleep();
     003F 2rrr                      1-  582     	LCALL	_gotoSleep
     0040 3rrr                      1-  583     	LGOTO	_00140_DS_
                                    1-  584     	.line	136, "main.c"; 	}
                                    1-  585     	RETURN	
     0041 0010                      3-   26 m1      ret
                                    1-  586     ; exit point of _main
                                    1-  588     ;***
                                    1-  589     ;  pBlock Stats: dbName = C
                                    1-  590     ;***
                                    1-  591     ;has an exit
                                    1-  592     ;; Starting pCode block
                                    1-  593     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  595     _F_wait_eoc:
                                    1-  596     ; 2 exit points
     0000                           1-  597     _00495_DS_:
                                    1-  598     	.line	662, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  599     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  600     	LGOTO	_00495_DS_
                                    1-  601     	.line	664, "main.c"; 	}
                                    1-  602     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  603     ; exit point of _F_wait_eoc
                                    1-  605     ;***
                                    1-  606     ;  pBlock Stats: dbName = C
                                    1-  607     ;***
                                    1-  608     ;has an exit
                                    1-  609     ;functions called:
                                    1-  610     ;   _delay
                                    1-  611     ;   _F_wait_eoc
                                    1-  612     ;   _delay
                                    1-  613     ;   _F_wait_eoc
                                    1-  614     ;6 compiler assigned registers:
                                    1-  615     ;   r0x101D
                                    1-  616     ;   r0x101E
                                    1-  617     ;   r0x101F
                                    1-  618     ;   r0x1020
                                    1-  619     ;   r0x1021
                                    1-  620     ;   r0x1022
                                    1-  621     ;; Starting pCode block
                                    1-  622     .segment "code"; module=main, function=_F_AIN5_Convert
                                    1-  624     ;local variable name mapping:
     0000                           1-  627     _F_AIN5_Convert:
                                    1-  628     ; 2 exit points
                                    1-  629     	.line	645, "main.c"; 	void F_AIN5_Convert(char count)
                                    1-  630     	BANKSEL	r0x101D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  631     	MOVAR	r0x101D
                                    1-  632     	.line	647, "main.c"; 	R_AIN5_DATA=R_AIN5_DATA_LB=0x00;   
                                    1-  633     	BANKSEL	_R_AIN5_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  634     	CLRR	_R_AIN5_DATA_LB
                                    1-  635     	BANKSEL	_R_AIN5_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  636     	CLRR	_R_AIN5_DATA
     0006 02rr                      1-  637     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  638     	.line	649, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  639     	MOVIA	0x94
     0008 00rr                      1-  640     	MOVAR	_ADMD
                                    1-  641     	.line	650, "main.c"; 	delay(200);	
     0009 21C8                      1-  642     	MOVIA	0xc8
     000A 2rrr                      1-  643     	LCALL	_delay
                                    1-  644     	.line	651, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  645     	MOVIA	0x01
                                    1-  646     	BANKSEL	r0x101E
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  647     	MOVAR	r0x101E
     000E                           1-  648     _00488_DS_:
                                    1-  649     	BANKSEL	r0x101E
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1-  650     	MOVR	r0x101E,W
                                    1-  651     	BANKSEL	r0x101D
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  652     	SUBAR	r0x101D,W
     0012 0803                      1-  653     	BTRSS	STATUS,0
     0013 3rrr                      1-  654     	LGOTO	_00490_DS_
                                    1-  655     	.line	653, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  656     	BSR	_ADMDbits,6
                                    1-  657     	.line	654, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1-  658     	LCALL	_F_wait_eoc
                                    1-  659     	.line	655, "main.c"; 	R_AIN5_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  660     	MOVIA	0x0f
     0017 10rr                      1-  661     	ANDAR	_ADR,W
                                    1-  662     ;;3	MOVAR	r0x101F
                                    1-  663     	BANKSEL	_R_AIN5_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1-  664     	ADDAR	_R_AIN5_DATA_LB,F
                                    1-  665     	.line	656, "main.c"; 	R_AIN5_DATA    += ADD; 
     001A 01rr                      1-  666     	MOVR	_ADD,W
                                    1-  667     	BANKSEL	r0x101F
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  668     	MOVAR	r0x101F
                                    1-  669     ;;1	CLRR	r0x1020
                                    1-  670     ;;102	MOVR	r0x101F,W
                                    1-  671     ;;100	MOVAR	r0x1021
     001D 2100                      1-  672     	MOVIA	0x00
                                    1-  673     	BANKSEL	r0x1022
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  674     	MOVAR	r0x1022
                                    1-  675     ;;101	MOVR	r0x1021,W
                                    1-  676     	BANKSEL	r0x101F
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  677     	MOVR	r0x101F,W
                                    1-  678     	BANKSEL	_R_AIN5_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1-  679     	ADDAR	_R_AIN5_DATA,F
                                    1-  680     	BANKSEL	r0x1022
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  681     	MOVR	r0x1022,W
     0026 0C03                      1-  682     	BTRSC	STATUS,0
     0027 05rr                      1-  683     	INCR	r0x1022,W
     0028 0D03                      1-  684     	BTRSC	STATUS,2
     0029 3rrr                      1-  685     	LGOTO	_00001_DS_
                                    1-  686     	BANKSEL	_R_AIN5_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1-  687     	ADDAR	(_R_AIN5_DATA + 1),F
     002C                           1-  688     _00001_DS_:
                                    1-  689     	.line	651, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  690     	BANKSEL	r0x101E
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  691     	INCR	r0x101E,F
     002E 3rrr                      1-  692     	LGOTO	_00488_DS_
     002F                           1-  693     _00490_DS_:
                                    1-  694     	.line	658, "main.c"; 	}
                                    1-  695     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1-  696     ; exit point of _F_AIN5_Convert
                                    1-  698     ;***
                                    1-  699     ;  pBlock Stats: dbName = C
                                    1-  700     ;***
                                    1-  701     ;has an exit
                                    1-  702     ;functions called:
                                    1-  703     ;   _F_AIN5_Convert
                                    1-  704     ;   _F_AIN5_Convert
                                    1-  705     ;4 compiler assigned registers:
                                    1-  706     ;   r0x1023
                                    1-  707     ;   r0x1024
                                    1-  708     ;   r0x1025
                                    1-  709     ;   r0x1026
                                    1-  710     ;; Starting pCode block
                                    1-  711     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  713     _checkBatAD:
                                    1-  714     ; 2 exit points
                                    1-  715     	.line	587, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA_LB = 0x00;
                                    1-  716     	BANKSEL	_R_AIN5_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  717     	CLRR	_R_AIN5_DATA_LB
                                    1-  718     	BANKSEL	_R_AIN5_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  719     	CLRR	_R_AIN5_DATA
     0004 02rr                      1-  720     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  721     	.line	588, "main.c"; 	F_AIN5_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  722     	MOVIA	0x08
     0006 2rrr                      1-  723     	LCALL	_F_AIN5_Convert
                                    1-  724     	.line	589, "main.c"; 	R_AIN5_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  725     	BANKSEL	_R_AIN5_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1-  726     	SWAPR	(_R_AIN5_DATA + 1),W
     0009 22F0                      1-  727     	ANDIA	0xf0
     000A 00rr                      1-  728     	MOVAR	(_R_AIN5_DATA + 1)
     000B 15rr                      1-  729     	SWAPR	_R_AIN5_DATA,W
     000C 00rr                      1-  730     	MOVAR	_R_AIN5_DATA
     000D 220F                      1-  731     	ANDIA	0x0f
     000E 11rr                      1-  732     	IORAR	(_R_AIN5_DATA + 1),F
     000F 12rr                      1-  733     	XORAR	_R_AIN5_DATA,F
                                    1-  734     	.line	590, "main.c"; 	R_AIN5_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  735     	MOVIA	0xf0
                                    1-  736     	BANKSEL	_R_AIN5_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1-  737     	ANDAR	_R_AIN5_DATA_LB,F
                                    1-  738     	.line	591, "main.c"; 	R_AIN5_DATA += R_AIN5_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  739     	MOVR	_R_AIN5_DATA_LB,W
                                    1-  740     	BANKSEL	r0x1025
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1-  741     	MOVAR	r0x1025
                                    1-  742     ;;1	MOVAR	r0x1023
                                    1-  743     ;;1	CLRR	r0x1024
                                    1-  744     ;;99	MOVR	r0x1023,W
     0016 2100                      1-  745     	MOVIA	0x00
                                    1-  746     	BANKSEL	r0x1026
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1-  747     	MOVAR	r0x1026
                                    1-  748     	BANKSEL	r0x1025
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  749     	MOVR	r0x1025,W
                                    1-  750     	BANKSEL	_R_AIN5_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1-  751     	ADDAR	_R_AIN5_DATA,F
                                    1-  752     	BANKSEL	r0x1026
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  753     	MOVR	r0x1026,W
     001F 0C03                      1-  754     	BTRSC	STATUS,0
     0020 05rr                      1-  755     	INCR	r0x1026,W
     0021 0D03                      1-  756     	BTRSC	STATUS,2
     0022 3rrr                      1-  757     	LGOTO	_00002_DS_
                                    1-  758     	BANKSEL	_R_AIN5_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1-  759     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1-  760     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  761     _00002_DS_:
                                    1-  762     	.line	592, "main.c"; 	R_AIN5_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1-  763     	BCR	STATUS,0
                                    1-  764     	BANKSEL	_R_AIN5_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1-  765     	RRR	(_R_AIN5_DATA + 1),F
     0028 13rr                      1-  766     	RRR	_R_AIN5_DATA,F
                                    1-  767     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  768     	BCR	STATUS,0
     002A 13rr                      1-  769     	RRR	(_R_AIN5_DATA + 1),F
     002B 13rr                      1-  770     	RRR	_R_AIN5_DATA,F
                                    1-  771     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  772     	BCR	STATUS,0
     002D 13rr                      1-  773     	RRR	(_R_AIN5_DATA + 1),F
     002E 13rr                      1-  774     	RRR	_R_AIN5_DATA,F
                                    1-  775     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  776     ;;unsigned compare: left >= lit (0x614=1556), size=2
                                    1-  777     	.line	593, "main.c"; 	if(R_AIN5_DATA > 1555)
     002F 2106                      1-  778     	MOVIA	0x06
     0030 04rr                      1-  779     	SUBAR	(_R_AIN5_DATA + 1),W
     0031 0903                      1-  780     	BTRSS	STATUS,2
     0032 3rrr                      1-  781     	LGOTO	_00475_DS_
     0033 2114                      1-  782     	MOVIA	0x14
     0034 04rr                      1-  783     	SUBAR	_R_AIN5_DATA,W
     0035                           1-  784     _00475_DS_:
     0035 0803                      1-  785     	BTRSS	STATUS,0
     0036 3rrr                      1-  786     	LGOTO	_00447_DS_
                                    1-  787     	.line	595, "main.c"; 	pwStep = 6;
     0037 2106                      1-  788     	MOVIA	0x06
                                    1-  789     	BANKSEL	_pwStep
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 00rr                      1-  790     	MOVAR	_pwStep
     003A 3rrr                      1-  791     	LGOTO	_00449_DS_
                                    1-  792     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  793     ;;unsigned compare: left >= lit (0x571=1393), size=2
     003B                           1-  794     _00447_DS_:
                                    1-  795     	.line	597, "main.c"; 	else if(R_AIN5_DATA > 1392)
     003B 2105                      1-  796     	MOVIA	0x05
                                    1-  797     	BANKSEL	_R_AIN5_DATA
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 04rr                      1-  798     	SUBAR	(_R_AIN5_DATA + 1),W
     003E 0903                      1-  799     	BTRSS	STATUS,2
     003F 3rrr                      1-  800     	LGOTO	_00476_DS_
     0040 2171                      1-  801     	MOVIA	0x71
     0041 04rr                      1-  802     	SUBAR	_R_AIN5_DATA,W
     0042                           1-  803     _00476_DS_:
     0042 0803                      1-  804     	BTRSS	STATUS,0
     0043 3rrr                      1-  805     	LGOTO	_00444_DS_
                                    1-  806     	.line	600, "main.c"; 	if(pwStep == 6)
                                    1-  807     	BANKSEL	_pwStep
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  808     	MOVR	_pwStep,W
     0046 2406                      1-  809     	XORIA	0x06
     0047 0903                      1-  810     	BTRSS	STATUS,2
     0048 3rrr                      1-  811     	LGOTO	_00430_DS_
                                    1-  812     ;;unsigned compare: left < lit (0x5DC=1500), size=2
                                    1-  813     	.line	602, "main.c"; 	if(R_AIN5_DATA < 1500)
     0049 2105                      1-  814     	MOVIA	0x05
                                    1-  815     	BANKSEL	_R_AIN5_DATA
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 04rr                      1-  816     	SUBAR	(_R_AIN5_DATA + 1),W
     004C 0903                      1-  817     	BTRSS	STATUS,2
     004D 3rrr                      1-  818     	LGOTO	_00477_DS_
     004E 21DC                      1-  819     	MOVIA	0xdc
     004F 04rr                      1-  820     	SUBAR	_R_AIN5_DATA,W
     0050                           1-  821     _00477_DS_:
     0050 0C03                      1-  822     	BTRSC	STATUS,0
     0051 3rrr                      1-  823     	LGOTO	_00431_DS_
                                    1-  824     	.line	603, "main.c"; 	pwStep = 5;
     0052 2105                      1-  825     	MOVIA	0x05
                                    1-  826     	BANKSEL	_pwStep
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1-  827     	MOVAR	_pwStep
     0055 3rrr                      1-  828     	LGOTO	_00431_DS_
     0056                           1-  829     _00430_DS_:
                                    1-  830     	.line	607, "main.c"; 	pwStep = 5;
     0056 2105                      1-  831     	MOVIA	0x05
                                    1-  832     	BANKSEL	_pwStep
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1-  833     	MOVAR	_pwStep
     0059                           1-  834     _00431_DS_:
                                    1-  835     	.line	609, "main.c"; 	if(++chrgTime > 1800)
                                    1-  836     	BANKSEL	_chrgTime
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 05rr                      1-  837     	INCR	_chrgTime,F
     005B 0D03                      1-  838     	BTRSC	STATUS,2
     005C 05rr                      1-  839     	INCR	(_chrgTime + 1),F
                                    1-  840     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  841     ;;unsigned compare: left >= lit (0x709=1801), size=2
     005D 2107                      1-  842     	MOVIA	0x07
     005E 04rr                      1-  843     	SUBAR	(_chrgTime + 1),W
     005F 0903                      1-  844     	BTRSS	STATUS,2
     0060 3rrr                      1-  845     	LGOTO	_00478_DS_
     0061 2109                      1-  846     	MOVIA	0x09
     0062 04rr                      1-  847     	SUBAR	_chrgTime,W
     0063                           1-  848     _00478_DS_:
     0063 0803                      1-  849     	BTRSS	STATUS,0
     0064 3rrr                      1-  850     	LGOTO	_00449_DS_
                                    1-  851     	.line	611, "main.c"; 	chrgTime = 1800;
     0065 2108                      1-  852     	MOVIA	0x08
                                    1-  853     	BANKSEL	_chrgTime
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 00rr                      1-  854     	MOVAR	_chrgTime
     0068 2107                      1-  855     	MOVIA	0x07
     0069 00rr                      1-  856     	MOVAR	(_chrgTime + 1)
                                    1-  857     	.line	612, "main.c"; 	pwStep = 6;
     006A 2106                      1-  858     	MOVIA	0x06
                                    1-  859     	BANKSEL	_pwStep
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 00rr                      1-  860     	MOVAR	_pwStep
     006D 3rrr                      1-  861     	LGOTO	_00449_DS_
                                    1-  862     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  863     ;;unsigned compare: left >= lit (0x3A0=928), size=2
     006E                           1-  864     _00444_DS_:
                                    1-  865     	.line	615, "main.c"; 	else if(R_AIN5_DATA > 927)
     006E 2103                      1-  866     	MOVIA	0x03
                                    1-  867     	BANKSEL	_R_AIN5_DATA
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 04rr                      1-  868     	SUBAR	(_R_AIN5_DATA + 1),W
     0071 0903                      1-  869     	BTRSS	STATUS,2
     0072 3rrr                      1-  870     	LGOTO	_00479_DS_
     0073 21A0                      1-  871     	MOVIA	0xa0
     0074 04rr                      1-  872     	SUBAR	_R_AIN5_DATA,W
     0075                           1-  873     _00479_DS_:
     0075 0803                      1-  874     	BTRSS	STATUS,0
     0076 3rrr                      1-  875     	LGOTO	_00441_DS_
                                    1-  876     	.line	618, "main.c"; 	pwStep = 4;
     0077 2104                      1-  877     	MOVIA	0x04
                                    1-  878     	BANKSEL	_pwStep
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 00rr                      1-  879     	MOVAR	_pwStep
                                    1-  880     	.line	619, "main.c"; 	chrgTime = 0;
                                    1-  881     	BANKSEL	_chrgTime
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1-  882     	CLRR	_chrgTime
     007C 02rr                      1-  883     	CLRR	(_chrgTime + 1)
     007D 3rrr                      1-  884     	LGOTO	_00449_DS_
                                    1-  885     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  886     ;;unsigned compare: left >= lit (0x1D0=464), size=2
     007E                           1-  887     _00441_DS_:
                                    1-  888     	.line	621, "main.c"; 	else if(R_AIN5_DATA > 463)
     007E 2101                      1-  889     	MOVIA	0x01
                                    1-  890     	BANKSEL	_R_AIN5_DATA
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 04rr                      1-  891     	SUBAR	(_R_AIN5_DATA + 1),W
     0081 0903                      1-  892     	BTRSS	STATUS,2
     0082 3rrr                      1-  893     	LGOTO	_00480_DS_
     0083 21D0                      1-  894     	MOVIA	0xd0
     0084 04rr                      1-  895     	SUBAR	_R_AIN5_DATA,W
     0085                           1-  896     _00480_DS_:
     0085 0803                      1-  897     	BTRSS	STATUS,0
     0086 3rrr                      1-  898     	LGOTO	_00438_DS_
                                    1-  899     	.line	624, "main.c"; 	pwStep = 3;
     0087 2103                      1-  900     	MOVIA	0x03
                                    1-  901     	BANKSEL	_pwStep
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 00rr                      1-  902     	MOVAR	_pwStep
                                    1-  903     	.line	625, "main.c"; 	chrgTime = 0;
                                    1-  904     	BANKSEL	_chrgTime
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 02rr                      1-  905     	CLRR	_chrgTime
     008C 02rr                      1-  906     	CLRR	(_chrgTime + 1)
     008D 3rrr                      1-  907     	LGOTO	_00449_DS_
                                    1-  908     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  909     ;;unsigned compare: left >= lit (0x9B=155), size=2
     008E                           1-  910     _00438_DS_:
                                    1-  911     	.line	627, "main.c"; 	else if(R_AIN5_DATA > 154)
     008E 2100                      1-  912     	MOVIA	0x00
                                    1-  913     	BANKSEL	_R_AIN5_DATA
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 04rr                      1-  914     	SUBAR	(_R_AIN5_DATA + 1),W
     0091 0903                      1-  915     	BTRSS	STATUS,2
     0092 3rrr                      1-  916     	LGOTO	_00481_DS_
     0093 219B                      1-  917     	MOVIA	0x9b
     0094 04rr                      1-  918     	SUBAR	_R_AIN5_DATA,W
     0095                           1-  919     _00481_DS_:
     0095 0803                      1-  920     	BTRSS	STATUS,0
     0096 3rrr                      1-  921     	LGOTO	_00435_DS_
                                    1-  922     	.line	630, "main.c"; 	pwStep = 2;
     0097 2102                      1-  923     	MOVIA	0x02
                                    1-  924     	BANKSEL	_pwStep
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 00rr                      1-  925     	MOVAR	_pwStep
                                    1-  926     	.line	631, "main.c"; 	chrgTime = 0;
                                    1-  927     	BANKSEL	_chrgTime
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 02rr                      1-  928     	CLRR	_chrgTime
     009C 02rr                      1-  929     	CLRR	(_chrgTime + 1)
     009D 3rrr                      1-  930     	LGOTO	_00449_DS_
     009E                           1-  931     _00435_DS_:
                                    1-  932     	.line	636, "main.c"; 	pwStep = 1;
     009E 2101                      1-  933     	MOVIA	0x01
                                    1-  934     	BANKSEL	_pwStep
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 00rr                      1-  935     	MOVAR	_pwStep
                                    1-  936     	.line	637, "main.c"; 	chrgTime = 0;
                                    1-  937     	BANKSEL	_chrgTime
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 02rr                      1-  938     	CLRR	_chrgTime
     00A3 02rr                      1-  939     	CLRR	(_chrgTime + 1)
     00A4                           1-  940     _00449_DS_:
                                    1-  941     	.line	640, "main.c"; 	}
                                    1-  942     	RETURN	
     00A4 0010                      3-   26 m1      ret
                                    1-  943     ; exit point of _checkBatAD
                                    1-  945     ;***
                                    1-  946     ;  pBlock Stats: dbName = C
                                    1-  947     ;***
                                    1-  948     ;has an exit
                                    1-  949     ;functions called:
                                    1-  950     ;   _delay
                                    1-  951     ;   _delay
                                    1-  952     ;; Starting pCode block
                                    1-  953     .segment "code"; module=main, function=_initAD
     0000                           1-  955     _initAD:
                                    1-  956     ; 2 exit points
                                    1-  957     	.line	563, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1-  958     	MOVIA	0x84
     0001 00rr                      1-  959     	MOVAR	_ADMD
                                    1-  960     	.line	568, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1-  961     	CLRR	_ADVREFH
                                    1-  962     	.line	573, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1-  963     	MOVIA	0x10
     0004 00rr                      1-  964     	MOVAR	_ADR
                                    1-  965     	.line	575, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1-  966     	MOVIA	0x03
     0006 00rr                      1-  967     	MOVAR	_ADCR
                                    1-  968     	.line	578, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1-  969     	BSR	_ADMDbits,4
                                    1-  970     	.line	579, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1-  971     	MOVIA	0x64
     0009 2rrr                      1-  972     	LCALL	_delay
                                    1-  973     	.line	582, "main.c"; 	}
                                    1-  974     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1-  975     ; exit point of _initAD
                                    1-  977     ;***
                                    1-  978     ;  pBlock Stats: dbName = C
                                    1-  979     ;***
                                    1-  980     ;has an exit
                                    1-  981     ;2 compiler assigned registers:
                                    1-  982     ;   r0x101B
                                    1-  983     ;   r0x101C
                                    1-  984     ;; Starting pCode block
                                    1-  985     .segment "code"; module=main, function=_delay
                                    1-  987     ;local variable name mapping:
     0000                           1-  990     _delay:
                                    1-  991     ; 2 exit points
                                    1-  992     	.line	553, "main.c"; 	void delay(u8t time)
                                    1-  993     	BANKSEL	r0x101B
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  994     	MOVAR	r0x101B
                                    1-  995     	.line	555, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  996     	BANKSEL	r0x101C
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  997     	CLRR	r0x101C
     0004                           1-  998     _00416_DS_:
                                    1-  999     	BANKSEL	r0x101B
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1000     	MOVR	r0x101B,W
                                    1- 1001     	BANKSEL	r0x101C
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 1002     	SUBAR	r0x101C,W
     0008 0C03                      1- 1003     	BTRSC	STATUS,0
     0009 3rrr                      1- 1004     	LGOTO	_00418_DS_
                                    1- 1005     	.line	556, "main.c"; 	NOP();
     000A 0000                      1- 1006     	nop
                                    1- 1007     	.line	555, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1008     	BANKSEL	r0x101C
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 1009     	INCR	r0x101C,F
     000D 3rrr                      1- 1010     	LGOTO	_00416_DS_
     000E                           1- 1011     _00418_DS_:
                                    1- 1012     	.line	557, "main.c"; 	}
                                    1- 1013     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1014     ; exit point of _delay
                                    1- 1016     ;***
                                    1- 1017     ;  pBlock Stats: dbName = C
                                    1- 1018     ;***
                                    1- 1019     ;has an exit
                                    1- 1020     ;functions called:
                                    1- 1021     ;   _pwmStop
                                    1- 1022     ;   _LedInput
                                    1- 1023     ;   _LEDLOFF
                                    1- 1024     ;   _LEDHON
                                    1- 1025     ;   _LEDHOFF
                                    1- 1026     ;   _LEDHOFF
                                    1- 1027     ;   _LEDLOFF
                                    1- 1028     ;   _pwmStop
                                    1- 1029     ;   _LedInput
                                    1- 1030     ;   _LEDLOFF
                                    1- 1031     ;   _LEDHON
                                    1- 1032     ;   _LEDHOFF
                                    1- 1033     ;   _LEDHOFF
                                    1- 1034     ;   _LEDLOFF
                                    1- 1035     ;; Starting pCode block
                                    1- 1036     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1038     _chrgCtr:
                                    1- 1039     ; 2 exit points
                                    1- 1040     	.line	517, "main.c"; 	if(PORTA & 0x20)
                                    1- 1041     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 0Arr                      1- 1042     	BTRSS	_PORTA,5
     0002 3rrr                      1- 1043     	LGOTO	_00407_DS_
                                    1- 1044     	.line	520, "main.c"; 	workStep = 0;
                                    1- 1045     	BANKSEL	_workStep
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1- 1046     	CLRR	_workStep
                                    1- 1047     	.line	521, "main.c"; 	ledStep = 0;
                                    1- 1048     	BANKSEL	_ledStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1049     	CLRR	_ledStep
                                    1- 1050     	.line	522, "main.c"; 	pwmStop();
     0007 2rrr                      1- 1051     	LCALL	_pwmStop
                                    1- 1052     	.line	523, "main.c"; 	LedInput();
     0008 2rrr                      1- 1053     	LCALL	_LedInput
                                    1- 1054     	.line	524, "main.c"; 	PORTB &= 0xFD;
     0009 1Crr                      1- 1055     	BCR	_PORTB,1
                                    1- 1056     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1057     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 1058     	.line	525, "main.c"; 	if(pwStep > 5)
     000A 2106                      1- 1059     	MOVIA	0x06
                                    1- 1060     	BANKSEL	_pwStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1- 1061     	SUBAR	_pwStep,W
     000D 0803                      1- 1062     	BTRSS	STATUS,0
     000E 3rrr                      1- 1063     	LGOTO	_00402_DS_
                                    1- 1064     	.line	528, "main.c"; 	LEDLOFF();
     000F 2rrr                      1- 1065     	LCALL	_LEDLOFF
                                    1- 1066     	.line	529, "main.c"; 	LEDHON();
     0010 2rrr                      1- 1067     	LCALL	_LEDHON
     0011 3rrr                      1- 1068     	LGOTO	_00409_DS_
     0012                           1- 1069     _00402_DS_:
                                    1- 1070     	.line	533, "main.c"; 	if(pwStep == 6)
                                    1- 1071     	BANKSEL	_pwStep
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1072     	MOVR	_pwStep,W
     0014 2406                      1- 1073     	XORIA	0x06
     0015 0903                      1- 1074     	BTRSS	STATUS,2
     0016 3rrr                      1- 1075     	LGOTO	_00400_DS_
                                    1- 1076     	.line	535, "main.c"; 	pwStep = 5;
     0017 2105                      1- 1077     	MOVIA	0x05
     0018 00rr                      1- 1078     	MOVAR	_pwStep
     0019                           1- 1079     _00400_DS_:
                                    1- 1080     	.line	537, "main.c"; 	LEDHOFF();
     0019 2rrr                      1- 1081     	LCALL	_LEDHOFF
                                    1- 1082     	.line	538, "main.c"; 	PORTA ^= 0x08;
     001A 2108                      1- 1083     	MOVIA	0x08
                                    1- 1084     	BANKSEL	_PORTA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 12rr                      1- 1085     	XORAR	_PORTA,F
     001D 3rrr                      1- 1086     	LGOTO	_00409_DS_
     001E                           1- 1087     _00407_DS_:
                                    1- 1088     	.line	543, "main.c"; 	if(workStartFlag == 0)
                                    1- 1089     	BANKSEL	_workStartFlag
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1090     	MOVR	_workStartFlag,W
     0020 0903                      1- 1091     	BTRSS	STATUS,2
     0021 3rrr                      1- 1092     	LGOTO	_00409_DS_
                                    1- 1093     	.line	545, "main.c"; 	LEDHOFF();
     0022 2rrr                      1- 1094     	LCALL	_LEDHOFF
                                    1- 1095     	.line	546, "main.c"; 	LEDLOFF();	
     0023 2rrr                      1- 1096     	LCALL	_LEDLOFF
     0024                           1- 1097     _00409_DS_:
                                    1- 1098     	.line	550, "main.c"; 	}
                                    1- 1099     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1- 1100     ; exit point of _chrgCtr
                                    1- 1102     ;***
                                    1- 1103     ;  pBlock Stats: dbName = C
                                    1- 1104     ;***
                                    1- 1105     ;has an exit
                                    1- 1106     ;1 compiler assigned register :
                                    1- 1107     ;   r0x1028
                                    1- 1108     ;; Starting pCode block
                                    1- 1109     .segment "code"; module=main, function=_keyRead
                                    1- 1111     ;local variable name mapping:
     0000                           1- 1113     _keyRead:
                                    1- 1114     ; 2 exit points
                                    1- 1115     	.line	480, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1116     	BANKSEL	r0x1028
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1117     	MOVAR	r0x1028
                                    1- 1118     	.line	482, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1119     	MOVR	r0x1028,W
     0003 0D03                      1- 1120     	BTRSC	STATUS,2
     0004 3rrr                      1- 1121     	LGOTO	_00392_DS_
                                    1- 1122     	.line	484, "main.c"; 	keyCount++;
                                    1- 1123     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1124     	INCR	_keyCount,F
                                    1- 1125     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1126     	.line	485, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1127     	MOVIA	0xc8
     0008 04rr                      1- 1128     	SUBAR	_keyCount,W
     0009 0803                      1- 1129     	BTRSS	STATUS,0
     000A 3rrr                      1- 1130     	LGOTO	_00393_DS_
                                    1- 1131     	.line	487, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1132     	MOVIA	0xc8
     000C 00rr                      1- 1133     	MOVAR	_keyCount
                                    1- 1134     	.line	488, "main.c"; 	if(!longPressFlag)
                                    1- 1135     	BANKSEL	_Status
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 0Crr                      1- 1136     	BTRSC	_Status,1
     000F 3rrr                      1- 1137     	LGOTO	_00393_DS_
                                    1- 1138     	.line	490, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1139     	BSR	_Status,1
                                    1- 1140     	.line	491, "main.c"; 	return 2;
     0011 2102                      1- 1141     	MOVIA	0x02
     0012 3rrr                      1- 1142     	LGOTO	_00394_DS_
                                    1- 1143     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 1144     _00392_DS_:
                                    1- 1145     	.line	497, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 1146     	MOVIA	0xc8
                                    1- 1147     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1148     	SUBAR	_keyCount,W
     0016 0803                      1- 1149     	BTRSS	STATUS,0
     0017 3rrr                      1- 1150     	LGOTO	_00389_DS_
                                    1- 1151     	.line	499, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1152     	CLRR	_keyCount
                                    1- 1153     	.line	500, "main.c"; 	longPressFlag = 0;
                                    1- 1154     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Crr                      1- 1155     	BCR	_Status,1
                                    1- 1156     	.line	501, "main.c"; 	return	0;
     001B 2100                      1- 1157     	MOVIA	0x00
     001C 3rrr                      1- 1158     	LGOTO	_00394_DS_
                                    1- 1159     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 1160     _00389_DS_:
                                    1- 1161     	.line	503, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 1162     	MOVIA	0x08
                                    1- 1163     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 1164     	SUBAR	_keyCount,W
     0020 0803                      1- 1165     	BTRSS	STATUS,0
     0021 3rrr                      1- 1166     	LGOTO	_00390_DS_
                                    1- 1167     	.line	505, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1168     	CLRR	_keyCount
                                    1- 1169     	.line	506, "main.c"; 	return	1;
     0023 2101                      1- 1170     	MOVIA	0x01
     0024 3rrr                      1- 1171     	LGOTO	_00394_DS_
     0025                           1- 1172     _00390_DS_:
                                    1- 1173     	.line	508, "main.c"; 	keyCount = 0;
                                    1- 1174     	BANKSEL	_keyCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 1175     	CLRR	_keyCount
     0027                           1- 1176     _00393_DS_:
                                    1- 1177     	.line	510, "main.c"; 	return 0;
     0027 2100                      1- 1178     	MOVIA	0x00
     0028                           1- 1179     _00394_DS_:
                                    1- 1180     	.line	511, "main.c"; 	}
                                    1- 1181     	RETURN	
     0028 0010                      3-   26 m1      ret
                                    1- 1182     ; exit point of _keyRead
                                    1- 1184     ;***
                                    1- 1185     ;  pBlock Stats: dbName = C
                                    1- 1186     ;***
                                    1- 1187     ;has an exit
                                    1- 1188     ;functions called:
                                    1- 1189     ;   _LedInput
                                    1- 1190     ;   _pwmStop
                                    1- 1191     ;   _LedInput
                                    1- 1192     ;   _pwmStop
                                    1- 1193     ;; Starting pCode block
                                    1- 1194     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1196     _gotoSleep:
                                    1- 1197     ; 2 exit points
                                    1- 1198     	.line	460, "main.c"; 	LedInput();
     0000 2rrr                      1- 1199     	LCALL	_LedInput
                                    1- 1200     	.line	461, "main.c"; 	sleepTime = 0;
                                    1- 1201     	BANKSEL	_sleepTime
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1- 1202     	CLRR	_sleepTime
     0003 02rr                      1- 1203     	CLRR	(_sleepTime + 1)
                                    1- 1204     	.line	462, "main.c"; 	pwmStop();
     0004 2rrr                      1- 1205     	LCALL	_pwmStop
                                    1- 1206     	.line	463, "main.c"; 	workStep = 0;
                                    1- 1207     	BANKSEL	_workStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1208     	CLRR	_workStep
                                    1- 1209     	.line	464, "main.c"; 	AWUCON = 0x60;
     0007 2160                      1- 1210     	MOVIA	0x60
     0008 00rr                      1- 1211     	MOVAR	_AWUCON
                                    1- 1212     	.line	465, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0009 210B                      1- 1213     	MOVIA	0x0b
     000A 00rr                      1- 1214     	MOVAR	_INTE
                                    1- 1215     	.line	466, "main.c"; 	PCON =  C_LVR_En;	
     000B 2108                      1- 1216     	MOVIA	0x08
     000C 00rr                      1- 1217     	MOVAR	_PCON
                                    1- 1218     	.line	467, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000D 02rr                      1- 1219     	CLRR	_INTF
                                    1- 1220     	.line	468, "main.c"; 	CLRWDT();
     000E 0002                      1- 1221     	clrwdt
                                    1- 1222     	.line	469, "main.c"; 	ENI();
     000F 0004                      1- 1223     	ENI
                                    1- 1224     	.line	470, "main.c"; 	SLEEP();
     0010 0001                      1- 1225     	sleep
                                    1- 1226     	.line	471, "main.c"; 	AWUCON = 0x00;
     0011 02rr                      1- 1227     	CLRR	_AWUCON
                                    1- 1228     	.line	472, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0012 2101                      1- 1229     	MOVIA	0x01
     0013 00rr                      1- 1230     	MOVAR	_INTE
                                    1- 1231     	.line	473, "main.c"; 	INTF = 0;
     0014 02rr                      1- 1232     	CLRR	_INTF
                                    1- 1233     	.line	475, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0015 21A8                      1- 1234     	MOVIA	0xa8
     0016 00rr                      1- 1235     	MOVAR	_PCON
                                    1- 1236     	.line	477, "main.c"; 	}
                                    1- 1237     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 1238     ; exit point of _gotoSleep
                                    1- 1240     ;***
                                    1- 1241     ;  pBlock Stats: dbName = C
                                    1- 1242     ;***
                                    1- 1243     ;has an exit
                                    1- 1244     ;functions called:
                                    1- 1245     ;   _keyRead
                                    1- 1246     ;   _pwmInit
                                    1- 1247     ;   _pwmStop
                                    1- 1248     ;   _LEDHOFF
                                    1- 1249     ;   _LEDLOFF
                                    1- 1250     ;   _pwmInit
                                    1- 1251     ;   _keyRead
                                    1- 1252     ;   _pwmInit
                                    1- 1253     ;   _pwmStop
                                    1- 1254     ;   _LEDHOFF
                                    1- 1255     ;   _LEDLOFF
                                    1- 1256     ;   _pwmInit
                                    1- 1257     ;1 compiler assigned register :
                                    1- 1258     ;   r0x102A
                                    1- 1259     ;; Starting pCode block
                                    1- 1260     .segment "code"; module=main, function=_keyCtr
                                    1- 1262     ;local variable name mapping:
     0000                           1- 1264     _keyCtr:
                                    1- 1265     ; 2 exit points
                                    1- 1266     	.line	402, "main.c"; 	if(workStep > 0)
                                    1- 1267     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1268     	MOVR	_workStep,W
     0002 0D03                      1- 1269     	BTRSC	STATUS,2
     0003 3rrr                      1- 1270     	LGOTO	_00349_DS_
                                    1- 1271     	.line	404, "main.c"; 	PORTB |= 0x02;
     0004 18rr                      1- 1272     	BSR	_PORTB,1
     0005 3rrr                      1- 1273     	LGOTO	_00350_DS_
     0006                           1- 1274     _00349_DS_:
                                    1- 1275     	.line	408, "main.c"; 	PORTB &= 0xFD;
     0006 1Crr                      1- 1276     	BCR	_PORTB,1
     0007                           1- 1277     _00350_DS_:
                                    1- 1278     	.line	411, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 1279     	BANKSEL	_PORTA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 07rr                      1- 1280     	COMR	_PORTA,W
                                    1- 1281     	BANKSEL	r0x102A
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1282     	MOVAR	r0x102A
     000B 2140                      1- 1283     	MOVIA	0x40
     000C 10rr                      1- 1284     	ANDAR	r0x102A,F
     000D 01rr                      1- 1285     	MOVR	r0x102A,W
     000E 2rrr                      1- 1286     	LCALL	_keyRead
                                    1- 1287     	BANKSEL	r0x102A
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 1288     	MOVAR	r0x102A
                                    1- 1289     	.line	412, "main.c"; 	if(kclick == 1 && workStep > 0)
     0011 2401                      1- 1290     	XORIA	0x01
     0012 0903                      1- 1291     	BTRSS	STATUS,2
     0013 3rrr                      1- 1292     	LGOTO	_00370_DS_
                                    1- 1293     	BANKSEL	_workStep
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 1294     	MOVR	_workStep,W
     0016 0D03                      1- 1295     	BTRSC	STATUS,2
     0017 3rrr                      1- 1296     	LGOTO	_00370_DS_
                                    1- 1297     	.line	414, "main.c"; 	count500ms = 0;
                                    1- 1298     	BANKSEL	_count500ms
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1- 1299     	CLRR	_count500ms
                                    1- 1300     	.line	415, "main.c"; 	if(++workStep > 4)
                                    1- 1301     	BANKSEL	_workStep
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 05rr                      1- 1302     	INCR	_workStep,F
                                    1- 1303     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1304     ;;unsigned compare: left >= lit (0x5=5), size=1
     001C 2105                      1- 1305     	MOVIA	0x05
     001D 04rr                      1- 1306     	SUBAR	_workStep,W
     001E 0803                      1- 1307     	BTRSS	STATUS,0
     001F 3rrr                      1- 1308     	LGOTO	_00352_DS_
                                    1- 1309     	.line	416, "main.c"; 	workStep = 1;
     0020 2101                      1- 1310     	MOVIA	0x01
     0021 00rr                      1- 1311     	MOVAR	_workStep
     0022                           1- 1312     _00352_DS_:
                                    1- 1313     	.line	418, "main.c"; 	duty = 1;
     0022 2101                      1- 1314     	MOVIA	0x01
                                    1- 1315     	BANKSEL	_duty
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1316     	MOVAR	_duty
     0025 02rr                      1- 1317     	CLRR	(_duty + 1)
                                    1- 1318     	.line	419, "main.c"; 	fgCount = 0;
                                    1- 1319     	BANKSEL	_fgCount
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 02rr                      1- 1320     	CLRR	_fgCount
     0028 02rr                      1- 1321     	CLRR	(_fgCount + 1)
                                    1- 1322     	.line	420, "main.c"; 	workStartFlag = 0;
                                    1- 1323     	BANKSEL	_workStartFlag
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 02rr                      1- 1324     	CLRR	_workStartFlag
                                    1- 1325     	.line	421, "main.c"; 	if(workStep == 1)
                                    1- 1326     	BANKSEL	_workStep
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 1327     	MOVR	_workStep,W
     002D 2401                      1- 1328     	XORIA	0x01
     002E 0903                      1- 1329     	BTRSS	STATUS,2
     002F 3rrr                      1- 1330     	LGOTO	_00362_DS_
                                    1- 1331     	.line	422, "main.c"; 	maxDuty = 35;
     0030 2123                      1- 1332     	MOVIA	0x23
                                    1- 1333     	BANKSEL	_maxDuty
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 00rr                      1- 1334     	MOVAR	_maxDuty
     0033 3rrr                      1- 1335     	LGOTO	_00363_DS_
     0034                           1- 1336     _00362_DS_:
                                    1- 1337     	.line	423, "main.c"; 	else if(workStep == 2)
                                    1- 1338     	BANKSEL	_workStep
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 1339     	MOVR	_workStep,W
     0036 2402                      1- 1340     	XORIA	0x02
     0037 0903                      1- 1341     	BTRSS	STATUS,2
     0038 3rrr                      1- 1342     	LGOTO	_00359_DS_
                                    1- 1343     	.line	424, "main.c"; 	maxDuty = 15;
     0039 210F                      1- 1344     	MOVIA	0x0f
                                    1- 1345     	BANKSEL	_maxDuty
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 00rr                      1- 1346     	MOVAR	_maxDuty
     003C 3rrr                      1- 1347     	LGOTO	_00363_DS_
     003D                           1- 1348     _00359_DS_:
                                    1- 1349     	.line	425, "main.c"; 	else if(workStep == 3)
                                    1- 1350     	BANKSEL	_workStep
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1- 1351     	MOVR	_workStep,W
     003F 2403                      1- 1352     	XORIA	0x03
     0040 0903                      1- 1353     	BTRSS	STATUS,2
     0041 3rrr                      1- 1354     	LGOTO	_00356_DS_
                                    1- 1355     	.line	426, "main.c"; 	maxDuty = 7;
     0042 2107                      1- 1356     	MOVIA	0x07
                                    1- 1357     	BANKSEL	_maxDuty
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 00rr                      1- 1358     	MOVAR	_maxDuty
     0045 3rrr                      1- 1359     	LGOTO	_00363_DS_
     0046                           1- 1360     _00356_DS_:
                                    1- 1361     	.line	427, "main.c"; 	else if(workStep == 4)
                                    1- 1362     	BANKSEL	_workStep
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1- 1363     	MOVR	_workStep,W
     0048 2404                      1- 1364     	XORIA	0x04
     0049 0903                      1- 1365     	BTRSS	STATUS,2
     004A 3rrr                      1- 1366     	LGOTO	_00363_DS_
                                    1- 1367     	.line	428, "main.c"; 	maxDuty = 1;
     004B 2101                      1- 1368     	MOVIA	0x01
                                    1- 1369     	BANKSEL	_maxDuty
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 00rr                      1- 1370     	MOVAR	_maxDuty
     004E                           1- 1371     _00363_DS_:
                                    1- 1372     	.line	429, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1373     	BANKSEL	_maxDuty
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1- 1374     	MOVR	_maxDuty,W
     0050 00rr                      1- 1375     	SFUN	_PWM2DUTY
                                    1- 1376     	.line	430, "main.c"; 	pwmInit();
     0051 2rrr                      1- 1377     	LCALL	_pwmInit
     0052 3rrr                      1- 1378     	LGOTO	_00373_DS_
     0053                           1- 1379     _00370_DS_:
                                    1- 1380     	.line	432, "main.c"; 	else if(kclick == 2)
                                    1- 1381     	BANKSEL	r0x102A
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 01rr                      1- 1382     	MOVR	r0x102A,W
     0055 2402                      1- 1383     	XORIA	0x02
     0056 0903                      1- 1384     	BTRSS	STATUS,2
     0057 3rrr                      1- 1385     	LGOTO	_00373_DS_
                                    1- 1386     	.line	434, "main.c"; 	if(workStep > 0)
                                    1- 1387     	BANKSEL	_workStep
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 01rr                      1- 1388     	MOVR	_workStep,W
     005A 0D03                      1- 1389     	BTRSC	STATUS,2
     005B 3rrr                      1- 1390     	LGOTO	_00365_DS_
                                    1- 1391     	.line	436, "main.c"; 	workStep = 0;
     005C 02rr                      1- 1392     	CLRR	_workStep
                                    1- 1393     	.line	437, "main.c"; 	pwmStop();
     005D 2rrr                      1- 1394     	LCALL	_pwmStop
                                    1- 1395     	.line	438, "main.c"; 	LEDHOFF();
     005E 2rrr                      1- 1396     	LCALL	_LEDHOFF
                                    1- 1397     	.line	439, "main.c"; 	LEDLOFF();
     005F 2rrr                      1- 1398     	LCALL	_LEDLOFF
                                    1- 1399     	.line	440, "main.c"; 	ledStep = 5;
     0060 2105                      1- 1400     	MOVIA	0x05
                                    1- 1401     	BANKSEL	_ledStep
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 00rr                      1- 1402     	MOVAR	_ledStep
                                    1- 1403     	.line	441, "main.c"; 	workStartFlag = 2;
     0063 2102                      1- 1404     	MOVIA	0x02
                                    1- 1405     	BANKSEL	_workStartFlag
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 00rr                      1- 1406     	MOVAR	_workStartFlag
     0066 3rrr                      1- 1407     	LGOTO	_00373_DS_
     0067                           1- 1408     _00365_DS_:
                                    1- 1409     	.line	445, "main.c"; 	workStartFlag = 1;
     0067 2101                      1- 1410     	MOVIA	0x01
                                    1- 1411     	BANKSEL	_workStartFlag
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 00rr                      1- 1412     	MOVAR	_workStartFlag
                                    1- 1413     	.line	446, "main.c"; 	maxDuty = 75;
     006A 214B                      1- 1414     	MOVIA	0x4b
                                    1- 1415     	BANKSEL	_maxDuty
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 00rr                      1- 1416     	MOVAR	_maxDuty
                                    1- 1417     	.line	447, "main.c"; 	workStep = 1;
     006D 2101                      1- 1418     	MOVIA	0x01
                                    1- 1419     	BANKSEL	_workStep
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 00rr                      1- 1420     	MOVAR	_workStep
                                    1- 1421     	.line	448, "main.c"; 	ledStep = 0;
                                    1- 1422     	BANKSEL	_ledStep
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 02rr                      1- 1423     	CLRR	_ledStep
                                    1- 1424     	.line	449, "main.c"; 	count500ms = 0;
                                    1- 1425     	BANKSEL	_count500ms
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 02rr                      1- 1426     	CLRR	_count500ms
                                    1- 1427     	.line	450, "main.c"; 	pwmInit();
     0074 2rrr                      1- 1428     	LCALL	_pwmInit
                                    1- 1429     	.line	451, "main.c"; 	duty = 1;
     0075 2101                      1- 1430     	MOVIA	0x01
                                    1- 1431     	BANKSEL	_duty
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 00rr                      1- 1432     	MOVAR	_duty
     0078 02rr                      1- 1433     	CLRR	(_duty + 1)
                                    1- 1434     	.line	452, "main.c"; 	fgCount = 0;
                                    1- 1435     	BANKSEL	_fgCount
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 02rr                      1- 1436     	CLRR	_fgCount
     007B 02rr                      1- 1437     	CLRR	(_fgCount + 1)
     007C                           1- 1438     _00373_DS_:
                                    1- 1439     	.line	456, "main.c"; 	}
                                    1- 1440     	RETURN	
     007C 0010                      3-   26 m1      ret
                                    1- 1441     ; exit point of _keyCtr
                                    1- 1443     ;***
                                    1- 1444     ;  pBlock Stats: dbName = C
                                    1- 1445     ;***
                                    1- 1446     ;functions called:
                                    1- 1447     ;   _pwmInit
                                    1- 1448     ;   _pwmInit
                                    1- 1449     ;; Starting pCode block
                                    1- 1450     .segment "code"; module=main, function=_ledCtr
     0000                           1- 1452     _ledCtr:
                                    1- 1453     ; 0 exit points
                                    1- 1454     	.line	371, "main.c"; 	if(workStartFlag == 1)
                                    1- 1455     	BANKSEL	_workStartFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1456     	MOVR	_workStartFlag,W
     0002 2401                      1- 1457     	XORIA	0x01
     0003 0903                      1- 1458     	BTRSS	STATUS,2
     0004 3rrr                      1- 1459     	LGOTO	_00341_DS_
                                    1- 1460     	.line	374, "main.c"; 	if(++ledStep > 4)
                                    1- 1461     	BANKSEL	_ledStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1462     	INCR	_ledStep,F
                                    1- 1463     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1464     ;;unsigned compare: left >= lit (0x5=5), size=1
     0007 2105                      1- 1465     	MOVIA	0x05
     0008 04rr                      1- 1466     	SUBAR	_ledStep,W
     0009 0803                      1- 1467     	BTRSS	STATUS,0
     000A 3rrr                      1- 1468     	LGOTO	_00343_DS_
                                    1- 1469     	.line	376, "main.c"; 	ledStep = workStep;
                                    1- 1470     	BANKSEL	_workStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1471     	MOVR	_workStep,W
                                    1- 1472     	BANKSEL	_ledStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1473     	MOVAR	_ledStep
                                    1- 1474     	.line	377, "main.c"; 	workStartFlag = 3;
     000F 2103                      1- 1475     	MOVIA	0x03
                                    1- 1476     	BANKSEL	_workStartFlag
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1477     	MOVAR	_workStartFlag
     0012 3rrr                      1- 1478     	LGOTO	_00343_DS_
     0013                           1- 1479     _00341_DS_:
                                    1- 1480     	.line	381, "main.c"; 	else if(workStartFlag == 2)
                                    1- 1481     	BANKSEL	_workStartFlag
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1482     	MOVR	_workStartFlag,W
     0015 2402                      1- 1483     	XORIA	0x02
     0016 0903                      1- 1484     	BTRSS	STATUS,2
     0017 3rrr                      1- 1485     	LGOTO	_00338_DS_
                                    1- 1486     	.line	383, "main.c"; 	if(ledStep > 0)
                                    1- 1487     	BANKSEL	_ledStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1488     	MOVR	_ledStep,W
     001A 0D03                      1- 1489     	BTRSC	STATUS,2
     001B 3rrr                      1- 1490     	LGOTO	_00343_DS_
                                    1- 1491     	.line	385, "main.c"; 	ledStep--;
     001C 17rr                      1- 1492     	DECRSZ	_ledStep,F
                                    1- 1493     	.line	386, "main.c"; 	if(ledStep == 0)
     001D 3rrr                      1- 1494     	LGOTO	_00343_DS_
                                    1- 1495     	.line	387, "main.c"; 	workStartFlag = 0;
                                    1- 1496     	BANKSEL	_workStartFlag
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 02rr                      1- 1497     	CLRR	_workStartFlag
     0020 3rrr                      1- 1498     	LGOTO	_00343_DS_
     0021                           1- 1499     _00338_DS_:
                                    1- 1500     	.line	392, "main.c"; 	ledStep = workStep;
                                    1- 1501     	BANKSEL	_workStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1502     	MOVR	_workStep,W
                                    1- 1503     	BANKSEL	_ledStep
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1504     	MOVAR	_ledStep
                                    1- 1505     	.line	393, "main.c"; 	if(workStep)
                                    1- 1506     	BANKSEL	_workStep
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 1507     	MOVR	_workStep,W
     0027 0903                      1- 1508     	BTRSS	STATUS,2
                                    1- 1509     	.line	394, "main.c"; 	pwmInit();
     0028 2rrr                      1- 1510     	LCALL	_pwmInit
     0029                           1- 1511     _00343_DS_:
                                    1- 1512     	.line	397, "main.c"; 	}
                                    1- 1513     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1- 1515     ;***
                                    1- 1516     ;  pBlock Stats: dbName = C
                                    1- 1517     ;***
                                    1- 1518     ;has an exit
                                    1- 1519     ;functions called:
                                    1- 1520     ;   _LEDLON
                                    1- 1521     ;   _LEDHON
                                    1- 1522     ;   _LEDHOFF
                                    1- 1523     ;   _LEDLOFF
                                    1- 1524     ;   _LEDHON
                                    1- 1525     ;   _LEDHOFF
                                    1- 1526     ;   _LEDHON
                                    1- 1527     ;   _LEDLOFF
                                    1- 1528     ;   _LEDHOFF
                                    1- 1529     ;   _LEDLON
                                    1- 1530     ;   _LEDHON
                                    1- 1531     ;   _LEDHOFF
                                    1- 1532     ;   _LEDLOFF
                                    1- 1533     ;   _LEDHON
                                    1- 1534     ;   _LEDHOFF
                                    1- 1535     ;   _LEDHON
                                    1- 1536     ;   _LEDLOFF
                                    1- 1537     ;   _LEDHOFF
                                    1- 1538     ;; Starting pCode block
                                    1- 1539     .segment "code"; module=main, function=_LedCtr2
     0000                           1- 1541     _LedCtr2:
                                    1- 1542     ; 2 exit points
                                    1- 1543     	.line	326, "main.c"; 	if(++startStep > 6)
                                    1- 1544     	BANKSEL	_startStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1545     	INCR	_startStep,F
                                    1- 1546     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1547     ;;unsigned compare: left >= lit (0x7=7), size=1
     0002 2107                      1- 1548     	MOVIA	0x07
     0003 04rr                      1- 1549     	SUBAR	_startStep,W
     0004 0803                      1- 1550     	BTRSS	STATUS,0
     0005 3rrr                      1- 1551     	LGOTO	_00301_DS_
                                    1- 1552     	.line	328, "main.c"; 	workStartFlag = 0;
                                    1- 1553     	BANKSEL	_workStartFlag
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 1554     	CLRR	_workStartFlag
                                    1- 1555     	.line	329, "main.c"; 	startStep = 0;
                                    1- 1556     	BANKSEL	_startStep
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 1557     	CLRR	_startStep
                                    1- 1558     	.line	330, "main.c"; 	ledStep = workStep;
                                    1- 1559     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1560     	MOVR	_workStep,W
                                    1- 1561     	BANKSEL	_ledStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1562     	MOVAR	_ledStep
     000E                           1- 1563     _00301_DS_:
                                    1- 1564     	.line	334, "main.c"; 	if(startStep == 1)
                                    1- 1565     	BANKSEL	_startStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1566     	MOVR	_startStep,W
     0010 2401                      1- 1567     	XORIA	0x01
     0011 0903                      1- 1568     	BTRSS	STATUS,2
     0012 3rrr                      1- 1569     	LGOTO	_00322_DS_
                                    1- 1570     	.line	336, "main.c"; 	if(pwStep == 1)
                                    1- 1571     	BANKSEL	_pwStep
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1572     	MOVR	_pwStep,W
     0015 2401                      1- 1573     	XORIA	0x01
     0016 0903                      1- 1574     	BTRSS	STATUS,2
     0017 3rrr                      1- 1575     	LGOTO	_00305_DS_
                                    1- 1576     	.line	338, "main.c"; 	LEDLON();
     0018 2rrr                      1- 1577     	LCALL	_LEDLON
     0019 3rrr                      1- 1578     	LGOTO	_00324_DS_
                                    1- 1579     ;;unsigned compare: left < lit (0x2=2), size=1
     001A                           1- 1580     _00305_DS_:
                                    1- 1581     	.line	340, "main.c"; 	else if(pwStep >= 2)
     001A 2102                      1- 1582     	MOVIA	0x02
                                    1- 1583     	BANKSEL	_pwStep
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 04rr                      1- 1584     	SUBAR	_pwStep,W
     001D 0803                      1- 1585     	BTRSS	STATUS,0
     001E 3rrr                      1- 1586     	LGOTO	_00324_DS_
                                    1- 1587     	.line	342, "main.c"; 	LEDHON();
     001F 2rrr                      1- 1588     	LCALL	_LEDHON
     0020 3rrr                      1- 1589     	LGOTO	_00324_DS_
     0021                           1- 1590     _00322_DS_:
                                    1- 1591     	.line	345, "main.c"; 	else if(startStep == 2)
                                    1- 1592     	BANKSEL	_startStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1593     	MOVR	_startStep,W
     0023 2402                      1- 1594     	XORIA	0x02
     0024 0903                      1- 1595     	BTRSS	STATUS,2
     0025 3rrr                      1- 1596     	LGOTO	_00319_DS_
                                    1- 1597     	.line	347, "main.c"; 	LEDHOFF();
     0026 2rrr                      1- 1598     	LCALL	_LEDHOFF
                                    1- 1599     	.line	348, "main.c"; 	LEDLOFF();
     0027 2rrr                      1- 1600     	LCALL	_LEDLOFF
     0028 3rrr                      1- 1601     	LGOTO	_00324_DS_
     0029                           1- 1602     _00319_DS_:
                                    1- 1603     	.line	350, "main.c"; 	else if(startStep == 3 && pwStep >= 3)
                                    1- 1604     	BANKSEL	_startStep
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 1605     	MOVR	_startStep,W
     002B 2403                      1- 1606     	XORIA	0x03
     002C 0903                      1- 1607     	BTRSS	STATUS,2
     002D 3rrr                      1- 1608     	LGOTO	_00315_DS_
                                    1- 1609     ;;unsigned compare: left < lit (0x3=3), size=1
     002E 2103                      1- 1610     	MOVIA	0x03
                                    1- 1611     	BANKSEL	_pwStep
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 04rr                      1- 1612     	SUBAR	_pwStep,W
     0031 0803                      1- 1613     	BTRSS	STATUS,0
     0032 3rrr                      1- 1614     	LGOTO	_00315_DS_
                                    1- 1615     	.line	352, "main.c"; 	LEDHON();
     0033 2rrr                      1- 1616     	LCALL	_LEDHON
     0034 3rrr                      1- 1617     	LGOTO	_00324_DS_
     0035                           1- 1618     _00315_DS_:
                                    1- 1619     	.line	354, "main.c"; 	else if(startStep == 4)
                                    1- 1620     	BANKSEL	_startStep
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1621     	MOVR	_startStep,W
     0037 2404                      1- 1622     	XORIA	0x04
     0038 0903                      1- 1623     	BTRSS	STATUS,2
     0039 3rrr                      1- 1624     	LGOTO	_00312_DS_
                                    1- 1625     	.line	356, "main.c"; 	LEDHOFF();
     003A 2rrr                      1- 1626     	LCALL	_LEDHOFF
     003B 3rrr                      1- 1627     	LGOTO	_00324_DS_
     003C                           1- 1628     _00312_DS_:
                                    1- 1629     	.line	358, "main.c"; 	else if(startStep == 5 && pwStep >= 4)
                                    1- 1630     	BANKSEL	_startStep
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 1631     	MOVR	_startStep,W
     003E 2405                      1- 1632     	XORIA	0x05
     003F 0903                      1- 1633     	BTRSS	STATUS,2
     0040 3rrr                      1- 1634     	LGOTO	_00308_DS_
                                    1- 1635     ;;unsigned compare: left < lit (0x4=4), size=1
     0041 2104                      1- 1636     	MOVIA	0x04
                                    1- 1637     	BANKSEL	_pwStep
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 04rr                      1- 1638     	SUBAR	_pwStep,W
     0044 0803                      1- 1639     	BTRSS	STATUS,0
     0045 3rrr                      1- 1640     	LGOTO	_00308_DS_
                                    1- 1641     	.line	360, "main.c"; 	LEDHON();
     0046 2rrr                      1- 1642     	LCALL	_LEDHON
     0047 3rrr                      1- 1643     	LGOTO	_00324_DS_
     0048                           1- 1644     _00308_DS_:
                                    1- 1645     	.line	364, "main.c"; 	LEDLOFF();
     0048 2rrr                      1- 1646     	LCALL	_LEDLOFF
                                    1- 1647     	.line	365, "main.c"; 	LEDHOFF();
     0049 2rrr                      1- 1648     	LCALL	_LEDHOFF
     004A                           1- 1649     _00324_DS_:
                                    1- 1650     	.line	367, "main.c"; 	}
                                    1- 1651     	RETURN	
     004A 0010                      3-   26 m1      ret
                                    1- 1652     ; exit point of _LedCtr2
                                    1- 1654     ;***
                                    1- 1655     ;  pBlock Stats: dbName = C
                                    1- 1656     ;***
                                    1- 1657     ;has an exit
                                    1- 1658     ;1 compiler assigned register :
                                    1- 1659     ;   r0x102B
                                    1- 1660     ;; Starting pCode block
                                    1- 1661     .segment "code"; module=main, function=_workCtr
                                    1- 1663     ;local variable name mapping:
     0000                           1- 1665     _workCtr:
                                    1- 1666     ; 2 exit points
                                    1- 1667     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1668     ;;unsigned compare: left >= lit (0x47=71), size=2
                                    1- 1669     	.line	294, "main.c"; 	if(fgPRD > 70)
     0000 2100                      1- 1670     	MOVIA	0x00
                                    1- 1671     	BANKSEL	_fgPRD
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1672     	SUBAR	(_fgPRD + 1),W
     0003 0903                      1- 1673     	BTRSS	STATUS,2
     0004 3rrr                      1- 1674     	LGOTO	_00295_DS_
     0005 2147                      1- 1675     	MOVIA	0x47
     0006 04rr                      1- 1676     	SUBAR	_fgPRD,W
     0007                           1- 1677     _00295_DS_:
     0007 0803                      1- 1678     	BTRSS	STATUS,0
     0008 3rrr                      1- 1679     	LGOTO	_00276_DS_
                                    1- 1680     	.line	297, "main.c"; 	u8t minDuty = 20;
     0009 2114                      1- 1681     	MOVIA	0x14
                                    1- 1682     	BANKSEL	r0x102B
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1683     	MOVAR	r0x102B
                                    1- 1684     	.line	298, "main.c"; 	if(workStep == 1)
                                    1- 1685     	BANKSEL	_workStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 1686     	MOVR	_workStep,W
     000E 2401                      1- 1687     	XORIA	0x01
     000F 0903                      1- 1688     	BTRSS	STATUS,2
     0010 3rrr                      1- 1689     	LGOTO	_00273_DS_
                                    1- 1690     	.line	299, "main.c"; 	minDuty = 15;
     0011 210F                      1- 1691     	MOVIA	0x0f
                                    1- 1692     	BANKSEL	r0x102B
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 1693     	MOVAR	r0x102B
     0014 3rrr                      1- 1694     	LGOTO	_00274_DS_
     0015                           1- 1695     _00273_DS_:
                                    1- 1696     	.line	300, "main.c"; 	else if(workStep == 2)
                                    1- 1697     	BANKSEL	_workStep
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 1698     	MOVR	_workStep,W
     0017 2402                      1- 1699     	XORIA	0x02
     0018 0903                      1- 1700     	BTRSS	STATUS,2
     0019 3rrr                      1- 1701     	LGOTO	_00270_DS_
                                    1- 1702     	.line	301, "main.c"; 	minDuty = 10;
     001A 210A                      1- 1703     	MOVIA	0x0a
                                    1- 1704     	BANKSEL	r0x102B
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1705     	MOVAR	r0x102B
     001D 3rrr                      1- 1706     	LGOTO	_00274_DS_
     001E                           1- 1707     _00270_DS_:
                                    1- 1708     	.line	302, "main.c"; 	else if(workStep == 3)
                                    1- 1709     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1710     	MOVR	_workStep,W
     0020 2403                      1- 1711     	XORIA	0x03
     0021 0903                      1- 1712     	BTRSS	STATUS,2
     0022 3rrr                      1- 1713     	LGOTO	_00267_DS_
                                    1- 1714     	.line	303, "main.c"; 	minDuty = 6;
     0023 2106                      1- 1715     	MOVIA	0x06
                                    1- 1716     	BANKSEL	r0x102B
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 1717     	MOVAR	r0x102B
     0026 3rrr                      1- 1718     	LGOTO	_00274_DS_
     0027                           1- 1719     _00267_DS_:
                                    1- 1720     	.line	304, "main.c"; 	else if(workStep == 4)
                                    1- 1721     	BANKSEL	_workStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 1722     	MOVR	_workStep,W
     0029 2404                      1- 1723     	XORIA	0x04
     002A 0903                      1- 1724     	BTRSS	STATUS,2
     002B 3rrr                      1- 1725     	LGOTO	_00274_DS_
                                    1- 1726     	.line	305, "main.c"; 	minDuty = 2;
     002C 2102                      1- 1727     	MOVIA	0x02
                                    1- 1728     	BANKSEL	r0x102B
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 1729     	MOVAR	r0x102B
     002F                           1- 1730     _00274_DS_:
                                    1- 1731     	.line	306, "main.c"; 	PWM2DUTY = minDuty;
                                    1- 1732     	BANKSEL	r0x102B
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1733     	MOVR	r0x102B,W
     0031 00rr                      1- 1734     	SFUN	_PWM2DUTY
     0032 3rrr                      1- 1735     	LGOTO	_00278_DS_
     0033                           1- 1736     _00276_DS_:
                                    1- 1737     	.line	319, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1738     	BANKSEL	_maxDuty
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 1739     	MOVR	_maxDuty,W
     0035 00rr                      1- 1740     	SFUN	_PWM2DUTY
     0036                           1- 1741     _00278_DS_:
                                    1- 1742     	.line	321, "main.c"; 	}
                                    1- 1743     	RETURN	
     0036 0010                      3-   26 m1      ret
                                    1- 1744     ; exit point of _workCtr
                                    1- 1746     ;***
                                    1- 1747     ;  pBlock Stats: dbName = C
                                    1- 1748     ;***
                                    1- 1749     ;has an exit
                                    1- 1750     ;; Starting pCode block
                                    1- 1751     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1753     _pwmStop:
                                    1- 1754     ; 2 exit points
                                    1- 1755     	.line	288, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 1756     	CLRA	
     0001 00rr                      1- 1757     	SFUN	_T2CR1
                                    1- 1758     	.line	289, "main.c"; 	}
                                    1- 1759     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1760     ; exit point of _pwmStop
                                    1- 1762     ;***
                                    1- 1763     ;  pBlock Stats: dbName = C
                                    1- 1764     ;***
                                    1- 1765     ;has an exit
                                    1- 1766     ;1 compiler assigned register :
                                    1- 1767     ;   r0x1029
                                    1- 1768     ;; Starting pCode block
                                    1- 1769     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1771     _pwmInit:
                                    1- 1772     ; 2 exit points
                                    1- 1773     	.line	276, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1774     	SFUNR	_T2CR1
                                    1- 1775     	BANKSEL	r0x1029
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1776     	MOVAR	r0x1029
     0003 0Frr                      1- 1777     	BTRSC	r0x1029,7
                                    1- 1778     	.line	277, "main.c"; 	return;
     0004 3rrr                      1- 1779     	LGOTO	_00255_DS_
                                    1- 1780     	.line	278, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1781     	CLRR	_TMRH
                                    1- 1782     	.line	279, "main.c"; 	TMR2 = 128;							//频率为110K
     0006 2180                      1- 1783     	MOVIA	0x80
     0007 00rr                      1- 1784     	SFUN	_TMR2
                                    1- 1785     	.line	282, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 1786     	CLRA	
     0009 00rr                      1- 1787     	SFUN	_T2CR2
                                    1- 1788     	.line	283, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 1789     	MOVIA	0x83
     000B 00rr                      1- 1790     	SFUN	_T2CR1
     000C                           1- 1791     _00255_DS_:
                                    1- 1792     	.line	284, "main.c"; 	}
                                    1- 1793     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 1794     ; exit point of _pwmInit
                                    1- 1796     ;***
                                    1- 1797     ;  pBlock Stats: dbName = C
                                    1- 1798     ;***
                                    1- 1799     ;has an exit
                                    1- 1800     ;functions called:
                                    1- 1801     ;   _delay
                                    1- 1802     ;   _LedInput
                                    1- 1803     ;   _delay
                                    1- 1804     ;   _LedInput
                                    1- 1805     ;1 compiler assigned register :
                                    1- 1806     ;   r0x102C
                                    1- 1807     ;; Starting pCode block
                                    1- 1808     .segment "code"; module=main, function=_LED4ON
     0000                           1- 1810     _LED4ON:
                                    1- 1811     ; 2 exit points
                                    1- 1812     	.line	265, "main.c"; 	PB3P53OUT();
     0000 001r                      1- 1813     	IOSTR	_IOSTB
                                    1- 1814     	BANKSEL	r0x102C
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1815     	MOVAR	r0x102C
     0003 1Drr                      1- 1816     	BCR	r0x102C,3
     0004 01rr                      1- 1817     	MOVR	r0x102C,W
     0005 000r                      1- 1818     	IOST	_IOSTB
                                    1- 1819     	.line	266, "main.c"; 	PA7P02OUT();
     0006 001r                      1- 1820     	IOSTR	_IOSTA
     0007 00rr                      1- 1821     	MOVAR	r0x102C
     0008 1Frr                      1- 1822     	BCR	r0x102C,7
     0009 01rr                      1- 1823     	MOVR	r0x102C,W
     000A 000r                      1- 1824     	IOST	_IOSTA
                                    1- 1825     	.line	267, "main.c"; 	PB3P53ON();
     000B 19rr                      1- 1826     	BSR	_PORTB,3
                                    1- 1827     	.line	268, "main.c"; 	PA7P02OFF();
                                    1- 1828     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Frr                      1- 1829     	BCR	_PORTA,7
                                    1- 1830     	.line	269, "main.c"; 	delay(100);
     000E 2164                      1- 1831     	MOVIA	0x64
     000F 2rrr                      1- 1832     	LCALL	_delay
                                    1- 1833     	.line	270, "main.c"; 	LedInput();
     0010 2rrr                      1- 1834     	LCALL	_LedInput
                                    1- 1835     	.line	271, "main.c"; 	}
                                    1- 1836     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1837     ; exit point of _LED4ON
                                    1- 1839     ;***
                                    1- 1840     ;  pBlock Stats: dbName = C
                                    1- 1841     ;***
                                    1- 1842     ;has an exit
                                    1- 1843     ;functions called:
                                    1- 1844     ;   _delay
                                    1- 1845     ;   _LedInput
                                    1- 1846     ;   _delay
                                    1- 1847     ;   _LedInput
                                    1- 1848     ;1 compiler assigned register :
                                    1- 1849     ;   r0x102D
                                    1- 1850     ;; Starting pCode block
                                    1- 1851     .segment "code"; module=main, function=_LED3ON
     0000                           1- 1853     _LED3ON:
                                    1- 1854     ; 2 exit points
                                    1- 1855     	.line	255, "main.c"; 	PA7P02OUT();
     0000 001r                      1- 1856     	IOSTR	_IOSTA
                                    1- 1857     	BANKSEL	r0x102D
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1858     	MOVAR	r0x102D
     0003 1Frr                      1- 1859     	BCR	r0x102D,7
     0004 01rr                      1- 1860     	MOVR	r0x102D,W
     0005 000r                      1- 1861     	IOST	_IOSTA
                                    1- 1862     	.line	256, "main.c"; 	PA0P40OUT();
     0006 001r                      1- 1863     	IOSTR	_IOSTA
     0007 00rr                      1- 1864     	MOVAR	r0x102D
     0008 1Crr                      1- 1865     	BCR	r0x102D,0
     0009 01rr                      1- 1866     	MOVR	r0x102D,W
     000A 000r                      1- 1867     	IOST	_IOSTA
                                    1- 1868     	.line	257, "main.c"; 	PA7P02OFF();
                                    1- 1869     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 1Frr                      1- 1870     	BCR	_PORTA,7
                                    1- 1871     	.line	258, "main.c"; 	PA0P40ON();
     000D 18rr                      1- 1872     	BSR	_PORTA,0
                                    1- 1873     	.line	259, "main.c"; 	delay(100);
     000E 2164                      1- 1874     	MOVIA	0x64
     000F 2rrr                      1- 1875     	LCALL	_delay
                                    1- 1876     	.line	260, "main.c"; 	LedInput();
     0010 2rrr                      1- 1877     	LCALL	_LedInput
                                    1- 1878     	.line	261, "main.c"; 	}
                                    1- 1879     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1880     ; exit point of _LED3ON
                                    1- 1882     ;***
                                    1- 1883     ;  pBlock Stats: dbName = C
                                    1- 1884     ;***
                                    1- 1885     ;has an exit
                                    1- 1886     ;functions called:
                                    1- 1887     ;   _delay
                                    1- 1888     ;   _LedInput
                                    1- 1889     ;   _delay
                                    1- 1890     ;   _LedInput
                                    1- 1891     ;1 compiler assigned register :
                                    1- 1892     ;   r0x102E
                                    1- 1893     ;; Starting pCode block
                                    1- 1894     .segment "code"; module=main, function=_LED2ON
     0000                           1- 1896     _LED2ON:
                                    1- 1897     ; 2 exit points
                                    1- 1898     	.line	245, "main.c"; 	PA7P02OUT();
     0000 001r                      1- 1899     	IOSTR	_IOSTA
                                    1- 1900     	BANKSEL	r0x102E
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1901     	MOVAR	r0x102E
     0003 1Frr                      1- 1902     	BCR	r0x102E,7
     0004 01rr                      1- 1903     	MOVR	r0x102E,W
     0005 000r                      1- 1904     	IOST	_IOSTA
                                    1- 1905     	.line	246, "main.c"; 	PA0P40OUT();
     0006 001r                      1- 1906     	IOSTR	_IOSTA
     0007 00rr                      1- 1907     	MOVAR	r0x102E
     0008 1Crr                      1- 1908     	BCR	r0x102E,0
     0009 01rr                      1- 1909     	MOVR	r0x102E,W
     000A 000r                      1- 1910     	IOST	_IOSTA
                                    1- 1911     	.line	247, "main.c"; 	PA7P02ON();
                                    1- 1912     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 1Brr                      1- 1913     	BSR	_PORTA,7
                                    1- 1914     	.line	248, "main.c"; 	PA0P40OFF();
     000D 1Crr                      1- 1915     	BCR	_PORTA,0
                                    1- 1916     	.line	249, "main.c"; 	delay(100);
     000E 2164                      1- 1917     	MOVIA	0x64
     000F 2rrr                      1- 1918     	LCALL	_delay
                                    1- 1919     	.line	250, "main.c"; 	LedInput();
     0010 2rrr                      1- 1920     	LCALL	_LedInput
                                    1- 1921     	.line	251, "main.c"; 	}
                                    1- 1922     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1923     ; exit point of _LED2ON
                                    1- 1925     ;***
                                    1- 1926     ;  pBlock Stats: dbName = C
                                    1- 1927     ;***
                                    1- 1928     ;has an exit
                                    1- 1929     ;functions called:
                                    1- 1930     ;   _delay
                                    1- 1931     ;   _LedInput
                                    1- 1932     ;   _delay
                                    1- 1933     ;   _LedInput
                                    1- 1934     ;1 compiler assigned register :
                                    1- 1935     ;   r0x102F
                                    1- 1936     ;; Starting pCode block
                                    1- 1937     .segment "code"; module=main, function=_LED1ON
     0000                           1- 1939     _LED1ON:
                                    1- 1940     ; 2 exit points
                                    1- 1941     	.line	235, "main.c"; 	PB3P53OUT();
     0000 001r                      1- 1942     	IOSTR	_IOSTB
                                    1- 1943     	BANKSEL	r0x102F
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1944     	MOVAR	r0x102F
     0003 1Drr                      1- 1945     	BCR	r0x102F,3
     0004 01rr                      1- 1946     	MOVR	r0x102F,W
     0005 000r                      1- 1947     	IOST	_IOSTB
                                    1- 1948     	.line	236, "main.c"; 	PA0P40OUT();
     0006 001r                      1- 1949     	IOSTR	_IOSTA
     0007 00rr                      1- 1950     	MOVAR	r0x102F
     0008 1Crr                      1- 1951     	BCR	r0x102F,0
     0009 01rr                      1- 1952     	MOVR	r0x102F,W
     000A 000r                      1- 1953     	IOST	_IOSTA
                                    1- 1954     	.line	237, "main.c"; 	PB3P53ON();
     000B 19rr                      1- 1955     	BSR	_PORTB,3
                                    1- 1956     	.line	238, "main.c"; 	PA0P40OFF();
                                    1- 1957     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1- 1958     	BCR	_PORTA,0
                                    1- 1959     	.line	239, "main.c"; 	delay(100);
     000E 2164                      1- 1960     	MOVIA	0x64
     000F 2rrr                      1- 1961     	LCALL	_delay
                                    1- 1962     	.line	240, "main.c"; 	LedInput();
     0010 2rrr                      1- 1963     	LCALL	_LedInput
                                    1- 1964     	.line	241, "main.c"; 	}
                                    1- 1965     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1966     ; exit point of _LED1ON
                                    1- 1968     ;***
                                    1- 1969     ;  pBlock Stats: dbName = C
                                    1- 1970     ;***
                                    1- 1971     ;has an exit
                                    1- 1972     ;1 compiler assigned register :
                                    1- 1973     ;   r0x1027
                                    1- 1974     ;; Starting pCode block
                                    1- 1975     .segment "code"; module=main, function=_LedInput
     0000                           1- 1977     _LedInput:
                                    1- 1978     ; 2 exit points
                                    1- 1979     	.line	227, "main.c"; 	IOSTA |= 0x81;
     0000 001r                      1- 1980     	IOSTR	_IOSTA
                                    1- 1981     	BANKSEL	r0x1027
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1982     	MOVAR	r0x1027
     0003 2181                      1- 1983     	MOVIA	0x81
     0004 11rr                      1- 1984     	IORAR	r0x1027,F
     0005 01rr                      1- 1985     	MOVR	r0x1027,W
     0006 000r                      1- 1986     	IOST	_IOSTA
                                    1- 1987     	.line	228, "main.c"; 	IOSTB |= 0x08;
     0007 001r                      1- 1988     	IOSTR	_IOSTB
     0008 00rr                      1- 1989     	MOVAR	r0x1027
     0009 19rr                      1- 1990     	BSR	r0x1027,3
     000A 01rr                      1- 1991     	MOVR	r0x1027,W
     000B 000r                      1- 1992     	IOST	_IOSTB
                                    1- 1993     	.line	229, "main.c"; 	PORTA &= 0x7E;
     000C 217E                      1- 1994     	MOVIA	0x7e
                                    1- 1995     	BANKSEL	_PORTA
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 10rr                      1- 1996     	ANDAR	_PORTA,F
                                    1- 1997     	.line	230, "main.c"; 	PORTB &= 0xF7;
     000F 1Drr                      1- 1998     	BCR	_PORTB,3
                                    1- 1999     	.line	231, "main.c"; 	}
                                    1- 2000     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 2001     ; exit point of _LedInput
                                    1- 2003     ;***
                                    1- 2004     ;  pBlock Stats: dbName = C
                                    1- 2005     ;***
                                    1- 2006     ;has an exit
                                    1- 2007     ;functions called:
                                    1- 2008     ;   _LedInput
                                    1- 2009     ;   _LedInput
                                    1- 2010     ;   _LED4ON
                                    1- 2011     ;   _LED3ON
                                    1- 2012     ;   _LED2ON
                                    1- 2013     ;   _LED1ON
                                    1- 2014     ;   _LedInput
                                    1- 2015     ;   _LedInput
                                    1- 2016     ;   _LED4ON
                                    1- 2017     ;   _LED3ON
                                    1- 2018     ;   _LED2ON
                                    1- 2019     ;   _LED1ON
                                    1- 2020     ;; Starting pCode block
                                    1- 2021     .segment "code"; module=main, function=_ledShow
     0000                           1- 2023     _ledShow:
                                    1- 2024     ; 2 exit points
                                    1- 2025     	.line	205, "main.c"; 	LedInput();
     0000 2rrr                      1- 2026     	LCALL	_LedInput
                                    1- 2027     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2028     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2029     	.line	206, "main.c"; 	switch(ledStep)
     0001 2105                      1- 2030     	MOVIA	0x05
                                    1- 2031     	BANKSEL	_ledStep
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 2032     	SUBAR	_ledStep,W
     0004 0C03                      1- 2033     	BTRSC	STATUS,0
     0005 3rrr                      1- 2034     	LGOTO	_00222_DS_
     0006 21rr                      1- 2035     	MOVIA	((_00228_DS_ >> 8) & 0xff)
     0007 008A                      1- 2036     	MOVAR	PCHBUF
     0008 01rr                      1- 2037     	MOVR	_ledStep,W
     0009 25rr                      1- 2038     	ADDIA	_00228_DS_
     000A 0C03                      1- 2039     	BTRSC	STATUS,0
     000B 058A                      1- 2040     	INCR	PCHBUF,F
     000C 0082                      1- 2041     	MOVAR	PCL
     000D                           1- 2042     _00228_DS_:
     000D 3rrr                      1- 2043     	LGOTO	_00216_DS_
     000E 3rrr                      1- 2044     	LGOTO	_00220_DS_
     000F 3rrr                      1- 2045     	LGOTO	_00219_DS_
     0010 3rrr                      1- 2046     	LGOTO	_00218_DS_
     0011 3rrr                      1- 2047     	LGOTO	_00217_DS_
     0012                           1- 2048     _00216_DS_:
                                    1- 2049     	.line	209, "main.c"; 	LedInput();
     0012 2rrr                      1- 2050     	LCALL	_LedInput
                                    1- 2051     	.line	210, "main.c"; 	break;
     0013 3rrr                      1- 2052     	LGOTO	_00222_DS_
     0014                           1- 2053     _00217_DS_:
                                    1- 2054     	.line	212, "main.c"; 	LED4ON();
     0014 2rrr                      1- 2055     	LCALL	_LED4ON
     0015                           1- 2056     _00218_DS_:
                                    1- 2057     	.line	214, "main.c"; 	LED3ON();
     0015 2rrr                      1- 2058     	LCALL	_LED3ON
     0016                           1- 2059     _00219_DS_:
                                    1- 2060     	.line	216, "main.c"; 	LED2ON();
     0016 2rrr                      1- 2061     	LCALL	_LED2ON
     0017                           1- 2062     _00220_DS_:
                                    1- 2063     	.line	218, "main.c"; 	LED1ON();
     0017 2rrr                      1- 2064     	LCALL	_LED1ON
     0018                           1- 2065     _00222_DS_:
                                    1- 2066     	.line	221, "main.c"; 	}
                                    1- 2067     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 2068     ; exit point of _ledShow
                                    1- 2070     ;***
                                    1- 2071     ;  pBlock Stats: dbName = C
                                    1- 2072     ;***
                                    1- 2073     ;has an exit
                                    1- 2074     ;; Starting pCode block
                                    1- 2075     .segment "code"; module=main, function=_initSys
     0000                           1- 2077     _initSys:
                                    1- 2078     ; 2 exit points
                                    1- 2079     	.line	178, "main.c"; 	DISI();
     0000 0013                      1- 2080     	DISI
                                    1- 2081     	.line	179, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input;
     0001 2170                      1- 2082     	MOVIA	0x70
     0002 000r                      1- 2083     	IOST	_IOSTA
                                    1- 2084     	.line	180, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1- 2085     	MOVIA	0x01
     0004 000r                      1- 2086     	IOST	_IOSTB
                                    1- 2087     	.line	181, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2088     	CLRR	_PORTB
                                    1- 2089     	.line	182, "main.c"; 	PORTA = 0x00;
                                    1- 2090     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 2091     	CLRR	_PORTA
                                    1- 2092     	.line	183, "main.c"; 	APHCON = 0x9F;
     0008 219F                      1- 2093     	MOVIA	0x9f
     0009 000r                      1- 2094     	IOST	_APHCON
                                    1- 2095     	.line	184, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 2096     	MOVIA	0xff
     000B 00rr                      1- 2097     	MOVAR	_BPHCON
                                    1- 2098     	.line	186, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2099     	MOVIA	0x01
     000D 00rr                      1- 2100     	MOVAR	_INTE
                                    1- 2101     	.line	188, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2102     	CLRA	
     000F 000r                      1- 2103     	IOST	_PCON1
                                    1- 2104     	.line	190, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2105     	MOVIA	0x37
     0011 00rr                      1- 2106     	MOVAR	_TMR0
                                    1- 2107     	.line	191, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0012 0200                      1- 2108     	CLRA	
     0013 0003                      1- 2109     	T0MD	
                                    1- 2110     	.line	193, "main.c"; 	PCON1 = C_TMR0_En;
     0014 2101                      1- 2111     	MOVIA	0x01
     0015 000r                      1- 2112     	IOST	_PCON1
                                    1- 2113     	.line	196, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0016 2188                      1- 2114     	MOVIA	0x88
     0017 00rr                      1- 2115     	MOVAR	_PCON
                                    1- 2116     	.line	199, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0018 2101                      1- 2117     	MOVIA	0x01
     0019 000r                      1- 2118     	IOST	_PCON1
                                    1- 2119     	.line	200, "main.c"; 	ENI();
     001A 0004                      1- 2120     	ENI
                                    1- 2121     	.line	201, "main.c"; 	}
                                    1- 2122     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1- 2123     ; exit point of _initSys
                                    1- 2125     ;***
                                    1- 2126     ;  pBlock Stats: dbName = C
                                    1- 2127     ;***
                                    1- 2128     ;has an exit
                                    1- 2129     ;; Starting pCode block
                                    1- 2130     .segment "code"; module=main, function=_fgCtr
     0000                           1- 2132     _fgCtr:
                                    1- 2133     ; 2 exit points
                                    1- 2134     	.line	161, "main.c"; 	if(PORTB & 0x01)
     0000 08rr                      1- 2135     	BTRSS	_PORTB,0
     0001 3rrr                      1- 2136     	LGOTO	_00205_DS_
                                    1- 2137     	.line	163, "main.c"; 	if(preFG == 0)
                                    1- 2138     	BANKSEL	_preFG
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 01rr                      1- 2139     	MOVR	_preFG,W
     0004 0903                      1- 2140     	BTRSS	STATUS,2
     0005 3rrr                      1- 2141     	LGOTO	_00203_DS_
                                    1- 2142     	.line	165, "main.c"; 	fgPRD = fgCount;
                                    1- 2143     	BANKSEL	_fgCount
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1- 2144     	MOVR	_fgCount,W
                                    1- 2145     	BANKSEL	_fgPRD
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 2146     	MOVAR	_fgPRD
                                    1- 2147     	BANKSEL	_fgCount
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 2148     	MOVR	(_fgCount + 1),W
                                    1- 2149     	BANKSEL	_fgPRD
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 2150     	MOVAR	(_fgPRD + 1)
                                    1- 2151     	.line	166, "main.c"; 	fgCount = 0;
                                    1- 2152     	BANKSEL	_fgCount
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 2153     	CLRR	_fgCount
     0010 02rr                      1- 2154     	CLRR	(_fgCount + 1)
     0011                           1- 2155     _00203_DS_:
                                    1- 2156     	.line	168, "main.c"; 	preFG = 1;
     0011 2101                      1- 2157     	MOVIA	0x01
                                    1- 2158     	BANKSEL	_preFG
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2159     	MOVAR	_preFG
     0014 3rrr                      1- 2160     	LGOTO	_00207_DS_
     0015                           1- 2161     _00205_DS_:
                                    1- 2162     	.line	172, "main.c"; 	preFG = 0;
                                    1- 2163     	BANKSEL	_preFG
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 2164     	CLRR	_preFG
     0017                           1- 2165     _00207_DS_:
                                    1- 2166     	.line	174, "main.c"; 	}
                                    1- 2167     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 2168     ; exit point of _fgCtr
                                    1- 2170     ;***
                                    1- 2171     ;  pBlock Stats: dbName = C
                                    1- 2172     ;***
                                    1- 2173     ;has an exit
                                    1- 2174     ;; Starting pCode block
                                    1- 2175     .segment "code"; module=main, function=_LEDLOFF
     0000                           1- 2177     _LEDLOFF:
                                    1- 2178     ; 2 exit points
                                    1- 2179     	.line	155, "main.c"; 	PORTA &= 0xF7;
                                    1- 2180     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Drr                      1- 2181     	BCR	_PORTA,3
                                    1- 2182     	.line	157, "main.c"; 	}
                                    1- 2183     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2184     ; exit point of _LEDLOFF
                                    1- 2186     ;***
                                    1- 2187     ;  pBlock Stats: dbName = C
                                    1- 2188     ;***
                                    1- 2189     ;has an exit
                                    1- 2190     ;; Starting pCode block
                                    1- 2191     .segment "code"; module=main, function=_LEDHOFF
     0000                           1- 2193     _LEDHOFF:
                                    1- 2194     ; 2 exit points
                                    1- 2195     	.line	150, "main.c"; 	PORTA &= 0xFB;
                                    1- 2196     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Drr                      1- 2197     	BCR	_PORTA,2
                                    1- 2198     	.line	152, "main.c"; 	}
                                    1- 2199     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2200     ; exit point of _LEDHOFF
                                    1- 2202     ;***
                                    1- 2203     ;  pBlock Stats: dbName = C
                                    1- 2204     ;***
                                    1- 2205     ;has an exit
                                    1- 2206     ;; Starting pCode block
                                    1- 2207     .segment "code"; module=main, function=_LEDLON
     0000                           1- 2209     _LEDLON:
                                    1- 2210     ; 2 exit points
                                    1- 2211     	.line	145, "main.c"; 	PORTA |= 0x08;
                                    1- 2212     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 2213     	BSR	_PORTA,3
                                    1- 2214     	.line	147, "main.c"; 	}
                                    1- 2215     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2216     ; exit point of _LEDLON
                                    1- 2218     ;***
                                    1- 2219     ;  pBlock Stats: dbName = C
                                    1- 2220     ;***
                                    1- 2221     ;has an exit
                                    1- 2222     ;; Starting pCode block
                                    1- 2223     .segment "code"; module=main, function=_LEDHON
     0000                           1- 2225     _LEDHON:
                                    1- 2226     ; 2 exit points
                                    1- 2227     	.line	140, "main.c"; 	PORTA |= 0x04;
                                    1- 2228     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 2229     	BSR	_PORTA,2
                                    1- 2230     	.line	142, "main.c"; 	}
                                    1- 2231     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2232     ; exit point of _LEDHON
                                    1- 2235     ;	code size estimation:
                                    1- 2236     ;	  781+  181 =   962 instructions ( 2286 byte)
                                    1- 2238     	end
                                    1- 2238     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002C
_00002_DS_              Label    00000025
_00112_DS_              Label    0000002E
_00114_DS_              Label    00000032
_00124_DS_              Label    00000012
_00125_DS_              Label    0000001F
_00129_DS_              Label    00000020
_00140_DS_              Label    00000002
_00181_DS_              Label    0000003D
_00203_DS_              Label    00000011
_00205_DS_              Label    00000015
_00207_DS_              Label    00000017
_00216_DS_              Label    00000012
_00217_DS_              Label    00000014
_00218_DS_              Label    00000015
_00219_DS_              Label    00000016
_00220_DS_              Label    00000017
_00222_DS_              Label    00000018
_00228_DS_              Label    0000000D
_00255_DS_              Label    0000000C
_00267_DS_              Label    00000027
_00270_DS_              Label    0000001E
_00273_DS_              Label    00000015
_00274_DS_              Label    0000002F
_00276_DS_              Label    00000033
_00278_DS_              Label    00000036
_00295_DS_              Label    00000007
_00301_DS_              Label    0000000E
_00305_DS_              Label    0000001A
_00308_DS_              Label    00000048
_00312_DS_              Label    0000003C
_00315_DS_              Label    00000035
_00319_DS_              Label    00000029
_00322_DS_              Label    00000021
_00324_DS_              Label    0000004A
_00338_DS_              Label    00000021
_00341_DS_              Label    00000013
_00343_DS_              Label    00000029
_00349_DS_              Label    00000006
_00350_DS_              Label    00000007
_00352_DS_              Label    00000022
_00356_DS_              Label    00000046
_00359_DS_              Label    0000003D
_00362_DS_              Label    00000034
_00363_DS_              Label    0000004E
_00365_DS_              Label    00000067
_00370_DS_              Label    00000053
_00373_DS_              Label    0000007C
_00389_DS_              Label    0000001D
_00390_DS_              Label    00000025
_00392_DS_              Label    00000013
_00393_DS_              Label    00000027
_00394_DS_              Label    00000028
_00400_DS_              Label    00000019
_00402_DS_              Label    00000012
_00407_DS_              Label    0000001E
_00409_DS_              Label    00000024
_00416_DS_              Label    00000004
_00418_DS_              Label    0000000E
_00430_DS_              Label    00000056
_00431_DS_              Label    00000059
_00435_DS_              Label    0000009E
_00438_DS_              Label    0000008E
_00441_DS_              Label    0000007E
_00444_DS_              Label    0000006E
_00447_DS_              Label    0000003B
_00449_DS_              Label    000000A4
_00475_DS_              Label    00000035
_00476_DS_              Label    00000042
_00477_DS_              Label    00000050
_00478_DS_              Label    00000063
_00479_DS_              Label    00000075
_00480_DS_              Label    00000085
_00481_DS_              Label    00000095
_00488_DS_              Label    0000000E
_00490_DS_              Label    0000002F
_00495_DS_              Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBatAD             Label    00000000
_chrgCtr                Label    00000000
_chrgTime               Label    00000000
_CMPCR                  Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_F_AIN5_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_fgCount                Label    00000000
_fgCtr                  Label    00000000
_fgPRD                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IO_Init                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_LEDHOFF                Label    00000000
_LEDHON                 Label    00000000
_LedInput               Label    00000000
_LEDLOFF                Label    00000000
_LEDLON                 Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_preFG                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN5_DATA            Label    00000000
_R_AIN5_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepTime              Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStartFlag          Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000043
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
r0x101D                 Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1022                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
