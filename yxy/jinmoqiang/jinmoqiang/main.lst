
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_ADMDbits
                                    1-   24     	extern	_ADRbits
                                    1-   25     	extern	_ADVREFHbits
                                    1-   26     	extern	_ADCRbits
                                    1-   27     	extern	_AWUCONbits
                                    1-   28     	extern	_PACONbits
                                    1-   29     	extern	_INTEDGbits
                                    1-   30     	extern	_ANAENbits
                                    1-   31     	extern	_RFCbits
                                    1-   32     	extern	_INTE2bits
                                    1-   33     	extern	_INDF
                                    1-   34     	extern	_TMR0
                                    1-   35     	extern	_PCL
                                    1-   36     	extern	_STATUS
                                    1-   37     	extern	_FSR
                                    1-   38     	extern	_PORTA
                                    1-   39     	extern	_PORTB
                                    1-   40     	extern	_PCON
                                    1-   41     	extern	_BWUCON
                                    1-   42     	extern	_PCHBUF
                                    1-   43     	extern	_ABPLCON
                                    1-   44     	extern	_BPHCON
                                    1-   45     	extern	_INTE
                                    1-   46     	extern	_INTF
                                    1-   47     	extern	_ADMD
                                    1-   48     	extern	_ADR
                                    1-   49     	extern	_ADD
                                    1-   50     	extern	_ADVREFH
                                    1-   51     	extern	_ADCR
                                    1-   52     	extern	_AWUCON
                                    1-   53     	extern	_PACON
                                    1-   54     	extern	_INTEDG
                                    1-   55     	extern	_TMRH
                                    1-   56     	extern	_ANAEN
                                    1-   57     	extern	_RFC
                                    1-   58     	extern	_TM3RH
                                    1-   59     	extern	_INTE2
                                    1-   60     	extern	_TMR1
                                    1-   61     	extern	_T1CR1
                                    1-   62     	extern	_T1CR2
                                    1-   63     	extern	_PWM1DUTY
                                    1-   64     	extern	_PS1CV
                                    1-   65     	extern	_BZ1CR
                                    1-   66     	extern	_IRCR
                                    1-   67     	extern	_TBHP
                                    1-   68     	extern	_TBHD
                                    1-   69     	extern	_TMR2
                                    1-   70     	extern	_T2CR1
                                    1-   71     	extern	_T2CR2
                                    1-   72     	extern	_PWM2DUTY
                                    1-   73     	extern	_PS2CV
                                    1-   74     	extern	_BZ2CR
                                    1-   75     	extern	_OSCCR
                                    1-   76     	extern	_TMR3
                                    1-   77     	extern	_T3CR1
                                    1-   78     	extern	_T3CR2
                                    1-   79     	extern	_PWM3DUTY
                                    1-   80     	extern	_PS3CV
                                    1-   81     	extern	_BZ3CR
                                    1-   82     	extern	_IOSTA
                                    1-   83     	extern	_IOSTB
                                    1-   84     	extern	_APHCON
                                    1-   85     	extern	_PS0CV
                                    1-   86     	extern	_BODCON
                                    1-   87     	extern	_CMPCR
                                    1-   88     	extern	_PCON1
                                    1-   89     	extern	_T0MD
                                    1-   90     	extern	___sdcc_saved_fsr
                                    1-   91     	extern	___sdcc_saved_stk00
                                    1-   92     	extern	___sdcc_saved_stk01
                                    1-   93     	extern	__nyc_ny8_startup
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     ; global declarations
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     	extern	_F_wait_eoc
                                    1-   98     	extern	_F_AIN5_Convert
                                    1-   99     	extern	_checkBatAD
                                    1-  100     	extern	_initAD
                                    1-  101     	extern	_delay
                                    1-  102     	extern	_chrgCtr
                                    1-  103     	extern	_keyRead
                                    1-  104     	extern	_gotoSleep
                                    1-  105     	extern	_keyCtr
                                    1-  106     	extern	_ledCtr
                                    1-  107     	extern	_LedCtr2
                                    1-  108     	extern	_workCtr
                                    1-  109     	extern	_pwmStop
                                    1-  110     	extern	_pwmInit
                                    1-  111     	extern	_LED4ON
                                    1-  112     	extern	_LED3ON
                                    1-  113     	extern	_LED2ON
                                    1-  114     	extern	_LED1ON
                                    1-  115     	extern	_LedInput
                                    1-  116     	extern	_ledShow
                                    1-  117     	extern	_initSys
                                    1-  118     	extern	_fgCtr
                                    1-  119     	extern	_isr
                                    1-  120     	extern	_main
                                    1-  121     	extern	_LEDHON
                                    1-  122     	extern	_LEDLON
                                    1-  123     	extern	_LEDHOFF
                                    1-  124     	extern	_LEDLOFF
                                    1-  125     	extern	_Status
                                    1-  126     	extern	_duty
                                    1-  127     	extern	_intCount
                                    1-  128     	extern	_count500ms
                                    1-  129     	extern	_keyCount
                                    1-  130     	extern	_workStep
                                    1-  131     	extern	_ledStep
                                    1-  132     	extern	_fgCount
                                    1-  133     	extern	_fgPRD
                                    1-  134     	extern	_preFG
                                    1-  135     	extern	_maxDuty
                                    1-  136     	extern	_pwStep
                                    1-  137     	extern	_R_AIN5_DATA
                                    1-  138     	extern	_R_AIN5_DATA_LB
                                    1-  139     	extern	_chrgTime
                                    1-  140     	extern	_startStep
                                    1-  141     	extern	_sleepTime
                                    1-  142     	extern	_count200ms
                                    1-  143     	extern	_workStartFlag
                                    1-  145     	extern PSAVE
                                    1-  146     	extern SSAVE
                                    1-  147     	extern WSAVE
                                    1-  148     	extern STK02
                                    1-  149     	extern STK01
                                    1-  150     	extern STK00
                                    1-  152     .segment "uninit", 0x20000040
 20000040                           1-  153     PSAVE:
                                    1-  154     	.res 1
 20000041                           1-  155     SSAVE:
                                    1-  156     	.res 1
 20000042                           1-  157     WSAVE:
                                    1-  158     	.res 1
 20000043                           1-  159     STK02:
                                    1-  160     	.res 1
 20000044                           1-  161     STK01:
                                    1-  162     	.res 1
 20000045                           1-  163     STK00:
                                    1-  164     	.res 1
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ; global definitions
                                    1-  168     ;--------------------------------------------------------
                                    1-  169     .segment "uninit"
     0000                           1-  170     _R_AIN5_DATA:
                                    1-  171     	.res	2
                                    1-  174     .segment "uninit"
     0000                           1-  175     _R_AIN5_DATA_LB:
                                    1-  176     	.res	1
                                    1-  179     ;--------------------------------------------------------
                                    1-  180     ; absolute symbol definitions
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     ;--------------------------------------------------------
                                    1-  183     ; compiler-defined variables
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1027:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x1031:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x1030:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x102F:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x102E:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x1029:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x102B:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x102C:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x102D:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x102A:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1028:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x101B:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x101C:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1025:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1026:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x101D:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x101E:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x101F:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1022:
                                    1-  241     	.res	1
                                    1-  242     ;--------------------------------------------------------
                                    1-  243     ; initialized data
                                    1-  244     ;--------------------------------------------------------
                                    1-  246     .segment "idata"
     0000                           1-  247     _Status:
     0000 0000                      1-  248     	dw	0x00
                                    1-  252     .segment "idata"
     0000                           1-  253     _duty:
     0000 0000 0000                 1-  254     	dw	0x00, 0x00
                                    1-  258     .segment "idata"
     0000                           1-  259     _intCount:
     0000 0000                      1-  260     	dw	0x00
                                    1-  264     .segment "idata"
     0000                           1-  265     _count500ms:
     0000 0000                      1-  266     	dw	0x00
                                    1-  270     .segment "idata"
     0000                           1-  271     _keyCount:
     0000 0000                      1-  272     	dw	0x00
                                    1-  276     .segment "idata"
     0000                           1-  277     _workStep:
     0000 0000                      1-  278     	dw	0x00
                                    1-  282     .segment "idata"
     0000                           1-  283     _ledStep:
     0000 0000                      1-  284     	dw	0x00
                                    1-  288     .segment "idata"
     0000                           1-  289     _fgCount:
     0000 0000 0000                 1-  290     	dw	0x00, 0x00
                                    1-  294     .segment "idata"
     0000                           1-  295     _fgPRD:
     0000 0000 0000                 1-  296     	dw	0x00, 0x00
                                    1-  300     .segment "idata"
     0000                           1-  301     _preFG:
     0000 0000                      1-  302     	dw	0x00
                                    1-  306     .segment "idata"
     0000                           1-  307     _maxDuty:
     0000 0000                      1-  308     	dw	0x00
                                    1-  312     .segment "idata"
     0000                           1-  313     _pwStep:
     0000 0000                      1-  314     	dw	0x00
                                    1-  318     .segment "idata"
     0000                           1-  319     _chrgTime:
     0000 0000 0000                 1-  320     	dw	0x00, 0x00
                                    1-  324     .segment "idata"
     0000                           1-  325     _startStep:
     0000 0000                      1-  326     	dw	0x00
                                    1-  330     .segment "idata"
     0000                           1-  331     _sleepTime:
     0000 0000 0000                 1-  332     	dw	0x00, 0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _count200ms:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _workStartFlag:
     0000 0000                      1-  344     	dw	0x00
                                    1-  347     ;--------------------------------------------------------
                                    1-  348     ; overlayable items in internal ram 
                                    1-  349     ;--------------------------------------------------------
                                    1-  350     ;	udata_ovr
                                    1-  351     ;--------------------------------------------------------
                                    1-  352     ; reset vector 
                                    1-  353     ;--------------------------------------------------------
                                    1-  354     ORG	0x0000
     0000 3rrr                      1-  355     	LGOTO	__nyc_ny8_startup
                                    1-  356     ;--------------------------------------------------------
                                    1-  357     ; interrupt and initialization code
                                    1-  358     ;--------------------------------------------------------
                                    1-  359     ORG 0x0008
     0008 3rrr                      1-  360     	lgoto	__sdcc_interrupt
                                    1-  362     .segment "code"
     0000                           1-  363     __sdcc_interrupt:
                                    1-  364     ;***
                                    1-  365     ;  pBlock Stats: dbName = I
                                    1-  366     ;***
                                    1-  367     ;2 compiler assigned registers:
                                    1-  368     ;   STK00
                                    1-  369     ;   STK01
                                    1-  370     ;; Starting pCode block
     0000                           1-  371     _isr:
                                    1-  372     ; 0 exit points
                                    1-  373     	.line	73, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  374     	MOVAR	WSAVE
     0001 1503                      1-  375     	SWAPR	STATUS,W
     0002 0283                      1-  376     	CLRR	STATUS
     0003 00rr                      1-  377     	MOVAR	SSAVE
     0004 010A                      1-  378     	MOVR	PCHBUF,W
     0005 028A                      1-  379     	CLRR	PCHBUF
     0006 00rr                      1-  380     	MOVAR	PSAVE
     0007 0104                      1-  381     	MOVR	FSR,W
                                    1-  382     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  383     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  384     	MOVR	STK00,W
                                    1-  385     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  386     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  387     	MOVR	STK01,W
                                    1-  388     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  389     	MOVAR	___sdcc_saved_stk01
                                    1-  390     	.line	75, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  391     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  392     	LGOTO	_00112_DS_
                                    1-  393     	.line	77, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  394     	MOVIA	0x37
     0013 03rr                      1-  395     	ADDAR	_TMR0,F
                                    1-  396     	.line	78, "main.c"; 	++fgCount;
                                    1-  397     	BANKSEL	_fgCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  398     	INCR	_fgCount,F
     0016 0D03                      1-  399     	BTRSC	STATUS,2
     0017 05rr                      1-  400     	INCR	(_fgCount + 1),F
                                    1-  401     	.line	79, "main.c"; 	if(++intCount >= 100)
                                    1-  402     	BANKSEL	_intCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 05rr                      1-  403     	INCR	_intCount,F
                                    1-  404     ;;unsigned compare: left < lit (0x64=100), size=1
     001A 2164                      1-  405     	MOVIA	0x64
     001B 04rr                      1-  406     	SUBAR	_intCount,W
     001C 0803                      1-  407     	BTRSS	STATUS,0
     001D 3rrr                      1-  408     	LGOTO	_00112_DS_
                                    1-  409     	.line	81, "main.c"; 	IntFlag = 1;
                                    1-  410     	BANKSEL	_Status
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 18rr                      1-  411     	BSR	_Status,0
                                    1-  412     	.line	82, "main.c"; 	intCount = 0;
                                    1-  413     	BANKSEL	_intCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 02rr                      1-  414     	CLRR	_intCount
                                    1-  415     	.line	83, "main.c"; 	if(++count500ms >= 40)
                                    1-  416     	BANKSEL	_count500ms
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  417     	INCR	_count500ms,F
                                    1-  418     ;;unsigned compare: left < lit (0x28=40), size=1
     0024 2128                      1-  419     	MOVIA	0x28
     0025 04rr                      1-  420     	SUBAR	_count500ms,W
     0026 0C03                      1-  421     	BTRSC	STATUS,0
                                    1-  422     	.line	84, "main.c"; 	count500ms = 0;
     0027 02rr                      1-  423     	CLRR	_count500ms
                                    1-  424     	.line	85, "main.c"; 	if(++count200ms >= 20)
                                    1-  425     	BANKSEL	_count200ms
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 05rr                      1-  426     	INCR	_count200ms,F
     002A 2114                      1-  427     	MOVIA	0x14
     002B 04rr                      1-  428     	SUBAR	_count200ms,W
     002C 0C03                      1-  429     	BTRSC	STATUS,0
                                    1-  430     	.line	86, "main.c"; 	count200ms = 0;
     002D 02rr                      1-  431     	CLRR	_count200ms
     002E                           1-  432     _00112_DS_:
                                    1-  433     	.line	92, "main.c"; 	if(INTFbits.PABIF)
     002E 08rr                      1-  434     	BTRSS	_INTFbits,1
     002F 3rrr                      1-  435     	LGOTO	_00114_DS_
                                    1-  436     	.line	94, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0030 21FD                      1-  437     	MOVIA	0xfd
     0031 00rr                      1-  438     	MOVAR	_INTF
     0032                           1-  439     _00114_DS_:
                                    1-  440     	.line	97, "main.c"; 	INTF = 0;
     0032 02rr                      1-  441     	CLRR	_INTF
                                    1-  442     	.line	99, "main.c"; 	}
                                    1-  443     	BANKSEL	___sdcc_saved_stk01
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  444     	MOVR	___sdcc_saved_stk01,W
     0035 00rr                      1-  445     	MOVAR	STK01
                                    1-  446     	BANKSEL	___sdcc_saved_stk00
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1-  447     	MOVR	___sdcc_saved_stk00,W
     0038 00rr                      1-  448     	MOVAR	STK00
                                    1-  449     	BANKSEL	___sdcc_saved_fsr
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  450     	MOVR	___sdcc_saved_fsr,W
     003B 0084                      1-  451     	MOVAR	FSR
     003C 01rr                      1-  452     	MOVR	PSAVE,W
     003D 008A                      1-  453     	MOVAR	PCHBUF
     003E 0283                      1-  454     	CLRR	STATUS
     003F 15rr                      1-  455     	SWAPR	SSAVE,W
     0040 0083                      1-  456     	MOVAR	STATUS
     0041 15rr                      1-  457     	SWAPR	WSAVE,F
     0042 15rr                      1-  458     	SWAPR	WSAVE,W
     0043                           1-  459     END_OF_INTERRUPT:
     0043 0011                      1-  460     	RETIE	
                                    1-  462     ;--------------------------------------------------------
                                    1-  463     ; code
                                    1-  464     ;--------------------------------------------------------
                                    1-  465     ;***
                                    1-  466     ;  pBlock Stats: dbName = M
                                    1-  467     ;***
                                    1-  468     ;has an exit
                                    1-  469     ;functions called:
                                    1-  470     ;   _initSys
                                    1-  471     ;   _initAD
                                    1-  472     ;   _ledShow
                                    1-  473     ;   _fgCtr
                                    1-  474     ;   _keyCtr
                                    1-  475     ;   _checkBatAD
                                    1-  476     ;   _ledCtr
                                    1-  477     ;   _chrgCtr
                                    1-  478     ;   _LedCtr2
                                    1-  479     ;   _workCtr
                                    1-  480     ;   _gotoSleep
                                    1-  481     ;   _initSys
                                    1-  482     ;   _initAD
                                    1-  483     ;   _ledShow
                                    1-  484     ;   _fgCtr
                                    1-  485     ;   _keyCtr
                                    1-  486     ;   _checkBatAD
                                    1-  487     ;   _ledCtr
                                    1-  488     ;   _chrgCtr
                                    1-  489     ;   _LedCtr2
                                    1-  490     ;   _workCtr
                                    1-  491     ;   _gotoSleep
                                    1-  492     ;; Starting pCode block
                                    1-  493     .segment "code"; module=main, function=_main
     0000                           1-  495     _main:
                                    1-  496     ; 2 exit points
                                    1-  497     	.line	103, "main.c"; 	initSys();
     0000 2rrr                      1-  498     	LCALL	_initSys
                                    1-  499     	.line	104, "main.c"; 	initAD();
     0001 2rrr                      1-  500     	LCALL	_initAD
     0002                           1-  501     _00140_DS_:
                                    1-  502     	.line	107, "main.c"; 	ledShow();
     0002 2rrr                      1-  503     	LCALL	_ledShow
                                    1-  504     	.line	108, "main.c"; 	CLRWDT();
     0003 0002                      1-  505     	clrwdt
                                    1-  506     	.line	109, "main.c"; 	fgCtr();
     0004 2rrr                      1-  507     	LCALL	_fgCtr
                                    1-  508     	.line	110, "main.c"; 	if(!IntFlag)
                                    1-  509     	BANKSEL	_Status
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 08rr                      1-  510     	BTRSS	_Status,0
     0007 3rrr                      1-  511     	LGOTO	_00140_DS_
                                    1-  512     	.line	112, "main.c"; 	IntFlag = 0;
     0008 1Crr                      1-  513     	BCR	_Status,0
                                    1-  514     	.line	113, "main.c"; 	if((PORTA & 0x20) == 0)
                                    1-  515     	BANKSEL	_PORTA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 0Arr                      1-  516     	BTRSS	_PORTA,5
                                    1-  517     	.line	114, "main.c"; 	keyCtr();
     000B 2rrr                      1-  518     	LCALL	_keyCtr
                                    1-  519     	.line	115, "main.c"; 	if(count200ms == 0)
                                    1-  520     	BANKSEL	_count200ms
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  521     	MOVR	_count200ms,W
     000E 0903                      1-  522     	BTRSS	STATUS,2
     000F 3rrr                      1-  523     	LGOTO	_00124_DS_
                                    1-  524     	.line	117, "main.c"; 	checkBatAD();
     0010 2rrr                      1-  525     	LCALL	_checkBatAD
                                    1-  526     	.line	118, "main.c"; 	ledCtr();
     0011 2rrr                      1-  527     	LCALL	_ledCtr
     0012                           1-  528     _00124_DS_:
                                    1-  529     	.line	120, "main.c"; 	if(count500ms == 0)
                                    1-  530     	BANKSEL	_count500ms
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1-  531     	MOVR	_count500ms,W
     0014 0903                      1-  532     	BTRSS	STATUS,2
     0015 3rrr                      1-  533     	LGOTO	_00129_DS_
                                    1-  534     	.line	122, "main.c"; 	chrgCtr();
     0016 2rrr                      1-  535     	LCALL	_chrgCtr
                                    1-  536     	.line	123, "main.c"; 	if(workStartFlag == 1 || workStartFlag == 3)
                                    1-  537     	BANKSEL	_workStartFlag
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1-  538     	MOVR	_workStartFlag,W
     0019 2401                      1-  539     	XORIA	0x01
     001A 0D03                      1-  540     	BTRSC	STATUS,2
     001B 3rrr                      1-  541     	LGOTO	_00125_DS_
     001C 01rr                      1-  542     	MOVR	_workStartFlag,W
     001D 2403                      1-  543     	XORIA	0x03
     001E 0D03                      1-  544     	BTRSC	STATUS,2
     001F                           1-  545     _00125_DS_:
                                    1-  546     	.line	124, "main.c"; 	LedCtr2();
     001F 2rrr                      1-  547     	LCALL	_LedCtr2
     0020                           1-  548     _00129_DS_:
                                    1-  549     	.line	126, "main.c"; 	if(workStep)
                                    1-  550     	BANKSEL	_workStep
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  551     	MOVR	_workStep,W
     0022 0903                      1-  552     	BTRSS	STATUS,2
                                    1-  553     	.line	127, "main.c"; 	workCtr();
     0023 2rrr                      1-  554     	LCALL	_workCtr
                                    1-  555     	.line	128, "main.c"; 	if(workStep == 0 && keyCount == 0 && workStartFlag == 0 && ((PORTA & 0x20) == 0))
                                    1-  556     	BANKSEL	_workStep
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  557     	MOVR	_workStep,W
     0026 0903                      1-  558     	BTRSS	STATUS,2
     0027 3rrr                      1-  559     	LGOTO	_00140_DS_
                                    1-  560     	BANKSEL	_keyCount
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1-  561     	MOVR	_keyCount,W
     002A 0903                      1-  562     	BTRSS	STATUS,2
     002B 3rrr                      1-  563     	LGOTO	_00140_DS_
                                    1-  564     	BANKSEL	_workStartFlag
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1-  565     	MOVR	_workStartFlag,W
     002E 0903                      1-  566     	BTRSS	STATUS,2
     002F 3rrr                      1-  567     	LGOTO	_00140_DS_
                                    1-  568     	BANKSEL	_PORTA
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 0Err                      1-  569     	BTRSC	_PORTA,5
     0032 3rrr                      1-  570     	LGOTO	_00140_DS_
                                    1-  571     	.line	130, "main.c"; 	if(++sleepTime > 2000)
                                    1-  572     	BANKSEL	_sleepTime
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 05rr                      1-  573     	INCR	_sleepTime,F
     0035 0D03                      1-  574     	BTRSC	STATUS,2
     0036 05rr                      1-  575     	INCR	(_sleepTime + 1),F
                                    1-  576     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  577     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0037 2107                      1-  578     	MOVIA	0x07
     0038 04rr                      1-  579     	SUBAR	(_sleepTime + 1),W
     0039 0903                      1-  580     	BTRSS	STATUS,2
     003A 3rrr                      1-  581     	LGOTO	_00181_DS_
     003B 21D1                      1-  582     	MOVIA	0xd1
     003C 04rr                      1-  583     	SUBAR	_sleepTime,W
     003D                           1-  584     _00181_DS_:
     003D 0803                      1-  585     	BTRSS	STATUS,0
     003E 3rrr                      1-  586     	LGOTO	_00140_DS_
                                    1-  587     	.line	132, "main.c"; 	gotoSleep();
     003F 2rrr                      1-  588     	LCALL	_gotoSleep
     0040 3rrr                      1-  589     	LGOTO	_00140_DS_
                                    1-  590     	.line	136, "main.c"; 	}
                                    1-  591     	RETURN	
     0041 0010                      3-   26 m1      ret
                                    1-  592     ; exit point of _main
                                    1-  594     ;***
                                    1-  595     ;  pBlock Stats: dbName = C
                                    1-  596     ;***
                                    1-  597     ;has an exit
                                    1-  598     ;; Starting pCode block
                                    1-  599     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  601     _F_wait_eoc:
                                    1-  602     ; 2 exit points
     0000                           1-  603     _00507_DS_:
                                    1-  604     	.line	660, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  605     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  606     	LGOTO	_00507_DS_
                                    1-  607     	.line	662, "main.c"; 	}
                                    1-  608     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  609     ; exit point of _F_wait_eoc
                                    1-  611     ;***
                                    1-  612     ;  pBlock Stats: dbName = C
                                    1-  613     ;***
                                    1-  614     ;has an exit
                                    1-  615     ;functions called:
                                    1-  616     ;   _delay
                                    1-  617     ;   _F_wait_eoc
                                    1-  618     ;   _delay
                                    1-  619     ;   _F_wait_eoc
                                    1-  620     ;6 compiler assigned registers:
                                    1-  621     ;   r0x101D
                                    1-  622     ;   r0x101E
                                    1-  623     ;   r0x101F
                                    1-  624     ;   r0x1020
                                    1-  625     ;   r0x1021
                                    1-  626     ;   r0x1022
                                    1-  627     ;; Starting pCode block
                                    1-  628     .segment "code"; module=main, function=_F_AIN5_Convert
                                    1-  630     ;local variable name mapping:
     0000                           1-  633     _F_AIN5_Convert:
                                    1-  634     ; 2 exit points
                                    1-  635     	.line	643, "main.c"; 	void F_AIN5_Convert(char count)
                                    1-  636     	BANKSEL	r0x101D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  637     	MOVAR	r0x101D
                                    1-  638     	.line	645, "main.c"; 	R_AIN5_DATA=R_AIN5_DATA_LB=0x00;   
                                    1-  639     	BANKSEL	_R_AIN5_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  640     	CLRR	_R_AIN5_DATA_LB
                                    1-  641     	BANKSEL	_R_AIN5_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  642     	CLRR	_R_AIN5_DATA
     0006 02rr                      1-  643     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  644     	.line	647, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  645     	MOVIA	0x94
     0008 00rr                      1-  646     	MOVAR	_ADMD
                                    1-  647     	.line	648, "main.c"; 	delay(200);	
     0009 21C8                      1-  648     	MOVIA	0xc8
     000A 2rrr                      1-  649     	LCALL	_delay
                                    1-  650     	.line	649, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  651     	MOVIA	0x01
                                    1-  652     	BANKSEL	r0x101E
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  653     	MOVAR	r0x101E
     000E                           1-  654     _00500_DS_:
                                    1-  655     	BANKSEL	r0x101E
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1-  656     	MOVR	r0x101E,W
                                    1-  657     	BANKSEL	r0x101D
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  658     	SUBAR	r0x101D,W
     0012 0803                      1-  659     	BTRSS	STATUS,0
     0013 3rrr                      1-  660     	LGOTO	_00502_DS_
                                    1-  661     	.line	651, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  662     	BSR	_ADMDbits,6
                                    1-  663     	.line	652, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1-  664     	LCALL	_F_wait_eoc
                                    1-  665     	.line	653, "main.c"; 	R_AIN5_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  666     	MOVIA	0x0f
     0017 10rr                      1-  667     	ANDAR	_ADR,W
                                    1-  668     ;;3	MOVAR	r0x101F
                                    1-  669     	BANKSEL	_R_AIN5_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1-  670     	ADDAR	_R_AIN5_DATA_LB,F
                                    1-  671     	.line	654, "main.c"; 	R_AIN5_DATA    += ADD; 
     001A 01rr                      1-  672     	MOVR	_ADD,W
                                    1-  673     	BANKSEL	r0x101F
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  674     	MOVAR	r0x101F
                                    1-  675     ;;1	CLRR	r0x1020
                                    1-  676     ;;102	MOVR	r0x101F,W
                                    1-  677     ;;100	MOVAR	r0x1021
     001D 2100                      1-  678     	MOVIA	0x00
                                    1-  679     	BANKSEL	r0x1022
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  680     	MOVAR	r0x1022
                                    1-  681     ;;101	MOVR	r0x1021,W
                                    1-  682     	BANKSEL	r0x101F
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  683     	MOVR	r0x101F,W
                                    1-  684     	BANKSEL	_R_AIN5_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1-  685     	ADDAR	_R_AIN5_DATA,F
                                    1-  686     	BANKSEL	r0x1022
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  687     	MOVR	r0x1022,W
     0026 0C03                      1-  688     	BTRSC	STATUS,0
     0027 05rr                      1-  689     	INCR	r0x1022,W
     0028 0D03                      1-  690     	BTRSC	STATUS,2
     0029 3rrr                      1-  691     	LGOTO	_00001_DS_
                                    1-  692     	BANKSEL	_R_AIN5_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1-  693     	ADDAR	(_R_AIN5_DATA + 1),F
     002C                           1-  694     _00001_DS_:
                                    1-  695     	.line	649, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  696     	BANKSEL	r0x101E
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  697     	INCR	r0x101E,F
     002E 3rrr                      1-  698     	LGOTO	_00500_DS_
     002F                           1-  699     _00502_DS_:
                                    1-  700     	.line	656, "main.c"; 	}
                                    1-  701     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1-  702     ; exit point of _F_AIN5_Convert
                                    1-  704     ;***
                                    1-  705     ;  pBlock Stats: dbName = C
                                    1-  706     ;***
                                    1-  707     ;has an exit
                                    1-  708     ;functions called:
                                    1-  709     ;   _F_AIN5_Convert
                                    1-  710     ;   _F_AIN5_Convert
                                    1-  711     ;4 compiler assigned registers:
                                    1-  712     ;   r0x1023
                                    1-  713     ;   r0x1024
                                    1-  714     ;   r0x1025
                                    1-  715     ;   r0x1026
                                    1-  716     ;; Starting pCode block
                                    1-  717     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  719     _checkBatAD:
                                    1-  720     ; 2 exit points
                                    1-  721     	.line	585, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA_LB = 0x00;
                                    1-  722     	BANKSEL	_R_AIN5_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  723     	CLRR	_R_AIN5_DATA_LB
                                    1-  724     	BANKSEL	_R_AIN5_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  725     	CLRR	_R_AIN5_DATA
     0004 02rr                      1-  726     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  727     	.line	586, "main.c"; 	F_AIN5_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  728     	MOVIA	0x08
     0006 2rrr                      1-  729     	LCALL	_F_AIN5_Convert
                                    1-  730     	.line	587, "main.c"; 	R_AIN5_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  731     	BANKSEL	_R_AIN5_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1-  732     	SWAPR	(_R_AIN5_DATA + 1),W
     0009 22F0                      1-  733     	ANDIA	0xf0
     000A 00rr                      1-  734     	MOVAR	(_R_AIN5_DATA + 1)
     000B 15rr                      1-  735     	SWAPR	_R_AIN5_DATA,W
     000C 00rr                      1-  736     	MOVAR	_R_AIN5_DATA
     000D 220F                      1-  737     	ANDIA	0x0f
     000E 11rr                      1-  738     	IORAR	(_R_AIN5_DATA + 1),F
     000F 12rr                      1-  739     	XORAR	_R_AIN5_DATA,F
                                    1-  740     	.line	588, "main.c"; 	R_AIN5_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  741     	MOVIA	0xf0
                                    1-  742     	BANKSEL	_R_AIN5_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1-  743     	ANDAR	_R_AIN5_DATA_LB,F
                                    1-  744     	.line	589, "main.c"; 	R_AIN5_DATA += R_AIN5_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  745     	MOVR	_R_AIN5_DATA_LB,W
                                    1-  746     	BANKSEL	r0x1025
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1-  747     	MOVAR	r0x1025
                                    1-  748     ;;1	MOVAR	r0x1023
                                    1-  749     ;;1	CLRR	r0x1024
                                    1-  750     ;;99	MOVR	r0x1023,W
     0016 2100                      1-  751     	MOVIA	0x00
                                    1-  752     	BANKSEL	r0x1026
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1-  753     	MOVAR	r0x1026
                                    1-  754     	BANKSEL	r0x1025
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  755     	MOVR	r0x1025,W
                                    1-  756     	BANKSEL	_R_AIN5_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1-  757     	ADDAR	_R_AIN5_DATA,F
                                    1-  758     	BANKSEL	r0x1026
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  759     	MOVR	r0x1026,W
     001F 0C03                      1-  760     	BTRSC	STATUS,0
     0020 05rr                      1-  761     	INCR	r0x1026,W
     0021 0D03                      1-  762     	BTRSC	STATUS,2
     0022 3rrr                      1-  763     	LGOTO	_00002_DS_
                                    1-  764     	BANKSEL	_R_AIN5_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1-  765     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1-  766     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  767     _00002_DS_:
                                    1-  768     	.line	590, "main.c"; 	R_AIN5_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1-  769     	BCR	STATUS,0
                                    1-  770     	BANKSEL	_R_AIN5_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1-  771     	RRR	(_R_AIN5_DATA + 1),F
     0028 13rr                      1-  772     	RRR	_R_AIN5_DATA,F
                                    1-  773     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  774     	BCR	STATUS,0
     002A 13rr                      1-  775     	RRR	(_R_AIN5_DATA + 1),F
     002B 13rr                      1-  776     	RRR	_R_AIN5_DATA,F
                                    1-  777     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  778     	BCR	STATUS,0
     002D 13rr                      1-  779     	RRR	(_R_AIN5_DATA + 1),F
     002E 13rr                      1-  780     	RRR	_R_AIN5_DATA,F
                                    1-  781     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  782     ;;unsigned compare: left >= lit (0x614=1556), size=2
                                    1-  783     	.line	591, "main.c"; 	if(R_AIN5_DATA > 1555)
     002F 2106                      1-  784     	MOVIA	0x06
     0030 04rr                      1-  785     	SUBAR	(_R_AIN5_DATA + 1),W
     0031 0903                      1-  786     	BTRSS	STATUS,2
     0032 3rrr                      1-  787     	LGOTO	_00487_DS_
     0033 2114                      1-  788     	MOVIA	0x14
     0034 04rr                      1-  789     	SUBAR	_R_AIN5_DATA,W
     0035                           1-  790     _00487_DS_:
     0035 0803                      1-  791     	BTRSS	STATUS,0
     0036 3rrr                      1-  792     	LGOTO	_00459_DS_
                                    1-  793     	.line	593, "main.c"; 	pwStep = 6;
     0037 2106                      1-  794     	MOVIA	0x06
                                    1-  795     	BANKSEL	_pwStep
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 00rr                      1-  796     	MOVAR	_pwStep
     003A 3rrr                      1-  797     	LGOTO	_00461_DS_
                                    1-  798     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  799     ;;unsigned compare: left >= lit (0x571=1393), size=2
     003B                           1-  800     _00459_DS_:
                                    1-  801     	.line	595, "main.c"; 	else if(R_AIN5_DATA > 1392)
     003B 2105                      1-  802     	MOVIA	0x05
                                    1-  803     	BANKSEL	_R_AIN5_DATA
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 04rr                      1-  804     	SUBAR	(_R_AIN5_DATA + 1),W
     003E 0903                      1-  805     	BTRSS	STATUS,2
     003F 3rrr                      1-  806     	LGOTO	_00488_DS_
     0040 2171                      1-  807     	MOVIA	0x71
     0041 04rr                      1-  808     	SUBAR	_R_AIN5_DATA,W
     0042                           1-  809     _00488_DS_:
     0042 0803                      1-  810     	BTRSS	STATUS,0
     0043 3rrr                      1-  811     	LGOTO	_00456_DS_
                                    1-  812     	.line	598, "main.c"; 	if(pwStep == 6)
                                    1-  813     	BANKSEL	_pwStep
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  814     	MOVR	_pwStep,W
     0046 2406                      1-  815     	XORIA	0x06
     0047 0903                      1-  816     	BTRSS	STATUS,2
     0048 3rrr                      1-  817     	LGOTO	_00442_DS_
                                    1-  818     ;;unsigned compare: left < lit (0x5DC=1500), size=2
                                    1-  819     	.line	600, "main.c"; 	if(R_AIN5_DATA < 1500)
     0049 2105                      1-  820     	MOVIA	0x05
                                    1-  821     	BANKSEL	_R_AIN5_DATA
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 04rr                      1-  822     	SUBAR	(_R_AIN5_DATA + 1),W
     004C 0903                      1-  823     	BTRSS	STATUS,2
     004D 3rrr                      1-  824     	LGOTO	_00489_DS_
     004E 21DC                      1-  825     	MOVIA	0xdc
     004F 04rr                      1-  826     	SUBAR	_R_AIN5_DATA,W
     0050                           1-  827     _00489_DS_:
     0050 0C03                      1-  828     	BTRSC	STATUS,0
     0051 3rrr                      1-  829     	LGOTO	_00443_DS_
                                    1-  830     	.line	601, "main.c"; 	pwStep = 5;
     0052 2105                      1-  831     	MOVIA	0x05
                                    1-  832     	BANKSEL	_pwStep
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1-  833     	MOVAR	_pwStep
     0055 3rrr                      1-  834     	LGOTO	_00443_DS_
     0056                           1-  835     _00442_DS_:
                                    1-  836     	.line	605, "main.c"; 	pwStep = 5;
     0056 2105                      1-  837     	MOVIA	0x05
                                    1-  838     	BANKSEL	_pwStep
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1-  839     	MOVAR	_pwStep
     0059                           1-  840     _00443_DS_:
                                    1-  841     	.line	607, "main.c"; 	if(++chrgTime > 1800)
                                    1-  842     	BANKSEL	_chrgTime
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 05rr                      1-  843     	INCR	_chrgTime,F
     005B 0D03                      1-  844     	BTRSC	STATUS,2
     005C 05rr                      1-  845     	INCR	(_chrgTime + 1),F
                                    1-  846     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  847     ;;unsigned compare: left >= lit (0x709=1801), size=2
     005D 2107                      1-  848     	MOVIA	0x07
     005E 04rr                      1-  849     	SUBAR	(_chrgTime + 1),W
     005F 0903                      1-  850     	BTRSS	STATUS,2
     0060 3rrr                      1-  851     	LGOTO	_00490_DS_
     0061 2109                      1-  852     	MOVIA	0x09
     0062 04rr                      1-  853     	SUBAR	_chrgTime,W
     0063                           1-  854     _00490_DS_:
     0063 0803                      1-  855     	BTRSS	STATUS,0
     0064 3rrr                      1-  856     	LGOTO	_00461_DS_
                                    1-  857     	.line	609, "main.c"; 	chrgTime = 1800;
     0065 2108                      1-  858     	MOVIA	0x08
                                    1-  859     	BANKSEL	_chrgTime
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 00rr                      1-  860     	MOVAR	_chrgTime
     0068 2107                      1-  861     	MOVIA	0x07
     0069 00rr                      1-  862     	MOVAR	(_chrgTime + 1)
                                    1-  863     	.line	610, "main.c"; 	pwStep = 6;
     006A 2106                      1-  864     	MOVIA	0x06
                                    1-  865     	BANKSEL	_pwStep
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 00rr                      1-  866     	MOVAR	_pwStep
     006D 3rrr                      1-  867     	LGOTO	_00461_DS_
                                    1-  868     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  869     ;;unsigned compare: left >= lit (0x3A0=928), size=2
     006E                           1-  870     _00456_DS_:
                                    1-  871     	.line	613, "main.c"; 	else if(R_AIN5_DATA > 927)
     006E 2103                      1-  872     	MOVIA	0x03
                                    1-  873     	BANKSEL	_R_AIN5_DATA
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 04rr                      1-  874     	SUBAR	(_R_AIN5_DATA + 1),W
     0071 0903                      1-  875     	BTRSS	STATUS,2
     0072 3rrr                      1-  876     	LGOTO	_00491_DS_
     0073 21A0                      1-  877     	MOVIA	0xa0
     0074 04rr                      1-  878     	SUBAR	_R_AIN5_DATA,W
     0075                           1-  879     _00491_DS_:
     0075 0803                      1-  880     	BTRSS	STATUS,0
     0076 3rrr                      1-  881     	LGOTO	_00453_DS_
                                    1-  882     	.line	616, "main.c"; 	pwStep = 4;
     0077 2104                      1-  883     	MOVIA	0x04
                                    1-  884     	BANKSEL	_pwStep
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 00rr                      1-  885     	MOVAR	_pwStep
                                    1-  886     	.line	617, "main.c"; 	chrgTime = 0;
                                    1-  887     	BANKSEL	_chrgTime
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1-  888     	CLRR	_chrgTime
     007C 02rr                      1-  889     	CLRR	(_chrgTime + 1)
     007D 3rrr                      1-  890     	LGOTO	_00461_DS_
                                    1-  891     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  892     ;;unsigned compare: left >= lit (0x1D0=464), size=2
     007E                           1-  893     _00453_DS_:
                                    1-  894     	.line	619, "main.c"; 	else if(R_AIN5_DATA > 463)
     007E 2101                      1-  895     	MOVIA	0x01
                                    1-  896     	BANKSEL	_R_AIN5_DATA
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 04rr                      1-  897     	SUBAR	(_R_AIN5_DATA + 1),W
     0081 0903                      1-  898     	BTRSS	STATUS,2
     0082 3rrr                      1-  899     	LGOTO	_00492_DS_
     0083 21D0                      1-  900     	MOVIA	0xd0
     0084 04rr                      1-  901     	SUBAR	_R_AIN5_DATA,W
     0085                           1-  902     _00492_DS_:
     0085 0803                      1-  903     	BTRSS	STATUS,0
     0086 3rrr                      1-  904     	LGOTO	_00450_DS_
                                    1-  905     	.line	622, "main.c"; 	pwStep = 3;
     0087 2103                      1-  906     	MOVIA	0x03
                                    1-  907     	BANKSEL	_pwStep
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 00rr                      1-  908     	MOVAR	_pwStep
                                    1-  909     	.line	623, "main.c"; 	chrgTime = 0;
                                    1-  910     	BANKSEL	_chrgTime
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 02rr                      1-  911     	CLRR	_chrgTime
     008C 02rr                      1-  912     	CLRR	(_chrgTime + 1)
     008D 3rrr                      1-  913     	LGOTO	_00461_DS_
                                    1-  914     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  915     ;;unsigned compare: left >= lit (0x9B=155), size=2
     008E                           1-  916     _00450_DS_:
                                    1-  917     	.line	625, "main.c"; 	else if(R_AIN5_DATA > 154)
     008E 2100                      1-  918     	MOVIA	0x00
                                    1-  919     	BANKSEL	_R_AIN5_DATA
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 04rr                      1-  920     	SUBAR	(_R_AIN5_DATA + 1),W
     0091 0903                      1-  921     	BTRSS	STATUS,2
     0092 3rrr                      1-  922     	LGOTO	_00493_DS_
     0093 219B                      1-  923     	MOVIA	0x9b
     0094 04rr                      1-  924     	SUBAR	_R_AIN5_DATA,W
     0095                           1-  925     _00493_DS_:
     0095 0803                      1-  926     	BTRSS	STATUS,0
     0096 3rrr                      1-  927     	LGOTO	_00447_DS_
                                    1-  928     	.line	628, "main.c"; 	pwStep = 2;
     0097 2102                      1-  929     	MOVIA	0x02
                                    1-  930     	BANKSEL	_pwStep
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 00rr                      1-  931     	MOVAR	_pwStep
                                    1-  932     	.line	629, "main.c"; 	chrgTime = 0;
                                    1-  933     	BANKSEL	_chrgTime
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 02rr                      1-  934     	CLRR	_chrgTime
     009C 02rr                      1-  935     	CLRR	(_chrgTime + 1)
     009D 3rrr                      1-  936     	LGOTO	_00461_DS_
     009E                           1-  937     _00447_DS_:
                                    1-  938     	.line	634, "main.c"; 	pwStep = 1;
     009E 2101                      1-  939     	MOVIA	0x01
                                    1-  940     	BANKSEL	_pwStep
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 00rr                      1-  941     	MOVAR	_pwStep
                                    1-  942     	.line	635, "main.c"; 	chrgTime = 0;
                                    1-  943     	BANKSEL	_chrgTime
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 02rr                      1-  944     	CLRR	_chrgTime
     00A3 02rr                      1-  945     	CLRR	(_chrgTime + 1)
     00A4                           1-  946     _00461_DS_:
                                    1-  947     	.line	638, "main.c"; 	}
                                    1-  948     	RETURN	
     00A4 0010                      3-   26 m1      ret
                                    1-  949     ; exit point of _checkBatAD
                                    1-  951     ;***
                                    1-  952     ;  pBlock Stats: dbName = C
                                    1-  953     ;***
                                    1-  954     ;has an exit
                                    1-  955     ;functions called:
                                    1-  956     ;   _delay
                                    1-  957     ;   _delay
                                    1-  958     ;; Starting pCode block
                                    1-  959     .segment "code"; module=main, function=_initAD
     0000                           1-  961     _initAD:
                                    1-  962     ; 2 exit points
                                    1-  963     	.line	561, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1-  964     	MOVIA	0x84
     0001 00rr                      1-  965     	MOVAR	_ADMD
                                    1-  966     	.line	566, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1-  967     	CLRR	_ADVREFH
                                    1-  968     	.line	571, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1-  969     	MOVIA	0x10
     0004 00rr                      1-  970     	MOVAR	_ADR
                                    1-  971     	.line	573, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1-  972     	MOVIA	0x03
     0006 00rr                      1-  973     	MOVAR	_ADCR
                                    1-  974     	.line	576, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1-  975     	BSR	_ADMDbits,4
                                    1-  976     	.line	577, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1-  977     	MOVIA	0x64
     0009 2rrr                      1-  978     	LCALL	_delay
                                    1-  979     	.line	580, "main.c"; 	}
                                    1-  980     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1-  981     ; exit point of _initAD
                                    1-  983     ;***
                                    1-  984     ;  pBlock Stats: dbName = C
                                    1-  985     ;***
                                    1-  986     ;has an exit
                                    1-  987     ;2 compiler assigned registers:
                                    1-  988     ;   r0x101B
                                    1-  989     ;   r0x101C
                                    1-  990     ;; Starting pCode block
                                    1-  991     .segment "code"; module=main, function=_delay
                                    1-  993     ;local variable name mapping:
     0000                           1-  996     _delay:
                                    1-  997     ; 2 exit points
                                    1-  998     	.line	551, "main.c"; 	void delay(u8t time)
                                    1-  999     	BANKSEL	r0x101B
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1000     	MOVAR	r0x101B
                                    1- 1001     	.line	553, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1002     	BANKSEL	r0x101C
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1003     	CLRR	r0x101C
     0004                           1- 1004     _00428_DS_:
                                    1- 1005     	BANKSEL	r0x101B
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1006     	MOVR	r0x101B,W
                                    1- 1007     	BANKSEL	r0x101C
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 1008     	SUBAR	r0x101C,W
     0008 0C03                      1- 1009     	BTRSC	STATUS,0
     0009 3rrr                      1- 1010     	LGOTO	_00430_DS_
                                    1- 1011     	.line	554, "main.c"; 	NOP();
     000A 0000                      1- 1012     	nop
                                    1- 1013     	.line	553, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1014     	BANKSEL	r0x101C
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 1015     	INCR	r0x101C,F
     000D 3rrr                      1- 1016     	LGOTO	_00428_DS_
     000E                           1- 1017     _00430_DS_:
                                    1- 1018     	.line	555, "main.c"; 	}
                                    1- 1019     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1020     ; exit point of _delay
                                    1- 1022     ;***
                                    1- 1023     ;  pBlock Stats: dbName = C
                                    1- 1024     ;***
                                    1- 1025     ;has an exit
                                    1- 1026     ;functions called:
                                    1- 1027     ;   _pwmStop
                                    1- 1028     ;   _LedInput
                                    1- 1029     ;   _LEDLOFF
                                    1- 1030     ;   _LEDHON
                                    1- 1031     ;   _LEDHOFF
                                    1- 1032     ;   _LEDHOFF
                                    1- 1033     ;   _LEDLOFF
                                    1- 1034     ;   _pwmStop
                                    1- 1035     ;   _LedInput
                                    1- 1036     ;   _LEDLOFF
                                    1- 1037     ;   _LEDHON
                                    1- 1038     ;   _LEDHOFF
                                    1- 1039     ;   _LEDHOFF
                                    1- 1040     ;   _LEDLOFF
                                    1- 1041     ;; Starting pCode block
                                    1- 1042     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1044     _chrgCtr:
                                    1- 1045     ; 2 exit points
                                    1- 1046     	.line	515, "main.c"; 	if(PORTA & 0x20)
                                    1- 1047     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 0Arr                      1- 1048     	BTRSS	_PORTA,5
     0002 3rrr                      1- 1049     	LGOTO	_00419_DS_
                                    1- 1050     	.line	518, "main.c"; 	workStep = 0;
                                    1- 1051     	BANKSEL	_workStep
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1- 1052     	CLRR	_workStep
                                    1- 1053     	.line	519, "main.c"; 	ledStep = 0;
                                    1- 1054     	BANKSEL	_ledStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1055     	CLRR	_ledStep
                                    1- 1056     	.line	520, "main.c"; 	pwmStop();
     0007 2rrr                      1- 1057     	LCALL	_pwmStop
                                    1- 1058     	.line	521, "main.c"; 	LedInput();
     0008 2rrr                      1- 1059     	LCALL	_LedInput
                                    1- 1060     	.line	522, "main.c"; 	PORTB &= 0xFD;
     0009 1Crr                      1- 1061     	BCR	_PORTB,1
                                    1- 1062     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1063     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 1064     	.line	523, "main.c"; 	if(pwStep > 5)
     000A 2106                      1- 1065     	MOVIA	0x06
                                    1- 1066     	BANKSEL	_pwStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1- 1067     	SUBAR	_pwStep,W
     000D 0803                      1- 1068     	BTRSS	STATUS,0
     000E 3rrr                      1- 1069     	LGOTO	_00414_DS_
                                    1- 1070     	.line	526, "main.c"; 	LEDLOFF();
     000F 2rrr                      1- 1071     	LCALL	_LEDLOFF
                                    1- 1072     	.line	527, "main.c"; 	LEDHON();
     0010 2rrr                      1- 1073     	LCALL	_LEDHON
     0011 3rrr                      1- 1074     	LGOTO	_00421_DS_
     0012                           1- 1075     _00414_DS_:
                                    1- 1076     	.line	531, "main.c"; 	if(pwStep == 6)
                                    1- 1077     	BANKSEL	_pwStep
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1078     	MOVR	_pwStep,W
     0014 2406                      1- 1079     	XORIA	0x06
     0015 0903                      1- 1080     	BTRSS	STATUS,2
     0016 3rrr                      1- 1081     	LGOTO	_00412_DS_
                                    1- 1082     	.line	533, "main.c"; 	pwStep = 5;
     0017 2105                      1- 1083     	MOVIA	0x05
     0018 00rr                      1- 1084     	MOVAR	_pwStep
     0019                           1- 1085     _00412_DS_:
                                    1- 1086     	.line	535, "main.c"; 	LEDHOFF();
     0019 2rrr                      1- 1087     	LCALL	_LEDHOFF
                                    1- 1088     	.line	536, "main.c"; 	PORTA ^= 0x08;
     001A 2108                      1- 1089     	MOVIA	0x08
                                    1- 1090     	BANKSEL	_PORTA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 12rr                      1- 1091     	XORAR	_PORTA,F
     001D 3rrr                      1- 1092     	LGOTO	_00421_DS_
     001E                           1- 1093     _00419_DS_:
                                    1- 1094     	.line	541, "main.c"; 	if(workStartFlag == 0)
                                    1- 1095     	BANKSEL	_workStartFlag
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1096     	MOVR	_workStartFlag,W
     0020 0903                      1- 1097     	BTRSS	STATUS,2
     0021 3rrr                      1- 1098     	LGOTO	_00421_DS_
                                    1- 1099     	.line	543, "main.c"; 	LEDHOFF();
     0022 2rrr                      1- 1100     	LCALL	_LEDHOFF
                                    1- 1101     	.line	544, "main.c"; 	LEDLOFF();	
     0023 2rrr                      1- 1102     	LCALL	_LEDLOFF
     0024                           1- 1103     _00421_DS_:
                                    1- 1104     	.line	548, "main.c"; 	}
                                    1- 1105     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1- 1106     ; exit point of _chrgCtr
                                    1- 1108     ;***
                                    1- 1109     ;  pBlock Stats: dbName = C
                                    1- 1110     ;***
                                    1- 1111     ;has an exit
                                    1- 1112     ;1 compiler assigned register :
                                    1- 1113     ;   r0x1028
                                    1- 1114     ;; Starting pCode block
                                    1- 1115     .segment "code"; module=main, function=_keyRead
                                    1- 1117     ;local variable name mapping:
     0000                           1- 1119     _keyRead:
                                    1- 1120     ; 2 exit points
                                    1- 1121     	.line	478, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1122     	BANKSEL	r0x1028
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1123     	MOVAR	r0x1028
                                    1- 1124     	.line	480, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1125     	MOVR	r0x1028,W
     0003 0D03                      1- 1126     	BTRSC	STATUS,2
     0004 3rrr                      1- 1127     	LGOTO	_00404_DS_
                                    1- 1128     	.line	482, "main.c"; 	keyCount++;
                                    1- 1129     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1130     	INCR	_keyCount,F
                                    1- 1131     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1132     	.line	483, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1133     	MOVIA	0xc8
     0008 04rr                      1- 1134     	SUBAR	_keyCount,W
     0009 0803                      1- 1135     	BTRSS	STATUS,0
     000A 3rrr                      1- 1136     	LGOTO	_00405_DS_
                                    1- 1137     	.line	485, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1138     	MOVIA	0xc8
     000C 00rr                      1- 1139     	MOVAR	_keyCount
                                    1- 1140     	.line	486, "main.c"; 	if(!longPressFlag)
                                    1- 1141     	BANKSEL	_Status
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 0Crr                      1- 1142     	BTRSC	_Status,1
     000F 3rrr                      1- 1143     	LGOTO	_00405_DS_
                                    1- 1144     	.line	488, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1145     	BSR	_Status,1
                                    1- 1146     	.line	489, "main.c"; 	return 2;
     0011 2102                      1- 1147     	MOVIA	0x02
     0012 3rrr                      1- 1148     	LGOTO	_00406_DS_
                                    1- 1149     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 1150     _00404_DS_:
                                    1- 1151     	.line	495, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 1152     	MOVIA	0xc8
                                    1- 1153     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1154     	SUBAR	_keyCount,W
     0016 0803                      1- 1155     	BTRSS	STATUS,0
     0017 3rrr                      1- 1156     	LGOTO	_00401_DS_
                                    1- 1157     	.line	497, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1158     	CLRR	_keyCount
                                    1- 1159     	.line	498, "main.c"; 	longPressFlag = 0;
                                    1- 1160     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Crr                      1- 1161     	BCR	_Status,1
                                    1- 1162     	.line	499, "main.c"; 	return	0;
     001B 2100                      1- 1163     	MOVIA	0x00
     001C 3rrr                      1- 1164     	LGOTO	_00406_DS_
                                    1- 1165     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 1166     _00401_DS_:
                                    1- 1167     	.line	501, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 1168     	MOVIA	0x08
                                    1- 1169     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 1170     	SUBAR	_keyCount,W
     0020 0803                      1- 1171     	BTRSS	STATUS,0
     0021 3rrr                      1- 1172     	LGOTO	_00402_DS_
                                    1- 1173     	.line	503, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1174     	CLRR	_keyCount
                                    1- 1175     	.line	504, "main.c"; 	return	1;
     0023 2101                      1- 1176     	MOVIA	0x01
     0024 3rrr                      1- 1177     	LGOTO	_00406_DS_
     0025                           1- 1178     _00402_DS_:
                                    1- 1179     	.line	506, "main.c"; 	keyCount = 0;
                                    1- 1180     	BANKSEL	_keyCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 1181     	CLRR	_keyCount
     0027                           1- 1182     _00405_DS_:
                                    1- 1183     	.line	508, "main.c"; 	return 0;
     0027 2100                      1- 1184     	MOVIA	0x00
     0028                           1- 1185     _00406_DS_:
                                    1- 1186     	.line	509, "main.c"; 	}
                                    1- 1187     	RETURN	
     0028 0010                      3-   26 m1      ret
                                    1- 1188     ; exit point of _keyRead
                                    1- 1190     ;***
                                    1- 1191     ;  pBlock Stats: dbName = C
                                    1- 1192     ;***
                                    1- 1193     ;has an exit
                                    1- 1194     ;functions called:
                                    1- 1195     ;   _LedInput
                                    1- 1196     ;   _pwmStop
                                    1- 1197     ;   _LedInput
                                    1- 1198     ;   _pwmStop
                                    1- 1199     ;; Starting pCode block
                                    1- 1200     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1202     _gotoSleep:
                                    1- 1203     ; 2 exit points
                                    1- 1204     	.line	458, "main.c"; 	LedInput();
     0000 2rrr                      1- 1205     	LCALL	_LedInput
                                    1- 1206     	.line	459, "main.c"; 	sleepTime = 0;
                                    1- 1207     	BANKSEL	_sleepTime
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1- 1208     	CLRR	_sleepTime
     0003 02rr                      1- 1209     	CLRR	(_sleepTime + 1)
                                    1- 1210     	.line	460, "main.c"; 	pwmStop();
     0004 2rrr                      1- 1211     	LCALL	_pwmStop
                                    1- 1212     	.line	461, "main.c"; 	workStep = 0;
                                    1- 1213     	BANKSEL	_workStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1214     	CLRR	_workStep
                                    1- 1215     	.line	462, "main.c"; 	AWUCON = 0x60;
     0007 2160                      1- 1216     	MOVIA	0x60
     0008 00rr                      1- 1217     	MOVAR	_AWUCON
                                    1- 1218     	.line	463, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0009 210B                      1- 1219     	MOVIA	0x0b
     000A 00rr                      1- 1220     	MOVAR	_INTE
                                    1- 1221     	.line	464, "main.c"; 	PCON =  C_LVR_En;	
     000B 2108                      1- 1222     	MOVIA	0x08
     000C 00rr                      1- 1223     	MOVAR	_PCON
                                    1- 1224     	.line	465, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000D 02rr                      1- 1225     	CLRR	_INTF
                                    1- 1226     	.line	466, "main.c"; 	CLRWDT();
     000E 0002                      1- 1227     	clrwdt
                                    1- 1228     	.line	467, "main.c"; 	ENI();
     000F 0004                      1- 1229     	ENI
                                    1- 1230     	.line	468, "main.c"; 	SLEEP();
     0010 0001                      1- 1231     	sleep
                                    1- 1232     	.line	469, "main.c"; 	AWUCON = 0x00;
     0011 02rr                      1- 1233     	CLRR	_AWUCON
                                    1- 1234     	.line	470, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0012 2101                      1- 1235     	MOVIA	0x01
     0013 00rr                      1- 1236     	MOVAR	_INTE
                                    1- 1237     	.line	471, "main.c"; 	INTF = 0;
     0014 02rr                      1- 1238     	CLRR	_INTF
                                    1- 1239     	.line	473, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0015 21A8                      1- 1240     	MOVIA	0xa8
     0016 00rr                      1- 1241     	MOVAR	_PCON
                                    1- 1242     	.line	475, "main.c"; 	}
                                    1- 1243     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 1244     ; exit point of _gotoSleep
                                    1- 1246     ;***
                                    1- 1247     ;  pBlock Stats: dbName = C
                                    1- 1248     ;***
                                    1- 1249     ;has an exit
                                    1- 1250     ;functions called:
                                    1- 1251     ;   _keyRead
                                    1- 1252     ;   _pwmInit
                                    1- 1253     ;   _pwmStop
                                    1- 1254     ;   _LEDHOFF
                                    1- 1255     ;   _LEDLOFF
                                    1- 1256     ;   _pwmInit
                                    1- 1257     ;   _keyRead
                                    1- 1258     ;   _pwmInit
                                    1- 1259     ;   _pwmStop
                                    1- 1260     ;   _LEDHOFF
                                    1- 1261     ;   _LEDLOFF
                                    1- 1262     ;   _pwmInit
                                    1- 1263     ;1 compiler assigned register :
                                    1- 1264     ;   r0x102A
                                    1- 1265     ;; Starting pCode block
                                    1- 1266     .segment "code"; module=main, function=_keyCtr
                                    1- 1268     ;local variable name mapping:
     0000                           1- 1270     _keyCtr:
                                    1- 1271     ; 2 exit points
                                    1- 1272     	.line	401, "main.c"; 	if(workStep > 0)
                                    1- 1273     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1274     	MOVR	_workStep,W
     0002 0D03                      1- 1275     	BTRSC	STATUS,2
     0003 3rrr                      1- 1276     	LGOTO	_00361_DS_
                                    1- 1277     	.line	403, "main.c"; 	PORTB |= 0x02;
     0004 18rr                      1- 1278     	BSR	_PORTB,1
     0005 3rrr                      1- 1279     	LGOTO	_00362_DS_
     0006                           1- 1280     _00361_DS_:
                                    1- 1281     	.line	407, "main.c"; 	PORTB &= 0xFD;
     0006 1Crr                      1- 1282     	BCR	_PORTB,1
     0007                           1- 1283     _00362_DS_:
                                    1- 1284     	.line	410, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 1285     	BANKSEL	_PORTA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 07rr                      1- 1286     	COMR	_PORTA,W
                                    1- 1287     	BANKSEL	r0x102A
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1288     	MOVAR	r0x102A
     000B 2140                      1- 1289     	MOVIA	0x40
     000C 10rr                      1- 1290     	ANDAR	r0x102A,F
     000D 01rr                      1- 1291     	MOVR	r0x102A,W
     000E 2rrr                      1- 1292     	LCALL	_keyRead
                                    1- 1293     	BANKSEL	r0x102A
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 1294     	MOVAR	r0x102A
                                    1- 1295     	.line	411, "main.c"; 	if(kclick == 1 && workStep > 0)
     0011 2401                      1- 1296     	XORIA	0x01
     0012 0903                      1- 1297     	BTRSS	STATUS,2
     0013 3rrr                      1- 1298     	LGOTO	_00382_DS_
                                    1- 1299     	BANKSEL	_workStep
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 1300     	MOVR	_workStep,W
     0016 0D03                      1- 1301     	BTRSC	STATUS,2
     0017 3rrr                      1- 1302     	LGOTO	_00382_DS_
                                    1- 1303     	.line	413, "main.c"; 	count500ms = 0;
                                    1- 1304     	BANKSEL	_count500ms
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1- 1305     	CLRR	_count500ms
                                    1- 1306     	.line	414, "main.c"; 	if(++workStep > 4)
                                    1- 1307     	BANKSEL	_workStep
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 05rr                      1- 1308     	INCR	_workStep,F
                                    1- 1309     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1310     ;;unsigned compare: left >= lit (0x5=5), size=1
     001C 2105                      1- 1311     	MOVIA	0x05
     001D 04rr                      1- 1312     	SUBAR	_workStep,W
     001E 0803                      1- 1313     	BTRSS	STATUS,0
     001F 3rrr                      1- 1314     	LGOTO	_00364_DS_
                                    1- 1315     	.line	415, "main.c"; 	workStep = 1;
     0020 2101                      1- 1316     	MOVIA	0x01
     0021 00rr                      1- 1317     	MOVAR	_workStep
     0022                           1- 1318     _00364_DS_:
                                    1- 1319     	.line	416, "main.c"; 	pwmInit();
     0022 2rrr                      1- 1320     	LCALL	_pwmInit
                                    1- 1321     	.line	417, "main.c"; 	duty = 1;
     0023 2101                      1- 1322     	MOVIA	0x01
                                    1- 1323     	BANKSEL	_duty
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 1324     	MOVAR	_duty
     0026 02rr                      1- 1325     	CLRR	(_duty + 1)
                                    1- 1326     	.line	418, "main.c"; 	fgCount = 0;
                                    1- 1327     	BANKSEL	_fgCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1- 1328     	CLRR	_fgCount
     0029 02rr                      1- 1329     	CLRR	(_fgCount + 1)
                                    1- 1330     	.line	419, "main.c"; 	workStartFlag = 0;
                                    1- 1331     	BANKSEL	_workStartFlag
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 02rr                      1- 1332     	CLRR	_workStartFlag
                                    1- 1333     	.line	420, "main.c"; 	if(workStep == 1)
                                    1- 1334     	BANKSEL	_workStep
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1- 1335     	MOVR	_workStep,W
     002E 2401                      1- 1336     	XORIA	0x01
     002F 0903                      1- 1337     	BTRSS	STATUS,2
     0030 3rrr                      1- 1338     	LGOTO	_00374_DS_
                                    1- 1339     	.line	421, "main.c"; 	maxDuty = 90;
     0031 215A                      1- 1340     	MOVIA	0x5a
                                    1- 1341     	BANKSEL	_maxDuty
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1- 1342     	MOVAR	_maxDuty
     0034 3rrr                      1- 1343     	LGOTO	_00375_DS_
     0035                           1- 1344     _00374_DS_:
                                    1- 1345     	.line	422, "main.c"; 	else if(workStep == 2)
                                    1- 1346     	BANKSEL	_workStep
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1347     	MOVR	_workStep,W
     0037 2402                      1- 1348     	XORIA	0x02
     0038 0903                      1- 1349     	BTRSS	STATUS,2
     0039 3rrr                      1- 1350     	LGOTO	_00371_DS_
                                    1- 1351     	.line	423, "main.c"; 	maxDuty = 80;
     003A 2150                      1- 1352     	MOVIA	0x50
                                    1- 1353     	BANKSEL	_maxDuty
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 00rr                      1- 1354     	MOVAR	_maxDuty
     003D 3rrr                      1- 1355     	LGOTO	_00375_DS_
     003E                           1- 1356     _00371_DS_:
                                    1- 1357     	.line	424, "main.c"; 	else if(workStep == 3)
                                    1- 1358     	BANKSEL	_workStep
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1- 1359     	MOVR	_workStep,W
     0040 2403                      1- 1360     	XORIA	0x03
     0041 0903                      1- 1361     	BTRSS	STATUS,2
     0042 3rrr                      1- 1362     	LGOTO	_00368_DS_
                                    1- 1363     	.line	425, "main.c"; 	maxDuty = 70;
     0043 2146                      1- 1364     	MOVIA	0x46
                                    1- 1365     	BANKSEL	_maxDuty
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 00rr                      1- 1366     	MOVAR	_maxDuty
     0046 3rrr                      1- 1367     	LGOTO	_00375_DS_
     0047                           1- 1368     _00368_DS_:
                                    1- 1369     	.line	426, "main.c"; 	else if(workStep == 4)
                                    1- 1370     	BANKSEL	_workStep
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1- 1371     	MOVR	_workStep,W
     0049 2404                      1- 1372     	XORIA	0x04
     004A 0903                      1- 1373     	BTRSS	STATUS,2
     004B 3rrr                      1- 1374     	LGOTO	_00375_DS_
                                    1- 1375     	.line	427, "main.c"; 	maxDuty = 60;
     004C 213C                      1- 1376     	MOVIA	0x3c
                                    1- 1377     	BANKSEL	_maxDuty
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1- 1378     	MOVAR	_maxDuty
     004F                           1- 1379     _00375_DS_:
                                    1- 1380     	.line	428, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1381     	BANKSEL	_maxDuty
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 1382     	MOVR	_maxDuty,W
     0051 00rr                      1- 1383     	SFUN	_PWM2DUTY
     0052 3rrr                      1- 1384     	LGOTO	_00385_DS_
     0053                           1- 1385     _00382_DS_:
                                    1- 1386     	.line	430, "main.c"; 	else if(kclick == 2)
                                    1- 1387     	BANKSEL	r0x102A
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 01rr                      1- 1388     	MOVR	r0x102A,W
     0055 2402                      1- 1389     	XORIA	0x02
     0056 0903                      1- 1390     	BTRSS	STATUS,2
     0057 3rrr                      1- 1391     	LGOTO	_00385_DS_
                                    1- 1392     	.line	432, "main.c"; 	if(workStep > 0)
                                    1- 1393     	BANKSEL	_workStep
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 01rr                      1- 1394     	MOVR	_workStep,W
     005A 0D03                      1- 1395     	BTRSC	STATUS,2
     005B 3rrr                      1- 1396     	LGOTO	_00377_DS_
                                    1- 1397     	.line	434, "main.c"; 	workStep = 0;
     005C 02rr                      1- 1398     	CLRR	_workStep
                                    1- 1399     	.line	435, "main.c"; 	pwmStop();
     005D 2rrr                      1- 1400     	LCALL	_pwmStop
                                    1- 1401     	.line	436, "main.c"; 	LEDHOFF();
     005E 2rrr                      1- 1402     	LCALL	_LEDHOFF
                                    1- 1403     	.line	437, "main.c"; 	LEDLOFF();
     005F 2rrr                      1- 1404     	LCALL	_LEDLOFF
                                    1- 1405     	.line	438, "main.c"; 	ledStep = 5;
     0060 2105                      1- 1406     	MOVIA	0x05
                                    1- 1407     	BANKSEL	_ledStep
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 00rr                      1- 1408     	MOVAR	_ledStep
                                    1- 1409     	.line	439, "main.c"; 	workStartFlag = 2;
     0063 2102                      1- 1410     	MOVIA	0x02
                                    1- 1411     	BANKSEL	_workStartFlag
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 00rr                      1- 1412     	MOVAR	_workStartFlag
     0066 3rrr                      1- 1413     	LGOTO	_00385_DS_
     0067                           1- 1414     _00377_DS_:
                                    1- 1415     	.line	443, "main.c"; 	workStartFlag = 1;
     0067 2101                      1- 1416     	MOVIA	0x01
                                    1- 1417     	BANKSEL	_workStartFlag
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 00rr                      1- 1418     	MOVAR	_workStartFlag
                                    1- 1419     	.line	444, "main.c"; 	maxDuty = 90;
     006A 215A                      1- 1420     	MOVIA	0x5a
                                    1- 1421     	BANKSEL	_maxDuty
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 00rr                      1- 1422     	MOVAR	_maxDuty
                                    1- 1423     	.line	445, "main.c"; 	workStep = 1;
     006D 2101                      1- 1424     	MOVIA	0x01
                                    1- 1425     	BANKSEL	_workStep
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 00rr                      1- 1426     	MOVAR	_workStep
                                    1- 1427     	.line	446, "main.c"; 	ledStep = 0;
                                    1- 1428     	BANKSEL	_ledStep
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 02rr                      1- 1429     	CLRR	_ledStep
                                    1- 1430     	.line	447, "main.c"; 	count500ms = 0;
                                    1- 1431     	BANKSEL	_count500ms
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 02rr                      1- 1432     	CLRR	_count500ms
                                    1- 1433     	.line	448, "main.c"; 	pwmInit();
     0074 2rrr                      1- 1434     	LCALL	_pwmInit
                                    1- 1435     	.line	449, "main.c"; 	duty = 1;
     0075 2101                      1- 1436     	MOVIA	0x01
                                    1- 1437     	BANKSEL	_duty
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 00rr                      1- 1438     	MOVAR	_duty
     0078 02rr                      1- 1439     	CLRR	(_duty + 1)
                                    1- 1440     	.line	450, "main.c"; 	fgCount = 0;
                                    1- 1441     	BANKSEL	_fgCount
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 02rr                      1- 1442     	CLRR	_fgCount
     007B 02rr                      1- 1443     	CLRR	(_fgCount + 1)
     007C                           1- 1444     _00385_DS_:
                                    1- 1445     	.line	454, "main.c"; 	}
                                    1- 1446     	RETURN	
     007C 0010                      3-   26 m1      ret
                                    1- 1447     ; exit point of _keyCtr
                                    1- 1449     ;***
                                    1- 1450     ;  pBlock Stats: dbName = C
                                    1- 1451     ;***
                                    1- 1452     ;functions called:
                                    1- 1453     ;   _pwmInit
                                    1- 1454     ;   _pwmInit
                                    1- 1455     ;; Starting pCode block
                                    1- 1456     .segment "code"; module=main, function=_ledCtr
     0000                           1- 1458     _ledCtr:
                                    1- 1459     ; 0 exit points
                                    1- 1460     	.line	370, "main.c"; 	if(workStartFlag == 1)
                                    1- 1461     	BANKSEL	_workStartFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1462     	MOVR	_workStartFlag,W
     0002 2401                      1- 1463     	XORIA	0x01
     0003 0903                      1- 1464     	BTRSS	STATUS,2
     0004 3rrr                      1- 1465     	LGOTO	_00353_DS_
                                    1- 1466     	.line	373, "main.c"; 	if(++ledStep > 4)
                                    1- 1467     	BANKSEL	_ledStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1468     	INCR	_ledStep,F
                                    1- 1469     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1470     ;;unsigned compare: left >= lit (0x5=5), size=1
     0007 2105                      1- 1471     	MOVIA	0x05
     0008 04rr                      1- 1472     	SUBAR	_ledStep,W
     0009 0803                      1- 1473     	BTRSS	STATUS,0
     000A 3rrr                      1- 1474     	LGOTO	_00355_DS_
                                    1- 1475     	.line	375, "main.c"; 	ledStep = workStep;
                                    1- 1476     	BANKSEL	_workStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1477     	MOVR	_workStep,W
                                    1- 1478     	BANKSEL	_ledStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1479     	MOVAR	_ledStep
                                    1- 1480     	.line	376, "main.c"; 	workStartFlag = 3;
     000F 2103                      1- 1481     	MOVIA	0x03
                                    1- 1482     	BANKSEL	_workStartFlag
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1483     	MOVAR	_workStartFlag
     0012 3rrr                      1- 1484     	LGOTO	_00355_DS_
     0013                           1- 1485     _00353_DS_:
                                    1- 1486     	.line	380, "main.c"; 	else if(workStartFlag == 2)
                                    1- 1487     	BANKSEL	_workStartFlag
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1488     	MOVR	_workStartFlag,W
     0015 2402                      1- 1489     	XORIA	0x02
     0016 0903                      1- 1490     	BTRSS	STATUS,2
     0017 3rrr                      1- 1491     	LGOTO	_00350_DS_
                                    1- 1492     	.line	382, "main.c"; 	if(ledStep > 0)
                                    1- 1493     	BANKSEL	_ledStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1494     	MOVR	_ledStep,W
     001A 0D03                      1- 1495     	BTRSC	STATUS,2
     001B 3rrr                      1- 1496     	LGOTO	_00355_DS_
                                    1- 1497     	.line	384, "main.c"; 	ledStep--;
     001C 17rr                      1- 1498     	DECRSZ	_ledStep,F
                                    1- 1499     	.line	385, "main.c"; 	if(ledStep == 0)
     001D 3rrr                      1- 1500     	LGOTO	_00355_DS_
                                    1- 1501     	.line	386, "main.c"; 	workStartFlag = 0;
                                    1- 1502     	BANKSEL	_workStartFlag
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 02rr                      1- 1503     	CLRR	_workStartFlag
     0020 3rrr                      1- 1504     	LGOTO	_00355_DS_
     0021                           1- 1505     _00350_DS_:
                                    1- 1506     	.line	391, "main.c"; 	ledStep = workStep;
                                    1- 1507     	BANKSEL	_workStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1508     	MOVR	_workStep,W
                                    1- 1509     	BANKSEL	_ledStep
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1510     	MOVAR	_ledStep
                                    1- 1511     	.line	392, "main.c"; 	if(workStep)
                                    1- 1512     	BANKSEL	_workStep
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 1513     	MOVR	_workStep,W
     0027 0903                      1- 1514     	BTRSS	STATUS,2
                                    1- 1515     	.line	393, "main.c"; 	pwmInit();
     0028 2rrr                      1- 1516     	LCALL	_pwmInit
     0029                           1- 1517     _00355_DS_:
                                    1- 1518     	.line	396, "main.c"; 	}
                                    1- 1519     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1- 1521     ;***
                                    1- 1522     ;  pBlock Stats: dbName = C
                                    1- 1523     ;***
                                    1- 1524     ;has an exit
                                    1- 1525     ;functions called:
                                    1- 1526     ;   _LEDLON
                                    1- 1527     ;   _LEDHON
                                    1- 1528     ;   _LEDHOFF
                                    1- 1529     ;   _LEDLOFF
                                    1- 1530     ;   _LEDHON
                                    1- 1531     ;   _LEDHOFF
                                    1- 1532     ;   _LEDHON
                                    1- 1533     ;   _LEDLOFF
                                    1- 1534     ;   _LEDHOFF
                                    1- 1535     ;   _LEDLON
                                    1- 1536     ;   _LEDHON
                                    1- 1537     ;   _LEDHOFF
                                    1- 1538     ;   _LEDLOFF
                                    1- 1539     ;   _LEDHON
                                    1- 1540     ;   _LEDHOFF
                                    1- 1541     ;   _LEDHON
                                    1- 1542     ;   _LEDLOFF
                                    1- 1543     ;   _LEDHOFF
                                    1- 1544     ;; Starting pCode block
                                    1- 1545     .segment "code"; module=main, function=_LedCtr2
     0000                           1- 1547     _LedCtr2:
                                    1- 1548     ; 2 exit points
                                    1- 1549     	.line	325, "main.c"; 	if(++startStep > 6)
                                    1- 1550     	BANKSEL	_startStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1551     	INCR	_startStep,F
                                    1- 1552     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1553     ;;unsigned compare: left >= lit (0x7=7), size=1
     0002 2107                      1- 1554     	MOVIA	0x07
     0003 04rr                      1- 1555     	SUBAR	_startStep,W
     0004 0803                      1- 1556     	BTRSS	STATUS,0
     0005 3rrr                      1- 1557     	LGOTO	_00313_DS_
                                    1- 1558     	.line	327, "main.c"; 	workStartFlag = 0;
                                    1- 1559     	BANKSEL	_workStartFlag
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 1560     	CLRR	_workStartFlag
                                    1- 1561     	.line	328, "main.c"; 	startStep = 0;
                                    1- 1562     	BANKSEL	_startStep
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 1563     	CLRR	_startStep
                                    1- 1564     	.line	329, "main.c"; 	ledStep = workStep;
                                    1- 1565     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1566     	MOVR	_workStep,W
                                    1- 1567     	BANKSEL	_ledStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1568     	MOVAR	_ledStep
     000E                           1- 1569     _00313_DS_:
                                    1- 1570     	.line	333, "main.c"; 	if(startStep == 1)
                                    1- 1571     	BANKSEL	_startStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1572     	MOVR	_startStep,W
     0010 2401                      1- 1573     	XORIA	0x01
     0011 0903                      1- 1574     	BTRSS	STATUS,2
     0012 3rrr                      1- 1575     	LGOTO	_00334_DS_
                                    1- 1576     	.line	335, "main.c"; 	if(pwStep == 1)
                                    1- 1577     	BANKSEL	_pwStep
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1578     	MOVR	_pwStep,W
     0015 2401                      1- 1579     	XORIA	0x01
     0016 0903                      1- 1580     	BTRSS	STATUS,2
     0017 3rrr                      1- 1581     	LGOTO	_00317_DS_
                                    1- 1582     	.line	337, "main.c"; 	LEDLON();
     0018 2rrr                      1- 1583     	LCALL	_LEDLON
     0019 3rrr                      1- 1584     	LGOTO	_00336_DS_
                                    1- 1585     ;;unsigned compare: left < lit (0x2=2), size=1
     001A                           1- 1586     _00317_DS_:
                                    1- 1587     	.line	339, "main.c"; 	else if(pwStep >= 2)
     001A 2102                      1- 1588     	MOVIA	0x02
                                    1- 1589     	BANKSEL	_pwStep
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 04rr                      1- 1590     	SUBAR	_pwStep,W
     001D 0803                      1- 1591     	BTRSS	STATUS,0
     001E 3rrr                      1- 1592     	LGOTO	_00336_DS_
                                    1- 1593     	.line	341, "main.c"; 	LEDHON();
     001F 2rrr                      1- 1594     	LCALL	_LEDHON
     0020 3rrr                      1- 1595     	LGOTO	_00336_DS_
     0021                           1- 1596     _00334_DS_:
                                    1- 1597     	.line	344, "main.c"; 	else if(startStep == 2)
                                    1- 1598     	BANKSEL	_startStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1599     	MOVR	_startStep,W
     0023 2402                      1- 1600     	XORIA	0x02
     0024 0903                      1- 1601     	BTRSS	STATUS,2
     0025 3rrr                      1- 1602     	LGOTO	_00331_DS_
                                    1- 1603     	.line	346, "main.c"; 	LEDHOFF();
     0026 2rrr                      1- 1604     	LCALL	_LEDHOFF
                                    1- 1605     	.line	347, "main.c"; 	LEDLOFF();
     0027 2rrr                      1- 1606     	LCALL	_LEDLOFF
     0028 3rrr                      1- 1607     	LGOTO	_00336_DS_
     0029                           1- 1608     _00331_DS_:
                                    1- 1609     	.line	349, "main.c"; 	else if(startStep == 3 && pwStep >= 3)
                                    1- 1610     	BANKSEL	_startStep
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 1611     	MOVR	_startStep,W
     002B 2403                      1- 1612     	XORIA	0x03
     002C 0903                      1- 1613     	BTRSS	STATUS,2
     002D 3rrr                      1- 1614     	LGOTO	_00327_DS_
                                    1- 1615     ;;unsigned compare: left < lit (0x3=3), size=1
     002E 2103                      1- 1616     	MOVIA	0x03
                                    1- 1617     	BANKSEL	_pwStep
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 04rr                      1- 1618     	SUBAR	_pwStep,W
     0031 0803                      1- 1619     	BTRSS	STATUS,0
     0032 3rrr                      1- 1620     	LGOTO	_00327_DS_
                                    1- 1621     	.line	351, "main.c"; 	LEDHON();
     0033 2rrr                      1- 1622     	LCALL	_LEDHON
     0034 3rrr                      1- 1623     	LGOTO	_00336_DS_
     0035                           1- 1624     _00327_DS_:
                                    1- 1625     	.line	353, "main.c"; 	else if(startStep == 4)
                                    1- 1626     	BANKSEL	_startStep
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1627     	MOVR	_startStep,W
     0037 2404                      1- 1628     	XORIA	0x04
     0038 0903                      1- 1629     	BTRSS	STATUS,2
     0039 3rrr                      1- 1630     	LGOTO	_00324_DS_
                                    1- 1631     	.line	355, "main.c"; 	LEDHOFF();
     003A 2rrr                      1- 1632     	LCALL	_LEDHOFF
     003B 3rrr                      1- 1633     	LGOTO	_00336_DS_
     003C                           1- 1634     _00324_DS_:
                                    1- 1635     	.line	357, "main.c"; 	else if(startStep == 5 && pwStep >= 4)
                                    1- 1636     	BANKSEL	_startStep
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 1637     	MOVR	_startStep,W
     003E 2405                      1- 1638     	XORIA	0x05
     003F 0903                      1- 1639     	BTRSS	STATUS,2
     0040 3rrr                      1- 1640     	LGOTO	_00320_DS_
                                    1- 1641     ;;unsigned compare: left < lit (0x4=4), size=1
     0041 2104                      1- 1642     	MOVIA	0x04
                                    1- 1643     	BANKSEL	_pwStep
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 04rr                      1- 1644     	SUBAR	_pwStep,W
     0044 0803                      1- 1645     	BTRSS	STATUS,0
     0045 3rrr                      1- 1646     	LGOTO	_00320_DS_
                                    1- 1647     	.line	359, "main.c"; 	LEDHON();
     0046 2rrr                      1- 1648     	LCALL	_LEDHON
     0047 3rrr                      1- 1649     	LGOTO	_00336_DS_
     0048                           1- 1650     _00320_DS_:
                                    1- 1651     	.line	363, "main.c"; 	LEDLOFF();
     0048 2rrr                      1- 1652     	LCALL	_LEDLOFF
                                    1- 1653     	.line	364, "main.c"; 	LEDHOFF();
     0049 2rrr                      1- 1654     	LCALL	_LEDHOFF
     004A                           1- 1655     _00336_DS_:
                                    1- 1656     	.line	366, "main.c"; 	}
                                    1- 1657     	RETURN	
     004A 0010                      3-   26 m1      ret
                                    1- 1658     ; exit point of _LedCtr2
                                    1- 1660     ;***
                                    1- 1661     ;  pBlock Stats: dbName = C
                                    1- 1662     ;***
                                    1- 1663     ;has an exit
                                    1- 1664     ;3 compiler assigned registers:
                                    1- 1665     ;   r0x102B
                                    1- 1666     ;   r0x102C
                                    1- 1667     ;   r0x102D
                                    1- 1668     ;; Starting pCode block
                                    1- 1669     .segment "code"; module=main, function=_workCtr
                                    1- 1671     ;local variable name mapping:
     0000                           1- 1673     _workCtr:
                                    1- 1674     ; 2 exit points
                                    1- 1675     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1676     ;;unsigned compare: left >= lit (0x47=71), size=2
                                    1- 1677     	.line	294, "main.c"; 	if(fgPRD > 70)
     0000 2100                      1- 1678     	MOVIA	0x00
                                    1- 1679     	BANKSEL	_fgPRD
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1680     	SUBAR	(_fgPRD + 1),W
     0003 0903                      1- 1681     	BTRSS	STATUS,2
     0004 3rrr                      1- 1682     	LGOTO	_00305_DS_
     0005 2147                      1- 1683     	MOVIA	0x47
     0006 04rr                      1- 1684     	SUBAR	_fgPRD,W
     0007                           1- 1685     _00305_DS_:
     0007 0803                      1- 1686     	BTRSS	STATUS,0
     0008 3rrr                      1- 1687     	LGOTO	_00280_DS_
                                    1- 1688     	.line	297, "main.c"; 	u8t minDuty = 20;
     0009 2114                      1- 1689     	MOVIA	0x14
                                    1- 1690     	BANKSEL	r0x102B
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1691     	MOVAR	r0x102B
                                    1- 1692     	.line	298, "main.c"; 	if(workStep == 1)
                                    1- 1693     	BANKSEL	_workStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 1694     	MOVR	_workStep,W
     000E 2401                      1- 1695     	XORIA	0x01
     000F 0903                      1- 1696     	BTRSS	STATUS,2
     0010 3rrr                      1- 1697     	LGOTO	_00273_DS_
                                    1- 1698     	.line	299, "main.c"; 	minDuty = 20;
     0011 2114                      1- 1699     	MOVIA	0x14
                                    1- 1700     	BANKSEL	r0x102B
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 1701     	MOVAR	r0x102B
     0014 3rrr                      1- 1702     	LGOTO	_00274_DS_
     0015                           1- 1703     _00273_DS_:
                                    1- 1704     	.line	300, "main.c"; 	else if(workStep == 2)
                                    1- 1705     	BANKSEL	_workStep
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 1706     	MOVR	_workStep,W
     0017 2402                      1- 1707     	XORIA	0x02
     0018 0903                      1- 1708     	BTRSS	STATUS,2
     0019 3rrr                      1- 1709     	LGOTO	_00270_DS_
                                    1- 1710     	.line	301, "main.c"; 	minDuty = 13;
     001A 210D                      1- 1711     	MOVIA	0x0d
                                    1- 1712     	BANKSEL	r0x102B
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1713     	MOVAR	r0x102B
     001D 3rrr                      1- 1714     	LGOTO	_00274_DS_
     001E                           1- 1715     _00270_DS_:
                                    1- 1716     	.line	302, "main.c"; 	else if(workStep == 3)
                                    1- 1717     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1718     	MOVR	_workStep,W
     0020 2403                      1- 1719     	XORIA	0x03
     0021 0903                      1- 1720     	BTRSS	STATUS,2
     0022 3rrr                      1- 1721     	LGOTO	_00267_DS_
                                    1- 1722     	.line	303, "main.c"; 	minDuty = 6;
     0023 2106                      1- 1723     	MOVIA	0x06
                                    1- 1724     	BANKSEL	r0x102B
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 1725     	MOVAR	r0x102B
     0026 3rrr                      1- 1726     	LGOTO	_00274_DS_
     0027                           1- 1727     _00267_DS_:
                                    1- 1728     	.line	304, "main.c"; 	else if(workStep == 4)
                                    1- 1729     	BANKSEL	_workStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 1730     	MOVR	_workStep,W
     0029 2404                      1- 1731     	XORIA	0x04
     002A 0903                      1- 1732     	BTRSS	STATUS,2
     002B 3rrr                      1- 1733     	LGOTO	_00274_DS_
                                    1- 1734     	.line	305, "main.c"; 	minDuty = 2;
     002C 2102                      1- 1735     	MOVIA	0x02
                                    1- 1736     	BANKSEL	r0x102B
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 1737     	MOVAR	r0x102B
     002F                           1- 1738     _00274_DS_:
                                    1- 1739     	.line	306, "main.c"; 	if(duty > minDuty)
                                    1- 1740     	BANKSEL	r0x102B
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1741     	MOVR	r0x102B,W
                                    1- 1742     	BANKSEL	r0x102C
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 00rr                      1- 1743     	MOVAR	r0x102C
                                    1- 1744     	BANKSEL	r0x102D
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1- 1745     	CLRR	r0x102D
                                    1- 1746     	BANKSEL	_duty
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1747     	MOVR	(_duty + 1),W
                                    1- 1748     	BANKSEL	r0x102D
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 04rr                      1- 1749     	SUBAR	r0x102D,W
     0039 0903                      1- 1750     	BTRSS	STATUS,2
     003A 3rrr                      1- 1751     	LGOTO	_00306_DS_
                                    1- 1752     	BANKSEL	_duty
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 01rr                      1- 1753     	MOVR	_duty,W
                                    1- 1754     	BANKSEL	r0x102C
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 04rr                      1- 1755     	SUBAR	r0x102C,W
     003F                           1- 1756     _00306_DS_:
     003F 0C03                      1- 1757     	BTRSC	STATUS,0
     0040 3rrr                      1- 1758     	LGOTO	_00282_DS_
                                    1- 1759     	.line	308, "main.c"; 	--duty;
     0041 21FF                      1- 1760     	MOVIA	0xff
                                    1- 1761     	BANKSEL	_duty
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 03rr                      1- 1762     	ADDAR	_duty,F
     0044 0803                      1- 1763     	BTRSS	STATUS,0
     0045 06rr                      1- 1764     	DECR	(_duty + 1),F
                                    1- 1765     	.line	309, "main.c"; 	PWM2DUTY = duty;
     0046 01rr                      1- 1766     	MOVR	_duty,W
                                    1- 1767     	BANKSEL	r0x102B
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 1768     	MOVAR	r0x102B
     0049 00rr                      1- 1769     	SFUN	_PWM2DUTY
     004A 3rrr                      1- 1770     	LGOTO	_00282_DS_
     004B                           1- 1771     _00280_DS_:
                                    1- 1772     	.line	314, "main.c"; 	if(++duty >= maxDuty)
                                    1- 1773     	BANKSEL	_duty
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 05rr                      1- 1774     	INCR	_duty,F
     004D 0D03                      1- 1775     	BTRSC	STATUS,2
     004E 05rr                      1- 1776     	INCR	(_duty + 1),F
                                    1- 1777     	BANKSEL	_maxDuty
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 1778     	MOVR	_maxDuty,W
                                    1- 1779     	BANKSEL	r0x102B
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 1780     	MOVAR	r0x102B
                                    1- 1781     	BANKSEL	r0x102C
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 02rr                      1- 1782     	CLRR	r0x102C
     0055 2100                      1- 1783     	MOVIA	0x00
                                    1- 1784     	BANKSEL	_duty
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 04rr                      1- 1785     	SUBAR	(_duty + 1),W
     0058 0903                      1- 1786     	BTRSS	STATUS,2
     0059 3rrr                      1- 1787     	LGOTO	_00307_DS_
                                    1- 1788     	BANKSEL	r0x102B
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 01rr                      1- 1789     	MOVR	r0x102B,W
                                    1- 1790     	BANKSEL	_duty
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 04rr                      1- 1791     	SUBAR	_duty,W
     005E                           1- 1792     _00307_DS_:
     005E 0803                      1- 1793     	BTRSS	STATUS,0
     005F 3rrr                      1- 1794     	LGOTO	_00278_DS_
                                    1- 1795     	.line	316, "main.c"; 	duty = maxDuty;
                                    1- 1796     	BANKSEL	r0x102B
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1- 1797     	MOVR	r0x102B,W
                                    1- 1798     	BANKSEL	_duty
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 00rr                      1- 1799     	MOVAR	_duty
                                    1- 1800     	BANKSEL	r0x102C
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 01rr                      1- 1801     	MOVR	r0x102C,W
                                    1- 1802     	BANKSEL	_duty
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 00rr                      1- 1803     	MOVAR	(_duty + 1)
     0068                           1- 1804     _00278_DS_:
                                    1- 1805     	.line	318, "main.c"; 	PWM2DUTY = duty;
                                    1- 1806     	BANKSEL	_duty
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 01rr                      1- 1807     	MOVR	_duty,W
                                    1- 1808     	BANKSEL	r0x102B
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 00rr                      1- 1809     	MOVAR	r0x102B
     006C 00rr                      1- 1810     	SFUN	_PWM2DUTY
     006D                           1- 1811     _00282_DS_:
                                    1- 1812     	.line	320, "main.c"; 	}
                                    1- 1813     	RETURN	
     006D 0010                      3-   26 m1      ret
                                    1- 1814     ; exit point of _workCtr
                                    1- 1816     ;***
                                    1- 1817     ;  pBlock Stats: dbName = C
                                    1- 1818     ;***
                                    1- 1819     ;has an exit
                                    1- 1820     ;; Starting pCode block
                                    1- 1821     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1823     _pwmStop:
                                    1- 1824     ; 2 exit points
                                    1- 1825     	.line	288, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 1826     	CLRA	
     0001 00rr                      1- 1827     	SFUN	_T2CR1
                                    1- 1828     	.line	289, "main.c"; 	}
                                    1- 1829     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1830     ; exit point of _pwmStop
                                    1- 1832     ;***
                                    1- 1833     ;  pBlock Stats: dbName = C
                                    1- 1834     ;***
                                    1- 1835     ;has an exit
                                    1- 1836     ;1 compiler assigned register :
                                    1- 1837     ;   r0x1029
                                    1- 1838     ;; Starting pCode block
                                    1- 1839     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1841     _pwmInit:
                                    1- 1842     ; 2 exit points
                                    1- 1843     	.line	276, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1844     	SFUNR	_T2CR1
                                    1- 1845     	BANKSEL	r0x1029
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1846     	MOVAR	r0x1029
     0003 0Frr                      1- 1847     	BTRSC	r0x1029,7
                                    1- 1848     	.line	277, "main.c"; 	return;
     0004 3rrr                      1- 1849     	LGOTO	_00255_DS_
                                    1- 1850     	.line	278, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1851     	CLRR	_TMRH
                                    1- 1852     	.line	279, "main.c"; 	TMR2 = 128;							//频率为110K
     0006 2180                      1- 1853     	MOVIA	0x80
     0007 00rr                      1- 1854     	SFUN	_TMR2
                                    1- 1855     	.line	280, "main.c"; 	PWM2DUTY = 0x08;				// 		
     0008 2108                      1- 1856     	MOVIA	0x08
     0009 00rr                      1- 1857     	SFUN	_PWM2DUTY
                                    1- 1858     	.line	282, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     000A 0200                      1- 1859     	CLRA	
     000B 00rr                      1- 1860     	SFUN	_T2CR2
                                    1- 1861     	.line	283, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 1862     	MOVIA	0x83
     000D 00rr                      1- 1863     	SFUN	_T2CR1
     000E                           1- 1864     _00255_DS_:
                                    1- 1865     	.line	284, "main.c"; 	}
                                    1- 1866     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1867     ; exit point of _pwmInit
                                    1- 1869     ;***
                                    1- 1870     ;  pBlock Stats: dbName = C
                                    1- 1871     ;***
                                    1- 1872     ;has an exit
                                    1- 1873     ;functions called:
                                    1- 1874     ;   _delay
                                    1- 1875     ;   _LedInput
                                    1- 1876     ;   _delay
                                    1- 1877     ;   _LedInput
                                    1- 1878     ;1 compiler assigned register :
                                    1- 1879     ;   r0x102E
                                    1- 1880     ;; Starting pCode block
                                    1- 1881     .segment "code"; module=main, function=_LED4ON
     0000                           1- 1883     _LED4ON:
                                    1- 1884     ; 2 exit points
                                    1- 1885     	.line	265, "main.c"; 	PB3P53OUT();
     0000 001r                      1- 1886     	IOSTR	_IOSTB
                                    1- 1887     	BANKSEL	r0x102E
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1888     	MOVAR	r0x102E
     0003 1Drr                      1- 1889     	BCR	r0x102E,3
     0004 01rr                      1- 1890     	MOVR	r0x102E,W
     0005 000r                      1- 1891     	IOST	_IOSTB
                                    1- 1892     	.line	266, "main.c"; 	PA7P02OUT();
     0006 001r                      1- 1893     	IOSTR	_IOSTA
     0007 00rr                      1- 1894     	MOVAR	r0x102E
     0008 1Frr                      1- 1895     	BCR	r0x102E,7
     0009 01rr                      1- 1896     	MOVR	r0x102E,W
     000A 000r                      1- 1897     	IOST	_IOSTA
                                    1- 1898     	.line	267, "main.c"; 	PB3P53ON();
     000B 19rr                      1- 1899     	BSR	_PORTB,3
                                    1- 1900     	.line	268, "main.c"; 	PA7P02OFF();
                                    1- 1901     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Frr                      1- 1902     	BCR	_PORTA,7
                                    1- 1903     	.line	269, "main.c"; 	delay(100);
     000E 2164                      1- 1904     	MOVIA	0x64
     000F 2rrr                      1- 1905     	LCALL	_delay
                                    1- 1906     	.line	270, "main.c"; 	LedInput();
     0010 2rrr                      1- 1907     	LCALL	_LedInput
                                    1- 1908     	.line	271, "main.c"; 	}
                                    1- 1909     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1910     ; exit point of _LED4ON
                                    1- 1912     ;***
                                    1- 1913     ;  pBlock Stats: dbName = C
                                    1- 1914     ;***
                                    1- 1915     ;has an exit
                                    1- 1916     ;functions called:
                                    1- 1917     ;   _delay
                                    1- 1918     ;   _LedInput
                                    1- 1919     ;   _delay
                                    1- 1920     ;   _LedInput
                                    1- 1921     ;1 compiler assigned register :
                                    1- 1922     ;   r0x102F
                                    1- 1923     ;; Starting pCode block
                                    1- 1924     .segment "code"; module=main, function=_LED3ON
     0000                           1- 1926     _LED3ON:
                                    1- 1927     ; 2 exit points
                                    1- 1928     	.line	255, "main.c"; 	PA7P02OUT();
     0000 001r                      1- 1929     	IOSTR	_IOSTA
                                    1- 1930     	BANKSEL	r0x102F
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1931     	MOVAR	r0x102F
     0003 1Frr                      1- 1932     	BCR	r0x102F,7
     0004 01rr                      1- 1933     	MOVR	r0x102F,W
     0005 000r                      1- 1934     	IOST	_IOSTA
                                    1- 1935     	.line	256, "main.c"; 	PA0P40OUT();
     0006 001r                      1- 1936     	IOSTR	_IOSTA
     0007 00rr                      1- 1937     	MOVAR	r0x102F
     0008 1Crr                      1- 1938     	BCR	r0x102F,0
     0009 01rr                      1- 1939     	MOVR	r0x102F,W
     000A 000r                      1- 1940     	IOST	_IOSTA
                                    1- 1941     	.line	257, "main.c"; 	PA7P02OFF();
                                    1- 1942     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 1Frr                      1- 1943     	BCR	_PORTA,7
                                    1- 1944     	.line	258, "main.c"; 	PA0P40ON();
     000D 18rr                      1- 1945     	BSR	_PORTA,0
                                    1- 1946     	.line	259, "main.c"; 	delay(100);
     000E 2164                      1- 1947     	MOVIA	0x64
     000F 2rrr                      1- 1948     	LCALL	_delay
                                    1- 1949     	.line	260, "main.c"; 	LedInput();
     0010 2rrr                      1- 1950     	LCALL	_LedInput
                                    1- 1951     	.line	261, "main.c"; 	}
                                    1- 1952     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1953     ; exit point of _LED3ON
                                    1- 1955     ;***
                                    1- 1956     ;  pBlock Stats: dbName = C
                                    1- 1957     ;***
                                    1- 1958     ;has an exit
                                    1- 1959     ;functions called:
                                    1- 1960     ;   _delay
                                    1- 1961     ;   _LedInput
                                    1- 1962     ;   _delay
                                    1- 1963     ;   _LedInput
                                    1- 1964     ;1 compiler assigned register :
                                    1- 1965     ;   r0x1030
                                    1- 1966     ;; Starting pCode block
                                    1- 1967     .segment "code"; module=main, function=_LED2ON
     0000                           1- 1969     _LED2ON:
                                    1- 1970     ; 2 exit points
                                    1- 1971     	.line	245, "main.c"; 	PA7P02OUT();
     0000 001r                      1- 1972     	IOSTR	_IOSTA
                                    1- 1973     	BANKSEL	r0x1030
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1974     	MOVAR	r0x1030
     0003 1Frr                      1- 1975     	BCR	r0x1030,7
     0004 01rr                      1- 1976     	MOVR	r0x1030,W
     0005 000r                      1- 1977     	IOST	_IOSTA
                                    1- 1978     	.line	246, "main.c"; 	PA0P40OUT();
     0006 001r                      1- 1979     	IOSTR	_IOSTA
     0007 00rr                      1- 1980     	MOVAR	r0x1030
     0008 1Crr                      1- 1981     	BCR	r0x1030,0
     0009 01rr                      1- 1982     	MOVR	r0x1030,W
     000A 000r                      1- 1983     	IOST	_IOSTA
                                    1- 1984     	.line	247, "main.c"; 	PA7P02ON();
                                    1- 1985     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 1Brr                      1- 1986     	BSR	_PORTA,7
                                    1- 1987     	.line	248, "main.c"; 	PA0P40OFF();
     000D 1Crr                      1- 1988     	BCR	_PORTA,0
                                    1- 1989     	.line	249, "main.c"; 	delay(100);
     000E 2164                      1- 1990     	MOVIA	0x64
     000F 2rrr                      1- 1991     	LCALL	_delay
                                    1- 1992     	.line	250, "main.c"; 	LedInput();
     0010 2rrr                      1- 1993     	LCALL	_LedInput
                                    1- 1994     	.line	251, "main.c"; 	}
                                    1- 1995     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1996     ; exit point of _LED2ON
                                    1- 1998     ;***
                                    1- 1999     ;  pBlock Stats: dbName = C
                                    1- 2000     ;***
                                    1- 2001     ;has an exit
                                    1- 2002     ;functions called:
                                    1- 2003     ;   _delay
                                    1- 2004     ;   _LedInput
                                    1- 2005     ;   _delay
                                    1- 2006     ;   _LedInput
                                    1- 2007     ;1 compiler assigned register :
                                    1- 2008     ;   r0x1031
                                    1- 2009     ;; Starting pCode block
                                    1- 2010     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2012     _LED1ON:
                                    1- 2013     ; 2 exit points
                                    1- 2014     	.line	235, "main.c"; 	PB3P53OUT();
     0000 001r                      1- 2015     	IOSTR	_IOSTB
                                    1- 2016     	BANKSEL	r0x1031
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2017     	MOVAR	r0x1031
     0003 1Drr                      1- 2018     	BCR	r0x1031,3
     0004 01rr                      1- 2019     	MOVR	r0x1031,W
     0005 000r                      1- 2020     	IOST	_IOSTB
                                    1- 2021     	.line	236, "main.c"; 	PA0P40OUT();
     0006 001r                      1- 2022     	IOSTR	_IOSTA
     0007 00rr                      1- 2023     	MOVAR	r0x1031
     0008 1Crr                      1- 2024     	BCR	r0x1031,0
     0009 01rr                      1- 2025     	MOVR	r0x1031,W
     000A 000r                      1- 2026     	IOST	_IOSTA
                                    1- 2027     	.line	237, "main.c"; 	PB3P53ON();
     000B 19rr                      1- 2028     	BSR	_PORTB,3
                                    1- 2029     	.line	238, "main.c"; 	PA0P40OFF();
                                    1- 2030     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1- 2031     	BCR	_PORTA,0
                                    1- 2032     	.line	239, "main.c"; 	delay(100);
     000E 2164                      1- 2033     	MOVIA	0x64
     000F 2rrr                      1- 2034     	LCALL	_delay
                                    1- 2035     	.line	240, "main.c"; 	LedInput();
     0010 2rrr                      1- 2036     	LCALL	_LedInput
                                    1- 2037     	.line	241, "main.c"; 	}
                                    1- 2038     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 2039     ; exit point of _LED1ON
                                    1- 2041     ;***
                                    1- 2042     ;  pBlock Stats: dbName = C
                                    1- 2043     ;***
                                    1- 2044     ;has an exit
                                    1- 2045     ;1 compiler assigned register :
                                    1- 2046     ;   r0x1027
                                    1- 2047     ;; Starting pCode block
                                    1- 2048     .segment "code"; module=main, function=_LedInput
     0000                           1- 2050     _LedInput:
                                    1- 2051     ; 2 exit points
                                    1- 2052     	.line	227, "main.c"; 	IOSTA |= 0x81;
     0000 001r                      1- 2053     	IOSTR	_IOSTA
                                    1- 2054     	BANKSEL	r0x1027
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2055     	MOVAR	r0x1027
     0003 2181                      1- 2056     	MOVIA	0x81
     0004 11rr                      1- 2057     	IORAR	r0x1027,F
     0005 01rr                      1- 2058     	MOVR	r0x1027,W
     0006 000r                      1- 2059     	IOST	_IOSTA
                                    1- 2060     	.line	228, "main.c"; 	IOSTB |= 0x08;
     0007 001r                      1- 2061     	IOSTR	_IOSTB
     0008 00rr                      1- 2062     	MOVAR	r0x1027
     0009 19rr                      1- 2063     	BSR	r0x1027,3
     000A 01rr                      1- 2064     	MOVR	r0x1027,W
     000B 000r                      1- 2065     	IOST	_IOSTB
                                    1- 2066     	.line	229, "main.c"; 	PORTA &= 0x7E;
     000C 217E                      1- 2067     	MOVIA	0x7e
                                    1- 2068     	BANKSEL	_PORTA
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 10rr                      1- 2069     	ANDAR	_PORTA,F
                                    1- 2070     	.line	230, "main.c"; 	PORTB &= 0xF7;
     000F 1Drr                      1- 2071     	BCR	_PORTB,3
                                    1- 2072     	.line	231, "main.c"; 	}
                                    1- 2073     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 2074     ; exit point of _LedInput
                                    1- 2076     ;***
                                    1- 2077     ;  pBlock Stats: dbName = C
                                    1- 2078     ;***
                                    1- 2079     ;has an exit
                                    1- 2080     ;functions called:
                                    1- 2081     ;   _LedInput
                                    1- 2082     ;   _LedInput
                                    1- 2083     ;   _LED4ON
                                    1- 2084     ;   _LED3ON
                                    1- 2085     ;   _LED2ON
                                    1- 2086     ;   _LED1ON
                                    1- 2087     ;   _LedInput
                                    1- 2088     ;   _LedInput
                                    1- 2089     ;   _LED4ON
                                    1- 2090     ;   _LED3ON
                                    1- 2091     ;   _LED2ON
                                    1- 2092     ;   _LED1ON
                                    1- 2093     ;; Starting pCode block
                                    1- 2094     .segment "code"; module=main, function=_ledShow
     0000                           1- 2096     _ledShow:
                                    1- 2097     ; 2 exit points
                                    1- 2098     	.line	205, "main.c"; 	LedInput();
     0000 2rrr                      1- 2099     	LCALL	_LedInput
                                    1- 2100     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2101     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2102     	.line	206, "main.c"; 	switch(ledStep)
     0001 2105                      1- 2103     	MOVIA	0x05
                                    1- 2104     	BANKSEL	_ledStep
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 2105     	SUBAR	_ledStep,W
     0004 0C03                      1- 2106     	BTRSC	STATUS,0
     0005 3rrr                      1- 2107     	LGOTO	_00222_DS_
     0006 21rr                      1- 2108     	MOVIA	((_00228_DS_ >> 8) & 0xff)
     0007 008A                      1- 2109     	MOVAR	PCHBUF
     0008 01rr                      1- 2110     	MOVR	_ledStep,W
     0009 25rr                      1- 2111     	ADDIA	_00228_DS_
     000A 0C03                      1- 2112     	BTRSC	STATUS,0
     000B 058A                      1- 2113     	INCR	PCHBUF,F
     000C 0082                      1- 2114     	MOVAR	PCL
     000D                           1- 2115     _00228_DS_:
     000D 3rrr                      1- 2116     	LGOTO	_00216_DS_
     000E 3rrr                      1- 2117     	LGOTO	_00220_DS_
     000F 3rrr                      1- 2118     	LGOTO	_00219_DS_
     0010 3rrr                      1- 2119     	LGOTO	_00218_DS_
     0011 3rrr                      1- 2120     	LGOTO	_00217_DS_
     0012                           1- 2121     _00216_DS_:
                                    1- 2122     	.line	209, "main.c"; 	LedInput();
     0012 2rrr                      1- 2123     	LCALL	_LedInput
                                    1- 2124     	.line	210, "main.c"; 	break;
     0013 3rrr                      1- 2125     	LGOTO	_00222_DS_
     0014                           1- 2126     _00217_DS_:
                                    1- 2127     	.line	212, "main.c"; 	LED4ON();
     0014 2rrr                      1- 2128     	LCALL	_LED4ON
     0015                           1- 2129     _00218_DS_:
                                    1- 2130     	.line	214, "main.c"; 	LED3ON();
     0015 2rrr                      1- 2131     	LCALL	_LED3ON
     0016                           1- 2132     _00219_DS_:
                                    1- 2133     	.line	216, "main.c"; 	LED2ON();
     0016 2rrr                      1- 2134     	LCALL	_LED2ON
     0017                           1- 2135     _00220_DS_:
                                    1- 2136     	.line	218, "main.c"; 	LED1ON();
     0017 2rrr                      1- 2137     	LCALL	_LED1ON
     0018                           1- 2138     _00222_DS_:
                                    1- 2139     	.line	221, "main.c"; 	}
                                    1- 2140     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 2141     ; exit point of _ledShow
                                    1- 2143     ;***
                                    1- 2144     ;  pBlock Stats: dbName = C
                                    1- 2145     ;***
                                    1- 2146     ;has an exit
                                    1- 2147     ;; Starting pCode block
                                    1- 2148     .segment "code"; module=main, function=_initSys
     0000                           1- 2150     _initSys:
                                    1- 2151     ; 2 exit points
                                    1- 2152     	.line	178, "main.c"; 	DISI();
     0000 0013                      1- 2153     	DISI
                                    1- 2154     	.line	179, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input;
     0001 2170                      1- 2155     	MOVIA	0x70
     0002 000r                      1- 2156     	IOST	_IOSTA
                                    1- 2157     	.line	180, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1- 2158     	MOVIA	0x01
     0004 000r                      1- 2159     	IOST	_IOSTB
                                    1- 2160     	.line	181, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2161     	CLRR	_PORTB
                                    1- 2162     	.line	182, "main.c"; 	PORTA = 0x00;
                                    1- 2163     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 2164     	CLRR	_PORTA
                                    1- 2165     	.line	183, "main.c"; 	APHCON = 0x9F;
     0008 219F                      1- 2166     	MOVIA	0x9f
     0009 000r                      1- 2167     	IOST	_APHCON
                                    1- 2168     	.line	184, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 2169     	MOVIA	0xff
     000B 00rr                      1- 2170     	MOVAR	_BPHCON
                                    1- 2171     	.line	186, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2172     	MOVIA	0x01
     000D 00rr                      1- 2173     	MOVAR	_INTE
                                    1- 2174     	.line	188, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2175     	CLRA	
     000F 000r                      1- 2176     	IOST	_PCON1
                                    1- 2177     	.line	190, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2178     	MOVIA	0x37
     0011 00rr                      1- 2179     	MOVAR	_TMR0
                                    1- 2180     	.line	191, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0012 0200                      1- 2181     	CLRA	
     0013 0003                      1- 2182     	T0MD	
                                    1- 2183     	.line	193, "main.c"; 	PCON1 = C_TMR0_En;
     0014 2101                      1- 2184     	MOVIA	0x01
     0015 000r                      1- 2185     	IOST	_PCON1
                                    1- 2186     	.line	196, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0016 2188                      1- 2187     	MOVIA	0x88
     0017 00rr                      1- 2188     	MOVAR	_PCON
                                    1- 2189     	.line	199, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0018 2101                      1- 2190     	MOVIA	0x01
     0019 000r                      1- 2191     	IOST	_PCON1
                                    1- 2192     	.line	200, "main.c"; 	ENI();
     001A 0004                      1- 2193     	ENI
                                    1- 2194     	.line	201, "main.c"; 	}
                                    1- 2195     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1- 2196     ; exit point of _initSys
                                    1- 2198     ;***
                                    1- 2199     ;  pBlock Stats: dbName = C
                                    1- 2200     ;***
                                    1- 2201     ;has an exit
                                    1- 2202     ;; Starting pCode block
                                    1- 2203     .segment "code"; module=main, function=_fgCtr
     0000                           1- 2205     _fgCtr:
                                    1- 2206     ; 2 exit points
                                    1- 2207     	.line	161, "main.c"; 	if(PORTB & 0x01)
     0000 08rr                      1- 2208     	BTRSS	_PORTB,0
     0001 3rrr                      1- 2209     	LGOTO	_00205_DS_
                                    1- 2210     	.line	163, "main.c"; 	if(preFG == 0)
                                    1- 2211     	BANKSEL	_preFG
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 01rr                      1- 2212     	MOVR	_preFG,W
     0004 0903                      1- 2213     	BTRSS	STATUS,2
     0005 3rrr                      1- 2214     	LGOTO	_00203_DS_
                                    1- 2215     	.line	165, "main.c"; 	fgPRD = fgCount;
                                    1- 2216     	BANKSEL	_fgCount
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1- 2217     	MOVR	_fgCount,W
                                    1- 2218     	BANKSEL	_fgPRD
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 2219     	MOVAR	_fgPRD
                                    1- 2220     	BANKSEL	_fgCount
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 2221     	MOVR	(_fgCount + 1),W
                                    1- 2222     	BANKSEL	_fgPRD
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 2223     	MOVAR	(_fgPRD + 1)
                                    1- 2224     	.line	166, "main.c"; 	fgCount = 0;
                                    1- 2225     	BANKSEL	_fgCount
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 2226     	CLRR	_fgCount
     0010 02rr                      1- 2227     	CLRR	(_fgCount + 1)
     0011                           1- 2228     _00203_DS_:
                                    1- 2229     	.line	168, "main.c"; 	preFG = 1;
     0011 2101                      1- 2230     	MOVIA	0x01
                                    1- 2231     	BANKSEL	_preFG
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2232     	MOVAR	_preFG
     0014 3rrr                      1- 2233     	LGOTO	_00207_DS_
     0015                           1- 2234     _00205_DS_:
                                    1- 2235     	.line	172, "main.c"; 	preFG = 0;
                                    1- 2236     	BANKSEL	_preFG
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 2237     	CLRR	_preFG
     0017                           1- 2238     _00207_DS_:
                                    1- 2239     	.line	174, "main.c"; 	}
                                    1- 2240     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 2241     ; exit point of _fgCtr
                                    1- 2243     ;***
                                    1- 2244     ;  pBlock Stats: dbName = C
                                    1- 2245     ;***
                                    1- 2246     ;has an exit
                                    1- 2247     ;; Starting pCode block
                                    1- 2248     .segment "code"; module=main, function=_LEDLOFF
     0000                           1- 2250     _LEDLOFF:
                                    1- 2251     ; 2 exit points
                                    1- 2252     	.line	155, "main.c"; 	PORTA &= 0xF7;
                                    1- 2253     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Drr                      1- 2254     	BCR	_PORTA,3
                                    1- 2255     	.line	157, "main.c"; 	}
                                    1- 2256     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2257     ; exit point of _LEDLOFF
                                    1- 2259     ;***
                                    1- 2260     ;  pBlock Stats: dbName = C
                                    1- 2261     ;***
                                    1- 2262     ;has an exit
                                    1- 2263     ;; Starting pCode block
                                    1- 2264     .segment "code"; module=main, function=_LEDHOFF
     0000                           1- 2266     _LEDHOFF:
                                    1- 2267     ; 2 exit points
                                    1- 2268     	.line	150, "main.c"; 	PORTA &= 0xFB;
                                    1- 2269     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Drr                      1- 2270     	BCR	_PORTA,2
                                    1- 2271     	.line	152, "main.c"; 	}
                                    1- 2272     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2273     ; exit point of _LEDHOFF
                                    1- 2275     ;***
                                    1- 2276     ;  pBlock Stats: dbName = C
                                    1- 2277     ;***
                                    1- 2278     ;has an exit
                                    1- 2279     ;; Starting pCode block
                                    1- 2280     .segment "code"; module=main, function=_LEDLON
     0000                           1- 2282     _LEDLON:
                                    1- 2283     ; 2 exit points
                                    1- 2284     	.line	145, "main.c"; 	PORTA |= 0x08;
                                    1- 2285     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 2286     	BSR	_PORTA,3
                                    1- 2287     	.line	147, "main.c"; 	}
                                    1- 2288     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2289     ; exit point of _LEDLON
                                    1- 2291     ;***
                                    1- 2292     ;  pBlock Stats: dbName = C
                                    1- 2293     ;***
                                    1- 2294     ;has an exit
                                    1- 2295     ;; Starting pCode block
                                    1- 2296     .segment "code"; module=main, function=_LEDHON
     0000                           1- 2298     _LEDHON:
                                    1- 2299     ; 2 exit points
                                    1- 2300     	.line	140, "main.c"; 	PORTA |= 0x04;
                                    1- 2301     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 2302     	BSR	_PORTA,2
                                    1- 2303     	.line	142, "main.c"; 	}
                                    1- 2304     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2305     ; exit point of _LEDHON
                                    1- 2308     ;	code size estimation:
                                    1- 2309     ;	  818+  201 =  1019 instructions ( 2440 byte)
                                    1- 2311     	end
                                    1- 2311     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002C
_00002_DS_              Label    00000025
_00112_DS_              Label    0000002E
_00114_DS_              Label    00000032
_00124_DS_              Label    00000012
_00125_DS_              Label    0000001F
_00129_DS_              Label    00000020
_00140_DS_              Label    00000002
_00181_DS_              Label    0000003D
_00203_DS_              Label    00000011
_00205_DS_              Label    00000015
_00207_DS_              Label    00000017
_00216_DS_              Label    00000012
_00217_DS_              Label    00000014
_00218_DS_              Label    00000015
_00219_DS_              Label    00000016
_00220_DS_              Label    00000017
_00222_DS_              Label    00000018
_00228_DS_              Label    0000000D
_00255_DS_              Label    0000000E
_00267_DS_              Label    00000027
_00270_DS_              Label    0000001E
_00273_DS_              Label    00000015
_00274_DS_              Label    0000002F
_00278_DS_              Label    00000068
_00280_DS_              Label    0000004B
_00282_DS_              Label    0000006D
_00305_DS_              Label    00000007
_00306_DS_              Label    0000003F
_00307_DS_              Label    0000005E
_00313_DS_              Label    0000000E
_00317_DS_              Label    0000001A
_00320_DS_              Label    00000048
_00324_DS_              Label    0000003C
_00327_DS_              Label    00000035
_00331_DS_              Label    00000029
_00334_DS_              Label    00000021
_00336_DS_              Label    0000004A
_00350_DS_              Label    00000021
_00353_DS_              Label    00000013
_00355_DS_              Label    00000029
_00361_DS_              Label    00000006
_00362_DS_              Label    00000007
_00364_DS_              Label    00000022
_00368_DS_              Label    00000047
_00371_DS_              Label    0000003E
_00374_DS_              Label    00000035
_00375_DS_              Label    0000004F
_00377_DS_              Label    00000067
_00382_DS_              Label    00000053
_00385_DS_              Label    0000007C
_00401_DS_              Label    0000001D
_00402_DS_              Label    00000025
_00404_DS_              Label    00000013
_00405_DS_              Label    00000027
_00406_DS_              Label    00000028
_00412_DS_              Label    00000019
_00414_DS_              Label    00000012
_00419_DS_              Label    0000001E
_00421_DS_              Label    00000024
_00428_DS_              Label    00000004
_00430_DS_              Label    0000000E
_00442_DS_              Label    00000056
_00443_DS_              Label    00000059
_00447_DS_              Label    0000009E
_00450_DS_              Label    0000008E
_00453_DS_              Label    0000007E
_00456_DS_              Label    0000006E
_00459_DS_              Label    0000003B
_00461_DS_              Label    000000A4
_00487_DS_              Label    00000035
_00488_DS_              Label    00000042
_00489_DS_              Label    00000050
_00490_DS_              Label    00000063
_00491_DS_              Label    00000075
_00492_DS_              Label    00000085
_00493_DS_              Label    00000095
_00500_DS_              Label    0000000E
_00502_DS_              Label    0000002F
_00507_DS_              Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBatAD             Label    00000000
_chrgCtr                Label    00000000
_chrgTime               Label    00000000
_CMPCR                  Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_F_AIN5_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_fgCount                Label    00000000
_fgCtr                  Label    00000000
_fgPRD                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IO_Init                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_LEDHOFF                Label    00000000
_LEDHON                 Label    00000000
_LedInput               Label    00000000
_LEDLOFF                Label    00000000
_LEDLON                 Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_preFG                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN5_DATA            Label    00000000
_R_AIN5_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepTime              Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStartFlag          Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000043
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
r0x101D                 Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1022                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
