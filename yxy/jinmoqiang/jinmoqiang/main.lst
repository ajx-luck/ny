
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_ADMDbits
                                    1-   24     	extern	_ADRbits
                                    1-   25     	extern	_ADVREFHbits
                                    1-   26     	extern	_ADCRbits
                                    1-   27     	extern	_AWUCONbits
                                    1-   28     	extern	_PACONbits
                                    1-   29     	extern	_INTEDGbits
                                    1-   30     	extern	_ANAENbits
                                    1-   31     	extern	_RFCbits
                                    1-   32     	extern	_INTE2bits
                                    1-   33     	extern	_INDF
                                    1-   34     	extern	_TMR0
                                    1-   35     	extern	_PCL
                                    1-   36     	extern	_STATUS
                                    1-   37     	extern	_FSR
                                    1-   38     	extern	_PORTA
                                    1-   39     	extern	_PORTB
                                    1-   40     	extern	_PCON
                                    1-   41     	extern	_BWUCON
                                    1-   42     	extern	_PCHBUF
                                    1-   43     	extern	_ABPLCON
                                    1-   44     	extern	_BPHCON
                                    1-   45     	extern	_INTE
                                    1-   46     	extern	_INTF
                                    1-   47     	extern	_ADMD
                                    1-   48     	extern	_ADR
                                    1-   49     	extern	_ADD
                                    1-   50     	extern	_ADVREFH
                                    1-   51     	extern	_ADCR
                                    1-   52     	extern	_AWUCON
                                    1-   53     	extern	_PACON
                                    1-   54     	extern	_INTEDG
                                    1-   55     	extern	_TMRH
                                    1-   56     	extern	_ANAEN
                                    1-   57     	extern	_RFC
                                    1-   58     	extern	_TM3RH
                                    1-   59     	extern	_INTE2
                                    1-   60     	extern	_TMR1
                                    1-   61     	extern	_T1CR1
                                    1-   62     	extern	_T1CR2
                                    1-   63     	extern	_PWM1DUTY
                                    1-   64     	extern	_PS1CV
                                    1-   65     	extern	_BZ1CR
                                    1-   66     	extern	_IRCR
                                    1-   67     	extern	_TBHP
                                    1-   68     	extern	_TBHD
                                    1-   69     	extern	_TMR2
                                    1-   70     	extern	_T2CR1
                                    1-   71     	extern	_T2CR2
                                    1-   72     	extern	_PWM2DUTY
                                    1-   73     	extern	_PS2CV
                                    1-   74     	extern	_BZ2CR
                                    1-   75     	extern	_OSCCR
                                    1-   76     	extern	_TMR3
                                    1-   77     	extern	_T3CR1
                                    1-   78     	extern	_T3CR2
                                    1-   79     	extern	_PWM3DUTY
                                    1-   80     	extern	_PS3CV
                                    1-   81     	extern	_BZ3CR
                                    1-   82     	extern	_IOSTA
                                    1-   83     	extern	_IOSTB
                                    1-   84     	extern	_APHCON
                                    1-   85     	extern	_PS0CV
                                    1-   86     	extern	_BODCON
                                    1-   87     	extern	_CMPCR
                                    1-   88     	extern	_PCON1
                                    1-   89     	extern	_T0MD
                                    1-   90     	extern	___sdcc_saved_fsr
                                    1-   91     	extern	___sdcc_saved_stk00
                                    1-   92     	extern	___sdcc_saved_stk01
                                    1-   93     	extern	__nyc_ny8_startup
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     ; global declarations
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     	extern	_F_wait_eoc
                                    1-   98     	extern	_F_AIN5_Convert
                                    1-   99     	extern	_checkBatAD
                                    1-  100     	extern	_initAD
                                    1-  101     	extern	_delay
                                    1-  102     	extern	_chrgCtr
                                    1-  103     	extern	_keyRead
                                    1-  104     	extern	_gotoSleep
                                    1-  105     	extern	_keyCtr
                                    1-  106     	extern	_ledCtr
                                    1-  107     	extern	_LedCtr2
                                    1-  108     	extern	_workCtr
                                    1-  109     	extern	_pwmStop
                                    1-  110     	extern	_pwmInit
                                    1-  111     	extern	_LED4ON
                                    1-  112     	extern	_LED3ON
                                    1-  113     	extern	_LED2ON
                                    1-  114     	extern	_LED1ON
                                    1-  115     	extern	_LedInput
                                    1-  116     	extern	_ledShow
                                    1-  117     	extern	_initSys
                                    1-  118     	extern	_fgCtr
                                    1-  119     	extern	_isr
                                    1-  120     	extern	_main
                                    1-  121     	extern	_LEDHON
                                    1-  122     	extern	_LEDLON
                                    1-  123     	extern	_LEDHOFF
                                    1-  124     	extern	_LEDLOFF
                                    1-  125     	extern	_Status
                                    1-  126     	extern	_duty
                                    1-  127     	extern	_intCount
                                    1-  128     	extern	_count500ms
                                    1-  129     	extern	_keyCount
                                    1-  130     	extern	_workStep
                                    1-  131     	extern	_ledStep
                                    1-  132     	extern	_fgCount
                                    1-  133     	extern	_fgPRD
                                    1-  134     	extern	_preFG
                                    1-  135     	extern	_maxDuty
                                    1-  136     	extern	_pwStep
                                    1-  137     	extern	_R_AIN5_DATA
                                    1-  138     	extern	_R_AIN5_DATA_LB
                                    1-  139     	extern	_chrgTime
                                    1-  140     	extern	_startStep
                                    1-  141     	extern	_sleepTime
                                    1-  142     	extern	_count200ms
                                    1-  143     	extern	_workStartFlag
                                    1-  145     	extern PSAVE
                                    1-  146     	extern SSAVE
                                    1-  147     	extern WSAVE
                                    1-  148     	extern STK02
                                    1-  149     	extern STK01
                                    1-  150     	extern STK00
                                    1-  152     .segment "uninit", 0x20000040
 20000040                           1-  153     PSAVE:
                                    1-  154     	.res 1
 20000041                           1-  155     SSAVE:
                                    1-  156     	.res 1
 20000042                           1-  157     WSAVE:
                                    1-  158     	.res 1
 20000043                           1-  159     STK02:
                                    1-  160     	.res 1
 20000044                           1-  161     STK01:
                                    1-  162     	.res 1
 20000045                           1-  163     STK00:
                                    1-  164     	.res 1
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ; global definitions
                                    1-  168     ;--------------------------------------------------------
                                    1-  169     .segment "uninit"
     0000                           1-  170     _R_AIN5_DATA:
                                    1-  171     	.res	2
                                    1-  174     .segment "uninit"
     0000                           1-  175     _R_AIN5_DATA_LB:
                                    1-  176     	.res	1
                                    1-  179     ;--------------------------------------------------------
                                    1-  180     ; absolute symbol definitions
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     ;--------------------------------------------------------
                                    1-  183     ; compiler-defined variables
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1027:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x1030:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x102F:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x102E:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x102D:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x1029:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x102B:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x102C:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x102A:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1028:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x101B:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x101C:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x1025:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1026:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x101D:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x101E:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x101F:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1022:
                                    1-  238     	.res	1
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ; initialized data
                                    1-  241     ;--------------------------------------------------------
                                    1-  243     .segment "idata"
     0000                           1-  244     _Status:
     0000 0000                      1-  245     	dw	0x00
                                    1-  249     .segment "idata"
     0000                           1-  250     _duty:
     0000 0000 0000                 1-  251     	dw	0x00, 0x00
                                    1-  255     .segment "idata"
     0000                           1-  256     _intCount:
     0000 0000                      1-  257     	dw	0x00
                                    1-  261     .segment "idata"
     0000                           1-  262     _count500ms:
     0000 0000                      1-  263     	dw	0x00
                                    1-  267     .segment "idata"
     0000                           1-  268     _keyCount:
     0000 0000                      1-  269     	dw	0x00
                                    1-  273     .segment "idata"
     0000                           1-  274     _workStep:
     0000 0000                      1-  275     	dw	0x00
                                    1-  279     .segment "idata"
     0000                           1-  280     _ledStep:
     0000 0000                      1-  281     	dw	0x00
                                    1-  285     .segment "idata"
     0000                           1-  286     _fgCount:
     0000 0000 0000                 1-  287     	dw	0x00, 0x00
                                    1-  291     .segment "idata"
     0000                           1-  292     _fgPRD:
     0000 0000 0000                 1-  293     	dw	0x00, 0x00
                                    1-  297     .segment "idata"
     0000                           1-  298     _preFG:
     0000 0000                      1-  299     	dw	0x00
                                    1-  303     .segment "idata"
     0000                           1-  304     _maxDuty:
     0000 0000                      1-  305     	dw	0x00
                                    1-  309     .segment "idata"
     0000                           1-  310     _pwStep:
     0000 0000                      1-  311     	dw	0x00
                                    1-  315     .segment "idata"
     0000                           1-  316     _chrgTime:
     0000 0000 0000                 1-  317     	dw	0x00, 0x00
                                    1-  321     .segment "idata"
     0000                           1-  322     _startStep:
     0000 0000                      1-  323     	dw	0x00
                                    1-  327     .segment "idata"
     0000                           1-  328     _sleepTime:
     0000 0000 0000                 1-  329     	dw	0x00, 0x00
                                    1-  333     .segment "idata"
     0000                           1-  334     _count200ms:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _workStartFlag:
     0000 0000                      1-  341     	dw	0x00
                                    1-  344     ;--------------------------------------------------------
                                    1-  345     ; overlayable items in internal ram 
                                    1-  346     ;--------------------------------------------------------
                                    1-  347     ;	udata_ovr
                                    1-  348     ;--------------------------------------------------------
                                    1-  349     ; reset vector 
                                    1-  350     ;--------------------------------------------------------
                                    1-  351     ORG	0x0000
     0000 3rrr                      1-  352     	LGOTO	__nyc_ny8_startup
                                    1-  353     ;--------------------------------------------------------
                                    1-  354     ; interrupt and initialization code
                                    1-  355     ;--------------------------------------------------------
                                    1-  356     ORG 0x0008
     0008 3rrr                      1-  357     	lgoto	__sdcc_interrupt
                                    1-  359     .segment "code"
     0000                           1-  360     __sdcc_interrupt:
                                    1-  361     ;***
                                    1-  362     ;  pBlock Stats: dbName = I
                                    1-  363     ;***
                                    1-  364     ;2 compiler assigned registers:
                                    1-  365     ;   STK00
                                    1-  366     ;   STK01
                                    1-  367     ;; Starting pCode block
     0000                           1-  368     _isr:
                                    1-  369     ; 0 exit points
                                    1-  370     	.line	73, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  371     	MOVAR	WSAVE
     0001 1503                      1-  372     	SWAPR	STATUS,W
     0002 0283                      1-  373     	CLRR	STATUS
     0003 00rr                      1-  374     	MOVAR	SSAVE
     0004 010A                      1-  375     	MOVR	PCHBUF,W
     0005 028A                      1-  376     	CLRR	PCHBUF
     0006 00rr                      1-  377     	MOVAR	PSAVE
     0007 0104                      1-  378     	MOVR	FSR,W
                                    1-  379     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  380     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  381     	MOVR	STK00,W
                                    1-  382     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  383     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  384     	MOVR	STK01,W
                                    1-  385     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  386     	MOVAR	___sdcc_saved_stk01
                                    1-  387     	.line	75, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  388     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  389     	LGOTO	_00112_DS_
                                    1-  390     	.line	77, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  391     	MOVIA	0x37
     0013 03rr                      1-  392     	ADDAR	_TMR0,F
                                    1-  393     	.line	78, "main.c"; 	++fgCount;
                                    1-  394     	BANKSEL	_fgCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  395     	INCR	_fgCount,F
     0016 0D03                      1-  396     	BTRSC	STATUS,2
     0017 05rr                      1-  397     	INCR	(_fgCount + 1),F
                                    1-  398     	.line	79, "main.c"; 	if(++intCount >= 100)
                                    1-  399     	BANKSEL	_intCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 05rr                      1-  400     	INCR	_intCount,F
                                    1-  401     ;;unsigned compare: left < lit (0x64=100), size=1
     001A 2164                      1-  402     	MOVIA	0x64
     001B 04rr                      1-  403     	SUBAR	_intCount,W
     001C 0803                      1-  404     	BTRSS	STATUS,0
     001D 3rrr                      1-  405     	LGOTO	_00112_DS_
                                    1-  406     	.line	81, "main.c"; 	IntFlag = 1;
                                    1-  407     	BANKSEL	_Status
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 18rr                      1-  408     	BSR	_Status,0
                                    1-  409     	.line	82, "main.c"; 	intCount = 0;
                                    1-  410     	BANKSEL	_intCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 02rr                      1-  411     	CLRR	_intCount
                                    1-  412     	.line	83, "main.c"; 	if(++count500ms >= 40)
                                    1-  413     	BANKSEL	_count500ms
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  414     	INCR	_count500ms,F
                                    1-  415     ;;unsigned compare: left < lit (0x28=40), size=1
     0024 2128                      1-  416     	MOVIA	0x28
     0025 04rr                      1-  417     	SUBAR	_count500ms,W
     0026 0C03                      1-  418     	BTRSC	STATUS,0
                                    1-  419     	.line	84, "main.c"; 	count500ms = 0;
     0027 02rr                      1-  420     	CLRR	_count500ms
                                    1-  421     	.line	85, "main.c"; 	if(++count200ms >= 20)
                                    1-  422     	BANKSEL	_count200ms
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 05rr                      1-  423     	INCR	_count200ms,F
     002A 2114                      1-  424     	MOVIA	0x14
     002B 04rr                      1-  425     	SUBAR	_count200ms,W
     002C 0C03                      1-  426     	BTRSC	STATUS,0
                                    1-  427     	.line	86, "main.c"; 	count200ms = 0;
     002D 02rr                      1-  428     	CLRR	_count200ms
     002E                           1-  429     _00112_DS_:
                                    1-  430     	.line	92, "main.c"; 	if(INTFbits.PABIF)
     002E 08rr                      1-  431     	BTRSS	_INTFbits,1
     002F 3rrr                      1-  432     	LGOTO	_00114_DS_
                                    1-  433     	.line	94, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0030 21FD                      1-  434     	MOVIA	0xfd
     0031 00rr                      1-  435     	MOVAR	_INTF
     0032                           1-  436     _00114_DS_:
                                    1-  437     	.line	97, "main.c"; 	INTF = 0;
     0032 02rr                      1-  438     	CLRR	_INTF
                                    1-  439     	.line	99, "main.c"; 	}
                                    1-  440     	BANKSEL	___sdcc_saved_stk01
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  441     	MOVR	___sdcc_saved_stk01,W
     0035 00rr                      1-  442     	MOVAR	STK01
                                    1-  443     	BANKSEL	___sdcc_saved_stk00
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1-  444     	MOVR	___sdcc_saved_stk00,W
     0038 00rr                      1-  445     	MOVAR	STK00
                                    1-  446     	BANKSEL	___sdcc_saved_fsr
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  447     	MOVR	___sdcc_saved_fsr,W
     003B 0084                      1-  448     	MOVAR	FSR
     003C 01rr                      1-  449     	MOVR	PSAVE,W
     003D 008A                      1-  450     	MOVAR	PCHBUF
     003E 0283                      1-  451     	CLRR	STATUS
     003F 15rr                      1-  452     	SWAPR	SSAVE,W
     0040 0083                      1-  453     	MOVAR	STATUS
     0041 15rr                      1-  454     	SWAPR	WSAVE,F
     0042 15rr                      1-  455     	SWAPR	WSAVE,W
     0043                           1-  456     END_OF_INTERRUPT:
     0043 0011                      1-  457     	RETIE	
                                    1-  459     ;--------------------------------------------------------
                                    1-  460     ; code
                                    1-  461     ;--------------------------------------------------------
                                    1-  462     ;***
                                    1-  463     ;  pBlock Stats: dbName = M
                                    1-  464     ;***
                                    1-  465     ;has an exit
                                    1-  466     ;functions called:
                                    1-  467     ;   _initSys
                                    1-  468     ;   _initAD
                                    1-  469     ;   _ledShow
                                    1-  470     ;   _fgCtr
                                    1-  471     ;   _keyCtr
                                    1-  472     ;   _checkBatAD
                                    1-  473     ;   _ledCtr
                                    1-  474     ;   _chrgCtr
                                    1-  475     ;   _LedCtr2
                                    1-  476     ;   _workCtr
                                    1-  477     ;   _gotoSleep
                                    1-  478     ;   _initSys
                                    1-  479     ;   _initAD
                                    1-  480     ;   _ledShow
                                    1-  481     ;   _fgCtr
                                    1-  482     ;   _keyCtr
                                    1-  483     ;   _checkBatAD
                                    1-  484     ;   _ledCtr
                                    1-  485     ;   _chrgCtr
                                    1-  486     ;   _LedCtr2
                                    1-  487     ;   _workCtr
                                    1-  488     ;   _gotoSleep
                                    1-  489     ;; Starting pCode block
                                    1-  490     .segment "code"; module=main, function=_main
     0000                           1-  492     _main:
                                    1-  493     ; 2 exit points
                                    1-  494     	.line	103, "main.c"; 	initSys();
     0000 2rrr                      1-  495     	LCALL	_initSys
                                    1-  496     	.line	104, "main.c"; 	initAD();
     0001 2rrr                      1-  497     	LCALL	_initAD
     0002                           1-  498     _00144_DS_:
                                    1-  499     	.line	107, "main.c"; 	ledShow();
     0002 2rrr                      1-  500     	LCALL	_ledShow
                                    1-  501     	.line	108, "main.c"; 	CLRWDT();
     0003 0002                      1-  502     	clrwdt
                                    1-  503     	.line	109, "main.c"; 	fgCtr();
     0004 2rrr                      1-  504     	LCALL	_fgCtr
                                    1-  505     	.line	110, "main.c"; 	if(!IntFlag)
                                    1-  506     	BANKSEL	_Status
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 08rr                      1-  507     	BTRSS	_Status,0
     0007 3rrr                      1-  508     	LGOTO	_00144_DS_
                                    1-  509     	.line	112, "main.c"; 	IntFlag = 0;
     0008 1Crr                      1-  510     	BCR	_Status,0
                                    1-  511     	.line	113, "main.c"; 	if((PORTA & 0x20) == 0)
                                    1-  512     	BANKSEL	_PORTA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 0Arr                      1-  513     	BTRSS	_PORTA,5
                                    1-  514     	.line	114, "main.c"; 	keyCtr();
     000B 2rrr                      1-  515     	LCALL	_keyCtr
                                    1-  516     	.line	115, "main.c"; 	if(count200ms == 0)
                                    1-  517     	BANKSEL	_count200ms
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  518     	MOVR	_count200ms,W
     000E 0903                      1-  519     	BTRSS	STATUS,2
     000F 3rrr                      1-  520     	LGOTO	_00124_DS_
                                    1-  521     	.line	117, "main.c"; 	checkBatAD();
     0010 2rrr                      1-  522     	LCALL	_checkBatAD
                                    1-  523     	.line	118, "main.c"; 	ledCtr();
     0011 2rrr                      1-  524     	LCALL	_ledCtr
     0012                           1-  525     _00124_DS_:
                                    1-  526     	.line	120, "main.c"; 	if(count500ms == 0)
                                    1-  527     	BANKSEL	_count500ms
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1-  528     	MOVR	_count500ms,W
     0014 0903                      1-  529     	BTRSS	STATUS,2
     0015 3rrr                      1-  530     	LGOTO	_00133_DS_
                                    1-  531     	.line	122, "main.c"; 	chrgCtr();
     0016 2rrr                      1-  532     	LCALL	_chrgCtr
                                    1-  533     	.line	123, "main.c"; 	if(workStartFlag == 2)
                                    1-  534     	BANKSEL	_workStartFlag
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1-  535     	MOVR	_workStartFlag,W
     0019 2402                      1-  536     	XORIA	0x02
     001A 0903                      1-  537     	BTRSS	STATUS,2
     001B 3rrr                      1-  538     	LGOTO	_00128_DS_
                                    1-  539     	.line	125, "main.c"; 	if(ledStep > 0)
                                    1-  540     	BANKSEL	_ledStep
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1-  541     	MOVR	_ledStep,W
     001E 0D03                      1-  542     	BTRSC	STATUS,2
     001F 3rrr                      1-  543     	LGOTO	_00128_DS_
                                    1-  544     	.line	127, "main.c"; 	ledStep--;
     0020 06rr                      1-  545     	DECR	_ledStep,F
                                    1-  546     	.line	128, "main.c"; 	workStartFlag = 0;
                                    1-  547     	BANKSEL	_workStartFlag
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 02rr                      1-  548     	CLRR	_workStartFlag
     0023                           1-  549     _00128_DS_:
                                    1-  550     	.line	131, "main.c"; 	if(workStartFlag == 1 || workStartFlag == 3)
                                    1-  551     	BANKSEL	_workStartFlag
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  552     	MOVR	_workStartFlag,W
     0025 2401                      1-  553     	XORIA	0x01
     0026 0D03                      1-  554     	BTRSC	STATUS,2
     0027 3rrr                      1-  555     	LGOTO	_00129_DS_
     0028 01rr                      1-  556     	MOVR	_workStartFlag,W
     0029 2403                      1-  557     	XORIA	0x03
     002A 0D03                      1-  558     	BTRSC	STATUS,2
     002B                           1-  559     _00129_DS_:
                                    1-  560     	.line	132, "main.c"; 	LedCtr2();
     002B 2rrr                      1-  561     	LCALL	_LedCtr2
     002C                           1-  562     _00133_DS_:
                                    1-  563     	.line	134, "main.c"; 	if(workStep)
                                    1-  564     	BANKSEL	_workStep
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1-  565     	MOVR	_workStep,W
     002E 0903                      1-  566     	BTRSS	STATUS,2
                                    1-  567     	.line	135, "main.c"; 	workCtr();
     002F 2rrr                      1-  568     	LCALL	_workCtr
                                    1-  569     	.line	136, "main.c"; 	if(workStep == 0 && keyCount == 0 && workStartFlag == 0 && ((PORTA & 0x20) == 0))
                                    1-  570     	BANKSEL	_workStep
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1-  571     	MOVR	_workStep,W
     0032 0903                      1-  572     	BTRSS	STATUS,2
     0033 3rrr                      1-  573     	LGOTO	_00144_DS_
                                    1-  574     	BANKSEL	_keyCount
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1-  575     	MOVR	_keyCount,W
     0036 0903                      1-  576     	BTRSS	STATUS,2
     0037 3rrr                      1-  577     	LGOTO	_00144_DS_
                                    1-  578     	BANKSEL	_workStartFlag
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 01rr                      1-  579     	MOVR	_workStartFlag,W
     003A 0903                      1-  580     	BTRSS	STATUS,2
     003B 3rrr                      1-  581     	LGOTO	_00144_DS_
                                    1-  582     	BANKSEL	_PORTA
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 0Err                      1-  583     	BTRSC	_PORTA,5
     003E 3rrr                      1-  584     	LGOTO	_00144_DS_
                                    1-  585     	.line	138, "main.c"; 	if(++sleepTime > 2000)
                                    1-  586     	BANKSEL	_sleepTime
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 05rr                      1-  587     	INCR	_sleepTime,F
     0041 0D03                      1-  588     	BTRSC	STATUS,2
     0042 05rr                      1-  589     	INCR	(_sleepTime + 1),F
                                    1-  590     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  591     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0043 2107                      1-  592     	MOVIA	0x07
     0044 04rr                      1-  593     	SUBAR	(_sleepTime + 1),W
     0045 0903                      1-  594     	BTRSS	STATUS,2
     0046 3rrr                      1-  595     	LGOTO	_00191_DS_
     0047 21D1                      1-  596     	MOVIA	0xd1
     0048 04rr                      1-  597     	SUBAR	_sleepTime,W
     0049                           1-  598     _00191_DS_:
     0049 0803                      1-  599     	BTRSS	STATUS,0
     004A 3rrr                      1-  600     	LGOTO	_00144_DS_
                                    1-  601     	.line	140, "main.c"; 	gotoSleep();
     004B 2rrr                      1-  602     	LCALL	_gotoSleep
     004C 3rrr                      1-  603     	LGOTO	_00144_DS_
                                    1-  604     	.line	144, "main.c"; 	}
                                    1-  605     	RETURN	
     004D 0010                      3-   26 m1      ret
                                    1-  606     ; exit point of _main
                                    1-  608     ;***
                                    1-  609     ;  pBlock Stats: dbName = C
                                    1-  610     ;***
                                    1-  611     ;has an exit
                                    1-  612     ;; Starting pCode block
                                    1-  613     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  615     _F_wait_eoc:
                                    1-  616     ; 2 exit points
     0000                           1-  617     _00492_DS_:
                                    1-  618     	.line	658, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  619     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  620     	LGOTO	_00492_DS_
                                    1-  621     	.line	660, "main.c"; 	}
                                    1-  622     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  623     ; exit point of _F_wait_eoc
                                    1-  625     ;***
                                    1-  626     ;  pBlock Stats: dbName = C
                                    1-  627     ;***
                                    1-  628     ;has an exit
                                    1-  629     ;functions called:
                                    1-  630     ;   _delay
                                    1-  631     ;   _F_wait_eoc
                                    1-  632     ;   _delay
                                    1-  633     ;   _F_wait_eoc
                                    1-  634     ;6 compiler assigned registers:
                                    1-  635     ;   r0x101D
                                    1-  636     ;   r0x101E
                                    1-  637     ;   r0x101F
                                    1-  638     ;   r0x1020
                                    1-  639     ;   r0x1021
                                    1-  640     ;   r0x1022
                                    1-  641     ;; Starting pCode block
                                    1-  642     .segment "code"; module=main, function=_F_AIN5_Convert
                                    1-  644     ;local variable name mapping:
     0000                           1-  647     _F_AIN5_Convert:
                                    1-  648     ; 2 exit points
                                    1-  649     	.line	641, "main.c"; 	void F_AIN5_Convert(char count)
                                    1-  650     	BANKSEL	r0x101D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  651     	MOVAR	r0x101D
                                    1-  652     	.line	643, "main.c"; 	R_AIN5_DATA=R_AIN5_DATA_LB=0x00;   
                                    1-  653     	BANKSEL	_R_AIN5_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  654     	CLRR	_R_AIN5_DATA_LB
                                    1-  655     	BANKSEL	_R_AIN5_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  656     	CLRR	_R_AIN5_DATA
     0006 02rr                      1-  657     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  658     	.line	645, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  659     	MOVIA	0x94
     0008 00rr                      1-  660     	MOVAR	_ADMD
                                    1-  661     	.line	646, "main.c"; 	delay(200);	
     0009 21C8                      1-  662     	MOVIA	0xc8
     000A 2rrr                      1-  663     	LCALL	_delay
                                    1-  664     	.line	647, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  665     	MOVIA	0x01
                                    1-  666     	BANKSEL	r0x101E
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  667     	MOVAR	r0x101E
     000E                           1-  668     _00485_DS_:
                                    1-  669     	BANKSEL	r0x101E
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1-  670     	MOVR	r0x101E,W
                                    1-  671     	BANKSEL	r0x101D
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  672     	SUBAR	r0x101D,W
     0012 0803                      1-  673     	BTRSS	STATUS,0
     0013 3rrr                      1-  674     	LGOTO	_00487_DS_
                                    1-  675     	.line	649, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  676     	BSR	_ADMDbits,6
                                    1-  677     	.line	650, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1-  678     	LCALL	_F_wait_eoc
                                    1-  679     	.line	651, "main.c"; 	R_AIN5_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  680     	MOVIA	0x0f
     0017 10rr                      1-  681     	ANDAR	_ADR,W
                                    1-  682     ;;3	MOVAR	r0x101F
                                    1-  683     	BANKSEL	_R_AIN5_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1-  684     	ADDAR	_R_AIN5_DATA_LB,F
                                    1-  685     	.line	652, "main.c"; 	R_AIN5_DATA    += ADD; 
     001A 01rr                      1-  686     	MOVR	_ADD,W
                                    1-  687     	BANKSEL	r0x101F
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  688     	MOVAR	r0x101F
                                    1-  689     ;;1	CLRR	r0x1020
                                    1-  690     ;;102	MOVR	r0x101F,W
                                    1-  691     ;;100	MOVAR	r0x1021
     001D 2100                      1-  692     	MOVIA	0x00
                                    1-  693     	BANKSEL	r0x1022
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  694     	MOVAR	r0x1022
                                    1-  695     ;;101	MOVR	r0x1021,W
                                    1-  696     	BANKSEL	r0x101F
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  697     	MOVR	r0x101F,W
                                    1-  698     	BANKSEL	_R_AIN5_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1-  699     	ADDAR	_R_AIN5_DATA,F
                                    1-  700     	BANKSEL	r0x1022
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  701     	MOVR	r0x1022,W
     0026 0C03                      1-  702     	BTRSC	STATUS,0
     0027 05rr                      1-  703     	INCR	r0x1022,W
     0028 0D03                      1-  704     	BTRSC	STATUS,2
     0029 3rrr                      1-  705     	LGOTO	_00001_DS_
                                    1-  706     	BANKSEL	_R_AIN5_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1-  707     	ADDAR	(_R_AIN5_DATA + 1),F
     002C                           1-  708     _00001_DS_:
                                    1-  709     	.line	647, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  710     	BANKSEL	r0x101E
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  711     	INCR	r0x101E,F
     002E 3rrr                      1-  712     	LGOTO	_00485_DS_
     002F                           1-  713     _00487_DS_:
                                    1-  714     	.line	654, "main.c"; 	}
                                    1-  715     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1-  716     ; exit point of _F_AIN5_Convert
                                    1-  718     ;***
                                    1-  719     ;  pBlock Stats: dbName = C
                                    1-  720     ;***
                                    1-  721     ;has an exit
                                    1-  722     ;functions called:
                                    1-  723     ;   _F_AIN5_Convert
                                    1-  724     ;   _F_AIN5_Convert
                                    1-  725     ;4 compiler assigned registers:
                                    1-  726     ;   r0x1023
                                    1-  727     ;   r0x1024
                                    1-  728     ;   r0x1025
                                    1-  729     ;   r0x1026
                                    1-  730     ;; Starting pCode block
                                    1-  731     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  733     _checkBatAD:
                                    1-  734     ; 2 exit points
                                    1-  735     	.line	583, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA_LB = 0x00;
                                    1-  736     	BANKSEL	_R_AIN5_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  737     	CLRR	_R_AIN5_DATA_LB
                                    1-  738     	BANKSEL	_R_AIN5_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  739     	CLRR	_R_AIN5_DATA
     0004 02rr                      1-  740     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  741     	.line	584, "main.c"; 	F_AIN5_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  742     	MOVIA	0x08
     0006 2rrr                      1-  743     	LCALL	_F_AIN5_Convert
                                    1-  744     	.line	585, "main.c"; 	R_AIN5_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  745     	BANKSEL	_R_AIN5_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1-  746     	SWAPR	(_R_AIN5_DATA + 1),W
     0009 22F0                      1-  747     	ANDIA	0xf0
     000A 00rr                      1-  748     	MOVAR	(_R_AIN5_DATA + 1)
     000B 15rr                      1-  749     	SWAPR	_R_AIN5_DATA,W
     000C 00rr                      1-  750     	MOVAR	_R_AIN5_DATA
     000D 220F                      1-  751     	ANDIA	0x0f
     000E 11rr                      1-  752     	IORAR	(_R_AIN5_DATA + 1),F
     000F 12rr                      1-  753     	XORAR	_R_AIN5_DATA,F
                                    1-  754     	.line	586, "main.c"; 	R_AIN5_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  755     	MOVIA	0xf0
                                    1-  756     	BANKSEL	_R_AIN5_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1-  757     	ANDAR	_R_AIN5_DATA_LB,F
                                    1-  758     	.line	587, "main.c"; 	R_AIN5_DATA += R_AIN5_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  759     	MOVR	_R_AIN5_DATA_LB,W
                                    1-  760     	BANKSEL	r0x1025
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1-  761     	MOVAR	r0x1025
                                    1-  762     ;;1	MOVAR	r0x1023
                                    1-  763     ;;1	CLRR	r0x1024
                                    1-  764     ;;99	MOVR	r0x1023,W
     0016 2100                      1-  765     	MOVIA	0x00
                                    1-  766     	BANKSEL	r0x1026
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1-  767     	MOVAR	r0x1026
                                    1-  768     	BANKSEL	r0x1025
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  769     	MOVR	r0x1025,W
                                    1-  770     	BANKSEL	_R_AIN5_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1-  771     	ADDAR	_R_AIN5_DATA,F
                                    1-  772     	BANKSEL	r0x1026
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  773     	MOVR	r0x1026,W
     001F 0C03                      1-  774     	BTRSC	STATUS,0
     0020 05rr                      1-  775     	INCR	r0x1026,W
     0021 0D03                      1-  776     	BTRSC	STATUS,2
     0022 3rrr                      1-  777     	LGOTO	_00002_DS_
                                    1-  778     	BANKSEL	_R_AIN5_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1-  779     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1-  780     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  781     _00002_DS_:
                                    1-  782     	.line	588, "main.c"; 	R_AIN5_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1-  783     	BCR	STATUS,0
                                    1-  784     	BANKSEL	_R_AIN5_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1-  785     	RRR	(_R_AIN5_DATA + 1),F
     0028 13rr                      1-  786     	RRR	_R_AIN5_DATA,F
                                    1-  787     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  788     	BCR	STATUS,0
     002A 13rr                      1-  789     	RRR	(_R_AIN5_DATA + 1),F
     002B 13rr                      1-  790     	RRR	_R_AIN5_DATA,F
                                    1-  791     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  792     	BCR	STATUS,0
     002D 13rr                      1-  793     	RRR	(_R_AIN5_DATA + 1),F
     002E 13rr                      1-  794     	RRR	_R_AIN5_DATA,F
                                    1-  795     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  796     ;;unsigned compare: left >= lit (0x60F=1551), size=2
                                    1-  797     	.line	589, "main.c"; 	if(R_AIN5_DATA > 1550)
     002F 2106                      1-  798     	MOVIA	0x06
     0030 04rr                      1-  799     	SUBAR	(_R_AIN5_DATA + 1),W
     0031 0903                      1-  800     	BTRSS	STATUS,2
     0032 3rrr                      1-  801     	LGOTO	_00472_DS_
     0033 210F                      1-  802     	MOVIA	0x0f
     0034 04rr                      1-  803     	SUBAR	_R_AIN5_DATA,W
     0035                           1-  804     _00472_DS_:
     0035 0803                      1-  805     	BTRSS	STATUS,0
     0036 3rrr                      1-  806     	LGOTO	_00444_DS_
                                    1-  807     	.line	591, "main.c"; 	pwStep = 6;
     0037 2106                      1-  808     	MOVIA	0x06
                                    1-  809     	BANKSEL	_pwStep
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 00rr                      1-  810     	MOVAR	_pwStep
     003A 3rrr                      1-  811     	LGOTO	_00446_DS_
                                    1-  812     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  813     ;;unsigned compare: left >= lit (0x571=1393), size=2
     003B                           1-  814     _00444_DS_:
                                    1-  815     	.line	593, "main.c"; 	else if(R_AIN5_DATA > 1392)
     003B 2105                      1-  816     	MOVIA	0x05
                                    1-  817     	BANKSEL	_R_AIN5_DATA
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 04rr                      1-  818     	SUBAR	(_R_AIN5_DATA + 1),W
     003E 0903                      1-  819     	BTRSS	STATUS,2
     003F 3rrr                      1-  820     	LGOTO	_00473_DS_
     0040 2171                      1-  821     	MOVIA	0x71
     0041 04rr                      1-  822     	SUBAR	_R_AIN5_DATA,W
     0042                           1-  823     _00473_DS_:
     0042 0803                      1-  824     	BTRSS	STATUS,0
     0043 3rrr                      1-  825     	LGOTO	_00441_DS_
                                    1-  826     	.line	596, "main.c"; 	if(pwStep == 6)
                                    1-  827     	BANKSEL	_pwStep
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  828     	MOVR	_pwStep,W
     0046 2406                      1-  829     	XORIA	0x06
     0047 0903                      1-  830     	BTRSS	STATUS,2
     0048 3rrr                      1-  831     	LGOTO	_00427_DS_
                                    1-  832     ;;unsigned compare: left < lit (0x5DC=1500), size=2
                                    1-  833     	.line	598, "main.c"; 	if(R_AIN5_DATA < 1500)
     0049 2105                      1-  834     	MOVIA	0x05
                                    1-  835     	BANKSEL	_R_AIN5_DATA
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 04rr                      1-  836     	SUBAR	(_R_AIN5_DATA + 1),W
     004C 0903                      1-  837     	BTRSS	STATUS,2
     004D 3rrr                      1-  838     	LGOTO	_00474_DS_
     004E 21DC                      1-  839     	MOVIA	0xdc
     004F 04rr                      1-  840     	SUBAR	_R_AIN5_DATA,W
     0050                           1-  841     _00474_DS_:
     0050 0C03                      1-  842     	BTRSC	STATUS,0
     0051 3rrr                      1-  843     	LGOTO	_00428_DS_
                                    1-  844     	.line	599, "main.c"; 	pwStep = 5;
     0052 2105                      1-  845     	MOVIA	0x05
                                    1-  846     	BANKSEL	_pwStep
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1-  847     	MOVAR	_pwStep
     0055 3rrr                      1-  848     	LGOTO	_00428_DS_
     0056                           1-  849     _00427_DS_:
                                    1-  850     	.line	603, "main.c"; 	pwStep = 5;
     0056 2105                      1-  851     	MOVIA	0x05
                                    1-  852     	BANKSEL	_pwStep
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1-  853     	MOVAR	_pwStep
     0059                           1-  854     _00428_DS_:
                                    1-  855     	.line	605, "main.c"; 	if(++chrgTime > 1800)
                                    1-  856     	BANKSEL	_chrgTime
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 05rr                      1-  857     	INCR	_chrgTime,F
     005B 0D03                      1-  858     	BTRSC	STATUS,2
     005C 05rr                      1-  859     	INCR	(_chrgTime + 1),F
                                    1-  860     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  861     ;;unsigned compare: left >= lit (0x709=1801), size=2
     005D 2107                      1-  862     	MOVIA	0x07
     005E 04rr                      1-  863     	SUBAR	(_chrgTime + 1),W
     005F 0903                      1-  864     	BTRSS	STATUS,2
     0060 3rrr                      1-  865     	LGOTO	_00475_DS_
     0061 2109                      1-  866     	MOVIA	0x09
     0062 04rr                      1-  867     	SUBAR	_chrgTime,W
     0063                           1-  868     _00475_DS_:
     0063 0803                      1-  869     	BTRSS	STATUS,0
     0064 3rrr                      1-  870     	LGOTO	_00446_DS_
                                    1-  871     	.line	607, "main.c"; 	chrgTime = 1800;
     0065 2108                      1-  872     	MOVIA	0x08
                                    1-  873     	BANKSEL	_chrgTime
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 00rr                      1-  874     	MOVAR	_chrgTime
     0068 2107                      1-  875     	MOVIA	0x07
     0069 00rr                      1-  876     	MOVAR	(_chrgTime + 1)
                                    1-  877     	.line	608, "main.c"; 	pwStep = 6;
     006A 2106                      1-  878     	MOVIA	0x06
                                    1-  879     	BANKSEL	_pwStep
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 00rr                      1-  880     	MOVAR	_pwStep
     006D 3rrr                      1-  881     	LGOTO	_00446_DS_
                                    1-  882     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  883     ;;unsigned compare: left >= lit (0x3A0=928), size=2
     006E                           1-  884     _00441_DS_:
                                    1-  885     	.line	611, "main.c"; 	else if(R_AIN5_DATA > 927)
     006E 2103                      1-  886     	MOVIA	0x03
                                    1-  887     	BANKSEL	_R_AIN5_DATA
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 04rr                      1-  888     	SUBAR	(_R_AIN5_DATA + 1),W
     0071 0903                      1-  889     	BTRSS	STATUS,2
     0072 3rrr                      1-  890     	LGOTO	_00476_DS_
     0073 21A0                      1-  891     	MOVIA	0xa0
     0074 04rr                      1-  892     	SUBAR	_R_AIN5_DATA,W
     0075                           1-  893     _00476_DS_:
     0075 0803                      1-  894     	BTRSS	STATUS,0
     0076 3rrr                      1-  895     	LGOTO	_00438_DS_
                                    1-  896     	.line	614, "main.c"; 	pwStep = 4;
     0077 2104                      1-  897     	MOVIA	0x04
                                    1-  898     	BANKSEL	_pwStep
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 00rr                      1-  899     	MOVAR	_pwStep
                                    1-  900     	.line	615, "main.c"; 	chrgTime = 0;
                                    1-  901     	BANKSEL	_chrgTime
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1-  902     	CLRR	_chrgTime
     007C 02rr                      1-  903     	CLRR	(_chrgTime + 1)
     007D 3rrr                      1-  904     	LGOTO	_00446_DS_
                                    1-  905     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  906     ;;unsigned compare: left >= lit (0x1D0=464), size=2
     007E                           1-  907     _00438_DS_:
                                    1-  908     	.line	617, "main.c"; 	else if(R_AIN5_DATA > 463)
     007E 2101                      1-  909     	MOVIA	0x01
                                    1-  910     	BANKSEL	_R_AIN5_DATA
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 04rr                      1-  911     	SUBAR	(_R_AIN5_DATA + 1),W
     0081 0903                      1-  912     	BTRSS	STATUS,2
     0082 3rrr                      1-  913     	LGOTO	_00477_DS_
     0083 21D0                      1-  914     	MOVIA	0xd0
     0084 04rr                      1-  915     	SUBAR	_R_AIN5_DATA,W
     0085                           1-  916     _00477_DS_:
     0085 0803                      1-  917     	BTRSS	STATUS,0
     0086 3rrr                      1-  918     	LGOTO	_00435_DS_
                                    1-  919     	.line	620, "main.c"; 	pwStep = 3;
     0087 2103                      1-  920     	MOVIA	0x03
                                    1-  921     	BANKSEL	_pwStep
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 00rr                      1-  922     	MOVAR	_pwStep
                                    1-  923     	.line	621, "main.c"; 	chrgTime = 0;
                                    1-  924     	BANKSEL	_chrgTime
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 02rr                      1-  925     	CLRR	_chrgTime
     008C 02rr                      1-  926     	CLRR	(_chrgTime + 1)
     008D 3rrr                      1-  927     	LGOTO	_00446_DS_
                                    1-  928     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  929     ;;unsigned compare: left >= lit (0x9B=155), size=2
     008E                           1-  930     _00435_DS_:
                                    1-  931     	.line	623, "main.c"; 	else if(R_AIN5_DATA > 154)
     008E 2100                      1-  932     	MOVIA	0x00
                                    1-  933     	BANKSEL	_R_AIN5_DATA
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 04rr                      1-  934     	SUBAR	(_R_AIN5_DATA + 1),W
     0091 0903                      1-  935     	BTRSS	STATUS,2
     0092 3rrr                      1-  936     	LGOTO	_00478_DS_
     0093 219B                      1-  937     	MOVIA	0x9b
     0094 04rr                      1-  938     	SUBAR	_R_AIN5_DATA,W
     0095                           1-  939     _00478_DS_:
     0095 0803                      1-  940     	BTRSS	STATUS,0
     0096 3rrr                      1-  941     	LGOTO	_00432_DS_
                                    1-  942     	.line	626, "main.c"; 	pwStep = 2;
     0097 2102                      1-  943     	MOVIA	0x02
                                    1-  944     	BANKSEL	_pwStep
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 00rr                      1-  945     	MOVAR	_pwStep
                                    1-  946     	.line	627, "main.c"; 	chrgTime = 0;
                                    1-  947     	BANKSEL	_chrgTime
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 02rr                      1-  948     	CLRR	_chrgTime
     009C 02rr                      1-  949     	CLRR	(_chrgTime + 1)
     009D 3rrr                      1-  950     	LGOTO	_00446_DS_
     009E                           1-  951     _00432_DS_:
                                    1-  952     	.line	632, "main.c"; 	pwStep = 1;
     009E 2101                      1-  953     	MOVIA	0x01
                                    1-  954     	BANKSEL	_pwStep
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 00rr                      1-  955     	MOVAR	_pwStep
                                    1-  956     	.line	633, "main.c"; 	chrgTime = 0;
                                    1-  957     	BANKSEL	_chrgTime
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 02rr                      1-  958     	CLRR	_chrgTime
     00A3 02rr                      1-  959     	CLRR	(_chrgTime + 1)
     00A4                           1-  960     _00446_DS_:
                                    1-  961     	.line	636, "main.c"; 	}
                                    1-  962     	RETURN	
     00A4 0010                      3-   26 m1      ret
                                    1-  963     ; exit point of _checkBatAD
                                    1-  965     ;***
                                    1-  966     ;  pBlock Stats: dbName = C
                                    1-  967     ;***
                                    1-  968     ;has an exit
                                    1-  969     ;functions called:
                                    1-  970     ;   _delay
                                    1-  971     ;   _delay
                                    1-  972     ;; Starting pCode block
                                    1-  973     .segment "code"; module=main, function=_initAD
     0000                           1-  975     _initAD:
                                    1-  976     ; 2 exit points
                                    1-  977     	.line	559, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1-  978     	MOVIA	0x84
     0001 00rr                      1-  979     	MOVAR	_ADMD
                                    1-  980     	.line	564, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1-  981     	CLRR	_ADVREFH
                                    1-  982     	.line	569, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1-  983     	MOVIA	0x10
     0004 00rr                      1-  984     	MOVAR	_ADR
                                    1-  985     	.line	571, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1-  986     	MOVIA	0x03
     0006 00rr                      1-  987     	MOVAR	_ADCR
                                    1-  988     	.line	574, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1-  989     	BSR	_ADMDbits,4
                                    1-  990     	.line	575, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1-  991     	MOVIA	0x64
     0009 2rrr                      1-  992     	LCALL	_delay
                                    1-  993     	.line	578, "main.c"; 	}
                                    1-  994     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1-  995     ; exit point of _initAD
                                    1-  997     ;***
                                    1-  998     ;  pBlock Stats: dbName = C
                                    1-  999     ;***
                                    1- 1000     ;has an exit
                                    1- 1001     ;2 compiler assigned registers:
                                    1- 1002     ;   r0x101B
                                    1- 1003     ;   r0x101C
                                    1- 1004     ;; Starting pCode block
                                    1- 1005     .segment "code"; module=main, function=_delay
                                    1- 1007     ;local variable name mapping:
     0000                           1- 1010     _delay:
                                    1- 1011     ; 2 exit points
                                    1- 1012     	.line	549, "main.c"; 	void delay(u8t time)
                                    1- 1013     	BANKSEL	r0x101B
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1014     	MOVAR	r0x101B
                                    1- 1015     	.line	551, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1016     	BANKSEL	r0x101C
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1017     	CLRR	r0x101C
     0004                           1- 1018     _00413_DS_:
                                    1- 1019     	BANKSEL	r0x101B
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1020     	MOVR	r0x101B,W
                                    1- 1021     	BANKSEL	r0x101C
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 1022     	SUBAR	r0x101C,W
     0008 0C03                      1- 1023     	BTRSC	STATUS,0
     0009 3rrr                      1- 1024     	LGOTO	_00415_DS_
                                    1- 1025     	.line	552, "main.c"; 	NOP();
     000A 0000                      1- 1026     	nop
                                    1- 1027     	.line	551, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1028     	BANKSEL	r0x101C
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 1029     	INCR	r0x101C,F
     000D 3rrr                      1- 1030     	LGOTO	_00413_DS_
     000E                           1- 1031     _00415_DS_:
                                    1- 1032     	.line	553, "main.c"; 	}
                                    1- 1033     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1034     ; exit point of _delay
                                    1- 1036     ;***
                                    1- 1037     ;  pBlock Stats: dbName = C
                                    1- 1038     ;***
                                    1- 1039     ;has an exit
                                    1- 1040     ;functions called:
                                    1- 1041     ;   _pwmStop
                                    1- 1042     ;   _LedInput
                                    1- 1043     ;   _LEDLOFF
                                    1- 1044     ;   _LEDHON
                                    1- 1045     ;   _LEDHOFF
                                    1- 1046     ;   _LEDHOFF
                                    1- 1047     ;   _LEDLOFF
                                    1- 1048     ;   _pwmStop
                                    1- 1049     ;   _LedInput
                                    1- 1050     ;   _LEDLOFF
                                    1- 1051     ;   _LEDHON
                                    1- 1052     ;   _LEDHOFF
                                    1- 1053     ;   _LEDHOFF
                                    1- 1054     ;   _LEDLOFF
                                    1- 1055     ;; Starting pCode block
                                    1- 1056     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1058     _chrgCtr:
                                    1- 1059     ; 2 exit points
                                    1- 1060     	.line	513, "main.c"; 	if(PORTA & 0x20)
                                    1- 1061     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 0Arr                      1- 1062     	BTRSS	_PORTA,5
     0002 3rrr                      1- 1063     	LGOTO	_00404_DS_
                                    1- 1064     	.line	516, "main.c"; 	workStep = 0;
                                    1- 1065     	BANKSEL	_workStep
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1- 1066     	CLRR	_workStep
                                    1- 1067     	.line	517, "main.c"; 	ledStep = 0;
                                    1- 1068     	BANKSEL	_ledStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1069     	CLRR	_ledStep
                                    1- 1070     	.line	518, "main.c"; 	pwmStop();
     0007 2rrr                      1- 1071     	LCALL	_pwmStop
                                    1- 1072     	.line	519, "main.c"; 	LedInput();
     0008 2rrr                      1- 1073     	LCALL	_LedInput
                                    1- 1074     	.line	520, "main.c"; 	PORTB &= 0xFD;
     0009 1Crr                      1- 1075     	BCR	_PORTB,1
                                    1- 1076     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1077     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 1078     	.line	521, "main.c"; 	if(pwStep > 5)
     000A 2106                      1- 1079     	MOVIA	0x06
                                    1- 1080     	BANKSEL	_pwStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1- 1081     	SUBAR	_pwStep,W
     000D 0803                      1- 1082     	BTRSS	STATUS,0
     000E 3rrr                      1- 1083     	LGOTO	_00399_DS_
                                    1- 1084     	.line	524, "main.c"; 	LEDLOFF();
     000F 2rrr                      1- 1085     	LCALL	_LEDLOFF
                                    1- 1086     	.line	525, "main.c"; 	LEDHON();
     0010 2rrr                      1- 1087     	LCALL	_LEDHON
     0011 3rrr                      1- 1088     	LGOTO	_00406_DS_
     0012                           1- 1089     _00399_DS_:
                                    1- 1090     	.line	529, "main.c"; 	if(pwStep == 6)
                                    1- 1091     	BANKSEL	_pwStep
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1092     	MOVR	_pwStep,W
     0014 2406                      1- 1093     	XORIA	0x06
     0015 0903                      1- 1094     	BTRSS	STATUS,2
     0016 3rrr                      1- 1095     	LGOTO	_00397_DS_
                                    1- 1096     	.line	531, "main.c"; 	pwStep = 5;
     0017 2105                      1- 1097     	MOVIA	0x05
     0018 00rr                      1- 1098     	MOVAR	_pwStep
     0019                           1- 1099     _00397_DS_:
                                    1- 1100     	.line	533, "main.c"; 	LEDHOFF();
     0019 2rrr                      1- 1101     	LCALL	_LEDHOFF
                                    1- 1102     	.line	534, "main.c"; 	PORTA ^= 0x08;
     001A 2108                      1- 1103     	MOVIA	0x08
                                    1- 1104     	BANKSEL	_PORTA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 12rr                      1- 1105     	XORAR	_PORTA,F
     001D 3rrr                      1- 1106     	LGOTO	_00406_DS_
     001E                           1- 1107     _00404_DS_:
                                    1- 1108     	.line	539, "main.c"; 	if(workStartFlag == 0)
                                    1- 1109     	BANKSEL	_workStartFlag
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1110     	MOVR	_workStartFlag,W
     0020 0903                      1- 1111     	BTRSS	STATUS,2
     0021 3rrr                      1- 1112     	LGOTO	_00406_DS_
                                    1- 1113     	.line	541, "main.c"; 	LEDHOFF();
     0022 2rrr                      1- 1114     	LCALL	_LEDHOFF
                                    1- 1115     	.line	542, "main.c"; 	LEDLOFF();	
     0023 2rrr                      1- 1116     	LCALL	_LEDLOFF
     0024                           1- 1117     _00406_DS_:
                                    1- 1118     	.line	546, "main.c"; 	}
                                    1- 1119     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1- 1120     ; exit point of _chrgCtr
                                    1- 1122     ;***
                                    1- 1123     ;  pBlock Stats: dbName = C
                                    1- 1124     ;***
                                    1- 1125     ;has an exit
                                    1- 1126     ;1 compiler assigned register :
                                    1- 1127     ;   r0x1028
                                    1- 1128     ;; Starting pCode block
                                    1- 1129     .segment "code"; module=main, function=_keyRead
                                    1- 1131     ;local variable name mapping:
     0000                           1- 1133     _keyRead:
                                    1- 1134     ; 2 exit points
                                    1- 1135     	.line	476, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1136     	BANKSEL	r0x1028
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1137     	MOVAR	r0x1028
                                    1- 1138     	.line	478, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1139     	MOVR	r0x1028,W
     0003 0D03                      1- 1140     	BTRSC	STATUS,2
     0004 3rrr                      1- 1141     	LGOTO	_00389_DS_
                                    1- 1142     	.line	480, "main.c"; 	keyCount++;
                                    1- 1143     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1144     	INCR	_keyCount,F
                                    1- 1145     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1146     	.line	481, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1147     	MOVIA	0xc8
     0008 04rr                      1- 1148     	SUBAR	_keyCount,W
     0009 0803                      1- 1149     	BTRSS	STATUS,0
     000A 3rrr                      1- 1150     	LGOTO	_00390_DS_
                                    1- 1151     	.line	483, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1152     	MOVIA	0xc8
     000C 00rr                      1- 1153     	MOVAR	_keyCount
                                    1- 1154     	.line	484, "main.c"; 	if(!longPressFlag)
                                    1- 1155     	BANKSEL	_Status
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 0Crr                      1- 1156     	BTRSC	_Status,1
     000F 3rrr                      1- 1157     	LGOTO	_00390_DS_
                                    1- 1158     	.line	486, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1159     	BSR	_Status,1
                                    1- 1160     	.line	487, "main.c"; 	return 2;
     0011 2102                      1- 1161     	MOVIA	0x02
     0012 3rrr                      1- 1162     	LGOTO	_00391_DS_
                                    1- 1163     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 1164     _00389_DS_:
                                    1- 1165     	.line	493, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 1166     	MOVIA	0xc8
                                    1- 1167     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1168     	SUBAR	_keyCount,W
     0016 0803                      1- 1169     	BTRSS	STATUS,0
     0017 3rrr                      1- 1170     	LGOTO	_00386_DS_
                                    1- 1171     	.line	495, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1172     	CLRR	_keyCount
                                    1- 1173     	.line	496, "main.c"; 	longPressFlag = 0;
                                    1- 1174     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Crr                      1- 1175     	BCR	_Status,1
                                    1- 1176     	.line	497, "main.c"; 	return	0;
     001B 2100                      1- 1177     	MOVIA	0x00
     001C 3rrr                      1- 1178     	LGOTO	_00391_DS_
                                    1- 1179     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 1180     _00386_DS_:
                                    1- 1181     	.line	499, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 1182     	MOVIA	0x08
                                    1- 1183     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 1184     	SUBAR	_keyCount,W
     0020 0803                      1- 1185     	BTRSS	STATUS,0
     0021 3rrr                      1- 1186     	LGOTO	_00387_DS_
                                    1- 1187     	.line	501, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1188     	CLRR	_keyCount
                                    1- 1189     	.line	502, "main.c"; 	return	1;
     0023 2101                      1- 1190     	MOVIA	0x01
     0024 3rrr                      1- 1191     	LGOTO	_00391_DS_
     0025                           1- 1192     _00387_DS_:
                                    1- 1193     	.line	504, "main.c"; 	keyCount = 0;
                                    1- 1194     	BANKSEL	_keyCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 1195     	CLRR	_keyCount
     0027                           1- 1196     _00390_DS_:
                                    1- 1197     	.line	506, "main.c"; 	return 0;
     0027 2100                      1- 1198     	MOVIA	0x00
     0028                           1- 1199     _00391_DS_:
                                    1- 1200     	.line	507, "main.c"; 	}
                                    1- 1201     	RETURN	
     0028 0010                      3-   26 m1      ret
                                    1- 1202     ; exit point of _keyRead
                                    1- 1204     ;***
                                    1- 1205     ;  pBlock Stats: dbName = C
                                    1- 1206     ;***
                                    1- 1207     ;has an exit
                                    1- 1208     ;functions called:
                                    1- 1209     ;   _LedInput
                                    1- 1210     ;   _pwmStop
                                    1- 1211     ;   _LedInput
                                    1- 1212     ;   _pwmStop
                                    1- 1213     ;; Starting pCode block
                                    1- 1214     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1216     _gotoSleep:
                                    1- 1217     ; 2 exit points
                                    1- 1218     	.line	456, "main.c"; 	LedInput();
     0000 2rrr                      1- 1219     	LCALL	_LedInput
                                    1- 1220     	.line	457, "main.c"; 	sleepTime = 0;
                                    1- 1221     	BANKSEL	_sleepTime
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1- 1222     	CLRR	_sleepTime
     0003 02rr                      1- 1223     	CLRR	(_sleepTime + 1)
                                    1- 1224     	.line	458, "main.c"; 	pwmStop();
     0004 2rrr                      1- 1225     	LCALL	_pwmStop
                                    1- 1226     	.line	459, "main.c"; 	workStep = 0;
                                    1- 1227     	BANKSEL	_workStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1228     	CLRR	_workStep
                                    1- 1229     	.line	460, "main.c"; 	AWUCON = 0x60;
     0007 2160                      1- 1230     	MOVIA	0x60
     0008 00rr                      1- 1231     	MOVAR	_AWUCON
                                    1- 1232     	.line	461, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0009 210B                      1- 1233     	MOVIA	0x0b
     000A 00rr                      1- 1234     	MOVAR	_INTE
                                    1- 1235     	.line	462, "main.c"; 	PCON =  C_LVR_En;	
     000B 2108                      1- 1236     	MOVIA	0x08
     000C 00rr                      1- 1237     	MOVAR	_PCON
                                    1- 1238     	.line	463, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000D 02rr                      1- 1239     	CLRR	_INTF
                                    1- 1240     	.line	464, "main.c"; 	CLRWDT();
     000E 0002                      1- 1241     	clrwdt
                                    1- 1242     	.line	465, "main.c"; 	ENI();
     000F 0004                      1- 1243     	ENI
                                    1- 1244     	.line	466, "main.c"; 	SLEEP();
     0010 0001                      1- 1245     	sleep
                                    1- 1246     	.line	467, "main.c"; 	AWUCON = 0x00;
     0011 02rr                      1- 1247     	CLRR	_AWUCON
                                    1- 1248     	.line	468, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0012 2101                      1- 1249     	MOVIA	0x01
     0013 00rr                      1- 1250     	MOVAR	_INTE
                                    1- 1251     	.line	469, "main.c"; 	INTF = 0;
     0014 02rr                      1- 1252     	CLRR	_INTF
                                    1- 1253     	.line	471, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0015 21A8                      1- 1254     	MOVIA	0xa8
     0016 00rr                      1- 1255     	MOVAR	_PCON
                                    1- 1256     	.line	473, "main.c"; 	}
                                    1- 1257     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 1258     ; exit point of _gotoSleep
                                    1- 1260     ;***
                                    1- 1261     ;  pBlock Stats: dbName = C
                                    1- 1262     ;***
                                    1- 1263     ;has an exit
                                    1- 1264     ;functions called:
                                    1- 1265     ;   _keyRead
                                    1- 1266     ;   _pwmInit
                                    1- 1267     ;   _pwmStop
                                    1- 1268     ;   _LEDHOFF
                                    1- 1269     ;   _LEDLOFF
                                    1- 1270     ;   _pwmInit
                                    1- 1271     ;   _keyRead
                                    1- 1272     ;   _pwmInit
                                    1- 1273     ;   _pwmStop
                                    1- 1274     ;   _LEDHOFF
                                    1- 1275     ;   _LEDLOFF
                                    1- 1276     ;   _pwmInit
                                    1- 1277     ;1 compiler assigned register :
                                    1- 1278     ;   r0x102A
                                    1- 1279     ;; Starting pCode block
                                    1- 1280     .segment "code"; module=main, function=_keyCtr
                                    1- 1282     ;local variable name mapping:
     0000                           1- 1284     _keyCtr:
                                    1- 1285     ; 2 exit points
                                    1- 1286     	.line	399, "main.c"; 	if(workStep > 0)
                                    1- 1287     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1288     	MOVR	_workStep,W
     0002 0D03                      1- 1289     	BTRSC	STATUS,2
     0003 3rrr                      1- 1290     	LGOTO	_00346_DS_
                                    1- 1291     	.line	401, "main.c"; 	PORTB |= 0x02;
     0004 18rr                      1- 1292     	BSR	_PORTB,1
     0005 3rrr                      1- 1293     	LGOTO	_00347_DS_
     0006                           1- 1294     _00346_DS_:
                                    1- 1295     	.line	405, "main.c"; 	PORTB &= 0xFD;
     0006 1Crr                      1- 1296     	BCR	_PORTB,1
     0007                           1- 1297     _00347_DS_:
                                    1- 1298     	.line	408, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 1299     	BANKSEL	_PORTA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 07rr                      1- 1300     	COMR	_PORTA,W
                                    1- 1301     	BANKSEL	r0x102A
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1302     	MOVAR	r0x102A
     000B 2140                      1- 1303     	MOVIA	0x40
     000C 10rr                      1- 1304     	ANDAR	r0x102A,F
     000D 01rr                      1- 1305     	MOVR	r0x102A,W
     000E 2rrr                      1- 1306     	LCALL	_keyRead
                                    1- 1307     	BANKSEL	r0x102A
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 1308     	MOVAR	r0x102A
                                    1- 1309     	.line	409, "main.c"; 	if(kclick == 1 && workStep > 0)
     0011 2401                      1- 1310     	XORIA	0x01
     0012 0903                      1- 1311     	BTRSS	STATUS,2
     0013 3rrr                      1- 1312     	LGOTO	_00367_DS_
                                    1- 1313     	BANKSEL	_workStep
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 1314     	MOVR	_workStep,W
     0016 0D03                      1- 1315     	BTRSC	STATUS,2
     0017 3rrr                      1- 1316     	LGOTO	_00367_DS_
                                    1- 1317     	.line	411, "main.c"; 	count500ms = 0;
                                    1- 1318     	BANKSEL	_count500ms
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1- 1319     	CLRR	_count500ms
                                    1- 1320     	.line	412, "main.c"; 	if(++workStep > 4)
                                    1- 1321     	BANKSEL	_workStep
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 05rr                      1- 1322     	INCR	_workStep,F
                                    1- 1323     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1324     ;;unsigned compare: left >= lit (0x5=5), size=1
     001C 2105                      1- 1325     	MOVIA	0x05
     001D 04rr                      1- 1326     	SUBAR	_workStep,W
     001E 0803                      1- 1327     	BTRSS	STATUS,0
     001F 3rrr                      1- 1328     	LGOTO	_00349_DS_
                                    1- 1329     	.line	413, "main.c"; 	workStep = 1;
     0020 2101                      1- 1330     	MOVIA	0x01
     0021 00rr                      1- 1331     	MOVAR	_workStep
     0022                           1- 1332     _00349_DS_:
                                    1- 1333     	.line	414, "main.c"; 	pwmInit();
     0022 2rrr                      1- 1334     	LCALL	_pwmInit
                                    1- 1335     	.line	415, "main.c"; 	duty = 1;
     0023 2101                      1- 1336     	MOVIA	0x01
                                    1- 1337     	BANKSEL	_duty
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 1338     	MOVAR	_duty
     0026 02rr                      1- 1339     	CLRR	(_duty + 1)
                                    1- 1340     	.line	416, "main.c"; 	fgCount = 0;
                                    1- 1341     	BANKSEL	_fgCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1- 1342     	CLRR	_fgCount
     0029 02rr                      1- 1343     	CLRR	(_fgCount + 1)
                                    1- 1344     	.line	417, "main.c"; 	workStartFlag = 0;
                                    1- 1345     	BANKSEL	_workStartFlag
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 02rr                      1- 1346     	CLRR	_workStartFlag
                                    1- 1347     	.line	418, "main.c"; 	if(workStep == 1)
                                    1- 1348     	BANKSEL	_workStep
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1- 1349     	MOVR	_workStep,W
     002E 2401                      1- 1350     	XORIA	0x01
     002F 0903                      1- 1351     	BTRSS	STATUS,2
     0030 3rrr                      1- 1352     	LGOTO	_00359_DS_
                                    1- 1353     	.line	419, "main.c"; 	maxDuty = 54;
     0031 2136                      1- 1354     	MOVIA	0x36
                                    1- 1355     	BANKSEL	_maxDuty
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1- 1356     	MOVAR	_maxDuty
     0034 3rrr                      1- 1357     	LGOTO	_00360_DS_
     0035                           1- 1358     _00359_DS_:
                                    1- 1359     	.line	420, "main.c"; 	else if(workStep == 2)
                                    1- 1360     	BANKSEL	_workStep
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1361     	MOVR	_workStep,W
     0037 2402                      1- 1362     	XORIA	0x02
     0038 0903                      1- 1363     	BTRSS	STATUS,2
     0039 3rrr                      1- 1364     	LGOTO	_00356_DS_
                                    1- 1365     	.line	421, "main.c"; 	maxDuty = 30;
     003A 211E                      1- 1366     	MOVIA	0x1e
                                    1- 1367     	BANKSEL	_maxDuty
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 00rr                      1- 1368     	MOVAR	_maxDuty
     003D 3rrr                      1- 1369     	LGOTO	_00360_DS_
     003E                           1- 1370     _00356_DS_:
                                    1- 1371     	.line	422, "main.c"; 	else if(workStep == 3)
                                    1- 1372     	BANKSEL	_workStep
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1- 1373     	MOVR	_workStep,W
     0040 2403                      1- 1374     	XORIA	0x03
     0041 0903                      1- 1375     	BTRSS	STATUS,2
     0042 3rrr                      1- 1376     	LGOTO	_00353_DS_
                                    1- 1377     	.line	423, "main.c"; 	maxDuty = 14;
     0043 210E                      1- 1378     	MOVIA	0x0e
                                    1- 1379     	BANKSEL	_maxDuty
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 00rr                      1- 1380     	MOVAR	_maxDuty
     0046 3rrr                      1- 1381     	LGOTO	_00360_DS_
     0047                           1- 1382     _00353_DS_:
                                    1- 1383     	.line	424, "main.c"; 	else if(workStep == 4)
                                    1- 1384     	BANKSEL	_workStep
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1- 1385     	MOVR	_workStep,W
     0049 2404                      1- 1386     	XORIA	0x04
     004A 0903                      1- 1387     	BTRSS	STATUS,2
     004B 3rrr                      1- 1388     	LGOTO	_00360_DS_
                                    1- 1389     	.line	425, "main.c"; 	maxDuty = 5;
     004C 2105                      1- 1390     	MOVIA	0x05
                                    1- 1391     	BANKSEL	_maxDuty
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1- 1392     	MOVAR	_maxDuty
     004F                           1- 1393     _00360_DS_:
                                    1- 1394     	.line	426, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1395     	BANKSEL	_maxDuty
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 1396     	MOVR	_maxDuty,W
     0051 00rr                      1- 1397     	SFUN	_PWM2DUTY
     0052 3rrr                      1- 1398     	LGOTO	_00370_DS_
     0053                           1- 1399     _00367_DS_:
                                    1- 1400     	.line	428, "main.c"; 	else if(kclick == 2)
                                    1- 1401     	BANKSEL	r0x102A
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 01rr                      1- 1402     	MOVR	r0x102A,W
     0055 2402                      1- 1403     	XORIA	0x02
     0056 0903                      1- 1404     	BTRSS	STATUS,2
     0057 3rrr                      1- 1405     	LGOTO	_00370_DS_
                                    1- 1406     	.line	430, "main.c"; 	if(workStep > 0)
                                    1- 1407     	BANKSEL	_workStep
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 01rr                      1- 1408     	MOVR	_workStep,W
     005A 0D03                      1- 1409     	BTRSC	STATUS,2
     005B 3rrr                      1- 1410     	LGOTO	_00362_DS_
                                    1- 1411     	.line	432, "main.c"; 	workStep = 0;
     005C 02rr                      1- 1412     	CLRR	_workStep
                                    1- 1413     	.line	433, "main.c"; 	pwmStop();
     005D 2rrr                      1- 1414     	LCALL	_pwmStop
                                    1- 1415     	.line	434, "main.c"; 	LEDHOFF();
     005E 2rrr                      1- 1416     	LCALL	_LEDHOFF
                                    1- 1417     	.line	435, "main.c"; 	LEDLOFF();
     005F 2rrr                      1- 1418     	LCALL	_LEDLOFF
                                    1- 1419     	.line	436, "main.c"; 	ledStep = 5;
     0060 2105                      1- 1420     	MOVIA	0x05
                                    1- 1421     	BANKSEL	_ledStep
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 00rr                      1- 1422     	MOVAR	_ledStep
                                    1- 1423     	.line	437, "main.c"; 	workStartFlag = 2;
     0063 2102                      1- 1424     	MOVIA	0x02
                                    1- 1425     	BANKSEL	_workStartFlag
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 00rr                      1- 1426     	MOVAR	_workStartFlag
     0066 3rrr                      1- 1427     	LGOTO	_00370_DS_
     0067                           1- 1428     _00362_DS_:
                                    1- 1429     	.line	441, "main.c"; 	workStartFlag = 1;
     0067 2101                      1- 1430     	MOVIA	0x01
                                    1- 1431     	BANKSEL	_workStartFlag
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 00rr                      1- 1432     	MOVAR	_workStartFlag
                                    1- 1433     	.line	442, "main.c"; 	maxDuty = 46;
     006A 212E                      1- 1434     	MOVIA	0x2e
                                    1- 1435     	BANKSEL	_maxDuty
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 00rr                      1- 1436     	MOVAR	_maxDuty
                                    1- 1437     	.line	443, "main.c"; 	workStep = 1;
     006D 2101                      1- 1438     	MOVIA	0x01
                                    1- 1439     	BANKSEL	_workStep
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 00rr                      1- 1440     	MOVAR	_workStep
                                    1- 1441     	.line	444, "main.c"; 	ledStep = 0;
                                    1- 1442     	BANKSEL	_ledStep
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 02rr                      1- 1443     	CLRR	_ledStep
                                    1- 1444     	.line	445, "main.c"; 	count500ms = 0;
                                    1- 1445     	BANKSEL	_count500ms
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 02rr                      1- 1446     	CLRR	_count500ms
                                    1- 1447     	.line	446, "main.c"; 	pwmInit();
     0074 2rrr                      1- 1448     	LCALL	_pwmInit
                                    1- 1449     	.line	447, "main.c"; 	duty = 1;
     0075 2101                      1- 1450     	MOVIA	0x01
                                    1- 1451     	BANKSEL	_duty
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 00rr                      1- 1452     	MOVAR	_duty
     0078 02rr                      1- 1453     	CLRR	(_duty + 1)
                                    1- 1454     	.line	448, "main.c"; 	fgCount = 0;
                                    1- 1455     	BANKSEL	_fgCount
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 02rr                      1- 1456     	CLRR	_fgCount
     007B 02rr                      1- 1457     	CLRR	(_fgCount + 1)
     007C                           1- 1458     _00370_DS_:
                                    1- 1459     	.line	452, "main.c"; 	}
                                    1- 1460     	RETURN	
     007C 0010                      3-   26 m1      ret
                                    1- 1461     ; exit point of _keyCtr
                                    1- 1463     ;***
                                    1- 1464     ;  pBlock Stats: dbName = C
                                    1- 1465     ;***
                                    1- 1466     ;functions called:
                                    1- 1467     ;   _pwmInit
                                    1- 1468     ;   _pwmInit
                                    1- 1469     ;; Starting pCode block
                                    1- 1470     .segment "code"; module=main, function=_ledCtr
     0000                           1- 1472     _ledCtr:
                                    1- 1473     ; 0 exit points
                                    1- 1474     	.line	369, "main.c"; 	if(workStartFlag == 1)
                                    1- 1475     	BANKSEL	_workStartFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1476     	MOVR	_workStartFlag,W
     0002 2401                      1- 1477     	XORIA	0x01
     0003 0903                      1- 1478     	BTRSS	STATUS,2
     0004 3rrr                      1- 1479     	LGOTO	_00338_DS_
                                    1- 1480     	.line	372, "main.c"; 	if(++ledStep > 4)
                                    1- 1481     	BANKSEL	_ledStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1482     	INCR	_ledStep,F
                                    1- 1483     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1484     ;;unsigned compare: left >= lit (0x5=5), size=1
     0007 2105                      1- 1485     	MOVIA	0x05
     0008 04rr                      1- 1486     	SUBAR	_ledStep,W
     0009 0803                      1- 1487     	BTRSS	STATUS,0
     000A 3rrr                      1- 1488     	LGOTO	_00340_DS_
                                    1- 1489     	.line	374, "main.c"; 	ledStep = workStep;
                                    1- 1490     	BANKSEL	_workStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1491     	MOVR	_workStep,W
                                    1- 1492     	BANKSEL	_ledStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1493     	MOVAR	_ledStep
                                    1- 1494     	.line	375, "main.c"; 	workStartFlag = 3;
     000F 2103                      1- 1495     	MOVIA	0x03
                                    1- 1496     	BANKSEL	_workStartFlag
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1497     	MOVAR	_workStartFlag
     0012 3rrr                      1- 1498     	LGOTO	_00340_DS_
     0013                           1- 1499     _00338_DS_:
                                    1- 1500     	.line	379, "main.c"; 	else if(workStartFlag == 2)
                                    1- 1501     	BANKSEL	_workStartFlag
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1502     	MOVR	_workStartFlag,W
     0015 2402                      1- 1503     	XORIA	0x02
     0016 0903                      1- 1504     	BTRSS	STATUS,2
     0017 3rrr                      1- 1505     	LGOTO	_00335_DS_
                                    1- 1506     	.line	381, "main.c"; 	if(ledStep > 0)
                                    1- 1507     	BANKSEL	_ledStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1508     	MOVR	_ledStep,W
     001A 0D03                      1- 1509     	BTRSC	STATUS,2
     001B 3rrr                      1- 1510     	LGOTO	_00340_DS_
                                    1- 1511     	.line	383, "main.c"; 	ledStep--;
     001C 06rr                      1- 1512     	DECR	_ledStep,F
                                    1- 1513     	.line	384, "main.c"; 	workStartFlag = 0;
                                    1- 1514     	BANKSEL	_workStartFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 02rr                      1- 1515     	CLRR	_workStartFlag
     001F 3rrr                      1- 1516     	LGOTO	_00340_DS_
     0020                           1- 1517     _00335_DS_:
                                    1- 1518     	.line	389, "main.c"; 	ledStep = workStep;
                                    1- 1519     	BANKSEL	_workStep
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1520     	MOVR	_workStep,W
                                    1- 1521     	BANKSEL	_ledStep
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 00rr                      1- 1522     	MOVAR	_ledStep
                                    1- 1523     	.line	390, "main.c"; 	if(workStep)
                                    1- 1524     	BANKSEL	_workStep
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1525     	MOVR	_workStep,W
     0026 0903                      1- 1526     	BTRSS	STATUS,2
                                    1- 1527     	.line	391, "main.c"; 	pwmInit();
     0027 2rrr                      1- 1528     	LCALL	_pwmInit
     0028                           1- 1529     _00340_DS_:
                                    1- 1530     	.line	394, "main.c"; 	}
                                    1- 1531     	RETURN	
     0028 0010                      3-   26 m1      ret
                                    1- 1533     ;***
                                    1- 1534     ;  pBlock Stats: dbName = C
                                    1- 1535     ;***
                                    1- 1536     ;has an exit
                                    1- 1537     ;functions called:
                                    1- 1538     ;   _LEDLON
                                    1- 1539     ;   _LEDHON
                                    1- 1540     ;   _LEDHOFF
                                    1- 1541     ;   _LEDLOFF
                                    1- 1542     ;   _LEDHON
                                    1- 1543     ;   _LEDHOFF
                                    1- 1544     ;   _LEDHON
                                    1- 1545     ;   _LEDLOFF
                                    1- 1546     ;   _LEDHOFF
                                    1- 1547     ;   _LEDLON
                                    1- 1548     ;   _LEDHON
                                    1- 1549     ;   _LEDHOFF
                                    1- 1550     ;   _LEDLOFF
                                    1- 1551     ;   _LEDHON
                                    1- 1552     ;   _LEDHOFF
                                    1- 1553     ;   _LEDHON
                                    1- 1554     ;   _LEDLOFF
                                    1- 1555     ;   _LEDHOFF
                                    1- 1556     ;; Starting pCode block
                                    1- 1557     .segment "code"; module=main, function=_LedCtr2
     0000                           1- 1559     _LedCtr2:
                                    1- 1560     ; 2 exit points
                                    1- 1561     	.line	324, "main.c"; 	if(++startStep > 6)
                                    1- 1562     	BANKSEL	_startStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1563     	INCR	_startStep,F
                                    1- 1564     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1565     ;;unsigned compare: left >= lit (0x7=7), size=1
     0002 2107                      1- 1566     	MOVIA	0x07
     0003 04rr                      1- 1567     	SUBAR	_startStep,W
     0004 0803                      1- 1568     	BTRSS	STATUS,0
     0005 3rrr                      1- 1569     	LGOTO	_00300_DS_
                                    1- 1570     	.line	326, "main.c"; 	workStartFlag = 0;
                                    1- 1571     	BANKSEL	_workStartFlag
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 1572     	CLRR	_workStartFlag
                                    1- 1573     	.line	327, "main.c"; 	startStep = 0;
                                    1- 1574     	BANKSEL	_startStep
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 1575     	CLRR	_startStep
                                    1- 1576     	.line	328, "main.c"; 	ledStep = workStep;
                                    1- 1577     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1578     	MOVR	_workStep,W
                                    1- 1579     	BANKSEL	_ledStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1580     	MOVAR	_ledStep
     000E                           1- 1581     _00300_DS_:
                                    1- 1582     	.line	332, "main.c"; 	if(startStep == 1)
                                    1- 1583     	BANKSEL	_startStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1584     	MOVR	_startStep,W
     0010 2401                      1- 1585     	XORIA	0x01
     0011 0903                      1- 1586     	BTRSS	STATUS,2
     0012 3rrr                      1- 1587     	LGOTO	_00321_DS_
                                    1- 1588     	.line	334, "main.c"; 	if(pwStep == 1)
                                    1- 1589     	BANKSEL	_pwStep
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1590     	MOVR	_pwStep,W
     0015 2401                      1- 1591     	XORIA	0x01
     0016 0903                      1- 1592     	BTRSS	STATUS,2
     0017 3rrr                      1- 1593     	LGOTO	_00304_DS_
                                    1- 1594     	.line	336, "main.c"; 	LEDLON();
     0018 2rrr                      1- 1595     	LCALL	_LEDLON
     0019 3rrr                      1- 1596     	LGOTO	_00323_DS_
                                    1- 1597     ;;unsigned compare: left < lit (0x2=2), size=1
     001A                           1- 1598     _00304_DS_:
                                    1- 1599     	.line	338, "main.c"; 	else if(pwStep >= 2)
     001A 2102                      1- 1600     	MOVIA	0x02
                                    1- 1601     	BANKSEL	_pwStep
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 04rr                      1- 1602     	SUBAR	_pwStep,W
     001D 0803                      1- 1603     	BTRSS	STATUS,0
     001E 3rrr                      1- 1604     	LGOTO	_00323_DS_
                                    1- 1605     	.line	340, "main.c"; 	LEDHON();
     001F 2rrr                      1- 1606     	LCALL	_LEDHON
     0020 3rrr                      1- 1607     	LGOTO	_00323_DS_
     0021                           1- 1608     _00321_DS_:
                                    1- 1609     	.line	343, "main.c"; 	else if(startStep == 2)
                                    1- 1610     	BANKSEL	_startStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1611     	MOVR	_startStep,W
     0023 2402                      1- 1612     	XORIA	0x02
     0024 0903                      1- 1613     	BTRSS	STATUS,2
     0025 3rrr                      1- 1614     	LGOTO	_00318_DS_
                                    1- 1615     	.line	345, "main.c"; 	LEDHOFF();
     0026 2rrr                      1- 1616     	LCALL	_LEDHOFF
                                    1- 1617     	.line	346, "main.c"; 	LEDLOFF();
     0027 2rrr                      1- 1618     	LCALL	_LEDLOFF
     0028 3rrr                      1- 1619     	LGOTO	_00323_DS_
     0029                           1- 1620     _00318_DS_:
                                    1- 1621     	.line	348, "main.c"; 	else if(startStep == 3 && pwStep >= 3)
                                    1- 1622     	BANKSEL	_startStep
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 1623     	MOVR	_startStep,W
     002B 2403                      1- 1624     	XORIA	0x03
     002C 0903                      1- 1625     	BTRSS	STATUS,2
     002D 3rrr                      1- 1626     	LGOTO	_00314_DS_
                                    1- 1627     ;;unsigned compare: left < lit (0x3=3), size=1
     002E 2103                      1- 1628     	MOVIA	0x03
                                    1- 1629     	BANKSEL	_pwStep
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 04rr                      1- 1630     	SUBAR	_pwStep,W
     0031 0803                      1- 1631     	BTRSS	STATUS,0
     0032 3rrr                      1- 1632     	LGOTO	_00314_DS_
                                    1- 1633     	.line	350, "main.c"; 	LEDHON();
     0033 2rrr                      1- 1634     	LCALL	_LEDHON
     0034 3rrr                      1- 1635     	LGOTO	_00323_DS_
     0035                           1- 1636     _00314_DS_:
                                    1- 1637     	.line	352, "main.c"; 	else if(startStep == 4)
                                    1- 1638     	BANKSEL	_startStep
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1639     	MOVR	_startStep,W
     0037 2404                      1- 1640     	XORIA	0x04
     0038 0903                      1- 1641     	BTRSS	STATUS,2
     0039 3rrr                      1- 1642     	LGOTO	_00311_DS_
                                    1- 1643     	.line	354, "main.c"; 	LEDHOFF();
     003A 2rrr                      1- 1644     	LCALL	_LEDHOFF
     003B 3rrr                      1- 1645     	LGOTO	_00323_DS_
     003C                           1- 1646     _00311_DS_:
                                    1- 1647     	.line	356, "main.c"; 	else if(startStep == 5 && pwStep >= 4)
                                    1- 1648     	BANKSEL	_startStep
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 1649     	MOVR	_startStep,W
     003E 2405                      1- 1650     	XORIA	0x05
     003F 0903                      1- 1651     	BTRSS	STATUS,2
     0040 3rrr                      1- 1652     	LGOTO	_00307_DS_
                                    1- 1653     ;;unsigned compare: left < lit (0x4=4), size=1
     0041 2104                      1- 1654     	MOVIA	0x04
                                    1- 1655     	BANKSEL	_pwStep
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 04rr                      1- 1656     	SUBAR	_pwStep,W
     0044 0803                      1- 1657     	BTRSS	STATUS,0
     0045 3rrr                      1- 1658     	LGOTO	_00307_DS_
                                    1- 1659     	.line	358, "main.c"; 	LEDHON();
     0046 2rrr                      1- 1660     	LCALL	_LEDHON
     0047 3rrr                      1- 1661     	LGOTO	_00323_DS_
     0048                           1- 1662     _00307_DS_:
                                    1- 1663     	.line	362, "main.c"; 	LEDLOFF();
     0048 2rrr                      1- 1664     	LCALL	_LEDLOFF
                                    1- 1665     	.line	363, "main.c"; 	LEDHOFF();
     0049 2rrr                      1- 1666     	LCALL	_LEDHOFF
     004A                           1- 1667     _00323_DS_:
                                    1- 1668     	.line	365, "main.c"; 	}
                                    1- 1669     	RETURN	
     004A 0010                      3-   26 m1      ret
                                    1- 1670     ; exit point of _LedCtr2
                                    1- 1672     ;***
                                    1- 1673     ;  pBlock Stats: dbName = C
                                    1- 1674     ;***
                                    1- 1675     ;has an exit
                                    1- 1676     ;2 compiler assigned registers:
                                    1- 1677     ;   r0x102B
                                    1- 1678     ;   r0x102C
                                    1- 1679     ;; Starting pCode block
                                    1- 1680     .segment "code"; module=main, function=_workCtr
     0000                           1- 1682     _workCtr:
                                    1- 1683     ; 2 exit points
                                    1- 1684     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1685     ;;unsigned compare: left >= lit (0x47=71), size=2
                                    1- 1686     	.line	302, "main.c"; 	if(fgPRD > 70)
     0000 2100                      1- 1687     	MOVIA	0x00
                                    1- 1688     	BANKSEL	_fgPRD
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1689     	SUBAR	(_fgPRD + 1),W
     0003 0903                      1- 1690     	BTRSS	STATUS,2
     0004 3rrr                      1- 1691     	LGOTO	_00292_DS_
     0005 2147                      1- 1692     	MOVIA	0x47
     0006 04rr                      1- 1693     	SUBAR	_fgPRD,W
     0007                           1- 1694     _00292_DS_:
     0007 0803                      1- 1695     	BTRSS	STATUS,0
     0008 3rrr                      1- 1696     	LGOTO	_00279_DS_
                                    1- 1697     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1698     ;;unsigned compare: left >= lit (0x3=3), size=2
                                    1- 1699     	.line	305, "main.c"; 	if(duty > 2)
     0009 2100                      1- 1700     	MOVIA	0x00
                                    1- 1701     	BANKSEL	_duty
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 04rr                      1- 1702     	SUBAR	(_duty + 1),W
     000C 0903                      1- 1703     	BTRSS	STATUS,2
     000D 3rrr                      1- 1704     	LGOTO	_00293_DS_
     000E 2103                      1- 1705     	MOVIA	0x03
     000F 04rr                      1- 1706     	SUBAR	_duty,W
     0010                           1- 1707     _00293_DS_:
     0010 0803                      1- 1708     	BTRSS	STATUS,0
     0011 3rrr                      1- 1709     	LGOTO	_00281_DS_
                                    1- 1710     	.line	307, "main.c"; 	--duty;
     0012 21FF                      1- 1711     	MOVIA	0xff
                                    1- 1712     	BANKSEL	_duty
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 03rr                      1- 1713     	ADDAR	_duty,F
     0015 0803                      1- 1714     	BTRSS	STATUS,0
     0016 06rr                      1- 1715     	DECR	(_duty + 1),F
                                    1- 1716     	.line	308, "main.c"; 	PWM2DUTY = duty;
     0017 01rr                      1- 1717     	MOVR	_duty,W
                                    1- 1718     	BANKSEL	r0x102B
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 1719     	MOVAR	r0x102B
     001A 00rr                      1- 1720     	SFUN	_PWM2DUTY
     001B 3rrr                      1- 1721     	LGOTO	_00281_DS_
     001C                           1- 1722     _00279_DS_:
                                    1- 1723     	.line	313, "main.c"; 	if(++duty >= maxDuty)
                                    1- 1724     	BANKSEL	_duty
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 05rr                      1- 1725     	INCR	_duty,F
     001E 0D03                      1- 1726     	BTRSC	STATUS,2
     001F 05rr                      1- 1727     	INCR	(_duty + 1),F
                                    1- 1728     	BANKSEL	_maxDuty
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1729     	MOVR	_maxDuty,W
                                    1- 1730     	BANKSEL	r0x102B
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 00rr                      1- 1731     	MOVAR	r0x102B
                                    1- 1732     	BANKSEL	r0x102C
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1- 1733     	CLRR	r0x102C
     0026 2100                      1- 1734     	MOVIA	0x00
                                    1- 1735     	BANKSEL	_duty
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 04rr                      1- 1736     	SUBAR	(_duty + 1),W
     0029 0903                      1- 1737     	BTRSS	STATUS,2
     002A 3rrr                      1- 1738     	LGOTO	_00294_DS_
                                    1- 1739     	BANKSEL	r0x102B
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 1740     	MOVR	r0x102B,W
                                    1- 1741     	BANKSEL	_duty
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 04rr                      1- 1742     	SUBAR	_duty,W
     002F                           1- 1743     _00294_DS_:
     002F 0803                      1- 1744     	BTRSS	STATUS,0
     0030 3rrr                      1- 1745     	LGOTO	_00277_DS_
                                    1- 1746     	.line	315, "main.c"; 	duty = maxDuty;
                                    1- 1747     	BANKSEL	r0x102B
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1- 1748     	MOVR	r0x102B,W
                                    1- 1749     	BANKSEL	_duty
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1- 1750     	MOVAR	_duty
                                    1- 1751     	BANKSEL	r0x102C
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1752     	MOVR	r0x102C,W
                                    1- 1753     	BANKSEL	_duty
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 1754     	MOVAR	(_duty + 1)
     0039                           1- 1755     _00277_DS_:
                                    1- 1756     	.line	317, "main.c"; 	PWM2DUTY = duty;
                                    1- 1757     	BANKSEL	_duty
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 1758     	MOVR	_duty,W
                                    1- 1759     	BANKSEL	r0x102B
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 00rr                      1- 1760     	MOVAR	r0x102B
     003D 00rr                      1- 1761     	SFUN	_PWM2DUTY
     003E                           1- 1762     _00281_DS_:
                                    1- 1763     	.line	319, "main.c"; 	}
                                    1- 1764     	RETURN	
     003E 0010                      3-   26 m1      ret
                                    1- 1765     ; exit point of _workCtr
                                    1- 1767     ;***
                                    1- 1768     ;  pBlock Stats: dbName = C
                                    1- 1769     ;***
                                    1- 1770     ;has an exit
                                    1- 1771     ;; Starting pCode block
                                    1- 1772     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1774     _pwmStop:
                                    1- 1775     ; 2 exit points
                                    1- 1776     	.line	296, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 1777     	CLRA	
     0001 00rr                      1- 1778     	SFUN	_T2CR1
                                    1- 1779     	.line	297, "main.c"; 	}
                                    1- 1780     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1781     ; exit point of _pwmStop
                                    1- 1783     ;***
                                    1- 1784     ;  pBlock Stats: dbName = C
                                    1- 1785     ;***
                                    1- 1786     ;has an exit
                                    1- 1787     ;1 compiler assigned register :
                                    1- 1788     ;   r0x1029
                                    1- 1789     ;; Starting pCode block
                                    1- 1790     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1792     _pwmInit:
                                    1- 1793     ; 2 exit points
                                    1- 1794     	.line	284, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1795     	SFUNR	_T2CR1
                                    1- 1796     	BANKSEL	r0x1029
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1797     	MOVAR	r0x1029
     0003 0Frr                      1- 1798     	BTRSC	r0x1029,7
                                    1- 1799     	.line	285, "main.c"; 	return;
     0004 3rrr                      1- 1800     	LGOTO	_00265_DS_
                                    1- 1801     	.line	286, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1802     	CLRR	_TMRH
                                    1- 1803     	.line	287, "main.c"; 	TMR2 = 128;							//频率为110K
     0006 2180                      1- 1804     	MOVIA	0x80
     0007 00rr                      1- 1805     	SFUN	_TMR2
                                    1- 1806     	.line	288, "main.c"; 	PWM2DUTY = 0x08;				// 		
     0008 2108                      1- 1807     	MOVIA	0x08
     0009 00rr                      1- 1808     	SFUN	_PWM2DUTY
                                    1- 1809     	.line	290, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     000A 0200                      1- 1810     	CLRA	
     000B 00rr                      1- 1811     	SFUN	_T2CR2
                                    1- 1812     	.line	291, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 1813     	MOVIA	0x83
     000D 00rr                      1- 1814     	SFUN	_T2CR1
     000E                           1- 1815     _00265_DS_:
                                    1- 1816     	.line	292, "main.c"; 	}
                                    1- 1817     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1818     ; exit point of _pwmInit
                                    1- 1820     ;***
                                    1- 1821     ;  pBlock Stats: dbName = C
                                    1- 1822     ;***
                                    1- 1823     ;has an exit
                                    1- 1824     ;functions called:
                                    1- 1825     ;   _delay
                                    1- 1826     ;   _LedInput
                                    1- 1827     ;   _delay
                                    1- 1828     ;   _LedInput
                                    1- 1829     ;1 compiler assigned register :
                                    1- 1830     ;   r0x102D
                                    1- 1831     ;; Starting pCode block
                                    1- 1832     .segment "code"; module=main, function=_LED4ON
     0000                           1- 1834     _LED4ON:
                                    1- 1835     ; 2 exit points
                                    1- 1836     	.line	273, "main.c"; 	PB3P53OUT();
     0000 001r                      1- 1837     	IOSTR	_IOSTB
                                    1- 1838     	BANKSEL	r0x102D
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1839     	MOVAR	r0x102D
     0003 1Drr                      1- 1840     	BCR	r0x102D,3
     0004 01rr                      1- 1841     	MOVR	r0x102D,W
     0005 000r                      1- 1842     	IOST	_IOSTB
                                    1- 1843     	.line	274, "main.c"; 	PA7P02OUT();
     0006 001r                      1- 1844     	IOSTR	_IOSTA
     0007 00rr                      1- 1845     	MOVAR	r0x102D
     0008 1Frr                      1- 1846     	BCR	r0x102D,7
     0009 01rr                      1- 1847     	MOVR	r0x102D,W
     000A 000r                      1- 1848     	IOST	_IOSTA
                                    1- 1849     	.line	275, "main.c"; 	PB3P53ON();
     000B 19rr                      1- 1850     	BSR	_PORTB,3
                                    1- 1851     	.line	276, "main.c"; 	PA7P02OFF();
                                    1- 1852     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Frr                      1- 1853     	BCR	_PORTA,7
                                    1- 1854     	.line	277, "main.c"; 	delay(100);
     000E 2164                      1- 1855     	MOVIA	0x64
     000F 2rrr                      1- 1856     	LCALL	_delay
                                    1- 1857     	.line	278, "main.c"; 	LedInput();
     0010 2rrr                      1- 1858     	LCALL	_LedInput
                                    1- 1859     	.line	279, "main.c"; 	}
                                    1- 1860     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1861     ; exit point of _LED4ON
                                    1- 1863     ;***
                                    1- 1864     ;  pBlock Stats: dbName = C
                                    1- 1865     ;***
                                    1- 1866     ;has an exit
                                    1- 1867     ;functions called:
                                    1- 1868     ;   _delay
                                    1- 1869     ;   _LedInput
                                    1- 1870     ;   _delay
                                    1- 1871     ;   _LedInput
                                    1- 1872     ;1 compiler assigned register :
                                    1- 1873     ;   r0x102E
                                    1- 1874     ;; Starting pCode block
                                    1- 1875     .segment "code"; module=main, function=_LED3ON
     0000                           1- 1877     _LED3ON:
                                    1- 1878     ; 2 exit points
                                    1- 1879     	.line	263, "main.c"; 	PA7P02OUT();
     0000 001r                      1- 1880     	IOSTR	_IOSTA
                                    1- 1881     	BANKSEL	r0x102E
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1882     	MOVAR	r0x102E
     0003 1Frr                      1- 1883     	BCR	r0x102E,7
     0004 01rr                      1- 1884     	MOVR	r0x102E,W
     0005 000r                      1- 1885     	IOST	_IOSTA
                                    1- 1886     	.line	264, "main.c"; 	PA0P40OUT();
     0006 001r                      1- 1887     	IOSTR	_IOSTA
     0007 00rr                      1- 1888     	MOVAR	r0x102E
     0008 1Crr                      1- 1889     	BCR	r0x102E,0
     0009 01rr                      1- 1890     	MOVR	r0x102E,W
     000A 000r                      1- 1891     	IOST	_IOSTA
                                    1- 1892     	.line	265, "main.c"; 	PA7P02OFF();
                                    1- 1893     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 1Frr                      1- 1894     	BCR	_PORTA,7
                                    1- 1895     	.line	266, "main.c"; 	PA0P40ON();
     000D 18rr                      1- 1896     	BSR	_PORTA,0
                                    1- 1897     	.line	267, "main.c"; 	delay(100);
     000E 2164                      1- 1898     	MOVIA	0x64
     000F 2rrr                      1- 1899     	LCALL	_delay
                                    1- 1900     	.line	268, "main.c"; 	LedInput();
     0010 2rrr                      1- 1901     	LCALL	_LedInput
                                    1- 1902     	.line	269, "main.c"; 	}
                                    1- 1903     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1904     ; exit point of _LED3ON
                                    1- 1906     ;***
                                    1- 1907     ;  pBlock Stats: dbName = C
                                    1- 1908     ;***
                                    1- 1909     ;has an exit
                                    1- 1910     ;functions called:
                                    1- 1911     ;   _delay
                                    1- 1912     ;   _LedInput
                                    1- 1913     ;   _delay
                                    1- 1914     ;   _LedInput
                                    1- 1915     ;1 compiler assigned register :
                                    1- 1916     ;   r0x102F
                                    1- 1917     ;; Starting pCode block
                                    1- 1918     .segment "code"; module=main, function=_LED2ON
     0000                           1- 1920     _LED2ON:
                                    1- 1921     ; 2 exit points
                                    1- 1922     	.line	253, "main.c"; 	PA7P02OUT();
     0000 001r                      1- 1923     	IOSTR	_IOSTA
                                    1- 1924     	BANKSEL	r0x102F
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1925     	MOVAR	r0x102F
     0003 1Frr                      1- 1926     	BCR	r0x102F,7
     0004 01rr                      1- 1927     	MOVR	r0x102F,W
     0005 000r                      1- 1928     	IOST	_IOSTA
                                    1- 1929     	.line	254, "main.c"; 	PA0P40OUT();
     0006 001r                      1- 1930     	IOSTR	_IOSTA
     0007 00rr                      1- 1931     	MOVAR	r0x102F
     0008 1Crr                      1- 1932     	BCR	r0x102F,0
     0009 01rr                      1- 1933     	MOVR	r0x102F,W
     000A 000r                      1- 1934     	IOST	_IOSTA
                                    1- 1935     	.line	255, "main.c"; 	PA7P02ON();
                                    1- 1936     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 1Brr                      1- 1937     	BSR	_PORTA,7
                                    1- 1938     	.line	256, "main.c"; 	PA0P40OFF();
     000D 1Crr                      1- 1939     	BCR	_PORTA,0
                                    1- 1940     	.line	257, "main.c"; 	delay(100);
     000E 2164                      1- 1941     	MOVIA	0x64
     000F 2rrr                      1- 1942     	LCALL	_delay
                                    1- 1943     	.line	258, "main.c"; 	LedInput();
     0010 2rrr                      1- 1944     	LCALL	_LedInput
                                    1- 1945     	.line	259, "main.c"; 	}
                                    1- 1946     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1947     ; exit point of _LED2ON
                                    1- 1949     ;***
                                    1- 1950     ;  pBlock Stats: dbName = C
                                    1- 1951     ;***
                                    1- 1952     ;has an exit
                                    1- 1953     ;functions called:
                                    1- 1954     ;   _delay
                                    1- 1955     ;   _LedInput
                                    1- 1956     ;   _delay
                                    1- 1957     ;   _LedInput
                                    1- 1958     ;1 compiler assigned register :
                                    1- 1959     ;   r0x1030
                                    1- 1960     ;; Starting pCode block
                                    1- 1961     .segment "code"; module=main, function=_LED1ON
     0000                           1- 1963     _LED1ON:
                                    1- 1964     ; 2 exit points
                                    1- 1965     	.line	243, "main.c"; 	PB3P53OUT();
     0000 001r                      1- 1966     	IOSTR	_IOSTB
                                    1- 1967     	BANKSEL	r0x1030
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1968     	MOVAR	r0x1030
     0003 1Drr                      1- 1969     	BCR	r0x1030,3
     0004 01rr                      1- 1970     	MOVR	r0x1030,W
     0005 000r                      1- 1971     	IOST	_IOSTB
                                    1- 1972     	.line	244, "main.c"; 	PA0P40OUT();
     0006 001r                      1- 1973     	IOSTR	_IOSTA
     0007 00rr                      1- 1974     	MOVAR	r0x1030
     0008 1Crr                      1- 1975     	BCR	r0x1030,0
     0009 01rr                      1- 1976     	MOVR	r0x1030,W
     000A 000r                      1- 1977     	IOST	_IOSTA
                                    1- 1978     	.line	245, "main.c"; 	PB3P53ON();
     000B 19rr                      1- 1979     	BSR	_PORTB,3
                                    1- 1980     	.line	246, "main.c"; 	PA0P40OFF();
                                    1- 1981     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1- 1982     	BCR	_PORTA,0
                                    1- 1983     	.line	247, "main.c"; 	delay(100);
     000E 2164                      1- 1984     	MOVIA	0x64
     000F 2rrr                      1- 1985     	LCALL	_delay
                                    1- 1986     	.line	248, "main.c"; 	LedInput();
     0010 2rrr                      1- 1987     	LCALL	_LedInput
                                    1- 1988     	.line	249, "main.c"; 	}
                                    1- 1989     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1990     ; exit point of _LED1ON
                                    1- 1992     ;***
                                    1- 1993     ;  pBlock Stats: dbName = C
                                    1- 1994     ;***
                                    1- 1995     ;has an exit
                                    1- 1996     ;1 compiler assigned register :
                                    1- 1997     ;   r0x1027
                                    1- 1998     ;; Starting pCode block
                                    1- 1999     .segment "code"; module=main, function=_LedInput
     0000                           1- 2001     _LedInput:
                                    1- 2002     ; 2 exit points
                                    1- 2003     	.line	235, "main.c"; 	IOSTA |= 0x81;
     0000 001r                      1- 2004     	IOSTR	_IOSTA
                                    1- 2005     	BANKSEL	r0x1027
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2006     	MOVAR	r0x1027
     0003 2181                      1- 2007     	MOVIA	0x81
     0004 11rr                      1- 2008     	IORAR	r0x1027,F
     0005 01rr                      1- 2009     	MOVR	r0x1027,W
     0006 000r                      1- 2010     	IOST	_IOSTA
                                    1- 2011     	.line	236, "main.c"; 	IOSTB |= 0x08;
     0007 001r                      1- 2012     	IOSTR	_IOSTB
     0008 00rr                      1- 2013     	MOVAR	r0x1027
     0009 19rr                      1- 2014     	BSR	r0x1027,3
     000A 01rr                      1- 2015     	MOVR	r0x1027,W
     000B 000r                      1- 2016     	IOST	_IOSTB
                                    1- 2017     	.line	237, "main.c"; 	PORTA &= 0x7E;
     000C 217E                      1- 2018     	MOVIA	0x7e
                                    1- 2019     	BANKSEL	_PORTA
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 10rr                      1- 2020     	ANDAR	_PORTA,F
                                    1- 2021     	.line	238, "main.c"; 	PORTB &= 0xF7;
     000F 1Drr                      1- 2022     	BCR	_PORTB,3
                                    1- 2023     	.line	239, "main.c"; 	}
                                    1- 2024     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 2025     ; exit point of _LedInput
                                    1- 2027     ;***
                                    1- 2028     ;  pBlock Stats: dbName = C
                                    1- 2029     ;***
                                    1- 2030     ;has an exit
                                    1- 2031     ;functions called:
                                    1- 2032     ;   _LedInput
                                    1- 2033     ;   _LedInput
                                    1- 2034     ;   _LED4ON
                                    1- 2035     ;   _LED3ON
                                    1- 2036     ;   _LED2ON
                                    1- 2037     ;   _LED1ON
                                    1- 2038     ;   _LedInput
                                    1- 2039     ;   _LedInput
                                    1- 2040     ;   _LED4ON
                                    1- 2041     ;   _LED3ON
                                    1- 2042     ;   _LED2ON
                                    1- 2043     ;   _LED1ON
                                    1- 2044     ;; Starting pCode block
                                    1- 2045     .segment "code"; module=main, function=_ledShow
     0000                           1- 2047     _ledShow:
                                    1- 2048     ; 2 exit points
                                    1- 2049     	.line	213, "main.c"; 	LedInput();
     0000 2rrr                      1- 2050     	LCALL	_LedInput
                                    1- 2051     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2052     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2053     	.line	214, "main.c"; 	switch(ledStep)
     0001 2105                      1- 2054     	MOVIA	0x05
                                    1- 2055     	BANKSEL	_ledStep
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 2056     	SUBAR	_ledStep,W
     0004 0C03                      1- 2057     	BTRSC	STATUS,0
     0005 3rrr                      1- 2058     	LGOTO	_00232_DS_
     0006 21rr                      1- 2059     	MOVIA	((_00238_DS_ >> 8) & 0xff)
     0007 008A                      1- 2060     	MOVAR	PCHBUF
     0008 01rr                      1- 2061     	MOVR	_ledStep,W
     0009 25rr                      1- 2062     	ADDIA	_00238_DS_
     000A 0C03                      1- 2063     	BTRSC	STATUS,0
     000B 058A                      1- 2064     	INCR	PCHBUF,F
     000C 0082                      1- 2065     	MOVAR	PCL
     000D                           1- 2066     _00238_DS_:
     000D 3rrr                      1- 2067     	LGOTO	_00226_DS_
     000E 3rrr                      1- 2068     	LGOTO	_00230_DS_
     000F 3rrr                      1- 2069     	LGOTO	_00229_DS_
     0010 3rrr                      1- 2070     	LGOTO	_00228_DS_
     0011 3rrr                      1- 2071     	LGOTO	_00227_DS_
     0012                           1- 2072     _00226_DS_:
                                    1- 2073     	.line	217, "main.c"; 	LedInput();
     0012 2rrr                      1- 2074     	LCALL	_LedInput
                                    1- 2075     	.line	218, "main.c"; 	break;
     0013 3rrr                      1- 2076     	LGOTO	_00232_DS_
     0014                           1- 2077     _00227_DS_:
                                    1- 2078     	.line	220, "main.c"; 	LED4ON();
     0014 2rrr                      1- 2079     	LCALL	_LED4ON
     0015                           1- 2080     _00228_DS_:
                                    1- 2081     	.line	222, "main.c"; 	LED3ON();
     0015 2rrr                      1- 2082     	LCALL	_LED3ON
     0016                           1- 2083     _00229_DS_:
                                    1- 2084     	.line	224, "main.c"; 	LED2ON();
     0016 2rrr                      1- 2085     	LCALL	_LED2ON
     0017                           1- 2086     _00230_DS_:
                                    1- 2087     	.line	226, "main.c"; 	LED1ON();
     0017 2rrr                      1- 2088     	LCALL	_LED1ON
     0018                           1- 2089     _00232_DS_:
                                    1- 2090     	.line	229, "main.c"; 	}
                                    1- 2091     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 2092     ; exit point of _ledShow
                                    1- 2094     ;***
                                    1- 2095     ;  pBlock Stats: dbName = C
                                    1- 2096     ;***
                                    1- 2097     ;has an exit
                                    1- 2098     ;; Starting pCode block
                                    1- 2099     .segment "code"; module=main, function=_initSys
     0000                           1- 2101     _initSys:
                                    1- 2102     ; 2 exit points
                                    1- 2103     	.line	186, "main.c"; 	DISI();
     0000 0013                      1- 2104     	DISI
                                    1- 2105     	.line	187, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input;
     0001 2170                      1- 2106     	MOVIA	0x70
     0002 000r                      1- 2107     	IOST	_IOSTA
                                    1- 2108     	.line	188, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1- 2109     	MOVIA	0x01
     0004 000r                      1- 2110     	IOST	_IOSTB
                                    1- 2111     	.line	189, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2112     	CLRR	_PORTB
                                    1- 2113     	.line	190, "main.c"; 	PORTA = 0x00;
                                    1- 2114     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 2115     	CLRR	_PORTA
                                    1- 2116     	.line	191, "main.c"; 	APHCON = 0x9F;
     0008 219F                      1- 2117     	MOVIA	0x9f
     0009 000r                      1- 2118     	IOST	_APHCON
                                    1- 2119     	.line	192, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 2120     	MOVIA	0xff
     000B 00rr                      1- 2121     	MOVAR	_BPHCON
                                    1- 2122     	.line	194, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2123     	MOVIA	0x01
     000D 00rr                      1- 2124     	MOVAR	_INTE
                                    1- 2125     	.line	196, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2126     	CLRA	
     000F 000r                      1- 2127     	IOST	_PCON1
                                    1- 2128     	.line	198, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2129     	MOVIA	0x37
     0011 00rr                      1- 2130     	MOVAR	_TMR0
                                    1- 2131     	.line	199, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0012 0200                      1- 2132     	CLRA	
     0013 0003                      1- 2133     	T0MD	
                                    1- 2134     	.line	201, "main.c"; 	PCON1 = C_TMR0_En;
     0014 2101                      1- 2135     	MOVIA	0x01
     0015 000r                      1- 2136     	IOST	_PCON1
                                    1- 2137     	.line	204, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0016 2188                      1- 2138     	MOVIA	0x88
     0017 00rr                      1- 2139     	MOVAR	_PCON
                                    1- 2140     	.line	207, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0018 2101                      1- 2141     	MOVIA	0x01
     0019 000r                      1- 2142     	IOST	_PCON1
                                    1- 2143     	.line	208, "main.c"; 	ENI();
     001A 0004                      1- 2144     	ENI
                                    1- 2145     	.line	209, "main.c"; 	}
                                    1- 2146     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1- 2147     ; exit point of _initSys
                                    1- 2149     ;***
                                    1- 2150     ;  pBlock Stats: dbName = C
                                    1- 2151     ;***
                                    1- 2152     ;has an exit
                                    1- 2153     ;; Starting pCode block
                                    1- 2154     .segment "code"; module=main, function=_fgCtr
     0000                           1- 2156     _fgCtr:
                                    1- 2157     ; 2 exit points
                                    1- 2158     	.line	169, "main.c"; 	if(PORTB & 0x01)
     0000 08rr                      1- 2159     	BTRSS	_PORTB,0
     0001 3rrr                      1- 2160     	LGOTO	_00215_DS_
                                    1- 2161     	.line	171, "main.c"; 	if(preFG == 0)
                                    1- 2162     	BANKSEL	_preFG
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 01rr                      1- 2163     	MOVR	_preFG,W
     0004 0903                      1- 2164     	BTRSS	STATUS,2
     0005 3rrr                      1- 2165     	LGOTO	_00213_DS_
                                    1- 2166     	.line	173, "main.c"; 	fgPRD = fgCount;
                                    1- 2167     	BANKSEL	_fgCount
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1- 2168     	MOVR	_fgCount,W
                                    1- 2169     	BANKSEL	_fgPRD
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 2170     	MOVAR	_fgPRD
                                    1- 2171     	BANKSEL	_fgCount
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 2172     	MOVR	(_fgCount + 1),W
                                    1- 2173     	BANKSEL	_fgPRD
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 2174     	MOVAR	(_fgPRD + 1)
                                    1- 2175     	.line	174, "main.c"; 	fgCount = 0;
                                    1- 2176     	BANKSEL	_fgCount
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 2177     	CLRR	_fgCount
     0010 02rr                      1- 2178     	CLRR	(_fgCount + 1)
     0011                           1- 2179     _00213_DS_:
                                    1- 2180     	.line	176, "main.c"; 	preFG = 1;
     0011 2101                      1- 2181     	MOVIA	0x01
                                    1- 2182     	BANKSEL	_preFG
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2183     	MOVAR	_preFG
     0014 3rrr                      1- 2184     	LGOTO	_00217_DS_
     0015                           1- 2185     _00215_DS_:
                                    1- 2186     	.line	180, "main.c"; 	preFG = 0;
                                    1- 2187     	BANKSEL	_preFG
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 2188     	CLRR	_preFG
     0017                           1- 2189     _00217_DS_:
                                    1- 2190     	.line	182, "main.c"; 	}
                                    1- 2191     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 2192     ; exit point of _fgCtr
                                    1- 2194     ;***
                                    1- 2195     ;  pBlock Stats: dbName = C
                                    1- 2196     ;***
                                    1- 2197     ;has an exit
                                    1- 2198     ;; Starting pCode block
                                    1- 2199     .segment "code"; module=main, function=_LEDLOFF
     0000                           1- 2201     _LEDLOFF:
                                    1- 2202     ; 2 exit points
                                    1- 2203     	.line	163, "main.c"; 	PORTA &= 0xF7;
                                    1- 2204     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Drr                      1- 2205     	BCR	_PORTA,3
                                    1- 2206     	.line	165, "main.c"; 	}
                                    1- 2207     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2208     ; exit point of _LEDLOFF
                                    1- 2210     ;***
                                    1- 2211     ;  pBlock Stats: dbName = C
                                    1- 2212     ;***
                                    1- 2213     ;has an exit
                                    1- 2214     ;; Starting pCode block
                                    1- 2215     .segment "code"; module=main, function=_LEDHOFF
     0000                           1- 2217     _LEDHOFF:
                                    1- 2218     ; 2 exit points
                                    1- 2219     	.line	158, "main.c"; 	PORTA &= 0xFB;
                                    1- 2220     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Drr                      1- 2221     	BCR	_PORTA,2
                                    1- 2222     	.line	160, "main.c"; 	}
                                    1- 2223     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2224     ; exit point of _LEDHOFF
                                    1- 2226     ;***
                                    1- 2227     ;  pBlock Stats: dbName = C
                                    1- 2228     ;***
                                    1- 2229     ;has an exit
                                    1- 2230     ;; Starting pCode block
                                    1- 2231     .segment "code"; module=main, function=_LEDLON
     0000                           1- 2233     _LEDLON:
                                    1- 2234     ; 2 exit points
                                    1- 2235     	.line	153, "main.c"; 	PORTA |= 0x08;
                                    1- 2236     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 2237     	BSR	_PORTA,3
                                    1- 2238     	.line	155, "main.c"; 	}
                                    1- 2239     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2240     ; exit point of _LEDLON
                                    1- 2242     ;***
                                    1- 2243     ;  pBlock Stats: dbName = C
                                    1- 2244     ;***
                                    1- 2245     ;has an exit
                                    1- 2246     ;; Starting pCode block
                                    1- 2247     .segment "code"; module=main, function=_LEDHON
     0000                           1- 2249     _LEDHON:
                                    1- 2250     ; 2 exit points
                                    1- 2251     	.line	148, "main.c"; 	PORTA |= 0x04;
                                    1- 2252     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 2253     	BSR	_PORTA,2
                                    1- 2254     	.line	150, "main.c"; 	}
                                    1- 2255     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2256     ; exit point of _LEDHON
                                    1- 2259     ;	code size estimation:
                                    1- 2260     ;	  794+  189 =   983 instructions ( 2344 byte)
                                    1- 2262     	end
                                    1- 2262     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002C
_00002_DS_              Label    00000025
_00112_DS_              Label    0000002E
_00114_DS_              Label    00000032
_00124_DS_              Label    00000012
_00128_DS_              Label    00000023
_00129_DS_              Label    0000002B
_00133_DS_              Label    0000002C
_00144_DS_              Label    00000002
_00191_DS_              Label    00000049
_00213_DS_              Label    00000011
_00215_DS_              Label    00000015
_00217_DS_              Label    00000017
_00226_DS_              Label    00000012
_00227_DS_              Label    00000014
_00228_DS_              Label    00000015
_00229_DS_              Label    00000016
_00230_DS_              Label    00000017
_00232_DS_              Label    00000018
_00238_DS_              Label    0000000D
_00265_DS_              Label    0000000E
_00277_DS_              Label    00000039
_00279_DS_              Label    0000001C
_00281_DS_              Label    0000003E
_00292_DS_              Label    00000007
_00293_DS_              Label    00000010
_00294_DS_              Label    0000002F
_00300_DS_              Label    0000000E
_00304_DS_              Label    0000001A
_00307_DS_              Label    00000048
_00311_DS_              Label    0000003C
_00314_DS_              Label    00000035
_00318_DS_              Label    00000029
_00321_DS_              Label    00000021
_00323_DS_              Label    0000004A
_00335_DS_              Label    00000020
_00338_DS_              Label    00000013
_00340_DS_              Label    00000028
_00346_DS_              Label    00000006
_00347_DS_              Label    00000007
_00349_DS_              Label    00000022
_00353_DS_              Label    00000047
_00356_DS_              Label    0000003E
_00359_DS_              Label    00000035
_00360_DS_              Label    0000004F
_00362_DS_              Label    00000067
_00367_DS_              Label    00000053
_00370_DS_              Label    0000007C
_00386_DS_              Label    0000001D
_00387_DS_              Label    00000025
_00389_DS_              Label    00000013
_00390_DS_              Label    00000027
_00391_DS_              Label    00000028
_00397_DS_              Label    00000019
_00399_DS_              Label    00000012
_00404_DS_              Label    0000001E
_00406_DS_              Label    00000024
_00413_DS_              Label    00000004
_00415_DS_              Label    0000000E
_00427_DS_              Label    00000056
_00428_DS_              Label    00000059
_00432_DS_              Label    0000009E
_00435_DS_              Label    0000008E
_00438_DS_              Label    0000007E
_00441_DS_              Label    0000006E
_00444_DS_              Label    0000003B
_00446_DS_              Label    000000A4
_00472_DS_              Label    00000035
_00473_DS_              Label    00000042
_00474_DS_              Label    00000050
_00475_DS_              Label    00000063
_00476_DS_              Label    00000075
_00477_DS_              Label    00000085
_00478_DS_              Label    00000095
_00485_DS_              Label    0000000E
_00487_DS_              Label    0000002F
_00492_DS_              Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBatAD             Label    00000000
_chrgCtr                Label    00000000
_chrgTime               Label    00000000
_CMPCR                  Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_F_AIN5_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_fgCount                Label    00000000
_fgCtr                  Label    00000000
_fgPRD                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IO_Init                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_LEDHOFF                Label    00000000
_LEDHON                 Label    00000000
_LedInput               Label    00000000
_LEDLOFF                Label    00000000
_LEDLON                 Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_preFG                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN5_DATA            Label    00000000
_R_AIN5_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepTime              Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStartFlag          Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000043
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
r0x101D                 Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1022                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
