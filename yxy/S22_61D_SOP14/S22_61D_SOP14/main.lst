
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_PORTAbits
                                    1-   20     	extern	_PORTBbits
                                    1-   21     	extern	_PCONbits
                                    1-   22     	extern	_BWUCONbits
                                    1-   23     	extern	_ABPLCONbits
                                    1-   24     	extern	_BPHCONbits
                                    1-   25     	extern	_INTEbits
                                    1-   26     	extern	_INTFbits
                                    1-   27     	extern	_ADMDbits
                                    1-   28     	extern	_ADRbits
                                    1-   29     	extern	_ADVREFHbits
                                    1-   30     	extern	_ADCRbits
                                    1-   31     	extern	_AWUCONbits
                                    1-   32     	extern	_PACONbits
                                    1-   33     	extern	_INTEDGbits
                                    1-   34     	extern	_ANAENbits
                                    1-   35     	extern	_RFCbits
                                    1-   36     	extern	_INTE2bits
                                    1-   37     	extern	_INDF
                                    1-   38     	extern	_TMR0
                                    1-   39     	extern	_PCL
                                    1-   40     	extern	_STATUS
                                    1-   41     	extern	_FSR
                                    1-   42     	extern	_PORTA
                                    1-   43     	extern	_PORTB
                                    1-   44     	extern	_PCON
                                    1-   45     	extern	_BWUCON
                                    1-   46     	extern	_PCHBUF
                                    1-   47     	extern	_ABPLCON
                                    1-   48     	extern	_BPHCON
                                    1-   49     	extern	_INTE
                                    1-   50     	extern	_INTF
                                    1-   51     	extern	_ADMD
                                    1-   52     	extern	_ADR
                                    1-   53     	extern	_ADD
                                    1-   54     	extern	_ADVREFH
                                    1-   55     	extern	_ADCR
                                    1-   56     	extern	_AWUCON
                                    1-   57     	extern	_PACON
                                    1-   58     	extern	_INTEDG
                                    1-   59     	extern	_TMRH
                                    1-   60     	extern	_ANAEN
                                    1-   61     	extern	_RFC
                                    1-   62     	extern	_TM3RH
                                    1-   63     	extern	_INTE2
                                    1-   64     	extern	_TMR1
                                    1-   65     	extern	_T1CR1
                                    1-   66     	extern	_T1CR2
                                    1-   67     	extern	_PWM1DUTY
                                    1-   68     	extern	_PS1CV
                                    1-   69     	extern	_BZ1CR
                                    1-   70     	extern	_IRCR
                                    1-   71     	extern	_TBHP
                                    1-   72     	extern	_TBHD
                                    1-   73     	extern	_TMR2
                                    1-   74     	extern	_T2CR1
                                    1-   75     	extern	_T2CR2
                                    1-   76     	extern	_PWM2DUTY
                                    1-   77     	extern	_PS2CV
                                    1-   78     	extern	_BZ2CR
                                    1-   79     	extern	_OSCCR
                                    1-   80     	extern	_TMR3
                                    1-   81     	extern	_T3CR1
                                    1-   82     	extern	_T3CR2
                                    1-   83     	extern	_PWM3DUTY
                                    1-   84     	extern	_PS3CV
                                    1-   85     	extern	_BZ3CR
                                    1-   86     	extern	_IOSTA
                                    1-   87     	extern	_IOSTB
                                    1-   88     	extern	_APHCON
                                    1-   89     	extern	_PS0CV
                                    1-   90     	extern	_BODCON
                                    1-   91     	extern	_CMPCR
                                    1-   92     	extern	_PCON1
                                    1-   93     	extern	_T0MD
                                    1-   94     	extern	___sdcc_saved_fsr
                                    1-   95     	extern	___sdcc_saved_stk00
                                    1-   96     	extern	___sdcc_saved_stk01
                                    1-   97     	extern	__nyc_ny8_startup
                                    1-   98     ;--------------------------------------------------------
                                    1-   99     ; global declarations
                                    1-  100     ;--------------------------------------------------------
                                    1-  101     	extern	_F_wait_eoc
                                    1-  102     	extern	_F_AIN3_Convert
                                    1-  103     	extern	_F_AIN4_Convert
                                    1-  104     	extern	_checkOutA
                                    1-  105     	extern	_checkBatAD
                                    1-  106     	extern	_initAD
                                    1-  107     	extern	_delay
                                    1-  108     	extern	_chrgCtr
                                    1-  109     	extern	_keyRead
                                    1-  110     	extern	_gotoSleep
                                    1-  111     	extern	_pwmStop
                                    1-  112     	extern	_pwmInit
                                    1-  113     	extern	_LED4ON
                                    1-  114     	extern	_LED3ON
                                    1-  115     	extern	_LED2ON
                                    1-  116     	extern	_LED1ON
                                    1-  117     	extern	_LedInput
                                    1-  118     	extern	_ledShow
                                    1-  119     	extern	_initSys
                                    1-  120     	extern	_powerOff
                                    1-  121     	extern	_keyCtr
                                    1-  122     	extern	_isr
                                    1-  123     	extern	_main
                                    1-  124     	extern	_Status
                                    1-  125     	extern	_duty
                                    1-  126     	extern	_intCount
                                    1-  127     	extern	_count500ms
                                    1-  128     	extern	_keyCount
                                    1-  129     	extern	_workStep
                                    1-  130     	extern	_ledStep
                                    1-  131     	extern	_fgCount
                                    1-  132     	extern	_fgPRD
                                    1-  133     	extern	_preFG
                                    1-  134     	extern	_maxDuty
                                    1-  135     	extern	_pwStep
                                    1-  136     	extern	_R_AIN4_DATA
                                    1-  137     	extern	_R_AIN4_DATA_LB
                                    1-  138     	extern	_R_AIN3_DATA
                                    1-  139     	extern	_R_AIN3_DATA_LB
                                    1-  140     	extern	_chrgTime
                                    1-  141     	extern	_startStep
                                    1-  142     	extern	_sleepTime
                                    1-  143     	extern	_count200ms
                                    1-  144     	extern	_count1s
                                    1-  145     	extern	_count900s
                                    1-  146     	extern	_lowBatTime
                                    1-  147     	extern	_ledTime
                                    1-  148     	extern	_overCount
                                    1-  149     	extern	_debug
                                    1-  150     	extern	_lowBat
                                    1-  151     	extern	_currentDuty
                                    1-  152     	extern	_workStartFlag
                                    1-  154     	extern PSAVE
                                    1-  155     	extern SSAVE
                                    1-  156     	extern WSAVE
                                    1-  157     	extern STK02
                                    1-  158     	extern STK01
                                    1-  159     	extern STK00
                                    1-  161     .segment "uninit", 0x20000040
 20000040                           1-  162     PSAVE:
                                    1-  163     	.res 1
 20000041                           1-  164     SSAVE:
                                    1-  165     	.res 1
 20000042                           1-  166     WSAVE:
                                    1-  167     	.res 1
 20000043                           1-  168     STK02:
                                    1-  169     	.res 1
 20000044                           1-  170     STK01:
                                    1-  171     	.res 1
 20000045                           1-  172     STK00:
                                    1-  173     	.res 1
                                    1-  175     ;--------------------------------------------------------
                                    1-  176     ; global definitions
                                    1-  177     ;--------------------------------------------------------
                                    1-  178     .segment "uninit"
     0000                           1-  179     _R_AIN4_DATA:
                                    1-  180     	.res	2
                                    1-  183     .segment "uninit"
     0000                           1-  184     _R_AIN4_DATA_LB:
                                    1-  185     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     _R_AIN3_DATA:
                                    1-  190     	.res	2
                                    1-  193     .segment "uninit"
     0000                           1-  194     _R_AIN3_DATA_LB:
                                    1-  195     	.res	1
                                    1-  198     ;--------------------------------------------------------
                                    1-  199     ; absolute symbol definitions
                                    1-  200     ;--------------------------------------------------------
                                    1-  201     ;--------------------------------------------------------
                                    1-  202     ; compiler-defined variables
                                    1-  203     ;--------------------------------------------------------
                                    1-  204     .segment "uninit"
     0000                           1-  205     r0x103F:
                                    1-  206     	.res	1
                                    1-  207     .segment "uninit"
     0000                           1-  208     r0x1039:
                                    1-  209     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     r0x103E:
                                    1-  212     	.res	1
                                    1-  213     .segment "uninit"
     0000                           1-  214     r0x103D:
                                    1-  215     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     r0x103C:
                                    1-  218     	.res	1
                                    1-  219     .segment "uninit"
     0000                           1-  220     r0x103B:
                                    1-  221     	.res	1
                                    1-  222     .segment "uninit"
     0000                           1-  223     r0x103A:
                                    1-  224     	.res	1
                                    1-  225     .segment "uninit"
     0000                           1-  226     r0x1038:
                                    1-  227     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     r0x1022:
                                    1-  230     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     r0x1023:
                                    1-  233     	.res	1
                                    1-  234     .segment "uninit"
     0000                           1-  235     r0x1036:
                                    1-  236     	.res	1
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x1037:
                                    1-  239     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     r0x1032:
                                    1-  242     	.res	1
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x1033:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x102A:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x102B:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x102C:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x102F:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x1024:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x1025:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x1026:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x1029:
                                    1-  269     	.res	1
                                    1-  270     ;--------------------------------------------------------
                                    1-  271     ; initialized data
                                    1-  272     ;--------------------------------------------------------
                                    1-  274     .segment "idata"
     0000                           1-  275     _Status:
     0000 0000                      1-  276     	dw	0x00
                                    1-  280     .segment "idata"
     0000                           1-  281     _duty:
     0000 0000 0000                 1-  282     	dw	0x00, 0x00
                                    1-  286     .segment "idata"
     0000                           1-  287     _intCount:
     0000 0000                      1-  288     	dw	0x00
                                    1-  292     .segment "idata"
     0000                           1-  293     _count500ms:
     0000 0000                      1-  294     	dw	0x00
                                    1-  298     .segment "idata"
     0000                           1-  299     _keyCount:
     0000 0000                      1-  300     	dw	0x00
                                    1-  304     .segment "idata"
     0000                           1-  305     _workStep:
     0000 0000                      1-  306     	dw	0x00
                                    1-  310     .segment "idata"
     0000                           1-  311     _ledStep:
     0000 0000                      1-  312     	dw	0x00
                                    1-  316     .segment "idata"
     0000                           1-  317     _fgCount:
     0000 0000 0000                 1-  318     	dw	0x00, 0x00
                                    1-  322     .segment "idata"
     0000                           1-  323     _fgPRD:
     0000 0000 0000                 1-  324     	dw	0x00, 0x00
                                    1-  328     .segment "idata"
     0000                           1-  329     _preFG:
     0000 0000                      1-  330     	dw	0x00
                                    1-  334     .segment "idata"
     0000                           1-  335     _maxDuty:
     0000 0000                      1-  336     	dw	0x00
                                    1-  340     .segment "idata"
     0000                           1-  341     _pwStep:
     0000 0000                      1-  342     	dw	0x00
                                    1-  346     .segment "idata"
     0000                           1-  347     _chrgTime:
     0000 0000 0000                 1-  348     	dw	0x00, 0x00
                                    1-  352     .segment "idata"
     0000                           1-  353     _startStep:
     0000 0000                      1-  354     	dw	0x00
                                    1-  358     .segment "idata"
     0000                           1-  359     _sleepTime:
     0000 0000 0000                 1-  360     	dw	0x00, 0x00
                                    1-  364     .segment "idata"
     0000                           1-  365     _count200ms:
     0000 0000                      1-  366     	dw	0x00
                                    1-  370     .segment "idata"
     0000                           1-  371     _count1s:
     0000 0000                      1-  372     	dw	0x00
                                    1-  376     .segment "idata"
     0000                           1-  377     _count900s:
     0000 0000 0000                 1-  378     	dw	0x00, 0x00
                                    1-  382     .segment "idata"
     0000                           1-  383     _lowBatTime:
     0000 0000                      1-  384     	dw	0x00
                                    1-  388     .segment "idata"
     0000                           1-  389     _ledTime:
     0000 0000                      1-  390     	dw	0x00
                                    1-  394     .segment "idata"
     0000                           1-  395     _overCount:
     0000 0000                      1-  396     	dw	0x00
                                    1-  400     .segment "idata"
     0000                           1-  401     _debug:
     0000 0000                      1-  402     	dw	0x00
                                    1-  406     .segment "idata"
     0000                           1-  407     _lowBat:
     0000 0000                      1-  408     	dw	0x00
                                    1-  412     .segment "idata"
     0000                           1-  413     _currentDuty:
     0000 0000                      1-  414     	dw	0x00
                                    1-  418     .segment "idata"
     0000                           1-  419     _workStartFlag:
     0000 0000                      1-  420     	dw	0x00
                                    1-  423     ;--------------------------------------------------------
                                    1-  424     ; overlayable items in internal ram 
                                    1-  425     ;--------------------------------------------------------
                                    1-  426     ;	udata_ovr
                                    1-  427     ;--------------------------------------------------------
                                    1-  428     ; reset vector 
                                    1-  429     ;--------------------------------------------------------
                                    1-  430     ORG	0x0000
     0000 3rrr                      1-  431     	LGOTO	__nyc_ny8_startup
                                    1-  432     ;--------------------------------------------------------
                                    1-  433     ; interrupt and initialization code
                                    1-  434     ;--------------------------------------------------------
                                    1-  435     ORG 0x0008
     0008 3rrr                      1-  436     	lgoto	__sdcc_interrupt
                                    1-  438     .segment "code"
     0000                           1-  439     __sdcc_interrupt:
                                    1-  440     ;***
                                    1-  441     ;  pBlock Stats: dbName = I
                                    1-  442     ;***
                                    1-  443     ;2 compiler assigned registers:
                                    1-  444     ;   STK00
                                    1-  445     ;   STK01
                                    1-  446     ;; Starting pCode block
     0000                           1-  447     _isr:
                                    1-  448     ; 0 exit points
                                    1-  449     	.line	77, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  450     	MOVAR	WSAVE
     0001 1503                      1-  451     	SWAPR	STATUS,W
     0002 0283                      1-  452     	CLRR	STATUS
     0003 00rr                      1-  453     	MOVAR	SSAVE
     0004 010A                      1-  454     	MOVR	PCHBUF,W
     0005 028A                      1-  455     	CLRR	PCHBUF
     0006 00rr                      1-  456     	MOVAR	PSAVE
     0007 0104                      1-  457     	MOVR	FSR,W
                                    1-  458     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  459     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  460     	MOVR	STK00,W
                                    1-  461     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  462     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  463     	MOVR	STK01,W
                                    1-  464     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  465     	MOVAR	___sdcc_saved_stk01
                                    1-  466     	.line	79, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  467     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  468     	LGOTO	_00119_DS_
                                    1-  469     	.line	81, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  470     	MOVIA	0x37
     0013 03rr                      1-  471     	ADDAR	_TMR0,F
                                    1-  472     	.line	83, "main.c"; 	if(++intCount >= 100)
                                    1-  473     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  474     	INCR	_intCount,F
                                    1-  475     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  476     	MOVIA	0x64
     0017 04rr                      1-  477     	SUBAR	_intCount,W
     0018 0803                      1-  478     	BTRSS	STATUS,0
     0019 3rrr                      1-  479     	LGOTO	_00119_DS_
                                    1-  480     	.line	85, "main.c"; 	IntFlag = 1;
                                    1-  481     	BANKSEL	_Status
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 18rr                      1-  482     	BSR	_Status,0
                                    1-  483     	.line	86, "main.c"; 	intCount = 0;
                                    1-  484     	BANKSEL	_intCount
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1-  485     	CLRR	_intCount
                                    1-  486     	.line	87, "main.c"; 	if(workStep)
                                    1-  487     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1-  488     	MOVR	_workStep,W
     0020 0D03                      1-  489     	BTRSC	STATUS,2
     0021 3rrr                      1-  490     	LGOTO	_00106_DS_
                                    1-  491     	.line	88, "main.c"; 	++fgCount;
                                    1-  492     	BANKSEL	_fgCount
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  493     	INCR	_fgCount,F
     0024 0D03                      1-  494     	BTRSC	STATUS,2
     0025 05rr                      1-  495     	INCR	(_fgCount + 1),F
     0026                           1-  496     _00106_DS_:
                                    1-  497     	.line	89, "main.c"; 	if(++count500ms >= 40)
                                    1-  498     	BANKSEL	_count500ms
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 05rr                      1-  499     	INCR	_count500ms,F
                                    1-  500     ;;unsigned compare: left < lit (0x28=40), size=1
     0028 2128                      1-  501     	MOVIA	0x28
     0029 04rr                      1-  502     	SUBAR	_count500ms,W
     002A 0C03                      1-  503     	BTRSC	STATUS,0
                                    1-  504     	.line	90, "main.c"; 	count500ms = 0;
     002B 02rr                      1-  505     	CLRR	_count500ms
                                    1-  506     	.line	91, "main.c"; 	if(++count200ms >= 20)
                                    1-  507     	BANKSEL	_count200ms
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  508     	INCR	_count200ms,F
     002E 2114                      1-  509     	MOVIA	0x14
     002F 04rr                      1-  510     	SUBAR	_count200ms,W
     0030 0C03                      1-  511     	BTRSC	STATUS,0
                                    1-  512     	.line	92, "main.c"; 	count200ms = 0;
     0031 02rr                      1-  513     	CLRR	_count200ms
                                    1-  514     	.line	93, "main.c"; 	if(++count1s >= 100)
                                    1-  515     	BANKSEL	_count1s
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 05rr                      1-  516     	INCR	_count1s,F
     0034 2164                      1-  517     	MOVIA	0x64
     0035 04rr                      1-  518     	SUBAR	_count1s,W
     0036 0803                      1-  519     	BTRSS	STATUS,0
     0037 3rrr                      1-  520     	LGOTO	_00119_DS_
                                    1-  521     	.line	95, "main.c"; 	count1s = 0;
     0038 02rr                      1-  522     	CLRR	_count1s
                                    1-  523     	.line	96, "main.c"; 	if(workStep)
                                    1-  524     	BANKSEL	_workStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  525     	MOVR	_workStep,W
     003B 0D03                      1-  526     	BTRSC	STATUS,2
     003C 3rrr                      1-  527     	LGOTO	_00112_DS_
                                    1-  528     	.line	98, "main.c"; 	++count900s;
                                    1-  529     	BANKSEL	_count900s
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 05rr                      1-  530     	INCR	_count900s,F
     003F 0D03                      1-  531     	BTRSC	STATUS,2
     0040 05rr                      1-  532     	INCR	(_count900s + 1),F
     0041 3rrr                      1-  533     	LGOTO	_00119_DS_
     0042                           1-  534     _00112_DS_:
                                    1-  535     	.line	102, "main.c"; 	count900s = 0;
                                    1-  536     	BANKSEL	_count900s
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 02rr                      1-  537     	CLRR	_count900s
     0044 02rr                      1-  538     	CLRR	(_count900s + 1)
     0045                           1-  539     _00119_DS_:
                                    1-  540     	.line	111, "main.c"; 	if(INTFbits.PABIF)
     0045 08rr                      1-  541     	BTRSS	_INTFbits,1
     0046 3rrr                      1-  542     	LGOTO	_00121_DS_
                                    1-  543     	.line	113, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0047 21FD                      1-  544     	MOVIA	0xfd
     0048 00rr                      1-  545     	MOVAR	_INTF
     0049                           1-  546     _00121_DS_:
                                    1-  547     	.line	116, "main.c"; 	INTF = 0;
     0049 02rr                      1-  548     	CLRR	_INTF
                                    1-  549     	.line	118, "main.c"; 	}
                                    1-  550     	BANKSEL	___sdcc_saved_stk01
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 01rr                      1-  551     	MOVR	___sdcc_saved_stk01,W
     004C 00rr                      1-  552     	MOVAR	STK01
                                    1-  553     	BANKSEL	___sdcc_saved_stk00
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1-  554     	MOVR	___sdcc_saved_stk00,W
     004F 00rr                      1-  555     	MOVAR	STK00
                                    1-  556     	BANKSEL	___sdcc_saved_fsr
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1-  557     	MOVR	___sdcc_saved_fsr,W
     0052 0084                      1-  558     	MOVAR	FSR
     0053 01rr                      1-  559     	MOVR	PSAVE,W
     0054 008A                      1-  560     	MOVAR	PCHBUF
     0055 0283                      1-  561     	CLRR	STATUS
     0056 15rr                      1-  562     	SWAPR	SSAVE,W
     0057 0083                      1-  563     	MOVAR	STATUS
     0058 15rr                      1-  564     	SWAPR	WSAVE,F
     0059 15rr                      1-  565     	SWAPR	WSAVE,W
     005A                           1-  566     END_OF_INTERRUPT:
     005A 0011                      1-  567     	RETIE	
                                    1-  569     ;--------------------------------------------------------
                                    1-  570     ; code
                                    1-  571     ;--------------------------------------------------------
                                    1-  572     ;***
                                    1-  573     ;  pBlock Stats: dbName = M
                                    1-  574     ;***
                                    1-  575     ;has an exit
                                    1-  576     ;functions called:
                                    1-  577     ;   _initSys
                                    1-  578     ;   _initAD
                                    1-  579     ;   _ledShow
                                    1-  580     ;   _ledShow
                                    1-  581     ;   _keyCtr
                                    1-  582     ;   _checkBatAD
                                    1-  583     ;   _checkOutA
                                    1-  584     ;   _chrgCtr
                                    1-  585     ;   _gotoSleep
                                    1-  586     ;   _powerOff
                                    1-  587     ;   _initSys
                                    1-  588     ;   _initAD
                                    1-  589     ;   _ledShow
                                    1-  590     ;   _ledShow
                                    1-  591     ;   _keyCtr
                                    1-  592     ;   _checkBatAD
                                    1-  593     ;   _checkOutA
                                    1-  594     ;   _chrgCtr
                                    1-  595     ;   _gotoSleep
                                    1-  596     ;   _powerOff
                                    1-  597     ;; Starting pCode block
                                    1-  598     .segment "code"; module=main, function=_main
     0000                           1-  600     _main:
                                    1-  601     ; 2 exit points
                                    1-  602     	.line	122, "main.c"; 	initSys();
     0000 2rrr                      1-  603     	LCALL	_initSys
                                    1-  604     	.line	123, "main.c"; 	initAD();
     0001 2rrr                      1-  605     	LCALL	_initAD
     0002                           1-  606     _00148_DS_:
                                    1-  607     	.line	126, "main.c"; 	ledShow();
     0002 2rrr                      1-  608     	LCALL	_ledShow
                                    1-  609     	.line	127, "main.c"; 	CLRWDT();
     0003 0002                      1-  610     	clrwdt
                                    1-  611     	.line	128, "main.c"; 	if(!IntFlag)
                                    1-  612     	BANKSEL	_Status
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 08rr                      1-  613     	BTRSS	_Status,0
     0006 3rrr                      1-  614     	LGOTO	_00148_DS_
                                    1-  615     	.line	130, "main.c"; 	IntFlag = 0;
     0007 1Crr                      1-  616     	BCR	_Status,0
                                    1-  617     	.line	131, "main.c"; 	ledShow();
     0008 2rrr                      1-  618     	LCALL	_ledShow
                                    1-  619     	.line	132, "main.c"; 	if(chrgFlag == 0)
                                    1-  620     	BANKSEL	_Status
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 09rr                      1-  621     	BTRSS	_Status,3
                                    1-  622     	.line	133, "main.c"; 	keyCtr();
     000B 2rrr                      1-  623     	LCALL	_keyCtr
                                    1-  624     	.line	134, "main.c"; 	if(count200ms < 5)
     000C 2105                      1-  625     	MOVIA	0x05
                                    1-  626     	BANKSEL	_count200ms
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  627     	SUBAR	_count200ms,W
     000F 0C03                      1-  628     	BTRSC	STATUS,0
     0010 3rrr                      1-  629     	LGOTO	_00134_DS_
                                    1-  630     	.line	136, "main.c"; 	checkBatAD();
     0011 2rrr                      1-  631     	LCALL	_checkBatAD
     0012 3rrr                      1-  632     	LGOTO	_00135_DS_
                                    1-  633     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  634     ;;unsigned compare: left >= lit (0xB=11), size=1
     0013                           1-  635     _00134_DS_:
                                    1-  636     	.line	138, "main.c"; 	else if(count200ms > 10 && count200ms < 15)
     0013 210B                      1-  637     	MOVIA	0x0b
                                    1-  638     	BANKSEL	_count200ms
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1-  639     	SUBAR	_count200ms,W
     0016 0803                      1-  640     	BTRSS	STATUS,0
     0017 3rrr                      1-  641     	LGOTO	_00135_DS_
                                    1-  642     ;;unsigned compare: left < lit (0xF=15), size=1
     0018 210F                      1-  643     	MOVIA	0x0f
     0019 04rr                      1-  644     	SUBAR	_count200ms,W
     001A 0803                      1-  645     	BTRSS	STATUS,0
                                    1-  646     	.line	140, "main.c"; 	checkOutA();
     001B 2rrr                      1-  647     	LCALL	_checkOutA
     001C                           1-  648     _00135_DS_:
                                    1-  649     	.line	142, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  650     	BANKSEL	_workStep
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1-  651     	MOVR	_workStep,W
     001E 0D03                      1-  652     	BTRSC	STATUS,2
     001F 3rrr                      1-  653     	LGOTO	_00137_DS_
                                    1-  654     	BANKSEL	_currentDuty
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  655     	MOVR	_currentDuty,W
                                    1-  656     	BANKSEL	_maxDuty
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 04rr                      1-  657     	SUBAR	_maxDuty,W
     0024 0C03                      1-  658     	BTRSC	STATUS,0
     0025 3rrr                      1-  659     	LGOTO	_00137_DS_
                                    1-  660     	.line	144, "main.c"; 	currentDuty = currentDuty - 10;
     0026 21F6                      1-  661     	MOVIA	0xf6
                                    1-  662     	BANKSEL	_currentDuty
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 03rr                      1-  663     	ADDAR	_currentDuty,F
                                    1-  664     	.line	145, "main.c"; 	PWM2DUTY = currentDuty;
     0029 01rr                      1-  665     	MOVR	_currentDuty,W
     002A 00rr                      1-  666     	SFUN	_PWM2DUTY
     002B                           1-  667     _00137_DS_:
                                    1-  668     	.line	147, "main.c"; 	chrgCtr();
     002B 2rrr                      1-  669     	LCALL	_chrgCtr
                                    1-  670     	.line	148, "main.c"; 	if(workStep == 0 && keyCount == 0 && ((PORTB & 0x02) == 0))
                                    1-  671     	BANKSEL	_workStep
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1-  672     	MOVR	_workStep,W
     002E 0903                      1-  673     	BTRSS	STATUS,2
     002F 3rrr                      1-  674     	LGOTO	_00142_DS_
                                    1-  675     	BANKSEL	_keyCount
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1-  676     	MOVR	_keyCount,W
     0032 0903                      1-  677     	BTRSS	STATUS,2
     0033 3rrr                      1-  678     	LGOTO	_00142_DS_
     0034 0Crr                      1-  679     	BTRSC	_PORTB,1
     0035 3rrr                      1-  680     	LGOTO	_00142_DS_
                                    1-  681     	.line	150, "main.c"; 	if(++sleepTime > 400)
                                    1-  682     	BANKSEL	_sleepTime
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 05rr                      1-  683     	INCR	_sleepTime,F
     0038 0D03                      1-  684     	BTRSC	STATUS,2
     0039 05rr                      1-  685     	INCR	(_sleepTime + 1),F
                                    1-  686     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  687     ;;unsigned compare: left >= lit (0x191=401), size=2
     003A 2101                      1-  688     	MOVIA	0x01
     003B 04rr                      1-  689     	SUBAR	(_sleepTime + 1),W
     003C 0903                      1-  690     	BTRSS	STATUS,2
     003D 3rrr                      1-  691     	LGOTO	_00195_DS_
     003E 2191                      1-  692     	MOVIA	0x91
     003F 04rr                      1-  693     	SUBAR	_sleepTime,W
     0040                           1-  694     _00195_DS_:
     0040 0803                      1-  695     	BTRSS	STATUS,0
     0041 3rrr                      1-  696     	LGOTO	_00142_DS_
                                    1-  697     	.line	152, "main.c"; 	gotoSleep();
     0042 2rrr                      1-  698     	LCALL	_gotoSleep
                                    1-  699     ;;unsigned compare: left < lit (0x384=900), size=2
     0043                           1-  700     _00142_DS_:
                                    1-  701     	.line	156, "main.c"; 	if(count900s >= 900)
     0043 2103                      1-  702     	MOVIA	0x03
                                    1-  703     	BANKSEL	_count900s
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 04rr                      1-  704     	SUBAR	(_count900s + 1),W
     0046 0903                      1-  705     	BTRSS	STATUS,2
     0047 3rrr                      1-  706     	LGOTO	_00196_DS_
     0048 2184                      1-  707     	MOVIA	0x84
     0049 04rr                      1-  708     	SUBAR	_count900s,W
     004A                           1-  709     _00196_DS_:
     004A 0803                      1-  710     	BTRSS	STATUS,0
     004B 3rrr                      1-  711     	LGOTO	_00148_DS_
                                    1-  712     	.line	158, "main.c"; 	powerOff();
     004C 2rrr                      1-  713     	LCALL	_powerOff
     004D 3rrr                      1-  714     	LGOTO	_00148_DS_
                                    1-  715     	.line	162, "main.c"; 	}
                                    1-  716     	RETURN	
     004E 0010                      3-   26 m1      ret
                                    1-  717     ; exit point of _main
                                    1-  719     ;***
                                    1-  720     ;  pBlock Stats: dbName = C
                                    1-  721     ;***
                                    1-  722     ;has an exit
                                    1-  723     ;; Starting pCode block
                                    1-  724     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  726     _F_wait_eoc:
                                    1-  727     ; 2 exit points
     0000                           1-  728     _00507_DS_:
                                    1-  729     	.line	631, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  730     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  731     	LGOTO	_00507_DS_
                                    1-  732     	.line	633, "main.c"; 	}
                                    1-  733     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  734     ; exit point of _F_wait_eoc
                                    1-  736     ;***
                                    1-  737     ;  pBlock Stats: dbName = C
                                    1-  738     ;***
                                    1-  739     ;has an exit
                                    1-  740     ;functions called:
                                    1-  741     ;   _delay
                                    1-  742     ;   _F_wait_eoc
                                    1-  743     ;   _delay
                                    1-  744     ;   _F_wait_eoc
                                    1-  745     ;6 compiler assigned registers:
                                    1-  746     ;   r0x1024
                                    1-  747     ;   r0x1025
                                    1-  748     ;   r0x1026
                                    1-  749     ;   r0x1027
                                    1-  750     ;   r0x1028
                                    1-  751     ;   r0x1029
                                    1-  752     ;; Starting pCode block
                                    1-  753     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1-  755     ;local variable name mapping:
     0000                           1-  758     _F_AIN3_Convert:
                                    1-  759     ; 2 exit points
                                    1-  760     	.line	614, "main.c"; 	void F_AIN3_Convert(char count)
                                    1-  761     	BANKSEL	r0x1024
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  762     	MOVAR	r0x1024
                                    1-  763     	.line	616, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1-  764     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  765     	CLRR	_R_AIN3_DATA_LB
                                    1-  766     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  767     	CLRR	_R_AIN3_DATA
     0006 02rr                      1-  768     	CLRR	(_R_AIN3_DATA + 1)
                                    1-  769     	.line	618, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1-  770     	MOVIA	0x93
     0008 00rr                      1-  771     	MOVAR	_ADMD
                                    1-  772     	.line	619, "main.c"; 	delay(200);	
     0009 21C8                      1-  773     	MOVIA	0xc8
     000A 2rrr                      1-  774     	LCALL	_delay
                                    1-  775     	.line	620, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  776     	MOVIA	0x01
                                    1-  777     	BANKSEL	r0x1025
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  778     	MOVAR	r0x1025
     000E                           1-  779     _00500_DS_:
                                    1-  780     	BANKSEL	r0x1025
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1-  781     	MOVR	r0x1025,W
                                    1-  782     	BANKSEL	r0x1024
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  783     	SUBAR	r0x1024,W
     0012 0803                      1-  784     	BTRSS	STATUS,0
     0013 3rrr                      1-  785     	LGOTO	_00502_DS_
                                    1-  786     	.line	622, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  787     	BSR	_ADMDbits,6
                                    1-  788     	.line	623, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1-  789     	LCALL	_F_wait_eoc
                                    1-  790     	.line	624, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  791     	MOVIA	0x0f
     0017 10rr                      1-  792     	ANDAR	_ADR,W
                                    1-  793     ;;3	MOVAR	r0x1026
                                    1-  794     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1-  795     	ADDAR	_R_AIN3_DATA_LB,F
                                    1-  796     	.line	625, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1-  797     	MOVR	_ADD,W
                                    1-  798     	BANKSEL	r0x1026
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  799     	MOVAR	r0x1026
                                    1-  800     ;;1	CLRR	r0x1027
                                    1-  801     ;;106	MOVR	r0x1026,W
                                    1-  802     ;;104	MOVAR	r0x1028
     001D 2100                      1-  803     	MOVIA	0x00
                                    1-  804     	BANKSEL	r0x1029
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  805     	MOVAR	r0x1029
                                    1-  806     ;;105	MOVR	r0x1028,W
                                    1-  807     	BANKSEL	r0x1026
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  808     	MOVR	r0x1026,W
                                    1-  809     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1-  810     	ADDAR	_R_AIN3_DATA,F
                                    1-  811     	BANKSEL	r0x1029
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  812     	MOVR	r0x1029,W
     0026 0C03                      1-  813     	BTRSC	STATUS,0
     0027 05rr                      1-  814     	INCR	r0x1029,W
     0028 0D03                      1-  815     	BTRSC	STATUS,2
     0029 3rrr                      1-  816     	LGOTO	_00001_DS_
                                    1-  817     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1-  818     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1-  819     _00001_DS_:
                                    1-  820     	.line	620, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  821     	BANKSEL	r0x1025
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  822     	INCR	r0x1025,F
     002E 3rrr                      1-  823     	LGOTO	_00500_DS_
     002F                           1-  824     _00502_DS_:
                                    1-  825     	.line	627, "main.c"; 	}
                                    1-  826     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1-  827     ; exit point of _F_AIN3_Convert
                                    1-  829     ;***
                                    1-  830     ;  pBlock Stats: dbName = C
                                    1-  831     ;***
                                    1-  832     ;has an exit
                                    1-  833     ;functions called:
                                    1-  834     ;   _delay
                                    1-  835     ;   _F_wait_eoc
                                    1-  836     ;   _delay
                                    1-  837     ;   _F_wait_eoc
                                    1-  838     ;6 compiler assigned registers:
                                    1-  839     ;   r0x102A
                                    1-  840     ;   r0x102B
                                    1-  841     ;   r0x102C
                                    1-  842     ;   r0x102D
                                    1-  843     ;   r0x102E
                                    1-  844     ;   r0x102F
                                    1-  845     ;; Starting pCode block
                                    1-  846     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1-  848     ;local variable name mapping:
     0000                           1-  851     _F_AIN4_Convert:
                                    1-  852     ; 2 exit points
                                    1-  853     	.line	599, "main.c"; 	void F_AIN4_Convert(char count)
                                    1-  854     	BANKSEL	r0x102A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  855     	MOVAR	r0x102A
                                    1-  856     	.line	601, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1-  857     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  858     	CLRR	_R_AIN4_DATA_LB
                                    1-  859     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  860     	CLRR	_R_AIN4_DATA
     0006 02rr                      1-  861     	CLRR	(_R_AIN4_DATA + 1)
                                    1-  862     	.line	603, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  863     	MOVIA	0x94
     0008 00rr                      1-  864     	MOVAR	_ADMD
                                    1-  865     	.line	604, "main.c"; 	delay(200);	
     0009 21C8                      1-  866     	MOVIA	0xc8
     000A 2rrr                      1-  867     	LCALL	_delay
                                    1-  868     	.line	605, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  869     	MOVIA	0x01
                                    1-  870     	BANKSEL	r0x102B
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  871     	MOVAR	r0x102B
     000E                           1-  872     _00491_DS_:
                                    1-  873     	BANKSEL	r0x102B
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1-  874     	MOVR	r0x102B,W
                                    1-  875     	BANKSEL	r0x102A
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  876     	SUBAR	r0x102A,W
     0012 0803                      1-  877     	BTRSS	STATUS,0
     0013 3rrr                      1-  878     	LGOTO	_00493_DS_
                                    1-  879     	.line	607, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  880     	BSR	_ADMDbits,6
                                    1-  881     	.line	608, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1-  882     	LCALL	_F_wait_eoc
                                    1-  883     	.line	609, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  884     	MOVIA	0x0f
     0017 10rr                      1-  885     	ANDAR	_ADR,W
                                    1-  886     ;;3	MOVAR	r0x102C
                                    1-  887     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1-  888     	ADDAR	_R_AIN4_DATA_LB,F
                                    1-  889     	.line	610, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1-  890     	MOVR	_ADD,W
                                    1-  891     	BANKSEL	r0x102C
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  892     	MOVAR	r0x102C
                                    1-  893     ;;1	CLRR	r0x102D
                                    1-  894     ;;103	MOVR	r0x102C,W
                                    1-  895     ;;101	MOVAR	r0x102E
     001D 2100                      1-  896     	MOVIA	0x00
                                    1-  897     	BANKSEL	r0x102F
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  898     	MOVAR	r0x102F
                                    1-  899     ;;102	MOVR	r0x102E,W
                                    1-  900     	BANKSEL	r0x102C
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  901     	MOVR	r0x102C,W
                                    1-  902     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1-  903     	ADDAR	_R_AIN4_DATA,F
                                    1-  904     	BANKSEL	r0x102F
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  905     	MOVR	r0x102F,W
     0026 0C03                      1-  906     	BTRSC	STATUS,0
     0027 05rr                      1-  907     	INCR	r0x102F,W
     0028 0D03                      1-  908     	BTRSC	STATUS,2
     0029 3rrr                      1-  909     	LGOTO	_00002_DS_
                                    1-  910     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1-  911     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1-  912     _00002_DS_:
                                    1-  913     	.line	605, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  914     	BANKSEL	r0x102B
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  915     	INCR	r0x102B,F
     002E 3rrr                      1-  916     	LGOTO	_00491_DS_
     002F                           1-  917     _00493_DS_:
                                    1-  918     	.line	612, "main.c"; 	}
                                    1-  919     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1-  920     ; exit point of _F_AIN4_Convert
                                    1-  922     ;***
                                    1-  923     ;  pBlock Stats: dbName = C
                                    1-  924     ;***
                                    1-  925     ;has an exit
                                    1-  926     ;functions called:
                                    1-  927     ;   _F_AIN3_Convert
                                    1-  928     ;   _F_AIN3_Convert
                                    1-  929     ;4 compiler assigned registers:
                                    1-  930     ;   r0x1030
                                    1-  931     ;   r0x1031
                                    1-  932     ;   r0x1032
                                    1-  933     ;   r0x1033
                                    1-  934     ;; Starting pCode block
                                    1-  935     .segment "code"; module=main, function=_checkOutA
     0000                           1-  937     _checkOutA:
                                    1-  938     ; 2 exit points
                                    1-  939     	.line	565, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1-  940     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  941     	CLRR	_R_AIN3_DATA_LB
                                    1-  942     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  943     	CLRR	_R_AIN3_DATA
     0004 02rr                      1-  944     	CLRR	(_R_AIN3_DATA + 1)
                                    1-  945     	.line	566, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  946     	MOVIA	0x08
     0006 2rrr                      1-  947     	LCALL	_F_AIN3_Convert
                                    1-  948     	.line	567, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  949     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1-  950     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1-  951     	ANDIA	0xf0
     000A 00rr                      1-  952     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1-  953     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1-  954     	MOVAR	_R_AIN3_DATA
     000D 220F                      1-  955     	ANDIA	0x0f
     000E 11rr                      1-  956     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1-  957     	XORAR	_R_AIN3_DATA,F
                                    1-  958     	.line	568, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  959     	MOVIA	0xf0
                                    1-  960     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1-  961     	ANDAR	_R_AIN3_DATA_LB,F
                                    1-  962     	.line	569, "main.c"; 	R_AIN3_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
                                    1-  963     	BANKSEL	_R_AIN4_DATA_LB
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1-  964     	MOVR	_R_AIN4_DATA_LB,W
                                    1-  965     	BANKSEL	r0x1032
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 00rr                      1-  966     	MOVAR	r0x1032
                                    1-  967     ;;1	MOVAR	r0x1030
                                    1-  968     ;;1	CLRR	r0x1031
                                    1-  969     ;;100	MOVR	r0x1030,W
     0017 2100                      1-  970     	MOVIA	0x00
                                    1-  971     	BANKSEL	r0x1033
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1-  972     	MOVAR	r0x1033
                                    1-  973     	BANKSEL	r0x1032
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  974     	MOVR	r0x1032,W
                                    1-  975     	BANKSEL	_R_AIN3_DATA
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 03rr                      1-  976     	ADDAR	_R_AIN3_DATA,F
                                    1-  977     	BANKSEL	r0x1033
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1-  978     	MOVR	r0x1033,W
     0020 0C03                      1-  979     	BTRSC	STATUS,0
     0021 05rr                      1-  980     	INCR	r0x1033,W
     0022 0D03                      1-  981     	BTRSC	STATUS,2
     0023 3rrr                      1-  982     	LGOTO	_00003_DS_
                                    1-  983     	BANKSEL	_R_AIN3_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1-  984     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1-  985     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0026                           1-  986     _00003_DS_:
                                    1-  987     	.line	570, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0026 1C03                      1-  988     	BCR	STATUS,0
                                    1-  989     	BANKSEL	_R_AIN3_DATA
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 13rr                      1-  990     	RRR	(_R_AIN3_DATA + 1),F
     0029 13rr                      1-  991     	RRR	_R_AIN3_DATA,F
                                    1-  992     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002A 1C03                      1-  993     	BCR	STATUS,0
     002B 13rr                      1-  994     	RRR	(_R_AIN3_DATA + 1),F
     002C 13rr                      1-  995     	RRR	_R_AIN3_DATA,F
                                    1-  996     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1-  997     	BCR	STATUS,0
     002E 13rr                      1-  998     	RRR	(_R_AIN3_DATA + 1),F
     002F 13rr                      1-  999     	RRR	_R_AIN3_DATA,F
                                    1- 1000     	.line	571, "main.c"; 	if(debug)
                                    1- 1001     	BANKSEL	_debug
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1- 1002     	MOVR	_debug,W
     0032 0D03                      1- 1003     	BTRSC	STATUS,2
     0033 3rrr                      1- 1004     	LGOTO	_00457_DS_
                                    1- 1005     	.line	572, "main.c"; 	R_AIN3_DATA = OUTA;
     0034 212D                      1- 1006     	MOVIA	0x2d
                                    1- 1007     	BANKSEL	_R_AIN3_DATA
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 00rr                      1- 1008     	MOVAR	_R_AIN3_DATA
     0037 2101                      1- 1009     	MOVIA	0x01
     0038 00rr                      1- 1010     	MOVAR	(_R_AIN3_DATA + 1)
                                    1- 1011     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1012     ;;unsigned compare: left >= lit (0x281=641), size=2
     0039                           1- 1013     _00457_DS_:
                                    1- 1014     	.line	573, "main.c"; 	if(R_AIN3_DATA > 640)
     0039 2102                      1- 1015     	MOVIA	0x02
                                    1- 1016     	BANKSEL	_R_AIN3_DATA
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 04rr                      1- 1017     	SUBAR	(_R_AIN3_DATA + 1),W
     003C 0903                      1- 1018     	BTRSS	STATUS,2
     003D 3rrr                      1- 1019     	LGOTO	_00484_DS_
     003E 2181                      1- 1020     	MOVIA	0x81
     003F 04rr                      1- 1021     	SUBAR	_R_AIN3_DATA,W
     0040                           1- 1022     _00484_DS_:
     0040 0803                      1- 1023     	BTRSS	STATUS,0
     0041 3rrr                      1- 1024     	LGOTO	_00465_DS_
                                    1- 1025     	.line	575, "main.c"; 	if(++overCount > 10)
                                    1- 1026     	BANKSEL	_overCount
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 05rr                      1- 1027     	INCR	_overCount,F
                                    1- 1028     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1029     ;;unsigned compare: left >= lit (0xB=11), size=1
     0044 210B                      1- 1030     	MOVIA	0x0b
     0045 04rr                      1- 1031     	SUBAR	_overCount,W
     0046 0803                      1- 1032     	BTRSS	STATUS,0
     0047 3rrr                      1- 1033     	LGOTO	_00467_DS_
                                    1- 1034     	.line	577, "main.c"; 	overCount = 10;
     0048 210A                      1- 1035     	MOVIA	0x0a
     0049 00rr                      1- 1036     	MOVAR	_overCount
                                    1- 1037     	.line	578, "main.c"; 	PWM2DUTY = 128;
     004A 2180                      1- 1038     	MOVIA	0x80
     004B 00rr                      1- 1039     	SFUN	_PWM2DUTY
     004C 3rrr                      1- 1040     	LGOTO	_00467_DS_
     004D                           1- 1041     _00465_DS_:
                                    1- 1042     	.line	583, "main.c"; 	if(overCount > 0)
                                    1- 1043     	BANKSEL	_overCount
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1- 1044     	MOVR	_overCount,W
     004F 0D03                      1- 1045     	BTRSC	STATUS,2
     0050 3rrr                      1- 1046     	LGOTO	_00461_DS_
                                    1- 1047     	.line	585, "main.c"; 	overCount--;
     0051 06rr                      1- 1048     	DECR	_overCount,F
                                    1- 1049     	.line	586, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1050     	BANKSEL	_maxDuty
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1- 1051     	MOVR	_maxDuty,W
     0054 00rr                      1- 1052     	SFUN	_PWM2DUTY
     0055                           1- 1053     _00461_DS_:
                                    1- 1054     	.line	588, "main.c"; 	if(workStep > 0)
                                    1- 1055     	BANKSEL	_workStep
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1- 1056     	MOVR	_workStep,W
     0057 0D03                      1- 1057     	BTRSC	STATUS,2
     0058 3rrr                      1- 1058     	LGOTO	_00467_DS_
                                    1- 1059     	.line	589, "main.c"; 	ledStep = workStep;
     0059 01rr                      1- 1060     	MOVR	_workStep,W
                                    1- 1061     	BANKSEL	_ledStep
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1- 1062     	MOVAR	_ledStep
     005C                           1- 1063     _00467_DS_:
                                    1- 1064     	.line	593, "main.c"; 	}
                                    1- 1065     	RETURN	
     005C 0010                      3-   26 m1      ret
                                    1- 1066     ; exit point of _checkOutA
                                    1- 1068     ;***
                                    1- 1069     ;  pBlock Stats: dbName = C
                                    1- 1070     ;***
                                    1- 1071     ;functions called:
                                    1- 1072     ;   _F_AIN4_Convert
                                    1- 1073     ;   _F_AIN4_Convert
                                    1- 1074     ;4 compiler assigned registers:
                                    1- 1075     ;   r0x1034
                                    1- 1076     ;   r0x1035
                                    1- 1077     ;   r0x1036
                                    1- 1078     ;   r0x1037
                                    1- 1079     ;; Starting pCode block
                                    1- 1080     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1082     _checkBatAD:
                                    1- 1083     ; 0 exit points
                                    1- 1084     	.line	491, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1085     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1086     	CLRR	_R_AIN4_DATA_LB
                                    1- 1087     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1088     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1089     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1090     	.line	492, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1091     	MOVIA	0x08
     0006 2rrr                      1- 1092     	LCALL	_F_AIN4_Convert
                                    1- 1093     	.line	493, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1094     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1095     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1096     	ANDIA	0xf0
     000A 00rr                      1- 1097     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1098     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1099     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1100     	ANDIA	0x0f
     000E 11rr                      1- 1101     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1102     	XORAR	_R_AIN4_DATA,F
                                    1- 1103     	.line	494, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1104     	MOVIA	0xf0
                                    1- 1105     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1106     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1107     	.line	495, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1108     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1109     	BANKSEL	r0x1036
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1110     	MOVAR	r0x1036
                                    1- 1111     ;;1	MOVAR	r0x1034
                                    1- 1112     ;;1	CLRR	r0x1035
                                    1- 1113     ;;99	MOVR	r0x1034,W
     0016 2100                      1- 1114     	MOVIA	0x00
                                    1- 1115     	BANKSEL	r0x1037
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1116     	MOVAR	r0x1037
                                    1- 1117     	BANKSEL	r0x1036
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1118     	MOVR	r0x1036,W
                                    1- 1119     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1120     	ADDAR	_R_AIN4_DATA,F
                                    1- 1121     	BANKSEL	r0x1037
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1122     	MOVR	r0x1037,W
     001F 0C03                      1- 1123     	BTRSC	STATUS,0
     0020 05rr                      1- 1124     	INCR	r0x1037,W
     0021 0D03                      1- 1125     	BTRSC	STATUS,2
     0022 3rrr                      1- 1126     	LGOTO	_00004_DS_
                                    1- 1127     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1128     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1129     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1130     _00004_DS_:
                                    1- 1131     	.line	496, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1132     	BCR	STATUS,0
                                    1- 1133     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1134     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1135     	RRR	_R_AIN4_DATA,F
                                    1- 1136     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1137     	BCR	STATUS,0
     002A 13rr                      1- 1138     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1139     	RRR	_R_AIN4_DATA,F
                                    1- 1140     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1141     	BCR	STATUS,0
     002D 13rr                      1- 1142     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1143     	RRR	_R_AIN4_DATA,F
                                    1- 1144     	.line	497, "main.c"; 	lowBat = 0;
                                    1- 1145     	BANKSEL	_lowBat
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1- 1146     	CLRR	_lowBat
                                    1- 1147     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1148     ;;unsigned compare: left >= lit (0xF29=3881), size=2
                                    1- 1149     	.line	498, "main.c"; 	if(R_AIN4_DATA > 3880)
     0031 210F                      1- 1150     	MOVIA	0x0f
                                    1- 1151     	BANKSEL	_R_AIN4_DATA
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 04rr                      1- 1152     	SUBAR	(_R_AIN4_DATA + 1),W
     0034 0903                      1- 1153     	BTRSS	STATUS,2
     0035 3rrr                      1- 1154     	LGOTO	_00441_DS_
     0036 2129                      1- 1155     	MOVIA	0x29
     0037 04rr                      1- 1156     	SUBAR	_R_AIN4_DATA,W
     0038                           1- 1157     _00441_DS_:
     0038 0803                      1- 1158     	BTRSS	STATUS,0
     0039 3rrr                      1- 1159     	LGOTO	_00372_DS_
                                    1- 1160     	.line	500, "main.c"; 	R_AIN4_DATA = 3880;
     003A 2128                      1- 1161     	MOVIA	0x28
                                    1- 1162     	BANKSEL	_R_AIN4_DATA
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 00rr                      1- 1163     	MOVAR	_R_AIN4_DATA
     003D 210F                      1- 1164     	MOVIA	0x0f
     003E 00rr                      1- 1165     	MOVAR	(_R_AIN4_DATA + 1)
     003F 3rrr                      1- 1166     	LGOTO	_00373_DS_
                                    1- 1167     ;;unsigned compare: left < lit (0xCE4=3300), size=2
     0040                           1- 1168     _00372_DS_:
                                    1- 1169     	.line	502, "main.c"; 	else if(R_AIN4_DATA < 3300)
     0040 210C                      1- 1170     	MOVIA	0x0c
                                    1- 1171     	BANKSEL	_R_AIN4_DATA
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 04rr                      1- 1172     	SUBAR	(_R_AIN4_DATA + 1),W
     0043 0903                      1- 1173     	BTRSS	STATUS,2
     0044 3rrr                      1- 1174     	LGOTO	_00442_DS_
     0045 21E4                      1- 1175     	MOVIA	0xe4
     0046 04rr                      1- 1176     	SUBAR	_R_AIN4_DATA,W
     0047                           1- 1177     _00442_DS_:
     0047 0C03                      1- 1178     	BTRSC	STATUS,0
     0048 3rrr                      1- 1179     	LGOTO	_00373_DS_
                                    1- 1180     ;;unsigned compare: left < lit (0xBB8=3000), size=2
                                    1- 1181     	.line	504, "main.c"; 	if(R_AIN4_DATA < 3000 && overCount < 10 && workStep > 0)
     0049 210B                      1- 1182     	MOVIA	0x0b
                                    1- 1183     	BANKSEL	_R_AIN4_DATA
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 04rr                      1- 1184     	SUBAR	(_R_AIN4_DATA + 1),W
     004C 0903                      1- 1185     	BTRSS	STATUS,2
     004D 3rrr                      1- 1186     	LGOTO	_00443_DS_
     004E 21B8                      1- 1187     	MOVIA	0xb8
     004F 04rr                      1- 1188     	SUBAR	_R_AIN4_DATA,W
     0050                           1- 1189     _00443_DS_:
     0050 0C03                      1- 1190     	BTRSC	STATUS,0
     0051 3rrr                      1- 1191     	LGOTO	_00366_DS_
                                    1- 1192     ;;unsigned compare: left < lit (0xA=10), size=1
     0052 210A                      1- 1193     	MOVIA	0x0a
                                    1- 1194     	BANKSEL	_overCount
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 04rr                      1- 1195     	SUBAR	_overCount,W
     0055 0C03                      1- 1196     	BTRSC	STATUS,0
     0056 3rrr                      1- 1197     	LGOTO	_00366_DS_
                                    1- 1198     	BANKSEL	_workStep
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 01rr                      1- 1199     	MOVR	_workStep,W
     0059 0D03                      1- 1200     	BTRSC	STATUS,2
     005A 3rrr                      1- 1201     	LGOTO	_00366_DS_
                                    1- 1202     	.line	505, "main.c"; 	lowBat = 1;
     005B 2101                      1- 1203     	MOVIA	0x01
                                    1- 1204     	BANKSEL	_lowBat
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 00rr                      1- 1205     	MOVAR	_lowBat
     005E                           1- 1206     _00366_DS_:
                                    1- 1207     	.line	506, "main.c"; 	R_AIN4_DATA = 3300;
     005E 21E4                      1- 1208     	MOVIA	0xe4
                                    1- 1209     	BANKSEL	_R_AIN4_DATA
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 00rr                      1- 1210     	MOVAR	_R_AIN4_DATA
     0061 210C                      1- 1211     	MOVIA	0x0c
     0062 00rr                      1- 1212     	MOVAR	(_R_AIN4_DATA + 1)
     0063                           1- 1213     _00373_DS_:
                                    1- 1214     	.line	508, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA - 3300;
     0063 211C                      1- 1215     	MOVIA	0x1c
                                    1- 1216     	BANKSEL	_R_AIN4_DATA
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 03rr                      1- 1217     	ADDAR	_R_AIN4_DATA,F
     0066 21F3                      1- 1218     	MOVIA	0xf3
     0067 0C03                      1- 1219     	BTRSC	STATUS,0
     0068 21F4                      1- 1220     	MOVIA	0xf4
     0069 03rr                      1- 1221     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1222     ;;unsigned compare: left < lit (0x23A=570), size=2
                                    1- 1223     	.line	510, "main.c"; 	if(R_AIN4_DATA >= 570)
     006A 2102                      1- 1224     	MOVIA	0x02
     006B 04rr                      1- 1225     	SUBAR	(_R_AIN4_DATA + 1),W
     006C 0903                      1- 1226     	BTRSS	STATUS,2
     006D 3rrr                      1- 1227     	LGOTO	_00445_DS_
     006E 213A                      1- 1228     	MOVIA	0x3a
     006F 04rr                      1- 1229     	SUBAR	_R_AIN4_DATA,W
     0070                           1- 1230     _00445_DS_:
     0070 0803                      1- 1231     	BTRSS	STATUS,0
     0071 3rrr                      1- 1232     	LGOTO	_00395_DS_
                                    1- 1233     	.line	512, "main.c"; 	pwStep = 5;
     0072 2105                      1- 1234     	MOVIA	0x05
                                    1- 1235     	BANKSEL	_pwStep
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 00rr                      1- 1236     	MOVAR	_pwStep
     0075 3rrr                      1- 1237     	LGOTO	_00397_DS_
                                    1- 1238     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1239     ;;unsigned compare: left >= lit (0x1C3=451), size=2
     0076                           1- 1240     _00395_DS_:
                                    1- 1241     	.line	514, "main.c"; 	else if(R_AIN4_DATA > 450)
     0076 2101                      1- 1242     	MOVIA	0x01
                                    1- 1243     	BANKSEL	_R_AIN4_DATA
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 04rr                      1- 1244     	SUBAR	(_R_AIN4_DATA + 1),W
     0079 0903                      1- 1245     	BTRSS	STATUS,2
     007A 3rrr                      1- 1246     	LGOTO	_00446_DS_
     007B 21C3                      1- 1247     	MOVIA	0xc3
     007C 04rr                      1- 1248     	SUBAR	_R_AIN4_DATA,W
     007D                           1- 1249     _00446_DS_:
     007D 0803                      1- 1250     	BTRSS	STATUS,0
     007E 3rrr                      1- 1251     	LGOTO	_00392_DS_
                                    1- 1252     	.line	517, "main.c"; 	if(pwStep == 5)
                                    1- 1253     	BANKSEL	_pwStep
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 01rr                      1- 1254     	MOVR	_pwStep,W
     0081 2405                      1- 1255     	XORIA	0x05
     0082 0903                      1- 1256     	BTRSS	STATUS,2
     0083 3rrr                      1- 1257     	LGOTO	_00377_DS_
                                    1- 1258     ;;unsigned compare: left < lit (0x1F4=500), size=2
                                    1- 1259     	.line	519, "main.c"; 	if(R_AIN4_DATA < 500)
     0084 2101                      1- 1260     	MOVIA	0x01
                                    1- 1261     	BANKSEL	_R_AIN4_DATA
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 04rr                      1- 1262     	SUBAR	(_R_AIN4_DATA + 1),W
     0087 0903                      1- 1263     	BTRSS	STATUS,2
     0088 3rrr                      1- 1264     	LGOTO	_00447_DS_
     0089 21F4                      1- 1265     	MOVIA	0xf4
     008A 04rr                      1- 1266     	SUBAR	_R_AIN4_DATA,W
     008B                           1- 1267     _00447_DS_:
     008B 0C03                      1- 1268     	BTRSC	STATUS,0
     008C 3rrr                      1- 1269     	LGOTO	_00378_DS_
                                    1- 1270     	.line	520, "main.c"; 	pwStep = 4;
     008D 2104                      1- 1271     	MOVIA	0x04
                                    1- 1272     	BANKSEL	_pwStep
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 00rr                      1- 1273     	MOVAR	_pwStep
     0090 3rrr                      1- 1274     	LGOTO	_00378_DS_
     0091                           1- 1275     _00377_DS_:
                                    1- 1276     	.line	524, "main.c"; 	pwStep = 4;
     0091 2104                      1- 1277     	MOVIA	0x04
                                    1- 1278     	BANKSEL	_pwStep
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 00rr                      1- 1279     	MOVAR	_pwStep
                                    1- 1280     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1281     ;;unsigned compare: left >= lit (0x227=551), size=2
     0094                           1- 1282     _00378_DS_:
                                    1- 1283     	.line	527, "main.c"; 	if(R_AIN4_DATA > 550)
     0094 2102                      1- 1284     	MOVIA	0x02
                                    1- 1285     	BANKSEL	_R_AIN4_DATA
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 04rr                      1- 1286     	SUBAR	(_R_AIN4_DATA + 1),W
     0097 0903                      1- 1287     	BTRSS	STATUS,2
     0098 3rrr                      1- 1288     	LGOTO	_00448_DS_
     0099 2127                      1- 1289     	MOVIA	0x27
     009A 04rr                      1- 1290     	SUBAR	_R_AIN4_DATA,W
     009B                           1- 1291     _00448_DS_:
     009B 0803                      1- 1292     	BTRSS	STATUS,0
     009C 3rrr                      1- 1293     	LGOTO	_00397_DS_
                                    1- 1294     	.line	529, "main.c"; 	if(++chrgTime > 1800)
                                    1- 1295     	BANKSEL	_chrgTime
     009D rrrr                      3-   71 m1      .banksel ram_address
     009E 05rr                      1- 1296     	INCR	_chrgTime,F
     009F 0D03                      1- 1297     	BTRSC	STATUS,2
     00A0 05rr                      1- 1298     	INCR	(_chrgTime + 1),F
                                    1- 1299     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1300     ;;unsigned compare: left >= lit (0x709=1801), size=2
     00A1 2107                      1- 1301     	MOVIA	0x07
     00A2 04rr                      1- 1302     	SUBAR	(_chrgTime + 1),W
     00A3 0903                      1- 1303     	BTRSS	STATUS,2
     00A4 3rrr                      1- 1304     	LGOTO	_00449_DS_
     00A5 2109                      1- 1305     	MOVIA	0x09
     00A6 04rr                      1- 1306     	SUBAR	_chrgTime,W
     00A7                           1- 1307     _00449_DS_:
     00A7 0803                      1- 1308     	BTRSS	STATUS,0
     00A8 3rrr                      1- 1309     	LGOTO	_00397_DS_
                                    1- 1310     	.line	531, "main.c"; 	chrgTime = 1800;
     00A9 2108                      1- 1311     	MOVIA	0x08
                                    1- 1312     	BANKSEL	_chrgTime
     00AA rrrr                      3-   71 m1      .banksel ram_address
     00AB 00rr                      1- 1313     	MOVAR	_chrgTime
     00AC 2107                      1- 1314     	MOVIA	0x07
     00AD 00rr                      1- 1315     	MOVAR	(_chrgTime + 1)
                                    1- 1316     	.line	532, "main.c"; 	pwStep = 5;
     00AE 2105                      1- 1317     	MOVIA	0x05
                                    1- 1318     	BANKSEL	_pwStep
     00AF rrrr                      3-   71 m1      .banksel ram_address
     00B0 00rr                      1- 1319     	MOVAR	_pwStep
     00B1 3rrr                      1- 1320     	LGOTO	_00397_DS_
                                    1- 1321     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1322     ;;unsigned compare: left >= lit (0x12D=301), size=2
     00B2                           1- 1323     _00392_DS_:
                                    1- 1324     	.line	536, "main.c"; 	else if(R_AIN4_DATA > 300)
     00B2 2101                      1- 1325     	MOVIA	0x01
                                    1- 1326     	BANKSEL	_R_AIN4_DATA
     00B3 rrrr                      3-   71 m1      .banksel ram_address
     00B4 04rr                      1- 1327     	SUBAR	(_R_AIN4_DATA + 1),W
     00B5 0903                      1- 1328     	BTRSS	STATUS,2
     00B6 3rrr                      1- 1329     	LGOTO	_00450_DS_
     00B7 212D                      1- 1330     	MOVIA	0x2d
     00B8 04rr                      1- 1331     	SUBAR	_R_AIN4_DATA,W
     00B9                           1- 1332     _00450_DS_:
     00B9 0803                      1- 1333     	BTRSS	STATUS,0
     00BA 3rrr                      1- 1334     	LGOTO	_00389_DS_
                                    1- 1335     	.line	539, "main.c"; 	pwStep = 3;
     00BB 2103                      1- 1336     	MOVIA	0x03
                                    1- 1337     	BANKSEL	_pwStep
     00BC rrrr                      3-   71 m1      .banksel ram_address
     00BD 00rr                      1- 1338     	MOVAR	_pwStep
                                    1- 1339     	.line	540, "main.c"; 	chrgTime = 0;
                                    1- 1340     	BANKSEL	_chrgTime
     00BE rrrr                      3-   71 m1      .banksel ram_address
     00BF 02rr                      1- 1341     	CLRR	_chrgTime
     00C0 02rr                      1- 1342     	CLRR	(_chrgTime + 1)
     00C1 3rrr                      1- 1343     	LGOTO	_00397_DS_
                                    1- 1344     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1345     ;;unsigned compare: left >= lit (0x97=151), size=2
     00C2                           1- 1346     _00389_DS_:
                                    1- 1347     	.line	542, "main.c"; 	else if(R_AIN4_DATA > 150)
     00C2 2100                      1- 1348     	MOVIA	0x00
                                    1- 1349     	BANKSEL	_R_AIN4_DATA
     00C3 rrrr                      3-   71 m1      .banksel ram_address
     00C4 04rr                      1- 1350     	SUBAR	(_R_AIN4_DATA + 1),W
     00C5 0903                      1- 1351     	BTRSS	STATUS,2
     00C6 3rrr                      1- 1352     	LGOTO	_00451_DS_
     00C7 2197                      1- 1353     	MOVIA	0x97
     00C8 04rr                      1- 1354     	SUBAR	_R_AIN4_DATA,W
     00C9                           1- 1355     _00451_DS_:
     00C9 0803                      1- 1356     	BTRSS	STATUS,0
     00CA 3rrr                      1- 1357     	LGOTO	_00386_DS_
                                    1- 1358     	.line	545, "main.c"; 	pwStep = 2;
     00CB 2102                      1- 1359     	MOVIA	0x02
                                    1- 1360     	BANKSEL	_pwStep
     00CC rrrr                      3-   71 m1      .banksel ram_address
     00CD 00rr                      1- 1361     	MOVAR	_pwStep
                                    1- 1362     	.line	546, "main.c"; 	chrgTime = 0;
                                    1- 1363     	BANKSEL	_chrgTime
     00CE rrrr                      3-   71 m1      .banksel ram_address
     00CF 02rr                      1- 1364     	CLRR	_chrgTime
     00D0 02rr                      1- 1365     	CLRR	(_chrgTime + 1)
     00D1 3rrr                      1- 1366     	LGOTO	_00397_DS_
     00D2                           1- 1367     _00386_DS_:
                                    1- 1368     	.line	551, "main.c"; 	pwStep = 1;
     00D2 2101                      1- 1369     	MOVIA	0x01
                                    1- 1370     	BANKSEL	_pwStep
     00D3 rrrr                      3-   71 m1      .banksel ram_address
     00D4 00rr                      1- 1371     	MOVAR	_pwStep
                                    1- 1372     	.line	552, "main.c"; 	chrgTime = 0;
                                    1- 1373     	BANKSEL	_chrgTime
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 02rr                      1- 1374     	CLRR	_chrgTime
     00D7 02rr                      1- 1375     	CLRR	(_chrgTime + 1)
                                    1- 1376     	.line	553, "main.c"; 	if(workStartFlag == 4)
                                    1- 1377     	BANKSEL	_workStartFlag
     00D8 rrrr                      3-   71 m1      .banksel ram_address
     00D9 01rr                      1- 1378     	MOVR	_workStartFlag,W
     00DA 2404                      1- 1379     	XORIA	0x04
     00DB 0D03                      1- 1380     	BTRSC	STATUS,2
                                    1- 1381     	.line	555, "main.c"; 	workStartFlag = 0;
     00DC 02rr                      1- 1382     	CLRR	_workStartFlag
     00DD                           1- 1383     _00397_DS_:
                                    1- 1384     	.line	560, "main.c"; 	}
                                    1- 1385     	RETURN	
     00DD 0010                      3-   26 m1      ret
                                    1- 1387     ;***
                                    1- 1388     ;  pBlock Stats: dbName = C
                                    1- 1389     ;***
                                    1- 1390     ;has an exit
                                    1- 1391     ;functions called:
                                    1- 1392     ;   _delay
                                    1- 1393     ;   _delay
                                    1- 1394     ;; Starting pCode block
                                    1- 1395     .segment "code"; module=main, function=_initAD
     0000                           1- 1397     _initAD:
                                    1- 1398     ; 2 exit points
                                    1- 1399     	.line	467, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1400     	MOVIA	0x84
     0001 00rr                      1- 1401     	MOVAR	_ADMD
                                    1- 1402     	.line	472, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1403     	CLRR	_ADVREFH
                                    1- 1404     	.line	477, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1405     	MOVIA	0x10
     0004 00rr                      1- 1406     	MOVAR	_ADR
                                    1- 1407     	.line	479, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1408     	MOVIA	0x03
     0006 00rr                      1- 1409     	MOVAR	_ADCR
                                    1- 1410     	.line	482, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1411     	BSR	_ADMDbits,4
                                    1- 1412     	.line	483, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1413     	MOVIA	0x64
     0009 2rrr                      1- 1414     	LCALL	_delay
                                    1- 1415     	.line	486, "main.c"; 	}
                                    1- 1416     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 1417     ; exit point of _initAD
                                    1- 1419     ;***
                                    1- 1420     ;  pBlock Stats: dbName = C
                                    1- 1421     ;***
                                    1- 1422     ;has an exit
                                    1- 1423     ;2 compiler assigned registers:
                                    1- 1424     ;   r0x1022
                                    1- 1425     ;   r0x1023
                                    1- 1426     ;; Starting pCode block
                                    1- 1427     .segment "code"; module=main, function=_delay
                                    1- 1429     ;local variable name mapping:
     0000                           1- 1432     _delay:
                                    1- 1433     ; 2 exit points
                                    1- 1434     	.line	457, "main.c"; 	void delay(u8t time)
                                    1- 1435     	BANKSEL	r0x1022
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1436     	MOVAR	r0x1022
                                    1- 1437     	.line	459, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1438     	BANKSEL	r0x1023
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1439     	CLRR	r0x1023
     0004                           1- 1440     _00354_DS_:
                                    1- 1441     	BANKSEL	r0x1022
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1442     	MOVR	r0x1022,W
                                    1- 1443     	BANKSEL	r0x1023
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 1444     	SUBAR	r0x1023,W
     0008 0C03                      1- 1445     	BTRSC	STATUS,0
     0009 3rrr                      1- 1446     	LGOTO	_00356_DS_
                                    1- 1447     	.line	460, "main.c"; 	NOP();
     000A 0000                      1- 1448     	nop
                                    1- 1449     	.line	459, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1450     	BANKSEL	r0x1023
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 1451     	INCR	r0x1023,F
     000D 3rrr                      1- 1452     	LGOTO	_00354_DS_
     000E                           1- 1453     _00356_DS_:
                                    1- 1454     	.line	461, "main.c"; 	}
                                    1- 1455     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1456     ; exit point of _delay
                                    1- 1458     ;***
                                    1- 1459     ;  pBlock Stats: dbName = C
                                    1- 1460     ;***
                                    1- 1461     ;has an exit
                                    1- 1462     ;functions called:
                                    1- 1463     ;   _pwmStop
                                    1- 1464     ;   _pwmStop
                                    1- 1465     ;; Starting pCode block
                                    1- 1466     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1468     _chrgCtr:
                                    1- 1469     ; 2 exit points
                                    1- 1470     	.line	423, "main.c"; 	if(PORTB & 0x02)
     0000 08rr                      1- 1471     	BTRSS	_PORTB,1
     0001 3rrr                      1- 1472     	LGOTO	_00345_DS_
                                    1- 1473     	.line	426, "main.c"; 	chrgFlag = 1;
                                    1- 1474     	BANKSEL	_Status
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 19rr                      1- 1475     	BSR	_Status,3
                                    1- 1476     	.line	427, "main.c"; 	workStep = 0;
                                    1- 1477     	BANKSEL	_workStep
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1478     	CLRR	_workStep
                                    1- 1479     	.line	428, "main.c"; 	pwmStop();
     0006 2rrr                      1- 1480     	LCALL	_pwmStop
                                    1- 1481     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1482     ;;unsigned compare: left >= lit (0x4=4), size=1
                                    1- 1483     	.line	429, "main.c"; 	if(pwStep > 3)
     0007 2104                      1- 1484     	MOVIA	0x04
                                    1- 1485     	BANKSEL	_pwStep
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 04rr                      1- 1486     	SUBAR	_pwStep,W
     000A 0803                      1- 1487     	BTRSS	STATUS,0
     000B 3rrr                      1- 1488     	LGOTO	_00340_DS_
                                    1- 1489     	.line	432, "main.c"; 	ledStep = 4;
     000C 2104                      1- 1490     	MOVIA	0x04
                                    1- 1491     	BANKSEL	_ledStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1492     	MOVAR	_ledStep
     000F 3rrr                      1- 1493     	LGOTO	_00347_DS_
     0010                           1- 1494     _00340_DS_:
                                    1- 1495     	.line	436, "main.c"; 	if(count500ms == 0)
                                    1- 1496     	BANKSEL	_count500ms
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1497     	MOVR	_count500ms,W
     0012 0903                      1- 1498     	BTRSS	STATUS,2
     0013 3rrr                      1- 1499     	LGOTO	_00347_DS_
                                    1- 1500     	.line	438, "main.c"; 	if(++ledStep > 4)
                                    1- 1501     	BANKSEL	_ledStep
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1- 1502     	INCR	_ledStep,F
                                    1- 1503     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1504     ;;unsigned compare: left >= lit (0x5=5), size=1
     0016 2105                      1- 1505     	MOVIA	0x05
     0017 04rr                      1- 1506     	SUBAR	_ledStep,W
     0018 0803                      1- 1507     	BTRSS	STATUS,0
     0019 3rrr                      1- 1508     	LGOTO	_00347_DS_
                                    1- 1509     	.line	439, "main.c"; 	ledStep = pwStep - 1;
                                    1- 1510     	BANKSEL	_pwStep
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 06rr                      1- 1511     	DECR	_pwStep,W
                                    1- 1512     	BANKSEL	_ledStep
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1- 1513     	MOVAR	_ledStep
     001E 3rrr                      1- 1514     	LGOTO	_00347_DS_
     001F                           1- 1515     _00345_DS_:
                                    1- 1516     	.line	448, "main.c"; 	if(workStep == 0)
                                    1- 1517     	BANKSEL	_workStep
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 1518     	MOVR	_workStep,W
     0021 0903                      1- 1519     	BTRSS	STATUS,2
     0022 3rrr                      1- 1520     	LGOTO	_00005_DS_
                                    1- 1521     	.line	449, "main.c"; 	ledStep = 0;
                                    1- 1522     	BANKSEL	_ledStep
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 02rr                      1- 1523     	CLRR	_ledStep
     0025                           1- 1524     _00005_DS_:
                                    1- 1525     	.line	450, "main.c"; 	chrgFlag = 0;
                                    1- 1526     	BANKSEL	_Status
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 1Drr                      1- 1527     	BCR	_Status,3
                                    1- 1528     	.line	451, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 1529     	BANKSEL	_chrgTime
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1- 1530     	CLRR	_chrgTime
     0029 02rr                      1- 1531     	CLRR	(_chrgTime + 1)
     002A                           1- 1532     _00347_DS_:
                                    1- 1533     	.line	454, "main.c"; 	}
                                    1- 1534     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1- 1535     ; exit point of _chrgCtr
                                    1- 1537     ;***
                                    1- 1538     ;  pBlock Stats: dbName = C
                                    1- 1539     ;***
                                    1- 1540     ;has an exit
                                    1- 1541     ;1 compiler assigned register :
                                    1- 1542     ;   r0x1038
                                    1- 1543     ;; Starting pCode block
                                    1- 1544     .segment "code"; module=main, function=_keyRead
                                    1- 1546     ;local variable name mapping:
     0000                           1- 1548     _keyRead:
                                    1- 1549     ; 2 exit points
                                    1- 1550     	.line	386, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1551     	BANKSEL	r0x1038
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1552     	MOVAR	r0x1038
                                    1- 1553     	.line	388, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1554     	MOVR	r0x1038,W
     0003 0D03                      1- 1555     	BTRSC	STATUS,2
     0004 3rrr                      1- 1556     	LGOTO	_00328_DS_
                                    1- 1557     	.line	390, "main.c"; 	keyCount++;
                                    1- 1558     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1559     	INCR	_keyCount,F
                                    1- 1560     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 1561     	.line	391, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 1562     	MOVIA	0x64
     0008 04rr                      1- 1563     	SUBAR	_keyCount,W
     0009 0803                      1- 1564     	BTRSS	STATUS,0
     000A 3rrr                      1- 1565     	LGOTO	_00329_DS_
                                    1- 1566     	.line	393, "main.c"; 	keyCount = 100;
     000B 2164                      1- 1567     	MOVIA	0x64
     000C 00rr                      1- 1568     	MOVAR	_keyCount
                                    1- 1569     	.line	394, "main.c"; 	if(!longPressFlag)
                                    1- 1570     	BANKSEL	_Status
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 0Crr                      1- 1571     	BTRSC	_Status,1
     000F 3rrr                      1- 1572     	LGOTO	_00329_DS_
                                    1- 1573     	.line	396, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1574     	BSR	_Status,1
                                    1- 1575     	.line	397, "main.c"; 	return 2;
     0011 2102                      1- 1576     	MOVIA	0x02
     0012 3rrr                      1- 1577     	LGOTO	_00330_DS_
                                    1- 1578     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 1579     _00328_DS_:
                                    1- 1580     	.line	403, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 1581     	MOVIA	0x64
                                    1- 1582     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1583     	SUBAR	_keyCount,W
     0016 0803                      1- 1584     	BTRSS	STATUS,0
     0017 3rrr                      1- 1585     	LGOTO	_00325_DS_
                                    1- 1586     	.line	405, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1587     	CLRR	_keyCount
                                    1- 1588     	.line	406, "main.c"; 	longPressFlag = 0;
                                    1- 1589     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Crr                      1- 1590     	BCR	_Status,1
                                    1- 1591     	.line	407, "main.c"; 	return	0;
     001B 2100                      1- 1592     	MOVIA	0x00
     001C 3rrr                      1- 1593     	LGOTO	_00330_DS_
                                    1- 1594     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 1595     _00325_DS_:
                                    1- 1596     	.line	409, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 1597     	MOVIA	0x08
                                    1- 1598     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 1599     	SUBAR	_keyCount,W
     0020 0803                      1- 1600     	BTRSS	STATUS,0
     0021 3rrr                      1- 1601     	LGOTO	_00326_DS_
                                    1- 1602     	.line	411, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1603     	CLRR	_keyCount
                                    1- 1604     	.line	412, "main.c"; 	return	1;
     0023 2101                      1- 1605     	MOVIA	0x01
     0024 3rrr                      1- 1606     	LGOTO	_00330_DS_
     0025                           1- 1607     _00326_DS_:
                                    1- 1608     	.line	414, "main.c"; 	keyCount = 0;
                                    1- 1609     	BANKSEL	_keyCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 1610     	CLRR	_keyCount
     0027                           1- 1611     _00329_DS_:
                                    1- 1612     	.line	416, "main.c"; 	return 0;
     0027 2100                      1- 1613     	MOVIA	0x00
     0028                           1- 1614     _00330_DS_:
                                    1- 1615     	.line	417, "main.c"; 	}
                                    1- 1616     	RETURN	
     0028 0010                      3-   26 m1      ret
                                    1- 1617     ; exit point of _keyRead
                                    1- 1619     ;***
                                    1- 1620     ;  pBlock Stats: dbName = C
                                    1- 1621     ;***
                                    1- 1622     ;has an exit
                                    1- 1623     ;functions called:
                                    1- 1624     ;   _LedInput
                                    1- 1625     ;   _pwmStop
                                    1- 1626     ;   _LedInput
                                    1- 1627     ;   _pwmStop
                                    1- 1628     ;; Starting pCode block
                                    1- 1629     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1631     _gotoSleep:
                                    1- 1632     ; 2 exit points
                                    1- 1633     	.line	362, "main.c"; 	LedInput();
     0000 2rrr                      1- 1634     	LCALL	_LedInput
                                    1- 1635     	.line	363, "main.c"; 	sleepTime = 0;
                                    1- 1636     	BANKSEL	_sleepTime
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1- 1637     	CLRR	_sleepTime
     0003 02rr                      1- 1638     	CLRR	(_sleepTime + 1)
                                    1- 1639     	.line	365, "main.c"; 	pwmStop();
     0004 2rrr                      1- 1640     	LCALL	_pwmStop
                                    1- 1641     	.line	366, "main.c"; 	workStep = 0;
                                    1- 1642     	BANKSEL	_workStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1643     	CLRR	_workStep
                                    1- 1644     	.line	367, "main.c"; 	AWUCON = 0x60;
     0007 2160                      1- 1645     	MOVIA	0x60
     0008 00rr                      1- 1646     	MOVAR	_AWUCON
                                    1- 1647     	.line	368, "main.c"; 	fgPRD = 0;
                                    1- 1648     	BANKSEL	_fgPRD
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 1649     	CLRR	_fgPRD
     000B 02rr                      1- 1650     	CLRR	(_fgPRD + 1)
                                    1- 1651     	.line	369, "main.c"; 	fgCount = 0;
                                    1- 1652     	BANKSEL	_fgCount
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1- 1653     	CLRR	_fgCount
     000E 02rr                      1- 1654     	CLRR	(_fgCount + 1)
                                    1- 1655     	.line	370, "main.c"; 	redLedFlag = 0;
                                    1- 1656     	BANKSEL	_Status
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 1Drr                      1- 1657     	BCR	_Status,2
                                    1- 1658     	.line	371, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0011 210B                      1- 1659     	MOVIA	0x0b
     0012 00rr                      1- 1660     	MOVAR	_INTE
                                    1- 1661     	.line	372, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0013 2118                      1- 1662     	MOVIA	0x18
     0014 00rr                      1- 1663     	MOVAR	_PCON
                                    1- 1664     	.line	373, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0015 02rr                      1- 1665     	CLRR	_INTF
                                    1- 1666     	.line	374, "main.c"; 	CLRWDT();
     0016 0002                      1- 1667     	clrwdt
                                    1- 1668     	.line	375, "main.c"; 	ENI();
     0017 0004                      1- 1669     	ENI
                                    1- 1670     	.line	376, "main.c"; 	SLEEP();
     0018 0001                      1- 1671     	sleep
                                    1- 1672     	.line	377, "main.c"; 	AWUCON = 0x00;
     0019 02rr                      1- 1673     	CLRR	_AWUCON
                                    1- 1674     	.line	378, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     001A 2101                      1- 1675     	MOVIA	0x01
     001B 00rr                      1- 1676     	MOVAR	_INTE
                                    1- 1677     	.line	379, "main.c"; 	INTF = 0;
     001C 02rr                      1- 1678     	CLRR	_INTF
                                    1- 1679     	.line	381, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     001D 21B8                      1- 1680     	MOVIA	0xb8
     001E 00rr                      1- 1681     	MOVAR	_PCON
                                    1- 1682     	.line	383, "main.c"; 	}
                                    1- 1683     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1- 1684     ; exit point of _gotoSleep
                                    1- 1686     ;***
                                    1- 1687     ;  pBlock Stats: dbName = C
                                    1- 1688     ;***
                                    1- 1689     ;has an exit
                                    1- 1690     ;; Starting pCode block
                                    1- 1691     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1693     _pwmStop:
                                    1- 1694     ; 2 exit points
                                    1- 1695     	.line	356, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 1696     	CLRA	
     0001 00rr                      1- 1697     	SFUN	_T2CR1
                                    1- 1698     	.line	357, "main.c"; 	}
                                    1- 1699     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1700     ; exit point of _pwmStop
                                    1- 1702     ;***
                                    1- 1703     ;  pBlock Stats: dbName = C
                                    1- 1704     ;***
                                    1- 1705     ;has an exit
                                    1- 1706     ;1 compiler assigned register :
                                    1- 1707     ;   r0x103A
                                    1- 1708     ;; Starting pCode block
                                    1- 1709     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1711     _pwmInit:
                                    1- 1712     ; 2 exit points
                                    1- 1713     	.line	344, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1714     	SFUNR	_T2CR1
                                    1- 1715     	BANKSEL	r0x103A
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1716     	MOVAR	r0x103A
     0003 0Frr                      1- 1717     	BTRSC	r0x103A,7
                                    1- 1718     	.line	345, "main.c"; 	return;
     0004 3rrr                      1- 1719     	LGOTO	_00305_DS_
                                    1- 1720     	.line	346, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1721     	CLRR	_TMRH
                                    1- 1722     	.line	347, "main.c"; 	TMR2 = 128;							//频率为110K
     0006 2180                      1- 1723     	MOVIA	0x80
     0007 00rr                      1- 1724     	SFUN	_TMR2
                                    1- 1725     	.line	350, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 1726     	CLRA	
     0009 00rr                      1- 1727     	SFUN	_T2CR2
                                    1- 1728     	.line	351, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 1729     	MOVIA	0x83
     000B 00rr                      1- 1730     	SFUN	_T2CR1
     000C                           1- 1731     _00305_DS_:
                                    1- 1732     	.line	352, "main.c"; 	}
                                    1- 1733     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 1734     ; exit point of _pwmInit
                                    1- 1736     ;***
                                    1- 1737     ;  pBlock Stats: dbName = C
                                    1- 1738     ;***
                                    1- 1739     ;has an exit
                                    1- 1740     ;functions called:
                                    1- 1741     ;   _delay
                                    1- 1742     ;   _LedInput
                                    1- 1743     ;   _delay
                                    1- 1744     ;   _LedInput
                                    1- 1745     ;1 compiler assigned register :
                                    1- 1746     ;   r0x103B
                                    1- 1747     ;; Starting pCode block
                                    1- 1748     .segment "code"; module=main, function=_LED4ON
     0000                           1- 1750     _LED4ON:
                                    1- 1751     ; 2 exit points
                                    1- 1752     	.line	335, "main.c"; 	IOSTB &= 0xF7;
     0000 001r                      1- 1753     	IOSTR	_IOSTB
                                    1- 1754     	BANKSEL	r0x103B
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1755     	MOVAR	r0x103B
     0003 1Drr                      1- 1756     	BCR	r0x103B,3
     0004 01rr                      1- 1757     	MOVR	r0x103B,W
     0005 000r                      1- 1758     	IOST	_IOSTB
                                    1- 1759     	.line	336, "main.c"; 	PORTB |= 0x08;
     0006 19rr                      1- 1760     	BSR	_PORTB,3
                                    1- 1761     	.line	337, "main.c"; 	delay(100);
     0007 2164                      1- 1762     	MOVIA	0x64
     0008 2rrr                      1- 1763     	LCALL	_delay
                                    1- 1764     	.line	338, "main.c"; 	LedInput();
     0009 2rrr                      1- 1765     	LCALL	_LedInput
                                    1- 1766     	.line	339, "main.c"; 	}
                                    1- 1767     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 1768     ; exit point of _LED4ON
                                    1- 1770     ;***
                                    1- 1771     ;  pBlock Stats: dbName = C
                                    1- 1772     ;***
                                    1- 1773     ;has an exit
                                    1- 1774     ;functions called:
                                    1- 1775     ;   _delay
                                    1- 1776     ;   _LedInput
                                    1- 1777     ;   _delay
                                    1- 1778     ;   _LedInput
                                    1- 1779     ;1 compiler assigned register :
                                    1- 1780     ;   r0x103C
                                    1- 1781     ;; Starting pCode block
                                    1- 1782     .segment "code"; module=main, function=_LED3ON
     0000                           1- 1784     _LED3ON:
                                    1- 1785     ; 2 exit points
                                    1- 1786     	.line	327, "main.c"; 	IOSTA &= 0X7F;
     0000 001r                      1- 1787     	IOSTR	_IOSTA
                                    1- 1788     	BANKSEL	r0x103C
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1789     	MOVAR	r0x103C
     0003 1Frr                      1- 1790     	BCR	r0x103C,7
     0004 01rr                      1- 1791     	MOVR	r0x103C,W
     0005 000r                      1- 1792     	IOST	_IOSTA
                                    1- 1793     	.line	328, "main.c"; 	PORTA |= 0X80;
     0006 1Brr                      1- 1794     	BSR	_PORTA,7
                                    1- 1795     	.line	329, "main.c"; 	delay(100);
     0007 2164                      1- 1796     	MOVIA	0x64
     0008 2rrr                      1- 1797     	LCALL	_delay
                                    1- 1798     	.line	330, "main.c"; 	LedInput();
     0009 2rrr                      1- 1799     	LCALL	_LedInput
                                    1- 1800     	.line	331, "main.c"; 	}
                                    1- 1801     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 1802     ; exit point of _LED3ON
                                    1- 1804     ;***
                                    1- 1805     ;  pBlock Stats: dbName = C
                                    1- 1806     ;***
                                    1- 1807     ;has an exit
                                    1- 1808     ;functions called:
                                    1- 1809     ;   _delay
                                    1- 1810     ;   _LedInput
                                    1- 1811     ;   _delay
                                    1- 1812     ;   _LedInput
                                    1- 1813     ;1 compiler assigned register :
                                    1- 1814     ;   r0x103D
                                    1- 1815     ;; Starting pCode block
                                    1- 1816     .segment "code"; module=main, function=_LED2ON
     0000                           1- 1818     _LED2ON:
                                    1- 1819     ; 2 exit points
                                    1- 1820     	.line	319, "main.c"; 	IOSTA &= 0XFD;
     0000 001r                      1- 1821     	IOSTR	_IOSTA
                                    1- 1822     	BANKSEL	r0x103D
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1823     	MOVAR	r0x103D
     0003 1Crr                      1- 1824     	BCR	r0x103D,1
     0004 01rr                      1- 1825     	MOVR	r0x103D,W
     0005 000r                      1- 1826     	IOST	_IOSTA
                                    1- 1827     	.line	320, "main.c"; 	PORTA |= 0X02;
     0006 18rr                      1- 1828     	BSR	_PORTA,1
                                    1- 1829     	.line	321, "main.c"; 	delay(100);
     0007 2164                      1- 1830     	MOVIA	0x64
     0008 2rrr                      1- 1831     	LCALL	_delay
                                    1- 1832     	.line	322, "main.c"; 	LedInput();
     0009 2rrr                      1- 1833     	LCALL	_LedInput
                                    1- 1834     	.line	323, "main.c"; 	}
                                    1- 1835     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 1836     ; exit point of _LED2ON
                                    1- 1838     ;***
                                    1- 1839     ;  pBlock Stats: dbName = C
                                    1- 1840     ;***
                                    1- 1841     ;has an exit
                                    1- 1842     ;functions called:
                                    1- 1843     ;   _delay
                                    1- 1844     ;   _LedInput
                                    1- 1845     ;   _delay
                                    1- 1846     ;   _LedInput
                                    1- 1847     ;1 compiler assigned register :
                                    1- 1848     ;   r0x103E
                                    1- 1849     ;; Starting pCode block
                                    1- 1850     .segment "code"; module=main, function=_LED1ON
     0000                           1- 1852     _LED1ON:
                                    1- 1853     ; 2 exit points
                                    1- 1854     	.line	311, "main.c"; 	IOSTA &= 0XFE;
     0000 001r                      1- 1855     	IOSTR	_IOSTA
                                    1- 1856     	BANKSEL	r0x103E
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1857     	MOVAR	r0x103E
     0003 1Crr                      1- 1858     	BCR	r0x103E,0
     0004 01rr                      1- 1859     	MOVR	r0x103E,W
     0005 000r                      1- 1860     	IOST	_IOSTA
                                    1- 1861     	.line	312, "main.c"; 	PORTA |= 0X01;
     0006 18rr                      1- 1862     	BSR	_PORTA,0
                                    1- 1863     	.line	313, "main.c"; 	delay(100);
     0007 2164                      1- 1864     	MOVIA	0x64
     0008 2rrr                      1- 1865     	LCALL	_delay
                                    1- 1866     	.line	314, "main.c"; 	LedInput();
     0009 2rrr                      1- 1867     	LCALL	_LedInput
                                    1- 1868     	.line	315, "main.c"; 	}
                                    1- 1869     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 1870     ; exit point of _LED1ON
                                    1- 1872     ;***
                                    1- 1873     ;  pBlock Stats: dbName = C
                                    1- 1874     ;***
                                    1- 1875     ;has an exit
                                    1- 1876     ;1 compiler assigned register :
                                    1- 1877     ;   r0x1039
                                    1- 1878     ;; Starting pCode block
                                    1- 1879     .segment "code"; module=main, function=_LedInput
     0000                           1- 1881     _LedInput:
                                    1- 1882     ; 2 exit points
                                    1- 1883     	.line	303, "main.c"; 	IOSTA |= 0x83;
     0000 001r                      1- 1884     	IOSTR	_IOSTA
                                    1- 1885     	BANKSEL	r0x1039
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1886     	MOVAR	r0x1039
     0003 2183                      1- 1887     	MOVIA	0x83
     0004 11rr                      1- 1888     	IORAR	r0x1039,F
     0005 01rr                      1- 1889     	MOVR	r0x1039,W
     0006 000r                      1- 1890     	IOST	_IOSTA
                                    1- 1891     	.line	304, "main.c"; 	IOSTB |= 0x08;
     0007 001r                      1- 1892     	IOSTR	_IOSTB
     0008 00rr                      1- 1893     	MOVAR	r0x1039
     0009 19rr                      1- 1894     	BSR	r0x1039,3
     000A 01rr                      1- 1895     	MOVR	r0x1039,W
     000B 000r                      1- 1896     	IOST	_IOSTB
                                    1- 1897     	.line	305, "main.c"; 	PORTA &= 0x7C;
     000C 217C                      1- 1898     	MOVIA	0x7c
     000D 10rr                      1- 1899     	ANDAR	_PORTA,F
                                    1- 1900     	.line	306, "main.c"; 	PORTB &= 0xF7;
     000E 1Drr                      1- 1901     	BCR	_PORTB,3
                                    1- 1902     	.line	307, "main.c"; 	}
                                    1- 1903     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 1904     ; exit point of _LedInput
                                    1- 1906     ;***
                                    1- 1907     ;  pBlock Stats: dbName = C
                                    1- 1908     ;***
                                    1- 1909     ;has an exit
                                    1- 1910     ;functions called:
                                    1- 1911     ;   _LedInput
                                    1- 1912     ;   _LedInput
                                    1- 1913     ;   _LED4ON
                                    1- 1914     ;   _LED3ON
                                    1- 1915     ;   _LED2ON
                                    1- 1916     ;   _LED1ON
                                    1- 1917     ;   _LedInput
                                    1- 1918     ;   _LedInput
                                    1- 1919     ;   _LED4ON
                                    1- 1920     ;   _LED3ON
                                    1- 1921     ;   _LED2ON
                                    1- 1922     ;   _LED1ON
                                    1- 1923     ;; Starting pCode block
                                    1- 1924     .segment "code"; module=main, function=_ledShow
     0000                           1- 1926     _ledShow:
                                    1- 1927     ; 2 exit points
                                    1- 1928     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1- 1929     	.line	274, "main.c"; 	if((overCount >= 10 || lowBat == 1 )&& workStep > 0)
     0000 210A                      1- 1930     	MOVIA	0x0a
                                    1- 1931     	BANKSEL	_overCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1932     	SUBAR	_overCount,W
     0003 0C03                      1- 1933     	BTRSC	STATUS,0
     0004 3rrr                      1- 1934     	LGOTO	_00254_DS_
                                    1- 1935     	BANKSEL	_lowBat
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1936     	MOVR	_lowBat,W
     0007 2401                      1- 1937     	XORIA	0x01
     0008 0903                      1- 1938     	BTRSS	STATUS,2
     0009 3rrr                      1- 1939     	LGOTO	_00252_DS_
     000A                           1- 1940     _00254_DS_:
                                    1- 1941     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1942     	MOVR	_workStep,W
     000C 0D03                      1- 1943     	BTRSC	STATUS,2
     000D 3rrr                      1- 1944     	LGOTO	_00252_DS_
                                    1- 1945     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 1946     	.line	276, "main.c"; 	if(count1s < 50)
     000E 2132                      1- 1947     	MOVIA	0x32
                                    1- 1948     	BANKSEL	_count1s
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1- 1949     	SUBAR	_count1s,W
     0011 0C03                      1- 1950     	BTRSC	STATUS,0
     0012 3rrr                      1- 1951     	LGOTO	_00249_DS_
                                    1- 1952     	.line	277, "main.c"; 	ledStep = workStep;
                                    1- 1953     	BANKSEL	_workStep
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1954     	MOVR	_workStep,W
                                    1- 1955     	BANKSEL	_ledStep
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 00rr                      1- 1956     	MOVAR	_ledStep
     0017 3rrr                      1- 1957     	LGOTO	_00252_DS_
     0018                           1- 1958     _00249_DS_:
                                    1- 1959     	.line	279, "main.c"; 	ledStep = 0;
                                    1- 1960     	BANKSEL	_ledStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1- 1961     	CLRR	_ledStep
     001A                           1- 1962     _00252_DS_:
                                    1- 1963     	.line	281, "main.c"; 	LedInput();
     001A 2rrr                      1- 1964     	LCALL	_LedInput
                                    1- 1965     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1966     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 1967     	.line	282, "main.c"; 	switch(ledStep)
     001B 2105                      1- 1968     	MOVIA	0x05
                                    1- 1969     	BANKSEL	_ledStep
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 04rr                      1- 1970     	SUBAR	_ledStep,W
     001E 0C03                      1- 1971     	BTRSC	STATUS,0
     001F 3rrr                      1- 1972     	LGOTO	_00261_DS_
     0020 21rr                      1- 1973     	MOVIA	((_00278_DS_ >> 8) & 0xff)
     0021 008A                      1- 1974     	MOVAR	PCHBUF
     0022 01rr                      1- 1975     	MOVR	_ledStep,W
     0023 25rr                      1- 1976     	ADDIA	_00278_DS_
     0024 0C03                      1- 1977     	BTRSC	STATUS,0
     0025 058A                      1- 1978     	INCR	PCHBUF,F
     0026 0082                      1- 1979     	MOVAR	PCL
     0027                           1- 1980     _00278_DS_:
     0027 3rrr                      1- 1981     	LGOTO	_00255_DS_
     0028 3rrr                      1- 1982     	LGOTO	_00259_DS_
     0029 3rrr                      1- 1983     	LGOTO	_00258_DS_
     002A 3rrr                      1- 1984     	LGOTO	_00257_DS_
     002B 3rrr                      1- 1985     	LGOTO	_00256_DS_
     002C                           1- 1986     _00255_DS_:
                                    1- 1987     	.line	285, "main.c"; 	LedInput();
     002C 2rrr                      1- 1988     	LCALL	_LedInput
                                    1- 1989     	.line	286, "main.c"; 	break;
     002D 3rrr                      1- 1990     	LGOTO	_00261_DS_
     002E                           1- 1991     _00256_DS_:
                                    1- 1992     	.line	288, "main.c"; 	LED4ON();
     002E 2rrr                      1- 1993     	LCALL	_LED4ON
     002F                           1- 1994     _00257_DS_:
                                    1- 1995     	.line	290, "main.c"; 	LED3ON();
     002F 2rrr                      1- 1996     	LCALL	_LED3ON
     0030                           1- 1997     _00258_DS_:
                                    1- 1998     	.line	292, "main.c"; 	LED2ON();
     0030 2rrr                      1- 1999     	LCALL	_LED2ON
     0031                           1- 2000     _00259_DS_:
                                    1- 2001     	.line	294, "main.c"; 	LED1ON();
     0031 2rrr                      1- 2002     	LCALL	_LED1ON
     0032                           1- 2003     _00261_DS_:
                                    1- 2004     	.line	297, "main.c"; 	}
                                    1- 2005     	RETURN	
     0032 0010                      3-   26 m1      ret
                                    1- 2006     ; exit point of _ledShow
                                    1- 2008     ;***
                                    1- 2009     ;  pBlock Stats: dbName = C
                                    1- 2010     ;***
                                    1- 2011     ;has an exit
                                    1- 2012     ;; Starting pCode block
                                    1- 2013     .segment "code"; module=main, function=_initSys
     0000                           1- 2015     _initSys:
                                    1- 2016     ; 2 exit points
                                    1- 2017     	.line	243, "main.c"; 	DISI();
     0000 0013                      1- 2018     	DISI
                                    1- 2019     	.line	244, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input;
     0001 2178                      1- 2020     	MOVIA	0x78
     0002 000r                      1- 2021     	IOST	_IOSTA
                                    1- 2022     	.line	245, "main.c"; 	IOSTB = C_PB0_Input | C_PB1_Input;
     0003 2103                      1- 2023     	MOVIA	0x03
     0004 000r                      1- 2024     	IOST	_IOSTB
                                    1- 2025     	.line	246, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2026     	CLRR	_PORTB
                                    1- 2027     	.line	247, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1- 2028     	CLRR	_PORTA
                                    1- 2029     	.line	248, "main.c"; 	APHCON = 0x9F;
     0007 219F                      1- 2030     	MOVIA	0x9f
     0008 000r                      1- 2031     	IOST	_APHCON
                                    1- 2032     	.line	249, "main.c"; 	BPHCON = 0xFF;
     0009 21FF                      1- 2033     	MOVIA	0xff
     000A 00rr                      1- 2034     	MOVAR	_BPHCON
                                    1- 2035     	.line	250, "main.c"; 	ABPLCON = 0xDF;
     000B 21DF                      1- 2036     	MOVIA	0xdf
     000C 00rr                      1- 2037     	MOVAR	_ABPLCON
                                    1- 2038     	.line	252, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000D 2101                      1- 2039     	MOVIA	0x01
     000E 00rr                      1- 2040     	MOVAR	_INTE
                                    1- 2041     	.line	254, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1- 2042     	CLRA	
     0010 000r                      1- 2043     	IOST	_PCON1
                                    1- 2044     	.line	256, "main.c"; 	TMR0 = 55;
     0011 2137                      1- 2045     	MOVIA	0x37
     0012 00rr                      1- 2046     	MOVAR	_TMR0
                                    1- 2047     	.line	257, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0013 0200                      1- 2048     	CLRA	
     0014 0003                      1- 2049     	T0MD	
                                    1- 2050     	.line	259, "main.c"; 	PCON1 = C_TMR0_En;
     0015 2101                      1- 2051     	MOVIA	0x01
     0016 000r                      1- 2052     	IOST	_PCON1
                                    1- 2053     	.line	262, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 2054     	MOVIA	0x98
     0018 00rr                      1- 2055     	MOVAR	_PCON
                                    1- 2056     	.line	265, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 2057     	MOVIA	0x01
     001A 000r                      1- 2058     	IOST	_PCON1
                                    1- 2059     	.line	266, "main.c"; 	ENI();
     001B 0004                      1- 2060     	ENI
                                    1- 2061     	.line	267, "main.c"; 	}
                                    1- 2062     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1- 2063     ; exit point of _initSys
                                    1- 2065     ;***
                                    1- 2066     ;  pBlock Stats: dbName = C
                                    1- 2067     ;***
                                    1- 2068     ;has an exit
                                    1- 2069     ;functions called:
                                    1- 2070     ;   _pwmStop
                                    1- 2071     ;   _pwmStop
                                    1- 2072     ;; Starting pCode block
                                    1- 2073     .segment "code"; module=main, function=_powerOff
     0000                           1- 2075     _powerOff:
                                    1- 2076     ; 2 exit points
                                    1- 2077     	.line	233, "main.c"; 	workStep = 0;
                                    1- 2078     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 2079     	CLRR	_workStep
                                    1- 2080     	.line	234, "main.c"; 	pwmStop();
     0002 2rrr                      1- 2081     	LCALL	_pwmStop
                                    1- 2082     	.line	235, "main.c"; 	ledStep = 5;
     0003 2105                      1- 2083     	MOVIA	0x05
                                    1- 2084     	BANKSEL	_ledStep
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 2085     	MOVAR	_ledStep
                                    1- 2086     	.line	236, "main.c"; 	workStartFlag = 2;
     0006 2102                      1- 2087     	MOVIA	0x02
                                    1- 2088     	BANKSEL	_workStartFlag
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 2089     	MOVAR	_workStartFlag
                                    1- 2090     	.line	237, "main.c"; 	}
                                    1- 2091     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1- 2092     ; exit point of _powerOff
                                    1- 2094     ;***
                                    1- 2095     ;  pBlock Stats: dbName = C
                                    1- 2096     ;***
                                    1- 2097     ;has an exit
                                    1- 2098     ;functions called:
                                    1- 2099     ;   _keyRead
                                    1- 2100     ;   _powerOff
                                    1- 2101     ;   _pwmInit
                                    1- 2102     ;   _powerOff
                                    1- 2103     ;   _pwmInit
                                    1- 2104     ;   _keyRead
                                    1- 2105     ;   _powerOff
                                    1- 2106     ;   _pwmInit
                                    1- 2107     ;   _powerOff
                                    1- 2108     ;   _pwmInit
                                    1- 2109     ;1 compiler assigned register :
                                    1- 2110     ;   r0x103F
                                    1- 2111     ;; Starting pCode block
                                    1- 2112     .segment "code"; module=main, function=_keyCtr
                                    1- 2114     ;local variable name mapping:
     0000                           1- 2116     _keyCtr:
                                    1- 2117     ; 2 exit points
                                    1- 2118     	.line	169, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
     0000 07rr                      1- 2119     	COMR	_PORTA,W
                                    1- 2120     	BANKSEL	r0x103F
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2121     	MOVAR	r0x103F
     0003 2140                      1- 2122     	MOVIA	0x40
     0004 10rr                      1- 2123     	ANDAR	r0x103F,F
     0005 01rr                      1- 2124     	MOVR	r0x103F,W
     0006 2rrr                      1- 2125     	LCALL	_keyRead
                                    1- 2126     	BANKSEL	r0x103F
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 2127     	MOVAR	r0x103F
                                    1- 2128     	.line	170, "main.c"; 	if(kclick == 1)
     0009 2401                      1- 2129     	XORIA	0x01
     000A 0903                      1- 2130     	BTRSS	STATUS,2
     000B 3rrr                      1- 2131     	LGOTO	_00233_DS_
                                    1- 2132     	.line	172, "main.c"; 	count500ms = 0;
                                    1- 2133     	BANKSEL	_count500ms
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1- 2134     	CLRR	_count500ms
                                    1- 2135     	.line	174, "main.c"; 	ledTime = 0;
                                    1- 2136     	BANKSEL	_ledTime
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 2137     	CLRR	_ledTime
                                    1- 2138     	.line	175, "main.c"; 	if(++workStep > 4)
                                    1- 2139     	BANKSEL	_workStep
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 05rr                      1- 2140     	INCR	_workStep,F
                                    1- 2141     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2142     ;;unsigned compare: left >= lit (0x5=5), size=1
     0012 2105                      1- 2143     	MOVIA	0x05
     0013 04rr                      1- 2144     	SUBAR	_workStep,W
     0014 0C03                      1- 2145     	BTRSC	STATUS,0
                                    1- 2146     	.line	176, "main.c"; 	workStep = 0;
     0015 02rr                      1- 2147     	CLRR	_workStep
                                    1- 2148     	.line	178, "main.c"; 	if(workStep == 0)
     0016 01rr                      1- 2149     	MOVR	_workStep,W
     0017 0903                      1- 2150     	BTRSS	STATUS,2
     0018 3rrr                      1- 2151     	LGOTO	_00215_DS_
                                    1- 2152     	.line	180, "main.c"; 	powerOff();
     0019 2rrr                      1- 2153     	LCALL	_powerOff
     001A 3rrr                      1- 2154     	LGOTO	_00216_DS_
     001B                           1- 2155     _00215_DS_:
                                    1- 2156     	.line	182, "main.c"; 	else if(workStep == 1)
                                    1- 2157     	BANKSEL	_workStep
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 2158     	MOVR	_workStep,W
     001D 2401                      1- 2159     	XORIA	0x01
     001E 0903                      1- 2160     	BTRSS	STATUS,2
     001F 3rrr                      1- 2161     	LGOTO	_00212_DS_
                                    1- 2162     	.line	184, "main.c"; 	maxDuty = 105;
     0020 2169                      1- 2163     	MOVIA	0x69
                                    1- 2164     	BANKSEL	_maxDuty
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 00rr                      1- 2165     	MOVAR	_maxDuty
                                    1- 2166     	.line	185, "main.c"; 	currentDuty = 125;
     0023 217D                      1- 2167     	MOVIA	0x7d
                                    1- 2168     	BANKSEL	_currentDuty
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 2169     	MOVAR	_currentDuty
     0026 3rrr                      1- 2170     	LGOTO	_00216_DS_
     0027                           1- 2171     _00212_DS_:
                                    1- 2172     	.line	187, "main.c"; 	else if(workStep == 2)
                                    1- 2173     	BANKSEL	_workStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 2174     	MOVR	_workStep,W
     0029 2402                      1- 2175     	XORIA	0x02
     002A 0903                      1- 2176     	BTRSS	STATUS,2
     002B 3rrr                      1- 2177     	LGOTO	_00209_DS_
                                    1- 2178     	.line	188, "main.c"; 	maxDuty = 113;
     002C 2171                      1- 2179     	MOVIA	0x71
                                    1- 2180     	BANKSEL	_maxDuty
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 2181     	MOVAR	_maxDuty
     002F 3rrr                      1- 2182     	LGOTO	_00216_DS_
     0030                           1- 2183     _00209_DS_:
                                    1- 2184     	.line	189, "main.c"; 	else if(workStep == 3)
                                    1- 2185     	BANKSEL	_workStep
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1- 2186     	MOVR	_workStep,W
     0032 2403                      1- 2187     	XORIA	0x03
     0033 0903                      1- 2188     	BTRSS	STATUS,2
     0034 3rrr                      1- 2189     	LGOTO	_00206_DS_
                                    1- 2190     	.line	190, "main.c"; 	maxDuty = 120;
     0035 2178                      1- 2191     	MOVIA	0x78
                                    1- 2192     	BANKSEL	_maxDuty
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 2193     	MOVAR	_maxDuty
     0038 3rrr                      1- 2194     	LGOTO	_00216_DS_
     0039                           1- 2195     _00206_DS_:
                                    1- 2196     	.line	191, "main.c"; 	else if(workStep == 4)
                                    1- 2197     	BANKSEL	_workStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 2198     	MOVR	_workStep,W
     003B 2404                      1- 2199     	XORIA	0x04
     003C 0903                      1- 2200     	BTRSS	STATUS,2
     003D 3rrr                      1- 2201     	LGOTO	_00216_DS_
                                    1- 2202     	.line	192, "main.c"; 	maxDuty = 128;
     003E 2180                      1- 2203     	MOVIA	0x80
                                    1- 2204     	BANKSEL	_maxDuty
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 00rr                      1- 2205     	MOVAR	_maxDuty
     0041                           1- 2206     _00216_DS_:
                                    1- 2207     	.line	193, "main.c"; 	if(workStep > 0)
                                    1- 2208     	BANKSEL	_workStep
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 2209     	MOVR	_workStep,W
     0043 0D03                      1- 2210     	BTRSC	STATUS,2
     0044 3rrr                      1- 2211     	LGOTO	_00226_DS_
                                    1- 2212     	.line	195, "main.c"; 	if(pwStep > 0 && pwStep < 3)
                                    1- 2213     	BANKSEL	_pwStep
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1- 2214     	MOVR	_pwStep,W
     0047 0D03                      1- 2215     	BTRSC	STATUS,2
     0048 3rrr                      1- 2216     	LGOTO	_00220_DS_
                                    1- 2217     ;;unsigned compare: left < lit (0x3=3), size=1
     0049 2103                      1- 2218     	MOVIA	0x03
     004A 04rr                      1- 2219     	SUBAR	_pwStep,W
     004B 0C03                      1- 2220     	BTRSC	STATUS,0
     004C 3rrr                      1- 2221     	LGOTO	_00220_DS_
                                    1- 2222     ;;unsigned compare: left < lit (0x7C=124), size=1
                                    1- 2223     	.line	197, "main.c"; 	if(maxDuty < 124)
     004D 217C                      1- 2224     	MOVIA	0x7c
                                    1- 2225     	BANKSEL	_maxDuty
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 04rr                      1- 2226     	SUBAR	_maxDuty,W
     0050 0C03                      1- 2227     	BTRSC	STATUS,0
     0051 3rrr                      1- 2228     	LGOTO	_00220_DS_
                                    1- 2229     	.line	198, "main.c"; 	maxDuty = maxDuty + 4;
     0052 2104                      1- 2230     	MOVIA	0x04
     0053 03rr                      1- 2231     	ADDAR	_maxDuty,F
     0054                           1- 2232     _00220_DS_:
                                    1- 2233     	.line	200, "main.c"; 	if(workStep == 1)
                                    1- 2234     	BANKSEL	_workStep
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 01rr                      1- 2235     	MOVR	_workStep,W
     0056 2401                      1- 2236     	XORIA	0x01
     0057 0903                      1- 2237     	BTRSS	STATUS,2
     0058 3rrr                      1- 2238     	LGOTO	_00223_DS_
                                    1- 2239     	.line	202, "main.c"; 	PWM2DUTY = 125;
     0059 217D                      1- 2240     	MOVIA	0x7d
     005A 00rr                      1- 2241     	SFUN	_PWM2DUTY
     005B 3rrr                      1- 2242     	LGOTO	_00224_DS_
     005C                           1- 2243     _00223_DS_:
                                    1- 2244     	.line	206, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2245     	BANKSEL	_maxDuty
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 2246     	MOVR	_maxDuty,W
     005E 00rr                      1- 2247     	SFUN	_PWM2DUTY
     005F                           1- 2248     _00224_DS_:
                                    1- 2249     	.line	208, "main.c"; 	pwmInit();
     005F 2rrr                      1- 2250     	LCALL	_pwmInit
     0060                           1- 2251     _00226_DS_:
                                    1- 2252     	.line	210, "main.c"; 	ledStep = workStep;
                                    1- 2253     	BANKSEL	_workStep
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1- 2254     	MOVR	_workStep,W
                                    1- 2255     	BANKSEL	_ledStep
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 00rr                      1- 2256     	MOVAR	_ledStep
     0064 3rrr                      1- 2257     	LGOTO	_00235_DS_
     0065                           1- 2258     _00233_DS_:
                                    1- 2259     	.line	212, "main.c"; 	else if(kclick == 2)
                                    1- 2260     	BANKSEL	r0x103F
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 01rr                      1- 2261     	MOVR	r0x103F,W
     0067 2402                      1- 2262     	XORIA	0x02
     0068 0903                      1- 2263     	BTRSS	STATUS,2
     0069 3rrr                      1- 2264     	LGOTO	_00235_DS_
                                    1- 2265     	.line	214, "main.c"; 	if(workStep > 0)
                                    1- 2266     	BANKSEL	_workStep
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 01rr                      1- 2267     	MOVR	_workStep,W
     006C 0D03                      1- 2268     	BTRSC	STATUS,2
     006D 3rrr                      1- 2269     	LGOTO	_00228_DS_
                                    1- 2270     	.line	216, "main.c"; 	powerOff();
     006E 2rrr                      1- 2271     	LCALL	_powerOff
     006F 3rrr                      1- 2272     	LGOTO	_00229_DS_
     0070                           1- 2273     _00228_DS_:
                                    1- 2274     	.line	220, "main.c"; 	workStep = 1;
     0070 2101                      1- 2275     	MOVIA	0x01
                                    1- 2276     	BANKSEL	_workStep
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 00rr                      1- 2277     	MOVAR	_workStep
                                    1- 2278     	.line	221, "main.c"; 	PWM2DUTY = 125;
     0073 217D                      1- 2279     	MOVIA	0x7d
     0074 00rr                      1- 2280     	SFUN	_PWM2DUTY
                                    1- 2281     	.line	222, "main.c"; 	maxDuty = 105;
     0075 2169                      1- 2282     	MOVIA	0x69
                                    1- 2283     	BANKSEL	_maxDuty
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 00rr                      1- 2284     	MOVAR	_maxDuty
                                    1- 2285     	.line	223, "main.c"; 	currentDuty = 125;
     0078 217D                      1- 2286     	MOVIA	0x7d
                                    1- 2287     	BANKSEL	_currentDuty
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 00rr                      1- 2288     	MOVAR	_currentDuty
                                    1- 2289     	.line	224, "main.c"; 	pwmInit();
     007B 2rrr                      1- 2290     	LCALL	_pwmInit
     007C                           1- 2291     _00229_DS_:
                                    1- 2292     	.line	226, "main.c"; 	ledStep = workStep;
                                    1- 2293     	BANKSEL	_workStep
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 01rr                      1- 2294     	MOVR	_workStep,W
                                    1- 2295     	BANKSEL	_ledStep
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 00rr                      1- 2296     	MOVAR	_ledStep
     0080                           1- 2297     _00235_DS_:
                                    1- 2298     	.line	228, "main.c"; 	}
                                    1- 2299     	RETURN	
     0080 0010                      3-   26 m1      ret
                                    1- 2300     ; exit point of _keyCtr
                                    1- 2303     ;	code size estimation:
                                    1- 2304     ;	  823+  191 =  1014 instructions ( 2410 byte)
                                    1- 2306     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002C
_00002_DS_              Label    0000002C
_00003_DS_              Label    00000026
_00004_DS_              Label    00000025
_00005_DS_              Label    00000025
_00106_DS_              Label    00000026
_00112_DS_              Label    00000042
_00119_DS_              Label    00000045
_00121_DS_              Label    00000049
_00134_DS_              Label    00000013
_00135_DS_              Label    0000001C
_00137_DS_              Label    0000002B
_00142_DS_              Label    00000043
_00148_DS_              Label    00000002
_00195_DS_              Label    00000040
_00196_DS_              Label    0000004A
_00206_DS_              Label    00000039
_00209_DS_              Label    00000030
_00212_DS_              Label    00000027
_00215_DS_              Label    0000001B
_00216_DS_              Label    00000041
_00220_DS_              Label    00000054
_00223_DS_              Label    0000005C
_00224_DS_              Label    0000005F
_00226_DS_              Label    00000060
_00228_DS_              Label    00000070
_00229_DS_              Label    0000007C
_00233_DS_              Label    00000065
_00235_DS_              Label    00000080
_00249_DS_              Label    00000018
_00252_DS_              Label    0000001A
_00254_DS_              Label    0000000A
_00255_DS_              Label    0000002C
_00256_DS_              Label    0000002E
_00257_DS_              Label    0000002F
_00258_DS_              Label    00000030
_00259_DS_              Label    00000031
_00261_DS_              Label    00000032
_00278_DS_              Label    00000027
_00305_DS_              Label    0000000C
_00325_DS_              Label    0000001D
_00326_DS_              Label    00000025
_00328_DS_              Label    00000013
_00329_DS_              Label    00000027
_00330_DS_              Label    00000028
_00340_DS_              Label    00000010
_00345_DS_              Label    0000001F
_00347_DS_              Label    0000002A
_00354_DS_              Label    00000004
_00356_DS_              Label    0000000E
_00366_DS_              Label    0000005E
_00372_DS_              Label    00000040
_00373_DS_              Label    00000063
_00377_DS_              Label    00000091
_00378_DS_              Label    00000094
_00386_DS_              Label    000000D2
_00389_DS_              Label    000000C2
_00392_DS_              Label    000000B2
_00395_DS_              Label    00000076
_00397_DS_              Label    000000DD
_00441_DS_              Label    00000038
_00442_DS_              Label    00000047
_00443_DS_              Label    00000050
_00445_DS_              Label    00000070
_00446_DS_              Label    0000007D
_00447_DS_              Label    0000008B
_00448_DS_              Label    0000009B
_00449_DS_              Label    000000A7
_00450_DS_              Label    000000B9
_00451_DS_              Label    000000C9
_00457_DS_              Label    00000039
_00461_DS_              Label    00000055
_00465_DS_              Label    0000004D
_00467_DS_              Label    0000005C
_00484_DS_              Label    00000040
_00491_DS_              Label    0000000E
_00493_DS_              Label    0000002F
_00500_DS_              Label    0000000E
_00502_DS_              Label    0000002F
_00507_DS_              Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBatAD             Label    00000000
_checkOutA              Label    00000000
_chrgCtr                Label    00000000
_chrgTime               Label    00000000
_CMPCR                  Label    00000000
_count1s                Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_count900s              Label    00000000
_currentDuty            Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_F_AIN3_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_fgCount                Label    00000000
_fgCtr                  Label    00000000
_fgPRD                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IO_Init                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_LedInput               Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_ledTime                Label    00000000
_lowBat                 Label    00000000
_lowBatTime             Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_overCount              Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_powerOff               Label    00000000
_preFG                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN3_DATA            Label    00000000
_R_AIN3_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepTime              Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStartFlag          Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    0000005A
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102F                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
r0x103D                 Label    00000000
r0x103E                 Label    00000000
r0x103F                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
