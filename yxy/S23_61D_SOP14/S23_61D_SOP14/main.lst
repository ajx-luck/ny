
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	__moduint
                                    1-   21     	extern	_PORTAbits
                                    1-   22     	extern	_PORTBbits
                                    1-   23     	extern	_PCONbits
                                    1-   24     	extern	_BWUCONbits
                                    1-   25     	extern	_ABPLCONbits
                                    1-   26     	extern	_BPHCONbits
                                    1-   27     	extern	_INTEbits
                                    1-   28     	extern	_INTFbits
                                    1-   29     	extern	_ADMDbits
                                    1-   30     	extern	_ADRbits
                                    1-   31     	extern	_ADVREFHbits
                                    1-   32     	extern	_ADCRbits
                                    1-   33     	extern	_AWUCONbits
                                    1-   34     	extern	_PACONbits
                                    1-   35     	extern	_INTEDGbits
                                    1-   36     	extern	_ANAENbits
                                    1-   37     	extern	_RFCbits
                                    1-   38     	extern	_INTE2bits
                                    1-   39     	extern	_INDF
                                    1-   40     	extern	_TMR0
                                    1-   41     	extern	_PCL
                                    1-   42     	extern	_STATUS
                                    1-   43     	extern	_FSR
                                    1-   44     	extern	_PORTA
                                    1-   45     	extern	_PORTB
                                    1-   46     	extern	_PCON
                                    1-   47     	extern	_BWUCON
                                    1-   48     	extern	_PCHBUF
                                    1-   49     	extern	_ABPLCON
                                    1-   50     	extern	_BPHCON
                                    1-   51     	extern	_INTE
                                    1-   52     	extern	_INTF
                                    1-   53     	extern	_ADMD
                                    1-   54     	extern	_ADR
                                    1-   55     	extern	_ADD
                                    1-   56     	extern	_ADVREFH
                                    1-   57     	extern	_ADCR
                                    1-   58     	extern	_AWUCON
                                    1-   59     	extern	_PACON
                                    1-   60     	extern	_INTEDG
                                    1-   61     	extern	_TMRH
                                    1-   62     	extern	_ANAEN
                                    1-   63     	extern	_RFC
                                    1-   64     	extern	_TM3RH
                                    1-   65     	extern	_INTE2
                                    1-   66     	extern	_TMR1
                                    1-   67     	extern	_T1CR1
                                    1-   68     	extern	_T1CR2
                                    1-   69     	extern	_PWM1DUTY
                                    1-   70     	extern	_PS1CV
                                    1-   71     	extern	_BZ1CR
                                    1-   72     	extern	_IRCR
                                    1-   73     	extern	_TBHP
                                    1-   74     	extern	_TBHD
                                    1-   75     	extern	_TMR2
                                    1-   76     	extern	_T2CR1
                                    1-   77     	extern	_T2CR2
                                    1-   78     	extern	_PWM2DUTY
                                    1-   79     	extern	_PS2CV
                                    1-   80     	extern	_BZ2CR
                                    1-   81     	extern	_OSCCR
                                    1-   82     	extern	_TMR3
                                    1-   83     	extern	_T3CR1
                                    1-   84     	extern	_T3CR2
                                    1-   85     	extern	_PWM3DUTY
                                    1-   86     	extern	_PS3CV
                                    1-   87     	extern	_BZ3CR
                                    1-   88     	extern	_IOSTA
                                    1-   89     	extern	_IOSTB
                                    1-   90     	extern	_APHCON
                                    1-   91     	extern	_PS0CV
                                    1-   92     	extern	_BODCON
                                    1-   93     	extern	_CMPCR
                                    1-   94     	extern	_PCON1
                                    1-   95     	extern	_T0MD
                                    1-   96     	extern	___sdcc_saved_fsr
                                    1-   97     	extern	___sdcc_saved_stk00
                                    1-   98     	extern	___sdcc_saved_stk01
                                    1-   99     	extern	__mulchar
                                    1-  100     	extern	__nyc_ny8_startup
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     ; global declarations
                                    1-  103     ;--------------------------------------------------------
                                    1-  104     	extern	_F_wait_eoc
                                    1-  105     	extern	_F_AIN2_Convert
                                    1-  106     	extern	_F_AIN3_Convert
                                    1-  107     	extern	_F_AIN4_Convert
                                    1-  108     	extern	_checkOutA
                                    1-  109     	extern	_checkChrgV
                                    1-  110     	extern	_checkBatAD
                                    1-  111     	extern	_initAD
                                    1-  112     	extern	_delay
                                    1-  113     	extern	_chrgCtr
                                    1-  114     	extern	_keyRead
                                    1-  115     	extern	_gotoSleep
                                    1-  116     	extern	_pwmStop
                                    1-  117     	extern	_pwmInit
                                    1-  118     	extern	_pwm1Stop
                                    1-  119     	extern	_pwm1Init
                                    1-  120     	extern	_LED6ON
                                    1-  121     	extern	_LED5ON
                                    1-  122     	extern	_LED4ON
                                    1-  123     	extern	_LED3ON
                                    1-  124     	extern	_LED2ON
                                    1-  125     	extern	_LED1ON
                                    1-  126     	extern	_LedInput
                                    1-  127     	extern	_ledShow
                                    1-  128     	extern	_initSys
                                    1-  129     	extern	_powerOff
                                    1-  130     	extern	_keyCtr
                                    1-  131     	extern	_isr
                                    1-  132     	extern	_main
                                    1-  133     	extern	_Status
                                    1-  134     	extern	_duty
                                    1-  135     	extern	_intCount
                                    1-  136     	extern	_count500ms
                                    1-  137     	extern	_keyCount
                                    1-  138     	extern	_workStep
                                    1-  139     	extern	_ledStep
                                    1-  140     	extern	_fgCount
                                    1-  141     	extern	_fgPRD
                                    1-  142     	extern	_preFG
                                    1-  143     	extern	_maxDuty
                                    1-  144     	extern	_pwStep
                                    1-  145     	extern	_R_AIN4_DATA
                                    1-  146     	extern	_R_AIN4_DATA_LB
                                    1-  147     	extern	_R_AIN3_DATA
                                    1-  148     	extern	_R_AIN3_DATA_LB
                                    1-  149     	extern	_R_AIN2_DATA
                                    1-  150     	extern	_R_AIN2_DATA_LB
                                    1-  151     	extern	_chrgTime
                                    1-  152     	extern	_startStep
                                    1-  153     	extern	_sleepTime
                                    1-  154     	extern	_count200ms
                                    1-  155     	extern	_count1s
                                    1-  156     	extern	_count900s
                                    1-  157     	extern	_lowBatTime
                                    1-  158     	extern	_ledTime
                                    1-  159     	extern	_overCount
                                    1-  160     	extern	_chrgCount
                                    1-  161     	extern	_ledLightTime
                                    1-  162     	extern	_currentDuty
                                    1-  163     	extern	_fullCount
                                    1-  164     	extern	_shanshuoTime
                                    1-  165     	extern	_firstTime
                                    1-  166     	extern	_tempDuty
                                    1-  167     	extern	_lowCount
                                    1-  168     	extern	_cDuty
                                    1-  169     	extern	_deadTime
                                    1-  170     	extern	_ssTime
                                    1-  171     	extern	_tempLedStep
                                    1-  172     	extern	_debug
                                    1-  174     	extern PSAVE
                                    1-  175     	extern SSAVE
                                    1-  176     	extern WSAVE
                                    1-  177     	extern STK02
                                    1-  178     	extern STK01
                                    1-  179     	extern STK00
                                    1-  181     .segment "uninit", 0x20000040
 20000040                           1-  182     PSAVE:
                                    1-  183     	.res 1
 20000041                           1-  184     SSAVE:
                                    1-  185     	.res 1
 20000042                           1-  186     WSAVE:
                                    1-  187     	.res 1
 20000043                           1-  188     STK02:
                                    1-  189     	.res 1
 20000044                           1-  190     STK01:
                                    1-  191     	.res 1
 20000045                           1-  192     STK00:
                                    1-  193     	.res 1
                                    1-  195     ;--------------------------------------------------------
                                    1-  196     ; global definitions
                                    1-  197     ;--------------------------------------------------------
                                    1-  198     .segment "uninit"
     0000                           1-  199     _R_AIN4_DATA:
                                    1-  200     	.res	2
                                    1-  203     .segment "uninit"
     0000                           1-  204     _R_AIN4_DATA_LB:
                                    1-  205     	.res	1
                                    1-  208     .segment "uninit"
     0000                           1-  209     _R_AIN3_DATA:
                                    1-  210     	.res	2
                                    1-  213     .segment "uninit"
     0000                           1-  214     _R_AIN3_DATA_LB:
                                    1-  215     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     _R_AIN2_DATA:
                                    1-  220     	.res	2
                                    1-  223     .segment "uninit"
     0000                           1-  224     _R_AIN2_DATA_LB:
                                    1-  225     	.res	1
                                    1-  228     ;--------------------------------------------------------
                                    1-  229     ; absolute symbol definitions
                                    1-  230     ;--------------------------------------------------------
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     ; compiler-defined variables
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     .segment "uninit"
     0000                           1-  235     r0x105D:
                                    1-  236     	.res	1
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x105C:
                                    1-  239     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     r0x105B:
                                    1-  242     	.res	1
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x1052:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x105A:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x1059:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x1058:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x1057:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x1056:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x1055:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x104F:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x1054:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x1053:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x1051:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x1050:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x102F:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x1030:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x104D:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x104E:
                                    1-  290     	.res	1
                                    1-  291     .segment "uninit"
     0000                           1-  292     r0x1049:
                                    1-  293     	.res	1
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x104A:
                                    1-  296     	.res	1
                                    1-  297     .segment "uninit"
     0000                           1-  298     r0x1043:
                                    1-  299     	.res	1
                                    1-  300     .segment "uninit"
     0000                           1-  301     r0x1046:
                                    1-  302     	.res	1
                                    1-  303     .segment "uninit"
     0000                           1-  304     r0x103D:
                                    1-  305     	.res	1
                                    1-  306     .segment "uninit"
     0000                           1-  307     r0x103E:
                                    1-  308     	.res	1
                                    1-  309     .segment "uninit"
     0000                           1-  310     r0x103F:
                                    1-  311     	.res	1
                                    1-  312     .segment "uninit"
     0000                           1-  313     r0x1042:
                                    1-  314     	.res	1
                                    1-  315     .segment "uninit"
     0000                           1-  316     r0x1037:
                                    1-  317     	.res	1
                                    1-  318     .segment "uninit"
     0000                           1-  319     r0x1038:
                                    1-  320     	.res	1
                                    1-  321     .segment "uninit"
     0000                           1-  322     r0x1039:
                                    1-  323     	.res	1
                                    1-  324     .segment "uninit"
     0000                           1-  325     r0x103C:
                                    1-  326     	.res	1
                                    1-  327     .segment "uninit"
     0000                           1-  328     r0x1031:
                                    1-  329     	.res	1
                                    1-  330     .segment "uninit"
     0000                           1-  331     r0x1032:
                                    1-  332     	.res	1
                                    1-  333     .segment "uninit"
     0000                           1-  334     r0x1033:
                                    1-  335     	.res	1
                                    1-  336     .segment "uninit"
     0000                           1-  337     r0x1036:
                                    1-  338     	.res	1
                                    1-  339     ;--------------------------------------------------------
                                    1-  340     ; initialized data
                                    1-  341     ;--------------------------------------------------------
                                    1-  343     .segment "idata"
     0000                           1-  344     _Status:
     0000 0000                      1-  345     	dw	0x00
                                    1-  349     .segment "idata"
     0000                           1-  350     _duty:
     0000 0000 0000                 1-  351     	dw	0x00, 0x00
                                    1-  355     .segment "idata"
     0000                           1-  356     _intCount:
     0000 0000                      1-  357     	dw	0x00
                                    1-  361     .segment "idata"
     0000                           1-  362     _count500ms:
     0000 0000                      1-  363     	dw	0x00
                                    1-  367     .segment "idata"
     0000                           1-  368     _keyCount:
     0000 0000                      1-  369     	dw	0x00
                                    1-  373     .segment "idata"
     0000                           1-  374     _workStep:
     0000 0000                      1-  375     	dw	0x00
                                    1-  379     .segment "idata"
     0000                           1-  380     _ledStep:
     0000 0000                      1-  381     	dw	0x00
                                    1-  385     .segment "idata"
     0000                           1-  386     _fgCount:
     0000 0000 0000                 1-  387     	dw	0x00, 0x00
                                    1-  391     .segment "idata"
     0000                           1-  392     _fgPRD:
     0000 0000 0000                 1-  393     	dw	0x00, 0x00
                                    1-  397     .segment "idata"
     0000                           1-  398     _preFG:
     0000 0000                      1-  399     	dw	0x00
                                    1-  403     .segment "idata"
     0000                           1-  404     _maxDuty:
     0000 0000                      1-  405     	dw	0x00
                                    1-  409     .segment "idata"
     0000                           1-  410     _pwStep:
     0000 0000                      1-  411     	dw	0x00
                                    1-  415     .segment "idata"
     0000                           1-  416     _chrgTime:
     0000 0000 0000                 1-  417     	dw	0x00, 0x00
                                    1-  421     .segment "idata"
     0000                           1-  422     _startStep:
     0000 0000                      1-  423     	dw	0x00
                                    1-  427     .segment "idata"
     0000                           1-  428     _sleepTime:
     0000 0000 0000                 1-  429     	dw	0x00, 0x00
                                    1-  433     .segment "idata"
     0000                           1-  434     _count200ms:
     0000 0000                      1-  435     	dw	0x00
                                    1-  439     .segment "idata"
     0000                           1-  440     _count1s:
     0000 0000                      1-  441     	dw	0x00
                                    1-  445     .segment "idata"
     0000                           1-  446     _count900s:
     0000 0000 0000                 1-  447     	dw	0x00, 0x00
                                    1-  451     .segment "idata"
     0000                           1-  452     _lowBatTime:
     0000 0000                      1-  453     	dw	0x00
                                    1-  457     .segment "idata"
     0000                           1-  458     _ledTime:
     0000 0000                      1-  459     	dw	0x00
                                    1-  463     .segment "idata"
     0000                           1-  464     _overCount:
     0000 0000                      1-  465     	dw	0x00
                                    1-  469     .segment "idata"
     0000                           1-  470     _chrgCount:
     0000 0000                      1-  471     	dw	0x00
                                    1-  475     .segment "idata"
     0000                           1-  476     _ledLightTime:
     0000 0000                      1-  477     	dw	0x00
                                    1-  481     .segment "idata"
     0000                           1-  482     _currentDuty:
     0000 0000                      1-  483     	dw	0x00
                                    1-  487     .segment "idata"
     0000                           1-  488     _fullCount:
     0000 0000                      1-  489     	dw	0x00
                                    1-  493     .segment "idata"
     0000                           1-  494     _shanshuoTime:
     0000 0000                      1-  495     	dw	0x00
                                    1-  499     .segment "idata"
     0000                           1-  500     _firstTime:
     0000 0000                      1-  501     	dw	0x00
                                    1-  505     .segment "idata"
     0000                           1-  506     _tempDuty:
     0000 0000                      1-  507     	dw	0x00
                                    1-  511     .segment "idata"
     0000                           1-  512     _lowCount:
     0000 0000                      1-  513     	dw	0x00
                                    1-  517     .segment "idata"
     0000                           1-  518     _cDuty:
     0000 0000                      1-  519     	dw	0x00
                                    1-  523     .segment "idata"
     0000                           1-  524     _deadTime:
     0000 0000 0000                 1-  525     	dw	0x00, 0x00
                                    1-  529     .segment "idata"
     0000                           1-  530     _ssTime:
     0000 0000 0000                 1-  531     	dw	0x00, 0x00
                                    1-  535     .segment "idata"
     0000                           1-  536     _tempLedStep:
     0000 0000                      1-  537     	dw	0x00
                                    1-  541     .segment "idata"
     0000                           1-  542     _debug:
     0000 0000                      1-  543     	dw	0x00
                                    1-  546     ;--------------------------------------------------------
                                    1-  547     ; overlayable items in internal ram 
                                    1-  548     ;--------------------------------------------------------
                                    1-  549     ;	udata_ovr
                                    1-  550     ;--------------------------------------------------------
                                    1-  551     ; reset vector 
                                    1-  552     ;--------------------------------------------------------
                                    1-  553     ORG	0x0000
     0000 3rrr                      1-  554     	LGOTO	__nyc_ny8_startup
                                    1-  555     ;--------------------------------------------------------
                                    1-  556     ; interrupt and initialization code
                                    1-  557     ;--------------------------------------------------------
                                    1-  558     ORG 0x0008
     0008 3rrr                      1-  559     	lgoto	__sdcc_interrupt
                                    1-  561     .segment "code"
     0000                           1-  562     __sdcc_interrupt:
                                    1-  563     ;***
                                    1-  564     ;  pBlock Stats: dbName = I
                                    1-  565     ;***
                                    1-  566     ;2 compiler assigned registers:
                                    1-  567     ;   STK00
                                    1-  568     ;   STK01
                                    1-  569     ;; Starting pCode block
     0000                           1-  570     _isr:
                                    1-  571     ; 0 exit points
                                    1-  572     	.line	112, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  573     	MOVAR	WSAVE
     0001 1503                      1-  574     	SWAPR	STATUS,W
     0002 0283                      1-  575     	CLRR	STATUS
     0003 00rr                      1-  576     	MOVAR	SSAVE
     0004 010A                      1-  577     	MOVR	PCHBUF,W
     0005 028A                      1-  578     	CLRR	PCHBUF
     0006 00rr                      1-  579     	MOVAR	PSAVE
     0007 0104                      1-  580     	MOVR	FSR,W
                                    1-  581     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  582     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  583     	MOVR	STK00,W
                                    1-  584     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  585     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  586     	MOVR	STK01,W
                                    1-  587     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  588     	MOVAR	___sdcc_saved_stk01
                                    1-  589     	.line	114, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  590     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  591     	LGOTO	_00126_DS_
                                    1-  592     	.line	116, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  593     	MOVIA	0x37
     0013 03rr                      1-  594     	ADDAR	_TMR0,F
                                    1-  595     	.line	118, "main.c"; 	if(++intCount >= 100)
                                    1-  596     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  597     	INCR	_intCount,F
                                    1-  598     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  599     	MOVIA	0x64
     0017 04rr                      1-  600     	SUBAR	_intCount,W
     0018 0803                      1-  601     	BTRSS	STATUS,0
     0019 3rrr                      1-  602     	LGOTO	_00126_DS_
                                    1-  603     	.line	120, "main.c"; 	IntFlag = 1;
                                    1-  604     	BANKSEL	_Status
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 18rr                      1-  605     	BSR	_Status,0
                                    1-  606     	.line	121, "main.c"; 	intCount = 0;
                                    1-  607     	BANKSEL	_intCount
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1-  608     	CLRR	_intCount
                                    1-  609     	.line	122, "main.c"; 	if(workStep)
                                    1-  610     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1-  611     	MOVR	_workStep,W
     0020 0D03                      1-  612     	BTRSC	STATUS,2
     0021 3rrr                      1-  613     	LGOTO	_00106_DS_
                                    1-  614     	.line	123, "main.c"; 	++fgCount;
                                    1-  615     	BANKSEL	_fgCount
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  616     	INCR	_fgCount,F
     0024 0D03                      1-  617     	BTRSC	STATUS,2
     0025 05rr                      1-  618     	INCR	(_fgCount + 1),F
     0026                           1-  619     _00106_DS_:
                                    1-  620     	.line	124, "main.c"; 	if(++count500ms >= 40)
                                    1-  621     	BANKSEL	_count500ms
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 05rr                      1-  622     	INCR	_count500ms,F
                                    1-  623     ;;unsigned compare: left < lit (0x28=40), size=1
     0028 2128                      1-  624     	MOVIA	0x28
     0029 04rr                      1-  625     	SUBAR	_count500ms,W
     002A 0C03                      1-  626     	BTRSC	STATUS,0
                                    1-  627     	.line	125, "main.c"; 	count500ms = 0;
     002B 02rr                      1-  628     	CLRR	_count500ms
                                    1-  629     	.line	126, "main.c"; 	if(++count200ms >= 20)
                                    1-  630     	BANKSEL	_count200ms
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  631     	INCR	_count200ms,F
     002E 2114                      1-  632     	MOVIA	0x14
     002F 04rr                      1-  633     	SUBAR	_count200ms,W
     0030 0C03                      1-  634     	BTRSC	STATUS,0
                                    1-  635     	.line	127, "main.c"; 	count200ms = 0;
     0031 02rr                      1-  636     	CLRR	_count200ms
                                    1-  637     	.line	128, "main.c"; 	if(++count1s >= 100)
                                    1-  638     	BANKSEL	_count1s
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 05rr                      1-  639     	INCR	_count1s,F
     0034 2164                      1-  640     	MOVIA	0x64
     0035 04rr                      1-  641     	SUBAR	_count1s,W
     0036 0803                      1-  642     	BTRSS	STATUS,0
     0037 3rrr                      1-  643     	LGOTO	_00126_DS_
                                    1-  644     	.line	130, "main.c"; 	count1s = 0;
     0038 02rr                      1-  645     	CLRR	_count1s
                                    1-  646     	.line	131, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  647     	BANKSEL	_Status
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 09rr                      1-  648     	BTRSS	_Status,3
     003B 3rrr                      1-  649     	LGOTO	_00112_DS_
                                    1-  650     	BANKSEL	_pwStep
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1-  651     	MOVR	_pwStep,W
     003E 2406                      1-  652     	XORIA	0x06
     003F 0903                      1-  653     	BTRSS	STATUS,2
     0040 3rrr                      1-  654     	LGOTO	_00112_DS_
                                    1-  655     	.line	133, "main.c"; 	++chrgTime;
                                    1-  656     	BANKSEL	_chrgTime
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 05rr                      1-  657     	INCR	_chrgTime,F
     0043 0D03                      1-  658     	BTRSC	STATUS,2
     0044 05rr                      1-  659     	INCR	(_chrgTime + 1),F
                                    1-  660     	.line	134, "main.c"; 	PWM1DUTY = 7;
     0045 2107                      1-  661     	MOVIA	0x07
     0046 00rr                      1-  662     	SFUN	_PWM1DUTY
     0047                           1-  663     _00112_DS_:
                                    1-  664     	.line	136, "main.c"; 	if(ledLightTime > 0)
                                    1-  665     	BANKSEL	_ledLightTime
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1-  666     	MOVR	_ledLightTime,W
     0049 0903                      1-  667     	BTRSS	STATUS,2
                                    1-  668     	.line	137, "main.c"; 	--ledLightTime;
     004A 06rr                      1-  669     	DECR	_ledLightTime,F
                                    1-  670     	.line	138, "main.c"; 	if(shanshuoTime > 0)
                                    1-  671     	BANKSEL	_shanshuoTime
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1-  672     	MOVR	_shanshuoTime,W
     004D 0903                      1-  673     	BTRSS	STATUS,2
                                    1-  674     	.line	139, "main.c"; 	--shanshuoTime;
     004E 06rr                      1-  675     	DECR	_shanshuoTime,F
                                    1-  676     	.line	140, "main.c"; 	if(workStep)
                                    1-  677     	BANKSEL	_workStep
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1-  678     	MOVR	_workStep,W
     0051 0D03                      1-  679     	BTRSC	STATUS,2
     0052 3rrr                      1-  680     	LGOTO	_00119_DS_
                                    1-  681     	.line	142, "main.c"; 	++count900s;
                                    1-  682     	BANKSEL	_count900s
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 05rr                      1-  683     	INCR	_count900s,F
     0055 0D03                      1-  684     	BTRSC	STATUS,2
     0056 05rr                      1-  685     	INCR	(_count900s + 1),F
     0057 3rrr                      1-  686     	LGOTO	_00126_DS_
     0058                           1-  687     _00119_DS_:
                                    1-  688     	.line	146, "main.c"; 	count900s = 0;
                                    1-  689     	BANKSEL	_count900s
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 02rr                      1-  690     	CLRR	_count900s
     005A 02rr                      1-  691     	CLRR	(_count900s + 1)
     005B                           1-  692     _00126_DS_:
                                    1-  693     	.line	155, "main.c"; 	if(INTFbits.PABIF)
     005B 08rr                      1-  694     	BTRSS	_INTFbits,1
     005C 3rrr                      1-  695     	LGOTO	_00128_DS_
                                    1-  696     	.line	157, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     005D 21FD                      1-  697     	MOVIA	0xfd
     005E 00rr                      1-  698     	MOVAR	_INTF
     005F                           1-  699     _00128_DS_:
                                    1-  700     	.line	160, "main.c"; 	INTF = 0;
     005F 02rr                      1-  701     	CLRR	_INTF
                                    1-  702     	.line	162, "main.c"; 	}
                                    1-  703     	BANKSEL	___sdcc_saved_stk01
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1-  704     	MOVR	___sdcc_saved_stk01,W
     0062 00rr                      1-  705     	MOVAR	STK01
                                    1-  706     	BANKSEL	___sdcc_saved_stk00
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 01rr                      1-  707     	MOVR	___sdcc_saved_stk00,W
     0065 00rr                      1-  708     	MOVAR	STK00
                                    1-  709     	BANKSEL	___sdcc_saved_fsr
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 01rr                      1-  710     	MOVR	___sdcc_saved_fsr,W
     0068 0084                      1-  711     	MOVAR	FSR
     0069 01rr                      1-  712     	MOVR	PSAVE,W
     006A 008A                      1-  713     	MOVAR	PCHBUF
     006B 0283                      1-  714     	CLRR	STATUS
     006C 15rr                      1-  715     	SWAPR	SSAVE,W
     006D 0083                      1-  716     	MOVAR	STATUS
     006E 15rr                      1-  717     	SWAPR	WSAVE,F
     006F 15rr                      1-  718     	SWAPR	WSAVE,W
     0070                           1-  719     END_OF_INTERRUPT:
     0070 0011                      1-  720     	RETIE	
                                    1-  722     ;--------------------------------------------------------
                                    1-  723     ; code
                                    1-  724     ;--------------------------------------------------------
                                    1-  725     ;***
                                    1-  726     ;  pBlock Stats: dbName = M
                                    1-  727     ;***
                                    1-  728     ;has an exit
                                    1-  729     ;functions called:
                                    1-  730     ;   _initSys
                                    1-  731     ;   _initAD
                                    1-  732     ;   _ledShow
                                    1-  733     ;   _keyCtr
                                    1-  734     ;   _checkBatAD
                                    1-  735     ;   _checkOutA
                                    1-  736     ;   _checkChrgV
                                    1-  737     ;   _chrgCtr
                                    1-  738     ;   _gotoSleep
                                    1-  739     ;   _powerOff
                                    1-  740     ;   _initSys
                                    1-  741     ;   _initAD
                                    1-  742     ;   _ledShow
                                    1-  743     ;   _keyCtr
                                    1-  744     ;   _checkBatAD
                                    1-  745     ;   _checkOutA
                                    1-  746     ;   _checkChrgV
                                    1-  747     ;   _chrgCtr
                                    1-  748     ;   _gotoSleep
                                    1-  749     ;   _powerOff
                                    1-  750     ;; Starting pCode block
                                    1-  751     .segment "code"; module=main, function=_main
     0000                           1-  753     _main:
                                    1-  754     ; 2 exit points
                                    1-  755     	.line	166, "main.c"; 	initSys();
     0000 2rrr                      1-  756     	LCALL	_initSys
                                    1-  757     	.line	167, "main.c"; 	initAD();
     0001 2rrr                      1-  758     	LCALL	_initAD
     0002                           1-  759     _00168_DS_:
                                    1-  760     	.line	170, "main.c"; 	CLRWDT();
     0002 0002                      1-  761     	clrwdt
                                    1-  762     	.line	171, "main.c"; 	ledShow();
     0003 2rrr                      1-  763     	LCALL	_ledShow
                                    1-  764     	.line	172, "main.c"; 	if(workStep > 0 && tempDuty >= 40)
                                    1-  765     	BANKSEL	_workStep
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1-  766     	MOVR	_workStep,W
     0006 0D03                      1-  767     	BTRSC	STATUS,2
     0007 3rrr                      1-  768     	LGOTO	_00139_DS_
                                    1-  769     ;;unsigned compare: left < lit (0x28=40), size=1
     0008 2128                      1-  770     	MOVIA	0x28
                                    1-  771     	BANKSEL	_tempDuty
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 04rr                      1-  772     	SUBAR	_tempDuty,W
     000B 0803                      1-  773     	BTRSS	STATUS,0
     000C 3rrr                      1-  774     	LGOTO	_00139_DS_
                                    1-  775     	.line	174, "main.c"; 	if(cDuty > tempDuty)
                                    1-  776     	BANKSEL	_cDuty
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  777     	MOVR	_cDuty,W
                                    1-  778     	BANKSEL	_tempDuty
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1-  779     	SUBAR	_tempDuty,W
     0011 0C03                      1-  780     	BTRSC	STATUS,0
     0012 3rrr                      1-  781     	LGOTO	_00136_DS_
                                    1-  782     	.line	176, "main.c"; 	cDuty--;
                                    1-  783     	BANKSEL	_cDuty
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 06rr                      1-  784     	DECR	_cDuty,F
                                    1-  785     	.line	177, "main.c"; 	PWM2DUTY = cDuty;
     0015 01rr                      1-  786     	MOVR	_cDuty,W
     0016 00rr                      1-  787     	SFUN	_PWM2DUTY
     0017 3rrr                      1-  788     	LGOTO	_00139_DS_
     0018                           1-  789     _00136_DS_:
                                    1-  790     	.line	179, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  791     	BANKSEL	_tempDuty
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1-  792     	MOVR	_tempDuty,W
                                    1-  793     	BANKSEL	_cDuty
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 04rr                      1-  794     	SUBAR	_cDuty,W
     001C 0C03                      1-  795     	BTRSC	STATUS,0
     001D 3rrr                      1-  796     	LGOTO	_00139_DS_
                                    1-  797     	.line	181, "main.c"; 	cDuty++;
     001E 05rr                      1-  798     	INCR	_cDuty,F
                                    1-  799     	.line	182, "main.c"; 	PWM2DUTY = cDuty;
     001F 01rr                      1-  800     	MOVR	_cDuty,W
     0020 00rr                      1-  801     	SFUN	_PWM2DUTY
     0021                           1-  802     _00139_DS_:
                                    1-  803     	.line	185, "main.c"; 	if(!IntFlag)
                                    1-  804     	BANKSEL	_Status
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 08rr                      1-  805     	BTRSS	_Status,0
     0023 3rrr                      1-  806     	LGOTO	_00168_DS_
                                    1-  807     	.line	187, "main.c"; 	IntFlag = 0;
     0024 1Crr                      1-  808     	BCR	_Status,0
                                    1-  809     	.line	188, "main.c"; 	if(chrgFlag == 0)
     0025 09rr                      1-  810     	BTRSS	_Status,3
                                    1-  811     	.line	189, "main.c"; 	keyCtr();
     0026 2rrr                      1-  812     	LCALL	_keyCtr
                                    1-  813     	.line	190, "main.c"; 	if(count200ms < 5)
     0027 2105                      1-  814     	MOVIA	0x05
                                    1-  815     	BANKSEL	_count200ms
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 04rr                      1-  816     	SUBAR	_count200ms,W
     002A 0C03                      1-  817     	BTRSC	STATUS,0
     002B 3rrr                      1-  818     	LGOTO	_00153_DS_
                                    1-  819     	.line	192, "main.c"; 	checkBatAD();
     002C 2rrr                      1-  820     	LCALL	_checkBatAD
     002D 3rrr                      1-  821     	LGOTO	_00154_DS_
                                    1-  822     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  823     ;;unsigned compare: left >= lit (0x9=9), size=1
     002E                           1-  824     _00153_DS_:
                                    1-  825     	.line	194, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     002E 2109                      1-  826     	MOVIA	0x09
                                    1-  827     	BANKSEL	_count200ms
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 04rr                      1-  828     	SUBAR	_count200ms,W
     0031 0803                      1-  829     	BTRSS	STATUS,0
     0032 3rrr                      1-  830     	LGOTO	_00149_DS_
                                    1-  831     ;;unsigned compare: left < lit (0xB=11), size=1
     0033 210B                      1-  832     	MOVIA	0x0b
     0034 04rr                      1-  833     	SUBAR	_count200ms,W
     0035 0C03                      1-  834     	BTRSC	STATUS,0
     0036 3rrr                      1-  835     	LGOTO	_00149_DS_
                                    1-  836     	.line	196, "main.c"; 	checkOutA();
     0037 2rrr                      1-  837     	LCALL	_checkOutA
     0038 3rrr                      1-  838     	LGOTO	_00154_DS_
                                    1-  839     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  840     ;;unsigned compare: left >= lit (0xE=14), size=1
     0039                           1-  841     _00149_DS_:
                                    1-  842     	.line	198, "main.c"; 	else if(count200ms > 13 && count200ms < 16)
     0039 210E                      1-  843     	MOVIA	0x0e
                                    1-  844     	BANKSEL	_count200ms
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 04rr                      1-  845     	SUBAR	_count200ms,W
     003C 0803                      1-  846     	BTRSS	STATUS,0
     003D 3rrr                      1-  847     	LGOTO	_00154_DS_
                                    1-  848     ;;unsigned compare: left < lit (0x10=16), size=1
     003E 2110                      1-  849     	MOVIA	0x10
     003F 04rr                      1-  850     	SUBAR	_count200ms,W
     0040 0803                      1-  851     	BTRSS	STATUS,0
                                    1-  852     	.line	200, "main.c"; 	checkChrgV();
     0041 2rrr                      1-  853     	LCALL	_checkChrgV
     0042                           1-  854     _00154_DS_:
                                    1-  855     	.line	203, "main.c"; 	chrgCtr();
     0042 2rrr                      1-  856     	LCALL	_chrgCtr
                                    1-  857     	.line	205, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  858     	BANKSEL	_workStep
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 01rr                      1-  859     	MOVR	_workStep,W
     0045 0D03                      1-  860     	BTRSC	STATUS,2
     0046 3rrr                      1-  861     	LGOTO	_00156_DS_
                                    1-  862     	BANKSEL	_currentDuty
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1-  863     	MOVR	_currentDuty,W
                                    1-  864     	BANKSEL	_maxDuty
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 04rr                      1-  865     	SUBAR	_maxDuty,W
     004B 0C03                      1-  866     	BTRSC	STATUS,0
     004C 3rrr                      1-  867     	LGOTO	_00156_DS_
                                    1-  868     	.line	207, "main.c"; 	currentDuty = currentDuty - 10;
     004D 21F6                      1-  869     	MOVIA	0xf6
                                    1-  870     	BANKSEL	_currentDuty
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 03rr                      1-  871     	ADDAR	_currentDuty,F
                                    1-  872     	.line	208, "main.c"; 	PWM2DUTY = currentDuty;
     0050 01rr                      1-  873     	MOVR	_currentDuty,W
     0051 00rr                      1-  874     	SFUN	_PWM2DUTY
                                    1-  875     	.line	209, "main.c"; 	cDuty = currentDuty;
     0052 01rr                      1-  876     	MOVR	_currentDuty,W
                                    1-  877     	BANKSEL	_cDuty
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1-  878     	MOVAR	_cDuty
     0055                           1-  879     _00156_DS_:
                                    1-  880     	.line	211, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0)
                                    1-  881     	BANKSEL	_workStep
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1-  882     	MOVR	_workStep,W
     0057 0903                      1-  883     	BTRSS	STATUS,2
     0058 3rrr                      1-  884     	LGOTO	_00161_DS_
                                    1-  885     	BANKSEL	_keyCount
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 01rr                      1-  886     	MOVR	_keyCount,W
     005B 0903                      1-  887     	BTRSS	STATUS,2
     005C 3rrr                      1-  888     	LGOTO	_00161_DS_
                                    1-  889     	BANKSEL	_PORTA
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 0Drr                      1-  890     	BTRSC	_PORTA,3
     005F 3rrr                      1-  891     	LGOTO	_00161_DS_
                                    1-  892     	BANKSEL	_ledLightTime
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1-  893     	MOVR	_ledLightTime,W
     0062 0903                      1-  894     	BTRSS	STATUS,2
     0063 3rrr                      1-  895     	LGOTO	_00161_DS_
                                    1-  896     	.line	213, "main.c"; 	if(++sleepTime > 2000)
                                    1-  897     	BANKSEL	_sleepTime
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 05rr                      1-  898     	INCR	_sleepTime,F
     0066 0D03                      1-  899     	BTRSC	STATUS,2
     0067 05rr                      1-  900     	INCR	(_sleepTime + 1),F
                                    1-  901     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  902     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0068 2107                      1-  903     	MOVIA	0x07
     0069 04rr                      1-  904     	SUBAR	(_sleepTime + 1),W
     006A 0903                      1-  905     	BTRSS	STATUS,2
     006B 3rrr                      1-  906     	LGOTO	_00241_DS_
     006C 21D1                      1-  907     	MOVIA	0xd1
     006D 04rr                      1-  908     	SUBAR	_sleepTime,W
     006E                           1-  909     _00241_DS_:
     006E 0803                      1-  910     	BTRSS	STATUS,0
     006F 3rrr                      1-  911     	LGOTO	_00161_DS_
                                    1-  912     	.line	215, "main.c"; 	gotoSleep();
     0070 2rrr                      1-  913     	LCALL	_gotoSleep
                                    1-  914     ;;unsigned compare: left < lit (0x384=900), size=2
     0071                           1-  915     _00161_DS_:
                                    1-  916     	.line	219, "main.c"; 	if(count900s >= 900)
     0071 2103                      1-  917     	MOVIA	0x03
                                    1-  918     	BANKSEL	_count900s
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 04rr                      1-  919     	SUBAR	(_count900s + 1),W
     0074 0903                      1-  920     	BTRSS	STATUS,2
     0075 3rrr                      1-  921     	LGOTO	_00242_DS_
     0076 2184                      1-  922     	MOVIA	0x84
     0077 04rr                      1-  923     	SUBAR	_count900s,W
     0078                           1-  924     _00242_DS_:
     0078 0803                      1-  925     	BTRSS	STATUS,0
     0079 3rrr                      1-  926     	LGOTO	_00168_DS_
                                    1-  927     	.line	221, "main.c"; 	powerOff();
     007A 2rrr                      1-  928     	LCALL	_powerOff
     007B 3rrr                      1-  929     	LGOTO	_00168_DS_
                                    1-  930     	.line	225, "main.c"; 	}
                                    1-  931     	RETURN	
     007C 0010                      3-   26 m1      ret
                                    1-  932     ; exit point of _main
                                    1-  934     ;***
                                    1-  935     ;  pBlock Stats: dbName = C
                                    1-  936     ;***
                                    1-  937     ;has an exit
                                    1-  938     ;; Starting pCode block
                                    1-  939     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  941     _F_wait_eoc:
                                    1-  942     ; 2 exit points
     0000                           1-  943     _00896_DS_:
                                    1-  944     	.line	950, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  945     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  946     	LGOTO	_00896_DS_
                                    1-  947     	.line	952, "main.c"; 	}
                                    1-  948     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  949     ; exit point of _F_wait_eoc
                                    1-  951     ;***
                                    1-  952     ;  pBlock Stats: dbName = C
                                    1-  953     ;***
                                    1-  954     ;has an exit
                                    1-  955     ;functions called:
                                    1-  956     ;   _delay
                                    1-  957     ;   _F_wait_eoc
                                    1-  958     ;   _delay
                                    1-  959     ;   _F_wait_eoc
                                    1-  960     ;6 compiler assigned registers:
                                    1-  961     ;   r0x1031
                                    1-  962     ;   r0x1032
                                    1-  963     ;   r0x1033
                                    1-  964     ;   r0x1034
                                    1-  965     ;   r0x1035
                                    1-  966     ;   r0x1036
                                    1-  967     ;; Starting pCode block
                                    1-  968     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1-  970     ;local variable name mapping:
     0000                           1-  973     _F_AIN2_Convert:
                                    1-  974     ; 2 exit points
                                    1-  975     	.line	933, "main.c"; 	void F_AIN2_Convert(char count)
                                    1-  976     	BANKSEL	r0x1031
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  977     	MOVAR	r0x1031
                                    1-  978     	.line	935, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1-  979     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  980     	CLRR	_R_AIN2_DATA_LB
                                    1-  981     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  982     	CLRR	_R_AIN2_DATA
     0006 02rr                      1-  983     	CLRR	(_R_AIN2_DATA + 1)
                                    1-  984     	.line	937, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1-  985     	MOVIA	0x92
     0008 00rr                      1-  986     	MOVAR	_ADMD
                                    1-  987     	.line	938, "main.c"; 	delay(200);	
     0009 21C8                      1-  988     	MOVIA	0xc8
     000A 2rrr                      1-  989     	LCALL	_delay
                                    1-  990     	.line	939, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  991     	MOVIA	0x01
                                    1-  992     	BANKSEL	r0x1032
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  993     	MOVAR	r0x1032
     000E                           1-  994     _00889_DS_:
                                    1-  995     	BANKSEL	r0x1032
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1-  996     	MOVR	r0x1032,W
                                    1-  997     	BANKSEL	r0x1031
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  998     	SUBAR	r0x1031,W
     0012 0803                      1-  999     	BTRSS	STATUS,0
     0013 3rrr                      1- 1000     	LGOTO	_00891_DS_
                                    1- 1001     	.line	941, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1002     	BSR	_ADMDbits,6
                                    1- 1003     	.line	942, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1- 1004     	LCALL	_F_wait_eoc
                                    1- 1005     	.line	943, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1006     	MOVIA	0x0f
     0017 10rr                      1- 1007     	ANDAR	_ADR,W
                                    1- 1008     ;;3	MOVAR	r0x1033
                                    1- 1009     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1- 1010     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1011     	.line	944, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1012     	MOVR	_ADD,W
                                    1- 1013     	BANKSEL	r0x1033
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1014     	MOVAR	r0x1033
                                    1- 1015     ;;1	CLRR	r0x1034
                                    1- 1016     ;;112	MOVR	r0x1033,W
                                    1- 1017     ;;110	MOVAR	r0x1035
     001D 2100                      1- 1018     	MOVIA	0x00
                                    1- 1019     	BANKSEL	r0x1036
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1020     	MOVAR	r0x1036
                                    1- 1021     ;;111	MOVR	r0x1035,W
                                    1- 1022     	BANKSEL	r0x1033
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1023     	MOVR	r0x1033,W
                                    1- 1024     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1025     	ADDAR	_R_AIN2_DATA,F
                                    1- 1026     	BANKSEL	r0x1036
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1027     	MOVR	r0x1036,W
     0026 0C03                      1- 1028     	BTRSC	STATUS,0
     0027 05rr                      1- 1029     	INCR	r0x1036,W
     0028 0D03                      1- 1030     	BTRSC	STATUS,2
     0029 3rrr                      1- 1031     	LGOTO	_00001_DS_
                                    1- 1032     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1033     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1034     _00001_DS_:
                                    1- 1035     	.line	939, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1036     	BANKSEL	r0x1032
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1037     	INCR	r0x1032,F
     002E 3rrr                      1- 1038     	LGOTO	_00889_DS_
     002F                           1- 1039     _00891_DS_:
                                    1- 1040     	.line	946, "main.c"; 	}
                                    1- 1041     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1042     ; exit point of _F_AIN2_Convert
                                    1- 1044     ;***
                                    1- 1045     ;  pBlock Stats: dbName = C
                                    1- 1046     ;***
                                    1- 1047     ;has an exit
                                    1- 1048     ;functions called:
                                    1- 1049     ;   _delay
                                    1- 1050     ;   _F_wait_eoc
                                    1- 1051     ;   _delay
                                    1- 1052     ;   _F_wait_eoc
                                    1- 1053     ;6 compiler assigned registers:
                                    1- 1054     ;   r0x1037
                                    1- 1055     ;   r0x1038
                                    1- 1056     ;   r0x1039
                                    1- 1057     ;   r0x103A
                                    1- 1058     ;   r0x103B
                                    1- 1059     ;   r0x103C
                                    1- 1060     ;; Starting pCode block
                                    1- 1061     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1063     ;local variable name mapping:
     0000                           1- 1066     _F_AIN3_Convert:
                                    1- 1067     ; 2 exit points
                                    1- 1068     	.line	918, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1069     	BANKSEL	r0x1037
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1070     	MOVAR	r0x1037
                                    1- 1071     	.line	920, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1072     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1073     	CLRR	_R_AIN3_DATA_LB
                                    1- 1074     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1075     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1076     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1077     	.line	922, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1078     	MOVIA	0x93
     0008 00rr                      1- 1079     	MOVAR	_ADMD
                                    1- 1080     	.line	923, "main.c"; 	delay(200);	
     0009 21C8                      1- 1081     	MOVIA	0xc8
     000A 2rrr                      1- 1082     	LCALL	_delay
                                    1- 1083     	.line	924, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1084     	MOVIA	0x01
                                    1- 1085     	BANKSEL	r0x1038
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1086     	MOVAR	r0x1038
     000E                           1- 1087     _00880_DS_:
                                    1- 1088     	BANKSEL	r0x1038
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1089     	MOVR	r0x1038,W
                                    1- 1090     	BANKSEL	r0x1037
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1091     	SUBAR	r0x1037,W
     0012 0803                      1- 1092     	BTRSS	STATUS,0
     0013 3rrr                      1- 1093     	LGOTO	_00882_DS_
                                    1- 1094     	.line	926, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1095     	BSR	_ADMDbits,6
                                    1- 1096     	.line	927, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1- 1097     	LCALL	_F_wait_eoc
                                    1- 1098     	.line	928, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1099     	MOVIA	0x0f
     0017 10rr                      1- 1100     	ANDAR	_ADR,W
                                    1- 1101     ;;3	MOVAR	r0x1039
                                    1- 1102     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1- 1103     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1104     	.line	929, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1105     	MOVR	_ADD,W
                                    1- 1106     	BANKSEL	r0x1039
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1107     	MOVAR	r0x1039
                                    1- 1108     ;;1	CLRR	r0x103A
                                    1- 1109     ;;109	MOVR	r0x1039,W
                                    1- 1110     ;;107	MOVAR	r0x103B
     001D 2100                      1- 1111     	MOVIA	0x00
                                    1- 1112     	BANKSEL	r0x103C
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1113     	MOVAR	r0x103C
                                    1- 1114     ;;108	MOVR	r0x103B,W
                                    1- 1115     	BANKSEL	r0x1039
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1116     	MOVR	r0x1039,W
                                    1- 1117     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1118     	ADDAR	_R_AIN3_DATA,F
                                    1- 1119     	BANKSEL	r0x103C
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1120     	MOVR	r0x103C,W
     0026 0C03                      1- 1121     	BTRSC	STATUS,0
     0027 05rr                      1- 1122     	INCR	r0x103C,W
     0028 0D03                      1- 1123     	BTRSC	STATUS,2
     0029 3rrr                      1- 1124     	LGOTO	_00002_DS_
                                    1- 1125     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1126     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1127     _00002_DS_:
                                    1- 1128     	.line	924, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1129     	BANKSEL	r0x1038
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1130     	INCR	r0x1038,F
     002E 3rrr                      1- 1131     	LGOTO	_00880_DS_
     002F                           1- 1132     _00882_DS_:
                                    1- 1133     	.line	931, "main.c"; 	}
                                    1- 1134     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1135     ; exit point of _F_AIN3_Convert
                                    1- 1137     ;***
                                    1- 1138     ;  pBlock Stats: dbName = C
                                    1- 1139     ;***
                                    1- 1140     ;has an exit
                                    1- 1141     ;functions called:
                                    1- 1142     ;   _delay
                                    1- 1143     ;   _F_wait_eoc
                                    1- 1144     ;   _delay
                                    1- 1145     ;   _F_wait_eoc
                                    1- 1146     ;6 compiler assigned registers:
                                    1- 1147     ;   r0x103D
                                    1- 1148     ;   r0x103E
                                    1- 1149     ;   r0x103F
                                    1- 1150     ;   r0x1040
                                    1- 1151     ;   r0x1041
                                    1- 1152     ;   r0x1042
                                    1- 1153     ;; Starting pCode block
                                    1- 1154     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1156     ;local variable name mapping:
     0000                           1- 1159     _F_AIN4_Convert:
                                    1- 1160     ; 2 exit points
                                    1- 1161     	.line	903, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1162     	BANKSEL	r0x103D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1163     	MOVAR	r0x103D
                                    1- 1164     	.line	905, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1165     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1166     	CLRR	_R_AIN4_DATA_LB
                                    1- 1167     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1168     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1169     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1170     	.line	907, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1171     	MOVIA	0x94
     0008 00rr                      1- 1172     	MOVAR	_ADMD
                                    1- 1173     	.line	908, "main.c"; 	delay(200);	
     0009 21C8                      1- 1174     	MOVIA	0xc8
     000A 2rrr                      1- 1175     	LCALL	_delay
                                    1- 1176     	.line	909, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1177     	MOVIA	0x01
                                    1- 1178     	BANKSEL	r0x103E
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1179     	MOVAR	r0x103E
     000E                           1- 1180     _00871_DS_:
                                    1- 1181     	BANKSEL	r0x103E
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1182     	MOVR	r0x103E,W
                                    1- 1183     	BANKSEL	r0x103D
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1184     	SUBAR	r0x103D,W
     0012 0803                      1- 1185     	BTRSS	STATUS,0
     0013 3rrr                      1- 1186     	LGOTO	_00873_DS_
                                    1- 1187     	.line	911, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1188     	BSR	_ADMDbits,6
                                    1- 1189     	.line	912, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1- 1190     	LCALL	_F_wait_eoc
                                    1- 1191     	.line	913, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1192     	MOVIA	0x0f
     0017 10rr                      1- 1193     	ANDAR	_ADR,W
                                    1- 1194     ;;3	MOVAR	r0x103F
                                    1- 1195     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1- 1196     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1197     	.line	914, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1198     	MOVR	_ADD,W
                                    1- 1199     	BANKSEL	r0x103F
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1200     	MOVAR	r0x103F
                                    1- 1201     ;;1	CLRR	r0x1040
                                    1- 1202     ;;106	MOVR	r0x103F,W
                                    1- 1203     ;;104	MOVAR	r0x1041
     001D 2100                      1- 1204     	MOVIA	0x00
                                    1- 1205     	BANKSEL	r0x1042
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1206     	MOVAR	r0x1042
                                    1- 1207     ;;105	MOVR	r0x1041,W
                                    1- 1208     	BANKSEL	r0x103F
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1209     	MOVR	r0x103F,W
                                    1- 1210     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1211     	ADDAR	_R_AIN4_DATA,F
                                    1- 1212     	BANKSEL	r0x1042
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1213     	MOVR	r0x1042,W
     0026 0C03                      1- 1214     	BTRSC	STATUS,0
     0027 05rr                      1- 1215     	INCR	r0x1042,W
     0028 0D03                      1- 1216     	BTRSC	STATUS,2
     0029 3rrr                      1- 1217     	LGOTO	_00003_DS_
                                    1- 1218     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1219     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1220     _00003_DS_:
                                    1- 1221     	.line	909, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1222     	BANKSEL	r0x103E
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1223     	INCR	r0x103E,F
     002E 3rrr                      1- 1224     	LGOTO	_00871_DS_
     002F                           1- 1225     _00873_DS_:
                                    1- 1226     	.line	916, "main.c"; 	}
                                    1- 1227     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1228     ; exit point of _F_AIN4_Convert
                                    1- 1230     ;***
                                    1- 1231     ;  pBlock Stats: dbName = C
                                    1- 1232     ;***
                                    1- 1233     ;has an exit
                                    1- 1234     ;functions called:
                                    1- 1235     ;   _F_AIN4_Convert
                                    1- 1236     ;   __mulchar
                                    1- 1237     ;   __mulchar
                                    1- 1238     ;   _F_AIN4_Convert
                                    1- 1239     ;   __mulchar
                                    1- 1240     ;   __mulchar
                                    1- 1241     ;5 compiler assigned registers:
                                    1- 1242     ;   r0x1043
                                    1- 1243     ;   r0x1044
                                    1- 1244     ;   r0x1045
                                    1- 1245     ;   r0x1046
                                    1- 1246     ;   STK00
                                    1- 1247     ;; Starting pCode block
                                    1- 1248     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1250     _checkOutA:
                                    1- 1251     ; 2 exit points
                                    1- 1252     	.line	833, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1253     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1254     	CLRR	_R_AIN4_DATA_LB
                                    1- 1255     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1256     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1257     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1258     	.line	834, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1259     	MOVIA	0x08
     0006 2rrr                      1- 1260     	LCALL	_F_AIN4_Convert
                                    1- 1261     	.line	835, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1262     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1263     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1264     	ANDIA	0xf0
     000A 00rr                      1- 1265     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1266     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1267     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1268     	ANDIA	0x0f
     000E 11rr                      1- 1269     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1270     	XORAR	_R_AIN4_DATA,F
                                    1- 1271     	.line	836, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1272     	MOVIA	0xf0
                                    1- 1273     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1274     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1275     	.line	837, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1276     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1277     	BANKSEL	r0x1043
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1278     	MOVAR	r0x1043
                                    1- 1279     ;;1	CLRR	r0x1044
                                    1- 1280     ;;103	MOVR	r0x1043,W
                                    1- 1281     ;;101	MOVAR	r0x1045
     0016 2100                      1- 1282     	MOVIA	0x00
                                    1- 1283     	BANKSEL	r0x1046
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1284     	MOVAR	r0x1046
                                    1- 1285     ;;102	MOVR	r0x1045,W
                                    1- 1286     	BANKSEL	r0x1043
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1287     	MOVR	r0x1043,W
                                    1- 1288     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1289     	ADDAR	_R_AIN4_DATA,F
                                    1- 1290     	BANKSEL	r0x1046
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1291     	MOVR	r0x1046,W
     001F 0C03                      1- 1292     	BTRSC	STATUS,0
     0020 05rr                      1- 1293     	INCR	r0x1046,W
     0021 0D03                      1- 1294     	BTRSC	STATUS,2
     0022 3rrr                      1- 1295     	LGOTO	_00004_DS_
                                    1- 1296     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1297     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1298     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1299     _00004_DS_:
                                    1- 1300     	.line	838, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1301     	BCR	STATUS,0
                                    1- 1302     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1303     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1304     	RRR	_R_AIN4_DATA,F
                                    1- 1305     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1306     	BCR	STATUS,0
     002A 13rr                      1- 1307     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1308     	RRR	_R_AIN4_DATA,F
                                    1- 1309     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1310     	BCR	STATUS,0
     002D 13rr                      1- 1311     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1312     	RRR	_R_AIN4_DATA,F
                                    1- 1313     	.line	839, "main.c"; 	if(debug)
                                    1- 1314     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1315     	MOVR	_debug,W
     0031 0D03                      1- 1316     	BTRSC	STATUS,2
     0032 3rrr                      1- 1317     	LGOTO	_00776_DS_
                                    1- 1318     	.line	840, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 212D                      1- 1319     	MOVIA	0x2d
                                    1- 1320     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1321     	MOVAR	_R_AIN4_DATA
     0036 2101                      1- 1322     	MOVIA	0x01
     0037 00rr                      1- 1323     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1324     ;;unsigned compare: left < lit (0x6=6), size=1
     0038                           1- 1325     _00776_DS_:
                                    1- 1326     	.line	841, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0038 2106                      1- 1327     	MOVIA	0x06
                                    1- 1328     	BANKSEL	_workStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1329     	SUBAR	_workStep,W
     003B 0C03                      1- 1330     	BTRSC	STATUS,0
     003C 3rrr                      1- 1331     	LGOTO	_00804_DS_
                                    1- 1332     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1333     ;;unsigned compare: left >= lit (0xC9=201), size=2
     003D 2100                      1- 1334     	MOVIA	0x00
                                    1- 1335     	BANKSEL	_R_AIN4_DATA
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 04rr                      1- 1336     	SUBAR	(_R_AIN4_DATA + 1),W
     0040 0903                      1- 1337     	BTRSS	STATUS,2
     0041 3rrr                      1- 1338     	LGOTO	_00855_DS_
     0042 21C9                      1- 1339     	MOVIA	0xc9
     0043 04rr                      1- 1340     	SUBAR	_R_AIN4_DATA,W
     0044                           1- 1341     _00855_DS_:
     0044 0803                      1- 1342     	BTRSS	STATUS,0
     0045 3rrr                      1- 1343     	LGOTO	_00804_DS_
                                    1- 1344     	.line	843, "main.c"; 	if(++overCount > 5)
                                    1- 1345     	BANKSEL	_overCount
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 05rr                      1- 1346     	INCR	_overCount,F
                                    1- 1347     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1348     ;;unsigned compare: left >= lit (0x6=6), size=1
     0048 2106                      1- 1349     	MOVIA	0x06
     0049 04rr                      1- 1350     	SUBAR	_overCount,W
     004A 0803                      1- 1351     	BTRSS	STATUS,0
     004B 3rrr                      1- 1352     	LGOTO	_00778_DS_
                                    1- 1353     	.line	845, "main.c"; 	overCount = 5;
     004C 2105                      1- 1354     	MOVIA	0x05
     004D 00rr                      1- 1355     	MOVAR	_overCount
     004E                           1- 1356     _00778_DS_:
                                    1- 1357     	.line	848, "main.c"; 	deadTime = 0;
                                    1- 1358     	BANKSEL	_deadTime
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 02rr                      1- 1359     	CLRR	_deadTime
     0050 02rr                      1- 1360     	CLRR	(_deadTime + 1)
     0051 3rrr                      1- 1361     	LGOTO	_00807_DS_
                                    1- 1362     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1363     ;;unsigned compare: left >= lit (0x191=401), size=2
     0052                           1- 1364     _00804_DS_:
                                    1- 1365     	.line	850, "main.c"; 	else if(R_AIN4_DATA > 400)
     0052 2101                      1- 1366     	MOVIA	0x01
                                    1- 1367     	BANKSEL	_R_AIN4_DATA
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 04rr                      1- 1368     	SUBAR	(_R_AIN4_DATA + 1),W
     0055 0903                      1- 1369     	BTRSS	STATUS,2
     0056 3rrr                      1- 1370     	LGOTO	_00857_DS_
     0057 2191                      1- 1371     	MOVIA	0x91
     0058 04rr                      1- 1372     	SUBAR	_R_AIN4_DATA,W
     0059                           1- 1373     _00857_DS_:
     0059 0803                      1- 1374     	BTRSS	STATUS,0
     005A 3rrr                      1- 1375     	LGOTO	_00801_DS_
                                    1- 1376     	.line	852, "main.c"; 	if(++overCount > 5)
                                    1- 1377     	BANKSEL	_overCount
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 05rr                      1- 1378     	INCR	_overCount,F
                                    1- 1379     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1380     ;;unsigned compare: left >= lit (0x6=6), size=1
     005D 2106                      1- 1381     	MOVIA	0x06
     005E 04rr                      1- 1382     	SUBAR	_overCount,W
     005F 0803                      1- 1383     	BTRSS	STATUS,0
     0060 3rrr                      1- 1384     	LGOTO	_00807_DS_
                                    1- 1385     	.line	854, "main.c"; 	overCount = 5;
     0061 2105                      1- 1386     	MOVIA	0x05
     0062 00rr                      1- 1387     	MOVAR	_overCount
                                    1- 1388     	.line	855, "main.c"; 	if(++deadTime > 500)
                                    1- 1389     	BANKSEL	_deadTime
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 05rr                      1- 1390     	INCR	_deadTime,F
     0065 0D03                      1- 1391     	BTRSC	STATUS,2
     0066 05rr                      1- 1392     	INCR	(_deadTime + 1),F
                                    1- 1393     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1394     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0067 2101                      1- 1395     	MOVIA	0x01
     0068 04rr                      1- 1396     	SUBAR	(_deadTime + 1),W
     0069 0903                      1- 1397     	BTRSS	STATUS,2
     006A 3rrr                      1- 1398     	LGOTO	_00859_DS_
     006B 21F5                      1- 1399     	MOVIA	0xf5
     006C 04rr                      1- 1400     	SUBAR	_deadTime,W
     006D                           1- 1401     _00859_DS_:
     006D 0803                      1- 1402     	BTRSS	STATUS,0
     006E 3rrr                      1- 1403     	LGOTO	_00807_DS_
                                    1- 1404     	.line	856, "main.c"; 	deadTime = 500;
     006F 21F4                      1- 1405     	MOVIA	0xf4
                                    1- 1406     	BANKSEL	_deadTime
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 00rr                      1- 1407     	MOVAR	_deadTime
     0072 2101                      1- 1408     	MOVIA	0x01
     0073 00rr                      1- 1409     	MOVAR	(_deadTime + 1)
     0074 3rrr                      1- 1410     	LGOTO	_00807_DS_
                                    1- 1411     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1412     ;;unsigned compare: left >= lit (0x2E=46), size=2
     0075                           1- 1413     _00801_DS_:
                                    1- 1414     	.line	865, "main.c"; 	else if(R_AIN4_DATA > 45)
     0075 2100                      1- 1415     	MOVIA	0x00
                                    1- 1416     	BANKSEL	_R_AIN4_DATA
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 04rr                      1- 1417     	SUBAR	(_R_AIN4_DATA + 1),W
     0078 0903                      1- 1418     	BTRSS	STATUS,2
     0079 3rrr                      1- 1419     	LGOTO	_00860_DS_
     007A 212E                      1- 1420     	MOVIA	0x2e
     007B 04rr                      1- 1421     	SUBAR	_R_AIN4_DATA,W
     007C                           1- 1422     _00860_DS_:
     007C 0803                      1- 1423     	BTRSS	STATUS,0
     007D 3rrr                      1- 1424     	LGOTO	_00798_DS_
                                    1- 1425     	.line	867, "main.c"; 	deadTime = 0;
                                    1- 1426     	BANKSEL	_deadTime
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 02rr                      1- 1427     	CLRR	_deadTime
     0080 02rr                      1- 1428     	CLRR	(_deadTime + 1)
                                    1- 1429     	.line	868, "main.c"; 	if(overCount > 0)
                                    1- 1430     	BANKSEL	_overCount
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 01rr                      1- 1431     	MOVR	_overCount,W
     0083 0903                      1- 1432     	BTRSS	STATUS,2
                                    1- 1433     	.line	870, "main.c"; 	overCount--;
     0084 06rr                      1- 1434     	DECR	_overCount,F
                                    1- 1435     	.line	872, "main.c"; 	if(workStep < 7)
     0085 2107                      1- 1436     	MOVIA	0x07
                                    1- 1437     	BANKSEL	_workStep
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 04rr                      1- 1438     	SUBAR	_workStep,W
     0088 0C03                      1- 1439     	BTRSC	STATUS,0
     0089 3rrr                      1- 1440     	LGOTO	_00807_DS_
                                    1- 1441     	.line	874, "main.c"; 	tempDuty = 70 + workStep*5;
     008A 2105                      1- 1442     	MOVIA	0x05
     008B 00rr                      1- 1443     	MOVAR	STK00
     008C 01rr                      1- 1444     	MOVR	_workStep,W
     008D 2rrr                      1- 1445     	LCALL	__mulchar
                                    1- 1446     	BANKSEL	r0x1043
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 00rr                      1- 1447     	MOVAR	r0x1043
     0090 2146                      1- 1448     	MOVIA	0x46
     0091 03rr                      1- 1449     	ADDAR	r0x1043,W
                                    1- 1450     	BANKSEL	_tempDuty
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 00rr                      1- 1451     	MOVAR	_tempDuty
     0094 3rrr                      1- 1452     	LGOTO	_00807_DS_
     0095                           1- 1453     _00798_DS_:
                                    1- 1454     	.line	879, "main.c"; 	deadTime = 0;
                                    1- 1455     	BANKSEL	_deadTime
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 02rr                      1- 1456     	CLRR	_deadTime
     0097 02rr                      1- 1457     	CLRR	(_deadTime + 1)
                                    1- 1458     	.line	880, "main.c"; 	if(overCount > 0)
                                    1- 1459     	BANKSEL	_overCount
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 01rr                      1- 1460     	MOVR	_overCount,W
     009A 0903                      1- 1461     	BTRSS	STATUS,2
                                    1- 1462     	.line	882, "main.c"; 	overCount--;
     009B 06rr                      1- 1463     	DECR	_overCount,F
                                    1- 1464     	.line	884, "main.c"; 	if(R_AIN4_DATA > 40 && workStep < 4)
     009C 2100                      1- 1465     	MOVIA	0x00
                                    1- 1466     	BANKSEL	_R_AIN4_DATA
     009D rrrr                      3-   71 m1      .banksel ram_address
     009E 04rr                      1- 1467     	SUBAR	(_R_AIN4_DATA + 1),W
     009F 0903                      1- 1468     	BTRSS	STATUS,2
     00A0 3rrr                      1- 1469     	LGOTO	_00862_DS_
     00A1 2129                      1- 1470     	MOVIA	0x29
     00A2 04rr                      1- 1471     	SUBAR	_R_AIN4_DATA,W
     00A3                           1- 1472     _00862_DS_:
     00A3 0803                      1- 1473     	BTRSS	STATUS,0
     00A4 3rrr                      1- 1474     	LGOTO	_00792_DS_
                                    1- 1475     ;;unsigned compare: left < lit (0x4=4), size=1
     00A5 2104                      1- 1476     	MOVIA	0x04
                                    1- 1477     	BANKSEL	_workStep
     00A6 rrrr                      3-   71 m1      .banksel ram_address
     00A7 04rr                      1- 1478     	SUBAR	_workStep,W
     00A8 0C03                      1- 1479     	BTRSC	STATUS,0
     00A9 3rrr                      1- 1480     	LGOTO	_00792_DS_
                                    1- 1481     	.line	886, "main.c"; 	tempDuty = 70 + workStep*5;
     00AA 2105                      1- 1482     	MOVIA	0x05
     00AB 00rr                      1- 1483     	MOVAR	STK00
     00AC 01rr                      1- 1484     	MOVR	_workStep,W
     00AD 2rrr                      1- 1485     	LCALL	__mulchar
                                    1- 1486     	BANKSEL	r0x1043
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 00rr                      1- 1487     	MOVAR	r0x1043
     00B0 2146                      1- 1488     	MOVIA	0x46
     00B1 03rr                      1- 1489     	ADDAR	r0x1043,W
                                    1- 1490     	BANKSEL	_tempDuty
     00B2 rrrr                      3-   71 m1      .banksel ram_address
     00B3 00rr                      1- 1491     	MOVAR	_tempDuty
     00B4 3rrr                      1- 1492     	LGOTO	_00793_DS_
                                    1- 1493     ;;unsigned compare: left < lit (0x44=68), size=2
     00B5                           1- 1494     _00792_DS_:
                                    1- 1495     	.line	888, "main.c"; 	else if(R_AIN4_DATA < 68)
     00B5 2100                      1- 1496     	MOVIA	0x00
                                    1- 1497     	BANKSEL	_R_AIN4_DATA
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 04rr                      1- 1498     	SUBAR	(_R_AIN4_DATA + 1),W
     00B8 0903                      1- 1499     	BTRSS	STATUS,2
     00B9 3rrr                      1- 1500     	LGOTO	_00864_DS_
     00BA 2144                      1- 1501     	MOVIA	0x44
     00BB 04rr                      1- 1502     	SUBAR	_R_AIN4_DATA,W
     00BC                           1- 1503     _00864_DS_:
     00BC 0C03                      1- 1504     	BTRSC	STATUS,0
     00BD 3rrr                      1- 1505     	LGOTO	_00793_DS_
                                    1- 1506     	.line	890, "main.c"; 	tempDuty = maxDuty;
                                    1- 1507     	BANKSEL	_maxDuty
     00BE rrrr                      3-   71 m1      .banksel ram_address
     00BF 01rr                      1- 1508     	MOVR	_maxDuty,W
                                    1- 1509     	BANKSEL	_tempDuty
     00C0 rrrr                      3-   71 m1      .banksel ram_address
     00C1 00rr                      1- 1510     	MOVAR	_tempDuty
     00C2                           1- 1511     _00793_DS_:
                                    1- 1512     	.line	892, "main.c"; 	if(workStep > 0)
                                    1- 1513     	BANKSEL	_workStep
     00C2 rrrr                      3-   71 m1      .banksel ram_address
     00C3 01rr                      1- 1514     	MOVR	_workStep,W
     00C4 0D03                      1- 1515     	BTRSC	STATUS,2
     00C5 3rrr                      1- 1516     	LGOTO	_00807_DS_
                                    1- 1517     	.line	893, "main.c"; 	ledStep = workStep;
     00C6 01rr                      1- 1518     	MOVR	_workStep,W
                                    1- 1519     	BANKSEL	_ledStep
     00C7 rrrr                      3-   71 m1      .banksel ram_address
     00C8 00rr                      1- 1520     	MOVAR	_ledStep
     00C9                           1- 1521     _00807_DS_:
                                    1- 1522     	.line	897, "main.c"; 	}
                                    1- 1523     	RETURN	
     00C9 0010                      3-   26 m1      ret
                                    1- 1524     ; exit point of _checkOutA
                                    1- 1526     ;***
                                    1- 1527     ;  pBlock Stats: dbName = C
                                    1- 1528     ;***
                                    1- 1529     ;has an exit
                                    1- 1530     ;functions called:
                                    1- 1531     ;   _F_AIN3_Convert
                                    1- 1532     ;   _F_AIN3_Convert
                                    1- 1533     ;4 compiler assigned registers:
                                    1- 1534     ;   r0x1047
                                    1- 1535     ;   r0x1048
                                    1- 1536     ;   r0x1049
                                    1- 1537     ;   r0x104A
                                    1- 1538     ;; Starting pCode block
                                    1- 1539     .segment "code"; module=main, function=_checkChrgV
     0000                           1- 1541     _checkChrgV:
                                    1- 1542     ; 2 exit points
                                    1- 1543     	.line	820, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1544     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1545     	CLRR	_R_AIN3_DATA_LB
                                    1- 1546     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1547     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1548     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1549     	.line	821, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1550     	MOVIA	0x08
     0006 2rrr                      1- 1551     	LCALL	_F_AIN3_Convert
                                    1- 1552     	.line	822, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1553     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1554     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1555     	ANDIA	0xf0
     000A 00rr                      1- 1556     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1557     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1558     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1559     	ANDIA	0x0f
     000E 11rr                      1- 1560     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1561     	XORAR	_R_AIN3_DATA,F
                                    1- 1562     	.line	823, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1563     	MOVIA	0xf0
                                    1- 1564     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1565     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1566     	.line	824, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1567     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1568     	BANKSEL	r0x1049
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1569     	MOVAR	r0x1049
                                    1- 1570     ;;1	MOVAR	r0x1047
                                    1- 1571     ;;1	CLRR	r0x1048
                                    1- 1572     ;;100	MOVR	r0x1047,W
     0016 2100                      1- 1573     	MOVIA	0x00
                                    1- 1574     	BANKSEL	r0x104A
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1575     	MOVAR	r0x104A
                                    1- 1576     	BANKSEL	r0x1049
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1577     	MOVR	r0x1049,W
                                    1- 1578     	BANKSEL	_R_AIN3_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1579     	ADDAR	_R_AIN3_DATA,F
                                    1- 1580     	BANKSEL	r0x104A
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1581     	MOVR	r0x104A,W
     001F 0C03                      1- 1582     	BTRSC	STATUS,0
     0020 05rr                      1- 1583     	INCR	r0x104A,W
     0021 0D03                      1- 1584     	BTRSC	STATUS,2
     0022 3rrr                      1- 1585     	LGOTO	_00005_DS_
                                    1- 1586     	BANKSEL	_R_AIN3_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1587     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1588     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1589     _00005_DS_:
                                    1- 1590     	.line	825, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1591     	BCR	STATUS,0
                                    1- 1592     	BANKSEL	_R_AIN3_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1593     	RRR	(_R_AIN3_DATA + 1),F
     0028 13rr                      1- 1594     	RRR	_R_AIN3_DATA,F
                                    1- 1595     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1596     	BCR	STATUS,0
     002A 13rr                      1- 1597     	RRR	(_R_AIN3_DATA + 1),F
     002B 13rr                      1- 1598     	RRR	_R_AIN3_DATA,F
                                    1- 1599     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1600     	BCR	STATUS,0
     002D 13rr                      1- 1601     	RRR	(_R_AIN3_DATA + 1),F
     002E 13rr                      1- 1602     	RRR	_R_AIN3_DATA,F
                                    1- 1603     	.line	826, "main.c"; 	}
                                    1- 1604     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1605     ; exit point of _checkChrgV
                                    1- 1607     ;***
                                    1- 1608     ;  pBlock Stats: dbName = C
                                    1- 1609     ;***
                                    1- 1610     ;has an exit
                                    1- 1611     ;functions called:
                                    1- 1612     ;   _F_AIN2_Convert
                                    1- 1613     ;   _F_AIN2_Convert
                                    1- 1614     ;4 compiler assigned registers:
                                    1- 1615     ;   r0x104B
                                    1- 1616     ;   r0x104C
                                    1- 1617     ;   r0x104D
                                    1- 1618     ;   r0x104E
                                    1- 1619     ;; Starting pCode block
                                    1- 1620     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1622     _checkBatAD:
                                    1- 1623     ; 2 exit points
                                    1- 1624     	.line	674, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1625     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1626     	CLRR	_R_AIN2_DATA_LB
                                    1- 1627     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1628     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1629     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1630     	.line	675, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1631     	MOVIA	0x08
     0006 2rrr                      1- 1632     	LCALL	_F_AIN2_Convert
                                    1- 1633     	.line	676, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1634     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1635     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1636     	ANDIA	0xf0
     000A 00rr                      1- 1637     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1638     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1639     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1640     	ANDIA	0x0f
     000E 11rr                      1- 1641     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1642     	XORAR	_R_AIN2_DATA,F
                                    1- 1643     	.line	677, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1644     	MOVIA	0xf0
                                    1- 1645     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1646     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1647     	.line	678, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1648     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1649     	BANKSEL	r0x104D
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1650     	MOVAR	r0x104D
                                    1- 1651     ;;1	MOVAR	r0x104B
                                    1- 1652     ;;1	CLRR	r0x104C
                                    1- 1653     ;;99	MOVR	r0x104B,W
     0016 2100                      1- 1654     	MOVIA	0x00
                                    1- 1655     	BANKSEL	r0x104E
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1656     	MOVAR	r0x104E
                                    1- 1657     	BANKSEL	r0x104D
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1658     	MOVR	r0x104D,W
                                    1- 1659     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1660     	ADDAR	_R_AIN2_DATA,F
                                    1- 1661     	BANKSEL	r0x104E
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1662     	MOVR	r0x104E,W
     001F 0C03                      1- 1663     	BTRSC	STATUS,0
     0020 05rr                      1- 1664     	INCR	r0x104E,W
     0021 0D03                      1- 1665     	BTRSC	STATUS,2
     0022 3rrr                      1- 1666     	LGOTO	_00006_DS_
                                    1- 1667     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1668     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1669     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1670     _00006_DS_:
                                    1- 1671     	.line	679, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 1672     	BCR	STATUS,0
                                    1- 1673     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1674     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1675     	RRR	_R_AIN2_DATA,F
                                    1- 1676     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1677     	BCR	STATUS,0
     002A 13rr                      1- 1678     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1679     	RRR	_R_AIN2_DATA,F
                                    1- 1680     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1681     	BCR	STATUS,0
     002D 13rr                      1- 1682     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1683     	RRR	_R_AIN2_DATA,F
                                    1- 1684     	.line	680, "main.c"; 	if(debug)
                                    1- 1685     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1686     	MOVR	_debug,W
     0031 0D03                      1- 1687     	BTRSC	STATUS,2
     0032 3rrr                      1- 1688     	LGOTO	_00532_DS_
                                    1- 1689     	.line	681, "main.c"; 	R_AIN2_DATA = BATTLE;
     0033 210E                      1- 1690     	MOVIA	0x0e
                                    1- 1691     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1692     	MOVAR	_R_AIN2_DATA
     0036 2106                      1- 1693     	MOVIA	0x06
     0037 00rr                      1- 1694     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1695     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1696     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     0038                           1- 1697     _00532_DS_:
                                    1- 1698     	.line	683, "main.c"; 	if(R_AIN2_DATA > 1550)
     0038 2106                      1- 1699     	MOVIA	0x06
                                    1- 1700     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1701     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1702     	BTRSS	STATUS,2
     003C 3rrr                      1- 1703     	LGOTO	_00738_DS_
     003D 210F                      1- 1704     	MOVIA	0x0f
     003E 04rr                      1- 1705     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1706     _00738_DS_:
     003F 0803                      1- 1707     	BTRSS	STATUS,0
     0040 3rrr                      1- 1708     	LGOTO	_00544_DS_
                                    1- 1709     	.line	686, "main.c"; 	lowCount = 0;
                                    1- 1710     	BANKSEL	_lowCount
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 02rr                      1- 1711     	CLRR	_lowCount
     0043 3rrr                      1- 1712     	LGOTO	_00545_DS_
                                    1- 1713     ;;unsigned compare: left < lit (0x479=1145), size=2
     0044                           1- 1714     _00544_DS_:
                                    1- 1715     	.line	688, "main.c"; 	else if(R_AIN2_DATA < 1145)
     0044 2104                      1- 1716     	MOVIA	0x04
                                    1- 1717     	BANKSEL	_R_AIN2_DATA
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 04rr                      1- 1718     	SUBAR	(_R_AIN2_DATA + 1),W
     0047 0903                      1- 1719     	BTRSS	STATUS,2
     0048 3rrr                      1- 1720     	LGOTO	_00739_DS_
     0049 2179                      1- 1721     	MOVIA	0x79
     004A 04rr                      1- 1722     	SUBAR	_R_AIN2_DATA,W
     004B                           1- 1723     _00739_DS_:
     004B 0C03                      1- 1724     	BTRSC	STATUS,0
     004C 3rrr                      1- 1725     	LGOTO	_00541_DS_
                                    1- 1726     	.line	690, "main.c"; 	if(++lowCount < 10)
                                    1- 1727     	BANKSEL	_lowCount
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 05rr                      1- 1728     	INCR	_lowCount,F
                                    1- 1729     ;;unsigned compare: left < lit (0xA=10), size=1
     004F 210A                      1- 1730     	MOVIA	0x0a
     0050 04rr                      1- 1731     	SUBAR	_lowCount,W
     0051 0803                      1- 1732     	BTRSS	STATUS,0
                                    1- 1733     	.line	691, "main.c"; 	return;
     0052 3rrr                      1- 1734     	LGOTO	_00619_DS_
                                    1- 1735     	.line	692, "main.c"; 	lowCount = 10;
     0053 210A                      1- 1736     	MOVIA	0x0a
     0054 00rr                      1- 1737     	MOVAR	_lowCount
                                    1- 1738     	.line	693, "main.c"; 	pwStep = 0;
                                    1- 1739     	BANKSEL	_pwStep
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 02rr                      1- 1740     	CLRR	_pwStep
                                    1- 1741     	.line	694, "main.c"; 	R_AIN2_DATA = 1145;
     0057 2179                      1- 1742     	MOVIA	0x79
                                    1- 1743     	BANKSEL	_R_AIN2_DATA
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 00rr                      1- 1744     	MOVAR	_R_AIN2_DATA
     005A 2104                      1- 1745     	MOVIA	0x04
     005B 00rr                      1- 1746     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1747     	.line	696, "main.c"; 	if(workStep > 0 && ++firstTime == 10)
                                    1- 1748     	BANKSEL	_workStep
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 1749     	MOVR	_workStep,W
     005E 0D03                      1- 1750     	BTRSC	STATUS,2
     005F 3rrr                      1- 1751     	LGOTO	_00536_DS_
                                    1- 1752     	BANKSEL	_firstTime
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 05rr                      1- 1753     	INCR	_firstTime,F
     0062 01rr                      1- 1754     	MOVR	_firstTime,W
     0063 240A                      1- 1755     	XORIA	0x0a
     0064 0903                      1- 1756     	BTRSS	STATUS,2
     0065 3rrr                      1- 1757     	LGOTO	_00536_DS_
                                    1- 1758     	.line	698, "main.c"; 	shanshuoTime = 16;
     0066 2110                      1- 1759     	MOVIA	0x10
                                    1- 1760     	BANKSEL	_shanshuoTime
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1- 1761     	MOVAR	_shanshuoTime
                                    1- 1762     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1763     ;;unsigned compare: left >= lit (0xC=12), size=1
     0069                           1- 1764     _00536_DS_:
                                    1- 1765     	.line	701, "main.c"; 	if(firstTime > 11)
     0069 210C                      1- 1766     	MOVIA	0x0c
                                    1- 1767     	BANKSEL	_firstTime
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 04rr                      1- 1768     	SUBAR	_firstTime,W
     006C 0803                      1- 1769     	BTRSS	STATUS,0
     006D 3rrr                      1- 1770     	LGOTO	_00545_DS_
                                    1- 1771     	.line	702, "main.c"; 	firstTime = 11;
     006E 210B                      1- 1772     	MOVIA	0x0b
     006F 00rr                      1- 1773     	MOVAR	_firstTime
     0070 3rrr                      1- 1774     	LGOTO	_00545_DS_
     0071                           1- 1775     _00541_DS_:
                                    1- 1776     	.line	706, "main.c"; 	lowCount = 0;
                                    1- 1777     	BANKSEL	_lowCount
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 02rr                      1- 1778     	CLRR	_lowCount
                                    1- 1779     	.line	707, "main.c"; 	firstTime = 0;
                                    1- 1780     	BANKSEL	_firstTime
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 02rr                      1- 1781     	CLRR	_firstTime
     0075                           1- 1782     _00545_DS_:
                                    1- 1783     	.line	709, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1145;
     0075 2187                      1- 1784     	MOVIA	0x87
                                    1- 1785     	BANKSEL	_R_AIN2_DATA
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 03rr                      1- 1786     	ADDAR	_R_AIN2_DATA,F
     0078 21FB                      1- 1787     	MOVIA	0xfb
     0079 0C03                      1- 1788     	BTRSC	STATUS,0
     007A 21FC                      1- 1789     	MOVIA	0xfc
     007B 03rr                      1- 1790     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1791     ;;unsigned compare: left < lit (0x1A6=422), size=2
                                    1- 1792     	.line	711, "main.c"; 	if(R_AIN2_DATA >= 422)
     007C 2101                      1- 1793     	MOVIA	0x01
     007D 04rr                      1- 1794     	SUBAR	(_R_AIN2_DATA + 1),W
     007E 0903                      1- 1795     	BTRSS	STATUS,2
     007F 3rrr                      1- 1796     	LGOTO	_00742_DS_
     0080 21A6                      1- 1797     	MOVIA	0xa6
     0081 04rr                      1- 1798     	SUBAR	_R_AIN2_DATA,W
     0082                           1- 1799     _00742_DS_:
     0082 0803                      1- 1800     	BTRSS	STATUS,0
     0083 3rrr                      1- 1801     	LGOTO	_00617_DS_
                                    1- 1802     	.line	713, "main.c"; 	pwStep = 7;
     0084 2107                      1- 1803     	MOVIA	0x07
                                    1- 1804     	BANKSEL	_pwStep
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 00rr                      1- 1805     	MOVAR	_pwStep
     0087 3rrr                      1- 1806     	LGOTO	_00619_DS_
                                    1- 1807     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1808     ;;unsigned compare: left >= lit (0x15F=351), size=2
     0088                           1- 1809     _00617_DS_:
                                    1- 1810     	.line	715, "main.c"; 	else if(R_AIN2_DATA > 350)
     0088 2101                      1- 1811     	MOVIA	0x01
                                    1- 1812     	BANKSEL	_R_AIN2_DATA
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 04rr                      1- 1813     	SUBAR	(_R_AIN2_DATA + 1),W
     008B 0903                      1- 1814     	BTRSS	STATUS,2
     008C 3rrr                      1- 1815     	LGOTO	_00743_DS_
     008D 215F                      1- 1816     	MOVIA	0x5f
     008E 04rr                      1- 1817     	SUBAR	_R_AIN2_DATA,W
     008F                           1- 1818     _00743_DS_:
     008F 0803                      1- 1819     	BTRSS	STATUS,0
     0090 3rrr                      1- 1820     	LGOTO	_00614_DS_
                                    1- 1821     	.line	717, "main.c"; 	fullCount = 0;
                                    1- 1822     	BANKSEL	_fullCount
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 02rr                      1- 1823     	CLRR	_fullCount
                                    1- 1824     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1825     	.line	718, "main.c"; 	if(pwStep < 6)
     0093 2106                      1- 1826     	MOVIA	0x06
                                    1- 1827     	BANKSEL	_pwStep
     0094 rrrr                      3-   71 m1      .banksel ram_address
     0095 04rr                      1- 1828     	SUBAR	_pwStep,W
     0096 0C03                      1- 1829     	BTRSC	STATUS,0
     0097 3rrr                      1- 1830     	LGOTO	_00552_DS_
                                    1- 1831     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1832     ;;unsigned compare: left >= lit (0x164=356), size=2
                                    1- 1833     	.line	720, "main.c"; 	if(R_AIN2_DATA > 355)
     0098 2101                      1- 1834     	MOVIA	0x01
                                    1- 1835     	BANKSEL	_R_AIN2_DATA
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 04rr                      1- 1836     	SUBAR	(_R_AIN2_DATA + 1),W
     009B 0903                      1- 1837     	BTRSS	STATUS,2
     009C 3rrr                      1- 1838     	LGOTO	_00745_DS_
     009D 2164                      1- 1839     	MOVIA	0x64
     009E 04rr                      1- 1840     	SUBAR	_R_AIN2_DATA,W
     009F                           1- 1841     _00745_DS_:
     009F 0803                      1- 1842     	BTRSS	STATUS,0
     00A0 3rrr                      1- 1843     	LGOTO	_00553_DS_
                                    1- 1844     	.line	721, "main.c"; 	pwStep = 6;
     00A1 2106                      1- 1845     	MOVIA	0x06
                                    1- 1846     	BANKSEL	_pwStep
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 00rr                      1- 1847     	MOVAR	_pwStep
     00A4 3rrr                      1- 1848     	LGOTO	_00553_DS_
     00A5                           1- 1849     _00552_DS_:
                                    1- 1850     	.line	723, "main.c"; 	else if(chrgTime == 0 && R_AIN2_DATA < 396)
                                    1- 1851     	BANKSEL	_chrgTime
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 01rr                      1- 1852     	MOVR	_chrgTime,W
     00A7 11rr                      1- 1853     	IORAR	(_chrgTime + 1),W
     00A8 0903                      1- 1854     	BTRSS	STATUS,2
     00A9 3rrr                      1- 1855     	LGOTO	_00553_DS_
                                    1- 1856     ;;unsigned compare: left < lit (0x18C=396), size=2
     00AA 2101                      1- 1857     	MOVIA	0x01
                                    1- 1858     	BANKSEL	_R_AIN2_DATA
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 04rr                      1- 1859     	SUBAR	(_R_AIN2_DATA + 1),W
     00AD 0903                      1- 1860     	BTRSS	STATUS,2
     00AE 3rrr                      1- 1861     	LGOTO	_00746_DS_
     00AF 218C                      1- 1862     	MOVIA	0x8c
     00B0 04rr                      1- 1863     	SUBAR	_R_AIN2_DATA,W
     00B1                           1- 1864     _00746_DS_:
     00B1 0C03                      1- 1865     	BTRSC	STATUS,0
     00B2 3rrr                      1- 1866     	LGOTO	_00553_DS_
                                    1- 1867     	.line	725, "main.c"; 	pwStep = 6;
     00B3 2106                      1- 1868     	MOVIA	0x06
                                    1- 1869     	BANKSEL	_pwStep
     00B4 rrrr                      3-   71 m1      .banksel ram_address
     00B5 00rr                      1- 1870     	MOVAR	_pwStep
     00B6                           1- 1871     _00553_DS_:
                                    1- 1872     	.line	729, "main.c"; 	if(chrgTime > 0 && R_AIN2_DATA > 395 && chrgTime > 600)
                                    1- 1873     	BANKSEL	_chrgTime
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 01rr                      1- 1874     	MOVR	_chrgTime,W
     00B8 11rr                      1- 1875     	IORAR	(_chrgTime + 1),W
     00B9 0D03                      1- 1876     	BTRSC	STATUS,2
     00BA 3rrr                      1- 1877     	LGOTO	_00619_DS_
                                    1- 1878     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1879     ;;unsigned compare: left >= lit (0x18C=396), size=2
     00BB 2101                      1- 1880     	MOVIA	0x01
                                    1- 1881     	BANKSEL	_R_AIN2_DATA
     00BC rrrr                      3-   71 m1      .banksel ram_address
     00BD 04rr                      1- 1882     	SUBAR	(_R_AIN2_DATA + 1),W
     00BE 0903                      1- 1883     	BTRSS	STATUS,2
     00BF 3rrr                      1- 1884     	LGOTO	_00747_DS_
     00C0 218C                      1- 1885     	MOVIA	0x8c
     00C1 04rr                      1- 1886     	SUBAR	_R_AIN2_DATA,W
     00C2                           1- 1887     _00747_DS_:
     00C2 0803                      1- 1888     	BTRSS	STATUS,0
     00C3 3rrr                      1- 1889     	LGOTO	_00619_DS_
                                    1- 1890     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1891     ;;unsigned compare: left >= lit (0x259=601), size=2
     00C4 2102                      1- 1892     	MOVIA	0x02
                                    1- 1893     	BANKSEL	_chrgTime
     00C5 rrrr                      3-   71 m1      .banksel ram_address
     00C6 04rr                      1- 1894     	SUBAR	(_chrgTime + 1),W
     00C7 0903                      1- 1895     	BTRSS	STATUS,2
     00C8 3rrr                      1- 1896     	LGOTO	_00748_DS_
     00C9 2159                      1- 1897     	MOVIA	0x59
     00CA 04rr                      1- 1898     	SUBAR	_chrgTime,W
     00CB                           1- 1899     _00748_DS_:
     00CB 0803                      1- 1900     	BTRSS	STATUS,0
     00CC 3rrr                      1- 1901     	LGOTO	_00619_DS_
                                    1- 1902     	.line	731, "main.c"; 	chrgTime = 600;
     00CD 2158                      1- 1903     	MOVIA	0x58
                                    1- 1904     	BANKSEL	_chrgTime
     00CE rrrr                      3-   71 m1      .banksel ram_address
     00CF 00rr                      1- 1905     	MOVAR	_chrgTime
     00D0 2102                      1- 1906     	MOVIA	0x02
     00D1 00rr                      1- 1907     	MOVAR	(_chrgTime + 1)
                                    1- 1908     	.line	732, "main.c"; 	pwStep = 7;
     00D2 2107                      1- 1909     	MOVIA	0x07
                                    1- 1910     	BANKSEL	_pwStep
     00D3 rrrr                      3-   71 m1      .banksel ram_address
     00D4 00rr                      1- 1911     	MOVAR	_pwStep
     00D5 3rrr                      1- 1912     	LGOTO	_00619_DS_
                                    1- 1913     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1914     ;;unsigned compare: left >= lit (0x146=326), size=2
     00D6                           1- 1915     _00614_DS_:
                                    1- 1916     	.line	735, "main.c"; 	else if(R_AIN2_DATA > 325)
     00D6 2101                      1- 1917     	MOVIA	0x01
                                    1- 1918     	BANKSEL	_R_AIN2_DATA
     00D7 rrrr                      3-   71 m1      .banksel ram_address
     00D8 04rr                      1- 1919     	SUBAR	(_R_AIN2_DATA + 1),W
     00D9 0903                      1- 1920     	BTRSS	STATUS,2
     00DA 3rrr                      1- 1921     	LGOTO	_00749_DS_
     00DB 2146                      1- 1922     	MOVIA	0x46
     00DC 04rr                      1- 1923     	SUBAR	_R_AIN2_DATA,W
     00DD                           1- 1924     _00749_DS_:
     00DD 0803                      1- 1925     	BTRSS	STATUS,0
     00DE 3rrr                      1- 1926     	LGOTO	_00611_DS_
                                    1- 1927     	.line	738, "main.c"; 	if(pwStep == 4)
                                    1- 1928     	BANKSEL	_pwStep
     00DF rrrr                      3-   71 m1      .banksel ram_address
     00E0 01rr                      1- 1929     	MOVR	_pwStep,W
     00E1 2404                      1- 1930     	XORIA	0x04
     00E2 0903                      1- 1931     	BTRSS	STATUS,2
     00E3 3rrr                      1- 1932     	LGOTO	_00561_DS_
                                    1- 1933     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1934     ;;unsigned compare: left >= lit (0x14B=331), size=2
                                    1- 1935     	.line	740, "main.c"; 	if(R_AIN2_DATA > 330)
     00E4 2101                      1- 1936     	MOVIA	0x01
                                    1- 1937     	BANKSEL	_R_AIN2_DATA
     00E5 rrrr                      3-   71 m1      .banksel ram_address
     00E6 04rr                      1- 1938     	SUBAR	(_R_AIN2_DATA + 1),W
     00E7 0903                      1- 1939     	BTRSS	STATUS,2
     00E8 3rrr                      1- 1940     	LGOTO	_00750_DS_
     00E9 214B                      1- 1941     	MOVIA	0x4b
     00EA 04rr                      1- 1942     	SUBAR	_R_AIN2_DATA,W
     00EB                           1- 1943     _00750_DS_:
     00EB 0803                      1- 1944     	BTRSS	STATUS,0
     00EC 3rrr                      1- 1945     	LGOTO	_00561_DS_
                                    1- 1946     	.line	741, "main.c"; 	pwStep = 5;
     00ED 2105                      1- 1947     	MOVIA	0x05
                                    1- 1948     	BANKSEL	_pwStep
     00EE rrrr                      3-   71 m1      .banksel ram_address
     00EF 00rr                      1- 1949     	MOVAR	_pwStep
                                    1- 1950     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1951     ;;unsigned compare: left >= lit (0x6=6), size=1
     00F0                           1- 1952     _00561_DS_:
                                    1- 1953     	.line	743, "main.c"; 	if(pwStep > 5)
     00F0 2106                      1- 1954     	MOVIA	0x06
                                    1- 1955     	BANKSEL	_pwStep
     00F1 rrrr                      3-   71 m1      .banksel ram_address
     00F2 04rr                      1- 1956     	SUBAR	_pwStep,W
     00F3 0803                      1- 1957     	BTRSS	STATUS,0
     00F4 3rrr                      1- 1958     	LGOTO	_00565_DS_
                                    1- 1959     ;;unsigned compare: left < lit (0x16D=365), size=2
                                    1- 1960     	.line	745, "main.c"; 	if(R_AIN2_DATA < 365)
     00F5 2101                      1- 1961     	MOVIA	0x01
                                    1- 1962     	BANKSEL	_R_AIN2_DATA
     00F6 rrrr                      3-   71 m1      .banksel ram_address
     00F7 04rr                      1- 1963     	SUBAR	(_R_AIN2_DATA + 1),W
     00F8 0903                      1- 1964     	BTRSS	STATUS,2
     00F9 3rrr                      1- 1965     	LGOTO	_00752_DS_
     00FA 216D                      1- 1966     	MOVIA	0x6d
     00FB 04rr                      1- 1967     	SUBAR	_R_AIN2_DATA,W
     00FC                           1- 1968     _00752_DS_:
     00FC 0C03                      1- 1969     	BTRSC	STATUS,0
     00FD 3rrr                      1- 1970     	LGOTO	_00566_DS_
                                    1- 1971     	.line	746, "main.c"; 	pwStep = 5;
     00FE 2105                      1- 1972     	MOVIA	0x05
                                    1- 1973     	BANKSEL	_pwStep
     00FF rrrr                      3-   71 m1      .banksel ram_address
     0100 00rr                      1- 1974     	MOVAR	_pwStep
     0101 3rrr                      1- 1975     	LGOTO	_00566_DS_
     0102                           1- 1976     _00565_DS_:
                                    1- 1977     	.line	749, "main.c"; 	pwStep = 5;
     0102 2105                      1- 1978     	MOVIA	0x05
                                    1- 1979     	BANKSEL	_pwStep
     0103 rrrr                      3-   71 m1      .banksel ram_address
     0104 00rr                      1- 1980     	MOVAR	_pwStep
     0105                           1- 1981     _00566_DS_:
                                    1- 1982     	.line	750, "main.c"; 	chrgTime = 0;
                                    1- 1983     	BANKSEL	_chrgTime
     0105 rrrr                      3-   71 m1      .banksel ram_address
     0106 02rr                      1- 1984     	CLRR	_chrgTime
     0107 02rr                      1- 1985     	CLRR	(_chrgTime + 1)
     0108 3rrr                      1- 1986     	LGOTO	_00619_DS_
                                    1- 1987     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1988     ;;unsigned compare: left >= lit (0x105=261), size=2
     0109                           1- 1989     _00611_DS_:
                                    1- 1990     	.line	752, "main.c"; 	else if(R_AIN2_DATA > 260)
     0109 2101                      1- 1991     	MOVIA	0x01
                                    1- 1992     	BANKSEL	_R_AIN2_DATA
     010A rrrr                      3-   71 m1      .banksel ram_address
     010B 04rr                      1- 1993     	SUBAR	(_R_AIN2_DATA + 1),W
     010C 0903                      1- 1994     	BTRSS	STATUS,2
     010D 3rrr                      1- 1995     	LGOTO	_00753_DS_
     010E 2105                      1- 1996     	MOVIA	0x05
     010F 04rr                      1- 1997     	SUBAR	_R_AIN2_DATA,W
     0110                           1- 1998     _00753_DS_:
     0110 0803                      1- 1999     	BTRSS	STATUS,0
     0111 3rrr                      1- 2000     	LGOTO	_00608_DS_
                                    1- 2001     	.line	754, "main.c"; 	if(pwStep == 3)
                                    1- 2002     	BANKSEL	_pwStep
     0112 rrrr                      3-   71 m1      .banksel ram_address
     0113 01rr                      1- 2003     	MOVR	_pwStep,W
     0114 2403                      1- 2004     	XORIA	0x03
     0115 0903                      1- 2005     	BTRSS	STATUS,2
     0116 3rrr                      1- 2006     	LGOTO	_00570_DS_
                                    1- 2007     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2008     ;;unsigned compare: left >= lit (0x10A=266), size=2
                                    1- 2009     	.line	756, "main.c"; 	if(R_AIN2_DATA > 265)
     0117 2101                      1- 2010     	MOVIA	0x01
                                    1- 2011     	BANKSEL	_R_AIN2_DATA
     0118 rrrr                      3-   71 m1      .banksel ram_address
     0119 04rr                      1- 2012     	SUBAR	(_R_AIN2_DATA + 1),W
     011A 0903                      1- 2013     	BTRSS	STATUS,2
     011B 3rrr                      1- 2014     	LGOTO	_00754_DS_
     011C 210A                      1- 2015     	MOVIA	0x0a
     011D 04rr                      1- 2016     	SUBAR	_R_AIN2_DATA,W
     011E                           1- 2017     _00754_DS_:
     011E 0803                      1- 2018     	BTRSS	STATUS,0
     011F 3rrr                      1- 2019     	LGOTO	_00570_DS_
                                    1- 2020     	.line	757, "main.c"; 	pwStep = 4;
     0120 2104                      1- 2021     	MOVIA	0x04
                                    1- 2022     	BANKSEL	_pwStep
     0121 rrrr                      3-   71 m1      .banksel ram_address
     0122 00rr                      1- 2023     	MOVAR	_pwStep
                                    1- 2024     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2025     ;;unsigned compare: left >= lit (0x5=5), size=1
     0123                           1- 2026     _00570_DS_:
                                    1- 2027     	.line	759, "main.c"; 	if(pwStep > 4)
     0123 2105                      1- 2028     	MOVIA	0x05
                                    1- 2029     	BANKSEL	_pwStep
     0124 rrrr                      3-   71 m1      .banksel ram_address
     0125 04rr                      1- 2030     	SUBAR	_pwStep,W
     0126 0803                      1- 2031     	BTRSS	STATUS,0
     0127 3rrr                      1- 2032     	LGOTO	_00574_DS_
                                    1- 2033     ;;unsigned compare: left < lit (0x140=320), size=2
                                    1- 2034     	.line	761, "main.c"; 	if(R_AIN2_DATA < 320)
     0128 2101                      1- 2035     	MOVIA	0x01
                                    1- 2036     	BANKSEL	_R_AIN2_DATA
     0129 rrrr                      3-   71 m1      .banksel ram_address
     012A 04rr                      1- 2037     	SUBAR	(_R_AIN2_DATA + 1),W
     012B 0903                      1- 2038     	BTRSS	STATUS,2
     012C 3rrr                      1- 2039     	LGOTO	_00756_DS_
     012D 2140                      1- 2040     	MOVIA	0x40
     012E 04rr                      1- 2041     	SUBAR	_R_AIN2_DATA,W
     012F                           1- 2042     _00756_DS_:
     012F 0C03                      1- 2043     	BTRSC	STATUS,0
     0130 3rrr                      1- 2044     	LGOTO	_00575_DS_
                                    1- 2045     	.line	762, "main.c"; 	pwStep = 4;
     0131 2104                      1- 2046     	MOVIA	0x04
                                    1- 2047     	BANKSEL	_pwStep
     0132 rrrr                      3-   71 m1      .banksel ram_address
     0133 00rr                      1- 2048     	MOVAR	_pwStep
     0134 3rrr                      1- 2049     	LGOTO	_00575_DS_
     0135                           1- 2050     _00574_DS_:
                                    1- 2051     	.line	765, "main.c"; 	pwStep = 4;
     0135 2104                      1- 2052     	MOVIA	0x04
                                    1- 2053     	BANKSEL	_pwStep
     0136 rrrr                      3-   71 m1      .banksel ram_address
     0137 00rr                      1- 2054     	MOVAR	_pwStep
     0138                           1- 2055     _00575_DS_:
                                    1- 2056     	.line	766, "main.c"; 	chrgTime = 0;
                                    1- 2057     	BANKSEL	_chrgTime
     0138 rrrr                      3-   71 m1      .banksel ram_address
     0139 02rr                      1- 2058     	CLRR	_chrgTime
     013A 02rr                      1- 2059     	CLRR	(_chrgTime + 1)
     013B 3rrr                      1- 2060     	LGOTO	_00619_DS_
                                    1- 2061     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2062     ;;unsigned compare: left >= lit (0xC9=201), size=2
     013C                           1- 2063     _00608_DS_:
                                    1- 2064     	.line	768, "main.c"; 	else if(R_AIN2_DATA > 200)
     013C 2100                      1- 2065     	MOVIA	0x00
                                    1- 2066     	BANKSEL	_R_AIN2_DATA
     013D rrrr                      3-   71 m1      .banksel ram_address
     013E 04rr                      1- 2067     	SUBAR	(_R_AIN2_DATA + 1),W
     013F 0903                      1- 2068     	BTRSS	STATUS,2
     0140 3rrr                      1- 2069     	LGOTO	_00757_DS_
     0141 21C9                      1- 2070     	MOVIA	0xc9
     0142 04rr                      1- 2071     	SUBAR	_R_AIN2_DATA,W
     0143                           1- 2072     _00757_DS_:
     0143 0803                      1- 2073     	BTRSS	STATUS,0
     0144 3rrr                      1- 2074     	LGOTO	_00605_DS_
                                    1- 2075     	.line	770, "main.c"; 	if(pwStep == 2)
                                    1- 2076     	BANKSEL	_pwStep
     0145 rrrr                      3-   71 m1      .banksel ram_address
     0146 01rr                      1- 2077     	MOVR	_pwStep,W
     0147 2402                      1- 2078     	XORIA	0x02
     0148 0903                      1- 2079     	BTRSS	STATUS,2
     0149 3rrr                      1- 2080     	LGOTO	_00579_DS_
                                    1- 2081     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2082     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 2083     	.line	772, "main.c"; 	if(R_AIN2_DATA > 210)
     014A 2100                      1- 2084     	MOVIA	0x00
                                    1- 2085     	BANKSEL	_R_AIN2_DATA
     014B rrrr                      3-   71 m1      .banksel ram_address
     014C 04rr                      1- 2086     	SUBAR	(_R_AIN2_DATA + 1),W
     014D 0903                      1- 2087     	BTRSS	STATUS,2
     014E 3rrr                      1- 2088     	LGOTO	_00758_DS_
     014F 21D3                      1- 2089     	MOVIA	0xd3
     0150 04rr                      1- 2090     	SUBAR	_R_AIN2_DATA,W
     0151                           1- 2091     _00758_DS_:
     0151 0803                      1- 2092     	BTRSS	STATUS,0
     0152 3rrr                      1- 2093     	LGOTO	_00579_DS_
                                    1- 2094     	.line	773, "main.c"; 	pwStep = 3;
     0153 2103                      1- 2095     	MOVIA	0x03
                                    1- 2096     	BANKSEL	_pwStep
     0154 rrrr                      3-   71 m1      .banksel ram_address
     0155 00rr                      1- 2097     	MOVAR	_pwStep
                                    1- 2098     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2099     ;;unsigned compare: left >= lit (0x4=4), size=1
     0156                           1- 2100     _00579_DS_:
                                    1- 2101     	.line	775, "main.c"; 	if(pwStep > 3)
     0156 2104                      1- 2102     	MOVIA	0x04
                                    1- 2103     	BANKSEL	_pwStep
     0157 rrrr                      3-   71 m1      .banksel ram_address
     0158 04rr                      1- 2104     	SUBAR	_pwStep,W
     0159 0803                      1- 2105     	BTRSS	STATUS,0
     015A 3rrr                      1- 2106     	LGOTO	_00583_DS_
                                    1- 2107     ;;unsigned compare: left < lit (0x104=260), size=2
                                    1- 2108     	.line	777, "main.c"; 	if(R_AIN2_DATA < 260)
     015B 2101                      1- 2109     	MOVIA	0x01
                                    1- 2110     	BANKSEL	_R_AIN2_DATA
     015C rrrr                      3-   71 m1      .banksel ram_address
     015D 04rr                      1- 2111     	SUBAR	(_R_AIN2_DATA + 1),W
     015E 0903                      1- 2112     	BTRSS	STATUS,2
     015F 3rrr                      1- 2113     	LGOTO	_00760_DS_
     0160 2104                      1- 2114     	MOVIA	0x04
     0161 04rr                      1- 2115     	SUBAR	_R_AIN2_DATA,W
     0162                           1- 2116     _00760_DS_:
     0162 0C03                      1- 2117     	BTRSC	STATUS,0
     0163 3rrr                      1- 2118     	LGOTO	_00584_DS_
                                    1- 2119     	.line	778, "main.c"; 	pwStep = 3;
     0164 2103                      1- 2120     	MOVIA	0x03
                                    1- 2121     	BANKSEL	_pwStep
     0165 rrrr                      3-   71 m1      .banksel ram_address
     0166 00rr                      1- 2122     	MOVAR	_pwStep
     0167 3rrr                      1- 2123     	LGOTO	_00584_DS_
     0168                           1- 2124     _00583_DS_:
                                    1- 2125     	.line	781, "main.c"; 	pwStep = 3;
     0168 2103                      1- 2126     	MOVIA	0x03
                                    1- 2127     	BANKSEL	_pwStep
     0169 rrrr                      3-   71 m1      .banksel ram_address
     016A 00rr                      1- 2128     	MOVAR	_pwStep
     016B                           1- 2129     _00584_DS_:
                                    1- 2130     	.line	782, "main.c"; 	chrgTime = 0;
                                    1- 2131     	BANKSEL	_chrgTime
     016B rrrr                      3-   71 m1      .banksel ram_address
     016C 02rr                      1- 2132     	CLRR	_chrgTime
     016D 02rr                      1- 2133     	CLRR	(_chrgTime + 1)
     016E 3rrr                      1- 2134     	LGOTO	_00619_DS_
                                    1- 2135     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2136     ;;unsigned compare: left >= lit (0x65=101), size=2
     016F                           1- 2137     _00605_DS_:
                                    1- 2138     	.line	784, "main.c"; 	else if(R_AIN2_DATA > 100)
     016F 2100                      1- 2139     	MOVIA	0x00
                                    1- 2140     	BANKSEL	_R_AIN2_DATA
     0170 rrrr                      3-   71 m1      .banksel ram_address
     0171 04rr                      1- 2141     	SUBAR	(_R_AIN2_DATA + 1),W
     0172 0903                      1- 2142     	BTRSS	STATUS,2
     0173 3rrr                      1- 2143     	LGOTO	_00761_DS_
     0174 2165                      1- 2144     	MOVIA	0x65
     0175 04rr                      1- 2145     	SUBAR	_R_AIN2_DATA,W
     0176                           1- 2146     _00761_DS_:
     0176 0803                      1- 2147     	BTRSS	STATUS,0
     0177 3rrr                      1- 2148     	LGOTO	_00602_DS_
                                    1- 2149     	.line	787, "main.c"; 	if(pwStep == 1)
                                    1- 2150     	BANKSEL	_pwStep
     0178 rrrr                      3-   71 m1      .banksel ram_address
     0179 01rr                      1- 2151     	MOVR	_pwStep,W
     017A 2401                      1- 2152     	XORIA	0x01
     017B 0903                      1- 2153     	BTRSS	STATUS,2
     017C 3rrr                      1- 2154     	LGOTO	_00588_DS_
                                    1- 2155     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2156     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 2157     	.line	789, "main.c"; 	if(R_AIN2_DATA > 110)
     017D 2100                      1- 2158     	MOVIA	0x00
                                    1- 2159     	BANKSEL	_R_AIN2_DATA
     017E rrrr                      3-   71 m1      .banksel ram_address
     017F 04rr                      1- 2160     	SUBAR	(_R_AIN2_DATA + 1),W
     0180 0903                      1- 2161     	BTRSS	STATUS,2
     0181 3rrr                      1- 2162     	LGOTO	_00762_DS_
     0182 216F                      1- 2163     	MOVIA	0x6f
     0183 04rr                      1- 2164     	SUBAR	_R_AIN2_DATA,W
     0184                           1- 2165     _00762_DS_:
     0184 0803                      1- 2166     	BTRSS	STATUS,0
     0185 3rrr                      1- 2167     	LGOTO	_00588_DS_
                                    1- 2168     	.line	790, "main.c"; 	pwStep = 2;
     0186 2102                      1- 2169     	MOVIA	0x02
                                    1- 2170     	BANKSEL	_pwStep
     0187 rrrr                      3-   71 m1      .banksel ram_address
     0188 00rr                      1- 2171     	MOVAR	_pwStep
                                    1- 2172     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2173     ;;unsigned compare: left >= lit (0x3=3), size=1
     0189                           1- 2174     _00588_DS_:
                                    1- 2175     	.line	792, "main.c"; 	if(pwStep > 2)
     0189 2103                      1- 2176     	MOVIA	0x03
                                    1- 2177     	BANKSEL	_pwStep
     018A rrrr                      3-   71 m1      .banksel ram_address
     018B 04rr                      1- 2178     	SUBAR	_pwStep,W
     018C 0803                      1- 2179     	BTRSS	STATUS,0
     018D 3rrr                      1- 2180     	LGOTO	_00592_DS_
                                    1- 2181     ;;unsigned compare: left < lit (0xBE=190), size=2
                                    1- 2182     	.line	794, "main.c"; 	if(R_AIN2_DATA < 190)
     018E 2100                      1- 2183     	MOVIA	0x00
                                    1- 2184     	BANKSEL	_R_AIN2_DATA
     018F rrrr                      3-   71 m1      .banksel ram_address
     0190 04rr                      1- 2185     	SUBAR	(_R_AIN2_DATA + 1),W
     0191 0903                      1- 2186     	BTRSS	STATUS,2
     0192 3rrr                      1- 2187     	LGOTO	_00764_DS_
     0193 21BE                      1- 2188     	MOVIA	0xbe
     0194 04rr                      1- 2189     	SUBAR	_R_AIN2_DATA,W
     0195                           1- 2190     _00764_DS_:
     0195 0C03                      1- 2191     	BTRSC	STATUS,0
     0196 3rrr                      1- 2192     	LGOTO	_00593_DS_
                                    1- 2193     	.line	795, "main.c"; 	pwStep = 2;
     0197 2102                      1- 2194     	MOVIA	0x02
                                    1- 2195     	BANKSEL	_pwStep
     0198 rrrr                      3-   71 m1      .banksel ram_address
     0199 00rr                      1- 2196     	MOVAR	_pwStep
     019A 3rrr                      1- 2197     	LGOTO	_00593_DS_
     019B                           1- 2198     _00592_DS_:
                                    1- 2199     	.line	798, "main.c"; 	pwStep = 2;
     019B 2102                      1- 2200     	MOVIA	0x02
                                    1- 2201     	BANKSEL	_pwStep
     019C rrrr                      3-   71 m1      .banksel ram_address
     019D 00rr                      1- 2202     	MOVAR	_pwStep
     019E                           1- 2203     _00593_DS_:
                                    1- 2204     	.line	799, "main.c"; 	chrgTime = 0;
                                    1- 2205     	BANKSEL	_chrgTime
     019E rrrr                      3-   71 m1      .banksel ram_address
     019F 02rr                      1- 2206     	CLRR	_chrgTime
     01A0 02rr                      1- 2207     	CLRR	(_chrgTime + 1)
     01A1 3rrr                      1- 2208     	LGOTO	_00619_DS_
     01A2                           1- 2209     _00602_DS_:
                                    1- 2210     	.line	801, "main.c"; 	else  if(R_AIN2_DATA > 0)
                                    1- 2211     	BANKSEL	_R_AIN2_DATA
     01A2 rrrr                      3-   71 m1      .banksel ram_address
     01A3 01rr                      1- 2212     	MOVR	_R_AIN2_DATA,W
     01A4 11rr                      1- 2213     	IORAR	(_R_AIN2_DATA + 1),W
     01A5 0D03                      1- 2214     	BTRSC	STATUS,2
     01A6 3rrr                      1- 2215     	LGOTO	_00619_DS_
                                    1- 2216     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2217     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2218     	.line	804, "main.c"; 	if(pwStep > 1)
     01A7 2102                      1- 2219     	MOVIA	0x02
                                    1- 2220     	BANKSEL	_pwStep
     01A8 rrrr                      3-   71 m1      .banksel ram_address
     01A9 04rr                      1- 2221     	SUBAR	_pwStep,W
     01AA 0803                      1- 2222     	BTRSS	STATUS,0
     01AB 3rrr                      1- 2223     	LGOTO	_00597_DS_
                                    1- 2224     ;;unsigned compare: left < lit (0x5A=90), size=2
                                    1- 2225     	.line	806, "main.c"; 	if(R_AIN2_DATA < 90)
     01AC 2100                      1- 2226     	MOVIA	0x00
                                    1- 2227     	BANKSEL	_R_AIN2_DATA
     01AD rrrr                      3-   71 m1      .banksel ram_address
     01AE 04rr                      1- 2228     	SUBAR	(_R_AIN2_DATA + 1),W
     01AF 0903                      1- 2229     	BTRSS	STATUS,2
     01B0 3rrr                      1- 2230     	LGOTO	_00766_DS_
     01B1 215A                      1- 2231     	MOVIA	0x5a
     01B2 04rr                      1- 2232     	SUBAR	_R_AIN2_DATA,W
     01B3                           1- 2233     _00766_DS_:
     01B3 0C03                      1- 2234     	BTRSC	STATUS,0
     01B4 3rrr                      1- 2235     	LGOTO	_00598_DS_
                                    1- 2236     	.line	807, "main.c"; 	pwStep = 1;
     01B5 2101                      1- 2237     	MOVIA	0x01
                                    1- 2238     	BANKSEL	_pwStep
     01B6 rrrr                      3-   71 m1      .banksel ram_address
     01B7 00rr                      1- 2239     	MOVAR	_pwStep
     01B8 3rrr                      1- 2240     	LGOTO	_00598_DS_
     01B9                           1- 2241     _00597_DS_:
                                    1- 2242     	.line	810, "main.c"; 	pwStep = 1;
     01B9 2101                      1- 2243     	MOVIA	0x01
                                    1- 2244     	BANKSEL	_pwStep
     01BA rrrr                      3-   71 m1      .banksel ram_address
     01BB 00rr                      1- 2245     	MOVAR	_pwStep
     01BC                           1- 2246     _00598_DS_:
                                    1- 2247     	.line	811, "main.c"; 	chrgTime = 0;
                                    1- 2248     	BANKSEL	_chrgTime
     01BC rrrr                      3-   71 m1      .banksel ram_address
     01BD 02rr                      1- 2249     	CLRR	_chrgTime
     01BE 02rr                      1- 2250     	CLRR	(_chrgTime + 1)
     01BF                           1- 2251     _00619_DS_:
                                    1- 2252     	.line	815, "main.c"; 	}
                                    1- 2253     	RETURN	
     01BF 0010                      3-   26 m1      ret
                                    1- 2254     ; exit point of _checkBatAD
                                    1- 2256     ;***
                                    1- 2257     ;  pBlock Stats: dbName = C
                                    1- 2258     ;***
                                    1- 2259     ;has an exit
                                    1- 2260     ;functions called:
                                    1- 2261     ;   _delay
                                    1- 2262     ;   _delay
                                    1- 2263     ;; Starting pCode block
                                    1- 2264     .segment "code"; module=main, function=_initAD
     0000                           1- 2266     _initAD:
                                    1- 2267     ; 2 exit points
                                    1- 2268     	.line	650, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2269     	MOVIA	0x84
     0001 00rr                      1- 2270     	MOVAR	_ADMD
                                    1- 2271     	.line	655, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2272     	CLRR	_ADVREFH
                                    1- 2273     	.line	660, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2274     	MOVIA	0x10
     0004 00rr                      1- 2275     	MOVAR	_ADR
                                    1- 2276     	.line	662, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2277     	MOVIA	0x03
     0006 00rr                      1- 2278     	MOVAR	_ADCR
                                    1- 2279     	.line	665, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2280     	BSR	_ADMDbits,4
                                    1- 2281     	.line	666, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2282     	MOVIA	0x64
     0009 2rrr                      1- 2283     	LCALL	_delay
                                    1- 2284     	.line	669, "main.c"; 	}
                                    1- 2285     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 2286     ; exit point of _initAD
                                    1- 2288     ;***
                                    1- 2289     ;  pBlock Stats: dbName = C
                                    1- 2290     ;***
                                    1- 2291     ;has an exit
                                    1- 2292     ;2 compiler assigned registers:
                                    1- 2293     ;   r0x102F
                                    1- 2294     ;   r0x1030
                                    1- 2295     ;; Starting pCode block
                                    1- 2296     .segment "code"; module=main, function=_delay
                                    1- 2298     ;local variable name mapping:
     0000                           1- 2301     _delay:
                                    1- 2302     ; 2 exit points
                                    1- 2303     	.line	640, "main.c"; 	void delay(u8t time)
                                    1- 2304     	BANKSEL	r0x102F
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2305     	MOVAR	r0x102F
                                    1- 2306     	.line	642, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2307     	BANKSEL	r0x1030
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 2308     	CLRR	r0x1030
     0004                           1- 2309     _00520_DS_:
                                    1- 2310     	BANKSEL	r0x102F
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 2311     	MOVR	r0x102F,W
                                    1- 2312     	BANKSEL	r0x1030
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 2313     	SUBAR	r0x1030,W
     0008 0C03                      1- 2314     	BTRSC	STATUS,0
     0009 3rrr                      1- 2315     	LGOTO	_00522_DS_
                                    1- 2316     	.line	643, "main.c"; 	NOP();
     000A 0000                      1- 2317     	nop
                                    1- 2318     	.line	642, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2319     	BANKSEL	r0x1030
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 2320     	INCR	r0x1030,F
     000D 3rrr                      1- 2321     	LGOTO	_00520_DS_
     000E                           1- 2322     _00522_DS_:
                                    1- 2323     	.line	644, "main.c"; 	}
                                    1- 2324     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 2325     ; exit point of _delay
                                    1- 2327     ;***
                                    1- 2328     ;  pBlock Stats: dbName = C
                                    1- 2329     ;***
                                    1- 2330     ;has an exit
                                    1- 2331     ;functions called:
                                    1- 2332     ;   _pwmStop
                                    1- 2333     ;   _pwm1Stop
                                    1- 2334     ;   _pwm1Init
                                    1- 2335     ;   _pwm1Stop
                                    1- 2336     ;   _pwmStop
                                    1- 2337     ;   _pwm1Stop
                                    1- 2338     ;   _pwm1Init
                                    1- 2339     ;   _pwm1Stop
                                    1- 2340     ;1 compiler assigned register :
                                    1- 2341     ;   r0x1050
                                    1- 2342     ;; Starting pCode block
                                    1- 2343     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2345     _chrgCtr:
                                    1- 2346     ; 2 exit points
                                    1- 2347     	.line	586, "main.c"; 	if(PORTA & 0x08 || R_AIN3_DATA > 200)
                                    1- 2348     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 0Drr                      1- 2349     	BTRSC	_PORTA,3
     0002 3rrr                      1- 2350     	LGOTO	_00483_DS_
                                    1- 2351     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2352     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0003 2100                      1- 2353     	MOVIA	0x00
                                    1- 2354     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 04rr                      1- 2355     	SUBAR	(_R_AIN3_DATA + 1),W
     0006 0903                      1- 2356     	BTRSS	STATUS,2
     0007 3rrr                      1- 2357     	LGOTO	_00513_DS_
     0008 21C9                      1- 2358     	MOVIA	0xc9
     0009 04rr                      1- 2359     	SUBAR	_R_AIN3_DATA,W
     000A                           1- 2360     _00513_DS_:
     000A 0803                      1- 2361     	BTRSS	STATUS,0
     000B 3rrr                      1- 2362     	LGOTO	_00484_DS_
     000C                           1- 2363     _00483_DS_:
                                    1- 2364     	.line	589, "main.c"; 	chrgFlag = 1;
                                    1- 2365     	BANKSEL	_Status
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 19rr                      1- 2366     	BSR	_Status,3
                                    1- 2367     	.line	590, "main.c"; 	workStep = 0;
                                    1- 2368     	BANKSEL	_workStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 2369     	CLRR	_workStep
                                    1- 2370     	.line	591, "main.c"; 	ledLightTime = 0;
                                    1- 2371     	BANKSEL	_ledLightTime
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1- 2372     	CLRR	_ledLightTime
                                    1- 2373     	.line	592, "main.c"; 	pwmStop();
     0012 2rrr                      1- 2374     	LCALL	_pwmStop
                                    1- 2375     	.line	594, "main.c"; 	if(pwStep == 7)
                                    1- 2376     	BANKSEL	_pwStep
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 2377     	MOVR	_pwStep,W
     0015 2407                      1- 2378     	XORIA	0x07
     0016 0903                      1- 2379     	BTRSS	STATUS,2
     0017 3rrr                      1- 2380     	LGOTO	_00479_DS_
                                    1- 2381     	.line	597, "main.c"; 	ledStep = 6;
     0018 2106                      1- 2382     	MOVIA	0x06
                                    1- 2383     	BANKSEL	_ledStep
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 2384     	MOVAR	_ledStep
                                    1- 2385     	.line	598, "main.c"; 	if(++fullCount > 100)
                                    1- 2386     	BANKSEL	_fullCount
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 05rr                      1- 2387     	INCR	_fullCount,F
                                    1- 2388     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2389     ;;unsigned compare: left >= lit (0x65=101), size=1
     001D 2165                      1- 2390     	MOVIA	0x65
     001E 04rr                      1- 2391     	SUBAR	_fullCount,W
     001F 0C03                      1- 2392     	BTRSC	STATUS,0
                                    1- 2393     	.line	599, "main.c"; 	pwm1Stop();
     0020 2rrr                      1- 2394     	LCALL	_pwm1Stop
                                    1- 2395     	.line	601, "main.c"; 	PORTB &= 0xF7;
     0021 1Drr                      1- 2396     	BCR	_PORTB,3
                                    1- 2397     	.line	602, "main.c"; 	IOSTB |= 0X08;
     0022 001r                      1- 2398     	IOSTR	_IOSTB
                                    1- 2399     	BANKSEL	r0x1050
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 2400     	MOVAR	r0x1050
     0025 19rr                      1- 2401     	BSR	r0x1050,3
     0026 01rr                      1- 2402     	MOVR	r0x1050,W
     0027 000r                      1- 2403     	IOST	_IOSTB
     0028 3rrr                      1- 2404     	LGOTO	_00487_DS_
     0029                           1- 2405     _00479_DS_:
                                    1- 2406     	.line	607, "main.c"; 	IOSTB &= 0xF7;
     0029 001r                      1- 2407     	IOSTR	_IOSTB
                                    1- 2408     	BANKSEL	r0x1050
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 00rr                      1- 2409     	MOVAR	r0x1050
     002C 1Drr                      1- 2410     	BCR	r0x1050,3
     002D 01rr                      1- 2411     	MOVR	r0x1050,W
     002E 000r                      1- 2412     	IOST	_IOSTB
                                    1- 2413     	.line	609, "main.c"; 	if(count500ms == 0)
                                    1- 2414     	BANKSEL	_count500ms
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 2415     	MOVR	_count500ms,W
     0031 0903                      1- 2416     	BTRSS	STATUS,2
     0032 3rrr                      1- 2417     	LGOTO	_00471_DS_
                                    1- 2418     	.line	611, "main.c"; 	if(++ledStep > 6)
                                    1- 2419     	BANKSEL	_ledStep
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 05rr                      1- 2420     	INCR	_ledStep,F
                                    1- 2421     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2422     ;;unsigned compare: left >= lit (0x7=7), size=1
     0035 2107                      1- 2423     	MOVIA	0x07
     0036 04rr                      1- 2424     	SUBAR	_ledStep,W
     0037 0803                      1- 2425     	BTRSS	STATUS,0
     0038 3rrr                      1- 2426     	LGOTO	_00471_DS_
                                    1- 2427     	.line	612, "main.c"; 	ledStep = pwStep - 1;
                                    1- 2428     	BANKSEL	_pwStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 06rr                      1- 2429     	DECR	_pwStep,W
                                    1- 2430     	BANKSEL	_ledStep
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 00rr                      1- 2431     	MOVAR	_ledStep
                                    1- 2432     ;;unsigned compare: left < lit (0x2=2), size=1
     003D                           1- 2433     _00471_DS_:
                                    1- 2434     	.line	615, "main.c"; 	if(pwStep < 2)
     003D 2102                      1- 2435     	MOVIA	0x02
                                    1- 2436     	BANKSEL	_pwStep
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 04rr                      1- 2437     	SUBAR	_pwStep,W
     0040 0C03                      1- 2438     	BTRSC	STATUS,0
     0041 3rrr                      1- 2439     	LGOTO	_00476_DS_
                                    1- 2440     	.line	617, "main.c"; 	PWM1DUTY = 3;
     0042 2103                      1- 2441     	MOVIA	0x03
     0043 00rr                      1- 2442     	SFUN	_PWM1DUTY
     0044 3rrr                      1- 2443     	LGOTO	_00477_DS_
                                    1- 2444     ;;unsigned compare: left < lit (0x5=5), size=1
     0045                           1- 2445     _00476_DS_:
                                    1- 2446     	.line	619, "main.c"; 	else if(pwStep < 5)
     0045 2105                      1- 2447     	MOVIA	0x05
                                    1- 2448     	BANKSEL	_pwStep
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 04rr                      1- 2449     	SUBAR	_pwStep,W
     0048 0C03                      1- 2450     	BTRSC	STATUS,0
     0049 3rrr                      1- 2451     	LGOTO	_00473_DS_
                                    1- 2452     	.line	620, "main.c"; 	PWM1DUTY = 6;
     004A 2106                      1- 2453     	MOVIA	0x06
     004B 00rr                      1- 2454     	SFUN	_PWM1DUTY
     004C 3rrr                      1- 2455     	LGOTO	_00477_DS_
     004D                           1- 2456     _00473_DS_:
                                    1- 2457     	.line	622, "main.c"; 	PWM1DUTY = 7;
     004D 2107                      1- 2458     	MOVIA	0x07
     004E 00rr                      1- 2459     	SFUN	_PWM1DUTY
     004F                           1- 2460     _00477_DS_:
                                    1- 2461     	.line	623, "main.c"; 	pwm1Init();
     004F 2rrr                      1- 2462     	LCALL	_pwm1Init
     0050 3rrr                      1- 2463     	LGOTO	_00487_DS_
     0051                           1- 2464     _00484_DS_:
                                    1- 2465     	.line	629, "main.c"; 	chrgTime = 0;
                                    1- 2466     	BANKSEL	_chrgTime
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 02rr                      1- 2467     	CLRR	_chrgTime
     0053 02rr                      1- 2468     	CLRR	(_chrgTime + 1)
                                    1- 2469     	.line	630, "main.c"; 	pwm1Stop();
     0054 2rrr                      1- 2470     	LCALL	_pwm1Stop
                                    1- 2471     	.line	631, "main.c"; 	if(workStep == 0)
                                    1- 2472     	BANKSEL	_workStep
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1- 2473     	MOVR	_workStep,W
     0057 0903                      1- 2474     	BTRSS	STATUS,2
     0058 3rrr                      1- 2475     	LGOTO	_00007_DS_
                                    1- 2476     	.line	632, "main.c"; 	ledStep = 0;
                                    1- 2477     	BANKSEL	_ledStep
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 02rr                      1- 2478     	CLRR	_ledStep
     005B                           1- 2479     _00007_DS_:
                                    1- 2480     	.line	633, "main.c"; 	chrgFlag = 0;
                                    1- 2481     	BANKSEL	_Status
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 1Drr                      1- 2482     	BCR	_Status,3
                                    1- 2483     	.line	634, "main.c"; 	chrgTime = 0;	//���ó�����
                                    1- 2484     	BANKSEL	_chrgTime
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 02rr                      1- 2485     	CLRR	_chrgTime
     005F 02rr                      1- 2486     	CLRR	(_chrgTime + 1)
     0060                           1- 2487     _00487_DS_:
                                    1- 2488     	.line	637, "main.c"; 	}
                                    1- 2489     	RETURN	
     0060 0010                      3-   26 m1      ret
                                    1- 2490     ; exit point of _chrgCtr
                                    1- 2492     ;***
                                    1- 2493     ;  pBlock Stats: dbName = C
                                    1- 2494     ;***
                                    1- 2495     ;has an exit
                                    1- 2496     ;1 compiler assigned register :
                                    1- 2497     ;   r0x1051
                                    1- 2498     ;; Starting pCode block
                                    1- 2499     .segment "code"; module=main, function=_keyRead
                                    1- 2501     ;local variable name mapping:
     0000                           1- 2503     _keyRead:
                                    1- 2504     ; 2 exit points
                                    1- 2505     	.line	549, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2506     	BANKSEL	r0x1051
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2507     	MOVAR	r0x1051
                                    1- 2508     	.line	551, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2509     	MOVR	r0x1051,W
     0003 0D03                      1- 2510     	BTRSC	STATUS,2
     0004 3rrr                      1- 2511     	LGOTO	_00459_DS_
                                    1- 2512     	.line	553, "main.c"; 	keyCount++;
                                    1- 2513     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 2514     	INCR	_keyCount,F
                                    1- 2515     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2516     	.line	554, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2517     	MOVIA	0x64
     0008 04rr                      1- 2518     	SUBAR	_keyCount,W
     0009 0803                      1- 2519     	BTRSS	STATUS,0
     000A 3rrr                      1- 2520     	LGOTO	_00460_DS_
                                    1- 2521     	.line	556, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2522     	MOVIA	0x64
     000C 00rr                      1- 2523     	MOVAR	_keyCount
                                    1- 2524     	.line	557, "main.c"; 	if(!longPressFlag)
                                    1- 2525     	BANKSEL	_Status
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 0Crr                      1- 2526     	BTRSC	_Status,1
     000F 3rrr                      1- 2527     	LGOTO	_00460_DS_
                                    1- 2528     	.line	559, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2529     	BSR	_Status,1
                                    1- 2530     	.line	560, "main.c"; 	return 2;
     0011 2102                      1- 2531     	MOVIA	0x02
     0012 3rrr                      1- 2532     	LGOTO	_00461_DS_
                                    1- 2533     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2534     _00459_DS_:
                                    1- 2535     	.line	566, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2536     	MOVIA	0x64
                                    1- 2537     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 2538     	SUBAR	_keyCount,W
     0016 0803                      1- 2539     	BTRSS	STATUS,0
     0017 3rrr                      1- 2540     	LGOTO	_00456_DS_
                                    1- 2541     	.line	568, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2542     	CLRR	_keyCount
                                    1- 2543     	.line	569, "main.c"; 	longPressFlag = 0;
                                    1- 2544     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Crr                      1- 2545     	BCR	_Status,1
                                    1- 2546     	.line	570, "main.c"; 	return	0;
     001B 2100                      1- 2547     	MOVIA	0x00
     001C 3rrr                      1- 2548     	LGOTO	_00461_DS_
                                    1- 2549     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 2550     _00456_DS_:
                                    1- 2551     	.line	572, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 2552     	MOVIA	0x08
                                    1- 2553     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 2554     	SUBAR	_keyCount,W
     0020 0803                      1- 2555     	BTRSS	STATUS,0
     0021 3rrr                      1- 2556     	LGOTO	_00457_DS_
                                    1- 2557     	.line	574, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2558     	CLRR	_keyCount
                                    1- 2559     	.line	575, "main.c"; 	return	1;
     0023 2101                      1- 2560     	MOVIA	0x01
     0024 3rrr                      1- 2561     	LGOTO	_00461_DS_
     0025                           1- 2562     _00457_DS_:
                                    1- 2563     	.line	577, "main.c"; 	keyCount = 0;
                                    1- 2564     	BANKSEL	_keyCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 2565     	CLRR	_keyCount
     0027                           1- 2566     _00460_DS_:
                                    1- 2567     	.line	579, "main.c"; 	return 0;
     0027 2100                      1- 2568     	MOVIA	0x00
     0028                           1- 2569     _00461_DS_:
                                    1- 2570     	.line	580, "main.c"; 	}
                                    1- 2571     	RETURN	
     0028 0010                      3-   26 m1      ret
                                    1- 2572     ; exit point of _keyRead
                                    1- 2574     ;***
                                    1- 2575     ;  pBlock Stats: dbName = C
                                    1- 2576     ;***
                                    1- 2577     ;has an exit
                                    1- 2578     ;functions called:
                                    1- 2579     ;   _LedInput
                                    1- 2580     ;   _pwmStop
                                    1- 2581     ;   _pwm1Stop
                                    1- 2582     ;   _LedInput
                                    1- 2583     ;   _pwmStop
                                    1- 2584     ;   _pwm1Stop
                                    1- 2585     ;1 compiler assigned register :
                                    1- 2586     ;   r0x1053
                                    1- 2587     ;; Starting pCode block
                                    1- 2588     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2590     _gotoSleep:
                                    1- 2591     ; 2 exit points
                                    1- 2592     	.line	519, "main.c"; 	PORTB = 0x00;
     0000 02rr                      1- 2593     	CLRR	_PORTB
                                    1- 2594     	.line	520, "main.c"; 	PORTA = 0x00;
                                    1- 2595     	BANKSEL	_PORTA
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1- 2596     	CLRR	_PORTA
                                    1- 2597     	.line	521, "main.c"; 	IOSTA |= 0X40;
     0003 001r                      1- 2598     	IOSTR	_IOSTA
                                    1- 2599     	BANKSEL	r0x1053
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 2600     	MOVAR	r0x1053
     0006 1Brr                      1- 2601     	BSR	r0x1053,6
     0007 01rr                      1- 2602     	MOVR	r0x1053,W
     0008 000r                      1- 2603     	IOST	_IOSTA
                                    1- 2604     	.line	522, "main.c"; 	LedInput();
     0009 2rrr                      1- 2605     	LCALL	_LedInput
                                    1- 2606     	.line	523, "main.c"; 	sleepTime = 0;
                                    1- 2607     	BANKSEL	_sleepTime
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1- 2608     	CLRR	_sleepTime
     000C 02rr                      1- 2609     	CLRR	(_sleepTime + 1)
                                    1- 2610     	.line	525, "main.c"; 	pwmStop();
     000D 2rrr                      1- 2611     	LCALL	_pwmStop
                                    1- 2612     	.line	526, "main.c"; 	pwm1Stop();
     000E 2rrr                      1- 2613     	LCALL	_pwm1Stop
                                    1- 2614     	.line	527, "main.c"; 	workStep = 0;
                                    1- 2615     	BANKSEL	_workStep
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1- 2616     	CLRR	_workStep
                                    1- 2617     	.line	528, "main.c"; 	AWUCON = 0x98;
     0011 2198                      1- 2618     	MOVIA	0x98
     0012 00rr                      1- 2619     	MOVAR	_AWUCON
                                    1- 2620     	.line	529, "main.c"; 	fgPRD = 0;
                                    1- 2621     	BANKSEL	_fgPRD
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1- 2622     	CLRR	_fgPRD
     0015 02rr                      1- 2623     	CLRR	(_fgPRD + 1)
                                    1- 2624     	.line	530, "main.c"; 	fgCount = 0;
                                    1- 2625     	BANKSEL	_fgCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 02rr                      1- 2626     	CLRR	_fgCount
     0018 02rr                      1- 2627     	CLRR	(_fgCount + 1)
                                    1- 2628     	.line	531, "main.c"; 	redLedFlag = 0;
                                    1- 2629     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Drr                      1- 2630     	BCR	_Status,2
                                    1- 2631     	.line	532, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     001B 210B                      1- 2632     	MOVIA	0x0b
     001C 00rr                      1- 2633     	MOVAR	_INTE
                                    1- 2634     	.line	533, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     001D 2118                      1- 2635     	MOVIA	0x18
     001E 00rr                      1- 2636     	MOVAR	_PCON
                                    1- 2637     	.line	534, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001F 02rr                      1- 2638     	CLRR	_INTF
                                    1- 2639     	.line	535, "main.c"; 	CLRWDT();
     0020 0002                      1- 2640     	clrwdt
                                    1- 2641     	.line	536, "main.c"; 	ENI();
     0021 0004                      1- 2642     	ENI
                                    1- 2643     	.line	537, "main.c"; 	SLEEP();
     0022 0001                      1- 2644     	sleep
                                    1- 2645     	.line	538, "main.c"; 	AWUCON = 0x00;
     0023 02rr                      1- 2646     	CLRR	_AWUCON
                                    1- 2647     	.line	539, "main.c"; 	IOSTA &= 0XBF;
     0024 001r                      1- 2648     	IOSTR	_IOSTA
                                    1- 2649     	BANKSEL	r0x1053
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 00rr                      1- 2650     	MOVAR	r0x1053
     0027 1Frr                      1- 2651     	BCR	r0x1053,6
     0028 01rr                      1- 2652     	MOVR	r0x1053,W
     0029 000r                      1- 2653     	IOST	_IOSTA
                                    1- 2654     	.line	540, "main.c"; 	PORTB &= 0xBF;
     002A 1Frr                      1- 2655     	BCR	_PORTB,6
                                    1- 2656     	.line	541, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     002B 2101                      1- 2657     	MOVIA	0x01
     002C 00rr                      1- 2658     	MOVAR	_INTE
                                    1- 2659     	.line	542, "main.c"; 	INTF = 0;
     002D 02rr                      1- 2660     	CLRR	_INTF
                                    1- 2661     	.line	544, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     002E 21B8                      1- 2662     	MOVIA	0xb8
     002F 00rr                      1- 2663     	MOVAR	_PCON
                                    1- 2664     	.line	546, "main.c"; 	}
                                    1- 2665     	RETURN	
     0030 0010                      3-   26 m1      ret
                                    1- 2666     ; exit point of _gotoSleep
                                    1- 2668     ;***
                                    1- 2669     ;  pBlock Stats: dbName = C
                                    1- 2670     ;***
                                    1- 2671     ;has an exit
                                    1- 2672     ;; Starting pCode block
                                    1- 2673     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2675     _pwmStop:
                                    1- 2676     ; 2 exit points
                                    1- 2677     	.line	513, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2678     	CLRA	
     0001 00rr                      1- 2679     	SFUN	_T2CR1
                                    1- 2680     	.line	514, "main.c"; 	}
                                    1- 2681     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2682     ; exit point of _pwmStop
                                    1- 2684     ;***
                                    1- 2685     ;  pBlock Stats: dbName = C
                                    1- 2686     ;***
                                    1- 2687     ;has an exit
                                    1- 2688     ;1 compiler assigned register :
                                    1- 2689     ;   r0x1054
                                    1- 2690     ;; Starting pCode block
                                    1- 2691     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2693     _pwmInit:
                                    1- 2694     ; 2 exit points
                                    1- 2695     	.line	501, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2696     	SFUNR	_T2CR1
                                    1- 2697     	BANKSEL	r0x1054
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2698     	MOVAR	r0x1054
     0003 0Frr                      1- 2699     	BTRSC	r0x1054,7
                                    1- 2700     	.line	502, "main.c"; 	return;
     0004 3rrr                      1- 2701     	LGOTO	_00436_DS_
                                    1- 2702     	.line	503, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2703     	CLRR	_TMRH
                                    1- 2704     	.line	504, "main.c"; 	TMR2 = 100;							//Ƶ��Ϊ110K
     0006 2164                      1- 2705     	MOVIA	0x64
     0007 00rr                      1- 2706     	SFUN	_TMR2
                                    1- 2707     	.line	507, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2708     	CLRA	
     0009 00rr                      1- 2709     	SFUN	_T2CR2
                                    1- 2710     	.line	508, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2711     	MOVIA	0x83
     000B 00rr                      1- 2712     	SFUN	_T2CR1
     000C                           1- 2713     _00436_DS_:
                                    1- 2714     	.line	509, "main.c"; 	}
                                    1- 2715     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2716     ; exit point of _pwmInit
                                    1- 2718     ;***
                                    1- 2719     ;  pBlock Stats: dbName = C
                                    1- 2720     ;***
                                    1- 2721     ;has an exit
                                    1- 2722     ;; Starting pCode block
                                    1- 2723     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2725     _pwm1Stop:
                                    1- 2726     ; 2 exit points
                                    1- 2727     	.line	494, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2728     	CLRA	
     0001 00rr                      1- 2729     	SFUN	_T1CR1
                                    1- 2730     	.line	495, "main.c"; 	}
                                    1- 2731     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2732     ; exit point of _pwm1Stop
                                    1- 2734     ;***
                                    1- 2735     ;  pBlock Stats: dbName = C
                                    1- 2736     ;***
                                    1- 2737     ;has an exit
                                    1- 2738     ;1 compiler assigned register :
                                    1- 2739     ;   r0x104F
                                    1- 2740     ;; Starting pCode block
                                    1- 2741     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2743     _pwm1Init:
                                    1- 2744     ; 2 exit points
                                    1- 2745     	.line	482, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2746     	SFUNR	_T1CR1
                                    1- 2747     	BANKSEL	r0x104F
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2748     	MOVAR	r0x104F
     0003 0Frr                      1- 2749     	BTRSC	r0x104F,7
                                    1- 2750     	.line	483, "main.c"; 	return;
     0004 3rrr                      1- 2751     	LGOTO	_00425_DS_
                                    1- 2752     	.line	484, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2753     	CLRR	_TMRH
                                    1- 2754     	.line	485, "main.c"; 	TMR1 = 12;							//Ƶ��Ϊ110K
     0006 210C                      1- 2755     	MOVIA	0x0c
     0007 00rr                      1- 2756     	SFUN	_TMR1
                                    1- 2757     	.line	488, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2758     	CLRA	
     0009 00rr                      1- 2759     	SFUN	_T1CR2
                                    1- 2760     	.line	489, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2761     	MOVIA	0x83
     000B 00rr                      1- 2762     	SFUN	_T1CR1
     000C                           1- 2763     _00425_DS_:
                                    1- 2764     	.line	490, "main.c"; 	}
                                    1- 2765     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2766     ; exit point of _pwm1Init
                                    1- 2768     ;***
                                    1- 2769     ;  pBlock Stats: dbName = C
                                    1- 2770     ;***
                                    1- 2771     ;has an exit
                                    1- 2772     ;functions called:
                                    1- 2773     ;   _delay
                                    1- 2774     ;   _LedInput
                                    1- 2775     ;   _delay
                                    1- 2776     ;   _LedInput
                                    1- 2777     ;1 compiler assigned register :
                                    1- 2778     ;   r0x1055
                                    1- 2779     ;; Starting pCode block
                                    1- 2780     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2782     _LED6ON:
                                    1- 2783     ; 2 exit points
                                    1- 2784     	.line	472, "main.c"; 	L2OUT;
     0000 001r                      1- 2785     	IOSTR	_IOSTA
                                    1- 2786     	BANKSEL	r0x1055
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2787     	MOVAR	r0x1055
     0003 1Crr                      1- 2788     	BCR	r0x1055,0
     0004 01rr                      1- 2789     	MOVR	r0x1055,W
     0005 000r                      1- 2790     	IOST	_IOSTA
                                    1- 2791     	.line	473, "main.c"; 	L1OUT;
     0006 001r                      1- 2792     	IOSTR	_IOSTB
     0007 00rr                      1- 2793     	MOVAR	r0x1055
     0008 1Crr                      1- 2794     	BCR	r0x1055,1
     0009 01rr                      1- 2795     	MOVR	r0x1055,W
     000A 000r                      1- 2796     	IOST	_IOSTB
                                    1- 2797     	.line	474, "main.c"; 	L1H;
     000B 18rr                      1- 2798     	BSR	_PORTB,1
                                    1- 2799     	.line	475, "main.c"; 	L2L;
                                    1- 2800     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1- 2801     	BCR	_PORTA,0
                                    1- 2802     	.line	476, "main.c"; 	delay(100);
     000E 2164                      1- 2803     	MOVIA	0x64
     000F 2rrr                      1- 2804     	LCALL	_delay
                                    1- 2805     	.line	477, "main.c"; 	LedInput();
     0010 2rrr                      1- 2806     	LCALL	_LedInput
                                    1- 2807     	.line	478, "main.c"; 	}
                                    1- 2808     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 2809     ; exit point of _LED6ON
                                    1- 2811     ;***
                                    1- 2812     ;  pBlock Stats: dbName = C
                                    1- 2813     ;***
                                    1- 2814     ;has an exit
                                    1- 2815     ;functions called:
                                    1- 2816     ;   _delay
                                    1- 2817     ;   _LedInput
                                    1- 2818     ;   _delay
                                    1- 2819     ;   _LedInput
                                    1- 2820     ;1 compiler assigned register :
                                    1- 2821     ;   r0x1056
                                    1- 2822     ;; Starting pCode block
                                    1- 2823     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2825     _LED5ON:
                                    1- 2826     ; 2 exit points
                                    1- 2827     	.line	461, "main.c"; 	L2OUT;
     0000 001r                      1- 2828     	IOSTR	_IOSTA
                                    1- 2829     	BANKSEL	r0x1056
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2830     	MOVAR	r0x1056
     0003 1Crr                      1- 2831     	BCR	r0x1056,0
     0004 01rr                      1- 2832     	MOVR	r0x1056,W
     0005 000r                      1- 2833     	IOST	_IOSTA
                                    1- 2834     	.line	462, "main.c"; 	L1OUT;
     0006 001r                      1- 2835     	IOSTR	_IOSTB
     0007 00rr                      1- 2836     	MOVAR	r0x1056
     0008 1Crr                      1- 2837     	BCR	r0x1056,1
     0009 01rr                      1- 2838     	MOVR	r0x1056,W
     000A 000r                      1- 2839     	IOST	_IOSTB
                                    1- 2840     	.line	463, "main.c"; 	L2H;
                                    1- 2841     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 18rr                      1- 2842     	BSR	_PORTA,0
                                    1- 2843     	.line	464, "main.c"; 	L1L;
     000D 1Crr                      1- 2844     	BCR	_PORTB,1
                                    1- 2845     	.line	465, "main.c"; 	delay(100);
     000E 2164                      1- 2846     	MOVIA	0x64
     000F 2rrr                      1- 2847     	LCALL	_delay
                                    1- 2848     	.line	466, "main.c"; 	LedInput();
     0010 2rrr                      1- 2849     	LCALL	_LedInput
                                    1- 2850     	.line	467, "main.c"; 	}
                                    1- 2851     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 2852     ; exit point of _LED5ON
                                    1- 2854     ;***
                                    1- 2855     ;  pBlock Stats: dbName = C
                                    1- 2856     ;***
                                    1- 2857     ;has an exit
                                    1- 2858     ;functions called:
                                    1- 2859     ;   _delay
                                    1- 2860     ;   _LedInput
                                    1- 2861     ;   _delay
                                    1- 2862     ;   _LedInput
                                    1- 2863     ;1 compiler assigned register :
                                    1- 2864     ;   r0x1057
                                    1- 2865     ;; Starting pCode block
                                    1- 2866     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2868     _LED4ON:
                                    1- 2869     ; 2 exit points
                                    1- 2870     	.line	451, "main.c"; 	L3OUT;
     0000 001r                      1- 2871     	IOSTR	_IOSTB
                                    1- 2872     	BANKSEL	r0x1057
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2873     	MOVAR	r0x1057
     0003 1Crr                      1- 2874     	BCR	r0x1057,0
     0004 01rr                      1- 2875     	MOVR	r0x1057,W
     0005 000r                      1- 2876     	IOST	_IOSTB
                                    1- 2877     	.line	452, "main.c"; 	L2OUT;
     0006 001r                      1- 2878     	IOSTR	_IOSTA
     0007 00rr                      1- 2879     	MOVAR	r0x1057
     0008 1Crr                      1- 2880     	BCR	r0x1057,0
     0009 01rr                      1- 2881     	MOVR	r0x1057,W
     000A 000r                      1- 2882     	IOST	_IOSTA
                                    1- 2883     	.line	453, "main.c"; 	L3H;
     000B 18rr                      1- 2884     	BSR	_PORTB,0
                                    1- 2885     	.line	454, "main.c"; 	L2L;
                                    1- 2886     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1- 2887     	BCR	_PORTA,0
                                    1- 2888     	.line	455, "main.c"; 	delay(100);
     000E 2164                      1- 2889     	MOVIA	0x64
     000F 2rrr                      1- 2890     	LCALL	_delay
                                    1- 2891     	.line	456, "main.c"; 	LedInput();
     0010 2rrr                      1- 2892     	LCALL	_LedInput
                                    1- 2893     	.line	457, "main.c"; 	}
                                    1- 2894     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 2895     ; exit point of _LED4ON
                                    1- 2897     ;***
                                    1- 2898     ;  pBlock Stats: dbName = C
                                    1- 2899     ;***
                                    1- 2900     ;has an exit
                                    1- 2901     ;functions called:
                                    1- 2902     ;   _delay
                                    1- 2903     ;   _LedInput
                                    1- 2904     ;   _delay
                                    1- 2905     ;   _LedInput
                                    1- 2906     ;1 compiler assigned register :
                                    1- 2907     ;   r0x1058
                                    1- 2908     ;; Starting pCode block
                                    1- 2909     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2911     _LED3ON:
                                    1- 2912     ; 2 exit points
                                    1- 2913     	.line	441, "main.c"; 	L3OUT;
     0000 001r                      1- 2914     	IOSTR	_IOSTB
                                    1- 2915     	BANKSEL	r0x1058
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2916     	MOVAR	r0x1058
     0003 1Crr                      1- 2917     	BCR	r0x1058,0
     0004 01rr                      1- 2918     	MOVR	r0x1058,W
     0005 000r                      1- 2919     	IOST	_IOSTB
                                    1- 2920     	.line	442, "main.c"; 	L1OUT;
     0006 001r                      1- 2921     	IOSTR	_IOSTB
     0007 00rr                      1- 2922     	MOVAR	r0x1058
     0008 1Crr                      1- 2923     	BCR	r0x1058,1
     0009 01rr                      1- 2924     	MOVR	r0x1058,W
     000A 000r                      1- 2925     	IOST	_IOSTB
                                    1- 2926     	.line	443, "main.c"; 	L1H;
     000B 18rr                      1- 2927     	BSR	_PORTB,1
                                    1- 2928     	.line	444, "main.c"; 	L3L;
     000C 1Crr                      1- 2929     	BCR	_PORTB,0
                                    1- 2930     	.line	445, "main.c"; 	delay(100);
     000D 2164                      1- 2931     	MOVIA	0x64
     000E 2rrr                      1- 2932     	LCALL	_delay
                                    1- 2933     	.line	446, "main.c"; 	LedInput();
     000F 2rrr                      1- 2934     	LCALL	_LedInput
                                    1- 2935     	.line	447, "main.c"; 	}
                                    1- 2936     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 2937     ; exit point of _LED3ON
                                    1- 2939     ;***
                                    1- 2940     ;  pBlock Stats: dbName = C
                                    1- 2941     ;***
                                    1- 2942     ;has an exit
                                    1- 2943     ;functions called:
                                    1- 2944     ;   _delay
                                    1- 2945     ;   _LedInput
                                    1- 2946     ;   _delay
                                    1- 2947     ;   _LedInput
                                    1- 2948     ;1 compiler assigned register :
                                    1- 2949     ;   r0x1059
                                    1- 2950     ;; Starting pCode block
                                    1- 2951     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2953     _LED2ON:
                                    1- 2954     ; 2 exit points
                                    1- 2955     	.line	431, "main.c"; 	L2OUT;
     0000 001r                      1- 2956     	IOSTR	_IOSTA
                                    1- 2957     	BANKSEL	r0x1059
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2958     	MOVAR	r0x1059
     0003 1Crr                      1- 2959     	BCR	r0x1059,0
     0004 01rr                      1- 2960     	MOVR	r0x1059,W
     0005 000r                      1- 2961     	IOST	_IOSTA
                                    1- 2962     	.line	432, "main.c"; 	L3OUT;
     0006 001r                      1- 2963     	IOSTR	_IOSTB
     0007 00rr                      1- 2964     	MOVAR	r0x1059
     0008 1Crr                      1- 2965     	BCR	r0x1059,0
     0009 01rr                      1- 2966     	MOVR	r0x1059,W
     000A 000r                      1- 2967     	IOST	_IOSTB
                                    1- 2968     	.line	433, "main.c"; 	L2H;
                                    1- 2969     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 18rr                      1- 2970     	BSR	_PORTA,0
                                    1- 2971     	.line	434, "main.c"; 	L3L;
     000D 1Crr                      1- 2972     	BCR	_PORTB,0
                                    1- 2973     	.line	435, "main.c"; 	delay(100);
     000E 2164                      1- 2974     	MOVIA	0x64
     000F 2rrr                      1- 2975     	LCALL	_delay
                                    1- 2976     	.line	436, "main.c"; 	LedInput();
     0010 2rrr                      1- 2977     	LCALL	_LedInput
                                    1- 2978     	.line	437, "main.c"; 	}
                                    1- 2979     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 2980     ; exit point of _LED2ON
                                    1- 2982     ;***
                                    1- 2983     ;  pBlock Stats: dbName = C
                                    1- 2984     ;***
                                    1- 2985     ;has an exit
                                    1- 2986     ;functions called:
                                    1- 2987     ;   _delay
                                    1- 2988     ;   _LedInput
                                    1- 2989     ;   _delay
                                    1- 2990     ;   _LedInput
                                    1- 2991     ;1 compiler assigned register :
                                    1- 2992     ;   r0x105A
                                    1- 2993     ;; Starting pCode block
                                    1- 2994     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2996     _LED1ON:
                                    1- 2997     ; 2 exit points
                                    1- 2998     	.line	421, "main.c"; 	L3OUT;
     0000 001r                      1- 2999     	IOSTR	_IOSTB
                                    1- 3000     	BANKSEL	r0x105A
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 3001     	MOVAR	r0x105A
     0003 1Crr                      1- 3002     	BCR	r0x105A,0
     0004 01rr                      1- 3003     	MOVR	r0x105A,W
     0005 000r                      1- 3004     	IOST	_IOSTB
                                    1- 3005     	.line	422, "main.c"; 	L1OUT;
     0006 001r                      1- 3006     	IOSTR	_IOSTB
     0007 00rr                      1- 3007     	MOVAR	r0x105A
     0008 1Crr                      1- 3008     	BCR	r0x105A,1
     0009 01rr                      1- 3009     	MOVR	r0x105A,W
     000A 000r                      1- 3010     	IOST	_IOSTB
                                    1- 3011     	.line	423, "main.c"; 	L3H;
     000B 18rr                      1- 3012     	BSR	_PORTB,0
                                    1- 3013     	.line	424, "main.c"; 	L1L;
     000C 1Crr                      1- 3014     	BCR	_PORTB,1
                                    1- 3015     	.line	425, "main.c"; 	delay(100);
     000D 2164                      1- 3016     	MOVIA	0x64
     000E 2rrr                      1- 3017     	LCALL	_delay
                                    1- 3018     	.line	426, "main.c"; 	LedInput();
     000F 2rrr                      1- 3019     	LCALL	_LedInput
                                    1- 3020     	.line	427, "main.c"; 	}
                                    1- 3021     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 3022     ; exit point of _LED1ON
                                    1- 3024     ;***
                                    1- 3025     ;  pBlock Stats: dbName = C
                                    1- 3026     ;***
                                    1- 3027     ;has an exit
                                    1- 3028     ;1 compiler assigned register :
                                    1- 3029     ;   r0x1052
                                    1- 3030     ;; Starting pCode block
                                    1- 3031     .segment "code"; module=main, function=_LedInput
     0000                           1- 3033     _LedInput:
                                    1- 3034     ; 2 exit points
                                    1- 3035     	.line	413, "main.c"; 	IOSTA |= 0x01;
     0000 001r                      1- 3036     	IOSTR	_IOSTA
                                    1- 3037     	BANKSEL	r0x1052
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 3038     	MOVAR	r0x1052
     0003 18rr                      1- 3039     	BSR	r0x1052,0
     0004 01rr                      1- 3040     	MOVR	r0x1052,W
     0005 000r                      1- 3041     	IOST	_IOSTA
                                    1- 3042     	.line	414, "main.c"; 	IOSTB |= 0x03;
     0006 001r                      1- 3043     	IOSTR	_IOSTB
     0007 00rr                      1- 3044     	MOVAR	r0x1052
     0008 2103                      1- 3045     	MOVIA	0x03
     0009 11rr                      1- 3046     	IORAR	r0x1052,F
     000A 01rr                      1- 3047     	MOVR	r0x1052,W
     000B 000r                      1- 3048     	IOST	_IOSTB
                                    1- 3049     	.line	415, "main.c"; 	PORTA &= 0xFE;
                                    1- 3050     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1- 3051     	BCR	_PORTA,0
                                    1- 3052     	.line	416, "main.c"; 	PORTB &= 0xFC;
     000E 21FC                      1- 3053     	MOVIA	0xfc
     000F 10rr                      1- 3054     	ANDAR	_PORTB,F
                                    1- 3055     	.line	417, "main.c"; 	}
                                    1- 3056     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 3057     ; exit point of _LedInput
                                    1- 3059     ;***
                                    1- 3060     ;  pBlock Stats: dbName = C
                                    1- 3061     ;***
                                    1- 3062     ;has an exit
                                    1- 3063     ;functions called:
                                    1- 3064     ;   __moduint
                                    1- 3065     ;   _pwmStop
                                    1- 3066     ;   _pwmStop
                                    1- 3067     ;   _LedInput
                                    1- 3068     ;   _LedInput
                                    1- 3069     ;   _LED6ON
                                    1- 3070     ;   _LED5ON
                                    1- 3071     ;   _LED4ON
                                    1- 3072     ;   _LED3ON
                                    1- 3073     ;   _LED2ON
                                    1- 3074     ;   _LED1ON
                                    1- 3075     ;   __moduint
                                    1- 3076     ;   _pwmStop
                                    1- 3077     ;   _pwmStop
                                    1- 3078     ;   _LedInput
                                    1- 3079     ;   _LedInput
                                    1- 3080     ;   _LED6ON
                                    1- 3081     ;   _LED5ON
                                    1- 3082     ;   _LED4ON
                                    1- 3083     ;   _LED3ON
                                    1- 3084     ;   _LED2ON
                                    1- 3085     ;   _LED1ON
                                    1- 3086     ;5 compiler assigned registers:
                                    1- 3087     ;   STK02
                                    1- 3088     ;   STK01
                                    1- 3089     ;   STK00
                                    1- 3090     ;   r0x105B
                                    1- 3091     ;   r0x105C
                                    1- 3092     ;; Starting pCode block
                                    1- 3093     .segment "code"; module=main, function=_ledShow
     0000                           1- 3095     _ledShow:
                                    1- 3096     ; 2 exit points
                                    1- 3097     	.line	333, "main.c"; 	if(ssTime > 0)
                                    1- 3098     	BANKSEL	_ssTime
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 3099     	MOVR	_ssTime,W
     0002 11rr                      1- 3100     	IORAR	(_ssTime + 1),W
     0003 0D03                      1- 3101     	BTRSC	STATUS,2
     0004 3rrr                      1- 3102     	LGOTO	_00008_DS_
                                    1- 3103     	.line	335, "main.c"; 	ssTime--;
     0005 21FF                      1- 3104     	MOVIA	0xff
     0006 03rr                      1- 3105     	ADDAR	_ssTime,F
     0007 0803                      1- 3106     	BTRSS	STATUS,0
     0008 06rr                      1- 3107     	DECR	(_ssTime + 1),F
                                    1- 3108     	.line	336, "main.c"; 	if(ssTime % 40 < 20)
     0009 2128                      1- 3109     	MOVIA	0x28
     000A 00rr                      1- 3110     	MOVAR	STK02
     000B 2100                      1- 3111     	MOVIA	0x00
     000C 00rr                      1- 3112     	MOVAR	STK01
     000D 01rr                      1- 3113     	MOVR	_ssTime,W
     000E 00rr                      1- 3114     	MOVAR	STK00
     000F 01rr                      1- 3115     	MOVR	(_ssTime + 1),W
     0010 2rrr                      1- 3116     	LCALL	__moduint
                                    1- 3117     	BANKSEL	r0x105B
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 3118     	MOVAR	r0x105B
     0013 01rr                      1- 3119     	MOVR	STK00,W
                                    1- 3120     	BANKSEL	r0x105C
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 3121     	MOVAR	r0x105C
                                    1- 3122     ;;unsigned compare: left < lit (0x14=20), size=2
     0016 2100                      1- 3123     	MOVIA	0x00
                                    1- 3124     	BANKSEL	r0x105B
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 04rr                      1- 3125     	SUBAR	r0x105B,W
     0019 0903                      1- 3126     	BTRSS	STATUS,2
     001A 3rrr                      1- 3127     	LGOTO	_00384_DS_
     001B 2114                      1- 3128     	MOVIA	0x14
                                    1- 3129     	BANKSEL	r0x105C
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 04rr                      1- 3130     	SUBAR	r0x105C,W
     001E                           1- 3131     _00384_DS_:
     001E 0C03                      1- 3132     	BTRSC	STATUS,0
     001F 3rrr                      1- 3133     	LGOTO	_00294_DS_
                                    1- 3134     	.line	338, "main.c"; 	ledStep = 0;
                                    1- 3135     	BANKSEL	_ledStep
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 02rr                      1- 3136     	CLRR	_ledStep
     0022 3rrr                      1- 3137     	LGOTO	_00295_DS_
     0023                           1- 3138     _00294_DS_:
                                    1- 3139     	.line	342, "main.c"; 	ledStep = tempLedStep;
                                    1- 3140     	BANKSEL	_tempLedStep
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1- 3141     	MOVR	_tempLedStep,W
                                    1- 3142     	BANKSEL	_ledStep
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 00rr                      1- 3143     	MOVAR	_ledStep
     0027                           1- 3144     _00295_DS_:
                                    1- 3145     	.line	344, "main.c"; 	if(ssTime == 0)
                                    1- 3146     	BANKSEL	_ssTime
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 3147     	MOVR	_ssTime,W
     0029 11rr                      1- 3148     	IORAR	(_ssTime + 1),W
     002A 0903                      1- 3149     	BTRSS	STATUS,2
     002B 3rrr                      1- 3150     	LGOTO	_00008_DS_
                                    1- 3151     	.line	346, "main.c"; 	tempLedStep = 0;
                                    1- 3152     	BANKSEL	_tempLedStep
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 02rr                      1- 3153     	CLRR	_tempLedStep
     002E                           1- 3154     _00008_DS_:
                                    1- 3155     	.line	349, "main.c"; 	if(overCount >= 5 && workStep > 0)
     002E 2105                      1- 3156     	MOVIA	0x05
                                    1- 3157     	BANKSEL	_overCount
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 04rr                      1- 3158     	SUBAR	_overCount,W
     0031 0803                      1- 3159     	BTRSS	STATUS,0
     0032 3rrr                      1- 3160     	LGOTO	_00303_DS_
                                    1- 3161     	BANKSEL	_workStep
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 3162     	MOVR	_workStep,W
     0035 0D03                      1- 3163     	BTRSC	STATUS,2
     0036 3rrr                      1- 3164     	LGOTO	_00303_DS_
                                    1- 3165     ;;unsigned compare: left < lit (0x1F4=500), size=2
                                    1- 3166     	.line	356, "main.c"; 	if(deadTime >= 500)
     0037 2101                      1- 3167     	MOVIA	0x01
                                    1- 3168     	BANKSEL	_deadTime
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 04rr                      1- 3169     	SUBAR	(_deadTime + 1),W
     003A 0903                      1- 3170     	BTRSS	STATUS,2
     003B 3rrr                      1- 3171     	LGOTO	_00386_DS_
     003C 21F4                      1- 3172     	MOVIA	0xf4
     003D 04rr                      1- 3173     	SUBAR	_deadTime,W
     003E                           1- 3174     _00386_DS_:
     003E 0803                      1- 3175     	BTRSS	STATUS,0
     003F 3rrr                      1- 3176     	LGOTO	_00303_DS_
                                    1- 3177     	.line	358, "main.c"; 	ssTime = 500;
     0040 21F4                      1- 3178     	MOVIA	0xf4
                                    1- 3179     	BANKSEL	_ssTime
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 00rr                      1- 3180     	MOVAR	_ssTime
     0043 2101                      1- 3181     	MOVIA	0x01
     0044 00rr                      1- 3182     	MOVAR	(_ssTime + 1)
                                    1- 3183     	.line	359, "main.c"; 	tempLedStep = workStep;
                                    1- 3184     	BANKSEL	_workStep
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1- 3185     	MOVR	_workStep,W
                                    1- 3186     	BANKSEL	_tempLedStep
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 3187     	MOVAR	_tempLedStep
                                    1- 3188     	.line	360, "main.c"; 	workStep = 0;
                                    1- 3189     	BANKSEL	_workStep
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 02rr                      1- 3190     	CLRR	_workStep
                                    1- 3191     	.line	361, "main.c"; 	pwmStop();
     004B 2rrr                      1- 3192     	LCALL	_pwmStop
     004C                           1- 3193     _00303_DS_:
                                    1- 3194     	.line	364, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 3195     	BANKSEL	_ledLightTime
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 01rr                      1- 3196     	MOVR	_ledLightTime,W
     004E 0D03                      1- 3197     	BTRSC	STATUS,2
     004F 3rrr                      1- 3198     	LGOTO	_00311_DS_
                                    1- 3199     	BANKSEL	_pwStep
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1- 3200     	MOVR	_pwStep,W
     0052 0D03                      1- 3201     	BTRSC	STATUS,2
     0053 3rrr                      1- 3202     	LGOTO	_00311_DS_
                                    1- 3203     	.line	366, "main.c"; 	if(ledLightTime == 6)
                                    1- 3204     	BANKSEL	_ledLightTime
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 01rr                      1- 3205     	MOVR	_ledLightTime,W
     0056 2406                      1- 3206     	XORIA	0x06
     0057 0903                      1- 3207     	BTRSS	STATUS,2
     0058 3rrr                      1- 3208     	LGOTO	_00311_DS_
                                    1- 3209     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3210     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 3211     	.line	368, "main.c"; 	if(pwStep > 6 )
     0059 2107                      1- 3212     	MOVIA	0x07
                                    1- 3213     	BANKSEL	_pwStep
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 04rr                      1- 3214     	SUBAR	_pwStep,W
     005C 0803                      1- 3215     	BTRSS	STATUS,0
     005D 3rrr                      1- 3216     	LGOTO	_00306_DS_
                                    1- 3217     	.line	369, "main.c"; 	ledStep = 6;
     005E 2106                      1- 3218     	MOVIA	0x06
                                    1- 3219     	BANKSEL	_ledStep
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 00rr                      1- 3220     	MOVAR	_ledStep
     0061 3rrr                      1- 3221     	LGOTO	_00311_DS_
     0062                           1- 3222     _00306_DS_:
                                    1- 3223     	.line	371, "main.c"; 	ledStep = pwStep;
                                    1- 3224     	BANKSEL	_pwStep
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 01rr                      1- 3225     	MOVR	_pwStep,W
                                    1- 3226     	BANKSEL	_ledStep
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 00rr                      1- 3227     	MOVAR	_ledStep
     0066                           1- 3228     _00311_DS_:
                                    1- 3229     	.line	374, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 3230     	BANKSEL	_shanshuoTime
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 01rr                      1- 3231     	MOVR	_shanshuoTime,W
     0068 0D03                      1- 3232     	BTRSC	STATUS,2
     0069 3rrr                      1- 3233     	LGOTO	_00317_DS_
                                    1- 3234     	BANKSEL	_workStep
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 01rr                      1- 3235     	MOVR	_workStep,W
     006C 0D03                      1- 3236     	BTRSC	STATUS,2
     006D 3rrr                      1- 3237     	LGOTO	_00317_DS_
                                    1- 3238     	BANKSEL	_pwStep
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 01rr                      1- 3239     	MOVR	_pwStep,W
     0070 0903                      1- 3240     	BTRSS	STATUS,2
     0071 3rrr                      1- 3241     	LGOTO	_00317_DS_
                                    1- 3242     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3243     	.line	376, "main.c"; 	if(count1s < 50)
     0072 2132                      1- 3244     	MOVIA	0x32
                                    1- 3245     	BANKSEL	_count1s
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 04rr                      1- 3246     	SUBAR	_count1s,W
     0075 0C03                      1- 3247     	BTRSC	STATUS,0
     0076 3rrr                      1- 3248     	LGOTO	_00314_DS_
                                    1- 3249     	.line	377, "main.c"; 	ledStep = workStep;
                                    1- 3250     	BANKSEL	_workStep
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 01rr                      1- 3251     	MOVR	_workStep,W
                                    1- 3252     	BANKSEL	_ledStep
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 00rr                      1- 3253     	MOVAR	_ledStep
     007B 3rrr                      1- 3254     	LGOTO	_00317_DS_
     007C                           1- 3255     _00314_DS_:
                                    1- 3256     	.line	379, "main.c"; 	ledStep = 0;
                                    1- 3257     	BANKSEL	_ledStep
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 02rr                      1- 3258     	CLRR	_ledStep
     007E                           1- 3259     _00317_DS_:
                                    1- 3260     	.line	381, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0)
                                    1- 3261     	BANKSEL	_shanshuoTime
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 01rr                      1- 3262     	MOVR	_shanshuoTime,W
     0080 0903                      1- 3263     	BTRSS	STATUS,2
     0081 3rrr                      1- 3264     	LGOTO	_00321_DS_
                                    1- 3265     	BANKSEL	_pwStep
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 01rr                      1- 3266     	MOVR	_pwStep,W
     0084 0903                      1- 3267     	BTRSS	STATUS,2
     0085 3rrr                      1- 3268     	LGOTO	_00321_DS_
                                    1- 3269     	.line	383, "main.c"; 	workStep = 0;
                                    1- 3270     	BANKSEL	_workStep
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 02rr                      1- 3271     	CLRR	_workStep
                                    1- 3272     	.line	384, "main.c"; 	ledStep = 0;
                                    1- 3273     	BANKSEL	_ledStep
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 02rr                      1- 3274     	CLRR	_ledStep
                                    1- 3275     	.line	385, "main.c"; 	pwmStop();
     008A 2rrr                      1- 3276     	LCALL	_pwmStop
     008B                           1- 3277     _00321_DS_:
                                    1- 3278     	.line	387, "main.c"; 	LedInput();
     008B 2rrr                      1- 3279     	LCALL	_LedInput
                                    1- 3280     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3281     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 3282     	.line	388, "main.c"; 	switch(ledStep)
     008C 2107                      1- 3283     	MOVIA	0x07
                                    1- 3284     	BANKSEL	_ledStep
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 04rr                      1- 3285     	SUBAR	_ledStep,W
     008F 0C03                      1- 3286     	BTRSC	STATUS,0
     0090 3rrr                      1- 3287     	LGOTO	_00331_DS_
     0091 21rr                      1- 3288     	MOVIA	((_00390_DS_ >> 8) & 0xff)
     0092 008A                      1- 3289     	MOVAR	PCHBUF
     0093 01rr                      1- 3290     	MOVR	_ledStep,W
     0094 25rr                      1- 3291     	ADDIA	_00390_DS_
     0095 0C03                      1- 3292     	BTRSC	STATUS,0
     0096 058A                      1- 3293     	INCR	PCHBUF,F
     0097 0082                      1- 3294     	MOVAR	PCL
     0098                           1- 3295     _00390_DS_:
     0098 3rrr                      1- 3296     	LGOTO	_00323_DS_
     0099 3rrr                      1- 3297     	LGOTO	_00329_DS_
     009A 3rrr                      1- 3298     	LGOTO	_00328_DS_
     009B 3rrr                      1- 3299     	LGOTO	_00327_DS_
     009C 3rrr                      1- 3300     	LGOTO	_00326_DS_
     009D 3rrr                      1- 3301     	LGOTO	_00325_DS_
     009E 3rrr                      1- 3302     	LGOTO	_00324_DS_
     009F                           1- 3303     _00323_DS_:
                                    1- 3304     	.line	391, "main.c"; 	LedInput();
     009F 2rrr                      1- 3305     	LCALL	_LedInput
                                    1- 3306     	.line	392, "main.c"; 	break;
     00A0 3rrr                      1- 3307     	LGOTO	_00331_DS_
     00A1                           1- 3308     _00324_DS_:
                                    1- 3309     	.line	394, "main.c"; 	LED6ON();
     00A1 2rrr                      1- 3310     	LCALL	_LED6ON
     00A2                           1- 3311     _00325_DS_:
                                    1- 3312     	.line	396, "main.c"; 	LED5ON();
     00A2 2rrr                      1- 3313     	LCALL	_LED5ON
     00A3                           1- 3314     _00326_DS_:
                                    1- 3315     	.line	398, "main.c"; 	LED4ON();
     00A3 2rrr                      1- 3316     	LCALL	_LED4ON
     00A4                           1- 3317     _00327_DS_:
                                    1- 3318     	.line	400, "main.c"; 	LED3ON();
     00A4 2rrr                      1- 3319     	LCALL	_LED3ON
     00A5                           1- 3320     _00328_DS_:
                                    1- 3321     	.line	402, "main.c"; 	LED2ON();
     00A5 2rrr                      1- 3322     	LCALL	_LED2ON
     00A6                           1- 3323     _00329_DS_:
                                    1- 3324     	.line	404, "main.c"; 	LED1ON();
     00A6 2rrr                      1- 3325     	LCALL	_LED1ON
     00A7                           1- 3326     _00331_DS_:
                                    1- 3327     	.line	407, "main.c"; 	}
                                    1- 3328     	RETURN	
     00A7 0010                      3-   26 m1      ret
                                    1- 3329     ; exit point of _ledShow
                                    1- 3331     ;***
                                    1- 3332     ;  pBlock Stats: dbName = C
                                    1- 3333     ;***
                                    1- 3334     ;has an exit
                                    1- 3335     ;functions called:
                                    1- 3336     ;   _LedInput
                                    1- 3337     ;   _LedInput
                                    1- 3338     ;; Starting pCode block
                                    1- 3339     .segment "code"; module=main, function=_initSys
     0000                           1- 3341     _initSys:
                                    1- 3342     ; 2 exit points
                                    1- 3343     	.line	301, "main.c"; 	DISI();
     0000 0013                      1- 3344     	DISI
                                    1- 3345     	.line	302, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 21BE                      1- 3346     	MOVIA	0xbe
     0002 000r                      1- 3347     	IOST	_IOSTA
                                    1- 3348     	.line	303, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3349     	CLRA	
     0004 000r                      1- 3350     	IOST	_IOSTB
                                    1- 3351     	.line	304, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3352     	CLRR	_PORTB
                                    1- 3353     	.line	305, "main.c"; 	PORTA = 0x00;
                                    1- 3354     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 3355     	CLRR	_PORTA
                                    1- 3356     	.line	306, "main.c"; 	LedInput();
     0008 2rrr                      1- 3357     	LCALL	_LedInput
                                    1- 3358     	.line	307, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 3359     	MOVIA	0x7f
     000A 000r                      1- 3360     	IOST	_APHCON
                                    1- 3361     	.line	308, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3362     	MOVIA	0xff
     000C 00rr                      1- 3363     	MOVAR	_BPHCON
                                    1- 3364     	.line	309, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3365     	MOVAR	_ABPLCON
                                    1- 3366     	.line	311, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     000E 2101                      1- 3367     	MOVIA	0x01
     000F 00rr                      1- 3368     	MOVAR	_INTE
                                    1- 3369     	.line	313, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3370     	CLRA	
     0011 000r                      1- 3371     	IOST	_PCON1
                                    1- 3372     	.line	315, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3373     	MOVIA	0x37
     0013 00rr                      1- 3374     	MOVAR	_TMR0
                                    1- 3375     	.line	316, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 3376     	CLRA	
     0015 0003                      1- 3377     	T0MD	
                                    1- 3378     	.line	318, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 3379     	MOVIA	0x01
     0017 000r                      1- 3380     	IOST	_PCON1
                                    1- 3381     	.line	321, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 3382     	MOVIA	0x98
     0019 00rr                      1- 3383     	MOVAR	_PCON
                                    1- 3384     	.line	324, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 3385     	MOVIA	0x01
     001B 000r                      1- 3386     	IOST	_PCON1
                                    1- 3387     	.line	325, "main.c"; 	ENI();
     001C 0004                      1- 3388     	ENI
                                    1- 3389     	.line	326, "main.c"; 	}
                                    1- 3390     	RETURN	
     001D 0010                      3-   26 m1      ret
                                    1- 3391     ; exit point of _initSys
                                    1- 3393     ;***
                                    1- 3394     ;  pBlock Stats: dbName = C
                                    1- 3395     ;***
                                    1- 3396     ;has an exit
                                    1- 3397     ;functions called:
                                    1- 3398     ;   _pwmStop
                                    1- 3399     ;   _pwmStop
                                    1- 3400     ;; Starting pCode block
                                    1- 3401     .segment "code"; module=main, function=_powerOff
     0000                           1- 3403     _powerOff:
                                    1- 3404     ; 2 exit points
                                    1- 3405     	.line	292, "main.c"; 	workStep = 0;
                                    1- 3406     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 3407     	CLRR	_workStep
                                    1- 3408     	.line	293, "main.c"; 	pwmStop();
     0002 2rrr                      1- 3409     	LCALL	_pwmStop
                                    1- 3410     	.line	294, "main.c"; 	ledStep = 5;
     0003 2105                      1- 3411     	MOVIA	0x05
                                    1- 3412     	BANKSEL	_ledStep
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 3413     	MOVAR	_ledStep
                                    1- 3414     	.line	295, "main.c"; 	}
                                    1- 3415     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1- 3416     ; exit point of _powerOff
                                    1- 3418     ;***
                                    1- 3419     ;  pBlock Stats: dbName = C
                                    1- 3420     ;***
                                    1- 3421     ;has an exit
                                    1- 3422     ;functions called:
                                    1- 3423     ;   _keyRead
                                    1- 3424     ;   _pwmInit
                                    1- 3425     ;   _powerOff
                                    1- 3426     ;   _pwmInit
                                    1- 3427     ;   _keyRead
                                    1- 3428     ;   _pwmInit
                                    1- 3429     ;   _powerOff
                                    1- 3430     ;   _pwmInit
                                    1- 3431     ;1 compiler assigned register :
                                    1- 3432     ;   r0x105D
                                    1- 3433     ;; Starting pCode block
                                    1- 3434     .segment "code"; module=main, function=_keyCtr
                                    1- 3436     ;local variable name mapping:
     0000                           1- 3438     _keyCtr:
                                    1- 3439     ; 2 exit points
                                    1- 3440     	.line	230, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 3441     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 07rr                      1- 3442     	COMR	_PORTA,W
                                    1- 3443     	BANKSEL	r0x105D
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1- 3444     	MOVAR	r0x105D
     0004 2180                      1- 3445     	MOVIA	0x80
     0005 10rr                      1- 3446     	ANDAR	r0x105D,F
     0006 01rr                      1- 3447     	MOVR	r0x105D,W
     0007 2rrr                      1- 3448     	LCALL	_keyRead
                                    1- 3449     	BANKSEL	r0x105D
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 3450     	MOVAR	r0x105D
                                    1- 3451     	.line	231, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3452     	XORIA	0x01
     000B 0903                      1- 3453     	BTRSS	STATUS,2
     000C 3rrr                      1- 3454     	LGOTO	_00278_DS_
                                    1- 3455     	.line	233, "main.c"; 	count500ms = 0;
                                    1- 3456     	BANKSEL	_count500ms
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1- 3457     	CLRR	_count500ms
                                    1- 3458     	.line	234, "main.c"; 	ledLightTime = 0;
                                    1- 3459     	BANKSEL	_ledLightTime
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1- 3460     	CLRR	_ledLightTime
                                    1- 3461     	.line	235, "main.c"; 	if(workStep == 0)
                                    1- 3462     	BANKSEL	_workStep
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 3463     	MOVR	_workStep,W
     0013 0903                      1- 3464     	BTRSS	STATUS,2
     0014 3rrr                      1- 3465     	LGOTO	_00248_DS_
                                    1- 3466     	.line	237, "main.c"; 	count1s = 0;
                                    1- 3467     	BANKSEL	_count1s
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 3468     	CLRR	_count1s
                                    1- 3469     	.line	238, "main.c"; 	ledLightTime = 6;
     0017 2106                      1- 3470     	MOVIA	0x06
                                    1- 3471     	BANKSEL	_ledLightTime
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 3472     	MOVAR	_ledLightTime
                                    1- 3473     	.line	239, "main.c"; 	return;
     001A 3rrr                      1- 3474     	LGOTO	_00280_DS_
     001B                           1- 3475     _00248_DS_:
                                    1- 3476     	.line	241, "main.c"; 	ledTime = 0;
                                    1- 3477     	BANKSEL	_ledTime
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1- 3478     	CLRR	_ledTime
                                    1- 3479     	.line	242, "main.c"; 	if(++workStep > 6)
                                    1- 3480     	BANKSEL	_workStep
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 05rr                      1- 3481     	INCR	_workStep,F
                                    1- 3482     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3483     ;;unsigned compare: left >= lit (0x7=7), size=1
     001F 2107                      1- 3484     	MOVIA	0x07
     0020 04rr                      1- 3485     	SUBAR	_workStep,W
     0021 0803                      1- 3486     	BTRSS	STATUS,0
     0022 3rrr                      1- 3487     	LGOTO	_00250_DS_
                                    1- 3488     	.line	243, "main.c"; 	workStep = 1;
     0023 2101                      1- 3489     	MOVIA	0x01
     0024 00rr                      1- 3490     	MOVAR	_workStep
     0025                           1- 3491     _00250_DS_:
                                    1- 3492     	.line	244, "main.c"; 	shanshuoTime = 6;
     0025 2106                      1- 3493     	MOVIA	0x06
                                    1- 3494     	BANKSEL	_shanshuoTime
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1- 3495     	MOVAR	_shanshuoTime
                                    1- 3496     	.line	245, "main.c"; 	if(workStep == 1)
                                    1- 3497     	BANKSEL	_workStep
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1- 3498     	MOVR	_workStep,W
     002A 2401                      1- 3499     	XORIA	0x01
     002B 0903                      1- 3500     	BTRSS	STATUS,2
     002C 3rrr                      1- 3501     	LGOTO	_00266_DS_
                                    1- 3502     	.line	246, "main.c"; 	maxDuty = 40;
     002D 2128                      1- 3503     	MOVIA	0x28
                                    1- 3504     	BANKSEL	_maxDuty
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1- 3505     	MOVAR	_maxDuty
     0030 3rrr                      1- 3506     	LGOTO	_00267_DS_
     0031                           1- 3507     _00266_DS_:
                                    1- 3508     	.line	247, "main.c"; 	else if(workStep == 2)
                                    1- 3509     	BANKSEL	_workStep
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1- 3510     	MOVR	_workStep,W
     0033 2402                      1- 3511     	XORIA	0x02
     0034 0903                      1- 3512     	BTRSS	STATUS,2
     0035 3rrr                      1- 3513     	LGOTO	_00263_DS_
                                    1- 3514     	.line	248, "main.c"; 	maxDuty = 42;
     0036 212A                      1- 3515     	MOVIA	0x2a
                                    1- 3516     	BANKSEL	_maxDuty
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 3517     	MOVAR	_maxDuty
     0039 3rrr                      1- 3518     	LGOTO	_00267_DS_
     003A                           1- 3519     _00263_DS_:
                                    1- 3520     	.line	249, "main.c"; 	else if(workStep == 3)
                                    1- 3521     	BANKSEL	_workStep
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1- 3522     	MOVR	_workStep,W
     003C 2403                      1- 3523     	XORIA	0x03
     003D 0903                      1- 3524     	BTRSS	STATUS,2
     003E 3rrr                      1- 3525     	LGOTO	_00260_DS_
                                    1- 3526     	.line	250, "main.c"; 	maxDuty = 44;
     003F 212C                      1- 3527     	MOVIA	0x2c
                                    1- 3528     	BANKSEL	_maxDuty
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 00rr                      1- 3529     	MOVAR	_maxDuty
     0042 3rrr                      1- 3530     	LGOTO	_00267_DS_
     0043                           1- 3531     _00260_DS_:
                                    1- 3532     	.line	251, "main.c"; 	else if(workStep == 4)
                                    1- 3533     	BANKSEL	_workStep
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 01rr                      1- 3534     	MOVR	_workStep,W
     0045 2404                      1- 3535     	XORIA	0x04
     0046 0903                      1- 3536     	BTRSS	STATUS,2
     0047 3rrr                      1- 3537     	LGOTO	_00257_DS_
                                    1- 3538     	.line	252, "main.c"; 	maxDuty = 46;
     0048 212E                      1- 3539     	MOVIA	0x2e
                                    1- 3540     	BANKSEL	_maxDuty
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 00rr                      1- 3541     	MOVAR	_maxDuty
     004B 3rrr                      1- 3542     	LGOTO	_00267_DS_
     004C                           1- 3543     _00257_DS_:
                                    1- 3544     	.line	253, "main.c"; 	else if(workStep == 5)
                                    1- 3545     	BANKSEL	_workStep
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 01rr                      1- 3546     	MOVR	_workStep,W
     004E 2405                      1- 3547     	XORIA	0x05
     004F 0903                      1- 3548     	BTRSS	STATUS,2
     0050 3rrr                      1- 3549     	LGOTO	_00254_DS_
                                    1- 3550     	.line	254, "main.c"; 	maxDuty = 48;
     0051 2130                      1- 3551     	MOVIA	0x30
                                    1- 3552     	BANKSEL	_maxDuty
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 00rr                      1- 3553     	MOVAR	_maxDuty
     0054 3rrr                      1- 3554     	LGOTO	_00267_DS_
     0055                           1- 3555     _00254_DS_:
                                    1- 3556     	.line	255, "main.c"; 	else if(workStep == 6)
                                    1- 3557     	BANKSEL	_workStep
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1- 3558     	MOVR	_workStep,W
     0057 2406                      1- 3559     	XORIA	0x06
     0058 0903                      1- 3560     	BTRSS	STATUS,2
     0059 3rrr                      1- 3561     	LGOTO	_00267_DS_
                                    1- 3562     	.line	256, "main.c"; 	maxDuty = 50;
     005A 2132                      1- 3563     	MOVIA	0x32
                                    1- 3564     	BANKSEL	_maxDuty
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 00rr                      1- 3565     	MOVAR	_maxDuty
     005D                           1- 3566     _00267_DS_:
                                    1- 3567     	.line	257, "main.c"; 	if(workStep > 0)
                                    1- 3568     	BANKSEL	_workStep
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 01rr                      1- 3569     	MOVR	_workStep,W
     005F 0D03                      1- 3570     	BTRSC	STATUS,2
     0060 3rrr                      1- 3571     	LGOTO	_00269_DS_
                                    1- 3572     	.line	259, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3573     	BANKSEL	_maxDuty
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 01rr                      1- 3574     	MOVR	_maxDuty,W
     0063 00rr                      1- 3575     	SFUN	_PWM2DUTY
                                    1- 3576     	.line	260, "main.c"; 	pwmInit();
     0064 2rrr                      1- 3577     	LCALL	_pwmInit
     0065                           1- 3578     _00269_DS_:
                                    1- 3579     	.line	262, "main.c"; 	ledStep = workStep;
                                    1- 3580     	BANKSEL	_workStep
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 01rr                      1- 3581     	MOVR	_workStep,W
                                    1- 3582     	BANKSEL	_ledStep
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1- 3583     	MOVAR	_ledStep
     0069 3rrr                      1- 3584     	LGOTO	_00280_DS_
     006A                           1- 3585     _00278_DS_:
                                    1- 3586     	.line	264, "main.c"; 	else if(kclick == 2)
                                    1- 3587     	BANKSEL	r0x105D
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 01rr                      1- 3588     	MOVR	r0x105D,W
     006C 2402                      1- 3589     	XORIA	0x02
     006D 0903                      1- 3590     	BTRSS	STATUS,2
     006E 3rrr                      1- 3591     	LGOTO	_00280_DS_
                                    1- 3592     	.line	266, "main.c"; 	if(workStep > 0)
                                    1- 3593     	BANKSEL	_workStep
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 01rr                      1- 3594     	MOVR	_workStep,W
     0071 0D03                      1- 3595     	BTRSC	STATUS,2
     0072 3rrr                      1- 3596     	LGOTO	_00273_DS_
                                    1- 3597     	.line	268, "main.c"; 	powerOff();
     0073 2rrr                      1- 3598     	LCALL	_powerOff
     0074 3rrr                      1- 3599     	LGOTO	_00274_DS_
     0075                           1- 3600     _00273_DS_:
                                    1- 3601     	.line	272, "main.c"; 	if(pwStep == 10)
                                    1- 3602     	BANKSEL	_pwStep
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 01rr                      1- 3603     	MOVR	_pwStep,W
     0077 240A                      1- 3604     	XORIA	0x0a
     0078 0903                      1- 3605     	BTRSS	STATUS,2
     0079 3rrr                      1- 3606     	LGOTO	_00271_DS_
                                    1- 3607     	.line	274, "main.c"; 	sleepTime = 0;
                                    1- 3608     	BANKSEL	_sleepTime
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1- 3609     	CLRR	_sleepTime
     007C 02rr                      1- 3610     	CLRR	(_sleepTime + 1)
                                    1- 3611     	.line	275, "main.c"; 	return;
     007D 3rrr                      1- 3612     	LGOTO	_00280_DS_
     007E                           1- 3613     _00271_DS_:
                                    1- 3614     	.line	277, "main.c"; 	workStep = 1;
     007E 2101                      1- 3615     	MOVIA	0x01
                                    1- 3616     	BANKSEL	_workStep
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 00rr                      1- 3617     	MOVAR	_workStep
                                    1- 3618     	.line	278, "main.c"; 	PWM2DUTY = 90;
     0081 215A                      1- 3619     	MOVIA	0x5a
     0082 00rr                      1- 3620     	SFUN	_PWM2DUTY
                                    1- 3621     	.line	279, "main.c"; 	currentDuty = 90;
                                    1- 3622     	BANKSEL	_currentDuty
     0083 rrrr                      3-   71 m1      .banksel ram_address
     0084 00rr                      1- 3623     	MOVAR	_currentDuty
                                    1- 3624     	.line	280, "main.c"; 	maxDuty = 40;
     0085 2128                      1- 3625     	MOVIA	0x28
                                    1- 3626     	BANKSEL	_maxDuty
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 00rr                      1- 3627     	MOVAR	_maxDuty
                                    1- 3628     	.line	281, "main.c"; 	pwmInit();
     0088 2rrr                      1- 3629     	LCALL	_pwmInit
                                    1- 3630     	.line	282, "main.c"; 	shanshuoTime = 16;
     0089 2110                      1- 3631     	MOVIA	0x10
                                    1- 3632     	BANKSEL	_shanshuoTime
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 00rr                      1- 3633     	MOVAR	_shanshuoTime
     008C                           1- 3634     _00274_DS_:
                                    1- 3635     	.line	285, "main.c"; 	ledStep = workStep;
                                    1- 3636     	BANKSEL	_workStep
     008C rrrr                      3-   71 m1      .banksel ram_address
     008D 01rr                      1- 3637     	MOVR	_workStep,W
                                    1- 3638     	BANKSEL	_ledStep
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 00rr                      1- 3639     	MOVAR	_ledStep
     0090                           1- 3640     _00280_DS_:
                                    1- 3641     	.line	287, "main.c"; 	}
                                    1- 3642     	RETURN	
     0090 0010                      3-   26 m1      ret
                                    1- 3643     ; exit point of _keyCtr
                                    1- 3646     ;	code size estimation:
                                    1- 3647     ;	 1446+  348 =  1794 instructions ( 4284 byte)
                                    1- 3649     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__moduint               Label    00000000
__mulchar               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002C
_00002_DS_              Label    0000002C
_00003_DS_              Label    0000002C
_00004_DS_              Label    00000025
_00005_DS_              Label    00000025
_00006_DS_              Label    00000025
_00007_DS_              Label    0000005B
_00008_DS_              Label    0000002E
_00106_DS_              Label    00000026
_00112_DS_              Label    00000047
_00119_DS_              Label    00000058
_00126_DS_              Label    0000005B
_00128_DS_              Label    0000005F
_00136_DS_              Label    00000018
_00139_DS_              Label    00000021
_00149_DS_              Label    00000039
_00153_DS_              Label    0000002E
_00154_DS_              Label    00000042
_00156_DS_              Label    00000055
_00161_DS_              Label    00000071
_00168_DS_              Label    00000002
_00241_DS_              Label    0000006E
_00242_DS_              Label    00000078
_00248_DS_              Label    0000001B
_00250_DS_              Label    00000025
_00254_DS_              Label    00000055
_00257_DS_              Label    0000004C
_00260_DS_              Label    00000043
_00263_DS_              Label    0000003A
_00266_DS_              Label    00000031
_00267_DS_              Label    0000005D
_00269_DS_              Label    00000065
_00271_DS_              Label    0000007E
_00273_DS_              Label    00000075
_00274_DS_              Label    0000008C
_00278_DS_              Label    0000006A
_00280_DS_              Label    00000090
_00294_DS_              Label    00000023
_00295_DS_              Label    00000027
_00303_DS_              Label    0000004C
_00306_DS_              Label    00000062
_00311_DS_              Label    00000066
_00314_DS_              Label    0000007C
_00317_DS_              Label    0000007E
_00321_DS_              Label    0000008B
_00323_DS_              Label    0000009F
_00324_DS_              Label    000000A1
_00325_DS_              Label    000000A2
_00326_DS_              Label    000000A3
_00327_DS_              Label    000000A4
_00328_DS_              Label    000000A5
_00329_DS_              Label    000000A6
_00331_DS_              Label    000000A7
_00384_DS_              Label    0000001E
_00386_DS_              Label    0000003E
_00390_DS_              Label    00000098
_00425_DS_              Label    0000000C
_00436_DS_              Label    0000000C
_00456_DS_              Label    0000001D
_00457_DS_              Label    00000025
_00459_DS_              Label    00000013
_00460_DS_              Label    00000027
_00461_DS_              Label    00000028
_00471_DS_              Label    0000003D
_00473_DS_              Label    0000004D
_00476_DS_              Label    00000045
_00477_DS_              Label    0000004F
_00479_DS_              Label    00000029
_00483_DS_              Label    0000000C
_00484_DS_              Label    00000051
_00487_DS_              Label    00000060
_00513_DS_              Label    0000000A
_00520_DS_              Label    00000004
_00522_DS_              Label    0000000E
_00532_DS_              Label    00000038
_00536_DS_              Label    00000069
_00541_DS_              Label    00000071
_00544_DS_              Label    00000044
_00545_DS_              Label    00000075
_00552_DS_              Label    000000A5
_00553_DS_              Label    000000B6
_00561_DS_              Label    000000F0
_00565_DS_              Label    00000102
_00566_DS_              Label    00000105
_00570_DS_              Label    00000123
_00574_DS_              Label    00000135
_00575_DS_              Label    00000138
_00579_DS_              Label    00000156
_00583_DS_              Label    00000168
_00584_DS_              Label    0000016B
_00588_DS_              Label    00000189
_00592_DS_              Label    0000019B
_00593_DS_              Label    0000019E
_00597_DS_              Label    000001B9
_00598_DS_              Label    000001BC
_00602_DS_              Label    000001A2
_00605_DS_              Label    0000016F
_00608_DS_              Label    0000013C
_00611_DS_              Label    00000109
_00614_DS_              Label    000000D6
_00617_DS_              Label    00000088
_00619_DS_              Label    000001BF
_00738_DS_              Label    0000003F
_00739_DS_              Label    0000004B
_00742_DS_              Label    00000082
_00743_DS_              Label    0000008F
_00745_DS_              Label    0000009F
_00746_DS_              Label    000000B1
_00747_DS_              Label    000000C2
_00748_DS_              Label    000000CB
_00749_DS_              Label    000000DD
_00750_DS_              Label    000000EB
_00752_DS_              Label    000000FC
_00753_DS_              Label    00000110
_00754_DS_              Label    0000011E
_00756_DS_              Label    0000012F
_00757_DS_              Label    00000143
_00758_DS_              Label    00000151
_00760_DS_              Label    00000162
_00761_DS_              Label    00000176
_00762_DS_              Label    00000184
_00764_DS_              Label    00000195
_00766_DS_              Label    000001B3
_00776_DS_              Label    00000038
_00778_DS_              Label    0000004E
_00792_DS_              Label    000000B5
_00793_DS_              Label    000000C2
_00798_DS_              Label    00000095
_00801_DS_              Label    00000075
_00804_DS_              Label    00000052
_00807_DS_              Label    000000C9
_00855_DS_              Label    00000044
_00857_DS_              Label    00000059
_00859_DS_              Label    0000006D
_00860_DS_              Label    0000007C
_00862_DS_              Label    000000A3
_00864_DS_              Label    000000BC
_00871_DS_              Label    0000000E
_00873_DS_              Label    0000002F
_00880_DS_              Label    0000000E
_00882_DS_              Label    0000002F
_00889_DS_              Label    0000000E
_00891_DS_              Label    0000002F
_00896_DS_              Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_cDuty                  Label    00000000
_checkBatAD             Label    00000000
_checkChrgV             Label    00000000
_checkInAD              Label    00000000
_checkOutA              Label    00000000
_chrgCount              Label    00000000
_chrgCtr                Label    00000000
_chrgTime               Label    00000000
_CMPCR                  Label    00000000
_count1s                Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_count900s              Label    00000000
_currentDuty            Label    00000000
_deadTime               Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_F_AIN2_Convert         Label    00000000
_F_AIN3_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_fgCount                Label    00000000
_fgCtr                  Label    00000000
_fgPRD                  Label    00000000
_firstTime              Label    00000000
_FSR                    Label    00000000
_fullCount              Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IO_Init                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_LED5ON                 Label    00000000
_LED6ON                 Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_LedInput               Label    00000000
_ledLightTime           Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_ledTime                Label    00000000
_lowBatTime             Label    00000000
_lowCount               Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_overCount              Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_powerOff               Label    00000000
_preFG                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_pwm1Init               Label    00000000
_pwm1Stop               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_R_AIN3_DATA            Label    00000000
_R_AIN3_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_shanshuoTime           Label    00000000
_sleepTime              Label    00000000
_ssTime                 Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempDuty               Label    00000000
_tempLedStep            Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000070
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103C                 Label    00000000
r0x103D                 Label    00000000
r0x103E                 Label    00000000
r0x103F                 Label    00000000
r0x1042                 Label    00000000
r0x1043                 Label    00000000
r0x1046                 Label    00000000
r0x1049                 Label    00000000
r0x104A                 Label    00000000
r0x104D                 Label    00000000
r0x104E                 Label    00000000
r0x104F                 Label    00000000
r0x1050                 Label    00000000
r0x1051                 Label    00000000
r0x1052                 Label    00000000
r0x1053                 Label    00000000
r0x1054                 Label    00000000
r0x1055                 Label    00000000
r0x1056                 Label    00000000
r0x1057                 Label    00000000
r0x1058                 Label    00000000
r0x1059                 Label    00000000
r0x105A                 Label    00000000
r0x105B                 Label    00000000
r0x105C                 Label    00000000
r0x105D                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
