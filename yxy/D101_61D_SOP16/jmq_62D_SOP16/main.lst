
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B061D,c=on
                                    1-    9     	#include "ny8b061d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__divuint
                                    1-   15     	extern	__moduint
                                    1-   16     	extern	_PORTAbits
                                    1-   17     	extern	_PORTBbits
                                    1-   18     	extern	_PCONbits
                                    1-   19     	extern	_BWUCONbits
                                    1-   20     	extern	_ABPLCONbits
                                    1-   21     	extern	_BPHCONbits
                                    1-   22     	extern	_INTEbits
                                    1-   23     	extern	_INTFbits
                                    1-   24     	extern	_ADMDbits
                                    1-   25     	extern	_ADRbits
                                    1-   26     	extern	_ADVREFHbits
                                    1-   27     	extern	_ADCRbits
                                    1-   28     	extern	_AWUCONbits
                                    1-   29     	extern	_PACONbits
                                    1-   30     	extern	_INTEDGbits
                                    1-   31     	extern	_RFCbits
                                    1-   32     	extern	_INTE2bits
                                    1-   33     	extern	_INDF
                                    1-   34     	extern	_TMR0
                                    1-   35     	extern	_PCL
                                    1-   36     	extern	_STATUS
                                    1-   37     	extern	_FSR
                                    1-   38     	extern	_PORTA
                                    1-   39     	extern	_PORTB
                                    1-   40     	extern	_PCON
                                    1-   41     	extern	_BWUCON
                                    1-   42     	extern	_PCHBUF
                                    1-   43     	extern	_ABPLCON
                                    1-   44     	extern	_BPHCON
                                    1-   45     	extern	_INTE
                                    1-   46     	extern	_INTF
                                    1-   47     	extern	_ADMD
                                    1-   48     	extern	_ADR
                                    1-   49     	extern	_ADD
                                    1-   50     	extern	_ADVREFH
                                    1-   51     	extern	_ADCR
                                    1-   52     	extern	_AWUCON
                                    1-   53     	extern	_PACON
                                    1-   54     	extern	_INTEDG
                                    1-   55     	extern	_TMRH
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_PCON1
                                    1-   87     	extern	_T0MD
                                    1-   88     	extern	___sdcc_saved_fsr
                                    1-   89     	extern	___sdcc_saved_stk00
                                    1-   90     	extern	___sdcc_saved_stk01
                                    1-   91     	extern	__gptrget1
                                    1-   92     	extern	__gptrput1
                                    1-   93     	extern	__mulchar
                                    1-   94     	extern	__nyc_ny8_startup
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     ; global declarations
                                    1-   97     ;--------------------------------------------------------
                                    1-   98     	extern	_workCtr
                                    1-   99     	extern	_pwmStop
                                    1-  100     	extern	_pwmInit
                                    1-  101     	extern	_delay_us
                                    1-  102     	extern	_Delay10Us
                                    1-  103     	extern	_gotoSleep
                                    1-  104     	extern	_F_wait_eoc
                                    1-  105     	extern	_F_AIN2_Convert
                                    1-  106     	extern	_F_AIN9_Convert
                                    1-  107     	extern	_checkPWAAD
                                    1-  108     	extern	_checkBatAD
                                    1-  109     	extern	_initAD
                                    1-  110     	extern	_keyRead2
                                    1-  111     	extern	_keyRead
                                    1-  112     	extern	_ind_light_disp
                                    1-  113     	extern	_refresh
                                    1-  114     	extern	_keyCtr
                                    1-  115     	extern	_chrgCtr
                                    1-  116     	extern	_isr
                                    1-  117     	extern	_main
                                    1-  118     	extern	_intCount
                                    1-  119     	extern	_IntFlag
                                    1-  120     	extern	_longPressFlag
                                    1-  121     	extern	_workStep
                                    1-  122     	extern	_chrgStep
                                    1-  123     	extern	_sleepTime
                                    1-  124     	extern	_shiwei
                                    1-  125     	extern	_gewei
                                    1-  126     	extern	_keyCount
                                    1-  127     	extern	_keyCount2
                                    1-  128     	extern	_keyCount3
                                    1-  129     	extern	_batValue
                                    1-  130     	extern	_R_AIN9_DATA
                                    1-  131     	extern	_R_AIN9_DATA_LB
                                    1-  132     	extern	_R_AIN2_DATA
                                    1-  133     	extern	_R_AIN2_DATA_LB
                                    1-  134     	extern	_maxDuty
                                    1-  135     	extern	_duty
                                    1-  136     	extern	_adCheckTime
                                    1-  137     	extern	_count3S
                                    1-  138     	extern	_firstTime
                                    1-  140     	extern PSAVE
                                    1-  141     	extern SSAVE
                                    1-  142     	extern WSAVE
                                    1-  143     	extern STK02
                                    1-  144     	extern STK01
                                    1-  145     	extern STK00
                                    1-  147     .segment "uninit", 0x20000040
 20000040                           1-  148     PSAVE:
                                    1-  149     	.res 1
 20000041                           1-  150     SSAVE:
                                    1-  151     	.res 1
 20000042                           1-  152     WSAVE:
                                    1-  153     	.res 1
 20000043                           1-  154     STK02:
                                    1-  155     	.res 1
 20000044                           1-  156     STK01:
                                    1-  157     	.res 1
 20000045                           1-  158     STK00:
                                    1-  159     	.res 1
                                    1-  161     ;--------------------------------------------------------
                                    1-  162     ; global definitions
                                    1-  163     ;--------------------------------------------------------
                                    1-  164     .segment "uninit"
     0000                           1-  165     _shiwei:
                                    1-  166     	.res	1
                                    1-  169     .segment "uninit"
     0000                           1-  170     _gewei:
                                    1-  171     	.res	1
                                    1-  174     .segment "uninit"
     0000                           1-  175     _R_AIN9_DATA:
                                    1-  176     	.res	2
                                    1-  179     .segment "uninit"
     0000                           1-  180     _R_AIN9_DATA_LB:
                                    1-  181     	.res	1
                                    1-  184     .segment "uninit"
     0000                           1-  185     _R_AIN2_DATA:
                                    1-  186     	.res	2
                                    1-  189     .segment "uninit"
     0000                           1-  190     _R_AIN2_DATA_LB:
                                    1-  191     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     _maxDuty:
                                    1-  196     	.res	1
                                    1-  199     .segment "uninit"
     0000                           1-  200     _duty:
                                    1-  201     	.res	1
                                    1-  204     ;--------------------------------------------------------
                                    1-  205     ; absolute symbol definitions
                                    1-  206     ;--------------------------------------------------------
                                    1-  207     ;--------------------------------------------------------
                                    1-  208     ; compiler-defined variables
                                    1-  209     ;--------------------------------------------------------
                                    1-  210     .segment "uninit"
     0000                           1-  211     r0x104F:
                                    1-  212     	.res	1
                                    1-  213     .segment "uninit"
     0000                           1-  214     r0x104E:
                                    1-  215     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     r0x104A:
                                    1-  218     	.res	1
                                    1-  219     .segment "uninit"
     0000                           1-  220     r0x104C:
                                    1-  221     	.res	1
                                    1-  222     .segment "uninit"
     0000                           1-  223     r0x104B:
                                    1-  224     	.res	1
                                    1-  225     .segment "uninit"
     0000                           1-  226     r0x104D:
                                    1-  227     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     r0x1047:
                                    1-  230     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     r0x1048:
                                    1-  233     	.res	1
                                    1-  234     .segment "uninit"
     0000                           1-  235     r0x1049:
                                    1-  236     	.res	1
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x1045:
                                    1-  239     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     r0x1046:
                                    1-  242     	.res	1
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x1044:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x1040:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x1043:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x1042:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x1041:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x103E:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x103F:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x103A:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x103B:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x1032:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x1033:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x1034:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x1037:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x102C:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x102D:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x102E:
                                    1-  290     	.res	1
                                    1-  291     .segment "uninit"
     0000                           1-  292     r0x1031:
                                    1-  293     	.res	1
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x102B:
                                    1-  296     	.res	1
                                    1-  297     .segment "uninit"
     0000                           1-  298     r0x1028:
                                    1-  299     	.res	1
                                    1-  300     .segment "uninit"
     0000                           1-  301     r0x1029:
                                    1-  302     	.res	1
                                    1-  303     .segment "uninit"
     0000                           1-  304     r0x102A:
                                    1-  305     	.res	1
                                    1-  306     ;--------------------------------------------------------
                                    1-  307     ; initialized data
                                    1-  308     ;--------------------------------------------------------
                                    1-  310     .segment "idata"
     0000                           1-  311     _table:
     0000 003F                      1-  312     	dw	0x3f
     0001 0006                      1-  313     	dw	0x06
     0002 005B                      1-  314     	dw	0x5b
     0003 004F                      1-  315     	dw	0x4f
     0004 0066                      1-  316     	dw	0x66
     0005 006D                      1-  317     	dw	0x6d
     0006 007D                      1-  318     	dw	0x7d
     0007 0007                      1-  319     	dw	0x07
     0008 007F                      1-  320     	dw	0x7f
     0009 006F                      1-  321     	dw	0x6f
     000A 0071                      1-  322     	dw	0x71
     000B 0038                      1-  323     	dw	0x38
                                    1-  327     .segment "idata"
     0000                           1-  328     _intCount:
     0000 0000                      1-  329     	dw	0x00
                                    1-  333     .segment "idata"
     0000                           1-  334     _IntFlag:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _longPressFlag:
     0000 0000                      1-  341     	dw	0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _workStep:
     0000 0000                      1-  347     	dw	0x00
                                    1-  351     .segment "idata"
     0000                           1-  352     _chrgStep:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _sleepTime:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _keyCount:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _keyCount2:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _keyCount3:
     0000 0000                      1-  377     	dw	0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _batValue:
     0000 0000 0000                 1-  383     	dw	0x00, 0x00
                                    1-  387     .segment "idata"
     0000                           1-  388     _adCheckTime:
     0000 0000                      1-  389     	dw	0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _count3S:
     0000 0000 0000                 1-  395     	dw	0x00, 0x00
                                    1-  399     .segment "idata"
     0000                           1-  400     _firstTime:
     0000 0000                      1-  401     	dw	0x00
                                    1-  404     ;--------------------------------------------------------
                                    1-  405     ; overlayable items in internal ram 
                                    1-  406     ;--------------------------------------------------------
                                    1-  407     ;	udata_ovr
                                    1-  408     ;--------------------------------------------------------
                                    1-  409     ; reset vector 
                                    1-  410     ;--------------------------------------------------------
                                    1-  411     ORG	0x0000
     0000 3rrr                      1-  412     	LGOTO	__nyc_ny8_startup
                                    1-  413     ;--------------------------------------------------------
                                    1-  414     ; interrupt and initialization code
                                    1-  415     ;--------------------------------------------------------
                                    1-  416     ORG 0x0008
     0008 3rrr                      1-  417     	lgoto	__sdcc_interrupt
                                    1-  419     .segment "code"
     0000                           1-  420     __sdcc_interrupt:
                                    1-  421     ;***
                                    1-  422     ;  pBlock Stats: dbName = I
                                    1-  423     ;***
                                    1-  424     ;2 compiler assigned registers:
                                    1-  425     ;   STK00
                                    1-  426     ;   STK01
                                    1-  427     ;; Starting pCode block
     0000                           1-  428     _isr:
                                    1-  429     ; 0 exit points
                                    1-  430     	.line	61, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  431     	MOVAR	WSAVE
     0001 1503                      1-  432     	SWAPR	STATUS,W
     0002 0283                      1-  433     	CLRR	STATUS
     0003 00rr                      1-  434     	MOVAR	SSAVE
     0004 010A                      1-  435     	MOVR	PCHBUF,W
     0005 028A                      1-  436     	CLRR	PCHBUF
     0006 00rr                      1-  437     	MOVAR	PSAVE
     0007 0104                      1-  438     	MOVR	FSR,W
                                    1-  439     	BANKSEL	___sdcc_saved_fsr
     0008 00rr                      1-  440     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  441     	MOVR	STK00,W
                                    1-  442     	BANKSEL	___sdcc_saved_stk00
     000A 00rr                      1-  443     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  444     	MOVR	STK01,W
                                    1-  445     	BANKSEL	___sdcc_saved_stk01
     000C 00rr                      1-  446     	MOVAR	___sdcc_saved_stk01
                                    1-  447     	.line	63, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  448     	BTRSS	_INTFbits,0
     000E 3rrr                      1-  449     	LGOTO	_00108_DS_
                                    1-  450     	.line	65, "main.c"; 	TMR0 += 56;
     000F 2138                      1-  451     	MOVIA	0x38
     0010 03rr                      1-  452     	ADDAR	_TMR0,F
                                    1-  453     	.line	66, "main.c"; 	intCount++;
                                    1-  454     	BANKSEL	_intCount
     0011 05rr                      1-  455     	INCR	_intCount,F
                                    1-  456     	.line	67, "main.c"; 	if(intCount == 100)
     0012 01rr                      1-  457     	MOVR	_intCount,W
     0013 2464                      1-  458     	XORIA	0x64
     0014 0903                      1-  459     	BTRSS	STATUS,2
     0015 3rrr                      1-  460     	LGOTO	_00108_DS_
                                    1-  461     	.line	69, "main.c"; 	intCount = 0;
     0016 02rr                      1-  462     	CLRR	_intCount
                                    1-  463     	.line	70, "main.c"; 	IntFlag = 1;
     0017 2101                      1-  464     	MOVIA	0x01
                                    1-  465     	BANKSEL	_IntFlag
     0018 00rr                      1-  466     	MOVAR	_IntFlag
     0019                           1-  467     _00108_DS_:
                                    1-  468     	.line	73, "main.c"; 	if(INTFbits.PABIF)
     0019 08rr                      1-  469     	BTRSS	_INTFbits,1
     001A 3rrr                      1-  470     	LGOTO	_00110_DS_
                                    1-  471     	.line	75, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     001B 21FD                      1-  472     	MOVIA	0xfd
     001C 00rr                      1-  473     	MOVAR	_INTF
     001D                           1-  474     _00110_DS_:
                                    1-  475     	.line	78, "main.c"; 	INTF = 0;
     001D 02rr                      1-  476     	CLRR	_INTF
                                    1-  477     	.line	80, "main.c"; 	}
                                    1-  478     	BANKSEL	___sdcc_saved_stk01
     001E 01rr                      1-  479     	MOVR	___sdcc_saved_stk01,W
     001F 00rr                      1-  480     	MOVAR	STK01
                                    1-  481     	BANKSEL	___sdcc_saved_stk00
     0020 01rr                      1-  482     	MOVR	___sdcc_saved_stk00,W
     0021 00rr                      1-  483     	MOVAR	STK00
                                    1-  484     	BANKSEL	___sdcc_saved_fsr
     0022 01rr                      1-  485     	MOVR	___sdcc_saved_fsr,W
     0023 0084                      1-  486     	MOVAR	FSR
     0024 01rr                      1-  487     	MOVR	PSAVE,W
     0025 008A                      1-  488     	MOVAR	PCHBUF
     0026 0283                      1-  489     	CLRR	STATUS
     0027 15rr                      1-  490     	SWAPR	SSAVE,W
     0028 0083                      1-  491     	MOVAR	STATUS
     0029 15rr                      1-  492     	SWAPR	WSAVE,F
     002A 15rr                      1-  493     	SWAPR	WSAVE,W
     002B                           1-  494     END_OF_INTERRUPT:
     002B 0011                      1-  495     	RETIE	
                                    1-  497     ;--------------------------------------------------------
                                    1-  498     ; code
                                    1-  499     ;--------------------------------------------------------
                                    1-  500     ;***
                                    1-  501     ;  pBlock Stats: dbName = M
                                    1-  502     ;***
                                    1-  503     ;has an exit
                                    1-  504     ;functions called:
                                    1-  505     ;   _initAD
                                    1-  506     ;   __divuint
                                    1-  507     ;   __moduint
                                    1-  508     ;   _refresh
                                    1-  509     ;   _refresh
                                    1-  510     ;   _refresh
                                    1-  511     ;   _checkBatAD
                                    1-  512     ;   _checkPWAAD
                                    1-  513     ;   _chrgCtr
                                    1-  514     ;   _keyCtr
                                    1-  515     ;   _workCtr
                                    1-  516     ;   _pwmStop
                                    1-  517     ;   _gotoSleep
                                    1-  518     ;   _initAD
                                    1-  519     ;   __divuint
                                    1-  520     ;   __moduint
                                    1-  521     ;   _refresh
                                    1-  522     ;   _refresh
                                    1-  523     ;   _refresh
                                    1-  524     ;   _checkBatAD
                                    1-  525     ;   _checkPWAAD
                                    1-  526     ;   _chrgCtr
                                    1-  527     ;   _keyCtr
                                    1-  528     ;   _workCtr
                                    1-  529     ;   _pwmStop
                                    1-  530     ;   _gotoSleep
                                    1-  531     ;5 compiler assigned registers:
                                    1-  532     ;   STK02
                                    1-  533     ;   STK01
                                    1-  534     ;   STK00
                                    1-  535     ;   r0x104E
                                    1-  536     ;   r0x104F
                                    1-  537     ;; Starting pCode block
                                    1-  538     .segment "code"; module=main, function=_main
     0000                           1-  540     _main:
                                    1-  541     ; 2 exit points
                                    1-  542     	.line	86, "main.c"; 	PORTB = 0x00;
     0000 02rr                      1-  543     	CLRR	_PORTB
                                    1-  544     	.line	87, "main.c"; 	PORTA = 0x00;
     0001 02rr                      1-  545     	CLRR	_PORTA
                                    1-  546     	.line	88, "main.c"; 	IOSTA = C_PA1_Input | C_PA2_Input | C_PA3_Input | C_PA5_Input;
     0002 212E                      1-  547     	MOVIA	0x2e
     0003 000r                      1-  548     	IOST	_IOSTA
                                    1-  549     	.line	89, "main.c"; 	IOSTB = C_PB0_Input | C_PB1_Input | C_PB4_Input;
     0004 2113                      1-  550     	MOVIA	0x13
     0005 000r                      1-  551     	IOST	_IOSTB
                                    1-  552     	.line	90, "main.c"; 	ABPLCON = 0xDF;		//PB1下拉
     0006 21DF                      1-  553     	MOVIA	0xdf
     0007 00rr                      1-  554     	MOVAR	_ABPLCON
                                    1-  555     	.line	91, "main.c"; 	BPHCON = 0xFE;		//PB0上拉
     0008 21FE                      1-  556     	MOVIA	0xfe
     0009 00rr                      1-  557     	MOVAR	_BPHCON
                                    1-  558     	.line	92, "main.c"; 	APHCON = 0xF7;		//PA3上拉
     000A 21F7                      1-  559     	MOVIA	0xf7
     000B 000r                      1-  560     	IOST	_APHCON
                                    1-  561     	.line	93, "main.c"; 	PORTB = 0x00;
     000C 02rr                      1-  562     	CLRR	_PORTB
                                    1-  563     	.line	94, "main.c"; 	PORTA = 0x00;
     000D 02rr                      1-  564     	CLRR	_PORTA
                                    1-  565     	.line	95, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     000E 21A8                      1-  566     	MOVIA	0xa8
     000F 00rr                      1-  567     	MOVAR	_PCON
                                    1-  568     	.line	96, "main.c"; 	PCON &= 0xEF;		//PA5上拉
     0010 1Err                      1-  569     	BCR	_PCON,4
                                    1-  570     	.line	97, "main.c"; 	PCON1 = C_TMR0_Dis;
     0011 0200                      1-  571     	CLRA	
     0012 000r                      1-  572     	IOST	_PCON1
                                    1-  573     	.line	99, "main.c"; 	TMR0 = 55;
     0013 2137                      1-  574     	MOVIA	0x37
     0014 00rr                      1-  575     	MOVAR	_TMR0
                                    1-  576     	.line	100, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0015 0200                      1-  577     	CLRA	
     0016 0003                      1-  578     	T0MD	
                                    1-  579     	.line	101, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     0017 2103                      1-  580     	MOVIA	0x03
     0018 00rr                      1-  581     	MOVAR	_INTE
                                    1-  582     	.line	102, "main.c"; 	PCON1 = C_TMR0_En;
     0019 2101                      1-  583     	MOVIA	0x01
     001A 000r                      1-  584     	IOST	_PCON1
                                    1-  585     	.line	103, "main.c"; 	ENI();
     001B 0004                      1-  586     	ENI
                                    1-  587     	.line	104, "main.c"; 	initAD();
     001C 2rrr                      1-  588     	LCALL	_initAD
     001D                           1-  589     _00151_DS_:
                                    1-  590     	.line	107, "main.c"; 	CLRWDT();			//Clear WDT, this function is defined in ny8command.h
     001D 0002                      1-  591     	clrwdt
                                    1-  592     	.line	109, "main.c"; 	if(chrgStep)
                                    1-  593     	BANKSEL	_chrgStep
     001E 01rr                      1-  594     	MOVR	_chrgStep,W
     001F 0D03                      1-  595     	BTRSC	STATUS,2
     0020 3rrr                      1-  596     	LGOTO	_00127_DS_
                                    1-  597     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  598     ;;unsigned compare: left >= lit (0x15=21), size=1
                                    1-  599     	.line	111, "main.c"; 	if(adCheckTime > 20)
     0021 2115                      1-  600     	MOVIA	0x15
                                    1-  601     	BANKSEL	_adCheckTime
     0022 04rr                      1-  602     	SUBAR	_adCheckTime,W
     0023 0803                      1-  603     	BTRSS	STATUS,0
     0024 3rrr                      1-  604     	LGOTO	_00119_DS_
                                    1-  605     ;;unsigned compare: left < lit (0x64=100), size=2
                                    1-  606     	.line	113, "main.c"; 	if(batValue < 100)
     0025 2100                      1-  607     	MOVIA	0x00
                                    1-  608     	BANKSEL	_batValue
     0026 04rr                      1-  609     	SUBAR	(_batValue + 1),W
     0027 0903                      1-  610     	BTRSS	STATUS,2
     0028 3rrr                      1-  611     	LGOTO	_00204_DS_
     0029 2164                      1-  612     	MOVIA	0x64
     002A 04rr                      1-  613     	SUBAR	_batValue,W
     002B                           1-  614     _00204_DS_:
     002B 0C03                      1-  615     	BTRSC	STATUS,0
     002C 3rrr                      1-  616     	LGOTO	_00116_DS_
                                    1-  617     	.line	115, "main.c"; 	shiwei = batValue/10;
     002D 210A                      1-  618     	MOVIA	0x0a
     002E 00rr                      1-  619     	MOVAR	STK02
     002F 2100                      1-  620     	MOVIA	0x00
     0030 00rr                      1-  621     	MOVAR	STK01
                                    1-  622     	BANKSEL	_batValue
     0031 01rr                      1-  623     	MOVR	_batValue,W
     0032 00rr                      1-  624     	MOVAR	STK00
     0033 01rr                      1-  625     	MOVR	(_batValue + 1),W
     0034 2rrr                      1-  626     	LCALL	__divuint
                                    1-  627     	BANKSEL	r0x104E
     0035 00rr                      1-  628     	MOVAR	r0x104E
     0036 01rr                      1-  629     	MOVR	STK00,W
                                    1-  630     	BANKSEL	r0x104F
     0037 00rr                      1-  631     	MOVAR	r0x104F
                                    1-  632     	BANKSEL	_shiwei
     0038 00rr                      1-  633     	MOVAR	_shiwei
                                    1-  634     	.line	116, "main.c"; 	gewei = batValue%10;
     0039 210A                      1-  635     	MOVIA	0x0a
     003A 00rr                      1-  636     	MOVAR	STK02
     003B 2100                      1-  637     	MOVIA	0x00
     003C 00rr                      1-  638     	MOVAR	STK01
                                    1-  639     	BANKSEL	_batValue
     003D 01rr                      1-  640     	MOVR	_batValue,W
     003E 00rr                      1-  641     	MOVAR	STK00
     003F 01rr                      1-  642     	MOVR	(_batValue + 1),W
     0040 2rrr                      1-  643     	LCALL	__moduint
                                    1-  644     	BANKSEL	r0x104E
     0041 00rr                      1-  645     	MOVAR	r0x104E
     0042 01rr                      1-  646     	MOVR	STK00,W
                                    1-  647     	BANKSEL	r0x104F
     0043 00rr                      1-  648     	MOVAR	r0x104F
                                    1-  649     	BANKSEL	_gewei
     0044 00rr                      1-  650     	MOVAR	_gewei
     0045 3rrr                      1-  651     	LGOTO	_00119_DS_
     0046                           1-  652     _00116_DS_:
                                    1-  653     	.line	120, "main.c"; 	shiwei = gewei = 10;
     0046 210A                      1-  654     	MOVIA	0x0a
                                    1-  655     	BANKSEL	_gewei
     0047 00rr                      1-  656     	MOVAR	_gewei
                                    1-  657     	BANKSEL	_shiwei
     0048 00rr                      1-  658     	MOVAR	_shiwei
     0049                           1-  659     _00119_DS_:
                                    1-  660     	.line	123, "main.c"; 	refresh();
     0049 2rrr                      1-  661     	LCALL	_refresh
     004A 3rrr                      1-  662     	LGOTO	_00128_DS_
     004B                           1-  663     _00127_DS_:
                                    1-  664     	.line	125, "main.c"; 	else if(workStep)
                                    1-  665     	BANKSEL	_workStep
     004B 01rr                      1-  666     	MOVR	_workStep,W
     004C 0D03                      1-  667     	BTRSC	STATUS,2
     004D 3rrr                      1-  668     	LGOTO	_00124_DS_
                                    1-  669     	.line	127, "main.c"; 	shiwei = 0;
                                    1-  670     	BANKSEL	_shiwei
     004E 02rr                      1-  671     	CLRR	_shiwei
                                    1-  672     	.line	128, "main.c"; 	gewei = workStep;
                                    1-  673     	BANKSEL	_workStep
     004F 01rr                      1-  674     	MOVR	_workStep,W
                                    1-  675     	BANKSEL	_gewei
     0050 00rr                      1-  676     	MOVAR	_gewei
                                    1-  677     	.line	129, "main.c"; 	refresh();
     0051 2rrr                      1-  678     	LCALL	_refresh
     0052 3rrr                      1-  679     	LGOTO	_00128_DS_
     0053                           1-  680     _00124_DS_:
                                    1-  681     	.line	133, "main.c"; 	if(firstTime == 0)
                                    1-  682     	BANKSEL	_firstTime
     0053 01rr                      1-  683     	MOVR	_firstTime,W
     0054 0903                      1-  684     	BTRSS	STATUS,2
     0055 3rrr                      1-  685     	LGOTO	_00121_DS_
                                    1-  686     	.line	135, "main.c"; 	shiwei = gewei = 8;
     0056 2108                      1-  687     	MOVIA	0x08
                                    1-  688     	BANKSEL	_gewei
     0057 00rr                      1-  689     	MOVAR	_gewei
                                    1-  690     	BANKSEL	_shiwei
     0058 00rr                      1-  691     	MOVAR	_shiwei
                                    1-  692     	.line	136, "main.c"; 	refresh();
     0059 2rrr                      1-  693     	LCALL	_refresh
     005A 3rrr                      1-  694     	LGOTO	_00128_DS_
     005B                           1-  695     _00121_DS_:
                                    1-  696     	.line	140, "main.c"; 	COM1 = 1;
     005B 1Arr                      1-  697     	BSR	_PORTB,5
                                    1-  698     	.line	141, "main.c"; 	COM2 = 1;
     005C 19rr                      1-  699     	BSR	_PORTB,3
     005D                           1-  700     _00128_DS_:
                                    1-  701     	.line	144, "main.c"; 	if(!IntFlag)
                                    1-  702     	BANKSEL	_IntFlag
     005D 01rr                      1-  703     	MOVR	_IntFlag,W
     005E 0D03                      1-  704     	BTRSC	STATUS,2
     005F 3rrr                      1-  705     	LGOTO	_00151_DS_
                                    1-  706     	.line	146, "main.c"; 	if(++adCheckTime >= 40)
                                    1-  707     	BANKSEL	_adCheckTime
     0060 05rr                      1-  708     	INCR	_adCheckTime,F
                                    1-  709     ;;unsigned compare: left < lit (0x28=40), size=1
     0061 2128                      1-  710     	MOVIA	0x28
     0062 04rr                      1-  711     	SUBAR	_adCheckTime,W
     0063 0C03                      1-  712     	BTRSC	STATUS,0
                                    1-  713     	.line	147, "main.c"; 	adCheckTime = 0;
     0064 02rr                      1-  714     	CLRR	_adCheckTime
                                    1-  715     	.line	148, "main.c"; 	if(adCheckTime < 20)
     0065 2114                      1-  716     	MOVIA	0x14
     0066 04rr                      1-  717     	SUBAR	_adCheckTime,W
     0067 0C03                      1-  718     	BTRSC	STATUS,0
     0068 3rrr                      1-  719     	LGOTO	_00134_DS_
                                    1-  720     	.line	149, "main.c"; 	checkBatAD();
     0069 2rrr                      1-  721     	LCALL	_checkBatAD
     006A 3rrr                      1-  722     	LGOTO	_00135_DS_
     006B                           1-  723     _00134_DS_:
                                    1-  724     	.line	151, "main.c"; 	checkPWAAD();
     006B 2rrr                      1-  725     	LCALL	_checkPWAAD
     006C                           1-  726     _00135_DS_:
                                    1-  727     	.line	152, "main.c"; 	IntFlag = 0;
                                    1-  728     	BANKSEL	_IntFlag
     006C 02rr                      1-  729     	CLRR	_IntFlag
                                    1-  730     	.line	153, "main.c"; 	chrgCtr();
     006D 2rrr                      1-  731     	LCALL	_chrgCtr
                                    1-  732     	.line	154, "main.c"; 	keyCtr();
     006E 2rrr                      1-  733     	LCALL	_keyCtr
                                    1-  734     	.line	155, "main.c"; 	if(workStep)
                                    1-  735     	BANKSEL	_workStep
     006F 01rr                      1-  736     	MOVR	_workStep,W
     0070 0D03                      1-  737     	BTRSC	STATUS,2
     0071 3rrr                      1-  738     	LGOTO	_00148_DS_
                                    1-  739     	.line	156, "main.c"; 	workCtr();
     0072 2rrr                      1-  740     	LCALL	_workCtr
     0073 3rrr                      1-  741     	LGOTO	_00151_DS_
     0074                           1-  742     _00148_DS_:
                                    1-  743     	.line	159, "main.c"; 	if(keyCount == 0)
                                    1-  744     	BANKSEL	_keyCount
     0074 01rr                      1-  745     	MOVR	_keyCount,W
     0075 0D03                      1-  746     	BTRSC	STATUS,2
                                    1-  747     	.line	160, "main.c"; 	pwmStop();
     0076 2rrr                      1-  748     	LCALL	_pwmStop
                                    1-  749     	.line	162, "main.c"; 	if(chrgStep == 0 && keyCount == 0 && (++sleepTime >= 100))
                                    1-  750     	BANKSEL	_chrgStep
     0077 01rr                      1-  751     	MOVR	_chrgStep,W
     0078 0903                      1-  752     	BTRSS	STATUS,2
     0079 3rrr                      1-  753     	LGOTO	_00143_DS_
                                    1-  754     	BANKSEL	_keyCount
     007A 01rr                      1-  755     	MOVR	_keyCount,W
     007B 0903                      1-  756     	BTRSS	STATUS,2
     007C 3rrr                      1-  757     	LGOTO	_00143_DS_
                                    1-  758     	BANKSEL	_sleepTime
     007D 05rr                      1-  759     	INCR	_sleepTime,F
                                    1-  760     ;;unsigned compare: left < lit (0x64=100), size=1
     007E 2164                      1-  761     	MOVIA	0x64
     007F 04rr                      1-  762     	SUBAR	_sleepTime,W
     0080 0803                      1-  763     	BTRSS	STATUS,0
     0081 3rrr                      1-  764     	LGOTO	_00143_DS_
                                    1-  765     	.line	163, "main.c"; 	gotoSleep();
     0082 2rrr                      1-  766     	LCALL	_gotoSleep
     0083 3rrr                      1-  767     	LGOTO	_00151_DS_
     0084                           1-  768     _00143_DS_:
                                    1-  769     	.line	164, "main.c"; 	else if(chrgStep == 0 && firstTime == 0)
                                    1-  770     	BANKSEL	_chrgStep
     0084 01rr                      1-  771     	MOVR	_chrgStep,W
     0085 0903                      1-  772     	BTRSS	STATUS,2
     0086 3rrr                      1-  773     	LGOTO	_00139_DS_
                                    1-  774     	BANKSEL	_firstTime
     0087 01rr                      1-  775     	MOVR	_firstTime,W
     0088 0903                      1-  776     	BTRSS	STATUS,2
     0089 3rrr                      1-  777     	LGOTO	_00139_DS_
                                    1-  778     	.line	166, "main.c"; 	LEDHON();
     008A 1Arr                      1-  779     	BSR	_PORTA,4
                                    1-  780     	.line	167, "main.c"; 	LEDLON();
     008B 18rr                      1-  781     	BSR	_PORTA,0
     008C 3rrr                      1-  782     	LGOTO	_00151_DS_
     008D                           1-  783     _00139_DS_:
                                    1-  784     	.line	171, "main.c"; 	LEDHOFF();
     008D 1Err                      1-  785     	BCR	_PORTA,4
                                    1-  786     	.line	172, "main.c"; 	LEDLOFF();
     008E 1Crr                      1-  787     	BCR	_PORTA,0
     008F 3rrr                      1-  788     	LGOTO	_00151_DS_
                                    1-  789     	.line	177, "main.c"; 	}
                                    1-  790     	RETURN	
     0090 0010                      3-   26 m1      ret
                                    1-  791     ; exit point of _main
                                    1-  793     ;***
                                    1-  794     ;  pBlock Stats: dbName = C
                                    1-  795     ;***
                                    1-  796     ;has an exit
                                    1-  797     ;functions called:
                                    1-  798     ;   _pwmInit
                                    1-  799     ;   __mulchar
                                    1-  800     ;   __moduint
                                    1-  801     ;   _pwmInit
                                    1-  802     ;   __mulchar
                                    1-  803     ;   __moduint
                                    1-  804     ;5 compiler assigned registers:
                                    1-  805     ;   STK00
                                    1-  806     ;   r0x1029
                                    1-  807     ;   STK02
                                    1-  808     ;   STK01
                                    1-  809     ;   r0x102A
                                    1-  810     ;; Starting pCode block
                                    1-  811     .segment "code"; module=main, function=_workCtr
     0000                           1-  813     _workCtr:
                                    1-  814     ; 2 exit points
                                    1-  815     	.line	501, "main.c"; 	pwmInit();
     0000 2rrr                      1-  816     	LCALL	_pwmInit
                                    1-  817     ;;unsigned compare: left < lit (0xA=10), size=2
                                    1-  818     	.line	503, "main.c"; 	if(R_AIN2_DATA >= 10)
     0001 2100                      1-  819     	MOVIA	0x00
                                    1-  820     	BANKSEL	_R_AIN2_DATA
     0002 04rr                      1-  821     	SUBAR	(_R_AIN2_DATA + 1),W
     0003 0903                      1-  822     	BTRSS	STATUS,2
     0004 3rrr                      1-  823     	LGOTO	_00443_DS_
     0005 210A                      1-  824     	MOVIA	0x0a
     0006 04rr                      1-  825     	SUBAR	_R_AIN2_DATA,W
     0007                           1-  826     _00443_DS_:
     0007 0803                      1-  827     	BTRSS	STATUS,0
     0008 3rrr                      1-  828     	LGOTO	_00398_DS_
                                    1-  829     ;;unsigned compare: left < lit (0x9=9), size=1
                                    1-  830     	.line	505, "main.c"; 	if(workStep < 9)
     0009 2109                      1-  831     	MOVIA	0x09
                                    1-  832     	BANKSEL	_workStep
     000A 04rr                      1-  833     	SUBAR	_workStep,W
     000B 0C03                      1-  834     	BTRSC	STATUS,0
     000C 3rrr                      1-  835     	LGOTO	_00395_DS_
                                    1-  836     	.line	507, "main.c"; 	maxDuty = 70 + workStep*2;
     000D 2102                      1-  837     	MOVIA	0x02
     000E 00rr                      1-  838     	MOVAR	STK00
     000F 01rr                      1-  839     	MOVR	_workStep,W
     0010 2rrr                      1-  840     	LCALL	__mulchar
                                    1-  841     	BANKSEL	r0x1029
     0011 00rr                      1-  842     	MOVAR	r0x1029
     0012 2146                      1-  843     	MOVIA	0x46
     0013 03rr                      1-  844     	ADDAR	r0x1029,W
                                    1-  845     	BANKSEL	_maxDuty
     0014 00rr                      1-  846     	MOVAR	_maxDuty
                                    1-  847     	.line	508, "main.c"; 	if(workStep == 1)
                                    1-  848     	BANKSEL	_workStep
     0015 01rr                      1-  849     	MOVR	_workStep,W
     0016 2401                      1-  850     	XORIA	0x01
     0017 0903                      1-  851     	BTRSS	STATUS,2
     0018 3rrr                      1-  852     	LGOTO	_00378_DS_
                                    1-  853     	.line	509, "main.c"; 	maxDuty = 70;
     0019 2146                      1-  854     	MOVIA	0x46
                                    1-  855     	BANKSEL	_maxDuty
     001A 00rr                      1-  856     	MOVAR	_maxDuty
     001B 3rrr                      1-  857     	LGOTO	_00379_DS_
     001C                           1-  858     _00378_DS_:
                                    1-  859     	.line	510, "main.c"; 	else if(workStep == 8)
                                    1-  860     	BANKSEL	_workStep
     001C 01rr                      1-  861     	MOVR	_workStep,W
     001D 2408                      1-  862     	XORIA	0x08
     001E 0903                      1-  863     	BTRSS	STATUS,2
     001F 3rrr                      1-  864     	LGOTO	_00379_DS_
                                    1-  865     	.line	511, "main.c"; 	maxDuty = 87;
     0020 2157                      1-  866     	MOVIA	0x57
                                    1-  867     	BANKSEL	_maxDuty
     0021 00rr                      1-  868     	MOVAR	_maxDuty
     0022                           1-  869     _00379_DS_:
                                    1-  870     	.line	512, "main.c"; 	if(duty < maxDuty)
                                    1-  871     	BANKSEL	_maxDuty
     0022 01rr                      1-  872     	MOVR	_maxDuty,W
                                    1-  873     	BANKSEL	_duty
     0023 04rr                      1-  874     	SUBAR	_duty,W
     0024 0C03                      1-  875     	BTRSC	STATUS,0
     0025 3rrr                      1-  876     	LGOTO	_00381_DS_
                                    1-  877     	.line	513, "main.c"; 	duty++;
     0026 05rr                      1-  878     	INCR	_duty,F
     0027 3rrr                      1-  879     	LGOTO	_00399_DS_
     0028                           1-  880     _00381_DS_:
                                    1-  881     	.line	515, "main.c"; 	duty = maxDuty;
                                    1-  882     	BANKSEL	_maxDuty
     0028 01rr                      1-  883     	MOVR	_maxDuty,W
                                    1-  884     	BANKSEL	_duty
     0029 00rr                      1-  885     	MOVAR	_duty
     002A 3rrr                      1-  886     	LGOTO	_00399_DS_
     002B                           1-  887     _00395_DS_:
                                    1-  888     	.line	520, "main.c"; 	if(++count3S >= 300)
                                    1-  889     	BANKSEL	_count3S
     002B 05rr                      1-  890     	INCR	_count3S,F
     002C 0D03                      1-  891     	BTRSC	STATUS,2
     002D 05rr                      1-  892     	INCR	(_count3S + 1),F
                                    1-  893     ;;unsigned compare: left < lit (0x12C=300), size=2
     002E 2101                      1-  894     	MOVIA	0x01
     002F 04rr                      1-  895     	SUBAR	(_count3S + 1),W
     0030 0903                      1-  896     	BTRSS	STATUS,2
     0031 3rrr                      1-  897     	LGOTO	_00446_DS_
     0032 212C                      1-  898     	MOVIA	0x2c
     0033 04rr                      1-  899     	SUBAR	_count3S,W
     0034                           1-  900     _00446_DS_:
     0034 0803                      1-  901     	BTRSS	STATUS,0
     0035 3rrr                      1-  902     	LGOTO	_00384_DS_
                                    1-  903     	.line	522, "main.c"; 	count3S = 0;
                                    1-  904     	BANKSEL	_count3S
     0036 02rr                      1-  905     	CLRR	_count3S
     0037 02rr                      1-  906     	CLRR	(_count3S + 1)
                                    1-  907     	.line	523, "main.c"; 	duty = 70;
     0038 2146                      1-  908     	MOVIA	0x46
                                    1-  909     	BANKSEL	_duty
     0039 00rr                      1-  910     	MOVAR	_duty
     003A                           1-  911     _00384_DS_:
                                    1-  912     	.line	525, "main.c"; 	if(count3S % 9 == 0)
     003A 2109                      1-  913     	MOVIA	0x09
     003B 00rr                      1-  914     	MOVAR	STK02
     003C 2100                      1-  915     	MOVIA	0x00
     003D 00rr                      1-  916     	MOVAR	STK01
                                    1-  917     	BANKSEL	_count3S
     003E 01rr                      1-  918     	MOVR	_count3S,W
     003F 00rr                      1-  919     	MOVAR	STK00
     0040 01rr                      1-  920     	MOVR	(_count3S + 1),W
     0041 2rrr                      1-  921     	LCALL	__moduint
                                    1-  922     	BANKSEL	r0x102A
     0042 00rr                      1-  923     	MOVAR	r0x102A
     0043 01rr                      1-  924     	MOVR	STK00,W
                                    1-  925     	BANKSEL	r0x1029
     0044 00rr                      1-  926     	MOVAR	r0x1029
                                    1-  927     	BANKSEL	r0x102A
     0045 11rr                      1-  928     	IORAR	r0x102A,W
     0046 0903                      1-  929     	BTRSS	STATUS,2
     0047 3rrr                      1-  930     	LGOTO	_00399_DS_
                                    1-  931     ;;unsigned compare: left < lit (0x96=150), size=2
                                    1-  932     	.line	527, "main.c"; 	if(count3S < 150)
     0048 2100                      1-  933     	MOVIA	0x00
                                    1-  934     	BANKSEL	_count3S
     0049 04rr                      1-  935     	SUBAR	(_count3S + 1),W
     004A 0903                      1-  936     	BTRSS	STATUS,2
     004B 3rrr                      1-  937     	LGOTO	_00447_DS_
     004C 2196                      1-  938     	MOVIA	0x96
     004D 04rr                      1-  939     	SUBAR	_count3S,W
     004E                           1-  940     _00447_DS_:
     004E 0C03                      1-  941     	BTRSC	STATUS,0
     004F 3rrr                      1-  942     	LGOTO	_00390_DS_
                                    1-  943     	.line	529, "main.c"; 	if(++duty > 86)
                                    1-  944     	BANKSEL	_duty
     0050 05rr                      1-  945     	INCR	_duty,F
                                    1-  946     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  947     ;;unsigned compare: left >= lit (0x57=87), size=1
     0051 2157                      1-  948     	MOVIA	0x57
     0052 04rr                      1-  949     	SUBAR	_duty,W
     0053 0803                      1-  950     	BTRSS	STATUS,0
     0054 3rrr                      1-  951     	LGOTO	_00399_DS_
                                    1-  952     	.line	530, "main.c"; 	duty = 87;
     0055 2157                      1-  953     	MOVIA	0x57
     0056 00rr                      1-  954     	MOVAR	_duty
     0057 3rrr                      1-  955     	LGOTO	_00399_DS_
     0058                           1-  956     _00390_DS_:
                                    1-  957     	.line	534, "main.c"; 	if(--duty < 70)
                                    1-  958     	BANKSEL	_duty
     0058 06rr                      1-  959     	DECR	_duty,F
                                    1-  960     ;;unsigned compare: left < lit (0x46=70), size=1
     0059 2146                      1-  961     	MOVIA	0x46
     005A 04rr                      1-  962     	SUBAR	_duty,W
     005B 0C03                      1-  963     	BTRSC	STATUS,0
     005C 3rrr                      1-  964     	LGOTO	_00399_DS_
                                    1-  965     	.line	535, "main.c"; 	duty = 70;
     005D 2146                      1-  966     	MOVIA	0x46
     005E 00rr                      1-  967     	MOVAR	_duty
     005F 3rrr                      1-  968     	LGOTO	_00399_DS_
     0060                           1-  969     _00398_DS_:
                                    1-  970     	.line	543, "main.c"; 	duty = 70;
     0060 2146                      1-  971     	MOVIA	0x46
                                    1-  972     	BANKSEL	_duty
     0061 00rr                      1-  973     	MOVAR	_duty
     0062                           1-  974     _00399_DS_:
                                    1-  975     	.line	545, "main.c"; 	TMRH = 0x00;
     0062 02rr                      1-  976     	CLRR	_TMRH
                                    1-  977     	.line	546, "main.c"; 	PWM2DUTY = duty;
                                    1-  978     	BANKSEL	_duty
     0063 01rr                      1-  979     	MOVR	_duty,W
     0064 00rr                      1-  980     	SFUN	_PWM2DUTY
                                    1-  981     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  982     ;;unsigned compare: left >= lit (0xC=12), size=2
                                    1-  983     	.line	547, "main.c"; 	if(batValue > 11)
     0065 2100                      1-  984     	MOVIA	0x00
                                    1-  985     	BANKSEL	_batValue
     0066 04rr                      1-  986     	SUBAR	(_batValue + 1),W
     0067 0903                      1-  987     	BTRSS	STATUS,2
     0068 3rrr                      1-  988     	LGOTO	_00450_DS_
     0069 210C                      1-  989     	MOVIA	0x0c
     006A 04rr                      1-  990     	SUBAR	_batValue,W
     006B                           1-  991     _00450_DS_:
     006B 0803                      1-  992     	BTRSS	STATUS,0
     006C 3rrr                      1-  993     	LGOTO	_00403_DS_
                                    1-  994     	.line	549, "main.c"; 	LEDHON();
     006D 1Arr                      1-  995     	BSR	_PORTA,4
                                    1-  996     	.line	550, "main.c"; 	LEDLOFF();
     006E 1Crr                      1-  997     	BCR	_PORTA,0
     006F 3rrr                      1-  998     	LGOTO	_00405_DS_
                                    1-  999     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1000     ;;unsigned compare: left >= lit (0xB=11), size=2
     0070                           1- 1001     _00403_DS_:
                                    1- 1002     	.line	552, "main.c"; 	else if(batValue <= 10)
     0070 2100                      1- 1003     	MOVIA	0x00
                                    1- 1004     	BANKSEL	_batValue
     0071 04rr                      1- 1005     	SUBAR	(_batValue + 1),W
     0072 0903                      1- 1006     	BTRSS	STATUS,2
     0073 3rrr                      1- 1007     	LGOTO	_00451_DS_
     0074 210B                      1- 1008     	MOVIA	0x0b
     0075 04rr                      1- 1009     	SUBAR	_batValue,W
     0076                           1- 1010     _00451_DS_:
     0076 0C03                      1- 1011     	BTRSC	STATUS,0
     0077 3rrr                      1- 1012     	LGOTO	_00405_DS_
                                    1- 1013     	.line	554, "main.c"; 	LEDHOFF();
     0078 1Err                      1- 1014     	BCR	_PORTA,4
                                    1- 1015     	.line	555, "main.c"; 	LEDLON();
     0079 18rr                      1- 1016     	BSR	_PORTA,0
     007A                           1- 1017     _00405_DS_:
                                    1- 1018     	.line	558, "main.c"; 	}
                                    1- 1019     	RETURN	
     007A 0010                      3-   26 m1      ret
                                    1- 1020     ; exit point of _workCtr
                                    1- 1022     ;***
                                    1- 1023     ;  pBlock Stats: dbName = C
                                    1- 1024     ;***
                                    1- 1025     ;has an exit
                                    1- 1026     ;; Starting pCode block
                                    1- 1027     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1029     _pwmStop:
                                    1- 1030     ; 2 exit points
                                    1- 1031     	.line	496, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 1032     	CLRA	
     0001 00rr                      1- 1033     	SFUN	_T2CR1
                                    1- 1034     	.line	497, "main.c"; 	}
                                    1- 1035     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1036     ; exit point of _pwmStop
                                    1- 1038     ;***
                                    1- 1039     ;  pBlock Stats: dbName = C
                                    1- 1040     ;***
                                    1- 1041     ;has an exit
                                    1- 1042     ;1 compiler assigned register :
                                    1- 1043     ;   r0x1028
                                    1- 1044     ;; Starting pCode block
                                    1- 1045     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1047     _pwmInit:
                                    1- 1048     ; 2 exit points
                                    1- 1049     	.line	484, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1050     	SFUNR	_T2CR1
                                    1- 1051     	BANKSEL	r0x1028
     0001 00rr                      1- 1052     	MOVAR	r0x1028
     0002 0Frr                      1- 1053     	BTRSC	r0x1028,7
                                    1- 1054     	.line	485, "main.c"; 	return;
     0003 3rrr                      1- 1055     	LGOTO	_00366_DS_
                                    1- 1056     	.line	486, "main.c"; 	TMRH = 0x00;
     0004 02rr                      1- 1057     	CLRR	_TMRH
                                    1- 1058     	.line	487, "main.c"; 	TMR2 = 88;							
     0005 2158                      1- 1059     	MOVIA	0x58
     0006 00rr                      1- 1060     	SFUN	_TMR2
                                    1- 1061     	.line	490, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0007 0200                      1- 1062     	CLRA	
     0008 00rr                      1- 1063     	SFUN	_T2CR2
                                    1- 1064     	.line	491, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     0009 2183                      1- 1065     	MOVIA	0x83
     000A 00rr                      1- 1066     	SFUN	_T2CR1
     000B                           1- 1067     _00366_DS_:
                                    1- 1068     	.line	492, "main.c"; 	}
                                    1- 1069     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 1070     ; exit point of _pwmInit
                                    1- 1072     ;***
                                    1- 1073     ;  pBlock Stats: dbName = C
                                    1- 1074     ;***
                                    1- 1075     ;has an exit
                                    1- 1076     ;1 compiler assigned register :
                                    1- 1077     ;   r0x102B
                                    1- 1078     ;; Starting pCode block
                                    1- 1079     .segment "code"; module=main, function=_delay_us
     0000                           1- 1081     _delay_us:
                                    1- 1082     ; 2 exit points
                                    1- 1083     	.line	473, "main.c"; 	void delay_us(uint8_t time)
                                    1- 1084     	BANKSEL	r0x102B
     0000 00rr                      1- 1085     	MOVAR	r0x102B
     0001                           1- 1086     _00356_DS_:
                                    1- 1087     	.line	475, "main.c"; 	while(time)
                                    1- 1088     	BANKSEL	r0x102B
     0001 01rr                      1- 1089     	MOVR	r0x102B,W
     0002 0D03                      1- 1090     	BTRSC	STATUS,2
     0003 3rrr                      1- 1091     	LGOTO	_00359_DS_
                                    1- 1092     	.line	477, "main.c"; 	--time;
     0004 06rr                      1- 1093     	DECR	r0x102B,F
                                    1- 1094     	.line	478, "main.c"; 	NOP();
     0005 0000                      1- 1095     	nop
     0006 3rrr                      1- 1096     	LGOTO	_00356_DS_
     0007                           1- 1097     _00359_DS_:
                                    1- 1098     	.line	480, "main.c"; 	}
                                    1- 1099     	RETURN	
     0007 0010                      3-   26 m1      ret
                                    1- 1100     ; exit point of _delay_us
                                    1- 1102     ;***
                                    1- 1103     ;  pBlock Stats: dbName = C
                                    1- 1104     ;***
                                    1- 1105     ;has an exit
                                    1- 1106     ;; Starting pCode block
                                    1- 1107     .segment "code"; module=main, function=_Delay10Us
     0000                           1- 1109     _Delay10Us:
                                    1- 1110     ; 2 exit points
                                    1- 1111     	.line	465, "main.c"; 	NOP();
     0000 0000                      1- 1112     	nop
                                    1- 1113     	.line	466, "main.c"; 	NOP();
     0001 0000                      1- 1114     	nop
                                    1- 1115     	.line	467, "main.c"; 	NOP();
     0002 0000                      1- 1116     	nop
                                    1- 1117     	.line	468, "main.c"; 	NOP();
     0003 0000                      1- 1118     	nop
                                    1- 1119     	.line	469, "main.c"; 	NOP();
     0004 0000                      1- 1120     	nop
                                    1- 1121     	.line	470, "main.c"; 	NOP();
     0005 0000                      1- 1122     	nop
                                    1- 1123     	.line	471, "main.c"; 	}
                                    1- 1124     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1- 1125     ; exit point of _Delay10Us
                                    1- 1127     ;***
                                    1- 1128     ;  pBlock Stats: dbName = C
                                    1- 1129     ;***
                                    1- 1130     ;has an exit
                                    1- 1131     ;; Starting pCode block
                                    1- 1132     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1134     _gotoSleep:
                                    1- 1135     ; 2 exit points
                                    1- 1136     	.line	435, "main.c"; 	COM1 = 1;
     0000 1Arr                      1- 1137     	BSR	_PORTB,5
                                    1- 1138     	.line	436, "main.c"; 	COM2 = 1;
     0001 19rr                      1- 1139     	BSR	_PORTB,3
                                    1- 1140     	.line	437, "main.c"; 	shiwei = gewei = 8;
     0002 2108                      1- 1141     	MOVIA	0x08
                                    1- 1142     	BANKSEL	_gewei
     0003 00rr                      1- 1143     	MOVAR	_gewei
                                    1- 1144     	BANKSEL	_shiwei
     0004 00rr                      1- 1145     	MOVAR	_shiwei
                                    1- 1146     	.line	438, "main.c"; 	workStep = 0;
                                    1- 1147     	BANKSEL	_workStep
     0005 02rr                      1- 1148     	CLRR	_workStep
                                    1- 1149     	.line	439, "main.c"; 	firstTime = 1;
     0006 2101                      1- 1150     	MOVIA	0x01
                                    1- 1151     	BANKSEL	_firstTime
     0007 00rr                      1- 1152     	MOVAR	_firstTime
                                    1- 1153     	.line	440, "main.c"; 	AWUCON = 0x20;
     0008 2120                      1- 1154     	MOVIA	0x20
     0009 00rr                      1- 1155     	MOVAR	_AWUCON
                                    1- 1156     	.line	441, "main.c"; 	BWUCON = 0x02;
     000A 2102                      1- 1157     	MOVIA	0x02
     000B 00rr                      1- 1158     	MOVAR	_BWUCON
                                    1- 1159     	.line	442, "main.c"; 	LEDHOFF();
     000C 1Err                      1- 1160     	BCR	_PORTA,4
                                    1- 1161     	.line	443, "main.c"; 	LEDLOFF();
     000D 1Crr                      1- 1162     	BCR	_PORTA,0
                                    1- 1163     	.line	444, "main.c"; 	sleepTime = 0;
                                    1- 1164     	BANKSEL	_sleepTime
     000E 02rr                      1- 1165     	CLRR	_sleepTime
                                    1- 1166     	.line	445, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     000F 2103                      1- 1167     	MOVIA	0x03
     0010 00rr                      1- 1168     	MOVAR	_INTE
                                    1- 1169     	.line	446, "main.c"; 	PCON =  C_LVR_En;	
     0011 2108                      1- 1170     	MOVIA	0x08
     0012 00rr                      1- 1171     	MOVAR	_PCON
                                    1- 1172     	.line	447, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0013 02rr                      1- 1173     	CLRR	_INTF
                                    1- 1174     	.line	448, "main.c"; 	CLRWDT();
     0014 0002                      1- 1175     	clrwdt
                                    1- 1176     	.line	449, "main.c"; 	ENI();
     0015 0004                      1- 1177     	ENI
                                    1- 1178     	.line	450, "main.c"; 	SLEEP();
     0016 0001                      1- 1179     	sleep
                                    1- 1180     	.line	451, "main.c"; 	AWUCON = 0x00;
     0017 02rr                      1- 1181     	CLRR	_AWUCON
                                    1- 1182     	.line	452, "main.c"; 	BWUCON = 0x00;
     0018 02rr                      1- 1183     	CLRR	_BWUCON
                                    1- 1184     	.line	453, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     0019 2103                      1- 1185     	MOVIA	0x03
     001A 00rr                      1- 1186     	MOVAR	_INTE
                                    1- 1187     	.line	454, "main.c"; 	INTF = 0;
     001B 02rr                      1- 1188     	CLRR	_INTF
                                    1- 1189     	.line	455, "main.c"; 	PCON &= 0xEF;
     001C 1Err                      1- 1190     	BCR	_PCON,4
                                    1- 1191     	.line	460, "main.c"; 	}
                                    1- 1192     	RETURN	
     001D 0010                      3-   26 m1      ret
                                    1- 1193     ; exit point of _gotoSleep
                                    1- 1195     ;***
                                    1- 1196     ;  pBlock Stats: dbName = C
                                    1- 1197     ;***
                                    1- 1198     ;has an exit
                                    1- 1199     ;; Starting pCode block
                                    1- 1200     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1202     _F_wait_eoc:
                                    1- 1203     ; 2 exit points
     0000                           1- 1204     _00343_DS_:
                                    1- 1205     	.line	426, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1206     	BTRSS	_ADMDbits,5
     0001 3rrr                      1- 1207     	LGOTO	_00343_DS_
                                    1- 1208     	.line	428, "main.c"; 	}
                                    1- 1209     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1210     ; exit point of _F_wait_eoc
                                    1- 1212     ;***
                                    1- 1213     ;  pBlock Stats: dbName = C
                                    1- 1214     ;***
                                    1- 1215     ;has an exit
                                    1- 1216     ;functions called:
                                    1- 1217     ;   _delay_us
                                    1- 1218     ;   _F_wait_eoc
                                    1- 1219     ;   _delay_us
                                    1- 1220     ;   _F_wait_eoc
                                    1- 1221     ;6 compiler assigned registers:
                                    1- 1222     ;   r0x102C
                                    1- 1223     ;   r0x102D
                                    1- 1224     ;   r0x102E
                                    1- 1225     ;   r0x102F
                                    1- 1226     ;   r0x1030
                                    1- 1227     ;   r0x1031
                                    1- 1228     ;; Starting pCode block
                                    1- 1229     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1231     ;local variable name mapping:
     0000                           1- 1234     _F_AIN2_Convert:
                                    1- 1235     ; 2 exit points
                                    1- 1236     	.line	409, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1237     	BANKSEL	r0x102C
     0000 00rr                      1- 1238     	MOVAR	r0x102C
                                    1- 1239     	.line	411, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1240     	BANKSEL	_R_AIN2_DATA_LB
     0001 02rr                      1- 1241     	CLRR	_R_AIN2_DATA_LB
                                    1- 1242     	BANKSEL	_R_AIN2_DATA
     0002 02rr                      1- 1243     	CLRR	_R_AIN2_DATA
     0003 02rr                      1- 1244     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1245     	.line	413, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0004 2192                      1- 1246     	MOVIA	0x92
     0005 00rr                      1- 1247     	MOVAR	_ADMD
                                    1- 1248     	.line	414, "main.c"; 	delay_us(200);	
     0006 21C8                      1- 1249     	MOVIA	0xc8
     0007 2rrr                      1- 1250     	LCALL	_delay_us
                                    1- 1251     	.line	415, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1- 1252     	MOVIA	0x01
                                    1- 1253     	BANKSEL	r0x102D
     0009 00rr                      1- 1254     	MOVAR	r0x102D
     000A                           1- 1255     _00336_DS_:
                                    1- 1256     	BANKSEL	r0x102D
     000A 01rr                      1- 1257     	MOVR	r0x102D,W
                                    1- 1258     	BANKSEL	r0x102C
     000B 04rr                      1- 1259     	SUBAR	r0x102C,W
     000C 0803                      1- 1260     	BTRSS	STATUS,0
     000D 3rrr                      1- 1261     	LGOTO	_00338_DS_
                                    1- 1262     	.line	417, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1- 1263     	BSR	_ADMDbits,6
                                    1- 1264     	.line	418, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     000F 2rrr                      1- 1265     	LCALL	_F_wait_eoc
                                    1- 1266     	.line	419, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1- 1267     	MOVIA	0x0f
     0011 10rr                      1- 1268     	ANDAR	_ADR,W
                                    1- 1269     ;;3	MOVAR	r0x102E
                                    1- 1270     	BANKSEL	_R_AIN2_DATA_LB
     0012 03rr                      1- 1271     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1272     	.line	420, "main.c"; 	R_AIN2_DATA    += ADD; 
     0013 01rr                      1- 1273     	MOVR	_ADD,W
                                    1- 1274     	BANKSEL	r0x102E
     0014 00rr                      1- 1275     	MOVAR	r0x102E
                                    1- 1276     ;;1	CLRR	r0x102F
                                    1- 1277     ;;106	MOVR	r0x102E,W
                                    1- 1278     ;;104	MOVAR	r0x1030
     0015 2100                      1- 1279     	MOVIA	0x00
                                    1- 1280     	BANKSEL	r0x1031
     0016 00rr                      1- 1281     	MOVAR	r0x1031
                                    1- 1282     ;;105	MOVR	r0x1030,W
                                    1- 1283     	BANKSEL	r0x102E
     0017 01rr                      1- 1284     	MOVR	r0x102E,W
                                    1- 1285     	BANKSEL	_R_AIN2_DATA
     0018 03rr                      1- 1286     	ADDAR	_R_AIN2_DATA,F
                                    1- 1287     	BANKSEL	r0x1031
     0019 01rr                      1- 1288     	MOVR	r0x1031,W
     001A 0C03                      1- 1289     	BTRSC	STATUS,0
     001B 05rr                      1- 1290     	INCR	r0x1031,W
     001C 0D03                      1- 1291     	BTRSC	STATUS,2
     001D 3rrr                      1- 1292     	LGOTO	_00001_DS_
                                    1- 1293     	BANKSEL	_R_AIN2_DATA
     001E 03rr                      1- 1294     	ADDAR	(_R_AIN2_DATA + 1),F
     001F                           1- 1295     _00001_DS_:
                                    1- 1296     	.line	415, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1297     	BANKSEL	r0x102D
     001F 05rr                      1- 1298     	INCR	r0x102D,F
     0020 3rrr                      1- 1299     	LGOTO	_00336_DS_
     0021                           1- 1300     _00338_DS_:
                                    1- 1301     	.line	422, "main.c"; 	}
                                    1- 1302     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1- 1303     ; exit point of _F_AIN2_Convert
                                    1- 1305     ;***
                                    1- 1306     ;  pBlock Stats: dbName = C
                                    1- 1307     ;***
                                    1- 1308     ;has an exit
                                    1- 1309     ;functions called:
                                    1- 1310     ;   _delay_us
                                    1- 1311     ;   _F_wait_eoc
                                    1- 1312     ;   _delay_us
                                    1- 1313     ;   _F_wait_eoc
                                    1- 1314     ;6 compiler assigned registers:
                                    1- 1315     ;   r0x1032
                                    1- 1316     ;   r0x1033
                                    1- 1317     ;   r0x1034
                                    1- 1318     ;   r0x1035
                                    1- 1319     ;   r0x1036
                                    1- 1320     ;   r0x1037
                                    1- 1321     ;; Starting pCode block
                                    1- 1322     .segment "code"; module=main, function=_F_AIN9_Convert
                                    1- 1324     ;local variable name mapping:
     0000                           1- 1327     _F_AIN9_Convert:
                                    1- 1328     ; 2 exit points
                                    1- 1329     	.line	394, "main.c"; 	void F_AIN9_Convert(char count)
                                    1- 1330     	BANKSEL	r0x1032
     0000 00rr                      1- 1331     	MOVAR	r0x1032
                                    1- 1332     	.line	396, "main.c"; 	R_AIN9_DATA=R_AIN9_DATA_LB=0x00;   
                                    1- 1333     	BANKSEL	_R_AIN9_DATA_LB
     0001 02rr                      1- 1334     	CLRR	_R_AIN9_DATA_LB
                                    1- 1335     	BANKSEL	_R_AIN9_DATA
     0002 02rr                      1- 1336     	CLRR	_R_AIN9_DATA
     0003 02rr                      1- 1337     	CLRR	(_R_AIN9_DATA + 1)
                                    1- 1338     	.line	398, "main.c"; 	ADMD  = 0x90 | C_ADC_PB4;				// Select AIN6(PB1) pad as ADC input
     0004 2199                      1- 1339     	MOVIA	0x99
     0005 00rr                      1- 1340     	MOVAR	_ADMD
                                    1- 1341     	.line	399, "main.c"; 	delay_us(200);	
     0006 21C8                      1- 1342     	MOVIA	0xc8
     0007 2rrr                      1- 1343     	LCALL	_delay_us
                                    1- 1344     	.line	400, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1- 1345     	MOVIA	0x01
                                    1- 1346     	BANKSEL	r0x1033
     0009 00rr                      1- 1347     	MOVAR	r0x1033
     000A                           1- 1348     _00327_DS_:
                                    1- 1349     	BANKSEL	r0x1033
     000A 01rr                      1- 1350     	MOVR	r0x1033,W
                                    1- 1351     	BANKSEL	r0x1032
     000B 04rr                      1- 1352     	SUBAR	r0x1032,W
     000C 0803                      1- 1353     	BTRSS	STATUS,0
     000D 3rrr                      1- 1354     	LGOTO	_00329_DS_
                                    1- 1355     	.line	402, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1- 1356     	BSR	_ADMDbits,6
                                    1- 1357     	.line	403, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     000F 2rrr                      1- 1358     	LCALL	_F_wait_eoc
                                    1- 1359     	.line	404, "main.c"; 	R_AIN9_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1- 1360     	MOVIA	0x0f
     0011 10rr                      1- 1361     	ANDAR	_ADR,W
                                    1- 1362     ;;3	MOVAR	r0x1034
                                    1- 1363     	BANKSEL	_R_AIN9_DATA_LB
     0012 03rr                      1- 1364     	ADDAR	_R_AIN9_DATA_LB,F
                                    1- 1365     	.line	405, "main.c"; 	R_AIN9_DATA    += ADD; 
     0013 01rr                      1- 1366     	MOVR	_ADD,W
                                    1- 1367     	BANKSEL	r0x1034
     0014 00rr                      1- 1368     	MOVAR	r0x1034
                                    1- 1369     ;;1	CLRR	r0x1035
                                    1- 1370     ;;103	MOVR	r0x1034,W
                                    1- 1371     ;;101	MOVAR	r0x1036
     0015 2100                      1- 1372     	MOVIA	0x00
                                    1- 1373     	BANKSEL	r0x1037
     0016 00rr                      1- 1374     	MOVAR	r0x1037
                                    1- 1375     ;;102	MOVR	r0x1036,W
                                    1- 1376     	BANKSEL	r0x1034
     0017 01rr                      1- 1377     	MOVR	r0x1034,W
                                    1- 1378     	BANKSEL	_R_AIN9_DATA
     0018 03rr                      1- 1379     	ADDAR	_R_AIN9_DATA,F
                                    1- 1380     	BANKSEL	r0x1037
     0019 01rr                      1- 1381     	MOVR	r0x1037,W
     001A 0C03                      1- 1382     	BTRSC	STATUS,0
     001B 05rr                      1- 1383     	INCR	r0x1037,W
     001C 0D03                      1- 1384     	BTRSC	STATUS,2
     001D 3rrr                      1- 1385     	LGOTO	_00002_DS_
                                    1- 1386     	BANKSEL	_R_AIN9_DATA
     001E 03rr                      1- 1387     	ADDAR	(_R_AIN9_DATA + 1),F
     001F                           1- 1388     _00002_DS_:
                                    1- 1389     	.line	400, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1390     	BANKSEL	r0x1033
     001F 05rr                      1- 1391     	INCR	r0x1033,F
     0020 3rrr                      1- 1392     	LGOTO	_00327_DS_
     0021                           1- 1393     _00329_DS_:
                                    1- 1394     	.line	407, "main.c"; 	}
                                    1- 1395     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1- 1396     ; exit point of _F_AIN9_Convert
                                    1- 1398     ;***
                                    1- 1399     ;  pBlock Stats: dbName = C
                                    1- 1400     ;***
                                    1- 1401     ;has an exit
                                    1- 1402     ;functions called:
                                    1- 1403     ;   _F_AIN2_Convert
                                    1- 1404     ;   _F_AIN2_Convert
                                    1- 1405     ;4 compiler assigned registers:
                                    1- 1406     ;   r0x1038
                                    1- 1407     ;   r0x1039
                                    1- 1408     ;   r0x103A
                                    1- 1409     ;   r0x103B
                                    1- 1410     ;; Starting pCode block
                                    1- 1411     .segment "code"; module=main, function=_checkPWAAD
     0000                           1- 1413     _checkPWAAD:
                                    1- 1414     ; 2 exit points
                                    1- 1415     	.line	382, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1416     	BANKSEL	_R_AIN2_DATA_LB
     0000 02rr                      1- 1417     	CLRR	_R_AIN2_DATA_LB
                                    1- 1418     	BANKSEL	_R_AIN2_DATA
     0001 02rr                      1- 1419     	CLRR	_R_AIN2_DATA
     0002 02rr                      1- 1420     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1421     	.line	383, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1- 1422     	MOVIA	0x08
     0004 2rrr                      1- 1423     	LCALL	_F_AIN2_Convert
                                    1- 1424     	.line	384, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1425     	BANKSEL	_R_AIN2_DATA
     0005 15rr                      1- 1426     	SWAPR	(_R_AIN2_DATA + 1),W
     0006 22F0                      1- 1427     	ANDIA	0xf0
     0007 00rr                      1- 1428     	MOVAR	(_R_AIN2_DATA + 1)
     0008 15rr                      1- 1429     	SWAPR	_R_AIN2_DATA,W
     0009 00rr                      1- 1430     	MOVAR	_R_AIN2_DATA
     000A 220F                      1- 1431     	ANDIA	0x0f
     000B 11rr                      1- 1432     	IORAR	(_R_AIN2_DATA + 1),F
     000C 12rr                      1- 1433     	XORAR	_R_AIN2_DATA,F
                                    1- 1434     	.line	385, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1- 1435     	MOVIA	0xf0
                                    1- 1436     	BANKSEL	_R_AIN2_DATA_LB
     000E 10rr                      1- 1437     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1438     	.line	386, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1- 1439     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1440     	BANKSEL	r0x103A
     0010 00rr                      1- 1441     	MOVAR	r0x103A
                                    1- 1442     ;;1	MOVAR	r0x1038
                                    1- 1443     ;;1	CLRR	r0x1039
                                    1- 1444     ;;100	MOVR	r0x1038,W
     0011 2100                      1- 1445     	MOVIA	0x00
                                    1- 1446     	BANKSEL	r0x103B
     0012 00rr                      1- 1447     	MOVAR	r0x103B
                                    1- 1448     	BANKSEL	r0x103A
     0013 01rr                      1- 1449     	MOVR	r0x103A,W
                                    1- 1450     	BANKSEL	_R_AIN2_DATA
     0014 03rr                      1- 1451     	ADDAR	_R_AIN2_DATA,F
                                    1- 1452     	BANKSEL	r0x103B
     0015 01rr                      1- 1453     	MOVR	r0x103B,W
     0016 0C03                      1- 1454     	BTRSC	STATUS,0
     0017 05rr                      1- 1455     	INCR	r0x103B,W
     0018 0D03                      1- 1456     	BTRSC	STATUS,2
     0019 3rrr                      1- 1457     	LGOTO	_00003_DS_
                                    1- 1458     	BANKSEL	_R_AIN2_DATA
     001A 03rr                      1- 1459     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1460     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001B                           1- 1461     _00003_DS_:
                                    1- 1462     	.line	387, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 8	
     001B 1C03                      1- 1463     	BCR	STATUS,0
                                    1- 1464     	BANKSEL	_R_AIN2_DATA
     001C 13rr                      1- 1465     	RRR	(_R_AIN2_DATA + 1),F
     001D 13rr                      1- 1466     	RRR	_R_AIN2_DATA,F
                                    1- 1467     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001E 1C03                      1- 1468     	BCR	STATUS,0
     001F 13rr                      1- 1469     	RRR	(_R_AIN2_DATA + 1),F
     0020 13rr                      1- 1470     	RRR	_R_AIN2_DATA,F
                                    1- 1471     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0021 1C03                      1- 1472     	BCR	STATUS,0
     0022 13rr                      1- 1473     	RRR	(_R_AIN2_DATA + 1),F
     0023 13rr                      1- 1474     	RRR	_R_AIN2_DATA,F
                                    1- 1475     	.line	389, "main.c"; 	}
                                    1- 1476     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1- 1477     ; exit point of _checkPWAAD
                                    1- 1479     ;***
                                    1- 1480     ;  pBlock Stats: dbName = C
                                    1- 1481     ;***
                                    1- 1482     ;has an exit
                                    1- 1483     ;functions called:
                                    1- 1484     ;   _F_AIN9_Convert
                                    1- 1485     ;   __divuint
                                    1- 1486     ;   _F_AIN9_Convert
                                    1- 1487     ;   __divuint
                                    1- 1488     ;7 compiler assigned registers:
                                    1- 1489     ;   r0x103C
                                    1- 1490     ;   r0x103D
                                    1- 1491     ;   r0x103E
                                    1- 1492     ;   r0x103F
                                    1- 1493     ;   STK02
                                    1- 1494     ;   STK01
                                    1- 1495     ;   STK00
                                    1- 1496     ;; Starting pCode block
                                    1- 1497     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1499     _checkBatAD:
                                    1- 1500     ; 2 exit points
                                    1- 1501     	.line	363, "main.c"; 	R_AIN9_DATA = R_AIN9_DATA_LB = 0x00;
                                    1- 1502     	BANKSEL	_R_AIN9_DATA_LB
     0000 02rr                      1- 1503     	CLRR	_R_AIN9_DATA_LB
                                    1- 1504     	BANKSEL	_R_AIN9_DATA
     0001 02rr                      1- 1505     	CLRR	_R_AIN9_DATA
     0002 02rr                      1- 1506     	CLRR	(_R_AIN9_DATA + 1)
                                    1- 1507     	.line	364, "main.c"; 	F_AIN9_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1- 1508     	MOVIA	0x08
     0004 2rrr                      1- 1509     	LCALL	_F_AIN9_Convert
                                    1- 1510     	.line	365, "main.c"; 	R_AIN9_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1511     	BANKSEL	_R_AIN9_DATA
     0005 15rr                      1- 1512     	SWAPR	(_R_AIN9_DATA + 1),W
     0006 22F0                      1- 1513     	ANDIA	0xf0
     0007 00rr                      1- 1514     	MOVAR	(_R_AIN9_DATA + 1)
     0008 15rr                      1- 1515     	SWAPR	_R_AIN9_DATA,W
     0009 00rr                      1- 1516     	MOVAR	_R_AIN9_DATA
     000A 220F                      1- 1517     	ANDIA	0x0f
     000B 11rr                      1- 1518     	IORAR	(_R_AIN9_DATA + 1),F
     000C 12rr                      1- 1519     	XORAR	_R_AIN9_DATA,F
                                    1- 1520     	.line	366, "main.c"; 	R_AIN9_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1- 1521     	MOVIA	0xf0
                                    1- 1522     	BANKSEL	_R_AIN9_DATA_LB
     000E 10rr                      1- 1523     	ANDAR	_R_AIN9_DATA_LB,F
                                    1- 1524     	.line	367, "main.c"; 	R_AIN9_DATA += R_AIN9_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1- 1525     	MOVR	_R_AIN9_DATA_LB,W
                                    1- 1526     	BANKSEL	r0x103E
     0010 00rr                      1- 1527     	MOVAR	r0x103E
                                    1- 1528     ;;1	MOVAR	r0x103C
                                    1- 1529     ;;1	CLRR	r0x103D
                                    1- 1530     ;;99	MOVR	r0x103C,W
     0011 2100                      1- 1531     	MOVIA	0x00
                                    1- 1532     	BANKSEL	r0x103F
     0012 00rr                      1- 1533     	MOVAR	r0x103F
                                    1- 1534     	BANKSEL	r0x103E
     0013 01rr                      1- 1535     	MOVR	r0x103E,W
                                    1- 1536     	BANKSEL	_R_AIN9_DATA
     0014 03rr                      1- 1537     	ADDAR	_R_AIN9_DATA,F
                                    1- 1538     	BANKSEL	r0x103F
     0015 01rr                      1- 1539     	MOVR	r0x103F,W
     0016 0C03                      1- 1540     	BTRSC	STATUS,0
     0017 05rr                      1- 1541     	INCR	r0x103F,W
     0018 0D03                      1- 1542     	BTRSC	STATUS,2
     0019 3rrr                      1- 1543     	LGOTO	_00004_DS_
                                    1- 1544     	BANKSEL	_R_AIN9_DATA
     001A 03rr                      1- 1545     	ADDAR	(_R_AIN9_DATA + 1),F
                                    1- 1546     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001B                           1- 1547     _00004_DS_:
                                    1- 1548     	.line	368, "main.c"; 	R_AIN9_DATA >>=3;					// R_AIN0_DATA divided 8	
     001B 1C03                      1- 1549     	BCR	STATUS,0
                                    1- 1550     	BANKSEL	_R_AIN9_DATA
     001C 13rr                      1- 1551     	RRR	(_R_AIN9_DATA + 1),F
     001D 13rr                      1- 1552     	RRR	_R_AIN9_DATA,F
                                    1- 1553     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001E 1C03                      1- 1554     	BCR	STATUS,0
     001F 13rr                      1- 1555     	RRR	(_R_AIN9_DATA + 1),F
     0020 13rr                      1- 1556     	RRR	_R_AIN9_DATA,F
                                    1- 1557     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0021 1C03                      1- 1558     	BCR	STATUS,0
     0022 13rr                      1- 1559     	RRR	(_R_AIN9_DATA + 1),F
     0023 13rr                      1- 1560     	RRR	_R_AIN9_DATA,F
                                    1- 1561     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1562     ;;unsigned compare: left >= lit (0xAF1=2801), size=2
                                    1- 1563     	.line	371, "main.c"; 	if(R_AIN9_DATA > 2800)
     0024 210A                      1- 1564     	MOVIA	0x0a
     0025 04rr                      1- 1565     	SUBAR	(_R_AIN9_DATA + 1),W
     0026 0903                      1- 1566     	BTRSS	STATUS,2
     0027 3rrr                      1- 1567     	LGOTO	_00315_DS_
     0028 21F1                      1- 1568     	MOVIA	0xf1
     0029 04rr                      1- 1569     	SUBAR	_R_AIN9_DATA,W
     002A                           1- 1570     _00315_DS_:
     002A 0803                      1- 1571     	BTRSS	STATUS,0
     002B 3rrr                      1- 1572     	LGOTO	_00305_DS_
                                    1- 1573     	.line	372, "main.c"; 	R_AIN9_DATA = 2800;
     002C 21F0                      1- 1574     	MOVIA	0xf0
                                    1- 1575     	BANKSEL	_R_AIN9_DATA
     002D 00rr                      1- 1576     	MOVAR	_R_AIN9_DATA
     002E 210A                      1- 1577     	MOVIA	0x0a
     002F 00rr                      1- 1578     	MOVAR	(_R_AIN9_DATA + 1)
     0030 3rrr                      1- 1579     	LGOTO	_00306_DS_
                                    1- 1580     ;;unsigned compare: left < lit (0x898=2200), size=2
     0031                           1- 1581     _00305_DS_:
                                    1- 1582     	.line	373, "main.c"; 	else if(R_AIN9_DATA < 2200)
     0031 2108                      1- 1583     	MOVIA	0x08
                                    1- 1584     	BANKSEL	_R_AIN9_DATA
     0032 04rr                      1- 1585     	SUBAR	(_R_AIN9_DATA + 1),W
     0033 0903                      1- 1586     	BTRSS	STATUS,2
     0034 3rrr                      1- 1587     	LGOTO	_00316_DS_
     0035 2198                      1- 1588     	MOVIA	0x98
     0036 04rr                      1- 1589     	SUBAR	_R_AIN9_DATA,W
     0037                           1- 1590     _00316_DS_:
     0037 0C03                      1- 1591     	BTRSC	STATUS,0
     0038 3rrr                      1- 1592     	LGOTO	_00306_DS_
                                    1- 1593     	.line	374, "main.c"; 	R_AIN9_DATA = 2200;
     0039 2198                      1- 1594     	MOVIA	0x98
                                    1- 1595     	BANKSEL	_R_AIN9_DATA
     003A 00rr                      1- 1596     	MOVAR	_R_AIN9_DATA
     003B 2108                      1- 1597     	MOVIA	0x08
     003C 00rr                      1- 1598     	MOVAR	(_R_AIN9_DATA + 1)
     003D                           1- 1599     _00306_DS_:
                                    1- 1600     	.line	375, "main.c"; 	batValue = R_AIN9_DATA - 2200;
     003D 2168                      1- 1601     	MOVIA	0x68
                                    1- 1602     	BANKSEL	_R_AIN9_DATA
     003E 03rr                      1- 1603     	ADDAR	_R_AIN9_DATA,W
                                    1- 1604     	BANKSEL	_batValue
     003F 00rr                      1- 1605     	MOVAR	_batValue
     0040 21F7                      1- 1606     	MOVIA	0xf7
     0041 00rr                      1- 1607     	MOVAR	(_batValue + 1)
                                    1- 1608     	BANKSEL	_R_AIN9_DATA
     0042 01rr                      1- 1609     	MOVR	(_R_AIN9_DATA + 1),W
     0043 0C03                      1- 1610     	BTRSC	STATUS,0
     0044 05rr                      1- 1611     	INCR	(_R_AIN9_DATA + 1),W
     0045 0D03                      1- 1612     	BTRSC	STATUS,2
     0046 3rrr                      1- 1613     	LGOTO	_00005_DS_
                                    1- 1614     	BANKSEL	_batValue
     0047 03rr                      1- 1615     	ADDAR	(_batValue + 1),F
     0048                           1- 1616     _00005_DS_:
                                    1- 1617     	.line	377, "main.c"; 	batValue= batValue/6;
     0048 2106                      1- 1618     	MOVIA	0x06
     0049 00rr                      1- 1619     	MOVAR	STK02
     004A 2100                      1- 1620     	MOVIA	0x00
     004B 00rr                      1- 1621     	MOVAR	STK01
                                    1- 1622     	BANKSEL	_batValue
     004C 01rr                      1- 1623     	MOVR	_batValue,W
     004D 00rr                      1- 1624     	MOVAR	STK00
     004E 01rr                      1- 1625     	MOVR	(_batValue + 1),W
     004F 2rrr                      1- 1626     	LCALL	__divuint
                                    1- 1627     	BANKSEL	_batValue
     0050 00rr                      1- 1628     	MOVAR	(_batValue + 1)
     0051 01rr                      1- 1629     	MOVR	STK00,W
     0052 00rr                      1- 1630     	MOVAR	_batValue
                                    1- 1631     	.line	378, "main.c"; 	}
                                    1- 1632     	RETURN	
     0053 0010                      3-   26 m1      ret
                                    1- 1633     ; exit point of _checkBatAD
                                    1- 1635     ;***
                                    1- 1636     ;  pBlock Stats: dbName = C
                                    1- 1637     ;***
                                    1- 1638     ;has an exit
                                    1- 1639     ;functions called:
                                    1- 1640     ;   _delay_us
                                    1- 1641     ;   _delay_us
                                    1- 1642     ;; Starting pCode block
                                    1- 1643     .segment "code"; module=main, function=_initAD
     0000                           1- 1645     _initAD:
                                    1- 1646     ; 2 exit points
                                    1- 1647     	.line	339, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1648     	MOVIA	0x84
     0001 00rr                      1- 1649     	MOVAR	_ADMD
                                    1- 1650     	.line	344, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1651     	CLRR	_ADVREFH
                                    1- 1652     	.line	349, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1653     	MOVIA	0x10
     0004 00rr                      1- 1654     	MOVAR	_ADR
                                    1- 1655     	.line	351, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1656     	MOVIA	0x03
     0006 00rr                      1- 1657     	MOVAR	_ADCR
                                    1- 1658     	.line	354, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1659     	BSR	_ADMDbits,4
                                    1- 1660     	.line	355, "main.c"; 	delay_us(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1661     	MOVIA	0x64
     0009 2rrr                      1- 1662     	LCALL	_delay_us
                                    1- 1663     	.line	356, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = R_AIN9_DATA = R_AIN9_DATA_LB = 0x00;
                                    1- 1664     	BANKSEL	_R_AIN9_DATA_LB
     000A 02rr                      1- 1665     	CLRR	_R_AIN9_DATA_LB
                                    1- 1666     	BANKSEL	_R_AIN9_DATA
     000B 02rr                      1- 1667     	CLRR	_R_AIN9_DATA
     000C 02rr                      1- 1668     	CLRR	(_R_AIN9_DATA + 1)
                                    1- 1669     	BANKSEL	_R_AIN2_DATA_LB
     000D 02rr                      1- 1670     	CLRR	_R_AIN2_DATA_LB
                                    1- 1671     	BANKSEL	_R_AIN2_DATA
     000E 02rr                      1- 1672     	CLRR	_R_AIN2_DATA
     000F 02rr                      1- 1673     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1674     	.line	358, "main.c"; 	}
                                    1- 1675     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 1676     ; exit point of _initAD
                                    1- 1678     ;***
                                    1- 1679     ;  pBlock Stats: dbName = C
                                    1- 1680     ;***
                                    1- 1681     ;has an exit
                                    1- 1682     ;functions called:
                                    1- 1683     ;   __gptrget1
                                    1- 1684     ;   __gptrput1
                                    1- 1685     ;   __gptrput1
                                    1- 1686     ;   __gptrget1
                                    1- 1687     ;   __gptrput1
                                    1- 1688     ;   __gptrput1
                                    1- 1689     ;   __gptrget1
                                    1- 1690     ;   __gptrput1
                                    1- 1691     ;   __gptrput1
                                    1- 1692     ;   __gptrget1
                                    1- 1693     ;   __gptrput1
                                    1- 1694     ;   __gptrput1
                                    1- 1695     ;7 compiler assigned registers:
                                    1- 1696     ;   r0x1040
                                    1- 1697     ;   STK00
                                    1- 1698     ;   r0x1041
                                    1- 1699     ;   STK01
                                    1- 1700     ;   r0x1042
                                    1- 1701     ;   STK02
                                    1- 1702     ;   r0x1043
                                    1- 1703     ;; Starting pCode block
                                    1- 1704     .segment "code"; module=main, function=_keyRead2
                                    1- 1706     ;local variable name mapping:
     0000                           1- 1711     _keyRead2:
                                    1- 1712     ; 2 exit points
                                    1- 1713     	.line	313, "main.c"; 	char keyRead2(char KeyStatus,uint8_t* keyCount)	
                                    1- 1714     	BANKSEL	r0x1040
     0000 00rr                      1- 1715     	MOVAR	r0x1040
     0001 01rr                      1- 1716     	MOVR	STK00,W
                                    1- 1717     	BANKSEL	r0x1041
     0002 00rr                      1- 1718     	MOVAR	r0x1041
     0003 01rr                      1- 1719     	MOVR	STK01,W
                                    1- 1720     	BANKSEL	r0x1042
     0004 00rr                      1- 1721     	MOVAR	r0x1042
     0005 01rr                      1- 1722     	MOVR	STK02,W
                                    1- 1723     	BANKSEL	r0x1043
     0006 00rr                      1- 1724     	MOVAR	r0x1043
                                    1- 1725     	.line	315, "main.c"; 	if (KeyStatus)
                                    1- 1726     	BANKSEL	r0x1040
     0007 01rr                      1- 1727     	MOVR	r0x1040,W
     0008 0D03                      1- 1728     	BTRSC	STATUS,2
     0009 3rrr                      1- 1729     	LGOTO	_00291_DS_
                                    1- 1730     	.line	317, "main.c"; 	(*keyCount)++;
                                    1- 1731     	BANKSEL	r0x1043
     000A 01rr                      1- 1732     	MOVR	r0x1043,W
     000B 00rr                      1- 1733     	MOVAR	STK01
                                    1- 1734     	BANKSEL	r0x1042
     000C 01rr                      1- 1735     	MOVR	r0x1042,W
     000D 00rr                      1- 1736     	MOVAR	STK00
                                    1- 1737     	BANKSEL	r0x1041
     000E 01rr                      1- 1738     	MOVR	r0x1041,W
     000F 2rrr                      1- 1739     	LCALL	__gptrget1
                                    1- 1740     	BANKSEL	r0x1040
     0010 00rr                      1- 1741     	MOVAR	r0x1040
     0011 05rr                      1- 1742     	INCR	r0x1040,F
     0012 01rr                      1- 1743     	MOVR	r0x1040,W
     0013 00rr                      1- 1744     	MOVAR	STK02
                                    1- 1745     	BANKSEL	r0x1043
     0014 01rr                      1- 1746     	MOVR	r0x1043,W
     0015 00rr                      1- 1747     	MOVAR	STK01
                                    1- 1748     	BANKSEL	r0x1042
     0016 01rr                      1- 1749     	MOVR	r0x1042,W
     0017 00rr                      1- 1750     	MOVAR	STK00
                                    1- 1751     	BANKSEL	r0x1041
     0018 01rr                      1- 1752     	MOVR	r0x1041,W
     0019 2rrr                      1- 1753     	LCALL	__gptrput1
                                    1- 1754     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1755     	.line	318, "main.c"; 	if(*keyCount >= 200)
     001A 21C8                      1- 1756     	MOVIA	0xc8
                                    1- 1757     	BANKSEL	r0x1040
     001B 04rr                      1- 1758     	SUBAR	r0x1040,W
     001C 0803                      1- 1759     	BTRSS	STATUS,0
     001D 3rrr                      1- 1760     	LGOTO	_00292_DS_
                                    1- 1761     	.line	320, "main.c"; 	*keyCount = 200;
     001E 21C8                      1- 1762     	MOVIA	0xc8
     001F 00rr                      1- 1763     	MOVAR	STK02
                                    1- 1764     	BANKSEL	r0x1043
     0020 01rr                      1- 1765     	MOVR	r0x1043,W
     0021 00rr                      1- 1766     	MOVAR	STK01
                                    1- 1767     	BANKSEL	r0x1042
     0022 01rr                      1- 1768     	MOVR	r0x1042,W
     0023 00rr                      1- 1769     	MOVAR	STK00
                                    1- 1770     	BANKSEL	r0x1041
     0024 01rr                      1- 1771     	MOVR	r0x1041,W
     0025 2rrr                      1- 1772     	LCALL	__gptrput1
     0026 3rrr                      1- 1773     	LGOTO	_00292_DS_
     0027                           1- 1774     _00291_DS_:
                                    1- 1775     	.line	325, "main.c"; 	if(*keyCount >= 8)
                                    1- 1776     	BANKSEL	r0x1043
     0027 01rr                      1- 1777     	MOVR	r0x1043,W
     0028 00rr                      1- 1778     	MOVAR	STK01
                                    1- 1779     	BANKSEL	r0x1042
     0029 01rr                      1- 1780     	MOVR	r0x1042,W
     002A 00rr                      1- 1781     	MOVAR	STK00
                                    1- 1782     	BANKSEL	r0x1041
     002B 01rr                      1- 1783     	MOVR	r0x1041,W
     002C 2rrr                      1- 1784     	LCALL	__gptrget1
                                    1- 1785     	BANKSEL	r0x1040
     002D 00rr                      1- 1786     	MOVAR	r0x1040
                                    1- 1787     ;;unsigned compare: left < lit (0x8=8), size=1
     002E 2108                      1- 1788     	MOVIA	0x08
     002F 04rr                      1- 1789     	SUBAR	r0x1040,W
     0030 0803                      1- 1790     	BTRSS	STATUS,0
     0031 3rrr                      1- 1791     	LGOTO	_00289_DS_
                                    1- 1792     	.line	327, "main.c"; 	*keyCount = 0;
     0032 2100                      1- 1793     	MOVIA	0x00
     0033 00rr                      1- 1794     	MOVAR	STK02
                                    1- 1795     	BANKSEL	r0x1043
     0034 01rr                      1- 1796     	MOVR	r0x1043,W
     0035 00rr                      1- 1797     	MOVAR	STK01
                                    1- 1798     	BANKSEL	r0x1042
     0036 01rr                      1- 1799     	MOVR	r0x1042,W
     0037 00rr                      1- 1800     	MOVAR	STK00
                                    1- 1801     	BANKSEL	r0x1041
     0038 01rr                      1- 1802     	MOVR	r0x1041,W
     0039 2rrr                      1- 1803     	LCALL	__gptrput1
                                    1- 1804     	.line	328, "main.c"; 	return	1;
     003A 2101                      1- 1805     	MOVIA	0x01
     003B 3rrr                      1- 1806     	LGOTO	_00293_DS_
     003C                           1- 1807     _00289_DS_:
                                    1- 1808     	.line	330, "main.c"; 	*keyCount = 0;
     003C 2100                      1- 1809     	MOVIA	0x00
     003D 00rr                      1- 1810     	MOVAR	STK02
                                    1- 1811     	BANKSEL	r0x1043
     003E 01rr                      1- 1812     	MOVR	r0x1043,W
     003F 00rr                      1- 1813     	MOVAR	STK01
                                    1- 1814     	BANKSEL	r0x1042
     0040 01rr                      1- 1815     	MOVR	r0x1042,W
     0041 00rr                      1- 1816     	MOVAR	STK00
                                    1- 1817     	BANKSEL	r0x1041
     0042 01rr                      1- 1818     	MOVR	r0x1041,W
     0043 2rrr                      1- 1819     	LCALL	__gptrput1
     0044                           1- 1820     _00292_DS_:
                                    1- 1821     	.line	332, "main.c"; 	return 0;
     0044 2100                      1- 1822     	MOVIA	0x00
     0045                           1- 1823     _00293_DS_:
                                    1- 1824     	.line	333, "main.c"; 	}
                                    1- 1825     	RETURN	
     0045 0010                      3-   26 m1      ret
                                    1- 1826     ; exit point of _keyRead2
                                    1- 1828     ;***
                                    1- 1829     ;  pBlock Stats: dbName = C
                                    1- 1830     ;***
                                    1- 1831     ;has an exit
                                    1- 1832     ;1 compiler assigned register :
                                    1- 1833     ;   r0x1044
                                    1- 1834     ;; Starting pCode block
                                    1- 1835     .segment "code"; module=main, function=_keyRead
                                    1- 1837     ;local variable name mapping:
     0000                           1- 1839     _keyRead:
                                    1- 1840     ; 2 exit points
                                    1- 1841     	.line	280, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1842     	BANKSEL	r0x1044
     0000 00rr                      1- 1843     	MOVAR	r0x1044
                                    1- 1844     	.line	282, "main.c"; 	if(keyStatus)
     0001 01rr                      1- 1845     	MOVR	r0x1044,W
     0002 0D03                      1- 1846     	BTRSC	STATUS,2
     0003 3rrr                      1- 1847     	LGOTO	_00279_DS_
                                    1- 1848     	.line	284, "main.c"; 	keyCount++;
                                    1- 1849     	BANKSEL	_keyCount
     0004 05rr                      1- 1850     	INCR	_keyCount,F
                                    1- 1851     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1852     	.line	285, "main.c"; 	if(keyCount >= 200)
     0005 21C8                      1- 1853     	MOVIA	0xc8
     0006 04rr                      1- 1854     	SUBAR	_keyCount,W
     0007 0803                      1- 1855     	BTRSS	STATUS,0
     0008 3rrr                      1- 1856     	LGOTO	_00280_DS_
                                    1- 1857     	.line	287, "main.c"; 	keyCount = 200;
     0009 21C8                      1- 1858     	MOVIA	0xc8
     000A 00rr                      1- 1859     	MOVAR	_keyCount
                                    1- 1860     	.line	288, "main.c"; 	if(!longPressFlag)
                                    1- 1861     	BANKSEL	_longPressFlag
     000B 01rr                      1- 1862     	MOVR	_longPressFlag,W
     000C 0903                      1- 1863     	BTRSS	STATUS,2
     000D 3rrr                      1- 1864     	LGOTO	_00280_DS_
                                    1- 1865     	.line	290, "main.c"; 	longPressFlag = 1;
     000E 2101                      1- 1866     	MOVIA	0x01
     000F 00rr                      1- 1867     	MOVAR	_longPressFlag
                                    1- 1868     	.line	291, "main.c"; 	return 2;
     0010 2102                      1- 1869     	MOVIA	0x02
     0011 3rrr                      1- 1870     	LGOTO	_00281_DS_
                                    1- 1871     ;;unsigned compare: left < lit (0xC8=200), size=1
     0012                           1- 1872     _00279_DS_:
                                    1- 1873     	.line	297, "main.c"; 	if(keyCount >= 200)
     0012 21C8                      1- 1874     	MOVIA	0xc8
                                    1- 1875     	BANKSEL	_keyCount
     0013 04rr                      1- 1876     	SUBAR	_keyCount,W
     0014 0803                      1- 1877     	BTRSS	STATUS,0
     0015 3rrr                      1- 1878     	LGOTO	_00276_DS_
                                    1- 1879     	.line	299, "main.c"; 	keyCount = 0;
     0016 02rr                      1- 1880     	CLRR	_keyCount
                                    1- 1881     	.line	300, "main.c"; 	longPressFlag = 0;
                                    1- 1882     	BANKSEL	_longPressFlag
     0017 02rr                      1- 1883     	CLRR	_longPressFlag
                                    1- 1884     	.line	301, "main.c"; 	return	0;
     0018 2100                      1- 1885     	MOVIA	0x00
     0019 3rrr                      1- 1886     	LGOTO	_00281_DS_
                                    1- 1887     ;;unsigned compare: left < lit (0x8=8), size=1
     001A                           1- 1888     _00276_DS_:
                                    1- 1889     	.line	303, "main.c"; 	else if(keyCount >= 8)
     001A 2108                      1- 1890     	MOVIA	0x08
                                    1- 1891     	BANKSEL	_keyCount
     001B 04rr                      1- 1892     	SUBAR	_keyCount,W
     001C 0803                      1- 1893     	BTRSS	STATUS,0
     001D 3rrr                      1- 1894     	LGOTO	_00277_DS_
                                    1- 1895     	.line	305, "main.c"; 	keyCount = 0;
     001E 02rr                      1- 1896     	CLRR	_keyCount
                                    1- 1897     	.line	306, "main.c"; 	return	1;
     001F 2101                      1- 1898     	MOVIA	0x01
     0020 3rrr                      1- 1899     	LGOTO	_00281_DS_
     0021                           1- 1900     _00277_DS_:
                                    1- 1901     	.line	308, "main.c"; 	keyCount = 0;
                                    1- 1902     	BANKSEL	_keyCount
     0021 02rr                      1- 1903     	CLRR	_keyCount
     0022                           1- 1904     _00280_DS_:
                                    1- 1905     	.line	310, "main.c"; 	return 0;
     0022 2100                      1- 1906     	MOVIA	0x00
     0023                           1- 1907     _00281_DS_:
                                    1- 1908     	.line	311, "main.c"; 	}
                                    1- 1909     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1- 1910     ; exit point of _keyRead
                                    1- 1912     ;***
                                    1- 1913     ;  pBlock Stats: dbName = C
                                    1- 1914     ;***
                                    1- 1915     ;has an exit
                                    1- 1916     ;functions called:
                                    1- 1917     ;   _Delay10Us
                                    1- 1918     ;   _Delay10Us
                                    1- 1919     ;   _Delay10Us
                                    1- 1920     ;   _Delay10Us
                                    1- 1921     ;   _Delay10Us
                                    1- 1922     ;   _Delay10Us
                                    1- 1923     ;   _Delay10Us
                                    1- 1924     ;   _Delay10Us
                                    1- 1925     ;2 compiler assigned registers:
                                    1- 1926     ;   r0x1045
                                    1- 1927     ;   r0x1046
                                    1- 1928     ;; Starting pCode block
                                    1- 1929     .segment "code"; module=main, function=_ind_light_disp
                                    1- 1931     ;local variable name mapping:
     0000                           1- 1934     _ind_light_disp:
                                    1- 1935     ; 2 exit points
                                    1- 1936     	.line	255, "main.c"; 	void ind_light_disp( uint8_t udata )
                                    1- 1937     	BANKSEL	r0x1045
     0000 00rr                      1- 1938     	MOVAR	r0x1045
                                    1- 1939     	.line	258, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1- 1940     	BANKSEL	r0x1046
     0001 02rr                      1- 1941     	CLRR	r0x1046
     0002                           1- 1942     _00264_DS_:
                                    1- 1943     	.line	260, "main.c"; 	CLK=0;
     0002 1Frr                      1- 1944     	BCR	_PORTA,7
                                    1- 1945     	.line	261, "main.c"; 	Delay10Us();
     0003 2rrr                      1- 1946     	LCALL	_Delay10Us
                                    1- 1947     	.line	262, "main.c"; 	if(udata&0x80)
                                    1- 1948     	BANKSEL	r0x1045
     0004 0Brr                      1- 1949     	BTRSS	r0x1045,7
     0005 3rrr                      1- 1950     	LGOTO	_00261_DS_
                                    1- 1951     	.line	264, "main.c"; 	DAT=1;
     0006 1Brr                      1- 1952     	BSR	_PORTA,6
                                    1- 1953     	.line	265, "main.c"; 	Delay10Us();
     0007 2rrr                      1- 1954     	LCALL	_Delay10Us
     0008 3rrr                      1- 1955     	LGOTO	_00262_DS_
     0009                           1- 1956     _00261_DS_:
                                    1- 1957     	.line	269, "main.c"; 	DAT=0;
     0009 1Frr                      1- 1958     	BCR	_PORTA,6
                                    1- 1959     	.line	270, "main.c"; 	Delay10Us();
     000A 2rrr                      1- 1960     	LCALL	_Delay10Us
     000B                           1- 1961     _00262_DS_:
                                    1- 1962     	.line	272, "main.c"; 	CLK=1;
     000B 1Brr                      1- 1963     	BSR	_PORTA,7
                                    1- 1964     	.line	273, "main.c"; 	Delay10Us();
     000C 2rrr                      1- 1965     	LCALL	_Delay10Us
                                    1- 1966     	.line	274, "main.c"; 	udata<<=1;
     000D 1C03                      1- 1967     	BCR	STATUS,0
                                    1- 1968     	BANKSEL	r0x1045
     000E 14rr                      1- 1969     	RLR	r0x1045,F
                                    1- 1970     	.line	258, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1- 1971     	BANKSEL	r0x1046
     000F 05rr                      1- 1972     	INCR	r0x1046,F
                                    1- 1973     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1974     ;;unsigned compare: left >= lit (0x8=8), size=1
     0010 2108                      1- 1975     	MOVIA	0x08
     0011 04rr                      1- 1976     	SUBAR	r0x1046,W
     0012 0803                      1- 1977     	BTRSS	STATUS,0
     0013 3rrr                      1- 1978     	LGOTO	_00264_DS_
                                    1- 1979     	.line	276, "main.c"; 	CLK=0;
     0014 1Frr                      1- 1980     	BCR	_PORTA,7
                                    1- 1981     	.line	277, "main.c"; 	DAT=0;
     0015 1Frr                      1- 1982     	BCR	_PORTA,6
                                    1- 1983     	.line	278, "main.c"; 	}
                                    1- 1984     	RETURN	
     0016 0010                      3-   26 m1      ret
                                    1- 1985     ; exit point of _ind_light_disp
                                    1- 1987     ;***
                                    1- 1988     ;  pBlock Stats: dbName = C
                                    1- 1989     ;***
                                    1- 1990     ;has an exit
                                    1- 1991     ;functions called:
                                    1- 1992     ;   __gptrget1
                                    1- 1993     ;   _ind_light_disp
                                    1- 1994     ;   _delay_us
                                    1- 1995     ;   __gptrget1
                                    1- 1996     ;   _ind_light_disp
                                    1- 1997     ;   _delay_us
                                    1- 1998     ;   __gptrget1
                                    1- 1999     ;   _ind_light_disp
                                    1- 2000     ;   _delay_us
                                    1- 2001     ;   __gptrget1
                                    1- 2002     ;   _ind_light_disp
                                    1- 2003     ;   _delay_us
                                    1- 2004     ;5 compiler assigned registers:
                                    1- 2005     ;   r0x1047
                                    1- 2006     ;   r0x1048
                                    1- 2007     ;   STK01
                                    1- 2008     ;   STK00
                                    1- 2009     ;   r0x1049
                                    1- 2010     ;; Starting pCode block
                                    1- 2011     .segment "code"; module=main, function=_refresh
     0000                           1- 2013     _refresh:
                                    1- 2014     ; 2 exit points
                                    1- 2015     	.line	236, "main.c"; 	COM1 = 1;
     0000 1Arr                      1- 2016     	BSR	_PORTB,5
                                    1- 2017     	.line	237, "main.c"; 	COM2 = 1;
     0001 19rr                      1- 2018     	BSR	_PORTB,3
                                    1- 2019     	.line	238, "main.c"; 	if(shiwei > 0)
                                    1- 2020     	BANKSEL	_shiwei
     0002 01rr                      1- 2021     	MOVR	_shiwei,W
     0003 0D03                      1- 2022     	BTRSC	STATUS,2
     0004 3rrr                      1- 2023     	LGOTO	_00255_DS_
                                    1- 2024     	.line	240, "main.c"; 	ind_light_disp(table[shiwei]);
     0005 01rr                      1- 2025     	MOVR	_shiwei,W
     0006 25rr                      1- 2026     	ADDIA	(_table + 0)
                                    1- 2027     	BANKSEL	r0x1047
     0007 00rr                      1- 2028     	MOVAR	r0x1047
     0008 21rr                      1- 2029     	MOVIA	((_table + 0) >> 8) & 0xff
     0009 0C03                      1- 2030     	BTRSC	STATUS,0
     000A 2501                      1- 2031     	ADDIA	0x01
                                    1- 2032     	BANKSEL	r0x1048
     000B 00rr                      1- 2033     	MOVAR	r0x1048
                                    1- 2034     	BANKSEL	r0x1047
     000C 01rr                      1- 2035     	MOVR	r0x1047,W
     000D 00rr                      1- 2036     	MOVAR	STK01
                                    1- 2037     	BANKSEL	r0x1048
     000E 01rr                      1- 2038     	MOVR	r0x1048,W
     000F 00rr                      1- 2039     	MOVAR	STK00
     0010 2100                      1- 2040     	MOVIA	0x00
     0011 2rrr                      1- 2041     	LCALL	__gptrget1
                                    1- 2042     	BANKSEL	r0x1049
     0012 00rr                      1- 2043     	MOVAR	r0x1049
     0013 2rrr                      1- 2044     	LCALL	_ind_light_disp
                                    1- 2045     	.line	241, "main.c"; 	COM1 = 1;
     0014 1Arr                      1- 2046     	BSR	_PORTB,5
                                    1- 2047     	.line	242, "main.c"; 	COM2 = 0;
     0015 1Drr                      1- 2048     	BCR	_PORTB,3
                                    1- 2049     	.line	243, "main.c"; 	delay_us(100);
     0016 2164                      1- 2050     	MOVIA	0x64
     0017 2rrr                      1- 2051     	LCALL	_delay_us
                                    1- 2052     	.line	244, "main.c"; 	COM1 = 1;
     0018 1Arr                      1- 2053     	BSR	_PORTB,5
                                    1- 2054     	.line	245, "main.c"; 	COM2 = 1;
     0019 19rr                      1- 2055     	BSR	_PORTB,3
     001A                           1- 2056     _00255_DS_:
                                    1- 2057     	.line	247, "main.c"; 	ind_light_disp(table[gewei]);
                                    1- 2058     	BANKSEL	_gewei
     001A 01rr                      1- 2059     	MOVR	_gewei,W
     001B 25rr                      1- 2060     	ADDIA	(_table + 0)
                                    1- 2061     	BANKSEL	r0x1047
     001C 00rr                      1- 2062     	MOVAR	r0x1047
     001D 21rr                      1- 2063     	MOVIA	((_table + 0) >> 8) & 0xff
     001E 0C03                      1- 2064     	BTRSC	STATUS,0
     001F 2501                      1- 2065     	ADDIA	0x01
                                    1- 2066     	BANKSEL	r0x1048
     0020 00rr                      1- 2067     	MOVAR	r0x1048
                                    1- 2068     	BANKSEL	r0x1047
     0021 01rr                      1- 2069     	MOVR	r0x1047,W
     0022 00rr                      1- 2070     	MOVAR	STK01
                                    1- 2071     	BANKSEL	r0x1048
     0023 01rr                      1- 2072     	MOVR	r0x1048,W
     0024 00rr                      1- 2073     	MOVAR	STK00
     0025 2100                      1- 2074     	MOVIA	0x00
     0026 2rrr                      1- 2075     	LCALL	__gptrget1
                                    1- 2076     	BANKSEL	r0x1049
     0027 00rr                      1- 2077     	MOVAR	r0x1049
     0028 2rrr                      1- 2078     	LCALL	_ind_light_disp
                                    1- 2079     	.line	248, "main.c"; 	COM1 = 0;
     0029 1Err                      1- 2080     	BCR	_PORTB,5
                                    1- 2081     	.line	249, "main.c"; 	COM2 = 1;
     002A 19rr                      1- 2082     	BSR	_PORTB,3
                                    1- 2083     	.line	250, "main.c"; 	delay_us(100);
     002B 2164                      1- 2084     	MOVIA	0x64
     002C 2rrr                      1- 2085     	LCALL	_delay_us
                                    1- 2086     	.line	251, "main.c"; 	COM1 = 1;
     002D 1Arr                      1- 2087     	BSR	_PORTB,5
                                    1- 2088     	.line	252, "main.c"; 	COM2 = 1;
     002E 19rr                      1- 2089     	BSR	_PORTB,3
                                    1- 2090     	.line	253, "main.c"; 	}
                                    1- 2091     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 2092     ; exit point of _refresh
                                    1- 2094     ;***
                                    1- 2095     ;  pBlock Stats: dbName = C
                                    1- 2096     ;***
                                    1- 2097     ;has an exit
                                    1- 2098     ;functions called:
                                    1- 2099     ;   _keyRead
                                    1- 2100     ;   _keyRead2
                                    1- 2101     ;   _keyRead2
                                    1- 2102     ;   _keyRead
                                    1- 2103     ;   _keyRead2
                                    1- 2104     ;   _keyRead2
                                    1- 2105     ;7 compiler assigned registers:
                                    1- 2106     ;   r0x104A
                                    1- 2107     ;   r0x104B
                                    1- 2108     ;   r0x104C
                                    1- 2109     ;   r0x104D
                                    1- 2110     ;   STK02
                                    1- 2111     ;   STK01
                                    1- 2112     ;   STK00
                                    1- 2113     ;; Starting pCode block
                                    1- 2114     .segment "code"; module=main, function=_keyCtr
                                    1- 2116     ;local variable name mapping:
     0000                           1- 2118     _keyCtr:
                                    1- 2119     ; 2 exit points
                                    1- 2120     	.line	205, "main.c"; 	uint8_t kclick = keyRead(0x20 & ~PORTA);
     0000 07rr                      1- 2121     	COMR	_PORTA,W
                                    1- 2122     	BANKSEL	r0x104A
     0001 00rr                      1- 2123     	MOVAR	r0x104A
     0002 2120                      1- 2124     	MOVIA	0x20
     0003 10rr                      1- 2125     	ANDAR	r0x104A,F
     0004 01rr                      1- 2126     	MOVR	r0x104A,W
     0005 2rrr                      1- 2127     	LCALL	_keyRead
                                    1- 2128     	BANKSEL	r0x104A
     0006 00rr                      1- 2129     	MOVAR	r0x104A
                                    1- 2130     	.line	206, "main.c"; 	if(kclick == 1)
     0007 2401                      1- 2131     	XORIA	0x01
     0008 0903                      1- 2132     	BTRSS	STATUS,2
     0009 3rrr                      1- 2133     	LGOTO	_00237_DS_
                                    1- 2134     	.line	209, "main.c"; 	workStep = 0;
                                    1- 2135     	BANKSEL	_workStep
     000A 02rr                      1- 2136     	CLRR	_workStep
     000B 3rrr                      1- 2137     	LGOTO	_00238_DS_
     000C                           1- 2138     _00237_DS_:
                                    1- 2139     	.line	211, "main.c"; 	else if(kclick == 2)
                                    1- 2140     	BANKSEL	r0x104A
     000C 01rr                      1- 2141     	MOVR	r0x104A,W
     000D 2402                      1- 2142     	XORIA	0x02
     000E 0903                      1- 2143     	BTRSS	STATUS,2
     000F 3rrr                      1- 2144     	LGOTO	_00238_DS_
                                    1- 2145     	.line	213, "main.c"; 	workStep = 1;
     0010 2101                      1- 2146     	MOVIA	0x01
                                    1- 2147     	BANKSEL	_workStep
     0011 00rr                      1- 2148     	MOVAR	_workStep
     0012                           1- 2149     _00238_DS_:
                                    1- 2150     	.line	215, "main.c"; 	if(workStep)
                                    1- 2151     	BANKSEL	_workStep
     0012 01rr                      1- 2152     	MOVR	_workStep,W
     0013 0D03                      1- 2153     	BTRSC	STATUS,2
     0014 3rrr                      1- 2154     	LGOTO	_00249_DS_
                                    1- 2155     	.line	217, "main.c"; 	if(keyRead2((0x08 & ~PORTA),&keyCount2))
     0015 07rr                      1- 2156     	COMR	_PORTA,W
                                    1- 2157     	BANKSEL	r0x104A
     0016 00rr                      1- 2158     	MOVAR	r0x104A
     0017 2108                      1- 2159     	MOVIA	0x08
     0018 10rr                      1- 2160     	ANDAR	r0x104A,F
     0019 21rr                      1- 2161     	MOVIA	((_keyCount2 + 0) >> 8) & 0xff
                                    1- 2162     	BANKSEL	r0x104B
     001A 00rr                      1- 2163     	MOVAR	r0x104B
     001B 21rr                      1- 2164     	MOVIA	(_keyCount2 + 0)
                                    1- 2165     	BANKSEL	r0x104C
     001C 00rr                      1- 2166     	MOVAR	r0x104C
                                    1- 2167     	BANKSEL	r0x104D
     001D 02rr                      1- 2168     	CLRR	r0x104D
                                    1- 2169     	BANKSEL	r0x104C
     001E 01rr                      1- 2170     	MOVR	r0x104C,W
     001F 00rr                      1- 2171     	MOVAR	STK02
                                    1- 2172     	BANKSEL	r0x104B
     0020 01rr                      1- 2173     	MOVR	r0x104B,W
     0021 00rr                      1- 2174     	MOVAR	STK01
     0022 2100                      1- 2175     	MOVIA	0x00
     0023 00rr                      1- 2176     	MOVAR	STK00
                                    1- 2177     	BANKSEL	r0x104A
     0024 01rr                      1- 2178     	MOVR	r0x104A,W
     0025 2rrr                      1- 2179     	LCALL	_keyRead2
                                    1- 2180     	BANKSEL	r0x104A
     0026 00rr                      1- 2181     	MOVAR	r0x104A
     0027 01rr                      1- 2182     	MOVR	r0x104A,W
     0028 0D03                      1- 2183     	BTRSC	STATUS,2
     0029 3rrr                      1- 2184     	LGOTO	_00242_DS_
                                    1- 2185     	.line	220, "main.c"; 	if(++workStep >= 9)
                                    1- 2186     	BANKSEL	_workStep
     002A 05rr                      1- 2187     	INCR	_workStep,F
                                    1- 2188     ;;unsigned compare: left < lit (0x9=9), size=1
     002B 2109                      1- 2189     	MOVIA	0x09
     002C 04rr                      1- 2190     	SUBAR	_workStep,W
     002D 0803                      1- 2191     	BTRSS	STATUS,0
     002E 3rrr                      1- 2192     	LGOTO	_00242_DS_
                                    1- 2193     	.line	221, "main.c"; 	workStep = 9;
     002F 2109                      1- 2194     	MOVIA	0x09
     0030 00rr                      1- 2195     	MOVAR	_workStep
     0031                           1- 2196     _00242_DS_:
                                    1- 2197     	.line	224, "main.c"; 	if(keyRead2((0x01 & ~PORTB),&keyCount3))
     0031 07rr                      1- 2198     	COMR	_PORTB,W
                                    1- 2199     	BANKSEL	r0x104A
     0032 00rr                      1- 2200     	MOVAR	r0x104A
     0033 2101                      1- 2201     	MOVIA	0x01
     0034 10rr                      1- 2202     	ANDAR	r0x104A,F
     0035 21rr                      1- 2203     	MOVIA	((_keyCount3 + 0) >> 8) & 0xff
                                    1- 2204     	BANKSEL	r0x104B
     0036 00rr                      1- 2205     	MOVAR	r0x104B
     0037 21rr                      1- 2206     	MOVIA	(_keyCount3 + 0)
                                    1- 2207     	BANKSEL	r0x104C
     0038 00rr                      1- 2208     	MOVAR	r0x104C
                                    1- 2209     	BANKSEL	r0x104D
     0039 02rr                      1- 2210     	CLRR	r0x104D
                                    1- 2211     	BANKSEL	r0x104C
     003A 01rr                      1- 2212     	MOVR	r0x104C,W
     003B 00rr                      1- 2213     	MOVAR	STK02
                                    1- 2214     	BANKSEL	r0x104B
     003C 01rr                      1- 2215     	MOVR	r0x104B,W
     003D 00rr                      1- 2216     	MOVAR	STK01
     003E 2100                      1- 2217     	MOVIA	0x00
     003F 00rr                      1- 2218     	MOVAR	STK00
                                    1- 2219     	BANKSEL	r0x104A
     0040 01rr                      1- 2220     	MOVR	r0x104A,W
     0041 2rrr                      1- 2221     	LCALL	_keyRead2
                                    1- 2222     	BANKSEL	r0x104A
     0042 00rr                      1- 2223     	MOVAR	r0x104A
     0043 01rr                      1- 2224     	MOVR	r0x104A,W
     0044 0D03                      1- 2225     	BTRSC	STATUS,2
     0045 3rrr                      1- 2226     	LGOTO	_00249_DS_
                                    1- 2227     	.line	227, "main.c"; 	if(--workStep <= 1)
                                    1- 2228     	BANKSEL	_workStep
     0046 06rr                      1- 2229     	DECR	_workStep,F
                                    1- 2230     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2231     ;;unsigned compare: left >= lit (0x2=2), size=1
     0047 2102                      1- 2232     	MOVIA	0x02
     0048 04rr                      1- 2233     	SUBAR	_workStep,W
     0049 0C03                      1- 2234     	BTRSC	STATUS,0
     004A 3rrr                      1- 2235     	LGOTO	_00249_DS_
                                    1- 2236     	.line	228, "main.c"; 	workStep = 1;
     004B 2101                      1- 2237     	MOVIA	0x01
     004C 00rr                      1- 2238     	MOVAR	_workStep
     004D                           1- 2239     _00249_DS_:
                                    1- 2240     	.line	231, "main.c"; 	}
                                    1- 2241     	RETURN	
     004D 0010                      3-   26 m1      ret
                                    1- 2242     ; exit point of _keyCtr
                                    1- 2244     ;***
                                    1- 2245     ;  pBlock Stats: dbName = C
                                    1- 2246     ;***
                                    1- 2247     ;has an exit
                                    1- 2248     ;; Starting pCode block
                                    1- 2249     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2251     _chrgCtr:
                                    1- 2252     ; 2 exit points
                                    1- 2253     	.line	181, "main.c"; 	if(PORTB & 0x02)
     0000 08rr                      1- 2254     	BTRSS	_PORTB,1
     0001 3rrr                      1- 2255     	LGOTO	_00215_DS_
                                    1- 2256     	.line	184, "main.c"; 	chrgStep = 1;
     0002 2101                      1- 2257     	MOVIA	0x01
                                    1- 2258     	BANKSEL	_chrgStep
     0003 00rr                      1- 2259     	MOVAR	_chrgStep
                                    1- 2260     	.line	185, "main.c"; 	workStep = 0;
                                    1- 2261     	BANKSEL	_workStep
     0004 02rr                      1- 2262     	CLRR	_workStep
                                    1- 2263     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2264     ;;unsigned compare: left >= lit (0x33=51), size=2
                                    1- 2265     	.line	186, "main.c"; 	if(batValue > 50)
     0005 2100                      1- 2266     	MOVIA	0x00
                                    1- 2267     	BANKSEL	_batValue
     0006 04rr                      1- 2268     	SUBAR	(_batValue + 1),W
     0007 0903                      1- 2269     	BTRSS	STATUS,2
     0008 3rrr                      1- 2270     	LGOTO	_00228_DS_
     0009 2133                      1- 2271     	MOVIA	0x33
     000A 04rr                      1- 2272     	SUBAR	_batValue,W
     000B                           1- 2273     _00228_DS_:
     000B 0803                      1- 2274     	BTRSS	STATUS,0
     000C 3rrr                      1- 2275     	LGOTO	_00212_DS_
                                    1- 2276     	.line	188, "main.c"; 	LEDHON();
     000D 1Arr                      1- 2277     	BSR	_PORTA,4
                                    1- 2278     	.line	189, "main.c"; 	LEDLOFF();
     000E 1Crr                      1- 2279     	BCR	_PORTA,0
     000F 3rrr                      1- 2280     	LGOTO	_00217_DS_
                                    1- 2281     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2282     ;;unsigned compare: left >= lit (0x33=51), size=2
     0010                           1- 2283     _00212_DS_:
                                    1- 2284     	.line	191, "main.c"; 	else if(batValue <= 50)
     0010 2100                      1- 2285     	MOVIA	0x00
                                    1- 2286     	BANKSEL	_batValue
     0011 04rr                      1- 2287     	SUBAR	(_batValue + 1),W
     0012 0903                      1- 2288     	BTRSS	STATUS,2
     0013 3rrr                      1- 2289     	LGOTO	_00229_DS_
     0014 2133                      1- 2290     	MOVIA	0x33
     0015 04rr                      1- 2291     	SUBAR	_batValue,W
     0016                           1- 2292     _00229_DS_:
     0016 0C03                      1- 2293     	BTRSC	STATUS,0
     0017 3rrr                      1- 2294     	LGOTO	_00217_DS_
                                    1- 2295     	.line	193, "main.c"; 	LEDHOFF();
     0018 1Err                      1- 2296     	BCR	_PORTA,4
                                    1- 2297     	.line	194, "main.c"; 	LEDLON();
     0019 18rr                      1- 2298     	BSR	_PORTA,0
     001A 3rrr                      1- 2299     	LGOTO	_00217_DS_
     001B                           1- 2300     _00215_DS_:
                                    1- 2301     	.line	199, "main.c"; 	chrgStep = 0;
                                    1- 2302     	BANKSEL	_chrgStep
     001B 02rr                      1- 2303     	CLRR	_chrgStep
     001C                           1- 2304     _00217_DS_:
                                    1- 2305     	.line	201, "main.c"; 	}
                                    1- 2306     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1- 2307     ; exit point of _chrgCtr
                                    1- 2310     ;	code size estimation:
                                    1- 2311     ;	  853+  214 =  1067 instructions ( 2562 byte)
                                    1- 2313     	end
                                    1- 2313     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuint               Label    00000000
__gptrget1              Label    00000000
__gptrput1              Label    00000000
__moduint               Label    00000000
__mulchar               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810613
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001F
_00002_DS_              Label    0000001F
_00003_DS_              Label    0000001B
_00004_DS_              Label    0000001B
_00005_DS_              Label    00000048
_00108_DS_              Label    00000019
_00110_DS_              Label    0000001D
_00116_DS_              Label    00000046
_00119_DS_              Label    00000049
_00121_DS_              Label    0000005B
_00124_DS_              Label    00000053
_00127_DS_              Label    0000004B
_00128_DS_              Label    0000005D
_00134_DS_              Label    0000006B
_00135_DS_              Label    0000006C
_00139_DS_              Label    0000008D
_00143_DS_              Label    00000084
_00148_DS_              Label    00000074
_00151_DS_              Label    0000001D
_00204_DS_              Label    0000002B
_00212_DS_              Label    00000010
_00215_DS_              Label    0000001B
_00217_DS_              Label    0000001C
_00228_DS_              Label    0000000B
_00229_DS_              Label    00000016
_00237_DS_              Label    0000000C
_00238_DS_              Label    00000012
_00242_DS_              Label    00000031
_00249_DS_              Label    0000004D
_00255_DS_              Label    0000001A
_00261_DS_              Label    00000009
_00262_DS_              Label    0000000B
_00264_DS_              Label    00000002
_00276_DS_              Label    0000001A
_00277_DS_              Label    00000021
_00279_DS_              Label    00000012
_00280_DS_              Label    00000022
_00281_DS_              Label    00000023
_00289_DS_              Label    0000003C
_00291_DS_              Label    00000027
_00292_DS_              Label    00000044
_00293_DS_              Label    00000045
_00305_DS_              Label    00000031
_00306_DS_              Label    0000003D
_00315_DS_              Label    0000002A
_00316_DS_              Label    00000037
_00327_DS_              Label    0000000A
_00329_DS_              Label    00000021
_00336_DS_              Label    0000000A
_00338_DS_              Label    00000021
_00343_DS_              Label    00000000
_00356_DS_              Label    00000001
_00359_DS_              Label    00000007
_00366_DS_              Label    0000000B
_00378_DS_              Label    0000001C
_00379_DS_              Label    00000022
_00381_DS_              Label    00000028
_00384_DS_              Label    0000003A
_00390_DS_              Label    00000058
_00395_DS_              Label    0000002B
_00398_DS_              Label    00000060
_00399_DS_              Label    00000062
_00403_DS_              Label    00000070
_00405_DS_              Label    0000007A
_00443_DS_              Label    00000007
_00446_DS_              Label    00000034
_00447_DS_              Label    0000004E
_00450_DS_              Label    0000006B
_00451_DS_              Label    00000076
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_adCheckTime            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_batValue               Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBatAD             Label    00000000
_checkPWAAD             Label    00000000
_chrgCtr                Label    00000000
_chrgStep               Label    00000000
_count3S                Label    00000000
_delay_us               Label    00000000
_Delay10Us              Label    00000000
_duty                   Label    00000000
_F_AIN2_Convert         Label    00000000
_F_AIN9_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_firstTime              Label    00000000
_FSR                    Label    00000000
_gewei                  Label    00000000
_gotoSleep              Label    00000000
_ind_light_disp         Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCount2              Label    00000000
_keyCount3              Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_keyRead2               Label    00000000
_longPressFlag          Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_R_AIN9_DATA            Label    00000000
_R_AIN9_DATA_LB         Label    00000000
_refresh                Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_shiwei                 Label    00000000
_sleepTime              Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_table                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    0000002B
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1037                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103E                 Label    00000000
r0x103F                 Label    00000000
r0x1040                 Label    00000000
r0x1041                 Label    00000000
r0x1042                 Label    00000000
r0x1043                 Label    00000000
r0x1044                 Label    00000000
r0x1045                 Label    00000000
r0x1046                 Label    00000000
r0x1047                 Label    00000000
r0x1048                 Label    00000000
r0x1049                 Label    00000000
r0x104A                 Label    00000000
r0x104B                 Label    00000000
r0x104C                 Label    00000000
r0x104D                 Label    00000000
r0x104E                 Label    00000000
r0x104F                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b061d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B061D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000005FF
DATA ROM     = 0x00000000 - 0x000005FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
