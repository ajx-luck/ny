
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showBaiwei
                                    1-   24     	extern	_B1
                                    1-   25     	extern	_C1
                                    1-   26     	extern	_A2
                                    1-   27     	extern	_B2
                                    1-   28     	extern	_C2
                                    1-   29     	extern	_D2
                                    1-   30     	extern	_E2
                                    1-   31     	extern	_F2
                                    1-   32     	extern	_G2
                                    1-   33     	extern	_A3
                                    1-   34     	extern	_B3
                                    1-   35     	extern	_C3
                                    1-   36     	extern	_D3
                                    1-   37     	extern	_E3
                                    1-   38     	extern	_F3
                                    1-   39     	extern	_G3
                                    1-   40     	extern	_delayms
                                    1-   41     	extern	__divuint
                                    1-   42     	extern	__divuchar
                                    1-   43     	extern	__moduchar
                                    1-   44     	extern	__moduint
                                    1-   45     	extern	_PORTAbits
                                    1-   46     	extern	_PORTBbits
                                    1-   47     	extern	_PCONbits
                                    1-   48     	extern	_BWUCONbits
                                    1-   49     	extern	_ABPLCONbits
                                    1-   50     	extern	_BPHCONbits
                                    1-   51     	extern	_INTEbits
                                    1-   52     	extern	_INTFbits
                                    1-   53     	extern	_ADMDbits
                                    1-   54     	extern	_ADRbits
                                    1-   55     	extern	_ADVREFHbits
                                    1-   56     	extern	_ADCRbits
                                    1-   57     	extern	_AWUCONbits
                                    1-   58     	extern	_PACONbits
                                    1-   59     	extern	_INTEDGbits
                                    1-   60     	extern	_ANAENbits
                                    1-   61     	extern	_RFCbits
                                    1-   62     	extern	_INTE2bits
                                    1-   63     	extern	_INDF
                                    1-   64     	extern	_TMR0
                                    1-   65     	extern	_PCL
                                    1-   66     	extern	_STATUS
                                    1-   67     	extern	_FSR
                                    1-   68     	extern	_PORTA
                                    1-   69     	extern	_PORTB
                                    1-   70     	extern	_PCON
                                    1-   71     	extern	_BWUCON
                                    1-   72     	extern	_PCHBUF
                                    1-   73     	extern	_ABPLCON
                                    1-   74     	extern	_BPHCON
                                    1-   75     	extern	_INTE
                                    1-   76     	extern	_INTF
                                    1-   77     	extern	_ADMD
                                    1-   78     	extern	_ADR
                                    1-   79     	extern	_ADD
                                    1-   80     	extern	_ADVREFH
                                    1-   81     	extern	_ADCR
                                    1-   82     	extern	_AWUCON
                                    1-   83     	extern	_PACON
                                    1-   84     	extern	_INTEDG
                                    1-   85     	extern	_TMRH
                                    1-   86     	extern	_ANAEN
                                    1-   87     	extern	_RFC
                                    1-   88     	extern	_TM3RH
                                    1-   89     	extern	_INTE2
                                    1-   90     	extern	_TMR1
                                    1-   91     	extern	_T1CR1
                                    1-   92     	extern	_T1CR2
                                    1-   93     	extern	_PWM1DUTY
                                    1-   94     	extern	_PS1CV
                                    1-   95     	extern	_BZ1CR
                                    1-   96     	extern	_IRCR
                                    1-   97     	extern	_TBHP
                                    1-   98     	extern	_TBHD
                                    1-   99     	extern	_TMR2
                                    1-  100     	extern	_T2CR1
                                    1-  101     	extern	_T2CR2
                                    1-  102     	extern	_PWM2DUTY
                                    1-  103     	extern	_PS2CV
                                    1-  104     	extern	_BZ2CR
                                    1-  105     	extern	_OSCCR
                                    1-  106     	extern	_TMR3
                                    1-  107     	extern	_T3CR1
                                    1-  108     	extern	_T3CR2
                                    1-  109     	extern	_PWM3DUTY
                                    1-  110     	extern	_PS3CV
                                    1-  111     	extern	_BZ3CR
                                    1-  112     	extern	_IOSTA
                                    1-  113     	extern	_IOSTB
                                    1-  114     	extern	_APHCON
                                    1-  115     	extern	_PS0CV
                                    1-  116     	extern	_BODCON
                                    1-  117     	extern	_CMPCR
                                    1-  118     	extern	_PCON1
                                    1-  119     	extern	_T0MD
                                    1-  120     	extern	___sdcc_saved_fsr
                                    1-  121     	extern	___sdcc_saved_stk00
                                    1-  122     	extern	___sdcc_saved_stk01
                                    1-  123     	extern	__gptrget1
                                    1-  124     	extern	__nyc_ny8_startup
                                    1-  125     ;--------------------------------------------------------
                                    1-  126     ; global declarations
                                    1-  127     ;--------------------------------------------------------
                                    1-  128     	extern	_delay
                                    1-  129     	extern	_F_wait_eoc
                                    1-  130     	extern	_gotoSleep
                                    1-  131     	extern	_keyRead
                                    1-  132     	extern	_ledCon
                                    1-  133     	extern	_pwmStop
                                    1-  134     	extern	_pwmStart
                                    1-  135     	extern	_setPWMdutyG
                                    1-  136     	extern	_setPWMduty
                                    1-  137     	extern	_pwmCtr
                                    1-  138     	extern	_F_AIN9_Convert
                                    1-  139     	extern	_F_AIN5_Convert
                                    1-  140     	extern	_checkBatAD
                                    1-  141     	extern	_checkLowWater
                                    1-  142     	extern	_keyCon
                                    1-  143     	extern	_workCtr
                                    1-  144     	extern	_refreshNub
                                    1-  145     	extern	_isr
                                    1-  146     	extern	_main
                                    1-  147     	extern	_initAD
                                    1-  148     	extern	_intCount
                                    1-  149     	extern	_IntFlag
                                    1-  150     	extern	_workStep
                                    1-  151     	extern	_ledCount
                                    1-  152     	extern	_sleepDelay
                                    1-  153     	extern	_step2Count
                                    1-  154     	extern	_longPressFlag
                                    1-  155     	extern	_count500ms
                                    1-  156     	extern	_count10ms
                                    1-  157     	extern	_count1s
                                    1-  158     	extern	_tempbaiweiNum
                                    1-  159     	extern	_tempshiweiNum
                                    1-  160     	extern	_tempgeweiNum
                                    1-  161     	extern	_refreshCount
                                    1-  162     	extern	_baiweiNum
                                    1-  163     	extern	_shiweiNum
                                    1-  164     	extern	_geweiNum
                                    1-  165     	extern	_klcikTime
                                    1-  166     	extern	_count300s
                                    1-  167     	extern	_count60s
                                    1-  168     	extern	_RDUTY
                                    1-  169     	extern	_GDUTY
                                    1-  170     	extern	_BDUTY
                                    1-  171     	extern	_ledFlag
                                    1-  172     	extern	_ledAddFlag
                                    1-  173     	extern	_keyCount
                                    1-  174     	extern	_keyClick
                                    1-  175     	extern	_douClickFlag
                                    1-  176     	extern	_R_AIN5_DATA
                                    1-  177     	extern	_R_AIN5_DATA_LB
                                    1-  178     	extern	_R_AIN9_DATA
                                    1-  179     	extern	_R_AIN9_DATA_LB
                                    1-  180     	extern	_sumR_AIN5_DATA
                                    1-  181     	extern	_addtime
                                    1-  182     	extern	_lowWaterTime
                                    1-  183     	extern	_lowPowerTime
                                    1-  184     	extern	_numArray
                                    1-  186     	extern PSAVE
                                    1-  187     	extern SSAVE
                                    1-  188     	extern WSAVE
                                    1-  189     	extern STK04
                                    1-  190     	extern STK03
                                    1-  191     	extern STK02
                                    1-  192     	extern STK01
                                    1-  193     	extern STK00
                                    1-  195     .segment "uninit", 0x20000040
 20000040                           1-  196     PSAVE:
                                    1-  197     	.res 1
 20000041                           1-  198     SSAVE:
                                    1-  199     	.res 1
 20000042                           1-  200     WSAVE:
                                    1-  201     	.res 1
 20000043                           1-  202     STK04:
                                    1-  203     	.res 1
 20000044                           1-  204     STK03:
                                    1-  205     	.res 1
 20000045                           1-  206     STK02:
                                    1-  207     	.res 1
 20000046                           1-  208     STK01:
                                    1-  209     	.res 1
 20000047                           1-  210     STK00:
                                    1-  211     	.res 1
                                    1-  213     ;--------------------------------------------------------
                                    1-  214     ; global definitions
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     .segment "uninit"
     0000                           1-  217     _R_AIN5_DATA:
                                    1-  218     	.res	2
                                    1-  221     .segment "uninit"
     0000                           1-  222     _R_AIN5_DATA_LB:
                                    1-  223     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     _R_AIN9_DATA:
                                    1-  228     	.res	2
                                    1-  231     .segment "uninit"
     0000                           1-  232     _R_AIN9_DATA_LB:
                                    1-  233     	.res	1
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; absolute symbol definitions
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ; compiler-defined variables
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1058:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1059:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x105A:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1057:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1051:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1052:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1053:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1054:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1055:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1056:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1049:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x104A:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x104B:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x104E:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1043:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1044:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1045:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1048:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1041:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x1042:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x103F:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1040:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x103E:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x103B:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1038:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1037:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x1039:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x103A:
                                    1-  325     	.res	1
                                    1-  326     ;--------------------------------------------------------
                                    1-  327     ; initialized data
                                    1-  328     ;--------------------------------------------------------
                                    1-  330     .segment "idata"
     0000                           1-  331     _intCount:
     0000 0000                      1-  332     	dw	0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _IntFlag:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _workStep:
     0000 0000                      1-  344     	dw	0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _ledCount:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _sleepDelay:
     0000 0000                      1-  356     	dw	0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _step2Count:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _longPressFlag:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _count500ms:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _count10ms:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _count1s:
     0000 0000                      1-  386     	dw	0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _tempbaiweiNum:
     0000 0000                      1-  392     	dw	0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _tempshiweiNum:
     0000 0000                      1-  398     	dw	0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _tempgeweiNum:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _refreshCount:
     0000 0000                      1-  410     	dw	0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _baiweiNum:
     0000 0000                      1-  416     	dw	0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _shiweiNum:
     0000 0000                      1-  422     	dw	0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _geweiNum:
     0000 0000                      1-  428     	dw	0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _klcikTime:
     0000 0000 0000                 1-  434     	dw	0x00, 0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _count300s:
     0000 0000 0000                 1-  440     	dw	0x00, 0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _count60s:
     0000 0000 0000                 1-  446     	dw	0x00, 0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _RDUTY:
     0000 0000                      1-  452     	dw	0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _GDUTY:
     0000 0000                      1-  458     	dw	0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _BDUTY:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _ledFlag:
     0000 0000                      1-  470     	dw	0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _ledAddFlag:
     0000 0000                      1-  476     	dw	0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _keyCount:
     0000 0000                      1-  482     	dw	0x00
                                    1-  486     .segment "idata"
     0000                           1-  487     _keyClick:
     0000 0000                      1-  488     	dw	0x00
                                    1-  492     .segment "idata"
     0000                           1-  493     _douClickFlag:
     0000 0000                      1-  494     	dw	0x00
                                    1-  498     .segment "idata"
     0000                           1-  499     _sumR_AIN5_DATA:
     0000 0000 0000                 1-  500     	dw	0x00, 0x00
                                    1-  504     .segment "idata"
     0000                           1-  505     _addtime:
     0000 0000                      1-  506     	dw	0x00
                                    1-  510     .segment "idata"
     0000                           1-  511     _lowWaterTime:
     0000 0000                      1-  512     	dw	0x00
                                    1-  516     .segment "idata"
     0000                           1-  517     _lowPowerTime:
     0000 0000                      1-  518     	dw	0x00
                                    1-  522     .segment "idata"
     0000                           1-  523     _numArray:
     0000 003F                      1-  524     	dw	0x3f
     0001 0006                      1-  525     	dw	0x06
     0002 005B                      1-  526     	dw	0x5b
     0003 004F                      1-  527     	dw	0x4f
     0004 0066                      1-  528     	dw	0x66
     0005 006D                      1-  529     	dw	0x6d
     0006 007D                      1-  530     	dw	0x7d
     0007 0007                      1-  531     	dw	0x07
     0008 007F                      1-  532     	dw	0x7f
     0009 0067                      1-  533     	dw	0x67
                                    1-  536     ;--------------------------------------------------------
                                    1-  537     ; overlayable items in internal ram 
                                    1-  538     ;--------------------------------------------------------
                                    1-  539     ;	udata_ovr
                                    1-  540     ;--------------------------------------------------------
                                    1-  541     ; reset vector 
                                    1-  542     ;--------------------------------------------------------
                                    1-  543     ORG	0x0000
     0000 3rrr                      1-  544     	LGOTO	__nyc_ny8_startup
                                    1-  545     ;--------------------------------------------------------
                                    1-  546     ; interrupt and initialization code
                                    1-  547     ;--------------------------------------------------------
                                    1-  548     ORG 0x0008
     0008 3rrr                      1-  549     	lgoto	__sdcc_interrupt
                                    1-  551     .segment "code"
     0000                           1-  552     __sdcc_interrupt:
                                    1-  553     ;***
                                    1-  554     ;  pBlock Stats: dbName = I
                                    1-  555     ;***
                                    1-  556     ;functions called:
                                    1-  557     ;   _setPWMduty
                                    1-  558     ;   _setPWMdutyG
                                    1-  559     ;   _setPWMduty
                                    1-  560     ;   _setPWMduty
                                    1-  561     ;   _setPWMdutyG
                                    1-  562     ;   _setPWMduty
                                    1-  563     ;2 compiler assigned registers:
                                    1-  564     ;   STK00
                                    1-  565     ;   STK01
                                    1-  566     ;; Starting pCode block
     0000                           1-  567     _isr:
                                    1-  568     ; 0 exit points
                                    1-  569     	.line	75, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  570     	MOVAR	WSAVE
     0001 1503                      1-  571     	SWAPR	STATUS,W
     0002 0283                      1-  572     	CLRR	STATUS
     0003 00rr                      1-  573     	MOVAR	SSAVE
     0004 010A                      1-  574     	MOVR	PCHBUF,W
     0005 028A                      1-  575     	CLRR	PCHBUF
     0006 00rr                      1-  576     	MOVAR	PSAVE
     0007 0104                      1-  577     	MOVR	FSR,W
                                    1-  578     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  579     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  580     	MOVR	STK00,W
                                    1-  581     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  582     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  583     	MOVR	STK01,W
                                    1-  584     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  585     	MOVAR	___sdcc_saved_stk01
                                    1-  586     	.line	77, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  587     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  588     	LGOTO	_00122_DS_
                                    1-  589     	.line	79, "main.c"; 	TMR0 = 55;
     0012 2137                      1-  590     	MOVIA	0x37
     0013 00rr                      1-  591     	MOVAR	_TMR0
                                    1-  592     	.line	80, "main.c"; 	intCount++;
                                    1-  593     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  594     	INCR	_intCount,F
                                    1-  595     	.line	81, "main.c"; 	if(ledFlag)
                                    1-  596     	BANKSEL	_ledFlag
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1-  597     	MOVR	_ledFlag,W
     0018 0D03                      1-  598     	BTRSC	STATUS,2
     0019 3rrr                      1-  599     	LGOTO	_00106_DS_
                                    1-  600     	.line	83, "main.c"; 	setPWMduty(0x02,RDUTY);
                                    1-  601     	BANKSEL	_RDUTY
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  602     	MOVR	_RDUTY,W
     001C 00rr                      1-  603     	MOVAR	STK00
     001D 2102                      1-  604     	MOVIA	0x02
     001E 2rrr                      1-  605     	LCALL	_setPWMduty
                                    1-  606     	.line	84, "main.c"; 	setPWMdutyG(0x80,GDUTY);
                                    1-  607     	BANKSEL	_GDUTY
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  608     	MOVR	_GDUTY,W
     0021 00rr                      1-  609     	MOVAR	STK00
     0022 2180                      1-  610     	MOVIA	0x80
     0023 2rrr                      1-  611     	LCALL	_setPWMdutyG
                                    1-  612     	.line	85, "main.c"; 	setPWMduty(0x04,BDUTY);
                                    1-  613     	BANKSEL	_BDUTY
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  614     	MOVR	_BDUTY,W
     0026 00rr                      1-  615     	MOVAR	STK00
     0027 2104                      1-  616     	MOVIA	0x04
     0028 2rrr                      1-  617     	LCALL	_setPWMduty
                                    1-  618     	.line	86, "main.c"; 	ledCount++;
                                    1-  619     	BANKSEL	_ledCount
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 05rr                      1-  620     	INCR	_ledCount,F
     002B                           1-  621     _00106_DS_:
                                    1-  622     	.line	89, "main.c"; 	if(++intCount >= 100)
                                    1-  623     	BANKSEL	_intCount
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 05rr                      1-  624     	INCR	_intCount,F
                                    1-  625     ;;unsigned compare: left < lit (0x64=100), size=1
     002D 2164                      1-  626     	MOVIA	0x64
     002E 04rr                      1-  627     	SUBAR	_intCount,W
     002F 0803                      1-  628     	BTRSS	STATUS,0
     0030 3rrr                      1-  629     	LGOTO	_00122_DS_
                                    1-  630     	.line	91, "main.c"; 	intCount = 0;
     0031 02rr                      1-  631     	CLRR	_intCount
                                    1-  632     	.line	92, "main.c"; 	IntFlag = 1;
     0032 2101                      1-  633     	MOVIA	0x01
                                    1-  634     	BANKSEL	_IntFlag
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1-  635     	MOVAR	_IntFlag
                                    1-  636     	.line	94, "main.c"; 	if(klcikTime > 0)
                                    1-  637     	BANKSEL	_klcikTime
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1-  638     	MOVR	_klcikTime,W
     0037 11rr                      1-  639     	IORAR	(_klcikTime + 1),W
     0038 0D03                      1-  640     	BTRSC	STATUS,2
     0039 3rrr                      1-  641     	LGOTO	_00122_DS_
                                    1-  642     	.line	96, "main.c"; 	if(--klcikTime == 0)
     003A 21FF                      1-  643     	MOVIA	0xff
     003B 03rr                      1-  644     	ADDAR	_klcikTime,F
     003C 0803                      1-  645     	BTRSS	STATUS,0
     003D 06rr                      1-  646     	DECR	(_klcikTime + 1),F
     003E 01rr                      1-  647     	MOVR	_klcikTime,W
     003F 11rr                      1-  648     	IORAR	(_klcikTime + 1),W
     0040 0903                      1-  649     	BTRSS	STATUS,2
     0041 3rrr                      1-  650     	LGOTO	_00122_DS_
                                    1-  651     	.line	98, "main.c"; 	if(douClickFlag)
                                    1-  652     	BANKSEL	_douClickFlag
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1-  653     	MOVR	_douClickFlag,W
     0044 0D03                      1-  654     	BTRSC	STATUS,2
     0045 3rrr                      1-  655     	LGOTO	_00113_DS_
                                    1-  656     	.line	101, "main.c"; 	if(ledAddFlag)
                                    1-  657     	BANKSEL	_ledAddFlag
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1-  658     	MOVR	_ledAddFlag,W
     0048 0D03                      1-  659     	BTRSC	STATUS,2
     0049 3rrr                      1-  660     	LGOTO	_00108_DS_
                                    1-  661     	.line	102, "main.c"; 	ledAddFlag = 0;
     004A 02rr                      1-  662     	CLRR	_ledAddFlag
     004B 3rrr                      1-  663     	LGOTO	_00114_DS_
     004C                           1-  664     _00108_DS_:
                                    1-  665     	.line	104, "main.c"; 	ledAddFlag = 1;
     004C 2101                      1-  666     	MOVIA	0x01
                                    1-  667     	BANKSEL	_ledAddFlag
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1-  668     	MOVAR	_ledAddFlag
     004F 3rrr                      1-  669     	LGOTO	_00114_DS_
     0050                           1-  670     _00113_DS_:
                                    1-  671     	.line	108, "main.c"; 	if(++workStep >= 3)
                                    1-  672     	BANKSEL	_workStep
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 05rr                      1-  673     	INCR	_workStep,F
                                    1-  674     ;;unsigned compare: left < lit (0x3=3), size=1
     0052 2103                      1-  675     	MOVIA	0x03
     0053 04rr                      1-  676     	SUBAR	_workStep,W
     0054 0C03                      1-  677     	BTRSC	STATUS,0
                                    1-  678     	.line	109, "main.c"; 	workStep = 0;
     0055 02rr                      1-  679     	CLRR	_workStep
     0056                           1-  680     _00114_DS_:
                                    1-  681     	.line	111, "main.c"; 	douClickFlag = 0;
                                    1-  682     	BANKSEL	_douClickFlag
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 02rr                      1-  683     	CLRR	_douClickFlag
     0058                           1-  684     _00122_DS_:
                                    1-  685     	.line	117, "main.c"; 	if(INTFbits.T0IF)
     0058 08rr                      1-  686     	BTRSS	_INTFbits,0
     0059 3rrr                      1-  687     	LGOTO	_00124_DS_
                                    1-  688     	.line	119, "main.c"; 	INTF = 0;
     005A 02rr                      1-  689     	CLRR	_INTF
     005B                           1-  690     _00124_DS_:
                                    1-  691     	.line	122, "main.c"; 	if(INTFbits.PABIF)
     005B 08rr                      1-  692     	BTRSS	_INTFbits,1
     005C 3rrr                      1-  693     	LGOTO	_00126_DS_
                                    1-  694     	.line	124, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     005D 21FD                      1-  695     	MOVIA	0xfd
     005E 00rr                      1-  696     	MOVAR	_INTF
     005F                           1-  697     _00126_DS_:
                                    1-  698     	.line	127, "main.c"; 	INTF = 0;
     005F 02rr                      1-  699     	CLRR	_INTF
                                    1-  700     	.line	129, "main.c"; 	}
                                    1-  701     	BANKSEL	___sdcc_saved_stk01
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1-  702     	MOVR	___sdcc_saved_stk01,W
     0062 00rr                      1-  703     	MOVAR	STK01
                                    1-  704     	BANKSEL	___sdcc_saved_stk00
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 01rr                      1-  705     	MOVR	___sdcc_saved_stk00,W
     0065 00rr                      1-  706     	MOVAR	STK00
                                    1-  707     	BANKSEL	___sdcc_saved_fsr
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 01rr                      1-  708     	MOVR	___sdcc_saved_fsr,W
     0068 0084                      1-  709     	MOVAR	FSR
     0069 01rr                      1-  710     	MOVR	PSAVE,W
     006A 008A                      1-  711     	MOVAR	PCHBUF
     006B 0283                      1-  712     	CLRR	STATUS
     006C 15rr                      1-  713     	SWAPR	SSAVE,W
     006D 0083                      1-  714     	MOVAR	STATUS
     006E 15rr                      1-  715     	SWAPR	WSAVE,F
     006F 15rr                      1-  716     	SWAPR	WSAVE,W
     0070                           1-  717     END_OF_INTERRUPT:
     0070 0011                      1-  718     	RETIE	
                                    1-  720     ;--------------------------------------------------------
                                    1-  721     ; code
                                    1-  722     ;--------------------------------------------------------
                                    1-  723     ;***
                                    1-  724     ;  pBlock Stats: dbName = M
                                    1-  725     ;***
                                    1-  726     ;has an exit
                                    1-  727     ;functions called:
                                    1-  728     ;   _refreshNub
                                    1-  729     ;   _workCtr
                                    1-  730     ;   _refreshNub
                                    1-  731     ;   _workCtr
                                    1-  732     ;; Starting pCode block
                                    1-  733     .segment "code"; module=main, function=_main
     0000                           1-  735     _main:
                                    1-  736     ; 2 exit points
                                    1-  737     	.line	175, "main.c"; 	DISI();
     0000 0013                      1-  738     	DISI
                                    1-  739     	.line	176, "main.c"; 	IOSTA = C_PA6_Input;
     0001 2140                      1-  740     	MOVIA	0x40
     0002 000r                      1-  741     	IOST	_IOSTA
                                    1-  742     	.line	177, "main.c"; 	IOSTB = 0x11;
     0003 2111                      1-  743     	MOVIA	0x11
     0004 000r                      1-  744     	IOST	_IOSTB
                                    1-  745     	.line	178, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1-  746     	CLRR	_PORTB
                                    1-  747     	.line	179, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1-  748     	CLRR	_PORTA
                                    1-  749     	.line	180, "main.c"; 	APHCON = 0xBF;
     0007 21BF                      1-  750     	MOVIA	0xbf
     0008 000r                      1-  751     	IOST	_APHCON
                                    1-  752     	.line	182, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0009 2101                      1-  753     	MOVIA	0x01
     000A 00rr                      1-  754     	MOVAR	_INTE
                                    1-  755     	.line	184, "main.c"; 	PCON1 = C_TMR0_Dis;
     000B 0200                      1-  756     	CLRA	
     000C 000r                      1-  757     	IOST	_PCON1
                                    1-  758     	.line	186, "main.c"; 	TMR0 = 55;
     000D 2137                      1-  759     	MOVIA	0x37
     000E 00rr                      1-  760     	MOVAR	_TMR0
                                    1-  761     	.line	187, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     000F 0200                      1-  762     	CLRA	
     0010 0003                      1-  763     	T0MD	
                                    1-  764     	.line	189, "main.c"; 	PCON1 = C_TMR0_En;
     0011 2101                      1-  765     	MOVIA	0x01
     0012 000r                      1-  766     	IOST	_PCON1
                                    1-  767     	.line	191, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0013 2188                      1-  768     	MOVIA	0x88
     0014 00rr                      1-  769     	MOVAR	_PCON
                                    1-  770     	.line	194, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0015 2101                      1-  771     	MOVIA	0x01
     0016 000r                      1-  772     	IOST	_PCON1
                                    1-  773     	.line	195, "main.c"; 	ENI();
     0017 0004                      1-  774     	ENI
     0018                           1-  775     _00153_DS_:
                                    1-  776     	.line	199, "main.c"; 	CLRWDT();
     0018 0002                      1-  777     	clrwdt
                                    1-  778     	.line	200, "main.c"; 	if(!IntFlag)
                                    1-  779     	BANKSEL	_IntFlag
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  780     	MOVR	_IntFlag,W
     001B 0D03                      1-  781     	BTRSC	STATUS,2
     001C 3rrr                      1-  782     	LGOTO	_00153_DS_
                                    1-  783     	.line	202, "main.c"; 	IntFlag = 0;
     001D 02rr                      1-  784     	CLRR	_IntFlag
                                    1-  785     	.line	206, "main.c"; 	refreshNub();
     001E 2rrr                      1-  786     	LCALL	_refreshNub
                                    1-  787     	.line	208, "main.c"; 	workCtr();
     001F 2rrr                      1-  788     	LCALL	_workCtr
     0020 3rrr                      1-  789     	LGOTO	_00153_DS_
                                    1-  790     	.line	210, "main.c"; 	}
                                    1-  791     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1-  792     ; exit point of _main
                                    1-  794     ;***
                                    1-  795     ;  pBlock Stats: dbName = C
                                    1-  796     ;***
                                    1-  797     ;has an exit
                                    1-  798     ;5 compiler assigned registers:
                                    1-  799     ;   r0x1037
                                    1-  800     ;   STK00
                                    1-  801     ;   r0x1038
                                    1-  802     ;   r0x1039
                                    1-  803     ;   r0x103A
                                    1-  804     ;; Starting pCode block
                                    1-  805     .segment "code"; module=main, function=_delay
                                    1-  807     ;local variable name mapping:
     0000                           1-  812     _delay:
                                    1-  813     ; 2 exit points
                                    1-  814     	.line	621, "main.c"; 	void delay(u16t time)
                                    1-  815     	BANKSEL	r0x1037
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  816     	MOVAR	r0x1037
     0002 01rr                      1-  817     	MOVR	STK00,W
                                    1-  818     	BANKSEL	r0x1038
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  819     	MOVAR	r0x1038
                                    1-  820     	.line	623, "main.c"; 	for(u16t i=0;i<time;i++);
                                    1-  821     	BANKSEL	r0x1039
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  822     	CLRR	r0x1039
                                    1-  823     	BANKSEL	r0x103A
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  824     	CLRR	r0x103A
     0009                           1-  825     _00489_DS_:
                                    1-  826     	BANKSEL	r0x1037
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  827     	MOVR	r0x1037,W
                                    1-  828     	BANKSEL	r0x103A
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  829     	SUBAR	r0x103A,W
     000D 0903                      1-  830     	BTRSS	STATUS,2
     000E 3rrr                      1-  831     	LGOTO	_00500_DS_
                                    1-  832     	BANKSEL	r0x1038
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  833     	MOVR	r0x1038,W
                                    1-  834     	BANKSEL	r0x1039
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  835     	SUBAR	r0x1039,W
     0013                           1-  836     _00500_DS_:
     0013 0C03                      1-  837     	BTRSC	STATUS,0
     0014 3rrr                      1-  838     	LGOTO	_00491_DS_
                                    1-  839     	BANKSEL	r0x1039
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  840     	INCR	r0x1039,F
     0017 0903                      1-  841     	BTRSS	STATUS,2
     0018 3rrr                      1-  842     	LGOTO	_00001_DS_
                                    1-  843     	BANKSEL	r0x103A
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  844     	INCR	r0x103A,F
     001B                           1-  845     _00001_DS_:
     001B 3rrr                      1-  846     	LGOTO	_00489_DS_
     001C                           1-  847     _00491_DS_:
                                    1-  848     	.line	624, "main.c"; 	}
                                    1-  849     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  850     ; exit point of _delay
                                    1-  852     ;***
                                    1-  853     ;  pBlock Stats: dbName = C
                                    1-  854     ;***
                                    1-  855     ;has an exit
                                    1-  856     ;; Starting pCode block
                                    1-  857     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  859     _F_wait_eoc:
                                    1-  860     ; 2 exit points
     0000                           1-  861     _00482_DS_:
                                    1-  862     	.line	615, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  863     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  864     	LGOTO	_00482_DS_
                                    1-  865     	.line	617, "main.c"; 	}
                                    1-  866     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  867     ; exit point of _F_wait_eoc
                                    1-  869     ;***
                                    1-  870     ;  pBlock Stats: dbName = C
                                    1-  871     ;***
                                    1-  872     ;has an exit
                                    1-  873     ;functions called:
                                    1-  874     ;   _setInput
                                    1-  875     ;   _pwmStop
                                    1-  876     ;   _setInput
                                    1-  877     ;   _pwmStop
                                    1-  878     ;; Starting pCode block
                                    1-  879     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  881     _gotoSleep:
                                    1-  882     ; 2 exit points
                                    1-  883     	.line	592, "main.c"; 	setInput();
     0000 2rrr                      1-  884     	LCALL	_setInput
                                    1-  885     	.line	593, "main.c"; 	count500ms = 0;
                                    1-  886     	BANKSEL	_count500ms
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1-  887     	CLRR	_count500ms
                                    1-  888     	.line	594, "main.c"; 	count300s = 0;
                                    1-  889     	BANKSEL	_count300s
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1-  890     	CLRR	_count300s
     0005 02rr                      1-  891     	CLRR	(_count300s + 1)
                                    1-  892     	.line	595, "main.c"; 	pwmStop();
     0006 2rrr                      1-  893     	LCALL	_pwmStop
                                    1-  894     	.line	596, "main.c"; 	sleepDelay = 0;
                                    1-  895     	BANKSEL	_sleepDelay
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  896     	CLRR	_sleepDelay
                                    1-  897     	.line	597, "main.c"; 	workStep = 0;
                                    1-  898     	BANKSEL	_workStep
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1-  899     	CLRR	_workStep
                                    1-  900     	.line	598, "main.c"; 	AWUCON = 0x40;
     000B 2140                      1-  901     	MOVIA	0x40
     000C 00rr                      1-  902     	MOVAR	_AWUCON
                                    1-  903     	.line	599, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     000D 210B                      1-  904     	MOVIA	0x0b
     000E 00rr                      1-  905     	MOVAR	_INTE
                                    1-  906     	.line	600, "main.c"; 	PCON =  C_LVR_En;	
     000F 2108                      1-  907     	MOVIA	0x08
     0010 00rr                      1-  908     	MOVAR	_PCON
                                    1-  909     	.line	601, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0011 02rr                      1-  910     	CLRR	_INTF
                                    1-  911     	.line	602, "main.c"; 	CLRWDT();
     0012 0002                      1-  912     	clrwdt
                                    1-  913     	.line	603, "main.c"; 	ENI();
     0013 0004                      1-  914     	ENI
                                    1-  915     	.line	604, "main.c"; 	SLEEP();
     0014 0001                      1-  916     	sleep
                                    1-  917     	.line	605, "main.c"; 	AWUCON = 0x00;
     0015 02rr                      1-  918     	CLRR	_AWUCON
                                    1-  919     	.line	606, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0016 2101                      1-  920     	MOVIA	0x01
     0017 00rr                      1-  921     	MOVAR	_INTE
                                    1-  922     	.line	607, "main.c"; 	INTF = 0;
     0018 02rr                      1-  923     	CLRR	_INTF
                                    1-  924     	.line	609, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0019 21A8                      1-  925     	MOVIA	0xa8
     001A 00rr                      1-  926     	MOVAR	_PCON
                                    1-  927     	.line	611, "main.c"; 	}
                                    1-  928     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1-  929     ; exit point of _gotoSleep
                                    1-  931     ;***
                                    1-  932     ;  pBlock Stats: dbName = C
                                    1-  933     ;***
                                    1-  934     ;has an exit
                                    1-  935     ;1 compiler assigned register :
                                    1-  936     ;   r0x103B
                                    1-  937     ;; Starting pCode block
                                    1-  938     .segment "code"; module=main, function=_keyRead
                                    1-  940     ;local variable name mapping:
     0000                           1-  942     _keyRead:
                                    1-  943     ; 2 exit points
                                    1-  944     	.line	557, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  945     	BANKSEL	r0x103B
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  946     	MOVAR	r0x103B
                                    1-  947     	.line	559, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  948     	MOVR	r0x103B,W
     0003 0D03                      1-  949     	BTRSC	STATUS,2
     0004 3rrr                      1-  950     	LGOTO	_00471_DS_
                                    1-  951     	.line	561, "main.c"; 	keyCount++;
                                    1-  952     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  953     	INCR	_keyCount,F
                                    1-  954     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  955     	.line	562, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  956     	MOVIA	0xc8
     0008 04rr                      1-  957     	SUBAR	_keyCount,W
     0009 0803                      1-  958     	BTRSS	STATUS,0
     000A 3rrr                      1-  959     	LGOTO	_00472_DS_
                                    1-  960     	.line	564, "main.c"; 	keyCount = 200;
     000B 21C8                      1-  961     	MOVIA	0xc8
     000C 00rr                      1-  962     	MOVAR	_keyCount
                                    1-  963     	.line	565, "main.c"; 	if(!longPressFlag)
                                    1-  964     	BANKSEL	_longPressFlag
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  965     	MOVR	_longPressFlag,W
     000F 0903                      1-  966     	BTRSS	STATUS,2
     0010 3rrr                      1-  967     	LGOTO	_00472_DS_
                                    1-  968     	.line	567, "main.c"; 	longPressFlag = 1;
     0011 2101                      1-  969     	MOVIA	0x01
     0012 00rr                      1-  970     	MOVAR	_longPressFlag
                                    1-  971     	.line	568, "main.c"; 	return 2;
     0013 2102                      1-  972     	MOVIA	0x02
     0014 3rrr                      1-  973     	LGOTO	_00473_DS_
                                    1-  974     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1-  975     _00471_DS_:
                                    1-  976     	.line	574, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1-  977     	MOVIA	0xc8
                                    1-  978     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 04rr                      1-  979     	SUBAR	_keyCount,W
     0018 0803                      1-  980     	BTRSS	STATUS,0
     0019 3rrr                      1-  981     	LGOTO	_00468_DS_
                                    1-  982     	.line	576, "main.c"; 	keyCount = 0;
     001A 02rr                      1-  983     	CLRR	_keyCount
                                    1-  984     	.line	577, "main.c"; 	longPressFlag = 0;
                                    1-  985     	BANKSEL	_longPressFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1-  986     	CLRR	_longPressFlag
                                    1-  987     	.line	578, "main.c"; 	return	0;
     001D 2100                      1-  988     	MOVIA	0x00
     001E 3rrr                      1-  989     	LGOTO	_00473_DS_
                                    1-  990     ;;unsigned compare: left < lit (0x8=8), size=1
     001F                           1-  991     _00468_DS_:
                                    1-  992     	.line	580, "main.c"; 	else if(keyCount >= 8)
     001F 2108                      1-  993     	MOVIA	0x08
                                    1-  994     	BANKSEL	_keyCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1-  995     	SUBAR	_keyCount,W
     0022 0803                      1-  996     	BTRSS	STATUS,0
     0023 3rrr                      1-  997     	LGOTO	_00469_DS_
                                    1-  998     	.line	582, "main.c"; 	keyCount = 0;
     0024 02rr                      1-  999     	CLRR	_keyCount
                                    1- 1000     	.line	583, "main.c"; 	return	1;
     0025 2101                      1- 1001     	MOVIA	0x01
     0026 3rrr                      1- 1002     	LGOTO	_00473_DS_
     0027                           1- 1003     _00469_DS_:
                                    1- 1004     	.line	585, "main.c"; 	keyCount = 0;
                                    1- 1005     	BANKSEL	_keyCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1- 1006     	CLRR	_keyCount
     0029                           1- 1007     _00472_DS_:
                                    1- 1008     	.line	587, "main.c"; 	return 0;
     0029 2100                      1- 1009     	MOVIA	0x00
     002A                           1- 1010     _00473_DS_:
                                    1- 1011     	.line	588, "main.c"; 	}
                                    1- 1012     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1- 1013     ; exit point of _keyRead
                                    1- 1015     ;***
                                    1- 1016     ;  pBlock Stats: dbName = C
                                    1- 1017     ;***
                                    1- 1018     ;has an exit
                                    1- 1019     ;functions called:
                                    1- 1020     ;   __moduint
                                    1- 1021     ;   __moduint
                                    1- 1022     ;5 compiler assigned registers:
                                    1- 1023     ;   STK02
                                    1- 1024     ;   STK01
                                    1- 1025     ;   STK00
                                    1- 1026     ;   r0x103C
                                    1- 1027     ;   r0x103D
                                    1- 1028     ;; Starting pCode block
                                    1- 1029     .segment "code"; module=main, function=_ledCon
     0000                           1- 1031     _ledCon:
                                    1- 1032     ; 2 exit points
                                    1- 1033     	.line	478, "main.c"; 	if(count60s % 5 == 0)
     0000 2105                      1- 1034     	MOVIA	0x05
     0001 00rr                      1- 1035     	MOVAR	STK02
     0002 2100                      1- 1036     	MOVIA	0x00
     0003 00rr                      1- 1037     	MOVAR	STK01
                                    1- 1038     	BANKSEL	_count60s
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1039     	MOVR	_count60s,W
     0006 00rr                      1- 1040     	MOVAR	STK00
     0007 01rr                      1- 1041     	MOVR	(_count60s + 1),W
     0008 2rrr                      1- 1042     	LCALL	__moduint
                                    1- 1043     ;;1	MOVAR	r0x103C
     0009 11rr                      1- 1044     	IORAR	STK00,W
     000A 0903                      1- 1045     	BTRSS	STATUS,2
     000B 3rrr                      1- 1046     	LGOTO	_00382_DS_
                                    1- 1047     ;;unsigned compare: left < lit (0x1F4=500), size=2
                                    1- 1048     	.line	481, "main.c"; 	if(count60s < 500)
     000C 2101                      1- 1049     	MOVIA	0x01
                                    1- 1050     	BANKSEL	_count60s
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 1051     	SUBAR	(_count60s + 1),W
     000F 0903                      1- 1052     	BTRSS	STATUS,2
     0010 3rrr                      1- 1053     	LGOTO	_00441_DS_
     0011 21F4                      1- 1054     	MOVIA	0xf4
     0012 04rr                      1- 1055     	SUBAR	_count60s,W
     0013                           1- 1056     _00441_DS_:
     0013 0C03                      1- 1057     	BTRSC	STATUS,0
     0014 3rrr                      1- 1058     	LGOTO	_00379_DS_
                                    1- 1059     	.line	483, "main.c"; 	RDUTY = GDUTY = 20;
     0015 2114                      1- 1060     	MOVIA	0x14
                                    1- 1061     	BANKSEL	_GDUTY
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1062     	MOVAR	_GDUTY
                                    1- 1063     	BANKSEL	_RDUTY
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 1064     	MOVAR	_RDUTY
                                    1- 1065     	.line	484, "main.c"; 	BDUTY = 100;
     001A 2164                      1- 1066     	MOVIA	0x64
                                    1- 1067     	BANKSEL	_BDUTY
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1068     	MOVAR	_BDUTY
     001D 3rrr                      1- 1069     	LGOTO	_00382_DS_
                                    1- 1070     ;;unsigned compare: left < lit (0x258=600), size=2
     001E                           1- 1071     _00379_DS_:
                                    1- 1072     	.line	486, "main.c"; 	else if(count60s < 600)
     001E 2102                      1- 1073     	MOVIA	0x02
                                    1- 1074     	BANKSEL	_count60s
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1- 1075     	SUBAR	(_count60s + 1),W
     0021 0903                      1- 1076     	BTRSS	STATUS,2
     0022 3rrr                      1- 1077     	LGOTO	_00442_DS_
     0023 2158                      1- 1078     	MOVIA	0x58
     0024 04rr                      1- 1079     	SUBAR	_count60s,W
     0025                           1- 1080     _00442_DS_:
     0025 0C03                      1- 1081     	BTRSC	STATUS,0
     0026 3rrr                      1- 1082     	LGOTO	_00376_DS_
                                    1- 1083     	.line	488, "main.c"; 	--RDUTY;
                                    1- 1084     	BANKSEL	_RDUTY
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 06rr                      1- 1085     	DECR	_RDUTY,F
     0029 3rrr                      1- 1086     	LGOTO	_00382_DS_
                                    1- 1087     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     002A                           1- 1088     _00376_DS_:
                                    1- 1089     	.line	490, "main.c"; 	else if(count60s < 1000)
     002A 2103                      1- 1090     	MOVIA	0x03
                                    1- 1091     	BANKSEL	_count60s
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 04rr                      1- 1092     	SUBAR	(_count60s + 1),W
     002D 0903                      1- 1093     	BTRSS	STATUS,2
     002E 3rrr                      1- 1094     	LGOTO	_00443_DS_
     002F 21E8                      1- 1095     	MOVIA	0xe8
     0030 04rr                      1- 1096     	SUBAR	_count60s,W
     0031                           1- 1097     _00443_DS_:
     0031 0C03                      1- 1098     	BTRSC	STATUS,0
     0032 3rrr                      1- 1099     	LGOTO	_00373_DS_
                                    1- 1100     	.line	492, "main.c"; 	RDUTY = 0;
                                    1- 1101     	BANKSEL	_RDUTY
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1- 1102     	CLRR	_RDUTY
                                    1- 1103     	.line	493, "main.c"; 	++GDUTY;
                                    1- 1104     	BANKSEL	_GDUTY
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 05rr                      1- 1105     	INCR	_GDUTY,F
     0037 3rrr                      1- 1106     	LGOTO	_00382_DS_
                                    1- 1107     ;;unsigned compare: left < lit (0x5DC=1500), size=2
     0038                           1- 1108     _00373_DS_:
                                    1- 1109     	.line	495, "main.c"; 	else if(count60s < 1500)
     0038 2105                      1- 1110     	MOVIA	0x05
                                    1- 1111     	BANKSEL	_count60s
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1112     	SUBAR	(_count60s + 1),W
     003B 0903                      1- 1113     	BTRSS	STATUS,2
     003C 3rrr                      1- 1114     	LGOTO	_00444_DS_
     003D 21DC                      1- 1115     	MOVIA	0xdc
     003E 04rr                      1- 1116     	SUBAR	_count60s,W
     003F                           1- 1117     _00444_DS_:
     003F 0C03                      1- 1118     	BTRSC	STATUS,0
     0040 3rrr                      1- 1119     	LGOTO	_00370_DS_
                                    1- 1120     	.line	497, "main.c"; 	RDUTY = 0;
                                    1- 1121     	BANKSEL	_RDUTY
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 02rr                      1- 1122     	CLRR	_RDUTY
                                    1- 1123     	.line	498, "main.c"; 	GDUTY = 100;
     0043 2164                      1- 1124     	MOVIA	0x64
                                    1- 1125     	BANKSEL	_GDUTY
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 00rr                      1- 1126     	MOVAR	_GDUTY
     0046 3rrr                      1- 1127     	LGOTO	_00382_DS_
                                    1- 1128     ;;unsigned compare: left < lit (0x76C=1900), size=2
     0047                           1- 1129     _00370_DS_:
                                    1- 1130     	.line	500, "main.c"; 	else if(count60s < 1900)
     0047 2107                      1- 1131     	MOVIA	0x07
                                    1- 1132     	BANKSEL	_count60s
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 04rr                      1- 1133     	SUBAR	(_count60s + 1),W
     004A 0903                      1- 1134     	BTRSS	STATUS,2
     004B 3rrr                      1- 1135     	LGOTO	_00445_DS_
     004C 216C                      1- 1136     	MOVIA	0x6c
     004D 04rr                      1- 1137     	SUBAR	_count60s,W
     004E                           1- 1138     _00445_DS_:
     004E 0C03                      1- 1139     	BTRSC	STATUS,0
     004F 3rrr                      1- 1140     	LGOTO	_00367_DS_
                                    1- 1141     	.line	502, "main.c"; 	--BDUTY;
                                    1- 1142     	BANKSEL	_BDUTY
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 06rr                      1- 1143     	DECR	_BDUTY,F
     0052 3rrr                      1- 1144     	LGOTO	_00382_DS_
                                    1- 1145     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     0053                           1- 1146     _00367_DS_:
                                    1- 1147     	.line	504, "main.c"; 	else if(count60s < 2000)
     0053 2107                      1- 1148     	MOVIA	0x07
                                    1- 1149     	BANKSEL	_count60s
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 04rr                      1- 1150     	SUBAR	(_count60s + 1),W
     0056 0903                      1- 1151     	BTRSS	STATUS,2
     0057 3rrr                      1- 1152     	LGOTO	_00446_DS_
     0058 21D0                      1- 1153     	MOVIA	0xd0
     0059 04rr                      1- 1154     	SUBAR	_count60s,W
     005A                           1- 1155     _00446_DS_:
     005A 0C03                      1- 1156     	BTRSC	STATUS,0
     005B 3rrr                      1- 1157     	LGOTO	_00364_DS_
                                    1- 1158     	.line	506, "main.c"; 	BDUTY = 20;
     005C 2114                      1- 1159     	MOVIA	0x14
                                    1- 1160     	BANKSEL	_BDUTY
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 00rr                      1- 1161     	MOVAR	_BDUTY
                                    1- 1162     	.line	507, "main.c"; 	++RDUTY;
                                    1- 1163     	BANKSEL	_RDUTY
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 05rr                      1- 1164     	INCR	_RDUTY,F
     0061 3rrr                      1- 1165     	LGOTO	_00382_DS_
                                    1- 1166     ;;unsigned compare: left < lit (0x9C4=2500), size=2
     0062                           1- 1167     _00364_DS_:
                                    1- 1168     	.line	509, "main.c"; 	else if(count60s < 2500)
     0062 2109                      1- 1169     	MOVIA	0x09
                                    1- 1170     	BANKSEL	_count60s
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 04rr                      1- 1171     	SUBAR	(_count60s + 1),W
     0065 0903                      1- 1172     	BTRSS	STATUS,2
     0066 3rrr                      1- 1173     	LGOTO	_00447_DS_
     0067 21C4                      1- 1174     	MOVIA	0xc4
     0068 04rr                      1- 1175     	SUBAR	_count60s,W
     0069                           1- 1176     _00447_DS_:
     0069 0C03                      1- 1177     	BTRSC	STATUS,0
     006A 3rrr                      1- 1178     	LGOTO	_00361_DS_
                                    1- 1179     	.line	511, "main.c"; 	RDUTY = 20;
     006B 2114                      1- 1180     	MOVIA	0x14
                                    1- 1181     	BANKSEL	_RDUTY
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 00rr                      1- 1182     	MOVAR	_RDUTY
     006E 3rrr                      1- 1183     	LGOTO	_00382_DS_
                                    1- 1184     ;;unsigned compare: left < lit (0xA28=2600), size=2
     006F                           1- 1185     _00361_DS_:
                                    1- 1186     	.line	513, "main.c"; 	else if(count60s < 2600)
     006F 210A                      1- 1187     	MOVIA	0x0a
                                    1- 1188     	BANKSEL	_count60s
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 04rr                      1- 1189     	SUBAR	(_count60s + 1),W
     0072 0903                      1- 1190     	BTRSS	STATUS,2
     0073 3rrr                      1- 1191     	LGOTO	_00448_DS_
     0074 2128                      1- 1192     	MOVIA	0x28
     0075 04rr                      1- 1193     	SUBAR	_count60s,W
     0076                           1- 1194     _00448_DS_:
     0076 0C03                      1- 1195     	BTRSC	STATUS,0
     0077 3rrr                      1- 1196     	LGOTO	_00358_DS_
                                    1- 1197     	.line	515, "main.c"; 	--BDUTY;
                                    1- 1198     	BANKSEL	_BDUTY
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 06rr                      1- 1199     	DECR	_BDUTY,F
     007A 3rrr                      1- 1200     	LGOTO	_00382_DS_
                                    1- 1201     ;;unsigned compare: left < lit (0xBB8=3000), size=2
     007B                           1- 1202     _00358_DS_:
                                    1- 1203     	.line	517, "main.c"; 	else if(count60s < 3000)
     007B 210B                      1- 1204     	MOVIA	0x0b
                                    1- 1205     	BANKSEL	_count60s
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 04rr                      1- 1206     	SUBAR	(_count60s + 1),W
     007E 0903                      1- 1207     	BTRSS	STATUS,2
     007F 3rrr                      1- 1208     	LGOTO	_00449_DS_
     0080 21B8                      1- 1209     	MOVIA	0xb8
     0081 04rr                      1- 1210     	SUBAR	_count60s,W
     0082                           1- 1211     _00449_DS_:
     0082 0C03                      1- 1212     	BTRSC	STATUS,0
     0083 3rrr                      1- 1213     	LGOTO	_00355_DS_
                                    1- 1214     	.line	519, "main.c"; 	BDUTY = 0;
                                    1- 1215     	BANKSEL	_BDUTY
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 02rr                      1- 1216     	CLRR	_BDUTY
                                    1- 1217     	.line	520, "main.c"; 	++RDUTY;
                                    1- 1218     	BANKSEL	_RDUTY
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 05rr                      1- 1219     	INCR	_RDUTY,F
     0088 3rrr                      1- 1220     	LGOTO	_00382_DS_
                                    1- 1221     ;;unsigned compare: left < lit (0xDAC=3500), size=2
     0089                           1- 1222     _00355_DS_:
                                    1- 1223     	.line	522, "main.c"; 	else if(count60s < 3500)
     0089 210D                      1- 1224     	MOVIA	0x0d
                                    1- 1225     	BANKSEL	_count60s
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 04rr                      1- 1226     	SUBAR	(_count60s + 1),W
     008C 0903                      1- 1227     	BTRSS	STATUS,2
     008D 3rrr                      1- 1228     	LGOTO	_00450_DS_
     008E 21AC                      1- 1229     	MOVIA	0xac
     008F 04rr                      1- 1230     	SUBAR	_count60s,W
     0090                           1- 1231     _00450_DS_:
     0090 0C03                      1- 1232     	BTRSC	STATUS,0
     0091 3rrr                      1- 1233     	LGOTO	_00352_DS_
                                    1- 1234     	.line	524, "main.c"; 	RDUTY = 100;
     0092 2164                      1- 1235     	MOVIA	0x64
                                    1- 1236     	BANKSEL	_RDUTY
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 00rr                      1- 1237     	MOVAR	_RDUTY
     0095 3rrr                      1- 1238     	LGOTO	_00382_DS_
                                    1- 1239     ;;unsigned compare: left < lit (0xFA0=4000), size=2
     0096                           1- 1240     _00352_DS_:
                                    1- 1241     	.line	526, "main.c"; 	else if(count60s < 4000)
     0096 210F                      1- 1242     	MOVIA	0x0f
                                    1- 1243     	BANKSEL	_count60s
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 04rr                      1- 1244     	SUBAR	(_count60s + 1),W
     0099 0903                      1- 1245     	BTRSS	STATUS,2
     009A 3rrr                      1- 1246     	LGOTO	_00451_DS_
     009B 21A0                      1- 1247     	MOVIA	0xa0
     009C 04rr                      1- 1248     	SUBAR	_count60s,W
     009D                           1- 1249     _00451_DS_:
     009D 0C03                      1- 1250     	BTRSC	STATUS,0
     009E 3rrr                      1- 1251     	LGOTO	_00349_DS_
                                    1- 1252     	.line	528, "main.c"; 	--GDUTY;
                                    1- 1253     	BANKSEL	_GDUTY
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 06rr                      1- 1254     	DECR	_GDUTY,F
     00A1 3rrr                      1- 1255     	LGOTO	_00382_DS_
                                    1- 1256     ;;unsigned compare: left < lit (0x1194=4500), size=2
     00A2                           1- 1257     _00349_DS_:
                                    1- 1258     	.line	530, "main.c"; 	else if(count60s < 4500)
     00A2 2111                      1- 1259     	MOVIA	0x11
                                    1- 1260     	BANKSEL	_count60s
     00A3 rrrr                      3-   71 m1      .banksel ram_address
     00A4 04rr                      1- 1261     	SUBAR	(_count60s + 1),W
     00A5 0903                      1- 1262     	BTRSS	STATUS,2
     00A6 3rrr                      1- 1263     	LGOTO	_00452_DS_
     00A7 2194                      1- 1264     	MOVIA	0x94
     00A8 04rr                      1- 1265     	SUBAR	_count60s,W
     00A9                           1- 1266     _00452_DS_:
     00A9 0C03                      1- 1267     	BTRSC	STATUS,0
     00AA 3rrr                      1- 1268     	LGOTO	_00346_DS_
                                    1- 1269     	.line	532, "main.c"; 	GDUTY = 0;
                                    1- 1270     	BANKSEL	_GDUTY
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 02rr                      1- 1271     	CLRR	_GDUTY
     00AD 3rrr                      1- 1272     	LGOTO	_00382_DS_
                                    1- 1273     ;;unsigned compare: left < lit (0x1388=5000), size=2
     00AE                           1- 1274     _00346_DS_:
                                    1- 1275     	.line	534, "main.c"; 	else if(count60s < 5000)
     00AE 2113                      1- 1276     	MOVIA	0x13
                                    1- 1277     	BANKSEL	_count60s
     00AF rrrr                      3-   71 m1      .banksel ram_address
     00B0 04rr                      1- 1278     	SUBAR	(_count60s + 1),W
     00B1 0903                      1- 1279     	BTRSS	STATUS,2
     00B2 3rrr                      1- 1280     	LGOTO	_00453_DS_
     00B3 2188                      1- 1281     	MOVIA	0x88
     00B4 04rr                      1- 1282     	SUBAR	_count60s,W
     00B5                           1- 1283     _00453_DS_:
     00B5 0C03                      1- 1284     	BTRSC	STATUS,0
     00B6 3rrr                      1- 1285     	LGOTO	_00343_DS_
                                    1- 1286     	.line	536, "main.c"; 	++BDUTY;
                                    1- 1287     	BANKSEL	_BDUTY
     00B7 rrrr                      3-   71 m1      .banksel ram_address
     00B8 05rr                      1- 1288     	INCR	_BDUTY,F
     00B9 3rrr                      1- 1289     	LGOTO	_00382_DS_
                                    1- 1290     ;;unsigned compare: left < lit (0x157C=5500), size=2
     00BA                           1- 1291     _00343_DS_:
                                    1- 1292     	.line	538, "main.c"; 	else if(count60s < 5500)
     00BA 2115                      1- 1293     	MOVIA	0x15
                                    1- 1294     	BANKSEL	_count60s
     00BB rrrr                      3-   71 m1      .banksel ram_address
     00BC 04rr                      1- 1295     	SUBAR	(_count60s + 1),W
     00BD 0903                      1- 1296     	BTRSS	STATUS,2
     00BE 3rrr                      1- 1297     	LGOTO	_00454_DS_
     00BF 217C                      1- 1298     	MOVIA	0x7c
     00C0 04rr                      1- 1299     	SUBAR	_count60s,W
     00C1                           1- 1300     _00454_DS_:
     00C1 0C03                      1- 1301     	BTRSC	STATUS,0
     00C2 3rrr                      1- 1302     	LGOTO	_00340_DS_
                                    1- 1303     	.line	540, "main.c"; 	BDUTY = 100;
     00C3 2164                      1- 1304     	MOVIA	0x64
                                    1- 1305     	BANKSEL	_BDUTY
     00C4 rrrr                      3-   71 m1      .banksel ram_address
     00C5 00rr                      1- 1306     	MOVAR	_BDUTY
     00C6 3rrr                      1- 1307     	LGOTO	_00382_DS_
                                    1- 1308     ;;unsigned compare: left < lit (0x170C=5900), size=2
     00C7                           1- 1309     _00340_DS_:
                                    1- 1310     	.line	542, "main.c"; 	else if(count60s < 5900)
     00C7 2117                      1- 1311     	MOVIA	0x17
                                    1- 1312     	BANKSEL	_count60s
     00C8 rrrr                      3-   71 m1      .banksel ram_address
     00C9 04rr                      1- 1313     	SUBAR	(_count60s + 1),W
     00CA 0903                      1- 1314     	BTRSS	STATUS,2
     00CB 3rrr                      1- 1315     	LGOTO	_00455_DS_
     00CC 210C                      1- 1316     	MOVIA	0x0c
     00CD 04rr                      1- 1317     	SUBAR	_count60s,W
     00CE                           1- 1318     _00455_DS_:
     00CE 0C03                      1- 1319     	BTRSC	STATUS,0
     00CF 3rrr                      1- 1320     	LGOTO	_00337_DS_
                                    1- 1321     	.line	544, "main.c"; 	--RDUTY;
                                    1- 1322     	BANKSEL	_RDUTY
     00D0 rrrr                      3-   71 m1      .banksel ram_address
     00D1 06rr                      1- 1323     	DECR	_RDUTY,F
     00D2 3rrr                      1- 1324     	LGOTO	_00382_DS_
                                    1- 1325     ;;unsigned compare: left < lit (0x1770=6000), size=2
     00D3                           1- 1326     _00337_DS_:
                                    1- 1327     	.line	546, "main.c"; 	else if(count60s < 6000)
     00D3 2117                      1- 1328     	MOVIA	0x17
                                    1- 1329     	BANKSEL	_count60s
     00D4 rrrr                      3-   71 m1      .banksel ram_address
     00D5 04rr                      1- 1330     	SUBAR	(_count60s + 1),W
     00D6 0903                      1- 1331     	BTRSS	STATUS,2
     00D7 3rrr                      1- 1332     	LGOTO	_00456_DS_
     00D8 2170                      1- 1333     	MOVIA	0x70
     00D9 04rr                      1- 1334     	SUBAR	_count60s,W
     00DA                           1- 1335     _00456_DS_:
     00DA 0C03                      1- 1336     	BTRSC	STATUS,0
     00DB 3rrr                      1- 1337     	LGOTO	_00382_DS_
                                    1- 1338     	.line	548, "main.c"; 	RDUTY = 20;
     00DC 2114                      1- 1339     	MOVIA	0x14
                                    1- 1340     	BANKSEL	_RDUTY
     00DD rrrr                      3-   71 m1      .banksel ram_address
     00DE 00rr                      1- 1341     	MOVAR	_RDUTY
                                    1- 1342     	.line	549, "main.c"; 	++GDUTY;
                                    1- 1343     	BANKSEL	_GDUTY
     00DF rrrr                      3-   71 m1      .banksel ram_address
     00E0 05rr                      1- 1344     	INCR	_GDUTY,F
     00E1                           1- 1345     _00382_DS_:
                                    1- 1346     	.line	552, "main.c"; 	if(++count60s == 6000)
                                    1- 1347     	BANKSEL	_count60s
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 05rr                      1- 1348     	INCR	_count60s,F
     00E3 0D03                      1- 1349     	BTRSC	STATUS,2
     00E4 05rr                      1- 1350     	INCR	(_count60s + 1),F
     00E5 01rr                      1- 1351     	MOVR	_count60s,W
     00E6 2470                      1- 1352     	XORIA	0x70
     00E7 0903                      1- 1353     	BTRSS	STATUS,2
     00E8 3rrr                      1- 1354     	LGOTO	_00385_DS_
     00E9 01rr                      1- 1355     	MOVR	(_count60s + 1),W
     00EA 2417                      1- 1356     	XORIA	0x17
     00EB 0903                      1- 1357     	BTRSS	STATUS,2
     00EC 3rrr                      1- 1358     	LGOTO	_00385_DS_
                                    1- 1359     	.line	553, "main.c"; 	count60s = 0;
     00ED 02rr                      1- 1360     	CLRR	_count60s
     00EE 02rr                      1- 1361     	CLRR	(_count60s + 1)
     00EF                           1- 1362     _00385_DS_:
                                    1- 1363     	.line	554, "main.c"; 	}
                                    1- 1364     	RETURN	
     00EF 0010                      3-   26 m1      ret
                                    1- 1365     ; exit point of _ledCon
                                    1- 1367     ;***
                                    1- 1368     ;  pBlock Stats: dbName = C
                                    1- 1369     ;***
                                    1- 1370     ;has an exit
                                    1- 1371     ;; Starting pCode block
                                    1- 1372     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1374     _pwmStop:
                                    1- 1375     ; 2 exit points
                                    1- 1376     	.line	471, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 1377     	CLRA	
     0001 00rr                      1- 1378     	SFUN	_T1CR1
                                    1- 1379     	.line	474, "main.c"; 	}
                                    1- 1380     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1381     ; exit point of _pwmStop
                                    1- 1383     ;***
                                    1- 1384     ;  pBlock Stats: dbName = C
                                    1- 1385     ;***
                                    1- 1386     ;has an exit
                                    1- 1387     ;1 compiler assigned register :
                                    1- 1388     ;   r0x103E
                                    1- 1389     ;; Starting pCode block
                                    1- 1390     .segment "code"; module=main, function=_pwmStart
     0000                           1- 1392     _pwmStart:
                                    1- 1393     ; 2 exit points
                                    1- 1394     	.line	459, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 1395     	SFUNR	_T1CR1
                                    1- 1396     	BANKSEL	r0x103E
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1397     	MOVAR	r0x103E
     0003 0Frr                      1- 1398     	BTRSC	r0x103E,7
                                    1- 1399     	.line	460, "main.c"; 	return;
     0004 3rrr                      1- 1400     	LGOTO	_00325_DS_
                                    1- 1401     	.line	461, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1402     	CLRR	_TMRH
                                    1- 1403     	.line	462, "main.c"; 	TMR1 = 0x11;							//频率为110K
     0006 2111                      1- 1404     	MOVIA	0x11
     0007 00rr                      1- 1405     	SFUN	_TMR1
                                    1- 1406     	.line	463, "main.c"; 	PWM1DUTY = 0x08;				// 		
     0008 2108                      1- 1407     	MOVIA	0x08
     0009 00rr                      1- 1408     	SFUN	_PWM1DUTY
                                    1- 1409     	.line	465, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     000A 0200                      1- 1410     	CLRA	
     000B 00rr                      1- 1411     	SFUN	_T1CR2
                                    1- 1412     	.line	466, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 1413     	MOVIA	0x83
     000D 00rr                      1- 1414     	SFUN	_T1CR1
     000E                           1- 1415     _00325_DS_:
                                    1- 1416     	.line	467, "main.c"; 	}
                                    1- 1417     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1418     ; exit point of _pwmStart
                                    1- 1420     ;***
                                    1- 1421     ;  pBlock Stats: dbName = C
                                    1- 1422     ;***
                                    1- 1423     ;3 compiler assigned registers:
                                    1- 1424     ;   r0x103F
                                    1- 1425     ;   STK00
                                    1- 1426     ;   r0x1040
                                    1- 1427     ;; Starting pCode block
                                    1- 1428     .segment "code"; module=main, function=_setPWMdutyG
                                    1- 1430     ;local variable name mapping:
     0000                           1- 1433     _setPWMdutyG:
                                    1- 1434     ; 0 exit points
                                    1- 1435     	.line	447, "main.c"; 	void setPWMdutyG(char portPin,char duty)
                                    1- 1436     	BANKSEL	r0x103F
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1437     	MOVAR	r0x103F
     0002 01rr                      1- 1438     	MOVR	STK00,W
                                    1- 1439     	BANKSEL	r0x1040
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1440     	MOVAR	r0x1040
                                    1- 1441     	.line	449, "main.c"; 	if(ledCount <= duty)
                                    1- 1442     	BANKSEL	_ledCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1443     	MOVR	_ledCount,W
                                    1- 1444     	BANKSEL	r0x1040
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 04rr                      1- 1445     	SUBAR	r0x1040,W
     0009 0803                      1- 1446     	BTRSS	STATUS,0
     000A 3rrr                      1- 1447     	LGOTO	_00314_DS_
                                    1- 1448     	.line	450, "main.c"; 	PORTA |= portPin;
                                    1- 1449     	BANKSEL	r0x103F
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1450     	MOVR	r0x103F,W
     000D 11rr                      1- 1451     	IORAR	_PORTA,F
     000E 3rrr                      1- 1452     	LGOTO	_00315_DS_
     000F                           1- 1453     _00314_DS_:
                                    1- 1454     	.line	452, "main.c"; 	PORTA &= (~portPin);
                                    1- 1455     	BANKSEL	r0x103F
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 07rr                      1- 1456     	COMR	r0x103F,W
     0011 00rr                      1- 1457     	MOVAR	r0x103F
     0012 10rr                      1- 1458     	ANDAR	_PORTA,F
     0013                           1- 1459     _00315_DS_:
                                    1- 1460     	.line	453, "main.c"; 	if(ledCount == 100)
                                    1- 1461     	BANKSEL	_ledCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1462     	MOVR	_ledCount,W
     0015 2464                      1- 1463     	XORIA	0x64
     0016 0D03                      1- 1464     	BTRSC	STATUS,2
                                    1- 1465     	.line	454, "main.c"; 	ledCount = 0;
     0017 02rr                      1- 1466     	CLRR	_ledCount
                                    1- 1467     	.line	455, "main.c"; 	}
                                    1- 1468     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 1470     ;***
                                    1- 1471     ;  pBlock Stats: dbName = C
                                    1- 1472     ;***
                                    1- 1473     ;3 compiler assigned registers:
                                    1- 1474     ;   r0x1041
                                    1- 1475     ;   STK00
                                    1- 1476     ;   r0x1042
                                    1- 1477     ;; Starting pCode block
                                    1- 1478     .segment "code"; module=main, function=_setPWMduty
                                    1- 1480     ;local variable name mapping:
     0000                           1- 1483     _setPWMduty:
                                    1- 1484     ; 0 exit points
                                    1- 1485     	.line	436, "main.c"; 	void setPWMduty(char portPin,char duty)
                                    1- 1486     	BANKSEL	r0x1041
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1487     	MOVAR	r0x1041
     0002 01rr                      1- 1488     	MOVR	STK00,W
                                    1- 1489     	BANKSEL	r0x1042
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1490     	MOVAR	r0x1042
                                    1- 1491     	.line	438, "main.c"; 	if(ledCount <= duty)
                                    1- 1492     	BANKSEL	_ledCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1493     	MOVR	_ledCount,W
                                    1- 1494     	BANKSEL	r0x1042
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 04rr                      1- 1495     	SUBAR	r0x1042,W
     0009 0803                      1- 1496     	BTRSS	STATUS,0
     000A 3rrr                      1- 1497     	LGOTO	_00304_DS_
                                    1- 1498     	.line	439, "main.c"; 	PORTB |= portPin;
                                    1- 1499     	BANKSEL	r0x1041
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1500     	MOVR	r0x1041,W
     000D 11rr                      1- 1501     	IORAR	_PORTB,F
     000E 3rrr                      1- 1502     	LGOTO	_00305_DS_
     000F                           1- 1503     _00304_DS_:
                                    1- 1504     	.line	441, "main.c"; 	PORTB &= (~portPin);
                                    1- 1505     	BANKSEL	r0x1041
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 07rr                      1- 1506     	COMR	r0x1041,W
     0011 00rr                      1- 1507     	MOVAR	r0x1041
     0012 10rr                      1- 1508     	ANDAR	_PORTB,F
     0013                           1- 1509     _00305_DS_:
                                    1- 1510     	.line	442, "main.c"; 	if(ledCount == 100)
                                    1- 1511     	BANKSEL	_ledCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1512     	MOVR	_ledCount,W
     0015 2464                      1- 1513     	XORIA	0x64
     0016 0D03                      1- 1514     	BTRSC	STATUS,2
                                    1- 1515     	.line	443, "main.c"; 	ledCount = 0;
     0017 02rr                      1- 1516     	CLRR	_ledCount
                                    1- 1517     	.line	444, "main.c"; 	}
                                    1- 1518     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 1520     ;***
                                    1- 1521     ;  pBlock Stats: dbName = C
                                    1- 1522     ;***
                                    1- 1523     ;functions called:
                                    1- 1524     ;   _pwmStart
                                    1- 1525     ;   _pwmStop
                                    1- 1526     ;   _pwmStart
                                    1- 1527     ;   _pwmStop
                                    1- 1528     ;   _pwmStart
                                    1- 1529     ;   _pwmStop
                                    1- 1530     ;   _pwmStart
                                    1- 1531     ;   _pwmStop
                                    1- 1532     ;; Starting pCode block
                                    1- 1533     .segment "code"; module=main, function=_pwmCtr
     0000                           1- 1535     _pwmCtr:
                                    1- 1536     ; 0 exit points
                                    1- 1537     	.line	403, "main.c"; 	if(++count500ms >= 100)
                                    1- 1538     	BANKSEL	_count500ms
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1539     	INCR	_count500ms,F
                                    1- 1540     ;;unsigned compare: left < lit (0x64=100), size=1
     0002 2164                      1- 1541     	MOVIA	0x64
     0003 04rr                      1- 1542     	SUBAR	_count500ms,W
     0004 0C03                      1- 1543     	BTRSC	STATUS,0
                                    1- 1544     	.line	405, "main.c"; 	count500ms = 0;
     0005 02rr                      1- 1545     	CLRR	_count500ms
                                    1- 1546     	.line	407, "main.c"; 	if(workStep == 1)
                                    1- 1547     	BANKSEL	_workStep
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1- 1548     	MOVR	_workStep,W
     0008 2401                      1- 1549     	XORIA	0x01
     0009 0903                      1- 1550     	BTRSS	STATUS,2
     000A 3rrr                      1- 1551     	LGOTO	_00296_DS_
                                    1- 1552     	.line	409, "main.c"; 	pwmStart();
     000B 2rrr                      1- 1553     	LCALL	_pwmStart
     000C 3rrr                      1- 1554     	LGOTO	_00298_DS_
     000D                           1- 1555     _00296_DS_:
                                    1- 1556     	.line	411, "main.c"; 	else if(workStep == 2)
                                    1- 1557     	BANKSEL	_workStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 1558     	MOVR	_workStep,W
     000F 2402                      1- 1559     	XORIA	0x02
     0010 0903                      1- 1560     	BTRSS	STATUS,2
     0011 3rrr                      1- 1561     	LGOTO	_00293_DS_
                                    1- 1562     	.line	413, "main.c"; 	if(count500ms == 0)
                                    1- 1563     	BANKSEL	_count500ms
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1564     	MOVR	_count500ms,W
     0014 0903                      1- 1565     	BTRSS	STATUS,2
     0015 3rrr                      1- 1566     	LGOTO	_00298_DS_
                                    1- 1567     	.line	416, "main.c"; 	if(step2Count == 8)
                                    1- 1568     	BANKSEL	_step2Count
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1569     	MOVR	_step2Count,W
     0018 2408                      1- 1570     	XORIA	0x08
     0019 0D03                      1- 1571     	BTRSC	STATUS,2
                                    1- 1572     	.line	417, "main.c"; 	pwmStop();
     001A 2rrr                      1- 1573     	LCALL	_pwmStop
                                    1- 1574     	.line	418, "main.c"; 	if(step2Count >= 16)
     001B 2110                      1- 1575     	MOVIA	0x10
                                    1- 1576     	BANKSEL	_step2Count
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 04rr                      1- 1577     	SUBAR	_step2Count,W
     001E 0803                      1- 1578     	BTRSS	STATUS,0
     001F 3rrr                      1- 1579     	LGOTO	_00287_DS_
                                    1- 1580     	.line	420, "main.c"; 	step2Count = 0;
     0020 02rr                      1- 1581     	CLRR	_step2Count
                                    1- 1582     	.line	421, "main.c"; 	pwmStart();
     0021 2rrr                      1- 1583     	LCALL	_pwmStart
     0022                           1- 1584     _00287_DS_:
                                    1- 1585     	.line	423, "main.c"; 	step2Count++;
                                    1- 1586     	BANKSEL	_step2Count
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1- 1587     	INCR	_step2Count,F
     0024 3rrr                      1- 1588     	LGOTO	_00298_DS_
     0025                           1- 1589     _00293_DS_:
                                    1- 1590     	.line	426, "main.c"; 	else if(workStep == 0)
                                    1- 1591     	BANKSEL	_workStep
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 1592     	MOVR	_workStep,W
     0027 0D03                      1- 1593     	BTRSC	STATUS,2
                                    1- 1594     	.line	428, "main.c"; 	pwmStop();
     0028 2rrr                      1- 1595     	LCALL	_pwmStop
     0029                           1- 1596     _00298_DS_:
                                    1- 1597     	.line	432, "main.c"; 	}
                                    1- 1598     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1- 1600     ;***
                                    1- 1601     ;  pBlock Stats: dbName = C
                                    1- 1602     ;***
                                    1- 1603     ;has an exit
                                    1- 1604     ;functions called:
                                    1- 1605     ;   _delay
                                    1- 1606     ;   _F_wait_eoc
                                    1- 1607     ;   _delay
                                    1- 1608     ;   _F_wait_eoc
                                    1- 1609     ;7 compiler assigned registers:
                                    1- 1610     ;   r0x1043
                                    1- 1611     ;   STK00
                                    1- 1612     ;   r0x1044
                                    1- 1613     ;   r0x1045
                                    1- 1614     ;   r0x1046
                                    1- 1615     ;   r0x1047
                                    1- 1616     ;   r0x1048
                                    1- 1617     ;; Starting pCode block
                                    1- 1618     .segment "code"; module=main, function=_F_AIN9_Convert
                                    1- 1620     ;local variable name mapping:
     0000                           1- 1623     _F_AIN9_Convert:
                                    1- 1624     ; 2 exit points
                                    1- 1625     	.line	384, "main.c"; 	void F_AIN9_Convert(char count)
                                    1- 1626     	BANKSEL	r0x1043
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1627     	MOVAR	r0x1043
                                    1- 1628     	.line	386, "main.c"; 	R_AIN9_DATA=R_AIN9_DATA_LB=0x00;   
                                    1- 1629     	BANKSEL	_R_AIN9_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1630     	CLRR	_R_AIN9_DATA_LB
                                    1- 1631     	BANKSEL	_R_AIN9_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1632     	CLRR	_R_AIN9_DATA
     0006 02rr                      1- 1633     	CLRR	(_R_AIN9_DATA + 1)
                                    1- 1634     	.line	388, "main.c"; 	ADMD  = 0x90 | C_ADC_PB4;				// Select AIN6(PB1) pad as ADC input
     0007 2199                      1- 1635     	MOVIA	0x99
     0008 00rr                      1- 1636     	MOVAR	_ADMD
                                    1- 1637     	.line	389, "main.c"; 	delay(200);	
     0009 21C8                      1- 1638     	MOVIA	0xc8
     000A 00rr                      1- 1639     	MOVAR	STK00
     000B 2100                      1- 1640     	MOVIA	0x00
     000C 2rrr                      1- 1641     	LCALL	_delay
                                    1- 1642     	.line	390, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1643     	MOVIA	0x01
                                    1- 1644     	BANKSEL	r0x1044
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1645     	MOVAR	r0x1044
     0010                           1- 1646     _00275_DS_:
                                    1- 1647     	BANKSEL	r0x1044
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1648     	MOVR	r0x1044,W
                                    1- 1649     	BANKSEL	r0x1043
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1650     	SUBAR	r0x1043,W
     0014 0803                      1- 1651     	BTRSS	STATUS,0
     0015 3rrr                      1- 1652     	LGOTO	_00277_DS_
                                    1- 1653     	.line	392, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1654     	BSR	_ADMDbits,6
                                    1- 1655     	.line	393, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1656     	LCALL	_F_wait_eoc
                                    1- 1657     	.line	394, "main.c"; 	R_AIN9_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1658     	MOVIA	0x0f
     0019 10rr                      1- 1659     	ANDAR	_ADR,W
                                    1- 1660     ;;3	MOVAR	r0x1045
                                    1- 1661     	BANKSEL	_R_AIN9_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1662     	ADDAR	_R_AIN9_DATA_LB,F
                                    1- 1663     	.line	395, "main.c"; 	R_AIN9_DATA    += ADD; 
     001C 01rr                      1- 1664     	MOVR	_ADD,W
                                    1- 1665     	BANKSEL	r0x1045
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1666     	MOVAR	r0x1045
                                    1- 1667     ;;1	CLRR	r0x1046
                                    1- 1668     ;;105	MOVR	r0x1045,W
                                    1- 1669     ;;103	MOVAR	r0x1047
     001F 2100                      1- 1670     	MOVIA	0x00
                                    1- 1671     	BANKSEL	r0x1048
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1672     	MOVAR	r0x1048
                                    1- 1673     ;;104	MOVR	r0x1047,W
                                    1- 1674     	BANKSEL	r0x1045
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1675     	MOVR	r0x1045,W
                                    1- 1676     	BANKSEL	_R_AIN9_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1677     	ADDAR	_R_AIN9_DATA,F
                                    1- 1678     	BANKSEL	r0x1048
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1679     	MOVR	r0x1048,W
     0028 0C03                      1- 1680     	BTRSC	STATUS,0
     0029 05rr                      1- 1681     	INCR	r0x1048,W
     002A 0D03                      1- 1682     	BTRSC	STATUS,2
     002B 3rrr                      1- 1683     	LGOTO	_00002_DS_
                                    1- 1684     	BANKSEL	_R_AIN9_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1685     	ADDAR	(_R_AIN9_DATA + 1),F
     002E                           1- 1686     _00002_DS_:
                                    1- 1687     	.line	390, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1688     	BANKSEL	r0x1044
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1689     	INCR	r0x1044,F
     0030 3rrr                      1- 1690     	LGOTO	_00275_DS_
     0031                           1- 1691     _00277_DS_:
                                    1- 1692     	.line	397, "main.c"; 	}
                                    1- 1693     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1694     ; exit point of _F_AIN9_Convert
                                    1- 1696     ;***
                                    1- 1697     ;  pBlock Stats: dbName = C
                                    1- 1698     ;***
                                    1- 1699     ;has an exit
                                    1- 1700     ;functions called:
                                    1- 1701     ;   _delay
                                    1- 1702     ;   _F_wait_eoc
                                    1- 1703     ;   _delay
                                    1- 1704     ;   _F_wait_eoc
                                    1- 1705     ;7 compiler assigned registers:
                                    1- 1706     ;   r0x1049
                                    1- 1707     ;   STK00
                                    1- 1708     ;   r0x104A
                                    1- 1709     ;   r0x104B
                                    1- 1710     ;   r0x104C
                                    1- 1711     ;   r0x104D
                                    1- 1712     ;   r0x104E
                                    1- 1713     ;; Starting pCode block
                                    1- 1714     .segment "code"; module=main, function=_F_AIN5_Convert
                                    1- 1716     ;local variable name mapping:
     0000                           1- 1719     _F_AIN5_Convert:
                                    1- 1720     ; 2 exit points
                                    1- 1721     	.line	368, "main.c"; 	void F_AIN5_Convert(char count)
                                    1- 1722     	BANKSEL	r0x1049
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1723     	MOVAR	r0x1049
                                    1- 1724     	.line	370, "main.c"; 	R_AIN5_DATA=R_AIN5_DATA_LB=0x00;   
                                    1- 1725     	BANKSEL	_R_AIN5_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1726     	CLRR	_R_AIN5_DATA_LB
                                    1- 1727     	BANKSEL	_R_AIN5_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1728     	CLRR	_R_AIN5_DATA
     0006 02rr                      1- 1729     	CLRR	(_R_AIN5_DATA + 1)
                                    1- 1730     	.line	372, "main.c"; 	ADMD  = 0x90 | C_ADC_PB0;				// Select AIN6(PB1) pad as ADC input
     0007 2195                      1- 1731     	MOVIA	0x95
     0008 00rr                      1- 1732     	MOVAR	_ADMD
                                    1- 1733     	.line	373, "main.c"; 	delay(200);	
     0009 21C8                      1- 1734     	MOVIA	0xc8
     000A 00rr                      1- 1735     	MOVAR	STK00
     000B 2100                      1- 1736     	MOVIA	0x00
     000C 2rrr                      1- 1737     	LCALL	_delay
                                    1- 1738     	.line	374, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1739     	MOVIA	0x01
                                    1- 1740     	BANKSEL	r0x104A
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1741     	MOVAR	r0x104A
     0010                           1- 1742     _00266_DS_:
                                    1- 1743     	BANKSEL	r0x104A
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1744     	MOVR	r0x104A,W
                                    1- 1745     	BANKSEL	r0x1049
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1746     	SUBAR	r0x1049,W
     0014 0803                      1- 1747     	BTRSS	STATUS,0
     0015 3rrr                      1- 1748     	LGOTO	_00268_DS_
                                    1- 1749     	.line	376, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1750     	BSR	_ADMDbits,6
                                    1- 1751     	.line	377, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1752     	LCALL	_F_wait_eoc
                                    1- 1753     	.line	378, "main.c"; 	R_AIN5_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1754     	MOVIA	0x0f
     0019 10rr                      1- 1755     	ANDAR	_ADR,W
                                    1- 1756     ;;3	MOVAR	r0x104B
                                    1- 1757     	BANKSEL	_R_AIN5_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1758     	ADDAR	_R_AIN5_DATA_LB,F
                                    1- 1759     	.line	379, "main.c"; 	R_AIN5_DATA    += ADD; 
     001C 01rr                      1- 1760     	MOVR	_ADD,W
                                    1- 1761     	BANKSEL	r0x104B
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1762     	MOVAR	r0x104B
                                    1- 1763     ;;1	CLRR	r0x104C
                                    1- 1764     ;;102	MOVR	r0x104B,W
                                    1- 1765     ;;100	MOVAR	r0x104D
     001F 2100                      1- 1766     	MOVIA	0x00
                                    1- 1767     	BANKSEL	r0x104E
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1768     	MOVAR	r0x104E
                                    1- 1769     ;;101	MOVR	r0x104D,W
                                    1- 1770     	BANKSEL	r0x104B
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1771     	MOVR	r0x104B,W
                                    1- 1772     	BANKSEL	_R_AIN5_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1773     	ADDAR	_R_AIN5_DATA,F
                                    1- 1774     	BANKSEL	r0x104E
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1775     	MOVR	r0x104E,W
     0028 0C03                      1- 1776     	BTRSC	STATUS,0
     0029 05rr                      1- 1777     	INCR	r0x104E,W
     002A 0D03                      1- 1778     	BTRSC	STATUS,2
     002B 3rrr                      1- 1779     	LGOTO	_00003_DS_
                                    1- 1780     	BANKSEL	_R_AIN5_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1781     	ADDAR	(_R_AIN5_DATA + 1),F
     002E                           1- 1782     _00003_DS_:
                                    1- 1783     	.line	374, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1784     	BANKSEL	r0x104A
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1785     	INCR	r0x104A,F
     0030 3rrr                      1- 1786     	LGOTO	_00266_DS_
     0031                           1- 1787     _00268_DS_:
                                    1- 1788     	.line	381, "main.c"; 	}
                                    1- 1789     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1790     ; exit point of _F_AIN5_Convert
                                    1- 1792     ;***
                                    1- 1793     ;  pBlock Stats: dbName = C
                                    1- 1794     ;***
                                    1- 1795     ;has an exit
                                    1- 1796     ;functions called:
                                    1- 1797     ;   _F_AIN5_Convert
                                    1- 1798     ;   __divuint
                                    1- 1799     ;   _checkLowWater
                                    1- 1800     ;   __divuchar
                                    1- 1801     ;   __moduchar
                                    1- 1802     ;   _F_AIN5_Convert
                                    1- 1803     ;   __divuint
                                    1- 1804     ;   _checkLowWater
                                    1- 1805     ;   __divuchar
                                    1- 1806     ;   __moduchar
                                    1- 1807     ;7 compiler assigned registers:
                                    1- 1808     ;   r0x1053
                                    1- 1809     ;   r0x1054
                                    1- 1810     ;   r0x1055
                                    1- 1811     ;   r0x1056
                                    1- 1812     ;   STK02
                                    1- 1813     ;   STK01
                                    1- 1814     ;   STK00
                                    1- 1815     ;; Starting pCode block
                                    1- 1816     .segment "code"; module=main, function=_checkBatAD
                                    1- 1818     ;local variable name mapping:
     0000                           1- 1820     _checkBatAD:
                                    1- 1821     ; 2 exit points
                                    1- 1822     	.line	327, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA_LB = 0x00;
                                    1- 1823     	BANKSEL	_R_AIN5_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1824     	CLRR	_R_AIN5_DATA_LB
                                    1- 1825     	BANKSEL	_R_AIN5_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1826     	CLRR	_R_AIN5_DATA
     0004 02rr                      1- 1827     	CLRR	(_R_AIN5_DATA + 1)
                                    1- 1828     	.line	328, "main.c"; 	F_AIN5_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1829     	MOVIA	0x08
     0006 2rrr                      1- 1830     	LCALL	_F_AIN5_Convert
                                    1- 1831     	.line	329, "main.c"; 	R_AIN5_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1832     	BANKSEL	_R_AIN5_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1833     	SWAPR	(_R_AIN5_DATA + 1),W
     0009 22F0                      1- 1834     	ANDIA	0xf0
     000A 00rr                      1- 1835     	MOVAR	(_R_AIN5_DATA + 1)
     000B 15rr                      1- 1836     	SWAPR	_R_AIN5_DATA,W
     000C 00rr                      1- 1837     	MOVAR	_R_AIN5_DATA
     000D 220F                      1- 1838     	ANDIA	0x0f
     000E 11rr                      1- 1839     	IORAR	(_R_AIN5_DATA + 1),F
     000F 12rr                      1- 1840     	XORAR	_R_AIN5_DATA,F
                                    1- 1841     	.line	330, "main.c"; 	R_AIN5_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1842     	MOVIA	0xf0
                                    1- 1843     	BANKSEL	_R_AIN5_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1844     	ANDAR	_R_AIN5_DATA_LB,F
                                    1- 1845     	.line	331, "main.c"; 	R_AIN5_DATA += R_AIN5_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1846     	MOVR	_R_AIN5_DATA_LB,W
                                    1- 1847     	BANKSEL	r0x1053
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1848     	MOVAR	r0x1053
                                    1- 1849     	BANKSEL	r0x1054
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 02rr                      1- 1850     	CLRR	r0x1054
                                    1- 1851     	BANKSEL	r0x1053
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1852     	MOVR	r0x1053,W
     001A 2100                      1- 1853     	MOVIA	0x00
                                    1- 1854     	BANKSEL	r0x1056
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1855     	MOVAR	r0x1056
                                    1- 1856     ;;107	MOVR	r0x1055,W
                                    1- 1857     	BANKSEL	r0x1053
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1858     	MOVR	r0x1053,W
                                    1- 1859     	BANKSEL	r0x1055
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 1860     	MOVAR	r0x1055
                                    1- 1861     	BANKSEL	_R_AIN5_DATA
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 03rr                      1- 1862     	ADDAR	_R_AIN5_DATA,F
                                    1- 1863     	BANKSEL	r0x1056
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1- 1864     	MOVR	r0x1056,W
     0025 0C03                      1- 1865     	BTRSC	STATUS,0
     0026 05rr                      1- 1866     	INCR	r0x1056,W
     0027 0D03                      1- 1867     	BTRSC	STATUS,2
     0028 3rrr                      1- 1868     	LGOTO	_00004_DS_
                                    1- 1869     	BANKSEL	_R_AIN5_DATA
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 03rr                      1- 1870     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1- 1871     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002B                           1- 1872     _00004_DS_:
                                    1- 1873     	.line	332, "main.c"; 	R_AIN5_DATA >>=3;					// R_AIN0_DATA divided 8	
     002B 1C03                      1- 1874     	BCR	STATUS,0
                                    1- 1875     	BANKSEL	_R_AIN5_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 13rr                      1- 1876     	RRR	(_R_AIN5_DATA + 1),F
     002E 13rr                      1- 1877     	RRR	_R_AIN5_DATA,F
                                    1- 1878     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002F 1C03                      1- 1879     	BCR	STATUS,0
     0030 13rr                      1- 1880     	RRR	(_R_AIN5_DATA + 1),F
     0031 13rr                      1- 1881     	RRR	_R_AIN5_DATA,F
                                    1- 1882     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0032 1C03                      1- 1883     	BCR	STATUS,0
     0033 13rr                      1- 1884     	RRR	(_R_AIN5_DATA + 1),F
     0034 13rr                      1- 1885     	RRR	_R_AIN5_DATA,F
                                    1- 1886     	.line	334, "main.c"; 	sumR_AIN5_DATA += R_AIN5_DATA;
     0035 01rr                      1- 1887     	MOVR	_R_AIN5_DATA,W
                                    1- 1888     	BANKSEL	_sumR_AIN5_DATA
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 03rr                      1- 1889     	ADDAR	_sumR_AIN5_DATA,F
                                    1- 1890     	BANKSEL	_R_AIN5_DATA
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 01rr                      1- 1891     	MOVR	(_R_AIN5_DATA + 1),W
     003A 0C03                      1- 1892     	BTRSC	STATUS,0
     003B 05rr                      1- 1893     	INCR	(_R_AIN5_DATA + 1),W
     003C 0D03                      1- 1894     	BTRSC	STATUS,2
     003D 3rrr                      1- 1895     	LGOTO	_00005_DS_
                                    1- 1896     	BANKSEL	_sumR_AIN5_DATA
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 03rr                      1- 1897     	ADDAR	(_sumR_AIN5_DATA + 1),F
     0040                           1- 1898     _00005_DS_:
                                    1- 1899     	.line	335, "main.c"; 	if(++addtime >=10)
                                    1- 1900     	BANKSEL	_addtime
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 05rr                      1- 1901     	INCR	_addtime,F
                                    1- 1902     ;;unsigned compare: left < lit (0xA=10), size=1
     0042 210A                      1- 1903     	MOVIA	0x0a
     0043 04rr                      1- 1904     	SUBAR	_addtime,W
     0044 0803                      1- 1905     	BTRSS	STATUS,0
     0045 3rrr                      1- 1906     	LGOTO	_00239_DS_
                                    1- 1907     	.line	337, "main.c"; 	R_AIN5_DATA = sumR_AIN5_DATA/addtime;
     0046 01rr                      1- 1908     	MOVR	_addtime,W
                                    1- 1909     	BANKSEL	r0x1053
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 1910     	MOVAR	r0x1053
                                    1- 1911     	BANKSEL	r0x1054
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 02rr                      1- 1912     	CLRR	r0x1054
                                    1- 1913     	BANKSEL	r0x1053
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1- 1914     	MOVR	r0x1053,W
     004D 00rr                      1- 1915     	MOVAR	STK02
     004E 2100                      1- 1916     	MOVIA	0x00
     004F 00rr                      1- 1917     	MOVAR	STK01
                                    1- 1918     	BANKSEL	_sumR_AIN5_DATA
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1- 1919     	MOVR	_sumR_AIN5_DATA,W
     0052 00rr                      1- 1920     	MOVAR	STK00
     0053 01rr                      1- 1921     	MOVR	(_sumR_AIN5_DATA + 1),W
     0054 2rrr                      1- 1922     	LCALL	__divuint
                                    1- 1923     	BANKSEL	_R_AIN5_DATA
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 00rr                      1- 1924     	MOVAR	(_R_AIN5_DATA + 1)
     0057 01rr                      1- 1925     	MOVR	STK00,W
     0058 00rr                      1- 1926     	MOVAR	_R_AIN5_DATA
                                    1- 1927     	.line	338, "main.c"; 	sumR_AIN5_DATA = 0;
                                    1- 1928     	BANKSEL	_sumR_AIN5_DATA
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 02rr                      1- 1929     	CLRR	_sumR_AIN5_DATA
     005B 02rr                      1- 1930     	CLRR	(_sumR_AIN5_DATA + 1)
                                    1- 1931     	.line	339, "main.c"; 	addtime = 0;
                                    1- 1932     	BANKSEL	_addtime
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 02rr                      1- 1933     	CLRR	_addtime
                                    1- 1934     	.line	340, "main.c"; 	checkLowWater();
     005E 2rrr                      1- 1935     	LCALL	_checkLowWater
                                    1- 1936     ;;unsigned compare: left < lit (0x69A=1690), size=2
     005F                           1- 1937     _00239_DS_:
                                    1- 1938     	.line	342, "main.c"; 	if(R_AIN5_DATA < 1690)
     005F 2106                      1- 1939     	MOVIA	0x06
                                    1- 1940     	BANKSEL	_R_AIN5_DATA
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 04rr                      1- 1941     	SUBAR	(_R_AIN5_DATA + 1),W
     0062 0903                      1- 1942     	BTRSS	STATUS,2
     0063 3rrr                      1- 1943     	LGOTO	_00258_DS_
     0064 219A                      1- 1944     	MOVIA	0x9a
     0065 04rr                      1- 1945     	SUBAR	_R_AIN5_DATA,W
     0066                           1- 1946     _00258_DS_:
     0066 0C03                      1- 1947     	BTRSC	STATUS,0
     0067 3rrr                      1- 1948     	LGOTO	_00244_DS_
                                    1- 1949     	.line	344, "main.c"; 	baiweiNum = 0;
                                    1- 1950     	BANKSEL	_baiweiNum
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 02rr                      1- 1951     	CLRR	_baiweiNum
                                    1- 1952     	.line	345, "main.c"; 	shiweiNum = 0;
                                    1- 1953     	BANKSEL	_shiweiNum
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 02rr                      1- 1954     	CLRR	_shiweiNum
                                    1- 1955     	.line	346, "main.c"; 	geweiNum = 0;
                                    1- 1956     	BANKSEL	_geweiNum
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 02rr                      1- 1957     	CLRR	_geweiNum
     006E 3rrr                      1- 1958     	LGOTO	_00246_DS_
                                    1- 1959     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1960     ;;unsigned compare: left >= lit (0x835=2101), size=2
     006F                           1- 1961     _00244_DS_:
                                    1- 1962     	.line	348, "main.c"; 	else if(R_AIN5_DATA > 2100)
     006F 2108                      1- 1963     	MOVIA	0x08
                                    1- 1964     	BANKSEL	_R_AIN5_DATA
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 04rr                      1- 1965     	SUBAR	(_R_AIN5_DATA + 1),W
     0072 0903                      1- 1966     	BTRSS	STATUS,2
     0073 3rrr                      1- 1967     	LGOTO	_00259_DS_
     0074 2135                      1- 1968     	MOVIA	0x35
     0075 04rr                      1- 1969     	SUBAR	_R_AIN5_DATA,W
     0076                           1- 1970     _00259_DS_:
     0076 0803                      1- 1971     	BTRSS	STATUS,0
     0077 3rrr                      1- 1972     	LGOTO	_00241_DS_
                                    1- 1973     	.line	350, "main.c"; 	baiweiNum = 1;
     0078 2101                      1- 1974     	MOVIA	0x01
                                    1- 1975     	BANKSEL	_baiweiNum
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 00rr                      1- 1976     	MOVAR	_baiweiNum
                                    1- 1977     	.line	351, "main.c"; 	shiweiNum = 0;
                                    1- 1978     	BANKSEL	_shiweiNum
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 02rr                      1- 1979     	CLRR	_shiweiNum
                                    1- 1980     	.line	352, "main.c"; 	geweiNum = 0;
                                    1- 1981     	BANKSEL	_geweiNum
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 02rr                      1- 1982     	CLRR	_geweiNum
     007F 3rrr                      1- 1983     	LGOTO	_00246_DS_
     0080                           1- 1984     _00241_DS_:
                                    1- 1985     	.line	356, "main.c"; 	baiweiNum = 0;
                                    1- 1986     	BANKSEL	_baiweiNum
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 02rr                      1- 1987     	CLRR	_baiweiNum
                                    1- 1988     	.line	357, "main.c"; 	char nbat = (R_AIN5_DATA - 1690)/4;
     0082 2166                      1- 1989     	MOVIA	0x66
                                    1- 1990     	BANKSEL	_R_AIN5_DATA
     0083 rrrr                      3-   71 m1      .banksel ram_address
     0084 03rr                      1- 1991     	ADDAR	_R_AIN5_DATA,W
                                    1- 1992     	BANKSEL	r0x1053
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 00rr                      1- 1993     	MOVAR	r0x1053
     0087 21F9                      1- 1994     	MOVIA	0xf9
                                    1- 1995     	BANKSEL	r0x1054
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 00rr                      1- 1996     	MOVAR	r0x1054
                                    1- 1997     	BANKSEL	_R_AIN5_DATA
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 01rr                      1- 1998     	MOVR	(_R_AIN5_DATA + 1),W
     008C 0C03                      1- 1999     	BTRSC	STATUS,0
     008D 05rr                      1- 2000     	INCR	(_R_AIN5_DATA + 1),W
     008E 0D03                      1- 2001     	BTRSC	STATUS,2
     008F 3rrr                      1- 2002     	LGOTO	_00006_DS_
                                    1- 2003     	BANKSEL	r0x1054
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 03rr                      1- 2004     	ADDAR	r0x1054,F
                                    1- 2005     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=0, offr=0
     0092                           1- 2006     _00006_DS_:
     0092 1C03                      1- 2007     	BCR	STATUS,0
                                    1- 2008     	BANKSEL	r0x1054
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 13rr                      1- 2009     	RRR	r0x1054,W
                                    1- 2010     	BANKSEL	r0x1056
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 00rr                      1- 2011     	MOVAR	r0x1056
                                    1- 2012     	BANKSEL	r0x1053
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 13rr                      1- 2013     	RRR	r0x1053,W
                                    1- 2014     	BANKSEL	r0x1055
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 00rr                      1- 2015     	MOVAR	r0x1055
                                    1- 2016     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     009B 1C03                      1- 2017     	BCR	STATUS,0
                                    1- 2018     	BANKSEL	r0x1056
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 13rr                      1- 2019     	RRR	r0x1056,F
                                    1- 2020     	BANKSEL	r0x1055
     009E rrrr                      3-   71 m1      .banksel ram_address
     009F 13rr                      1- 2021     	RRR	r0x1055,F
     00A0 01rr                      1- 2022     	MOVR	r0x1055,W
                                    1- 2023     	.line	358, "main.c"; 	shiweiNum = nbat/10;
     00A1 210A                      1- 2024     	MOVIA	0x0a
     00A2 00rr                      1- 2025     	MOVAR	STK00
                                    1- 2026     ;;106	MOVR	r0x1053,W
     00A3 01rr                      1- 2027     	MOVR	r0x1055,W
                                    1- 2028     	BANKSEL	r0x1053
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 00rr                      1- 2029     	MOVAR	r0x1053
     00A6 2rrr                      1- 2030     	LCALL	__divuchar
                                    1- 2031     	BANKSEL	_shiweiNum
     00A7 rrrr                      3-   71 m1      .banksel ram_address
     00A8 00rr                      1- 2032     	MOVAR	_shiweiNum
                                    1- 2033     	.line	359, "main.c"; 	geweiNum = nbat %10;
     00A9 210A                      1- 2034     	MOVIA	0x0a
     00AA 00rr                      1- 2035     	MOVAR	STK00
                                    1- 2036     	BANKSEL	r0x1053
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 01rr                      1- 2037     	MOVR	r0x1053,W
     00AD 2rrr                      1- 2038     	LCALL	__moduchar
                                    1- 2039     	BANKSEL	_geweiNum
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 00rr                      1- 2040     	MOVAR	_geweiNum
     00B0                           1- 2041     _00246_DS_:
                                    1- 2042     	.line	362, "main.c"; 	}
                                    1- 2043     	RETURN	
     00B0 0010                      3-   26 m1      ret
                                    1- 2044     ; exit point of _checkBatAD
                                    1- 2046     ;***
                                    1- 2047     ;  pBlock Stats: dbName = C
                                    1- 2048     ;***
                                    1- 2049     ;has an exit
                                    1- 2050     ;functions called:
                                    1- 2051     ;   _F_AIN9_Convert
                                    1- 2052     ;   _F_AIN9_Convert
                                    1- 2053     ;4 compiler assigned registers:
                                    1- 2054     ;   r0x104F
                                    1- 2055     ;   r0x1050
                                    1- 2056     ;   r0x1051
                                    1- 2057     ;   r0x1052
                                    1- 2058     ;; Starting pCode block
                                    1- 2059     .segment "code"; module=main, function=_checkLowWater
     0000                           1- 2061     _checkLowWater:
                                    1- 2062     ; 2 exit points
                                    1- 2063     	.line	303, "main.c"; 	R_AIN9_DATA = R_AIN9_DATA_LB = 0x00;
                                    1- 2064     	BANKSEL	_R_AIN9_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 2065     	CLRR	_R_AIN9_DATA_LB
                                    1- 2066     	BANKSEL	_R_AIN9_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 2067     	CLRR	_R_AIN9_DATA
     0004 02rr                      1- 2068     	CLRR	(_R_AIN9_DATA + 1)
                                    1- 2069     	.line	304, "main.c"; 	F_AIN9_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 2070     	MOVIA	0x08
     0006 2rrr                      1- 2071     	LCALL	_F_AIN9_Convert
                                    1- 2072     	.line	305, "main.c"; 	R_AIN9_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 2073     	BANKSEL	_R_AIN9_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 2074     	SWAPR	(_R_AIN9_DATA + 1),W
     0009 22F0                      1- 2075     	ANDIA	0xf0
     000A 00rr                      1- 2076     	MOVAR	(_R_AIN9_DATA + 1)
     000B 15rr                      1- 2077     	SWAPR	_R_AIN9_DATA,W
     000C 00rr                      1- 2078     	MOVAR	_R_AIN9_DATA
     000D 220F                      1- 2079     	ANDIA	0x0f
     000E 11rr                      1- 2080     	IORAR	(_R_AIN9_DATA + 1),F
     000F 12rr                      1- 2081     	XORAR	_R_AIN9_DATA,F
                                    1- 2082     	.line	306, "main.c"; 	R_AIN9_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 2083     	MOVIA	0xf0
                                    1- 2084     	BANKSEL	_R_AIN9_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 2085     	ANDAR	_R_AIN9_DATA_LB,F
                                    1- 2086     	.line	307, "main.c"; 	R_AIN9_DATA += R_AIN9_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 2087     	MOVR	_R_AIN9_DATA_LB,W
                                    1- 2088     	BANKSEL	r0x1051
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 2089     	MOVAR	r0x1051
                                    1- 2090     ;;1	MOVAR	r0x104F
                                    1- 2091     ;;1	CLRR	r0x1050
                                    1- 2092     ;;99	MOVR	r0x104F,W
     0016 2100                      1- 2093     	MOVIA	0x00
                                    1- 2094     	BANKSEL	r0x1052
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 2095     	MOVAR	r0x1052
                                    1- 2096     	BANKSEL	r0x1051
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 2097     	MOVR	r0x1051,W
                                    1- 2098     	BANKSEL	_R_AIN9_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 2099     	ADDAR	_R_AIN9_DATA,F
                                    1- 2100     	BANKSEL	r0x1052
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 2101     	MOVR	r0x1052,W
     001F 0C03                      1- 2102     	BTRSC	STATUS,0
     0020 05rr                      1- 2103     	INCR	r0x1052,W
     0021 0D03                      1- 2104     	BTRSC	STATUS,2
     0022 3rrr                      1- 2105     	LGOTO	_00007_DS_
                                    1- 2106     	BANKSEL	_R_AIN9_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 2107     	ADDAR	(_R_AIN9_DATA + 1),F
                                    1- 2108     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 2109     _00007_DS_:
                                    1- 2110     	.line	308, "main.c"; 	R_AIN9_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 2111     	BCR	STATUS,0
                                    1- 2112     	BANKSEL	_R_AIN9_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 2113     	RRR	(_R_AIN9_DATA + 1),F
     0028 13rr                      1- 2114     	RRR	_R_AIN9_DATA,F
                                    1- 2115     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 2116     	BCR	STATUS,0
     002A 13rr                      1- 2117     	RRR	(_R_AIN9_DATA + 1),F
     002B 13rr                      1- 2118     	RRR	_R_AIN9_DATA,F
                                    1- 2119     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 2120     	BCR	STATUS,0
     002D 13rr                      1- 2121     	RRR	(_R_AIN9_DATA + 1),F
     002E 13rr                      1- 2122     	RRR	_R_AIN9_DATA,F
                                    1- 2123     	.line	310, "main.c"; 	if(R_AIN9_DATA > R_AIN5_DATA)
     002F 01rr                      1- 2124     	MOVR	(_R_AIN9_DATA + 1),W
                                    1- 2125     	BANKSEL	_R_AIN5_DATA
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 04rr                      1- 2126     	SUBAR	(_R_AIN5_DATA + 1),W
     0032 0903                      1- 2127     	BTRSS	STATUS,2
     0033 3rrr                      1- 2128     	LGOTO	_00233_DS_
                                    1- 2129     	BANKSEL	_R_AIN9_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 2130     	MOVR	_R_AIN9_DATA,W
                                    1- 2131     	BANKSEL	_R_AIN5_DATA
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 04rr                      1- 2132     	SUBAR	_R_AIN5_DATA,W
     0038                           1- 2133     _00233_DS_:
     0038 0C03                      1- 2134     	BTRSC	STATUS,0
     0039 3rrr                      1- 2135     	LGOTO	_00223_DS_
                                    1- 2136     	.line	312, "main.c"; 	if(++lowWaterTime >= 10)
                                    1- 2137     	BANKSEL	_lowWaterTime
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 05rr                      1- 2138     	INCR	_lowWaterTime,F
                                    1- 2139     ;;unsigned compare: left < lit (0xA=10), size=1
     003C 210A                      1- 2140     	MOVIA	0x0a
     003D 04rr                      1- 2141     	SUBAR	_lowWaterTime,W
     003E 0803                      1- 2142     	BTRSS	STATUS,0
     003F 3rrr                      1- 2143     	LGOTO	_00225_DS_
                                    1- 2144     	.line	314, "main.c"; 	workStep = 0;
                                    1- 2145     	BANKSEL	_workStep
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 02rr                      1- 2146     	CLRR	_workStep
     0042 3rrr                      1- 2147     	LGOTO	_00225_DS_
     0043                           1- 2148     _00223_DS_:
                                    1- 2149     	.line	319, "main.c"; 	lowWaterTime = 0;
                                    1- 2150     	BANKSEL	_lowWaterTime
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 02rr                      1- 2151     	CLRR	_lowWaterTime
     0045                           1- 2152     _00225_DS_:
                                    1- 2153     	.line	321, "main.c"; 	}
                                    1- 2154     	RETURN	
     0045 0010                      3-   26 m1      ret
                                    1- 2155     ; exit point of _checkLowWater
                                    1- 2157     ;***
                                    1- 2158     ;  pBlock Stats: dbName = C
                                    1- 2159     ;***
                                    1- 2160     ;has an exit
                                    1- 2161     ;functions called:
                                    1- 2162     ;   _delay
                                    1- 2163     ;   _delay
                                    1- 2164     ;1 compiler assigned register :
                                    1- 2165     ;   STK00
                                    1- 2166     ;; Starting pCode block
                                    1- 2167     .segment "code"; module=main, function=_initAD
     0000                           1- 2169     _initAD:
                                    1- 2170     ; 2 exit points
                                    1- 2171     	.line	280, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PB0 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2185                      1- 2172     	MOVIA	0x85
     0001 00rr                      1- 2173     	MOVAR	_ADMD
                                    1- 2174     	.line	283, "main.c"; 	ADVREFH = C_Vrefh_4V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 2102                      1- 2175     	MOVIA	0x02
     0003 00rr                      1- 2176     	MOVAR	_ADVREFH
                                    1- 2177     	.line	290, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0004 2110                      1- 2178     	MOVIA	0x10
     0005 00rr                      1- 2179     	MOVAR	_ADR
                                    1- 2180     	.line	292, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0006 2103                      1- 2181     	MOVIA	0x03
     0007 00rr                      1- 2182     	MOVAR	_ADCR
                                    1- 2183     	.line	295, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0008 1Arr                      1- 2184     	BSR	_ADMDbits,4
                                    1- 2185     	.line	296, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0009 2164                      1- 2186     	MOVIA	0x64
     000A 00rr                      1- 2187     	MOVAR	STK00
     000B 2100                      1- 2188     	MOVIA	0x00
     000C 2rrr                      1- 2189     	LCALL	_delay
                                    1- 2190     	.line	299, "main.c"; 	}
                                    1- 2191     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1- 2192     ; exit point of _initAD
                                    1- 2194     ;***
                                    1- 2195     ;  pBlock Stats: dbName = C
                                    1- 2196     ;***
                                    1- 2197     ;has an exit
                                    1- 2198     ;functions called:
                                    1- 2199     ;   _keyRead
                                    1- 2200     ;   _keyRead
                                    1- 2201     ;1 compiler assigned register :
                                    1- 2202     ;   r0x1057
                                    1- 2203     ;; Starting pCode block
                                    1- 2204     .segment "code"; module=main, function=_keyCon
     0000                           1- 2206     _keyCon:
                                    1- 2207     ; 2 exit points
                                    1- 2208     	.line	249, "main.c"; 	keyClick = keyRead(0x40&(~PORTA));
     0000 07rr                      1- 2209     	COMR	_PORTA,W
                                    1- 2210     	BANKSEL	r0x1057
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2211     	MOVAR	r0x1057
     0003 2140                      1- 2212     	MOVIA	0x40
     0004 10rr                      1- 2213     	ANDAR	r0x1057,F
     0005 01rr                      1- 2214     	MOVR	r0x1057,W
     0006 2rrr                      1- 2215     	LCALL	_keyRead
                                    1- 2216     	BANKSEL	_keyClick
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 2217     	MOVAR	_keyClick
                                    1- 2218     	.line	251, "main.c"; 	if(keyClick == 1)			//短按
     0009 2401                      1- 2219     	XORIA	0x01
     000A 0903                      1- 2220     	BTRSS	STATUS,2
     000B 3rrr                      1- 2221     	LGOTO	_00209_DS_
                                    1- 2222     	.line	253, "main.c"; 	if(klcikTime > 0)
                                    1- 2223     	BANKSEL	_klcikTime
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 2224     	MOVR	_klcikTime,W
     000E 11rr                      1- 2225     	IORAR	(_klcikTime + 1),W
     000F 0D03                      1- 2226     	BTRSC	STATUS,2
     0010 3rrr                      1- 2227     	LGOTO	_00202_DS_
                                    1- 2228     	.line	255, "main.c"; 	douClickFlag = 1;
     0011 2101                      1- 2229     	MOVIA	0x01
                                    1- 2230     	BANKSEL	_douClickFlag
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2231     	MOVAR	_douClickFlag
     0014                           1- 2232     _00202_DS_:
                                    1- 2233     	.line	257, "main.c"; 	klcikTime = 300;
     0014 212C                      1- 2234     	MOVIA	0x2c
                                    1- 2235     	BANKSEL	_klcikTime
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 00rr                      1- 2236     	MOVAR	_klcikTime
     0017 2101                      1- 2237     	MOVIA	0x01
     0018 00rr                      1- 2238     	MOVAR	(_klcikTime + 1)
     0019 3rrr                      1- 2239     	LGOTO	_00211_DS_
     001A                           1- 2240     _00209_DS_:
                                    1- 2241     	.line	259, "main.c"; 	else if(keyClick == 2)		//长按
                                    1- 2242     	BANKSEL	_keyClick
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1- 2243     	MOVR	_keyClick,W
     001C 2402                      1- 2244     	XORIA	0x02
     001D 0903                      1- 2245     	BTRSS	STATUS,2
     001E 3rrr                      1- 2246     	LGOTO	_00211_DS_
                                    1- 2247     	.line	261, "main.c"; 	if(ledFlag)
                                    1- 2248     	BANKSEL	_ledFlag
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 2249     	MOVR	_ledFlag,W
     0021 0D03                      1- 2250     	BTRSC	STATUS,2
     0022 3rrr                      1- 2251     	LGOTO	_00204_DS_
                                    1- 2252     	.line	263, "main.c"; 	ledFlag = 0;
     0023 02rr                      1- 2253     	CLRR	_ledFlag
                                    1- 2254     	.line	264, "main.c"; 	PORTB &= 0xF9;
     0024 21F9                      1- 2255     	MOVIA	0xf9
     0025 10rr                      1- 2256     	ANDAR	_PORTB,F
                                    1- 2257     	.line	265, "main.c"; 	PORTA &= 0x7F;
     0026 1Frr                      1- 2258     	BCR	_PORTA,7
                                    1- 2259     	.line	266, "main.c"; 	count60s = 0;
                                    1- 2260     	BANKSEL	_count60s
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1- 2261     	CLRR	_count60s
     0029 02rr                      1- 2262     	CLRR	(_count60s + 1)
     002A 3rrr                      1- 2263     	LGOTO	_00211_DS_
     002B                           1- 2264     _00204_DS_:
                                    1- 2265     	.line	270, "main.c"; 	ledFlag = 1;
     002B 2101                      1- 2266     	MOVIA	0x01
                                    1- 2267     	BANKSEL	_ledFlag
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 2268     	MOVAR	_ledFlag
                                    1- 2269     	.line	271, "main.c"; 	ledAddFlag = 1;
                                    1- 2270     	BANKSEL	_ledAddFlag
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1- 2271     	MOVAR	_ledAddFlag
     0030                           1- 2272     _00211_DS_:
                                    1- 2273     	.line	275, "main.c"; 	}
                                    1- 2274     	RETURN	
     0030 0010                      3-   26 m1      ret
                                    1- 2275     ; exit point of _keyCon
                                    1- 2277     ;***
                                    1- 2278     ;  pBlock Stats: dbName = C
                                    1- 2279     ;***
                                    1- 2280     ;has an exit
                                    1- 2281     ;functions called:
                                    1- 2282     ;   _keyCon
                                    1- 2283     ;   _checkBatAD
                                    1- 2284     ;   _gotoSleep
                                    1- 2285     ;   _ledCon
                                    1- 2286     ;   _pwmCtr
                                    1- 2287     ;   _keyCon
                                    1- 2288     ;   _checkBatAD
                                    1- 2289     ;   _gotoSleep
                                    1- 2290     ;   _ledCon
                                    1- 2291     ;   _pwmCtr
                                    1- 2292     ;; Starting pCode block
                                    1- 2293     .segment "code"; module=main, function=_workCtr
     0000                           1- 2295     _workCtr:
                                    1- 2296     ; 2 exit points
                                    1- 2297     	.line	214, "main.c"; 	if(++count10ms >=2)
                                    1- 2298     	BANKSEL	_count10ms
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 2299     	INCR	_count10ms,F
                                    1- 2300     ;;unsigned compare: left < lit (0x2=2), size=1
     0002 2102                      1- 2301     	MOVIA	0x02
     0003 04rr                      1- 2302     	SUBAR	_count10ms,W
     0004 0803                      1- 2303     	BTRSS	STATUS,0
     0005 3rrr                      1- 2304     	LGOTO	_00170_DS_
                                    1- 2305     	.line	216, "main.c"; 	count10ms = 0;
     0006 02rr                      1- 2306     	CLRR	_count10ms
                                    1- 2307     	.line	217, "main.c"; 	keyCon();
     0007 2rrr                      1- 2308     	LCALL	_keyCon
                                    1- 2309     	.line	218, "main.c"; 	if(++count1s >= 10)
                                    1- 2310     	BANKSEL	_count1s
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 05rr                      1- 2311     	INCR	_count1s,F
                                    1- 2312     ;;unsigned compare: left < lit (0xA=10), size=1
     000A 210A                      1- 2313     	MOVIA	0x0a
     000B 04rr                      1- 2314     	SUBAR	_count1s,W
     000C 0803                      1- 2315     	BTRSS	STATUS,0
     000D 3rrr                      1- 2316     	LGOTO	_00159_DS_
                                    1- 2317     	.line	220, "main.c"; 	count1s = 0;
     000E 02rr                      1- 2318     	CLRR	_count1s
                                    1- 2319     	.line	221, "main.c"; 	checkBatAD();
     000F 2rrr                      1- 2320     	LCALL	_checkBatAD
     0010                           1- 2321     _00159_DS_:
                                    1- 2322     	.line	223, "main.c"; 	if(keyCount == 0 && ledFlag == 0 && workStep == 0 )
                                    1- 2323     	BANKSEL	_keyCount
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 2324     	MOVR	_keyCount,W
     0012 0903                      1- 2325     	BTRSS	STATUS,2
     0013 3rrr                      1- 2326     	LGOTO	_00163_DS_
                                    1- 2327     	BANKSEL	_ledFlag
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 2328     	MOVR	_ledFlag,W
     0016 0903                      1- 2329     	BTRSS	STATUS,2
     0017 3rrr                      1- 2330     	LGOTO	_00163_DS_
                                    1- 2331     	BANKSEL	_workStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 2332     	MOVR	_workStep,W
     001A 0903                      1- 2333     	BTRSS	STATUS,2
     001B 3rrr                      1- 2334     	LGOTO	_00163_DS_
                                    1- 2335     	.line	225, "main.c"; 	if(++count300s > 30000){
                                    1- 2336     	BANKSEL	_count300s
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 05rr                      1- 2337     	INCR	_count300s,F
     001E 0D03                      1- 2338     	BTRSC	STATUS,2
     001F 05rr                      1- 2339     	INCR	(_count300s + 1),F
                                    1- 2340     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2341     ;;unsigned compare: left >= lit (0x7531=30001), size=2
     0020 2175                      1- 2342     	MOVIA	0x75
     0021 04rr                      1- 2343     	SUBAR	(_count300s + 1),W
     0022 0903                      1- 2344     	BTRSS	STATUS,2
     0023 3rrr                      1- 2345     	LGOTO	_00196_DS_
     0024 2131                      1- 2346     	MOVIA	0x31
     0025 04rr                      1- 2347     	SUBAR	_count300s,W
     0026                           1- 2348     _00196_DS_:
     0026 0803                      1- 2349     	BTRSS	STATUS,0
     0027 3rrr                      1- 2350     	LGOTO	_00164_DS_
                                    1- 2351     	.line	226, "main.c"; 	count300s = 0;
                                    1- 2352     	BANKSEL	_count300s
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 2353     	CLRR	_count300s
     002A 02rr                      1- 2354     	CLRR	(_count300s + 1)
                                    1- 2355     	.line	227, "main.c"; 	gotoSleep();
     002B 2rrr                      1- 2356     	LCALL	_gotoSleep
     002C 3rrr                      1- 2357     	LGOTO	_00164_DS_
     002D                           1- 2358     _00163_DS_:
                                    1- 2359     	.line	232, "main.c"; 	count300s = 0;
                                    1- 2360     	BANKSEL	_count300s
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 02rr                      1- 2361     	CLRR	_count300s
     002F 02rr                      1- 2362     	CLRR	(_count300s + 1)
     0030                           1- 2363     _00164_DS_:
                                    1- 2364     	.line	234, "main.c"; 	if(ledAddFlag)
                                    1- 2365     	BANKSEL	_ledAddFlag
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1- 2366     	MOVR	_ledAddFlag,W
     0032 0903                      1- 2367     	BTRSS	STATUS,2
                                    1- 2368     	.line	236, "main.c"; 	ledCon();
     0033 2rrr                      1- 2369     	LCALL	_ledCon
     0034                           1- 2370     _00170_DS_:
                                    1- 2371     	.line	242, "main.c"; 	pwmCtr();
     0034 2rrr                      1- 2372     	LCALL	_pwmCtr
                                    1- 2373     	.line	244, "main.c"; 	}
                                    1- 2374     	RETURN	
     0035 0010                      3-   26 m1      ret
                                    1- 2375     ; exit point of _workCtr
                                    1- 2377     ;***
                                    1- 2378     ;  pBlock Stats: dbName = C
                                    1- 2379     ;***
                                    1- 2380     ;has an exit
                                    1- 2381     ;functions called:
                                    1- 2382     ;   _showBaiwei
                                    1- 2383     ;   __gptrget1
                                    1- 2384     ;   _showNubShiwei
                                    1- 2385     ;   __gptrget1
                                    1- 2386     ;   _showNubShiwei
                                    1- 2387     ;   __gptrget1
                                    1- 2388     ;   _showNubGewei
                                    1- 2389     ;   _showBaiwei
                                    1- 2390     ;   __gptrget1
                                    1- 2391     ;   _showNubShiwei
                                    1- 2392     ;   __gptrget1
                                    1- 2393     ;   _showNubShiwei
                                    1- 2394     ;   __gptrget1
                                    1- 2395     ;   _showNubGewei
                                    1- 2396     ;5 compiler assigned registers:
                                    1- 2397     ;   r0x1058
                                    1- 2398     ;   r0x1059
                                    1- 2399     ;   STK01
                                    1- 2400     ;   STK00
                                    1- 2401     ;   r0x105A
                                    1- 2402     ;; Starting pCode block
                                    1- 2403     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2405     _refreshNub:
                                    1- 2406     ; 2 exit points
                                    1- 2407     	.line	137, "main.c"; 	if(++refreshCount >= 100)
                                    1- 2408     	BANKSEL	_refreshCount
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 2409     	INCR	_refreshCount,F
                                    1- 2410     ;;unsigned compare: left < lit (0x64=100), size=1
     0002 2164                      1- 2411     	MOVIA	0x64
     0003 04rr                      1- 2412     	SUBAR	_refreshCount,W
     0004 0803                      1- 2413     	BTRSS	STATUS,0
     0005 3rrr                      1- 2414     	LGOTO	_00138_DS_
                                    1- 2415     	.line	139, "main.c"; 	refreshCount = 0;
     0006 02rr                      1- 2416     	CLRR	_refreshCount
                                    1- 2417     	.line	140, "main.c"; 	if(tempshiweiNum > shiweiNum || tempgeweiNum > geweiNum)
                                    1- 2418     	BANKSEL	_tempshiweiNum
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1- 2419     	MOVR	_tempshiweiNum,W
                                    1- 2420     	BANKSEL	_shiweiNum
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 04rr                      1- 2421     	SUBAR	_shiweiNum,W
     000B 0803                      1- 2422     	BTRSS	STATUS,0
     000C 3rrr                      1- 2423     	LGOTO	_00133_DS_
                                    1- 2424     	BANKSEL	_tempgeweiNum
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 2425     	MOVR	_tempgeweiNum,W
                                    1- 2426     	BANKSEL	_geweiNum
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1- 2427     	SUBAR	_geweiNum,W
     0011 0C03                      1- 2428     	BTRSC	STATUS,0
     0012 3rrr                      1- 2429     	LGOTO	_00134_DS_
     0013                           1- 2430     _00133_DS_:
                                    1- 2431     	.line	142, "main.c"; 	if(++lowPowerTime > 10)
                                    1- 2432     	BANKSEL	_lowPowerTime
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 05rr                      1- 2433     	INCR	_lowPowerTime,F
                                    1- 2434     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2435     ;;unsigned compare: left >= lit (0xB=11), size=1
     0015 210B                      1- 2436     	MOVIA	0x0b
     0016 04rr                      1- 2437     	SUBAR	_lowPowerTime,W
     0017 0803                      1- 2438     	BTRSS	STATUS,0
     0018 3rrr                      1- 2439     	LGOTO	_00138_DS_
                                    1- 2440     	.line	144, "main.c"; 	lowPowerTime = 0;
     0019 02rr                      1- 2441     	CLRR	_lowPowerTime
                                    1- 2442     	.line	145, "main.c"; 	tempbaiweiNum = baiweiNum;
                                    1- 2443     	BANKSEL	_baiweiNum
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1- 2444     	MOVR	_baiweiNum,W
                                    1- 2445     	BANKSEL	_tempbaiweiNum
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1- 2446     	MOVAR	_tempbaiweiNum
                                    1- 2447     	.line	146, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2448     	BANKSEL	_shiweiNum
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 2449     	MOVR	_shiweiNum,W
                                    1- 2450     	BANKSEL	_tempshiweiNum
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 2451     	MOVAR	_tempshiweiNum
                                    1- 2452     	.line	147, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2453     	BANKSEL	_geweiNum
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 2454     	MOVR	_geweiNum,W
                                    1- 2455     	BANKSEL	_tempgeweiNum
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 2456     	MOVAR	_tempgeweiNum
     0026 3rrr                      1- 2457     	LGOTO	_00138_DS_
     0027                           1- 2458     _00134_DS_:
                                    1- 2459     	.line	152, "main.c"; 	lowPowerTime = 0;
                                    1- 2460     	BANKSEL	_lowPowerTime
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1- 2461     	CLRR	_lowPowerTime
                                    1- 2462     	.line	153, "main.c"; 	tempbaiweiNum = baiweiNum;
                                    1- 2463     	BANKSEL	_baiweiNum
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 2464     	MOVR	_baiweiNum,W
                                    1- 2465     	BANKSEL	_tempbaiweiNum
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 00rr                      1- 2466     	MOVAR	_tempbaiweiNum
                                    1- 2467     	.line	154, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2468     	BANKSEL	_shiweiNum
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1- 2469     	MOVR	_shiweiNum,W
                                    1- 2470     	BANKSEL	_tempshiweiNum
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 00rr                      1- 2471     	MOVAR	_tempshiweiNum
                                    1- 2472     	.line	155, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2473     	BANKSEL	_geweiNum
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1- 2474     	MOVR	_geweiNum,W
                                    1- 2475     	BANKSEL	_tempgeweiNum
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1- 2476     	MOVAR	_tempgeweiNum
     0035                           1- 2477     _00138_DS_:
                                    1- 2478     	.line	161, "main.c"; 	if(tempbaiweiNum)
                                    1- 2479     	BANKSEL	_tempbaiweiNum
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 2480     	MOVR	_tempbaiweiNum,W
     0037 0903                      1- 2481     	BTRSS	STATUS,2
                                    1- 2482     	.line	162, "main.c"; 	showBaiwei();
     0038 2rrr                      1- 2483     	LCALL	_showBaiwei
                                    1- 2484     	.line	163, "main.c"; 	if(tempbaiweiNum)
                                    1- 2485     	BANKSEL	_tempbaiweiNum
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 2486     	MOVR	_tempbaiweiNum,W
     003B 0D03                      1- 2487     	BTRSC	STATUS,2
     003C 3rrr                      1- 2488     	LGOTO	_00144_DS_
                                    1- 2489     	.line	164, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2490     	BANKSEL	_tempshiweiNum
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1- 2491     	MOVR	_tempshiweiNum,W
     003F 25rr                      1- 2492     	ADDIA	(_numArray + 0)
                                    1- 2493     	BANKSEL	r0x1058
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 00rr                      1- 2494     	MOVAR	r0x1058
     0042 21rr                      1- 2495     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0043 0C03                      1- 2496     	BTRSC	STATUS,0
     0044 2501                      1- 2497     	ADDIA	0x01
                                    1- 2498     	BANKSEL	r0x1059
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 00rr                      1- 2499     	MOVAR	r0x1059
                                    1- 2500     	BANKSEL	r0x1058
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1- 2501     	MOVR	r0x1058,W
     0049 00rr                      1- 2502     	MOVAR	STK01
                                    1- 2503     	BANKSEL	r0x1059
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 01rr                      1- 2504     	MOVR	r0x1059,W
     004C 00rr                      1- 2505     	MOVAR	STK00
     004D 2100                      1- 2506     	MOVIA	0x00
     004E 2rrr                      1- 2507     	LCALL	__gptrget1
                                    1- 2508     	BANKSEL	r0x105A
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1- 2509     	MOVAR	r0x105A
     0051 2rrr                      1- 2510     	LCALL	_showNubShiwei
     0052 3rrr                      1- 2511     	LGOTO	_00145_DS_
     0053                           1- 2512     _00144_DS_:
                                    1- 2513     	.line	165, "main.c"; 	else if(tempshiweiNum)
                                    1- 2514     	BANKSEL	_tempshiweiNum
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 01rr                      1- 2515     	MOVR	_tempshiweiNum,W
     0055 0D03                      1- 2516     	BTRSC	STATUS,2
     0056 3rrr                      1- 2517     	LGOTO	_00145_DS_
                                    1- 2518     	.line	166, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
     0057 01rr                      1- 2519     	MOVR	_tempshiweiNum,W
     0058 25rr                      1- 2520     	ADDIA	(_numArray + 0)
                                    1- 2521     	BANKSEL	r0x1058
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 00rr                      1- 2522     	MOVAR	r0x1058
     005B 21rr                      1- 2523     	MOVIA	((_numArray + 0) >> 8) & 0xff
     005C 0C03                      1- 2524     	BTRSC	STATUS,0
     005D 2501                      1- 2525     	ADDIA	0x01
                                    1- 2526     	BANKSEL	r0x1059
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 00rr                      1- 2527     	MOVAR	r0x1059
                                    1- 2528     	BANKSEL	r0x1058
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1- 2529     	MOVR	r0x1058,W
     0062 00rr                      1- 2530     	MOVAR	STK01
                                    1- 2531     	BANKSEL	r0x1059
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 01rr                      1- 2532     	MOVR	r0x1059,W
     0065 00rr                      1- 2533     	MOVAR	STK00
     0066 2100                      1- 2534     	MOVIA	0x00
     0067 2rrr                      1- 2535     	LCALL	__gptrget1
                                    1- 2536     	BANKSEL	r0x105A
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 00rr                      1- 2537     	MOVAR	r0x105A
     006A 2rrr                      1- 2538     	LCALL	_showNubShiwei
     006B                           1- 2539     _00145_DS_:
                                    1- 2540     	.line	167, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2541     	BANKSEL	_tempgeweiNum
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 01rr                      1- 2542     	MOVR	_tempgeweiNum,W
     006D 25rr                      1- 2543     	ADDIA	(_numArray + 0)
                                    1- 2544     	BANKSEL	r0x1058
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 00rr                      1- 2545     	MOVAR	r0x1058
     0070 21rr                      1- 2546     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0071 0C03                      1- 2547     	BTRSC	STATUS,0
     0072 2501                      1- 2548     	ADDIA	0x01
                                    1- 2549     	BANKSEL	r0x1059
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 00rr                      1- 2550     	MOVAR	r0x1059
                                    1- 2551     	BANKSEL	r0x1058
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 01rr                      1- 2552     	MOVR	r0x1058,W
     0077 00rr                      1- 2553     	MOVAR	STK01
                                    1- 2554     	BANKSEL	r0x1059
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 01rr                      1- 2555     	MOVR	r0x1059,W
     007A 00rr                      1- 2556     	MOVAR	STK00
     007B 2100                      1- 2557     	MOVIA	0x00
     007C 2rrr                      1- 2558     	LCALL	__gptrget1
                                    1- 2559     	BANKSEL	r0x105A
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 00rr                      1- 2560     	MOVAR	r0x105A
     007F 2rrr                      1- 2561     	LCALL	_showNubGewei
                                    1- 2562     	.line	170, "main.c"; 	}
                                    1- 2563     	RETURN	
     0080 0010                      3-   26 m1      ret
                                    1- 2564     ; exit point of _refreshNub
                                    1- 2567     ;	code size estimation:
                                    1- 2568     ;	  929+  258 =  1187 instructions ( 2890 byte)
                                    1- 2570     	end
                                    1- 2570     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuchar              Label    00000000
__divuint               Label    00000000
__gptrget1              Label    00000000
__moduchar              Label    00000000
__moduint               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    0000002E
_00003_DS_              Label    0000002E
_00004_DS_              Label    0000002B
_00005_DS_              Label    00000040
_00006_DS_              Label    00000092
_00007_DS_              Label    00000025
_00106_DS_              Label    0000002B
_00108_DS_              Label    0000004C
_00113_DS_              Label    00000050
_00114_DS_              Label    00000056
_00122_DS_              Label    00000058
_00124_DS_              Label    0000005B
_00126_DS_              Label    0000005F
_00133_DS_              Label    00000013
_00134_DS_              Label    00000027
_00138_DS_              Label    00000035
_00144_DS_              Label    00000053
_00145_DS_              Label    0000006B
_00153_DS_              Label    00000018
_00159_DS_              Label    00000010
_00163_DS_              Label    0000002D
_00164_DS_              Label    00000030
_00170_DS_              Label    00000034
_00196_DS_              Label    00000026
_00202_DS_              Label    00000014
_00204_DS_              Label    0000002B
_00209_DS_              Label    0000001A
_00211_DS_              Label    00000030
_00223_DS_              Label    00000043
_00225_DS_              Label    00000045
_00233_DS_              Label    00000038
_00239_DS_              Label    0000005F
_00241_DS_              Label    00000080
_00244_DS_              Label    0000006F
_00246_DS_              Label    000000B0
_00258_DS_              Label    00000066
_00259_DS_              Label    00000076
_00266_DS_              Label    00000010
_00268_DS_              Label    00000031
_00275_DS_              Label    00000010
_00277_DS_              Label    00000031
_00287_DS_              Label    00000022
_00293_DS_              Label    00000025
_00296_DS_              Label    0000000D
_00298_DS_              Label    00000029
_00304_DS_              Label    0000000F
_00305_DS_              Label    00000013
_00314_DS_              Label    0000000F
_00315_DS_              Label    00000013
_00325_DS_              Label    0000000E
_00337_DS_              Label    000000D3
_00340_DS_              Label    000000C7
_00343_DS_              Label    000000BA
_00346_DS_              Label    000000AE
_00349_DS_              Label    000000A2
_00352_DS_              Label    00000096
_00355_DS_              Label    00000089
_00358_DS_              Label    0000007B
_00361_DS_              Label    0000006F
_00364_DS_              Label    00000062
_00367_DS_              Label    00000053
_00370_DS_              Label    00000047
_00373_DS_              Label    00000038
_00376_DS_              Label    0000002A
_00379_DS_              Label    0000001E
_00382_DS_              Label    000000E1
_00385_DS_              Label    000000EF
_00441_DS_              Label    00000013
_00442_DS_              Label    00000025
_00443_DS_              Label    00000031
_00444_DS_              Label    0000003F
_00445_DS_              Label    0000004E
_00446_DS_              Label    0000005A
_00447_DS_              Label    00000069
_00448_DS_              Label    00000076
_00449_DS_              Label    00000082
_00450_DS_              Label    00000090
_00451_DS_              Label    0000009D
_00452_DS_              Label    000000A9
_00453_DS_              Label    000000B5
_00454_DS_              Label    000000C1
_00455_DS_              Label    000000CE
_00456_DS_              Label    000000DA
_00468_DS_              Label    0000001F
_00469_DS_              Label    00000027
_00471_DS_              Label    00000015
_00472_DS_              Label    00000029
_00473_DS_              Label    0000002A
_00482_DS_              Label    00000000
_00489_DS_              Label    00000009
_00491_DS_              Label    0000001C
_00500_DS_              Label    00000013
_A2                     Label    00000000
_A3                     Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_addtime                Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_B1                     Label    00000000
_B2                     Label    00000000
_B3                     Label    00000000
_baiweiNum              Label    00000000
_BDUTY                  Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_C1                     Label    00000000
_C2                     Label    00000000
_C3                     Label    00000000
_checkBatAD             Label    00000000
_checkLowWater          Label    00000000
_CMPCR                  Label    00000000
_count10ms              Label    00000000
_count1s                Label    00000000
_count300s              Label    00000000
_count500ms             Label    00000000
_count60s               Label    00000000
_D2                     Label    00000000
_D3                     Label    00000000
_delay                  Label    00000000
_delayms                Label    00000000
_douClickFlag           Label    00000000
_E2                     Label    00000000
_E3                     Label    00000000
_F_AIN5_Convert         Label    00000000
_F_AIN9_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_F2                     Label    00000000
_F3                     Label    00000000
_FSR                    Label    00000000
_G2                     Label    00000000
_G3                     Label    00000000
_GDUTY                  Label    00000000
_geweiNum               Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCon                 Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_klcikTime              Label    00000000
_ledAddFlag             Label    00000000
_ledCon                 Label    00000000
_ledCount               Label    00000000
_ledFlag                Label    00000000
_longPressFlag          Label    00000000
_lowPowerTime           Label    00000000
_lowWaterTime           Label    00000000
_main                   Label    00000000
_numArray               Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmCtr                 Label    00000000
_pwmStart               Label    00000000
_pwmStop                Label    00000000
_R_AIN5_DATA            Label    00000000
_R_AIN5_DATA_LB         Label    00000000
_R_AIN9_DATA            Label    00000000
_R_AIN9_DATA_LB         Label    00000000
_RDUTY                  Label    00000000
_refreshCount           Label    00000000
_refreshNub             Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_setHightOutput         Label    00000000
_setInput               Label    00000000
_setlowOutput           Label    00000000
_setOutput              Label    00000000
_setPWMduty             Label    00000000
_setPWMdutyG            Label    00000000
_shiweiNum              Label    00000000
_showBaiwei             Label    00000000
_showNub                Label    00000000
_showNubGewei           Label    00000000
_showNubGewei2          Label    00000000
_showNubShiwei          Label    00000000
_showNubShiwei2         Label    00000000
_sleepDelay             Label    00000000
_STATUS                 Label    00000000
_step2Count             Label    00000000
_sumR_AIN5_DATA         Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempbaiweiNum          Label    00000000
_tempgeweiNum           Label    00000000
_tempshiweiNum          Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000070
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103E                 Label    00000000
r0x103F                 Label    00000000
r0x1040                 Label    00000000
r0x1041                 Label    00000000
r0x1042                 Label    00000000
r0x1043                 Label    00000000
r0x1044                 Label    00000000
r0x1045                 Label    00000000
r0x1048                 Label    00000000
r0x1049                 Label    00000000
r0x104A                 Label    00000000
r0x104B                 Label    00000000
r0x104E                 Label    00000000
r0x1051                 Label    00000000
r0x1052                 Label    00000000
r0x1053                 Label    00000000
r0x1054                 Label    00000000
r0x1055                 Label    00000000
r0x1056                 Label    00000000
r0x1057                 Label    00000000
r0x1058                 Label    00000000
r0x1059                 Label    00000000
r0x105A                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000007
STK01                   Label    00000006
STK02                   Label    00000005
STK03                   Label    00000004
STK04                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
