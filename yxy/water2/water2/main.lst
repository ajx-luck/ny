
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showBaiwei
                                    1-   24     	extern	_B1
                                    1-   25     	extern	_C1
                                    1-   26     	extern	_A2
                                    1-   27     	extern	_B2
                                    1-   28     	extern	_C2
                                    1-   29     	extern	_D2
                                    1-   30     	extern	_E2
                                    1-   31     	extern	_F2
                                    1-   32     	extern	_G2
                                    1-   33     	extern	_A3
                                    1-   34     	extern	_B3
                                    1-   35     	extern	_C3
                                    1-   36     	extern	_D3
                                    1-   37     	extern	_E3
                                    1-   38     	extern	_F3
                                    1-   39     	extern	_G3
                                    1-   40     	extern	_delayms
                                    1-   41     	extern	__divuint
                                    1-   42     	extern	__moduint
                                    1-   43     	extern	_PORTAbits
                                    1-   44     	extern	_PORTBbits
                                    1-   45     	extern	_PCONbits
                                    1-   46     	extern	_BWUCONbits
                                    1-   47     	extern	_ABPLCONbits
                                    1-   48     	extern	_BPHCONbits
                                    1-   49     	extern	_INTEbits
                                    1-   50     	extern	_INTFbits
                                    1-   51     	extern	_ADMDbits
                                    1-   52     	extern	_ADRbits
                                    1-   53     	extern	_ADVREFHbits
                                    1-   54     	extern	_ADCRbits
                                    1-   55     	extern	_AWUCONbits
                                    1-   56     	extern	_PACONbits
                                    1-   57     	extern	_INTEDGbits
                                    1-   58     	extern	_ANAENbits
                                    1-   59     	extern	_RFCbits
                                    1-   60     	extern	_INTE2bits
                                    1-   61     	extern	_INDF
                                    1-   62     	extern	_TMR0
                                    1-   63     	extern	_PCL
                                    1-   64     	extern	_STATUS
                                    1-   65     	extern	_FSR
                                    1-   66     	extern	_PORTA
                                    1-   67     	extern	_PORTB
                                    1-   68     	extern	_PCON
                                    1-   69     	extern	_BWUCON
                                    1-   70     	extern	_PCHBUF
                                    1-   71     	extern	_ABPLCON
                                    1-   72     	extern	_BPHCON
                                    1-   73     	extern	_INTE
                                    1-   74     	extern	_INTF
                                    1-   75     	extern	_ADMD
                                    1-   76     	extern	_ADR
                                    1-   77     	extern	_ADD
                                    1-   78     	extern	_ADVREFH
                                    1-   79     	extern	_ADCR
                                    1-   80     	extern	_AWUCON
                                    1-   81     	extern	_PACON
                                    1-   82     	extern	_INTEDG
                                    1-   83     	extern	_TMRH
                                    1-   84     	extern	_ANAEN
                                    1-   85     	extern	_RFC
                                    1-   86     	extern	_TM3RH
                                    1-   87     	extern	_INTE2
                                    1-   88     	extern	_TMR1
                                    1-   89     	extern	_T1CR1
                                    1-   90     	extern	_T1CR2
                                    1-   91     	extern	_PWM1DUTY
                                    1-   92     	extern	_PS1CV
                                    1-   93     	extern	_BZ1CR
                                    1-   94     	extern	_IRCR
                                    1-   95     	extern	_TBHP
                                    1-   96     	extern	_TBHD
                                    1-   97     	extern	_TMR2
                                    1-   98     	extern	_T2CR1
                                    1-   99     	extern	_T2CR2
                                    1-  100     	extern	_PWM2DUTY
                                    1-  101     	extern	_PS2CV
                                    1-  102     	extern	_BZ2CR
                                    1-  103     	extern	_OSCCR
                                    1-  104     	extern	_TMR3
                                    1-  105     	extern	_T3CR1
                                    1-  106     	extern	_T3CR2
                                    1-  107     	extern	_PWM3DUTY
                                    1-  108     	extern	_PS3CV
                                    1-  109     	extern	_BZ3CR
                                    1-  110     	extern	_IOSTA
                                    1-  111     	extern	_IOSTB
                                    1-  112     	extern	_APHCON
                                    1-  113     	extern	_PS0CV
                                    1-  114     	extern	_BODCON
                                    1-  115     	extern	_CMPCR
                                    1-  116     	extern	_PCON1
                                    1-  117     	extern	_T0MD
                                    1-  118     	extern	___sdcc_saved_fsr
                                    1-  119     	extern	___sdcc_saved_stk00
                                    1-  120     	extern	___sdcc_saved_stk01
                                    1-  121     	extern	__gptrget1
                                    1-  122     	extern	__nyc_ny8_startup
                                    1-  123     ;--------------------------------------------------------
                                    1-  124     ; global declarations
                                    1-  125     ;--------------------------------------------------------
                                    1-  126     	extern	_delay
                                    1-  127     	extern	_F_wait_eoc
                                    1-  128     	extern	_gotoSleep
                                    1-  129     	extern	_keyRead
                                    1-  130     	extern	_ledCon
                                    1-  131     	extern	_pwmStop
                                    1-  132     	extern	_pwmStart
                                    1-  133     	extern	_setPWMdutyG
                                    1-  134     	extern	_setPWMduty
                                    1-  135     	extern	_pwmCtr
                                    1-  136     	extern	_F_AIN9_Convert
                                    1-  137     	extern	_F_AIN5_Convert
                                    1-  138     	extern	_checkBatAD
                                    1-  139     	extern	_checkLowWater
                                    1-  140     	extern	_initAD
                                    1-  141     	extern	_keyCon
                                    1-  142     	extern	_workCtr
                                    1-  143     	extern	_refreshNub
                                    1-  144     	extern	_isr
                                    1-  145     	extern	_main
                                    1-  146     	extern	_intCount
                                    1-  147     	extern	_IntFlag
                                    1-  148     	extern	_workStep
                                    1-  149     	extern	_ledCount
                                    1-  150     	extern	_sleepDelay
                                    1-  151     	extern	_step2Count
                                    1-  152     	extern	_longPressFlag
                                    1-  153     	extern	_count500ms
                                    1-  154     	extern	_count10ms
                                    1-  155     	extern	_count1s
                                    1-  156     	extern	_tempbaiweiNum
                                    1-  157     	extern	_tempshiweiNum
                                    1-  158     	extern	_tempgeweiNum
                                    1-  159     	extern	_refreshCount
                                    1-  160     	extern	_baiweiNum
                                    1-  161     	extern	_shiweiNum
                                    1-  162     	extern	_geweiNum
                                    1-  163     	extern	_klcikTime
                                    1-  164     	extern	_count300s
                                    1-  165     	extern	_count60s
                                    1-  166     	extern	_RDUTY
                                    1-  167     	extern	_GDUTY
                                    1-  168     	extern	_BDUTY
                                    1-  169     	extern	_ledFlag
                                    1-  170     	extern	_ledAddFlag
                                    1-  171     	extern	_keyCount
                                    1-  172     	extern	_keyClick
                                    1-  173     	extern	_douClickFlag
                                    1-  174     	extern	_R_AIN5_DATA
                                    1-  175     	extern	_R_AIN5_DATA_LB
                                    1-  176     	extern	_R_AIN9_DATA
                                    1-  177     	extern	_R_AIN9_DATA_LB
                                    1-  178     	extern	_lowWaterTime
                                    1-  179     	extern	_lowPowerTime
                                    1-  180     	extern	_lvdTime
                                    1-  181     	extern	_wateFlag
                                    1-  182     	extern	_nbat
                                    1-  183     	extern	_lvFlag
                                    1-  185     	extern PSAVE
                                    1-  186     	extern SSAVE
                                    1-  187     	extern WSAVE
                                    1-  188     	extern STK12
                                    1-  189     	extern STK11
                                    1-  190     	extern STK10
                                    1-  191     	extern STK09
                                    1-  192     	extern STK08
                                    1-  193     	extern STK07
                                    1-  194     	extern STK06
                                    1-  195     	extern STK05
                                    1-  196     	extern STK04
                                    1-  197     	extern STK03
                                    1-  198     	extern STK02
                                    1-  199     	extern STK01
                                    1-  200     	extern STK00
                                    1-  202     .segment "uninit", 0x20000040
 20000040                           1-  203     PSAVE:
                                    1-  204     	.res 1
 20000041                           1-  205     SSAVE:
                                    1-  206     	.res 1
 20000042                           1-  207     WSAVE:
                                    1-  208     	.res 1
 20000043                           1-  209     STK12:
                                    1-  210     	.res 1
 20000044                           1-  211     STK11:
                                    1-  212     	.res 1
 20000045                           1-  213     STK10:
                                    1-  214     	.res 1
 20000046                           1-  215     STK09:
                                    1-  216     	.res 1
 20000047                           1-  217     STK08:
                                    1-  218     	.res 1
 20000048                           1-  219     STK07:
                                    1-  220     	.res 1
 20000049                           1-  221     STK06:
                                    1-  222     	.res 1
 2000004A                           1-  223     STK05:
                                    1-  224     	.res 1
 2000004B                           1-  225     STK04:
                                    1-  226     	.res 1
 2000004C                           1-  227     STK03:
                                    1-  228     	.res 1
 2000004D                           1-  229     STK02:
                                    1-  230     	.res 1
 2000004E                           1-  231     STK01:
                                    1-  232     	.res 1
 2000004F                           1-  233     STK00:
                                    1-  234     	.res 1
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; global definitions
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     .segment "uninit"
     0000                           1-  240     _R_AIN5_DATA:
                                    1-  241     	.res	2
                                    1-  244     .segment "uninit"
     0000                           1-  245     _R_AIN5_DATA_LB:
                                    1-  246     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     _R_AIN9_DATA:
                                    1-  251     	.res	2
                                    1-  254     .segment "uninit"
     0000                           1-  255     _R_AIN9_DATA_LB:
                                    1-  256     	.res	1
                                    1-  259     ;--------------------------------------------------------
                                    1-  260     ; absolute symbol definitions
                                    1-  261     ;--------------------------------------------------------
                                    1-  262     ;--------------------------------------------------------
                                    1-  263     ; compiler-defined variables
                                    1-  264     ;--------------------------------------------------------
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x1059:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x105A:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x1058:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1056:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1057:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1050:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1051:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1053:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x104A:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x104B:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x104C:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x104F:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x1044:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x1045:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x1046:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x1049:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x1042:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x1043:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x1040:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x1041:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x103F:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x103C:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x1039:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x1038:
                                    1-  336     	.res	1
                                    1-  337     .segment "uninit"
     0000                           1-  338     r0x103A:
                                    1-  339     	.res	1
                                    1-  340     .segment "uninit"
     0000                           1-  341     r0x103B:
                                    1-  342     	.res	1
                                    1-  343     ;--------------------------------------------------------
                                    1-  344     ; initialized data
                                    1-  345     ;--------------------------------------------------------
                                    1-  347     .segment "idata"
     0000                           1-  348     _intCount:
     0000 0000                      1-  349     	dw	0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _IntFlag:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _workStep:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _ledCount:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _sleepDelay:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _step2Count:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _longPressFlag:
     0000 0000                      1-  385     	dw	0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _count500ms:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _count10ms:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _count1s:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _tempbaiweiNum:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _tempshiweiNum:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _tempgeweiNum:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _refreshCount:
     0000 0000                      1-  427     	dw	0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _baiweiNum:
     0000 0000                      1-  433     	dw	0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _shiweiNum:
     0000 0000                      1-  439     	dw	0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _geweiNum:
     0000 0000                      1-  445     	dw	0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _klcikTime:
     0000 0000                      1-  451     	dw	0x00
                                    1-  455     .segment "idata"
     0000                           1-  456     _count300s:
     0000 0000 0000                 1-  457     	dw	0x00, 0x00
                                    1-  461     .segment "idata"
     0000                           1-  462     _count60s:
     0000 0000 0000                 1-  463     	dw	0x00, 0x00
                                    1-  467     .segment "idata"
     0000                           1-  468     _RDUTY:
     0000 0000                      1-  469     	dw	0x00
                                    1-  473     .segment "idata"
     0000                           1-  474     _GDUTY:
     0000 0000                      1-  475     	dw	0x00
                                    1-  479     .segment "idata"
     0000                           1-  480     _BDUTY:
     0000 0000                      1-  481     	dw	0x00
                                    1-  485     .segment "idata"
     0000                           1-  486     _ledFlag:
     0000 0000                      1-  487     	dw	0x00
                                    1-  491     .segment "idata"
     0000                           1-  492     _ledAddFlag:
     0000 0000                      1-  493     	dw	0x00
                                    1-  497     .segment "idata"
     0000                           1-  498     _keyCount:
     0000 0000                      1-  499     	dw	0x00
                                    1-  503     .segment "idata"
     0000                           1-  504     _keyClick:
     0000 0000                      1-  505     	dw	0x00
                                    1-  509     .segment "idata"
     0000                           1-  510     _douClickFlag:
     0000 0000                      1-  511     	dw	0x00
                                    1-  515     .segment "idata"
     0000                           1-  516     _lowWaterTime:
     0000 0000                      1-  517     	dw	0x00
                                    1-  521     .segment "idata"
     0000                           1-  522     _lowPowerTime:
     0000 0000                      1-  523     	dw	0x00
                                    1-  527     .segment "idata"
     0000                           1-  528     _lvdTime:
     0000 0000                      1-  529     	dw	0x00
                                    1-  533     .segment "idata"
     0000                           1-  534     _wateFlag:
     0000 0001                      1-  535     	dw	0x01
                                    1-  539     .segment "idata"
     0000                           1-  540     _nbat:
     0000 0000 0000                 1-  541     	dw	0x00, 0x00
                                    1-  545     .segment "idata"
     0000                           1-  546     _lvFlag:
     0000 0000                      1-  547     	dw	0x00
                                    1-  551     .segment "idata"
     0000                           1-  552     _numArray:
     0000 003F                      1-  553     	dw	0x3f
     0001 0006                      1-  554     	dw	0x06
     0002 005B                      1-  555     	dw	0x5b
     0003 004F                      1-  556     	dw	0x4f
     0004 0066                      1-  557     	dw	0x66
     0005 006D                      1-  558     	dw	0x6d
     0006 007D                      1-  559     	dw	0x7d
     0007 0007                      1-  560     	dw	0x07
     0008 007F                      1-  561     	dw	0x7f
     0009 006F                      1-  562     	dw	0x6f
     000A 0071                      1-  563     	dw	0x71
     000B 0038                      1-  564     	dw	0x38
                                    1-  567     ;--------------------------------------------------------
                                    1-  568     ; overlayable items in internal ram 
                                    1-  569     ;--------------------------------------------------------
                                    1-  570     ;	udata_ovr
                                    1-  571     ;--------------------------------------------------------
                                    1-  572     ; reset vector 
                                    1-  573     ;--------------------------------------------------------
                                    1-  574     ORG	0x0000
     0000 3rrr                      1-  575     	LGOTO	__nyc_ny8_startup
                                    1-  576     ;--------------------------------------------------------
                                    1-  577     ; interrupt and initialization code
                                    1-  578     ;--------------------------------------------------------
                                    1-  579     ORG 0x0008
     0008 3rrr                      1-  580     	lgoto	__sdcc_interrupt
                                    1-  582     .segment "code"
     0000                           1-  583     __sdcc_interrupt:
                                    1-  584     ;***
                                    1-  585     ;  pBlock Stats: dbName = I
                                    1-  586     ;***
                                    1-  587     ;functions called:
                                    1-  588     ;   _setPWMduty
                                    1-  589     ;   _setPWMdutyG
                                    1-  590     ;   _setPWMduty
                                    1-  591     ;   _setPWMduty
                                    1-  592     ;   _setPWMdutyG
                                    1-  593     ;   _setPWMduty
                                    1-  594     ;2 compiler assigned registers:
                                    1-  595     ;   STK00
                                    1-  596     ;   STK01
                                    1-  597     ;; Starting pCode block
     0000                           1-  598     _isr:
                                    1-  599     ; 0 exit points
                                    1-  600     	.line	78, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  601     	MOVAR	WSAVE
     0001 1503                      1-  602     	SWAPR	STATUS,W
     0002 0283                      1-  603     	CLRR	STATUS
     0003 00rr                      1-  604     	MOVAR	SSAVE
     0004 010A                      1-  605     	MOVR	PCHBUF,W
     0005 028A                      1-  606     	CLRR	PCHBUF
     0006 00rr                      1-  607     	MOVAR	PSAVE
     0007 0104                      1-  608     	MOVR	FSR,W
                                    1-  609     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  610     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  611     	MOVR	STK00,W
                                    1-  612     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  613     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  614     	MOVR	STK01,W
                                    1-  615     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  616     	MOVAR	___sdcc_saved_stk01
                                    1-  617     	.line	80, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  618     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  619     	LGOTO	_00126_DS_
                                    1-  620     	.line	82, "main.c"; 	TMR0 = 55;
     0012 2137                      1-  621     	MOVIA	0x37
     0013 00rr                      1-  622     	MOVAR	_TMR0
                                    1-  623     	.line	83, "main.c"; 	intCount++;
                                    1-  624     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  625     	INCR	_intCount,F
                                    1-  626     	.line	84, "main.c"; 	if(ledFlag)
                                    1-  627     	BANKSEL	_ledFlag
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1-  628     	MOVR	_ledFlag,W
     0018 0D03                      1-  629     	BTRSC	STATUS,2
     0019 3rrr                      1-  630     	LGOTO	_00106_DS_
                                    1-  631     	.line	86, "main.c"; 	setPWMduty(0x02,RDUTY);
                                    1-  632     	BANKSEL	_RDUTY
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  633     	MOVR	_RDUTY,W
     001C 00rr                      1-  634     	MOVAR	STK00
     001D 2102                      1-  635     	MOVIA	0x02
     001E 2rrr                      1-  636     	LCALL	_setPWMduty
                                    1-  637     	.line	87, "main.c"; 	setPWMdutyG(0x80,GDUTY);
                                    1-  638     	BANKSEL	_GDUTY
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  639     	MOVR	_GDUTY,W
     0021 00rr                      1-  640     	MOVAR	STK00
     0022 2180                      1-  641     	MOVIA	0x80
     0023 2rrr                      1-  642     	LCALL	_setPWMdutyG
                                    1-  643     	.line	88, "main.c"; 	setPWMduty(0x04,BDUTY);
                                    1-  644     	BANKSEL	_BDUTY
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  645     	MOVR	_BDUTY,W
     0026 00rr                      1-  646     	MOVAR	STK00
     0027 2104                      1-  647     	MOVIA	0x04
     0028 2rrr                      1-  648     	LCALL	_setPWMduty
                                    1-  649     	.line	89, "main.c"; 	ledCount++;
                                    1-  650     	BANKSEL	_ledCount
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 05rr                      1-  651     	INCR	_ledCount,F
     002B                           1-  652     _00106_DS_:
                                    1-  653     	.line	92, "main.c"; 	if(++intCount >= 100)
                                    1-  654     	BANKSEL	_intCount
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 05rr                      1-  655     	INCR	_intCount,F
                                    1-  656     ;;unsigned compare: left < lit (0x64=100), size=1
     002D 2164                      1-  657     	MOVIA	0x64
     002E 04rr                      1-  658     	SUBAR	_intCount,W
     002F 0803                      1-  659     	BTRSS	STATUS,0
     0030 3rrr                      1-  660     	LGOTO	_00126_DS_
                                    1-  661     	.line	94, "main.c"; 	intCount = 0;
     0031 02rr                      1-  662     	CLRR	_intCount
                                    1-  663     	.line	95, "main.c"; 	IntFlag = 1;
     0032 2101                      1-  664     	MOVIA	0x01
                                    1-  665     	BANKSEL	_IntFlag
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1-  666     	MOVAR	_IntFlag
                                    1-  667     	.line	97, "main.c"; 	if(klcikTime > 0)
                                    1-  668     	BANKSEL	_klcikTime
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1-  669     	MOVR	_klcikTime,W
     0037 0D03                      1-  670     	BTRSC	STATUS,2
     0038 3rrr                      1-  671     	LGOTO	_00126_DS_
                                    1-  672     	.line	99, "main.c"; 	if(--klcikTime == 0)
     0039 17rr                      1-  673     	DECRSZ	_klcikTime,F
     003A 3rrr                      1-  674     	LGOTO	_00126_DS_
                                    1-  675     	.line	101, "main.c"; 	if(douClickFlag)
                                    1-  676     	BANKSEL	_douClickFlag
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 01rr                      1-  677     	MOVR	_douClickFlag,W
     003D 0D03                      1-  678     	BTRSC	STATUS,2
     003E 3rrr                      1-  679     	LGOTO	_00117_DS_
                                    1-  680     	.line	103, "main.c"; 	if(lvFlag == 0)
                                    1-  681     	BANKSEL	_lvFlag
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1-  682     	MOVR	_lvFlag,W
     0041 0903                      1-  683     	BTRSS	STATUS,2
     0042 3rrr                      1-  684     	LGOTO	_00118_DS_
                                    1-  685     	.line	106, "main.c"; 	if(ledAddFlag)
                                    1-  686     	BANKSEL	_ledAddFlag
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 01rr                      1-  687     	MOVR	_ledAddFlag,W
     0045 0D03                      1-  688     	BTRSC	STATUS,2
     0046 3rrr                      1-  689     	LGOTO	_00108_DS_
                                    1-  690     	.line	107, "main.c"; 	ledAddFlag = 0;
     0047 02rr                      1-  691     	CLRR	_ledAddFlag
     0048 3rrr                      1-  692     	LGOTO	_00118_DS_
     0049                           1-  693     _00108_DS_:
                                    1-  694     	.line	109, "main.c"; 	ledAddFlag = 1;
     0049 2101                      1-  695     	MOVIA	0x01
                                    1-  696     	BANKSEL	_ledAddFlag
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 00rr                      1-  697     	MOVAR	_ledAddFlag
     004C 3rrr                      1-  698     	LGOTO	_00118_DS_
     004D                           1-  699     _00117_DS_:
                                    1-  700     	.line	114, "main.c"; 	if(lvFlag == 0)
                                    1-  701     	BANKSEL	_lvFlag
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1-  702     	MOVR	_lvFlag,W
     004F 0903                      1-  703     	BTRSS	STATUS,2
     0050 3rrr                      1-  704     	LGOTO	_00118_DS_
                                    1-  705     	.line	116, "main.c"; 	if(++workStep >= 3)
                                    1-  706     	BANKSEL	_workStep
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 05rr                      1-  707     	INCR	_workStep,F
                                    1-  708     ;;unsigned compare: left < lit (0x3=3), size=1
     0053 2103                      1-  709     	MOVIA	0x03
     0054 04rr                      1-  710     	SUBAR	_workStep,W
     0055 0C03                      1-  711     	BTRSC	STATUS,0
                                    1-  712     	.line	117, "main.c"; 	workStep = 0;
     0056 02rr                      1-  713     	CLRR	_workStep
     0057                           1-  714     _00118_DS_:
                                    1-  715     	.line	120, "main.c"; 	douClickFlag = 0;
                                    1-  716     	BANKSEL	_douClickFlag
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 02rr                      1-  717     	CLRR	_douClickFlag
     0059                           1-  718     _00126_DS_:
                                    1-  719     	.line	126, "main.c"; 	if(INTFbits.T0IF)
     0059 08rr                      1-  720     	BTRSS	_INTFbits,0
     005A 3rrr                      1-  721     	LGOTO	_00128_DS_
                                    1-  722     	.line	128, "main.c"; 	INTF = 0;
     005B 02rr                      1-  723     	CLRR	_INTF
     005C                           1-  724     _00128_DS_:
                                    1-  725     	.line	131, "main.c"; 	if(INTFbits.PABIF)
     005C 08rr                      1-  726     	BTRSS	_INTFbits,1
     005D 3rrr                      1-  727     	LGOTO	_00130_DS_
                                    1-  728     	.line	133, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     005E 21FD                      1-  729     	MOVIA	0xfd
     005F 00rr                      1-  730     	MOVAR	_INTF
     0060                           1-  731     _00130_DS_:
                                    1-  732     	.line	136, "main.c"; 	INTF = 0;
     0060 02rr                      1-  733     	CLRR	_INTF
                                    1-  734     	.line	138, "main.c"; 	}
                                    1-  735     	BANKSEL	___sdcc_saved_stk01
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 01rr                      1-  736     	MOVR	___sdcc_saved_stk01,W
     0063 00rr                      1-  737     	MOVAR	STK01
                                    1-  738     	BANKSEL	___sdcc_saved_stk00
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 01rr                      1-  739     	MOVR	___sdcc_saved_stk00,W
     0066 00rr                      1-  740     	MOVAR	STK00
                                    1-  741     	BANKSEL	___sdcc_saved_fsr
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 01rr                      1-  742     	MOVR	___sdcc_saved_fsr,W
     0069 0084                      1-  743     	MOVAR	FSR
     006A 01rr                      1-  744     	MOVR	PSAVE,W
     006B 008A                      1-  745     	MOVAR	PCHBUF
     006C 0283                      1-  746     	CLRR	STATUS
     006D 15rr                      1-  747     	SWAPR	SSAVE,W
     006E 0083                      1-  748     	MOVAR	STATUS
     006F 15rr                      1-  749     	SWAPR	WSAVE,F
     0070 15rr                      1-  750     	SWAPR	WSAVE,W
     0071                           1-  751     END_OF_INTERRUPT:
     0071 0011                      1-  752     	RETIE	
                                    1-  754     ;--------------------------------------------------------
                                    1-  755     ; code
                                    1-  756     ;--------------------------------------------------------
                                    1-  757     ;***
                                    1-  758     ;  pBlock Stats: dbName = M
                                    1-  759     ;***
                                    1-  760     ;has an exit
                                    1-  761     ;functions called:
                                    1-  762     ;   _initAD
                                    1-  763     ;   _refreshNub
                                    1-  764     ;   _workCtr
                                    1-  765     ;   _initAD
                                    1-  766     ;   _refreshNub
                                    1-  767     ;   _workCtr
                                    1-  768     ;; Starting pCode block
                                    1-  769     .segment "code"; module=main, function=_main
     0000                           1-  771     _main:
                                    1-  772     ; 2 exit points
                                    1-  773     	.line	176, "main.c"; 	DISI();
     0000 0013                      1-  774     	DISI
                                    1-  775     	.line	177, "main.c"; 	IOSTA = C_PA6_Input;
     0001 2140                      1-  776     	MOVIA	0x40
     0002 000r                      1-  777     	IOST	_IOSTA
                                    1-  778     	.line	178, "main.c"; 	IOSTB = 0x11;
     0003 2111                      1-  779     	MOVIA	0x11
     0004 000r                      1-  780     	IOST	_IOSTB
                                    1-  781     	.line	179, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1-  782     	CLRR	_PORTB
                                    1-  783     	.line	180, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1-  784     	CLRR	_PORTA
                                    1-  785     	.line	181, "main.c"; 	APHCON = 0xBF;
     0007 21BF                      1-  786     	MOVIA	0xbf
     0008 000r                      1-  787     	IOST	_APHCON
                                    1-  788     	.line	182, "main.c"; 	BPHCON = 0xFF;
     0009 21FF                      1-  789     	MOVIA	0xff
     000A 00rr                      1-  790     	MOVAR	_BPHCON
                                    1-  791     	.line	184, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000B 2101                      1-  792     	MOVIA	0x01
     000C 00rr                      1-  793     	MOVAR	_INTE
                                    1-  794     	.line	186, "main.c"; 	PCON1 = C_TMR0_Dis;
     000D 0200                      1-  795     	CLRA	
     000E 000r                      1-  796     	IOST	_PCON1
                                    1-  797     	.line	188, "main.c"; 	TMR0 = 55;
     000F 2137                      1-  798     	MOVIA	0x37
     0010 00rr                      1-  799     	MOVAR	_TMR0
                                    1-  800     	.line	189, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0011 0200                      1-  801     	CLRA	
     0012 0003                      1-  802     	T0MD	
                                    1-  803     	.line	191, "main.c"; 	PCON1 = C_TMR0_En;
     0013 2101                      1-  804     	MOVIA	0x01
     0014 000r                      1-  805     	IOST	_PCON1
                                    1-  806     	.line	193, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0015 2188                      1-  807     	MOVIA	0x88
     0016 00rr                      1-  808     	MOVAR	_PCON
                                    1-  809     	.line	196, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1-  810     	MOVIA	0x01
     0018 000r                      1-  811     	IOST	_PCON1
                                    1-  812     	.line	197, "main.c"; 	ENI();
     0019 0004                      1-  813     	ENI
                                    1-  814     	.line	198, "main.c"; 	initAD();
     001A 2rrr                      1-  815     	LCALL	_initAD
     001B                           1-  816     _00183_DS_:
                                    1-  817     	.line	202, "main.c"; 	CLRWDT();
     001B 0002                      1-  818     	clrwdt
                                    1-  819     	.line	203, "main.c"; 	if(!IntFlag)
                                    1-  820     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1-  821     	MOVR	_IntFlag,W
     001E 0D03                      1-  822     	BTRSC	STATUS,2
     001F 3rrr                      1-  823     	LGOTO	_00183_DS_
                                    1-  824     	.line	205, "main.c"; 	IntFlag = 0;
     0020 02rr                      1-  825     	CLRR	_IntFlag
                                    1-  826     	.line	206, "main.c"; 	refreshNub();
     0021 2rrr                      1-  827     	LCALL	_refreshNub
                                    1-  828     	.line	208, "main.c"; 	workCtr();
     0022 2rrr                      1-  829     	LCALL	_workCtr
     0023 3rrr                      1-  830     	LGOTO	_00183_DS_
                                    1-  831     	.line	210, "main.c"; 	}
                                    1-  832     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1-  833     ; exit point of _main
                                    1-  835     ;***
                                    1-  836     ;  pBlock Stats: dbName = C
                                    1-  837     ;***
                                    1-  838     ;has an exit
                                    1-  839     ;5 compiler assigned registers:
                                    1-  840     ;   r0x1038
                                    1-  841     ;   STK00
                                    1-  842     ;   r0x1039
                                    1-  843     ;   r0x103A
                                    1-  844     ;   r0x103B
                                    1-  845     ;; Starting pCode block
                                    1-  846     .segment "code"; module=main, function=_delay
                                    1-  848     ;local variable name mapping:
     0000                           1-  853     _delay:
                                    1-  854     ; 2 exit points
                                    1-  855     	.line	636, "main.c"; 	void delay(u16t time)
                                    1-  856     	BANKSEL	r0x1038
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  857     	MOVAR	r0x1038
     0002 01rr                      1-  858     	MOVR	STK00,W
                                    1-  859     	BANKSEL	r0x1039
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  860     	MOVAR	r0x1039
                                    1-  861     	.line	638, "main.c"; 	for(u16t i=0;i<time;i++);
                                    1-  862     	BANKSEL	r0x103A
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  863     	CLRR	r0x103A
                                    1-  864     	BANKSEL	r0x103B
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  865     	CLRR	r0x103B
     0009                           1-  866     _00538_DS_:
                                    1-  867     	BANKSEL	r0x1038
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  868     	MOVR	r0x1038,W
                                    1-  869     	BANKSEL	r0x103B
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  870     	SUBAR	r0x103B,W
     000D 0903                      1-  871     	BTRSS	STATUS,2
     000E 3rrr                      1-  872     	LGOTO	_00549_DS_
                                    1-  873     	BANKSEL	r0x1039
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  874     	MOVR	r0x1039,W
                                    1-  875     	BANKSEL	r0x103A
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  876     	SUBAR	r0x103A,W
     0013                           1-  877     _00549_DS_:
     0013 0C03                      1-  878     	BTRSC	STATUS,0
     0014 3rrr                      1-  879     	LGOTO	_00540_DS_
                                    1-  880     	BANKSEL	r0x103A
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  881     	INCR	r0x103A,F
     0017 0903                      1-  882     	BTRSS	STATUS,2
     0018 3rrr                      1-  883     	LGOTO	_00001_DS_
                                    1-  884     	BANKSEL	r0x103B
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  885     	INCR	r0x103B,F
     001B                           1-  886     _00001_DS_:
     001B 3rrr                      1-  887     	LGOTO	_00538_DS_
     001C                           1-  888     _00540_DS_:
                                    1-  889     	.line	639, "main.c"; 	}
                                    1-  890     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  891     ; exit point of _delay
                                    1-  893     ;***
                                    1-  894     ;  pBlock Stats: dbName = C
                                    1-  895     ;***
                                    1-  896     ;has an exit
                                    1-  897     ;; Starting pCode block
                                    1-  898     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  900     _F_wait_eoc:
                                    1-  901     ; 2 exit points
     0000                           1-  902     _00531_DS_:
                                    1-  903     	.line	630, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  904     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  905     	LGOTO	_00531_DS_
                                    1-  906     	.line	632, "main.c"; 	}
                                    1-  907     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  908     ; exit point of _F_wait_eoc
                                    1-  910     ;***
                                    1-  911     ;  pBlock Stats: dbName = C
                                    1-  912     ;***
                                    1-  913     ;has an exit
                                    1-  914     ;functions called:
                                    1-  915     ;   _setInput
                                    1-  916     ;   _pwmStop
                                    1-  917     ;   _setInput
                                    1-  918     ;   _pwmStop
                                    1-  919     ;; Starting pCode block
                                    1-  920     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  922     _gotoSleep:
                                    1-  923     ; 2 exit points
                                    1-  924     	.line	607, "main.c"; 	setInput();
     0000 2rrr                      1-  925     	LCALL	_setInput
                                    1-  926     	.line	608, "main.c"; 	count500ms = 0;
                                    1-  927     	BANKSEL	_count500ms
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1-  928     	CLRR	_count500ms
                                    1-  929     	.line	609, "main.c"; 	count300s = 0;
                                    1-  930     	BANKSEL	_count300s
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1-  931     	CLRR	_count300s
     0005 02rr                      1-  932     	CLRR	(_count300s + 1)
                                    1-  933     	.line	610, "main.c"; 	pwmStop();
     0006 2rrr                      1-  934     	LCALL	_pwmStop
                                    1-  935     	.line	611, "main.c"; 	sleepDelay = 0;
                                    1-  936     	BANKSEL	_sleepDelay
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  937     	CLRR	_sleepDelay
                                    1-  938     	.line	612, "main.c"; 	workStep = 0;
                                    1-  939     	BANKSEL	_workStep
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1-  940     	CLRR	_workStep
                                    1-  941     	.line	613, "main.c"; 	AWUCON = 0x40;
     000B 2140                      1-  942     	MOVIA	0x40
     000C 00rr                      1-  943     	MOVAR	_AWUCON
                                    1-  944     	.line	614, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     000D 210B                      1-  945     	MOVIA	0x0b
     000E 00rr                      1-  946     	MOVAR	_INTE
                                    1-  947     	.line	615, "main.c"; 	PCON =  C_LVR_En;	
     000F 2108                      1-  948     	MOVIA	0x08
     0010 00rr                      1-  949     	MOVAR	_PCON
                                    1-  950     	.line	616, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0011 02rr                      1-  951     	CLRR	_INTF
                                    1-  952     	.line	617, "main.c"; 	CLRWDT();
     0012 0002                      1-  953     	clrwdt
                                    1-  954     	.line	618, "main.c"; 	ENI();
     0013 0004                      1-  955     	ENI
                                    1-  956     	.line	619, "main.c"; 	SLEEP();
     0014 0001                      1-  957     	sleep
                                    1-  958     	.line	620, "main.c"; 	AWUCON = 0x00;
     0015 02rr                      1-  959     	CLRR	_AWUCON
                                    1-  960     	.line	621, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0016 2101                      1-  961     	MOVIA	0x01
     0017 00rr                      1-  962     	MOVAR	_INTE
                                    1-  963     	.line	622, "main.c"; 	INTF = 0;
     0018 02rr                      1-  964     	CLRR	_INTF
                                    1-  965     	.line	624, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0019 21A8                      1-  966     	MOVIA	0xa8
     001A 00rr                      1-  967     	MOVAR	_PCON
                                    1-  968     	.line	626, "main.c"; 	}
                                    1-  969     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1-  970     ; exit point of _gotoSleep
                                    1-  972     ;***
                                    1-  973     ;  pBlock Stats: dbName = C
                                    1-  974     ;***
                                    1-  975     ;has an exit
                                    1-  976     ;1 compiler assigned register :
                                    1-  977     ;   r0x103C
                                    1-  978     ;; Starting pCode block
                                    1-  979     .segment "code"; module=main, function=_keyRead
                                    1-  981     ;local variable name mapping:
     0000                           1-  983     _keyRead:
                                    1-  984     ; 2 exit points
                                    1-  985     	.line	570, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  986     	BANKSEL	r0x103C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  987     	MOVAR	r0x103C
                                    1-  988     	.line	572, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  989     	MOVR	r0x103C,W
     0003 0D03                      1-  990     	BTRSC	STATUS,2
     0004 3rrr                      1-  991     	LGOTO	_00520_DS_
                                    1-  992     	.line	574, "main.c"; 	keyCount++;
                                    1-  993     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  994     	INCR	_keyCount,F
                                    1-  995     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  996     	.line	575, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  997     	MOVIA	0xc8
     0008 04rr                      1-  998     	SUBAR	_keyCount,W
     0009 0803                      1-  999     	BTRSS	STATUS,0
     000A 3rrr                      1- 1000     	LGOTO	_00521_DS_
                                    1- 1001     	.line	577, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1002     	MOVIA	0xc8
     000C 00rr                      1- 1003     	MOVAR	_keyCount
                                    1- 1004     	.line	578, "main.c"; 	if(!longPressFlag)
                                    1- 1005     	BANKSEL	_longPressFlag
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 1006     	MOVR	_longPressFlag,W
     000F 0903                      1- 1007     	BTRSS	STATUS,2
     0010 3rrr                      1- 1008     	LGOTO	_00521_DS_
                                    1- 1009     	.line	580, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 1010     	MOVIA	0x01
     0012 00rr                      1- 1011     	MOVAR	_longPressFlag
                                    1- 1012     	.line	581, "main.c"; 	count300s = 0;
                                    1- 1013     	BANKSEL	_count300s
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1- 1014     	CLRR	_count300s
     0015 02rr                      1- 1015     	CLRR	(_count300s + 1)
                                    1- 1016     	.line	582, "main.c"; 	return 2;
     0016 2102                      1- 1017     	MOVIA	0x02
     0017 3rrr                      1- 1018     	LGOTO	_00522_DS_
                                    1- 1019     ;;unsigned compare: left < lit (0xC8=200), size=1
     0018                           1- 1020     _00520_DS_:
                                    1- 1021     	.line	588, "main.c"; 	if(keyCount >= 200)
     0018 21C8                      1- 1022     	MOVIA	0xc8
                                    1- 1023     	BANKSEL	_keyCount
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 04rr                      1- 1024     	SUBAR	_keyCount,W
     001B 0803                      1- 1025     	BTRSS	STATUS,0
     001C 3rrr                      1- 1026     	LGOTO	_00517_DS_
                                    1- 1027     	.line	590, "main.c"; 	keyCount = 0;
     001D 02rr                      1- 1028     	CLRR	_keyCount
                                    1- 1029     	.line	591, "main.c"; 	longPressFlag = 0;
                                    1- 1030     	BANKSEL	_longPressFlag
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 02rr                      1- 1031     	CLRR	_longPressFlag
                                    1- 1032     	.line	592, "main.c"; 	return	0;
     0020 2100                      1- 1033     	MOVIA	0x00
     0021 3rrr                      1- 1034     	LGOTO	_00522_DS_
                                    1- 1035     ;;unsigned compare: left < lit (0x8=8), size=1
     0022                           1- 1036     _00517_DS_:
                                    1- 1037     	.line	594, "main.c"; 	else if(keyCount >= 8)
     0022 2108                      1- 1038     	MOVIA	0x08
                                    1- 1039     	BANKSEL	_keyCount
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 04rr                      1- 1040     	SUBAR	_keyCount,W
     0025 0803                      1- 1041     	BTRSS	STATUS,0
     0026 3rrr                      1- 1042     	LGOTO	_00518_DS_
                                    1- 1043     	.line	596, "main.c"; 	keyCount = 0;
     0027 02rr                      1- 1044     	CLRR	_keyCount
                                    1- 1045     	.line	597, "main.c"; 	count300s = 0;
                                    1- 1046     	BANKSEL	_count300s
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 1047     	CLRR	_count300s
     002A 02rr                      1- 1048     	CLRR	(_count300s + 1)
                                    1- 1049     	.line	598, "main.c"; 	return	1;
     002B 2101                      1- 1050     	MOVIA	0x01
     002C 3rrr                      1- 1051     	LGOTO	_00522_DS_
     002D                           1- 1052     _00518_DS_:
                                    1- 1053     	.line	600, "main.c"; 	keyCount = 0;
                                    1- 1054     	BANKSEL	_keyCount
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 02rr                      1- 1055     	CLRR	_keyCount
     002F                           1- 1056     _00521_DS_:
                                    1- 1057     	.line	602, "main.c"; 	return 0;
     002F 2100                      1- 1058     	MOVIA	0x00
     0030                           1- 1059     _00522_DS_:
                                    1- 1060     	.line	603, "main.c"; 	}
                                    1- 1061     	RETURN	
     0030 0010                      3-   26 m1      ret
                                    1- 1062     ; exit point of _keyRead
                                    1- 1064     ;***
                                    1- 1065     ;  pBlock Stats: dbName = C
                                    1- 1066     ;***
                                    1- 1067     ;has an exit
                                    1- 1068     ;functions called:
                                    1- 1069     ;   __moduint
                                    1- 1070     ;   __moduint
                                    1- 1071     ;5 compiler assigned registers:
                                    1- 1072     ;   STK02
                                    1- 1073     ;   STK01
                                    1- 1074     ;   STK00
                                    1- 1075     ;   r0x103D
                                    1- 1076     ;   r0x103E
                                    1- 1077     ;; Starting pCode block
                                    1- 1078     .segment "code"; module=main, function=_ledCon
     0000                           1- 1080     _ledCon:
                                    1- 1081     ; 2 exit points
                                    1- 1082     	.line	491, "main.c"; 	if(count60s % 5 == 0)
     0000 2105                      1- 1083     	MOVIA	0x05
     0001 00rr                      1- 1084     	MOVAR	STK02
     0002 2100                      1- 1085     	MOVIA	0x00
     0003 00rr                      1- 1086     	MOVAR	STK01
                                    1- 1087     	BANKSEL	_count60s
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1088     	MOVR	_count60s,W
     0006 00rr                      1- 1089     	MOVAR	STK00
     0007 01rr                      1- 1090     	MOVR	(_count60s + 1),W
     0008 2rrr                      1- 1091     	LCALL	__moduint
                                    1- 1092     ;;1	MOVAR	r0x103D
     0009 11rr                      1- 1093     	IORAR	STK00,W
     000A 0903                      1- 1094     	BTRSS	STATUS,2
     000B 3rrr                      1- 1095     	LGOTO	_00431_DS_
                                    1- 1096     ;;unsigned compare: left < lit (0x1F4=500), size=2
                                    1- 1097     	.line	494, "main.c"; 	if(count60s < 500)
     000C 2101                      1- 1098     	MOVIA	0x01
                                    1- 1099     	BANKSEL	_count60s
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 1100     	SUBAR	(_count60s + 1),W
     000F 0903                      1- 1101     	BTRSS	STATUS,2
     0010 3rrr                      1- 1102     	LGOTO	_00490_DS_
     0011 21F4                      1- 1103     	MOVIA	0xf4
     0012 04rr                      1- 1104     	SUBAR	_count60s,W
     0013                           1- 1105     _00490_DS_:
     0013 0C03                      1- 1106     	BTRSC	STATUS,0
     0014 3rrr                      1- 1107     	LGOTO	_00428_DS_
                                    1- 1108     	.line	496, "main.c"; 	RDUTY = GDUTY = 20;
     0015 2114                      1- 1109     	MOVIA	0x14
                                    1- 1110     	BANKSEL	_GDUTY
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1111     	MOVAR	_GDUTY
                                    1- 1112     	BANKSEL	_RDUTY
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 1113     	MOVAR	_RDUTY
                                    1- 1114     	.line	497, "main.c"; 	BDUTY = 100;
     001A 2164                      1- 1115     	MOVIA	0x64
                                    1- 1116     	BANKSEL	_BDUTY
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1117     	MOVAR	_BDUTY
     001D 3rrr                      1- 1118     	LGOTO	_00431_DS_
                                    1- 1119     ;;unsigned compare: left < lit (0x258=600), size=2
     001E                           1- 1120     _00428_DS_:
                                    1- 1121     	.line	499, "main.c"; 	else if(count60s < 600)
     001E 2102                      1- 1122     	MOVIA	0x02
                                    1- 1123     	BANKSEL	_count60s
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1- 1124     	SUBAR	(_count60s + 1),W
     0021 0903                      1- 1125     	BTRSS	STATUS,2
     0022 3rrr                      1- 1126     	LGOTO	_00491_DS_
     0023 2158                      1- 1127     	MOVIA	0x58
     0024 04rr                      1- 1128     	SUBAR	_count60s,W
     0025                           1- 1129     _00491_DS_:
     0025 0C03                      1- 1130     	BTRSC	STATUS,0
     0026 3rrr                      1- 1131     	LGOTO	_00425_DS_
                                    1- 1132     	.line	501, "main.c"; 	--RDUTY;
                                    1- 1133     	BANKSEL	_RDUTY
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 06rr                      1- 1134     	DECR	_RDUTY,F
     0029 3rrr                      1- 1135     	LGOTO	_00431_DS_
                                    1- 1136     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     002A                           1- 1137     _00425_DS_:
                                    1- 1138     	.line	503, "main.c"; 	else if(count60s < 1000)
     002A 2103                      1- 1139     	MOVIA	0x03
                                    1- 1140     	BANKSEL	_count60s
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 04rr                      1- 1141     	SUBAR	(_count60s + 1),W
     002D 0903                      1- 1142     	BTRSS	STATUS,2
     002E 3rrr                      1- 1143     	LGOTO	_00492_DS_
     002F 21E8                      1- 1144     	MOVIA	0xe8
     0030 04rr                      1- 1145     	SUBAR	_count60s,W
     0031                           1- 1146     _00492_DS_:
     0031 0C03                      1- 1147     	BTRSC	STATUS,0
     0032 3rrr                      1- 1148     	LGOTO	_00422_DS_
                                    1- 1149     	.line	505, "main.c"; 	RDUTY = 0;
                                    1- 1150     	BANKSEL	_RDUTY
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1- 1151     	CLRR	_RDUTY
                                    1- 1152     	.line	506, "main.c"; 	++GDUTY;
                                    1- 1153     	BANKSEL	_GDUTY
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 05rr                      1- 1154     	INCR	_GDUTY,F
     0037 3rrr                      1- 1155     	LGOTO	_00431_DS_
                                    1- 1156     ;;unsigned compare: left < lit (0x5DC=1500), size=2
     0038                           1- 1157     _00422_DS_:
                                    1- 1158     	.line	508, "main.c"; 	else if(count60s < 1500)
     0038 2105                      1- 1159     	MOVIA	0x05
                                    1- 1160     	BANKSEL	_count60s
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1161     	SUBAR	(_count60s + 1),W
     003B 0903                      1- 1162     	BTRSS	STATUS,2
     003C 3rrr                      1- 1163     	LGOTO	_00493_DS_
     003D 21DC                      1- 1164     	MOVIA	0xdc
     003E 04rr                      1- 1165     	SUBAR	_count60s,W
     003F                           1- 1166     _00493_DS_:
     003F 0C03                      1- 1167     	BTRSC	STATUS,0
     0040 3rrr                      1- 1168     	LGOTO	_00419_DS_
                                    1- 1169     	.line	510, "main.c"; 	RDUTY = 0;
                                    1- 1170     	BANKSEL	_RDUTY
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 02rr                      1- 1171     	CLRR	_RDUTY
                                    1- 1172     	.line	511, "main.c"; 	GDUTY = 100;
     0043 2164                      1- 1173     	MOVIA	0x64
                                    1- 1174     	BANKSEL	_GDUTY
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 00rr                      1- 1175     	MOVAR	_GDUTY
     0046 3rrr                      1- 1176     	LGOTO	_00431_DS_
                                    1- 1177     ;;unsigned compare: left < lit (0x76C=1900), size=2
     0047                           1- 1178     _00419_DS_:
                                    1- 1179     	.line	513, "main.c"; 	else if(count60s < 1900)
     0047 2107                      1- 1180     	MOVIA	0x07
                                    1- 1181     	BANKSEL	_count60s
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 04rr                      1- 1182     	SUBAR	(_count60s + 1),W
     004A 0903                      1- 1183     	BTRSS	STATUS,2
     004B 3rrr                      1- 1184     	LGOTO	_00494_DS_
     004C 216C                      1- 1185     	MOVIA	0x6c
     004D 04rr                      1- 1186     	SUBAR	_count60s,W
     004E                           1- 1187     _00494_DS_:
     004E 0C03                      1- 1188     	BTRSC	STATUS,0
     004F 3rrr                      1- 1189     	LGOTO	_00416_DS_
                                    1- 1190     	.line	515, "main.c"; 	--BDUTY;
                                    1- 1191     	BANKSEL	_BDUTY
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 06rr                      1- 1192     	DECR	_BDUTY,F
     0052 3rrr                      1- 1193     	LGOTO	_00431_DS_
                                    1- 1194     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     0053                           1- 1195     _00416_DS_:
                                    1- 1196     	.line	517, "main.c"; 	else if(count60s < 2000)
     0053 2107                      1- 1197     	MOVIA	0x07
                                    1- 1198     	BANKSEL	_count60s
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 04rr                      1- 1199     	SUBAR	(_count60s + 1),W
     0056 0903                      1- 1200     	BTRSS	STATUS,2
     0057 3rrr                      1- 1201     	LGOTO	_00495_DS_
     0058 21D0                      1- 1202     	MOVIA	0xd0
     0059 04rr                      1- 1203     	SUBAR	_count60s,W
     005A                           1- 1204     _00495_DS_:
     005A 0C03                      1- 1205     	BTRSC	STATUS,0
     005B 3rrr                      1- 1206     	LGOTO	_00413_DS_
                                    1- 1207     	.line	519, "main.c"; 	BDUTY = 20;
     005C 2114                      1- 1208     	MOVIA	0x14
                                    1- 1209     	BANKSEL	_BDUTY
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 00rr                      1- 1210     	MOVAR	_BDUTY
                                    1- 1211     	.line	520, "main.c"; 	++RDUTY;
                                    1- 1212     	BANKSEL	_RDUTY
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 05rr                      1- 1213     	INCR	_RDUTY,F
     0061 3rrr                      1- 1214     	LGOTO	_00431_DS_
                                    1- 1215     ;;unsigned compare: left < lit (0x9C4=2500), size=2
     0062                           1- 1216     _00413_DS_:
                                    1- 1217     	.line	522, "main.c"; 	else if(count60s < 2500)
     0062 2109                      1- 1218     	MOVIA	0x09
                                    1- 1219     	BANKSEL	_count60s
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 04rr                      1- 1220     	SUBAR	(_count60s + 1),W
     0065 0903                      1- 1221     	BTRSS	STATUS,2
     0066 3rrr                      1- 1222     	LGOTO	_00496_DS_
     0067 21C4                      1- 1223     	MOVIA	0xc4
     0068 04rr                      1- 1224     	SUBAR	_count60s,W
     0069                           1- 1225     _00496_DS_:
     0069 0C03                      1- 1226     	BTRSC	STATUS,0
     006A 3rrr                      1- 1227     	LGOTO	_00410_DS_
                                    1- 1228     	.line	524, "main.c"; 	RDUTY = 20;
     006B 2114                      1- 1229     	MOVIA	0x14
                                    1- 1230     	BANKSEL	_RDUTY
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 00rr                      1- 1231     	MOVAR	_RDUTY
     006E 3rrr                      1- 1232     	LGOTO	_00431_DS_
                                    1- 1233     ;;unsigned compare: left < lit (0xA28=2600), size=2
     006F                           1- 1234     _00410_DS_:
                                    1- 1235     	.line	526, "main.c"; 	else if(count60s < 2600)
     006F 210A                      1- 1236     	MOVIA	0x0a
                                    1- 1237     	BANKSEL	_count60s
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 04rr                      1- 1238     	SUBAR	(_count60s + 1),W
     0072 0903                      1- 1239     	BTRSS	STATUS,2
     0073 3rrr                      1- 1240     	LGOTO	_00497_DS_
     0074 2128                      1- 1241     	MOVIA	0x28
     0075 04rr                      1- 1242     	SUBAR	_count60s,W
     0076                           1- 1243     _00497_DS_:
     0076 0C03                      1- 1244     	BTRSC	STATUS,0
     0077 3rrr                      1- 1245     	LGOTO	_00407_DS_
                                    1- 1246     	.line	528, "main.c"; 	--BDUTY;
                                    1- 1247     	BANKSEL	_BDUTY
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 06rr                      1- 1248     	DECR	_BDUTY,F
     007A 3rrr                      1- 1249     	LGOTO	_00431_DS_
                                    1- 1250     ;;unsigned compare: left < lit (0xBB8=3000), size=2
     007B                           1- 1251     _00407_DS_:
                                    1- 1252     	.line	530, "main.c"; 	else if(count60s < 3000)
     007B 210B                      1- 1253     	MOVIA	0x0b
                                    1- 1254     	BANKSEL	_count60s
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 04rr                      1- 1255     	SUBAR	(_count60s + 1),W
     007E 0903                      1- 1256     	BTRSS	STATUS,2
     007F 3rrr                      1- 1257     	LGOTO	_00498_DS_
     0080 21B8                      1- 1258     	MOVIA	0xb8
     0081 04rr                      1- 1259     	SUBAR	_count60s,W
     0082                           1- 1260     _00498_DS_:
     0082 0C03                      1- 1261     	BTRSC	STATUS,0
     0083 3rrr                      1- 1262     	LGOTO	_00404_DS_
                                    1- 1263     	.line	532, "main.c"; 	BDUTY = 0;
                                    1- 1264     	BANKSEL	_BDUTY
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 02rr                      1- 1265     	CLRR	_BDUTY
                                    1- 1266     	.line	533, "main.c"; 	++RDUTY;
                                    1- 1267     	BANKSEL	_RDUTY
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 05rr                      1- 1268     	INCR	_RDUTY,F
     0088 3rrr                      1- 1269     	LGOTO	_00431_DS_
                                    1- 1270     ;;unsigned compare: left < lit (0xDAC=3500), size=2
     0089                           1- 1271     _00404_DS_:
                                    1- 1272     	.line	535, "main.c"; 	else if(count60s < 3500)
     0089 210D                      1- 1273     	MOVIA	0x0d
                                    1- 1274     	BANKSEL	_count60s
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 04rr                      1- 1275     	SUBAR	(_count60s + 1),W
     008C 0903                      1- 1276     	BTRSS	STATUS,2
     008D 3rrr                      1- 1277     	LGOTO	_00499_DS_
     008E 21AC                      1- 1278     	MOVIA	0xac
     008F 04rr                      1- 1279     	SUBAR	_count60s,W
     0090                           1- 1280     _00499_DS_:
     0090 0C03                      1- 1281     	BTRSC	STATUS,0
     0091 3rrr                      1- 1282     	LGOTO	_00401_DS_
                                    1- 1283     	.line	537, "main.c"; 	RDUTY = 100;
     0092 2164                      1- 1284     	MOVIA	0x64
                                    1- 1285     	BANKSEL	_RDUTY
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 00rr                      1- 1286     	MOVAR	_RDUTY
     0095 3rrr                      1- 1287     	LGOTO	_00431_DS_
                                    1- 1288     ;;unsigned compare: left < lit (0xFA0=4000), size=2
     0096                           1- 1289     _00401_DS_:
                                    1- 1290     	.line	539, "main.c"; 	else if(count60s < 4000)
     0096 210F                      1- 1291     	MOVIA	0x0f
                                    1- 1292     	BANKSEL	_count60s
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 04rr                      1- 1293     	SUBAR	(_count60s + 1),W
     0099 0903                      1- 1294     	BTRSS	STATUS,2
     009A 3rrr                      1- 1295     	LGOTO	_00500_DS_
     009B 21A0                      1- 1296     	MOVIA	0xa0
     009C 04rr                      1- 1297     	SUBAR	_count60s,W
     009D                           1- 1298     _00500_DS_:
     009D 0C03                      1- 1299     	BTRSC	STATUS,0
     009E 3rrr                      1- 1300     	LGOTO	_00398_DS_
                                    1- 1301     	.line	541, "main.c"; 	--GDUTY;
                                    1- 1302     	BANKSEL	_GDUTY
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 06rr                      1- 1303     	DECR	_GDUTY,F
     00A1 3rrr                      1- 1304     	LGOTO	_00431_DS_
                                    1- 1305     ;;unsigned compare: left < lit (0x1194=4500), size=2
     00A2                           1- 1306     _00398_DS_:
                                    1- 1307     	.line	543, "main.c"; 	else if(count60s < 4500)
     00A2 2111                      1- 1308     	MOVIA	0x11
                                    1- 1309     	BANKSEL	_count60s
     00A3 rrrr                      3-   71 m1      .banksel ram_address
     00A4 04rr                      1- 1310     	SUBAR	(_count60s + 1),W
     00A5 0903                      1- 1311     	BTRSS	STATUS,2
     00A6 3rrr                      1- 1312     	LGOTO	_00501_DS_
     00A7 2194                      1- 1313     	MOVIA	0x94
     00A8 04rr                      1- 1314     	SUBAR	_count60s,W
     00A9                           1- 1315     _00501_DS_:
     00A9 0C03                      1- 1316     	BTRSC	STATUS,0
     00AA 3rrr                      1- 1317     	LGOTO	_00395_DS_
                                    1- 1318     	.line	545, "main.c"; 	GDUTY = 0;
                                    1- 1319     	BANKSEL	_GDUTY
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 02rr                      1- 1320     	CLRR	_GDUTY
     00AD 3rrr                      1- 1321     	LGOTO	_00431_DS_
                                    1- 1322     ;;unsigned compare: left < lit (0x1388=5000), size=2
     00AE                           1- 1323     _00395_DS_:
                                    1- 1324     	.line	547, "main.c"; 	else if(count60s < 5000)
     00AE 2113                      1- 1325     	MOVIA	0x13
                                    1- 1326     	BANKSEL	_count60s
     00AF rrrr                      3-   71 m1      .banksel ram_address
     00B0 04rr                      1- 1327     	SUBAR	(_count60s + 1),W
     00B1 0903                      1- 1328     	BTRSS	STATUS,2
     00B2 3rrr                      1- 1329     	LGOTO	_00502_DS_
     00B3 2188                      1- 1330     	MOVIA	0x88
     00B4 04rr                      1- 1331     	SUBAR	_count60s,W
     00B5                           1- 1332     _00502_DS_:
     00B5 0C03                      1- 1333     	BTRSC	STATUS,0
     00B6 3rrr                      1- 1334     	LGOTO	_00392_DS_
                                    1- 1335     	.line	549, "main.c"; 	++BDUTY;
                                    1- 1336     	BANKSEL	_BDUTY
     00B7 rrrr                      3-   71 m1      .banksel ram_address
     00B8 05rr                      1- 1337     	INCR	_BDUTY,F
     00B9 3rrr                      1- 1338     	LGOTO	_00431_DS_
                                    1- 1339     ;;unsigned compare: left < lit (0x157C=5500), size=2
     00BA                           1- 1340     _00392_DS_:
                                    1- 1341     	.line	551, "main.c"; 	else if(count60s < 5500)
     00BA 2115                      1- 1342     	MOVIA	0x15
                                    1- 1343     	BANKSEL	_count60s
     00BB rrrr                      3-   71 m1      .banksel ram_address
     00BC 04rr                      1- 1344     	SUBAR	(_count60s + 1),W
     00BD 0903                      1- 1345     	BTRSS	STATUS,2
     00BE 3rrr                      1- 1346     	LGOTO	_00503_DS_
     00BF 217C                      1- 1347     	MOVIA	0x7c
     00C0 04rr                      1- 1348     	SUBAR	_count60s,W
     00C1                           1- 1349     _00503_DS_:
     00C1 0C03                      1- 1350     	BTRSC	STATUS,0
     00C2 3rrr                      1- 1351     	LGOTO	_00389_DS_
                                    1- 1352     	.line	553, "main.c"; 	BDUTY = 100;
     00C3 2164                      1- 1353     	MOVIA	0x64
                                    1- 1354     	BANKSEL	_BDUTY
     00C4 rrrr                      3-   71 m1      .banksel ram_address
     00C5 00rr                      1- 1355     	MOVAR	_BDUTY
     00C6 3rrr                      1- 1356     	LGOTO	_00431_DS_
                                    1- 1357     ;;unsigned compare: left < lit (0x170C=5900), size=2
     00C7                           1- 1358     _00389_DS_:
                                    1- 1359     	.line	555, "main.c"; 	else if(count60s < 5900)
     00C7 2117                      1- 1360     	MOVIA	0x17
                                    1- 1361     	BANKSEL	_count60s
     00C8 rrrr                      3-   71 m1      .banksel ram_address
     00C9 04rr                      1- 1362     	SUBAR	(_count60s + 1),W
     00CA 0903                      1- 1363     	BTRSS	STATUS,2
     00CB 3rrr                      1- 1364     	LGOTO	_00504_DS_
     00CC 210C                      1- 1365     	MOVIA	0x0c
     00CD 04rr                      1- 1366     	SUBAR	_count60s,W
     00CE                           1- 1367     _00504_DS_:
     00CE 0C03                      1- 1368     	BTRSC	STATUS,0
     00CF 3rrr                      1- 1369     	LGOTO	_00386_DS_
                                    1- 1370     	.line	557, "main.c"; 	--RDUTY;
                                    1- 1371     	BANKSEL	_RDUTY
     00D0 rrrr                      3-   71 m1      .banksel ram_address
     00D1 06rr                      1- 1372     	DECR	_RDUTY,F
     00D2 3rrr                      1- 1373     	LGOTO	_00431_DS_
                                    1- 1374     ;;unsigned compare: left < lit (0x1770=6000), size=2
     00D3                           1- 1375     _00386_DS_:
                                    1- 1376     	.line	559, "main.c"; 	else if(count60s < 6000)
     00D3 2117                      1- 1377     	MOVIA	0x17
                                    1- 1378     	BANKSEL	_count60s
     00D4 rrrr                      3-   71 m1      .banksel ram_address
     00D5 04rr                      1- 1379     	SUBAR	(_count60s + 1),W
     00D6 0903                      1- 1380     	BTRSS	STATUS,2
     00D7 3rrr                      1- 1381     	LGOTO	_00505_DS_
     00D8 2170                      1- 1382     	MOVIA	0x70
     00D9 04rr                      1- 1383     	SUBAR	_count60s,W
     00DA                           1- 1384     _00505_DS_:
     00DA 0C03                      1- 1385     	BTRSC	STATUS,0
     00DB 3rrr                      1- 1386     	LGOTO	_00431_DS_
                                    1- 1387     	.line	561, "main.c"; 	RDUTY = 20;
     00DC 2114                      1- 1388     	MOVIA	0x14
                                    1- 1389     	BANKSEL	_RDUTY
     00DD rrrr                      3-   71 m1      .banksel ram_address
     00DE 00rr                      1- 1390     	MOVAR	_RDUTY
                                    1- 1391     	.line	562, "main.c"; 	++GDUTY;
                                    1- 1392     	BANKSEL	_GDUTY
     00DF rrrr                      3-   71 m1      .banksel ram_address
     00E0 05rr                      1- 1393     	INCR	_GDUTY,F
     00E1                           1- 1394     _00431_DS_:
                                    1- 1395     	.line	565, "main.c"; 	if(++count60s == 6000)
                                    1- 1396     	BANKSEL	_count60s
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 05rr                      1- 1397     	INCR	_count60s,F
     00E3 0D03                      1- 1398     	BTRSC	STATUS,2
     00E4 05rr                      1- 1399     	INCR	(_count60s + 1),F
     00E5 01rr                      1- 1400     	MOVR	_count60s,W
     00E6 2470                      1- 1401     	XORIA	0x70
     00E7 0903                      1- 1402     	BTRSS	STATUS,2
     00E8 3rrr                      1- 1403     	LGOTO	_00434_DS_
     00E9 01rr                      1- 1404     	MOVR	(_count60s + 1),W
     00EA 2417                      1- 1405     	XORIA	0x17
     00EB 0903                      1- 1406     	BTRSS	STATUS,2
     00EC 3rrr                      1- 1407     	LGOTO	_00434_DS_
                                    1- 1408     	.line	566, "main.c"; 	count60s = 0;
     00ED 02rr                      1- 1409     	CLRR	_count60s
     00EE 02rr                      1- 1410     	CLRR	(_count60s + 1)
     00EF                           1- 1411     _00434_DS_:
                                    1- 1412     	.line	567, "main.c"; 	}
                                    1- 1413     	RETURN	
     00EF 0010                      3-   26 m1      ret
                                    1- 1414     ; exit point of _ledCon
                                    1- 1416     ;***
                                    1- 1417     ;  pBlock Stats: dbName = C
                                    1- 1418     ;***
                                    1- 1419     ;has an exit
                                    1- 1420     ;; Starting pCode block
                                    1- 1421     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1423     _pwmStop:
                                    1- 1424     ; 2 exit points
                                    1- 1425     	.line	484, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 1426     	CLRA	
     0001 00rr                      1- 1427     	SFUN	_T1CR1
                                    1- 1428     	.line	487, "main.c"; 	}
                                    1- 1429     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1430     ; exit point of _pwmStop
                                    1- 1432     ;***
                                    1- 1433     ;  pBlock Stats: dbName = C
                                    1- 1434     ;***
                                    1- 1435     ;has an exit
                                    1- 1436     ;1 compiler assigned register :
                                    1- 1437     ;   r0x103F
                                    1- 1438     ;; Starting pCode block
                                    1- 1439     .segment "code"; module=main, function=_pwmStart
     0000                           1- 1441     _pwmStart:
                                    1- 1442     ; 2 exit points
                                    1- 1443     	.line	472, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 1444     	SFUNR	_T1CR1
                                    1- 1445     	BANKSEL	r0x103F
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1446     	MOVAR	r0x103F
     0003 0Frr                      1- 1447     	BTRSC	r0x103F,7
                                    1- 1448     	.line	473, "main.c"; 	return;
     0004 3rrr                      1- 1449     	LGOTO	_00374_DS_
                                    1- 1450     	.line	474, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1451     	CLRR	_TMRH
                                    1- 1452     	.line	475, "main.c"; 	TMR1 = 0x11;							//频率为110K
     0006 2111                      1- 1453     	MOVIA	0x11
     0007 00rr                      1- 1454     	SFUN	_TMR1
                                    1- 1455     	.line	476, "main.c"; 	PWM1DUTY = 0x08;				// 		
     0008 2108                      1- 1456     	MOVIA	0x08
     0009 00rr                      1- 1457     	SFUN	_PWM1DUTY
                                    1- 1458     	.line	478, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     000A 0200                      1- 1459     	CLRA	
     000B 00rr                      1- 1460     	SFUN	_T1CR2
                                    1- 1461     	.line	479, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 1462     	MOVIA	0x83
     000D 00rr                      1- 1463     	SFUN	_T1CR1
     000E                           1- 1464     _00374_DS_:
                                    1- 1465     	.line	480, "main.c"; 	}
                                    1- 1466     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1467     ; exit point of _pwmStart
                                    1- 1469     ;***
                                    1- 1470     ;  pBlock Stats: dbName = C
                                    1- 1471     ;***
                                    1- 1472     ;3 compiler assigned registers:
                                    1- 1473     ;   r0x1040
                                    1- 1474     ;   STK00
                                    1- 1475     ;   r0x1041
                                    1- 1476     ;; Starting pCode block
                                    1- 1477     .segment "code"; module=main, function=_setPWMdutyG
                                    1- 1479     ;local variable name mapping:
     0000                           1- 1482     _setPWMdutyG:
                                    1- 1483     ; 0 exit points
                                    1- 1484     	.line	460, "main.c"; 	void setPWMdutyG(char portPin,char duty)
                                    1- 1485     	BANKSEL	r0x1040
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1486     	MOVAR	r0x1040
     0002 01rr                      1- 1487     	MOVR	STK00,W
                                    1- 1488     	BANKSEL	r0x1041
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1489     	MOVAR	r0x1041
                                    1- 1490     	.line	462, "main.c"; 	if(ledCount <= duty)
                                    1- 1491     	BANKSEL	_ledCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1492     	MOVR	_ledCount,W
                                    1- 1493     	BANKSEL	r0x1041
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 04rr                      1- 1494     	SUBAR	r0x1041,W
     0009 0803                      1- 1495     	BTRSS	STATUS,0
     000A 3rrr                      1- 1496     	LGOTO	_00363_DS_
                                    1- 1497     	.line	463, "main.c"; 	PORTA |= portPin;
                                    1- 1498     	BANKSEL	r0x1040
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1499     	MOVR	r0x1040,W
     000D 11rr                      1- 1500     	IORAR	_PORTA,F
     000E 3rrr                      1- 1501     	LGOTO	_00364_DS_
     000F                           1- 1502     _00363_DS_:
                                    1- 1503     	.line	465, "main.c"; 	PORTA &= (~portPin);
                                    1- 1504     	BANKSEL	r0x1040
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 07rr                      1- 1505     	COMR	r0x1040,W
     0011 00rr                      1- 1506     	MOVAR	r0x1040
     0012 10rr                      1- 1507     	ANDAR	_PORTA,F
     0013                           1- 1508     _00364_DS_:
                                    1- 1509     	.line	466, "main.c"; 	if(ledCount == 100)
                                    1- 1510     	BANKSEL	_ledCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1511     	MOVR	_ledCount,W
     0015 2464                      1- 1512     	XORIA	0x64
     0016 0D03                      1- 1513     	BTRSC	STATUS,2
                                    1- 1514     	.line	467, "main.c"; 	ledCount = 0;
     0017 02rr                      1- 1515     	CLRR	_ledCount
                                    1- 1516     	.line	468, "main.c"; 	}
                                    1- 1517     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 1519     ;***
                                    1- 1520     ;  pBlock Stats: dbName = C
                                    1- 1521     ;***
                                    1- 1522     ;3 compiler assigned registers:
                                    1- 1523     ;   r0x1042
                                    1- 1524     ;   STK00
                                    1- 1525     ;   r0x1043
                                    1- 1526     ;; Starting pCode block
                                    1- 1527     .segment "code"; module=main, function=_setPWMduty
                                    1- 1529     ;local variable name mapping:
     0000                           1- 1532     _setPWMduty:
                                    1- 1533     ; 0 exit points
                                    1- 1534     	.line	449, "main.c"; 	void setPWMduty(char portPin,char duty)
                                    1- 1535     	BANKSEL	r0x1042
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1536     	MOVAR	r0x1042
     0002 01rr                      1- 1537     	MOVR	STK00,W
                                    1- 1538     	BANKSEL	r0x1043
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1539     	MOVAR	r0x1043
                                    1- 1540     	.line	451, "main.c"; 	if(ledCount <= duty)
                                    1- 1541     	BANKSEL	_ledCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1542     	MOVR	_ledCount,W
                                    1- 1543     	BANKSEL	r0x1043
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 04rr                      1- 1544     	SUBAR	r0x1043,W
     0009 0803                      1- 1545     	BTRSS	STATUS,0
     000A 3rrr                      1- 1546     	LGOTO	_00353_DS_
                                    1- 1547     	.line	452, "main.c"; 	PORTB |= portPin;
                                    1- 1548     	BANKSEL	r0x1042
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1549     	MOVR	r0x1042,W
     000D 11rr                      1- 1550     	IORAR	_PORTB,F
     000E 3rrr                      1- 1551     	LGOTO	_00354_DS_
     000F                           1- 1552     _00353_DS_:
                                    1- 1553     	.line	454, "main.c"; 	PORTB &= (~portPin);
                                    1- 1554     	BANKSEL	r0x1042
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 07rr                      1- 1555     	COMR	r0x1042,W
     0011 00rr                      1- 1556     	MOVAR	r0x1042
     0012 10rr                      1- 1557     	ANDAR	_PORTB,F
     0013                           1- 1558     _00354_DS_:
                                    1- 1559     	.line	455, "main.c"; 	if(ledCount == 100)
                                    1- 1560     	BANKSEL	_ledCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1561     	MOVR	_ledCount,W
     0015 2464                      1- 1562     	XORIA	0x64
     0016 0D03                      1- 1563     	BTRSC	STATUS,2
                                    1- 1564     	.line	456, "main.c"; 	ledCount = 0;
     0017 02rr                      1- 1565     	CLRR	_ledCount
                                    1- 1566     	.line	457, "main.c"; 	}
                                    1- 1567     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 1569     ;***
                                    1- 1570     ;  pBlock Stats: dbName = C
                                    1- 1571     ;***
                                    1- 1572     ;functions called:
                                    1- 1573     ;   _pwmStart
                                    1- 1574     ;   _pwmStop
                                    1- 1575     ;   _pwmStart
                                    1- 1576     ;   _pwmStop
                                    1- 1577     ;   _pwmStart
                                    1- 1578     ;   _pwmStop
                                    1- 1579     ;   _pwmStart
                                    1- 1580     ;   _pwmStop
                                    1- 1581     ;; Starting pCode block
                                    1- 1582     .segment "code"; module=main, function=_pwmCtr
     0000                           1- 1584     _pwmCtr:
                                    1- 1585     ; 0 exit points
                                    1- 1586     	.line	416, "main.c"; 	if(++count500ms >= 100)
                                    1- 1587     	BANKSEL	_count500ms
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1588     	INCR	_count500ms,F
                                    1- 1589     ;;unsigned compare: left < lit (0x64=100), size=1
     0002 2164                      1- 1590     	MOVIA	0x64
     0003 04rr                      1- 1591     	SUBAR	_count500ms,W
     0004 0C03                      1- 1592     	BTRSC	STATUS,0
                                    1- 1593     	.line	418, "main.c"; 	count500ms = 0;
     0005 02rr                      1- 1594     	CLRR	_count500ms
                                    1- 1595     	.line	420, "main.c"; 	if(workStep == 1)
                                    1- 1596     	BANKSEL	_workStep
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1- 1597     	MOVR	_workStep,W
     0008 2401                      1- 1598     	XORIA	0x01
     0009 0903                      1- 1599     	BTRSS	STATUS,2
     000A 3rrr                      1- 1600     	LGOTO	_00345_DS_
                                    1- 1601     	.line	422, "main.c"; 	pwmStart();
     000B 2rrr                      1- 1602     	LCALL	_pwmStart
     000C 3rrr                      1- 1603     	LGOTO	_00347_DS_
     000D                           1- 1604     _00345_DS_:
                                    1- 1605     	.line	424, "main.c"; 	else if(workStep == 2)
                                    1- 1606     	BANKSEL	_workStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 1607     	MOVR	_workStep,W
     000F 2402                      1- 1608     	XORIA	0x02
     0010 0903                      1- 1609     	BTRSS	STATUS,2
     0011 3rrr                      1- 1610     	LGOTO	_00342_DS_
                                    1- 1611     	.line	426, "main.c"; 	if(count500ms == 0)
                                    1- 1612     	BANKSEL	_count500ms
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1613     	MOVR	_count500ms,W
     0014 0903                      1- 1614     	BTRSS	STATUS,2
     0015 3rrr                      1- 1615     	LGOTO	_00347_DS_
                                    1- 1616     	.line	429, "main.c"; 	if(step2Count == 8)
                                    1- 1617     	BANKSEL	_step2Count
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1618     	MOVR	_step2Count,W
     0018 2408                      1- 1619     	XORIA	0x08
     0019 0D03                      1- 1620     	BTRSC	STATUS,2
                                    1- 1621     	.line	430, "main.c"; 	pwmStop();
     001A 2rrr                      1- 1622     	LCALL	_pwmStop
                                    1- 1623     	.line	431, "main.c"; 	if(step2Count >= 16)
     001B 2110                      1- 1624     	MOVIA	0x10
                                    1- 1625     	BANKSEL	_step2Count
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 04rr                      1- 1626     	SUBAR	_step2Count,W
     001E 0803                      1- 1627     	BTRSS	STATUS,0
     001F 3rrr                      1- 1628     	LGOTO	_00336_DS_
                                    1- 1629     	.line	433, "main.c"; 	step2Count = 0;
     0020 02rr                      1- 1630     	CLRR	_step2Count
                                    1- 1631     	.line	434, "main.c"; 	pwmStart();
     0021 2rrr                      1- 1632     	LCALL	_pwmStart
     0022                           1- 1633     _00336_DS_:
                                    1- 1634     	.line	436, "main.c"; 	step2Count++;
                                    1- 1635     	BANKSEL	_step2Count
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1- 1636     	INCR	_step2Count,F
     0024 3rrr                      1- 1637     	LGOTO	_00347_DS_
     0025                           1- 1638     _00342_DS_:
                                    1- 1639     	.line	439, "main.c"; 	else if(workStep == 0)
                                    1- 1640     	BANKSEL	_workStep
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 1641     	MOVR	_workStep,W
     0027 0D03                      1- 1642     	BTRSC	STATUS,2
                                    1- 1643     	.line	441, "main.c"; 	pwmStop();
     0028 2rrr                      1- 1644     	LCALL	_pwmStop
     0029                           1- 1645     _00347_DS_:
                                    1- 1646     	.line	445, "main.c"; 	}
                                    1- 1647     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1- 1649     ;***
                                    1- 1650     ;  pBlock Stats: dbName = C
                                    1- 1651     ;***
                                    1- 1652     ;has an exit
                                    1- 1653     ;functions called:
                                    1- 1654     ;   _delay
                                    1- 1655     ;   _F_wait_eoc
                                    1- 1656     ;   _delay
                                    1- 1657     ;   _F_wait_eoc
                                    1- 1658     ;7 compiler assigned registers:
                                    1- 1659     ;   r0x1044
                                    1- 1660     ;   STK00
                                    1- 1661     ;   r0x1045
                                    1- 1662     ;   r0x1046
                                    1- 1663     ;   r0x1047
                                    1- 1664     ;   r0x1048
                                    1- 1665     ;   r0x1049
                                    1- 1666     ;; Starting pCode block
                                    1- 1667     .segment "code"; module=main, function=_F_AIN9_Convert
                                    1- 1669     ;local variable name mapping:
     0000                           1- 1672     _F_AIN9_Convert:
                                    1- 1673     ; 2 exit points
                                    1- 1674     	.line	397, "main.c"; 	void F_AIN9_Convert(char count)
                                    1- 1675     	BANKSEL	r0x1044
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1676     	MOVAR	r0x1044
                                    1- 1677     	.line	399, "main.c"; 	R_AIN9_DATA=R_AIN9_DATA_LB=0x00;   
                                    1- 1678     	BANKSEL	_R_AIN9_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1679     	CLRR	_R_AIN9_DATA_LB
                                    1- 1680     	BANKSEL	_R_AIN9_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1681     	CLRR	_R_AIN9_DATA
     0006 02rr                      1- 1682     	CLRR	(_R_AIN9_DATA + 1)
                                    1- 1683     	.line	401, "main.c"; 	ADMD  = 0x90 | C_ADC_PB4;				// Select AIN6(PB1) pad as ADC input
     0007 2199                      1- 1684     	MOVIA	0x99
     0008 00rr                      1- 1685     	MOVAR	_ADMD
                                    1- 1686     	.line	402, "main.c"; 	delay(200);	
     0009 21C8                      1- 1687     	MOVIA	0xc8
     000A 00rr                      1- 1688     	MOVAR	STK00
     000B 2100                      1- 1689     	MOVIA	0x00
     000C 2rrr                      1- 1690     	LCALL	_delay
                                    1- 1691     	.line	403, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1692     	MOVIA	0x01
                                    1- 1693     	BANKSEL	r0x1045
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1694     	MOVAR	r0x1045
     0010                           1- 1695     _00324_DS_:
                                    1- 1696     	BANKSEL	r0x1045
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1697     	MOVR	r0x1045,W
                                    1- 1698     	BANKSEL	r0x1044
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1699     	SUBAR	r0x1044,W
     0014 0803                      1- 1700     	BTRSS	STATUS,0
     0015 3rrr                      1- 1701     	LGOTO	_00326_DS_
                                    1- 1702     	.line	405, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1703     	BSR	_ADMDbits,6
                                    1- 1704     	.line	406, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1705     	LCALL	_F_wait_eoc
                                    1- 1706     	.line	407, "main.c"; 	R_AIN9_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1707     	MOVIA	0x0f
     0019 10rr                      1- 1708     	ANDAR	_ADR,W
                                    1- 1709     ;;3	MOVAR	r0x1046
                                    1- 1710     	BANKSEL	_R_AIN9_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1711     	ADDAR	_R_AIN9_DATA_LB,F
                                    1- 1712     	.line	408, "main.c"; 	R_AIN9_DATA    += ADD; 
     001C 01rr                      1- 1713     	MOVR	_ADD,W
                                    1- 1714     	BANKSEL	r0x1046
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1715     	MOVAR	r0x1046
                                    1- 1716     ;;1	CLRR	r0x1047
                                    1- 1717     ;;108	MOVR	r0x1046,W
                                    1- 1718     ;;106	MOVAR	r0x1048
     001F 2100                      1- 1719     	MOVIA	0x00
                                    1- 1720     	BANKSEL	r0x1049
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1721     	MOVAR	r0x1049
                                    1- 1722     ;;107	MOVR	r0x1048,W
                                    1- 1723     	BANKSEL	r0x1046
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1724     	MOVR	r0x1046,W
                                    1- 1725     	BANKSEL	_R_AIN9_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1726     	ADDAR	_R_AIN9_DATA,F
                                    1- 1727     	BANKSEL	r0x1049
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1728     	MOVR	r0x1049,W
     0028 0C03                      1- 1729     	BTRSC	STATUS,0
     0029 05rr                      1- 1730     	INCR	r0x1049,W
     002A 0D03                      1- 1731     	BTRSC	STATUS,2
     002B 3rrr                      1- 1732     	LGOTO	_00002_DS_
                                    1- 1733     	BANKSEL	_R_AIN9_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1734     	ADDAR	(_R_AIN9_DATA + 1),F
     002E                           1- 1735     _00002_DS_:
                                    1- 1736     	.line	403, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1737     	BANKSEL	r0x1045
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1738     	INCR	r0x1045,F
     0030 3rrr                      1- 1739     	LGOTO	_00324_DS_
     0031                           1- 1740     _00326_DS_:
                                    1- 1741     	.line	410, "main.c"; 	}
                                    1- 1742     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1743     ; exit point of _F_AIN9_Convert
                                    1- 1745     ;***
                                    1- 1746     ;  pBlock Stats: dbName = C
                                    1- 1747     ;***
                                    1- 1748     ;has an exit
                                    1- 1749     ;functions called:
                                    1- 1750     ;   _delay
                                    1- 1751     ;   _F_wait_eoc
                                    1- 1752     ;   _delay
                                    1- 1753     ;   _F_wait_eoc
                                    1- 1754     ;7 compiler assigned registers:
                                    1- 1755     ;   r0x104A
                                    1- 1756     ;   STK00
                                    1- 1757     ;   r0x104B
                                    1- 1758     ;   r0x104C
                                    1- 1759     ;   r0x104D
                                    1- 1760     ;   r0x104E
                                    1- 1761     ;   r0x104F
                                    1- 1762     ;; Starting pCode block
                                    1- 1763     .segment "code"; module=main, function=_F_AIN5_Convert
                                    1- 1765     ;local variable name mapping:
     0000                           1- 1768     _F_AIN5_Convert:
                                    1- 1769     ; 2 exit points
                                    1- 1770     	.line	381, "main.c"; 	void F_AIN5_Convert(char count)
                                    1- 1771     	BANKSEL	r0x104A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1772     	MOVAR	r0x104A
                                    1- 1773     	.line	383, "main.c"; 	R_AIN5_DATA=R_AIN5_DATA_LB=0x00;   
                                    1- 1774     	BANKSEL	_R_AIN5_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1775     	CLRR	_R_AIN5_DATA_LB
                                    1- 1776     	BANKSEL	_R_AIN5_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1777     	CLRR	_R_AIN5_DATA
     0006 02rr                      1- 1778     	CLRR	(_R_AIN5_DATA + 1)
                                    1- 1779     	.line	385, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;				// Select AIN6(PB1) pad as ADC input
     0007 219B                      1- 1780     	MOVIA	0x9b
     0008 00rr                      1- 1781     	MOVAR	_ADMD
                                    1- 1782     	.line	386, "main.c"; 	delay(200);	
     0009 21C8                      1- 1783     	MOVIA	0xc8
     000A 00rr                      1- 1784     	MOVAR	STK00
     000B 2100                      1- 1785     	MOVIA	0x00
     000C 2rrr                      1- 1786     	LCALL	_delay
                                    1- 1787     	.line	387, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1788     	MOVIA	0x01
                                    1- 1789     	BANKSEL	r0x104B
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1790     	MOVAR	r0x104B
     0010                           1- 1791     _00315_DS_:
                                    1- 1792     	BANKSEL	r0x104B
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1793     	MOVR	r0x104B,W
                                    1- 1794     	BANKSEL	r0x104A
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1795     	SUBAR	r0x104A,W
     0014 0803                      1- 1796     	BTRSS	STATUS,0
     0015 3rrr                      1- 1797     	LGOTO	_00317_DS_
                                    1- 1798     	.line	389, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1799     	BSR	_ADMDbits,6
                                    1- 1800     	.line	390, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1801     	LCALL	_F_wait_eoc
                                    1- 1802     	.line	391, "main.c"; 	R_AIN5_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1803     	MOVIA	0x0f
     0019 10rr                      1- 1804     	ANDAR	_ADR,W
                                    1- 1805     ;;3	MOVAR	r0x104C
                                    1- 1806     	BANKSEL	_R_AIN5_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1807     	ADDAR	_R_AIN5_DATA_LB,F
                                    1- 1808     	.line	392, "main.c"; 	R_AIN5_DATA    += ADD; 
     001C 01rr                      1- 1809     	MOVR	_ADD,W
                                    1- 1810     	BANKSEL	r0x104C
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1811     	MOVAR	r0x104C
                                    1- 1812     ;;1	CLRR	r0x104D
                                    1- 1813     ;;105	MOVR	r0x104C,W
                                    1- 1814     ;;103	MOVAR	r0x104E
     001F 2100                      1- 1815     	MOVIA	0x00
                                    1- 1816     	BANKSEL	r0x104F
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1817     	MOVAR	r0x104F
                                    1- 1818     ;;104	MOVR	r0x104E,W
                                    1- 1819     	BANKSEL	r0x104C
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1820     	MOVR	r0x104C,W
                                    1- 1821     	BANKSEL	_R_AIN5_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1822     	ADDAR	_R_AIN5_DATA,F
                                    1- 1823     	BANKSEL	r0x104F
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1824     	MOVR	r0x104F,W
     0028 0C03                      1- 1825     	BTRSC	STATUS,0
     0029 05rr                      1- 1826     	INCR	r0x104F,W
     002A 0D03                      1- 1827     	BTRSC	STATUS,2
     002B 3rrr                      1- 1828     	LGOTO	_00003_DS_
                                    1- 1829     	BANKSEL	_R_AIN5_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1830     	ADDAR	(_R_AIN5_DATA + 1),F
     002E                           1- 1831     _00003_DS_:
                                    1- 1832     	.line	387, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1833     	BANKSEL	r0x104B
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1834     	INCR	r0x104B,F
     0030 3rrr                      1- 1835     	LGOTO	_00315_DS_
     0031                           1- 1836     _00317_DS_:
                                    1- 1837     	.line	394, "main.c"; 	}
                                    1- 1838     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1839     ; exit point of _F_AIN5_Convert
                                    1- 1841     ;***
                                    1- 1842     ;  pBlock Stats: dbName = C
                                    1- 1843     ;***
                                    1- 1844     ;has an exit
                                    1- 1845     ;functions called:
                                    1- 1846     ;   _F_AIN5_Convert
                                    1- 1847     ;   __divuint
                                    1- 1848     ;   __divuint
                                    1- 1849     ;   __moduint
                                    1- 1850     ;   _F_AIN5_Convert
                                    1- 1851     ;   __divuint
                                    1- 1852     ;   __divuint
                                    1- 1853     ;   __moduint
                                    1- 1854     ;7 compiler assigned registers:
                                    1- 1855     ;   r0x1050
                                    1- 1856     ;   r0x1051
                                    1- 1857     ;   r0x1052
                                    1- 1858     ;   r0x1053
                                    1- 1859     ;   STK02
                                    1- 1860     ;   STK01
                                    1- 1861     ;   STK00
                                    1- 1862     ;; Starting pCode block
                                    1- 1863     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1865     _checkBatAD:
                                    1- 1866     ; 2 exit points
                                    1- 1867     	.line	336, "main.c"; 	if(workStep == 2 && step2Count < 8)
                                    1- 1868     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1869     	MOVR	_workStep,W
     0002 2402                      1- 1870     	XORIA	0x02
     0003 0903                      1- 1871     	BTRSS	STATUS,2
     0004 3rrr                      1- 1872     	LGOTO	_00284_DS_
                                    1- 1873     ;;unsigned compare: left < lit (0x8=8), size=1
     0005 2108                      1- 1874     	MOVIA	0x08
                                    1- 1875     	BANKSEL	_step2Count
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 1876     	SUBAR	_step2Count,W
     0008 0803                      1- 1877     	BTRSS	STATUS,0
                                    1- 1878     	.line	337, "main.c"; 	return;
     0009 3rrr                      1- 1879     	LGOTO	_00292_DS_
     000A                           1- 1880     _00284_DS_:
                                    1- 1881     	.line	338, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA_LB = 0x00;
                                    1- 1882     	BANKSEL	_R_AIN5_DATA_LB
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1- 1883     	CLRR	_R_AIN5_DATA_LB
                                    1- 1884     	BANKSEL	_R_AIN5_DATA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1- 1885     	CLRR	_R_AIN5_DATA
     000E 02rr                      1- 1886     	CLRR	(_R_AIN5_DATA + 1)
                                    1- 1887     	.line	339, "main.c"; 	F_AIN5_Convert(8);					// execute AIN0 ADC converting 8 times
     000F 2108                      1- 1888     	MOVIA	0x08
     0010 2rrr                      1- 1889     	LCALL	_F_AIN5_Convert
                                    1- 1890     	.line	340, "main.c"; 	R_AIN5_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1891     	BANKSEL	_R_AIN5_DATA
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 15rr                      1- 1892     	SWAPR	(_R_AIN5_DATA + 1),W
     0013 22F0                      1- 1893     	ANDIA	0xf0
     0014 00rr                      1- 1894     	MOVAR	(_R_AIN5_DATA + 1)
     0015 15rr                      1- 1895     	SWAPR	_R_AIN5_DATA,W
     0016 00rr                      1- 1896     	MOVAR	_R_AIN5_DATA
     0017 220F                      1- 1897     	ANDIA	0x0f
     0018 11rr                      1- 1898     	IORAR	(_R_AIN5_DATA + 1),F
     0019 12rr                      1- 1899     	XORAR	_R_AIN5_DATA,F
                                    1- 1900     	.line	341, "main.c"; 	R_AIN5_DATA_LB &= 0xF0;				// Only get Bit7~4
     001A 21F0                      1- 1901     	MOVIA	0xf0
                                    1- 1902     	BANKSEL	_R_AIN5_DATA_LB
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 10rr                      1- 1903     	ANDAR	_R_AIN5_DATA_LB,F
                                    1- 1904     	.line	342, "main.c"; 	R_AIN5_DATA += R_AIN5_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     001D 01rr                      1- 1905     	MOVR	_R_AIN5_DATA_LB,W
                                    1- 1906     	BANKSEL	r0x1050
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1907     	MOVAR	r0x1050
                                    1- 1908     	BANKSEL	r0x1051
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 02rr                      1- 1909     	CLRR	r0x1051
                                    1- 1910     ;;102	MOVR	r0x1050,W
                                    1- 1911     ;;100	MOVAR	r0x1052
     0022 2100                      1- 1912     	MOVIA	0x00
                                    1- 1913     	BANKSEL	r0x1053
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1914     	MOVAR	r0x1053
                                    1- 1915     ;;101	MOVR	r0x1052,W
                                    1- 1916     	BANKSEL	r0x1050
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 1917     	MOVR	r0x1050,W
                                    1- 1918     	BANKSEL	_R_AIN5_DATA
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 03rr                      1- 1919     	ADDAR	_R_AIN5_DATA,F
                                    1- 1920     	BANKSEL	r0x1053
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 1921     	MOVR	r0x1053,W
     002B 0C03                      1- 1922     	BTRSC	STATUS,0
     002C 05rr                      1- 1923     	INCR	r0x1053,W
     002D 0D03                      1- 1924     	BTRSC	STATUS,2
     002E 3rrr                      1- 1925     	LGOTO	_00004_DS_
                                    1- 1926     	BANKSEL	_R_AIN5_DATA
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 03rr                      1- 1927     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1- 1928     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0031                           1- 1929     _00004_DS_:
                                    1- 1930     	.line	343, "main.c"; 	R_AIN5_DATA >>=3;					// R_AIN0_DATA divided 8	
     0031 1C03                      1- 1931     	BCR	STATUS,0
                                    1- 1932     	BANKSEL	_R_AIN5_DATA
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 13rr                      1- 1933     	RRR	(_R_AIN5_DATA + 1),F
     0034 13rr                      1- 1934     	RRR	_R_AIN5_DATA,F
                                    1- 1935     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0035 1C03                      1- 1936     	BCR	STATUS,0
     0036 13rr                      1- 1937     	RRR	(_R_AIN5_DATA + 1),F
     0037 13rr                      1- 1938     	RRR	_R_AIN5_DATA,F
                                    1- 1939     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0038 1C03                      1- 1940     	BCR	STATUS,0
     0039 13rr                      1- 1941     	RRR	(_R_AIN5_DATA + 1),F
     003A 13rr                      1- 1942     	RRR	_R_AIN5_DATA,F
                                    1- 1943     ;;unsigned compare: left < lit (0x442=1090), size=2
                                    1- 1944     	.line	345, "main.c"; 	if(R_AIN5_DATA < 1090)
     003B 2104                      1- 1945     	MOVIA	0x04
     003C 04rr                      1- 1946     	SUBAR	(_R_AIN5_DATA + 1),W
     003D 0903                      1- 1947     	BTRSS	STATUS,2
     003E 3rrr                      1- 1948     	LGOTO	_00307_DS_
     003F 2142                      1- 1949     	MOVIA	0x42
     0040 04rr                      1- 1950     	SUBAR	_R_AIN5_DATA,W
     0041                           1- 1951     _00307_DS_:
     0041 0C03                      1- 1952     	BTRSC	STATUS,0
     0042 3rrr                      1- 1953     	LGOTO	_00290_DS_
                                    1- 1954     	.line	347, "main.c"; 	baiweiNum = 0;
                                    1- 1955     	BANKSEL	_baiweiNum
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 02rr                      1- 1956     	CLRR	_baiweiNum
                                    1- 1957     	.line	348, "main.c"; 	shiweiNum = 0;
                                    1- 1958     	BANKSEL	_shiweiNum
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 02rr                      1- 1959     	CLRR	_shiweiNum
                                    1- 1960     	.line	349, "main.c"; 	geweiNum = 0;
                                    1- 1961     	BANKSEL	_geweiNum
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 02rr                      1- 1962     	CLRR	_geweiNum
                                    1- 1963     	.line	350, "main.c"; 	lvFlag = 1;
     0049 2101                      1- 1964     	MOVIA	0x01
                                    1- 1965     	BANKSEL	_lvFlag
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 00rr                      1- 1966     	MOVAR	_lvFlag
                                    1- 1967     	.line	352, "main.c"; 	workStep = 0;
                                    1- 1968     	BANKSEL	_workStep
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 02rr                      1- 1969     	CLRR	_workStep
                                    1- 1970     	.line	354, "main.c"; 	ledFlag = 0;
                                    1- 1971     	BANKSEL	_ledFlag
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 02rr                      1- 1972     	CLRR	_ledFlag
                                    1- 1973     	.line	355, "main.c"; 	PORTB &= 0xF9;
     0050 21F9                      1- 1974     	MOVIA	0xf9
     0051 10rr                      1- 1975     	ANDAR	_PORTB,F
                                    1- 1976     	.line	356, "main.c"; 	PORTA &= 0x7F;
     0052 1Frr                      1- 1977     	BCR	_PORTA,7
                                    1- 1978     	.line	357, "main.c"; 	count60s = 0;
                                    1- 1979     	BANKSEL	_count60s
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 02rr                      1- 1980     	CLRR	_count60s
     0055 02rr                      1- 1981     	CLRR	(_count60s + 1)
     0056 3rrr                      1- 1982     	LGOTO	_00292_DS_
                                    1- 1983     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1984     ;;unsigned compare: left >= lit (0x56F=1391), size=2
     0057                           1- 1985     _00290_DS_:
                                    1- 1986     	.line	359, "main.c"; 	else if(R_AIN5_DATA > 1390)
     0057 2105                      1- 1987     	MOVIA	0x05
                                    1- 1988     	BANKSEL	_R_AIN5_DATA
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 04rr                      1- 1989     	SUBAR	(_R_AIN5_DATA + 1),W
     005A 0903                      1- 1990     	BTRSS	STATUS,2
     005B 3rrr                      1- 1991     	LGOTO	_00308_DS_
     005C 216F                      1- 1992     	MOVIA	0x6f
     005D 04rr                      1- 1993     	SUBAR	_R_AIN5_DATA,W
     005E                           1- 1994     _00308_DS_:
     005E 0803                      1- 1995     	BTRSS	STATUS,0
     005F 3rrr                      1- 1996     	LGOTO	_00287_DS_
                                    1- 1997     	.line	361, "main.c"; 	baiweiNum = 1;
     0060 2101                      1- 1998     	MOVIA	0x01
                                    1- 1999     	BANKSEL	_baiweiNum
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 00rr                      1- 2000     	MOVAR	_baiweiNum
                                    1- 2001     	.line	362, "main.c"; 	shiweiNum = 0;
                                    1- 2002     	BANKSEL	_shiweiNum
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 02rr                      1- 2003     	CLRR	_shiweiNum
                                    1- 2004     	.line	363, "main.c"; 	geweiNum = 0;
                                    1- 2005     	BANKSEL	_geweiNum
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 02rr                      1- 2006     	CLRR	_geweiNum
                                    1- 2007     	.line	364, "main.c"; 	lvFlag = 0;
                                    1- 2008     	BANKSEL	_lvFlag
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 02rr                      1- 2009     	CLRR	_lvFlag
     0069 3rrr                      1- 2010     	LGOTO	_00292_DS_
     006A                           1- 2011     _00287_DS_:
                                    1- 2012     	.line	368, "main.c"; 	baiweiNum = 0;
                                    1- 2013     	BANKSEL	_baiweiNum
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 02rr                      1- 2014     	CLRR	_baiweiNum
                                    1- 2015     	.line	369, "main.c"; 	nbat = (R_AIN5_DATA - 1090)/3;
     006C 21BE                      1- 2016     	MOVIA	0xbe
                                    1- 2017     	BANKSEL	_R_AIN5_DATA
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 03rr                      1- 2018     	ADDAR	_R_AIN5_DATA,W
                                    1- 2019     	BANKSEL	r0x1050
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 00rr                      1- 2020     	MOVAR	r0x1050
     0071 21FB                      1- 2021     	MOVIA	0xfb
                                    1- 2022     	BANKSEL	r0x1051
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 00rr                      1- 2023     	MOVAR	r0x1051
                                    1- 2024     	BANKSEL	_R_AIN5_DATA
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 01rr                      1- 2025     	MOVR	(_R_AIN5_DATA + 1),W
     0076 0C03                      1- 2026     	BTRSC	STATUS,0
     0077 05rr                      1- 2027     	INCR	(_R_AIN5_DATA + 1),W
     0078 0D03                      1- 2028     	BTRSC	STATUS,2
     0079 3rrr                      1- 2029     	LGOTO	_00005_DS_
                                    1- 2030     	BANKSEL	r0x1051
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 03rr                      1- 2031     	ADDAR	r0x1051,F
     007C                           1- 2032     _00005_DS_:
     007C 2103                      1- 2033     	MOVIA	0x03
     007D 00rr                      1- 2034     	MOVAR	STK02
     007E 2100                      1- 2035     	MOVIA	0x00
     007F 00rr                      1- 2036     	MOVAR	STK01
                                    1- 2037     	BANKSEL	r0x1050
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1- 2038     	MOVR	r0x1050,W
     0082 00rr                      1- 2039     	MOVAR	STK00
                                    1- 2040     	BANKSEL	r0x1051
     0083 rrrr                      3-   71 m1      .banksel ram_address
     0084 01rr                      1- 2041     	MOVR	r0x1051,W
     0085 2rrr                      1- 2042     	LCALL	__divuint
                                    1- 2043     	BANKSEL	_nbat
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 00rr                      1- 2044     	MOVAR	(_nbat + 1)
     0088 01rr                      1- 2045     	MOVR	STK00,W
     0089 00rr                      1- 2046     	MOVAR	_nbat
                                    1- 2047     	.line	370, "main.c"; 	shiweiNum = nbat/10;
     008A 210A                      1- 2048     	MOVIA	0x0a
     008B 00rr                      1- 2049     	MOVAR	STK02
     008C 2100                      1- 2050     	MOVIA	0x00
     008D 00rr                      1- 2051     	MOVAR	STK01
     008E 01rr                      1- 2052     	MOVR	_nbat,W
     008F 00rr                      1- 2053     	MOVAR	STK00
     0090 01rr                      1- 2054     	MOVR	(_nbat + 1),W
     0091 2rrr                      1- 2055     	LCALL	__divuint
                                    1- 2056     	BANKSEL	r0x1051
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 00rr                      1- 2057     	MOVAR	r0x1051
     0094 01rr                      1- 2058     	MOVR	STK00,W
                                    1- 2059     	BANKSEL	r0x1050
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 00rr                      1- 2060     	MOVAR	r0x1050
                                    1- 2061     	BANKSEL	_shiweiNum
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 00rr                      1- 2062     	MOVAR	_shiweiNum
                                    1- 2063     	.line	371, "main.c"; 	geweiNum = nbat %10;
     0099 210A                      1- 2064     	MOVIA	0x0a
     009A 00rr                      1- 2065     	MOVAR	STK02
     009B 2100                      1- 2066     	MOVIA	0x00
     009C 00rr                      1- 2067     	MOVAR	STK01
                                    1- 2068     	BANKSEL	_nbat
     009D rrrr                      3-   71 m1      .banksel ram_address
     009E 01rr                      1- 2069     	MOVR	_nbat,W
     009F 00rr                      1- 2070     	MOVAR	STK00
     00A0 01rr                      1- 2071     	MOVR	(_nbat + 1),W
     00A1 2rrr                      1- 2072     	LCALL	__moduint
                                    1- 2073     	BANKSEL	r0x1051
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 00rr                      1- 2074     	MOVAR	r0x1051
     00A4 01rr                      1- 2075     	MOVR	STK00,W
                                    1- 2076     	BANKSEL	r0x1050
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 00rr                      1- 2077     	MOVAR	r0x1050
                                    1- 2078     	BANKSEL	_geweiNum
     00A7 rrrr                      3-   71 m1      .banksel ram_address
     00A8 00rr                      1- 2079     	MOVAR	_geweiNum
                                    1- 2080     	.line	372, "main.c"; 	lvFlag = 0;
                                    1- 2081     	BANKSEL	_lvFlag
     00A9 rrrr                      3-   71 m1      .banksel ram_address
     00AA 02rr                      1- 2082     	CLRR	_lvFlag
     00AB                           1- 2083     _00292_DS_:
                                    1- 2084     	.line	375, "main.c"; 	}
                                    1- 2085     	RETURN	
     00AB 0010                      3-   26 m1      ret
                                    1- 2086     ; exit point of _checkBatAD
                                    1- 2088     ;***
                                    1- 2089     ;  pBlock Stats: dbName = C
                                    1- 2090     ;***
                                    1- 2091     ;has an exit
                                    1- 2092     ;functions called:
                                    1- 2093     ;   _F_AIN9_Convert
                                    1- 2094     ;   _F_AIN9_Convert
                                    1- 2095     ;4 compiler assigned registers:
                                    1- 2096     ;   r0x1054
                                    1- 2097     ;   r0x1055
                                    1- 2098     ;   r0x1056
                                    1- 2099     ;   r0x1057
                                    1- 2100     ;; Starting pCode block
                                    1- 2101     .segment "code"; module=main, function=_checkLowWater
     0000                           1- 2103     _checkLowWater:
                                    1- 2104     ; 2 exit points
                                    1- 2105     	.line	311, "main.c"; 	R_AIN9_DATA = R_AIN9_DATA_LB = 0x00;
                                    1- 2106     	BANKSEL	_R_AIN9_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 2107     	CLRR	_R_AIN9_DATA_LB
                                    1- 2108     	BANKSEL	_R_AIN9_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 2109     	CLRR	_R_AIN9_DATA
     0004 02rr                      1- 2110     	CLRR	(_R_AIN9_DATA + 1)
                                    1- 2111     	.line	312, "main.c"; 	F_AIN9_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 2112     	MOVIA	0x08
     0006 2rrr                      1- 2113     	LCALL	_F_AIN9_Convert
                                    1- 2114     	.line	313, "main.c"; 	R_AIN9_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 2115     	BANKSEL	_R_AIN9_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 2116     	SWAPR	(_R_AIN9_DATA + 1),W
     0009 22F0                      1- 2117     	ANDIA	0xf0
     000A 00rr                      1- 2118     	MOVAR	(_R_AIN9_DATA + 1)
     000B 15rr                      1- 2119     	SWAPR	_R_AIN9_DATA,W
     000C 00rr                      1- 2120     	MOVAR	_R_AIN9_DATA
     000D 220F                      1- 2121     	ANDIA	0x0f
     000E 11rr                      1- 2122     	IORAR	(_R_AIN9_DATA + 1),F
     000F 12rr                      1- 2123     	XORAR	_R_AIN9_DATA,F
                                    1- 2124     	.line	314, "main.c"; 	R_AIN9_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 2125     	MOVIA	0xf0
                                    1- 2126     	BANKSEL	_R_AIN9_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 2127     	ANDAR	_R_AIN9_DATA_LB,F
                                    1- 2128     	.line	315, "main.c"; 	R_AIN9_DATA += R_AIN9_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 2129     	MOVR	_R_AIN9_DATA_LB,W
                                    1- 2130     	BANKSEL	r0x1056
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 2131     	MOVAR	r0x1056
                                    1- 2132     ;;1	MOVAR	r0x1054
                                    1- 2133     ;;1	CLRR	r0x1055
                                    1- 2134     ;;99	MOVR	r0x1054,W
     0016 2100                      1- 2135     	MOVIA	0x00
                                    1- 2136     	BANKSEL	r0x1057
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 2137     	MOVAR	r0x1057
                                    1- 2138     	BANKSEL	r0x1056
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 2139     	MOVR	r0x1056,W
                                    1- 2140     	BANKSEL	_R_AIN9_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 2141     	ADDAR	_R_AIN9_DATA,F
                                    1- 2142     	BANKSEL	r0x1057
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 2143     	MOVR	r0x1057,W
     001F 0C03                      1- 2144     	BTRSC	STATUS,0
     0020 05rr                      1- 2145     	INCR	r0x1057,W
     0021 0D03                      1- 2146     	BTRSC	STATUS,2
     0022 3rrr                      1- 2147     	LGOTO	_00006_DS_
                                    1- 2148     	BANKSEL	_R_AIN9_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 2149     	ADDAR	(_R_AIN9_DATA + 1),F
     0025                           1- 2150     _00006_DS_:
                                    1- 2151     	.line	316, "main.c"; 	R_AIN9_DATA >>=4;					// 结果再除以2
                                    1- 2152     	BANKSEL	_R_AIN9_DATA
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 15rr                      1- 2153     	SWAPR	_R_AIN9_DATA,W
     0027 220F                      1- 2154     	ANDIA	0x0f
     0028 00rr                      1- 2155     	MOVAR	_R_AIN9_DATA
     0029 15rr                      1- 2156     	SWAPR	(_R_AIN9_DATA + 1),W
     002A 00rr                      1- 2157     	MOVAR	(_R_AIN9_DATA + 1)
     002B 22F0                      1- 2158     	ANDIA	0xf0
     002C 11rr                      1- 2159     	IORAR	_R_AIN9_DATA,F
     002D 12rr                      1- 2160     	XORAR	(_R_AIN9_DATA + 1),F
                                    1- 2161     	.line	318, "main.c"; 	if(R_AIN9_DATA > R_AIN5_DATA)
     002E 01rr                      1- 2162     	MOVR	(_R_AIN9_DATA + 1),W
                                    1- 2163     	BANKSEL	_R_AIN5_DATA
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 04rr                      1- 2164     	SUBAR	(_R_AIN5_DATA + 1),W
     0031 0903                      1- 2165     	BTRSS	STATUS,2
     0032 3rrr                      1- 2166     	LGOTO	_00278_DS_
                                    1- 2167     	BANKSEL	_R_AIN9_DATA
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 2168     	MOVR	_R_AIN9_DATA,W
                                    1- 2169     	BANKSEL	_R_AIN5_DATA
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 04rr                      1- 2170     	SUBAR	_R_AIN5_DATA,W
     0037                           1- 2171     _00278_DS_:
     0037 0C03                      1- 2172     	BTRSC	STATUS,0
     0038 3rrr                      1- 2173     	LGOTO	_00268_DS_
                                    1- 2174     	.line	320, "main.c"; 	if(++lowWaterTime >= 10)
                                    1- 2175     	BANKSEL	_lowWaterTime
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 05rr                      1- 2176     	INCR	_lowWaterTime,F
                                    1- 2177     ;;unsigned compare: left < lit (0xA=10), size=1
     003B 210A                      1- 2178     	MOVIA	0x0a
     003C 04rr                      1- 2179     	SUBAR	_lowWaterTime,W
     003D 0803                      1- 2180     	BTRSS	STATUS,0
     003E 3rrr                      1- 2181     	LGOTO	_00270_DS_
                                    1- 2182     	.line	322, "main.c"; 	workStep = 0;
                                    1- 2183     	BANKSEL	_workStep
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 02rr                      1- 2184     	CLRR	_workStep
                                    1- 2185     	.line	323, "main.c"; 	wateFlag = 0;
                                    1- 2186     	BANKSEL	_wateFlag
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 02rr                      1- 2187     	CLRR	_wateFlag
     0043 3rrr                      1- 2188     	LGOTO	_00270_DS_
     0044                           1- 2189     _00268_DS_:
                                    1- 2190     	.line	328, "main.c"; 	lowWaterTime = 0;
                                    1- 2191     	BANKSEL	_lowWaterTime
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 02rr                      1- 2192     	CLRR	_lowWaterTime
                                    1- 2193     	.line	329, "main.c"; 	wateFlag = 1;
     0046 2101                      1- 2194     	MOVIA	0x01
                                    1- 2195     	BANKSEL	_wateFlag
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 2196     	MOVAR	_wateFlag
     0049                           1- 2197     _00270_DS_:
                                    1- 2198     	.line	331, "main.c"; 	}
                                    1- 2199     	RETURN	
     0049 0010                      3-   26 m1      ret
                                    1- 2200     ; exit point of _checkLowWater
                                    1- 2202     ;***
                                    1- 2203     ;  pBlock Stats: dbName = C
                                    1- 2204     ;***
                                    1- 2205     ;has an exit
                                    1- 2206     ;functions called:
                                    1- 2207     ;   _delay
                                    1- 2208     ;   _delay
                                    1- 2209     ;1 compiler assigned register :
                                    1- 2210     ;   STK00
                                    1- 2211     ;; Starting pCode block
                                    1- 2212     .segment "code"; module=main, function=_initAD
     0000                           1- 2214     _initAD:
                                    1- 2215     ; 2 exit points
                                    1- 2216     	.line	288, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_Quarter_VDD ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 218B                      1- 2217     	MOVIA	0x8b
     0001 00rr                      1- 2218     	MOVAR	_ADMD
                                    1- 2219     	.line	292, "main.c"; 	ADVREFH = C_Vrefh_3V;					// ADC reference high voltage is supplied by internal 3V  (Note: ADC clock freq. must be equal or less than 500KHz)
     0002 2101                      1- 2220     	MOVIA	0x01
     0003 00rr                      1- 2221     	MOVAR	_ADVREFH
                                    1- 2222     	.line	298, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0004 2110                      1- 2223     	MOVIA	0x10
     0005 00rr                      1- 2224     	MOVAR	_ADR
                                    1- 2225     	.line	300, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0006 2103                      1- 2226     	MOVIA	0x03
     0007 00rr                      1- 2227     	MOVAR	_ADCR
                                    1- 2228     	.line	303, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0008 1Arr                      1- 2229     	BSR	_ADMDbits,4
                                    1- 2230     	.line	304, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0009 2164                      1- 2231     	MOVIA	0x64
     000A 00rr                      1- 2232     	MOVAR	STK00
     000B 2100                      1- 2233     	MOVIA	0x00
     000C 2rrr                      1- 2234     	LCALL	_delay
                                    1- 2235     	.line	307, "main.c"; 	}
                                    1- 2236     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1- 2237     ; exit point of _initAD
                                    1- 2239     ;***
                                    1- 2240     ;  pBlock Stats: dbName = C
                                    1- 2241     ;***
                                    1- 2242     ;has an exit
                                    1- 2243     ;functions called:
                                    1- 2244     ;   _keyRead
                                    1- 2245     ;   _keyRead
                                    1- 2246     ;1 compiler assigned register :
                                    1- 2247     ;   r0x1058
                                    1- 2248     ;; Starting pCode block
                                    1- 2249     .segment "code"; module=main, function=_keyCon
     0000                           1- 2251     _keyCon:
                                    1- 2252     ; 2 exit points
                                    1- 2253     	.line	254, "main.c"; 	keyClick = keyRead(0x40&(~PORTA));
     0000 07rr                      1- 2254     	COMR	_PORTA,W
                                    1- 2255     	BANKSEL	r0x1058
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2256     	MOVAR	r0x1058
     0003 2140                      1- 2257     	MOVIA	0x40
     0004 10rr                      1- 2258     	ANDAR	r0x1058,F
     0005 01rr                      1- 2259     	MOVR	r0x1058,W
     0006 2rrr                      1- 2260     	LCALL	_keyRead
                                    1- 2261     	BANKSEL	_keyClick
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 2262     	MOVAR	_keyClick
                                    1- 2263     	.line	256, "main.c"; 	if(keyClick == 1)			//短按
     0009 2401                      1- 2264     	XORIA	0x01
     000A 0903                      1- 2265     	BTRSS	STATUS,2
     000B 3rrr                      1- 2266     	LGOTO	_00254_DS_
                                    1- 2267     	.line	258, "main.c"; 	if(klcikTime > 0)
                                    1- 2268     	BANKSEL	_klcikTime
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 2269     	MOVR	_klcikTime,W
     000E 0D03                      1- 2270     	BTRSC	STATUS,2
     000F 3rrr                      1- 2271     	LGOTO	_00245_DS_
                                    1- 2272     	.line	260, "main.c"; 	douClickFlag = 1;
     0010 2101                      1- 2273     	MOVIA	0x01
                                    1- 2274     	BANKSEL	_douClickFlag
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 2275     	MOVAR	_douClickFlag
     0013                           1- 2276     _00245_DS_:
                                    1- 2277     	.line	262, "main.c"; 	klcikTime = 200;
     0013 21C8                      1- 2278     	MOVIA	0xc8
                                    1- 2279     	BANKSEL	_klcikTime
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 2280     	MOVAR	_klcikTime
     0016 3rrr                      1- 2281     	LGOTO	_00256_DS_
     0017                           1- 2282     _00254_DS_:
                                    1- 2283     	.line	264, "main.c"; 	else if(keyClick == 2)		//长按
                                    1- 2284     	BANKSEL	_keyClick
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1- 2285     	MOVR	_keyClick,W
     0019 2402                      1- 2286     	XORIA	0x02
     001A 0903                      1- 2287     	BTRSS	STATUS,2
     001B 3rrr                      1- 2288     	LGOTO	_00256_DS_
                                    1- 2289     	.line	266, "main.c"; 	if(lvFlag == 0)
                                    1- 2290     	BANKSEL	_lvFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 2291     	MOVR	_lvFlag,W
     001E 0903                      1- 2292     	BTRSS	STATUS,2
     001F 3rrr                      1- 2293     	LGOTO	_00256_DS_
                                    1- 2294     	.line	268, "main.c"; 	if(ledFlag)
                                    1- 2295     	BANKSEL	_ledFlag
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 2296     	MOVR	_ledFlag,W
     0022 0D03                      1- 2297     	BTRSC	STATUS,2
     0023 3rrr                      1- 2298     	LGOTO	_00247_DS_
                                    1- 2299     	.line	270, "main.c"; 	ledFlag = 0;
     0024 02rr                      1- 2300     	CLRR	_ledFlag
                                    1- 2301     	.line	271, "main.c"; 	PORTB &= 0xF9;
     0025 21F9                      1- 2302     	MOVIA	0xf9
     0026 10rr                      1- 2303     	ANDAR	_PORTB,F
                                    1- 2304     	.line	272, "main.c"; 	PORTA &= 0x7F;
     0027 1Frr                      1- 2305     	BCR	_PORTA,7
                                    1- 2306     	.line	273, "main.c"; 	count60s = 0;
                                    1- 2307     	BANKSEL	_count60s
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 2308     	CLRR	_count60s
     002A 02rr                      1- 2309     	CLRR	(_count60s + 1)
     002B 3rrr                      1- 2310     	LGOTO	_00256_DS_
     002C                           1- 2311     _00247_DS_:
                                    1- 2312     	.line	277, "main.c"; 	ledFlag = 1;
     002C 2101                      1- 2313     	MOVIA	0x01
                                    1- 2314     	BANKSEL	_ledFlag
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 2315     	MOVAR	_ledFlag
                                    1- 2316     	.line	278, "main.c"; 	ledAddFlag = 1;
                                    1- 2317     	BANKSEL	_ledAddFlag
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 00rr                      1- 2318     	MOVAR	_ledAddFlag
     0031                           1- 2319     _00256_DS_:
                                    1- 2320     	.line	283, "main.c"; 	}
                                    1- 2321     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 2322     ; exit point of _keyCon
                                    1- 2324     ;***
                                    1- 2325     ;  pBlock Stats: dbName = C
                                    1- 2326     ;***
                                    1- 2327     ;has an exit
                                    1- 2328     ;functions called:
                                    1- 2329     ;   _keyCon
                                    1- 2330     ;   _checkBatAD
                                    1- 2331     ;   _checkLowWater
                                    1- 2332     ;   _gotoSleep
                                    1- 2333     ;   _ledCon
                                    1- 2334     ;   _pwmCtr
                                    1- 2335     ;   _keyCon
                                    1- 2336     ;   _checkBatAD
                                    1- 2337     ;   _checkLowWater
                                    1- 2338     ;   _gotoSleep
                                    1- 2339     ;   _ledCon
                                    1- 2340     ;   _pwmCtr
                                    1- 2341     ;; Starting pCode block
                                    1- 2342     .segment "code"; module=main, function=_workCtr
     0000                           1- 2344     _workCtr:
                                    1- 2345     ; 2 exit points
                                    1- 2346     	.line	214, "main.c"; 	if(++count10ms >=2)
                                    1- 2347     	BANKSEL	_count10ms
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 2348     	INCR	_count10ms,F
                                    1- 2349     ;;unsigned compare: left < lit (0x2=2), size=1
     0002 2102                      1- 2350     	MOVIA	0x02
     0003 04rr                      1- 2351     	SUBAR	_count10ms,W
     0004 0803                      1- 2352     	BTRSS	STATUS,0
     0005 3rrr                      1- 2353     	LGOTO	_00205_DS_
                                    1- 2354     	.line	216, "main.c"; 	count10ms = 0;
     0006 02rr                      1- 2355     	CLRR	_count10ms
                                    1- 2356     	.line	217, "main.c"; 	keyCon();
     0007 2rrr                      1- 2357     	LCALL	_keyCon
                                    1- 2358     	.line	218, "main.c"; 	if(++count1s >= 100)
                                    1- 2359     	BANKSEL	_count1s
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 05rr                      1- 2360     	INCR	_count1s,F
                                    1- 2361     ;;unsigned compare: left < lit (0x64=100), size=1
     000A 2164                      1- 2362     	MOVIA	0x64
     000B 04rr                      1- 2363     	SUBAR	_count1s,W
     000C 0C03                      1- 2364     	BTRSC	STATUS,0
                                    1- 2365     	.line	220, "main.c"; 	count1s = 0;
     000D 02rr                      1- 2366     	CLRR	_count1s
                                    1- 2367     	.line	222, "main.c"; 	if(count1s < 50)
     000E 2132                      1- 2368     	MOVIA	0x32
     000F 04rr                      1- 2369     	SUBAR	_count1s,W
     0010 0C03                      1- 2370     	BTRSC	STATUS,0
     0011 3rrr                      1- 2371     	LGOTO	_00191_DS_
                                    1- 2372     	.line	223, "main.c"; 	checkBatAD();
     0012 2rrr                      1- 2373     	LCALL	_checkBatAD
     0013 3rrr                      1- 2374     	LGOTO	_00192_DS_
     0014                           1- 2375     _00191_DS_:
                                    1- 2376     	.line	225, "main.c"; 	checkLowWater();
     0014 2rrr                      1- 2377     	LCALL	_checkLowWater
     0015                           1- 2378     _00192_DS_:
                                    1- 2379     	.line	226, "main.c"; 	if(keyCount == 0 && ledFlag == 0 && workStep == 0 )
                                    1- 2380     	BANKSEL	_keyCount
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2381     	MOVR	_keyCount,W
     0017 0903                      1- 2382     	BTRSS	STATUS,2
     0018 3rrr                      1- 2383     	LGOTO	_00198_DS_
                                    1- 2384     	BANKSEL	_ledFlag
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 2385     	MOVR	_ledFlag,W
     001B 0903                      1- 2386     	BTRSS	STATUS,2
     001C 3rrr                      1- 2387     	LGOTO	_00198_DS_
                                    1- 2388     	BANKSEL	_workStep
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 2389     	MOVR	_workStep,W
     001F 0903                      1- 2390     	BTRSS	STATUS,2
     0020 3rrr                      1- 2391     	LGOTO	_00198_DS_
                                    1- 2392     	.line	228, "main.c"; 	if(++count300s > 30000){
                                    1- 2393     	BANKSEL	_count300s
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 05rr                      1- 2394     	INCR	_count300s,F
     0023 0D03                      1- 2395     	BTRSC	STATUS,2
     0024 05rr                      1- 2396     	INCR	(_count300s + 1),F
                                    1- 2397     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2398     ;;unsigned compare: left >= lit (0x7531=30001), size=2
     0025 2175                      1- 2399     	MOVIA	0x75
     0026 04rr                      1- 2400     	SUBAR	(_count300s + 1),W
     0027 0903                      1- 2401     	BTRSS	STATUS,2
     0028 3rrr                      1- 2402     	LGOTO	_00238_DS_
     0029 2131                      1- 2403     	MOVIA	0x31
     002A 04rr                      1- 2404     	SUBAR	_count300s,W
     002B                           1- 2405     _00238_DS_:
     002B 0803                      1- 2406     	BTRSS	STATUS,0
     002C 3rrr                      1- 2407     	LGOTO	_00199_DS_
                                    1- 2408     	.line	229, "main.c"; 	count300s = 0;
                                    1- 2409     	BANKSEL	_count300s
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 02rr                      1- 2410     	CLRR	_count300s
     002F 02rr                      1- 2411     	CLRR	(_count300s + 1)
                                    1- 2412     	.line	230, "main.c"; 	gotoSleep();
     0030 2rrr                      1- 2413     	LCALL	_gotoSleep
     0031 3rrr                      1- 2414     	LGOTO	_00199_DS_
     0032                           1- 2415     _00198_DS_:
                                    1- 2416     	.line	235, "main.c"; 	if(++count300s >= 30000){
                                    1- 2417     	BANKSEL	_count300s
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 05rr                      1- 2418     	INCR	_count300s,F
     0034 0D03                      1- 2419     	BTRSC	STATUS,2
     0035 05rr                      1- 2420     	INCR	(_count300s + 1),F
                                    1- 2421     ;;unsigned compare: left < lit (0x7530=30000), size=2
     0036 2175                      1- 2422     	MOVIA	0x75
     0037 04rr                      1- 2423     	SUBAR	(_count300s + 1),W
     0038 0903                      1- 2424     	BTRSS	STATUS,2
     0039 3rrr                      1- 2425     	LGOTO	_00239_DS_
     003A 2130                      1- 2426     	MOVIA	0x30
     003B 04rr                      1- 2427     	SUBAR	_count300s,W
     003C                           1- 2428     _00239_DS_:
     003C 0803                      1- 2429     	BTRSS	STATUS,0
     003D 3rrr                      1- 2430     	LGOTO	_00199_DS_
                                    1- 2431     	.line	236, "main.c"; 	count300s = 30000;
     003E 2130                      1- 2432     	MOVIA	0x30
                                    1- 2433     	BANKSEL	_count300s
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 00rr                      1- 2434     	MOVAR	_count300s
     0041 2175                      1- 2435     	MOVIA	0x75
     0042 00rr                      1- 2436     	MOVAR	(_count300s + 1)
     0043                           1- 2437     _00199_DS_:
                                    1- 2438     	.line	239, "main.c"; 	if(ledAddFlag)
                                    1- 2439     	BANKSEL	_ledAddFlag
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 01rr                      1- 2440     	MOVR	_ledAddFlag,W
     0045 0903                      1- 2441     	BTRSS	STATUS,2
                                    1- 2442     	.line	241, "main.c"; 	ledCon();
     0046 2rrr                      1- 2443     	LCALL	_ledCon
     0047                           1- 2444     _00205_DS_:
                                    1- 2445     	.line	247, "main.c"; 	pwmCtr();
     0047 2rrr                      1- 2446     	LCALL	_pwmCtr
                                    1- 2447     	.line	249, "main.c"; 	}
                                    1- 2448     	RETURN	
     0048 0010                      3-   26 m1      ret
                                    1- 2449     ; exit point of _workCtr
                                    1- 2451     ;***
                                    1- 2452     ;  pBlock Stats: dbName = C
                                    1- 2453     ;***
                                    1- 2454     ;has an exit
                                    1- 2455     ;functions called:
                                    1- 2456     ;   _setInput
                                    1- 2457     ;   _showBaiwei
                                    1- 2458     ;   __gptrget1
                                    1- 2459     ;   _showNubShiwei
                                    1- 2460     ;   __gptrget1
                                    1- 2461     ;   _showNubShiwei
                                    1- 2462     ;   __gptrget1
                                    1- 2463     ;   _showNubGewei
                                    1- 2464     ;   _setInput
                                    1- 2465     ;   _showBaiwei
                                    1- 2466     ;   __gptrget1
                                    1- 2467     ;   _showNubShiwei
                                    1- 2468     ;   __gptrget1
                                    1- 2469     ;   _showNubShiwei
                                    1- 2470     ;   __gptrget1
                                    1- 2471     ;   _showNubGewei
                                    1- 2472     ;5 compiler assigned registers:
                                    1- 2473     ;   r0x1059
                                    1- 2474     ;   r0x105A
                                    1- 2475     ;   STK01
                                    1- 2476     ;   STK00
                                    1- 2477     ;   r0x105B
                                    1- 2478     ;; Starting pCode block
                                    1- 2479     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2481     _refreshNub:
                                    1- 2482     ; 2 exit points
                                    1- 2483     ;;unsigned compare: left < lit (0x7530=30000), size=2
                                    1- 2484     	.line	144, "main.c"; 	if(count300s >= 30000)
     0000 2175                      1- 2485     	MOVIA	0x75
                                    1- 2486     	BANKSEL	_count300s
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 2487     	SUBAR	(_count300s + 1),W
     0003 0903                      1- 2488     	BTRSS	STATUS,2
     0004 3rrr                      1- 2489     	LGOTO	_00174_DS_
     0005 2130                      1- 2490     	MOVIA	0x30
     0006 04rr                      1- 2491     	SUBAR	_count300s,W
     0007                           1- 2492     _00174_DS_:
     0007 0803                      1- 2493     	BTRSS	STATUS,0
     0008 3rrr                      1- 2494     	LGOTO	_00136_DS_
                                    1- 2495     	.line	146, "main.c"; 	setInput();
     0009 2rrr                      1- 2496     	LCALL	_setInput
                                    1- 2497     	.line	147, "main.c"; 	return;
     000A 3rrr                      1- 2498     	LGOTO	_00151_DS_
     000B                           1- 2499     _00136_DS_:
                                    1- 2500     	.line	149, "main.c"; 	if(tempshiweiNum != shiweiNum || tempgeweiNum != geweiNum || tempbaiweiNum!= baiweiNum)
                                    1- 2501     	BANKSEL	_shiweiNum
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 2502     	MOVR	_shiweiNum,W
                                    1- 2503     	BANKSEL	_tempshiweiNum
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 12rr                      1- 2504     	XORAR	_tempshiweiNum,W
     000F 0903                      1- 2505     	BTRSS	STATUS,2
     0010 3rrr                      1- 2506     	LGOTO	_00139_DS_
                                    1- 2507     	BANKSEL	_geweiNum
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2508     	MOVR	_geweiNum,W
                                    1- 2509     	BANKSEL	_tempgeweiNum
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 12rr                      1- 2510     	XORAR	_tempgeweiNum,W
     0015 0903                      1- 2511     	BTRSS	STATUS,2
     0016 3rrr                      1- 2512     	LGOTO	_00139_DS_
                                    1- 2513     	BANKSEL	_baiweiNum
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1- 2514     	MOVR	_baiweiNum,W
                                    1- 2515     	BANKSEL	_tempbaiweiNum
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 12rr                      1- 2516     	XORAR	_tempbaiweiNum,W
     001B 0D03                      1- 2517     	BTRSC	STATUS,2
     001C 3rrr                      1- 2518     	LGOTO	_00140_DS_
     001D                           1- 2519     _00139_DS_:
                                    1- 2520     	.line	151, "main.c"; 	if(++refreshCount >= 200)
                                    1- 2521     	BANKSEL	_refreshCount
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 05rr                      1- 2522     	INCR	_refreshCount,F
     001F 21C8                      1- 2523     	MOVIA	0xc8
     0020 04rr                      1- 2524     	SUBAR	_refreshCount,W
     0021 0803                      1- 2525     	BTRSS	STATUS,0
     0022 3rrr                      1- 2526     	LGOTO	_00141_DS_
                                    1- 2527     	.line	153, "main.c"; 	refreshCount = 0;
     0023 02rr                      1- 2528     	CLRR	_refreshCount
                                    1- 2529     	.line	154, "main.c"; 	tempbaiweiNum = baiweiNum;
                                    1- 2530     	BANKSEL	_baiweiNum
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 2531     	MOVR	_baiweiNum,W
                                    1- 2532     	BANKSEL	_tempbaiweiNum
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1- 2533     	MOVAR	_tempbaiweiNum
                                    1- 2534     	.line	155, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2535     	BANKSEL	_shiweiNum
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1- 2536     	MOVR	_shiweiNum,W
                                    1- 2537     	BANKSEL	_tempshiweiNum
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 00rr                      1- 2538     	MOVAR	_tempshiweiNum
                                    1- 2539     	.line	156, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2540     	BANKSEL	_geweiNum
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1- 2541     	MOVR	_geweiNum,W
                                    1- 2542     	BANKSEL	_tempgeweiNum
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1- 2543     	MOVAR	_tempgeweiNum
     0030 3rrr                      1- 2544     	LGOTO	_00141_DS_
     0031                           1- 2545     _00140_DS_:
                                    1- 2546     	.line	161, "main.c"; 	refreshCount = 0;
                                    1- 2547     	BANKSEL	_refreshCount
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 02rr                      1- 2548     	CLRR	_refreshCount
     0033                           1- 2549     _00141_DS_:
                                    1- 2550     	.line	164, "main.c"; 	if(tempbaiweiNum)
                                    1- 2551     	BANKSEL	_tempbaiweiNum
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 2552     	MOVR	_tempbaiweiNum,W
     0035 0903                      1- 2553     	BTRSS	STATUS,2
                                    1- 2554     	.line	165, "main.c"; 	showBaiwei();
     0036 2rrr                      1- 2555     	LCALL	_showBaiwei
                                    1- 2556     	.line	166, "main.c"; 	if(tempbaiweiNum)
                                    1- 2557     	BANKSEL	_tempbaiweiNum
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1- 2558     	MOVR	_tempbaiweiNum,W
     0039 0D03                      1- 2559     	BTRSC	STATUS,2
     003A 3rrr                      1- 2560     	LGOTO	_00149_DS_
                                    1- 2561     	.line	167, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2562     	BANKSEL	_tempshiweiNum
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 01rr                      1- 2563     	MOVR	_tempshiweiNum,W
     003D 25rr                      1- 2564     	ADDIA	(_numArray + 0)
                                    1- 2565     	BANKSEL	r0x1059
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 00rr                      1- 2566     	MOVAR	r0x1059
     0040 21rr                      1- 2567     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0041 0C03                      1- 2568     	BTRSC	STATUS,0
     0042 2501                      1- 2569     	ADDIA	0x01
                                    1- 2570     	BANKSEL	r0x105A
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 00rr                      1- 2571     	MOVAR	r0x105A
                                    1- 2572     	BANKSEL	r0x1059
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1- 2573     	MOVR	r0x1059,W
     0047 00rr                      1- 2574     	MOVAR	STK01
                                    1- 2575     	BANKSEL	r0x105A
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 01rr                      1- 2576     	MOVR	r0x105A,W
     004A 00rr                      1- 2577     	MOVAR	STK00
     004B 2100                      1- 2578     	MOVIA	0x00
     004C 2rrr                      1- 2579     	LCALL	__gptrget1
                                    1- 2580     ;;110	MOVAR	r0x105B
     004D 2rrr                      1- 2581     	LCALL	_showNubShiwei
     004E 3rrr                      1- 2582     	LGOTO	_00150_DS_
     004F                           1- 2583     _00149_DS_:
                                    1- 2584     	.line	168, "main.c"; 	else if(tempshiweiNum)
                                    1- 2585     	BANKSEL	_tempshiweiNum
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 2586     	MOVR	_tempshiweiNum,W
     0051 0D03                      1- 2587     	BTRSC	STATUS,2
     0052 3rrr                      1- 2588     	LGOTO	_00150_DS_
                                    1- 2589     	.line	169, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
     0053 01rr                      1- 2590     	MOVR	_tempshiweiNum,W
     0054 25rr                      1- 2591     	ADDIA	(_numArray + 0)
                                    1- 2592     	BANKSEL	r0x1059
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 00rr                      1- 2593     	MOVAR	r0x1059
     0057 21rr                      1- 2594     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0058 0C03                      1- 2595     	BTRSC	STATUS,0
     0059 2501                      1- 2596     	ADDIA	0x01
                                    1- 2597     	BANKSEL	r0x105A
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1- 2598     	MOVAR	r0x105A
                                    1- 2599     	BANKSEL	r0x1059
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 2600     	MOVR	r0x1059,W
     005E 00rr                      1- 2601     	MOVAR	STK01
                                    1- 2602     	BANKSEL	r0x105A
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 01rr                      1- 2603     	MOVR	r0x105A,W
     0061 00rr                      1- 2604     	MOVAR	STK00
     0062 2100                      1- 2605     	MOVIA	0x00
     0063 2rrr                      1- 2606     	LCALL	__gptrget1
                                    1- 2607     ;;109	MOVAR	r0x105B
     0064 2rrr                      1- 2608     	LCALL	_showNubShiwei
     0065                           1- 2609     _00150_DS_:
                                    1- 2610     	.line	170, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2611     	BANKSEL	_tempgeweiNum
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 01rr                      1- 2612     	MOVR	_tempgeweiNum,W
     0067 25rr                      1- 2613     	ADDIA	(_numArray + 0)
                                    1- 2614     	BANKSEL	r0x1059
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 00rr                      1- 2615     	MOVAR	r0x1059
     006A 21rr                      1- 2616     	MOVIA	((_numArray + 0) >> 8) & 0xff
     006B 0C03                      1- 2617     	BTRSC	STATUS,0
     006C 2501                      1- 2618     	ADDIA	0x01
                                    1- 2619     	BANKSEL	r0x105A
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 00rr                      1- 2620     	MOVAR	r0x105A
                                    1- 2621     	BANKSEL	r0x1059
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 01rr                      1- 2622     	MOVR	r0x1059,W
     0071 00rr                      1- 2623     	MOVAR	STK01
                                    1- 2624     	BANKSEL	r0x105A
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 01rr                      1- 2625     	MOVR	r0x105A,W
     0074 00rr                      1- 2626     	MOVAR	STK00
     0075 2100                      1- 2627     	MOVIA	0x00
     0076 2rrr                      1- 2628     	LCALL	__gptrget1
                                    1- 2629     ;;2	MOVAR	r0x105B
     0077 2rrr                      1- 2630     	LCALL	_showNubGewei
     0078                           1- 2631     _00151_DS_:
                                    1- 2632     	.line	171, "main.c"; 	}
                                    1- 2633     	RETURN	
     0078 0010                      3-   26 m1      ret
                                    1- 2634     ; exit point of _refreshNub
                                    1- 2637     ;	code size estimation:
                                    1- 2638     ;	  955+  253 =  1208 instructions ( 2922 byte)
                                    1- 2640     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuint               Label    00000000
__gptrget1              Label    00000000
__moduint               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    0000002E
_00003_DS_              Label    0000002E
_00004_DS_              Label    00000031
_00005_DS_              Label    0000007C
_00006_DS_              Label    00000025
_00106_DS_              Label    0000002B
_00108_DS_              Label    00000049
_00117_DS_              Label    0000004D
_00118_DS_              Label    00000057
_00126_DS_              Label    00000059
_00128_DS_              Label    0000005C
_00130_DS_              Label    00000060
_00136_DS_              Label    0000000B
_00139_DS_              Label    0000001D
_00140_DS_              Label    00000031
_00141_DS_              Label    00000033
_00149_DS_              Label    0000004F
_00150_DS_              Label    00000065
_00151_DS_              Label    00000078
_00174_DS_              Label    00000007
_00183_DS_              Label    0000001B
_00191_DS_              Label    00000014
_00192_DS_              Label    00000015
_00198_DS_              Label    00000032
_00199_DS_              Label    00000043
_00205_DS_              Label    00000047
_00238_DS_              Label    0000002B
_00239_DS_              Label    0000003C
_00245_DS_              Label    00000013
_00247_DS_              Label    0000002C
_00254_DS_              Label    00000017
_00256_DS_              Label    00000031
_00268_DS_              Label    00000044
_00270_DS_              Label    00000049
_00278_DS_              Label    00000037
_00284_DS_              Label    0000000A
_00287_DS_              Label    0000006A
_00290_DS_              Label    00000057
_00292_DS_              Label    000000AB
_00307_DS_              Label    00000041
_00308_DS_              Label    0000005E
_00315_DS_              Label    00000010
_00317_DS_              Label    00000031
_00324_DS_              Label    00000010
_00326_DS_              Label    00000031
_00336_DS_              Label    00000022
_00342_DS_              Label    00000025
_00345_DS_              Label    0000000D
_00347_DS_              Label    00000029
_00353_DS_              Label    0000000F
_00354_DS_              Label    00000013
_00363_DS_              Label    0000000F
_00364_DS_              Label    00000013
_00374_DS_              Label    0000000E
_00386_DS_              Label    000000D3
_00389_DS_              Label    000000C7
_00392_DS_              Label    000000BA
_00395_DS_              Label    000000AE
_00398_DS_              Label    000000A2
_00401_DS_              Label    00000096
_00404_DS_              Label    00000089
_00407_DS_              Label    0000007B
_00410_DS_              Label    0000006F
_00413_DS_              Label    00000062
_00416_DS_              Label    00000053
_00419_DS_              Label    00000047
_00422_DS_              Label    00000038
_00425_DS_              Label    0000002A
_00428_DS_              Label    0000001E
_00431_DS_              Label    000000E1
_00434_DS_              Label    000000EF
_00490_DS_              Label    00000013
_00491_DS_              Label    00000025
_00492_DS_              Label    00000031
_00493_DS_              Label    0000003F
_00494_DS_              Label    0000004E
_00495_DS_              Label    0000005A
_00496_DS_              Label    00000069
_00497_DS_              Label    00000076
_00498_DS_              Label    00000082
_00499_DS_              Label    00000090
_00500_DS_              Label    0000009D
_00501_DS_              Label    000000A9
_00502_DS_              Label    000000B5
_00503_DS_              Label    000000C1
_00504_DS_              Label    000000CE
_00505_DS_              Label    000000DA
_00517_DS_              Label    00000022
_00518_DS_              Label    0000002D
_00520_DS_              Label    00000018
_00521_DS_              Label    0000002F
_00522_DS_              Label    00000030
_00531_DS_              Label    00000000
_00538_DS_              Label    00000009
_00540_DS_              Label    0000001C
_00549_DS_              Label    00000013
_A2                     Label    00000000
_A3                     Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_B1                     Label    00000000
_B2                     Label    00000000
_B3                     Label    00000000
_baiweiNum              Label    00000000
_BDUTY                  Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_C1                     Label    00000000
_C2                     Label    00000000
_C3                     Label    00000000
_checkBatAD             Label    00000000
_checkLowWater          Label    00000000
_CMPCR                  Label    00000000
_count10ms              Label    00000000
_count1s                Label    00000000
_count300s              Label    00000000
_count500ms             Label    00000000
_count60s               Label    00000000
_D2                     Label    00000000
_D3                     Label    00000000
_delay                  Label    00000000
_delayms                Label    00000000
_douClickFlag           Label    00000000
_E2                     Label    00000000
_E3                     Label    00000000
_F_AIN5_Convert         Label    00000000
_F_AIN9_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_F2                     Label    00000000
_F3                     Label    00000000
_FSR                    Label    00000000
_G2                     Label    00000000
_G3                     Label    00000000
_GDUTY                  Label    00000000
_geweiNum               Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCon                 Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_klcikTime              Label    00000000
_ledAddFlag             Label    00000000
_ledCon                 Label    00000000
_ledCount               Label    00000000
_ledFlag                Label    00000000
_longPressFlag          Label    00000000
_lowPowerTime           Label    00000000
_lowWaterTime           Label    00000000
_lvdTime                Label    00000000
_lvFlag                 Label    00000000
_main                   Label    00000000
_nbat                   Label    00000000
_numArray               Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmCtr                 Label    00000000
_pwmStart               Label    00000000
_pwmStop                Label    00000000
_R_AIN5_DATA            Label    00000000
_R_AIN5_DATA_LB         Label    00000000
_R_AIN9_DATA            Label    00000000
_R_AIN9_DATA_LB         Label    00000000
_RDUTY                  Label    00000000
_refreshCount           Label    00000000
_refreshNub             Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_setHightOutput         Label    00000000
_setInput               Label    00000000
_setlowOutput           Label    00000000
_setOutput              Label    00000000
_setPWMduty             Label    00000000
_setPWMdutyG            Label    00000000
_shiweiNum              Label    00000000
_showBaiwei             Label    00000000
_showNub                Label    00000000
_showNubGewei           Label    00000000
_showNubGewei2          Label    00000000
_showNubShiwei          Label    00000000
_showNubShiwei2         Label    00000000
_sleepDelay             Label    00000000
_STATUS                 Label    00000000
_step2Count             Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempbaiweiNum          Label    00000000
_tempgeweiNum           Label    00000000
_tempshiweiNum          Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_wateFlag               Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000071
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
r0x103F                 Label    00000000
r0x1040                 Label    00000000
r0x1041                 Label    00000000
r0x1042                 Label    00000000
r0x1043                 Label    00000000
r0x1044                 Label    00000000
r0x1045                 Label    00000000
r0x1046                 Label    00000000
r0x1049                 Label    00000000
r0x104A                 Label    00000000
r0x104B                 Label    00000000
r0x104C                 Label    00000000
r0x104F                 Label    00000000
r0x1050                 Label    00000000
r0x1051                 Label    00000000
r0x1053                 Label    00000000
r0x1056                 Label    00000000
r0x1057                 Label    00000000
r0x1058                 Label    00000000
r0x1059                 Label    00000000
r0x105A                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
