
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showBaiwei
                                    1-   24     	extern	_B1
                                    1-   25     	extern	_C1
                                    1-   26     	extern	_A2
                                    1-   27     	extern	_B2
                                    1-   28     	extern	_C2
                                    1-   29     	extern	_D2
                                    1-   30     	extern	_E2
                                    1-   31     	extern	_F2
                                    1-   32     	extern	_G2
                                    1-   33     	extern	_A3
                                    1-   34     	extern	_B3
                                    1-   35     	extern	_C3
                                    1-   36     	extern	_D3
                                    1-   37     	extern	_E3
                                    1-   38     	extern	_F3
                                    1-   39     	extern	_G3
                                    1-   40     	extern	_delayms
                                    1-   41     	extern	__divuint
                                    1-   42     	extern	__divuchar
                                    1-   43     	extern	__moduchar
                                    1-   44     	extern	__moduint
                                    1-   45     	extern	_PORTAbits
                                    1-   46     	extern	_PORTBbits
                                    1-   47     	extern	_PCONbits
                                    1-   48     	extern	_BWUCONbits
                                    1-   49     	extern	_ABPLCONbits
                                    1-   50     	extern	_BPHCONbits
                                    1-   51     	extern	_INTEbits
                                    1-   52     	extern	_INTFbits
                                    1-   53     	extern	_ADMDbits
                                    1-   54     	extern	_ADRbits
                                    1-   55     	extern	_ADVREFHbits
                                    1-   56     	extern	_ADCRbits
                                    1-   57     	extern	_AWUCONbits
                                    1-   58     	extern	_PACONbits
                                    1-   59     	extern	_INTEDGbits
                                    1-   60     	extern	_ANAENbits
                                    1-   61     	extern	_RFCbits
                                    1-   62     	extern	_INTE2bits
                                    1-   63     	extern	_INDF
                                    1-   64     	extern	_TMR0
                                    1-   65     	extern	_PCL
                                    1-   66     	extern	_STATUS
                                    1-   67     	extern	_FSR
                                    1-   68     	extern	_PORTA
                                    1-   69     	extern	_PORTB
                                    1-   70     	extern	_PCON
                                    1-   71     	extern	_BWUCON
                                    1-   72     	extern	_PCHBUF
                                    1-   73     	extern	_ABPLCON
                                    1-   74     	extern	_BPHCON
                                    1-   75     	extern	_INTE
                                    1-   76     	extern	_INTF
                                    1-   77     	extern	_ADMD
                                    1-   78     	extern	_ADR
                                    1-   79     	extern	_ADD
                                    1-   80     	extern	_ADVREFH
                                    1-   81     	extern	_ADCR
                                    1-   82     	extern	_AWUCON
                                    1-   83     	extern	_PACON
                                    1-   84     	extern	_INTEDG
                                    1-   85     	extern	_TMRH
                                    1-   86     	extern	_ANAEN
                                    1-   87     	extern	_RFC
                                    1-   88     	extern	_TM3RH
                                    1-   89     	extern	_INTE2
                                    1-   90     	extern	_TMR1
                                    1-   91     	extern	_T1CR1
                                    1-   92     	extern	_T1CR2
                                    1-   93     	extern	_PWM1DUTY
                                    1-   94     	extern	_PS1CV
                                    1-   95     	extern	_BZ1CR
                                    1-   96     	extern	_IRCR
                                    1-   97     	extern	_TBHP
                                    1-   98     	extern	_TBHD
                                    1-   99     	extern	_TMR2
                                    1-  100     	extern	_T2CR1
                                    1-  101     	extern	_T2CR2
                                    1-  102     	extern	_PWM2DUTY
                                    1-  103     	extern	_PS2CV
                                    1-  104     	extern	_BZ2CR
                                    1-  105     	extern	_OSCCR
                                    1-  106     	extern	_TMR3
                                    1-  107     	extern	_T3CR1
                                    1-  108     	extern	_T3CR2
                                    1-  109     	extern	_PWM3DUTY
                                    1-  110     	extern	_PS3CV
                                    1-  111     	extern	_BZ3CR
                                    1-  112     	extern	_IOSTA
                                    1-  113     	extern	_IOSTB
                                    1-  114     	extern	_APHCON
                                    1-  115     	extern	_PS0CV
                                    1-  116     	extern	_BODCON
                                    1-  117     	extern	_CMPCR
                                    1-  118     	extern	_PCON1
                                    1-  119     	extern	_T0MD
                                    1-  120     	extern	___sdcc_saved_fsr
                                    1-  121     	extern	___sdcc_saved_stk00
                                    1-  122     	extern	___sdcc_saved_stk01
                                    1-  123     	extern	__gptrget1
                                    1-  124     	extern	__nyc_ny8_startup
                                    1-  125     ;--------------------------------------------------------
                                    1-  126     ; global declarations
                                    1-  127     ;--------------------------------------------------------
                                    1-  128     	extern	_delay
                                    1-  129     	extern	_F_wait_eoc
                                    1-  130     	extern	_gotoSleep
                                    1-  131     	extern	_keyRead
                                    1-  132     	extern	_ledCon
                                    1-  133     	extern	_pwmStop
                                    1-  134     	extern	_pwmStart
                                    1-  135     	extern	_setPWMdutyG
                                    1-  136     	extern	_setPWMduty
                                    1-  137     	extern	_pwmCtr
                                    1-  138     	extern	_F_AIN9_Convert
                                    1-  139     	extern	_F_AIN5_Convert
                                    1-  140     	extern	_checkBatAD
                                    1-  141     	extern	_checkLowWater
                                    1-  142     	extern	_keyCon
                                    1-  143     	extern	_workCtr
                                    1-  144     	extern	_refreshNub
                                    1-  145     	extern	_isr
                                    1-  146     	extern	_main
                                    1-  147     	extern	_initAD
                                    1-  148     	extern	_intCount
                                    1-  149     	extern	_IntFlag
                                    1-  150     	extern	_workStep
                                    1-  151     	extern	_ledCount
                                    1-  152     	extern	_sleepDelay
                                    1-  153     	extern	_step2Count
                                    1-  154     	extern	_longPressFlag
                                    1-  155     	extern	_count500ms
                                    1-  156     	extern	_count10ms
                                    1-  157     	extern	_count1s
                                    1-  158     	extern	_tempbaiweiNum
                                    1-  159     	extern	_tempshiweiNum
                                    1-  160     	extern	_tempgeweiNum
                                    1-  161     	extern	_refreshCount
                                    1-  162     	extern	_baiweiNum
                                    1-  163     	extern	_shiweiNum
                                    1-  164     	extern	_geweiNum
                                    1-  165     	extern	_klcikTime
                                    1-  166     	extern	_count300s
                                    1-  167     	extern	_count60s
                                    1-  168     	extern	_RDUTY
                                    1-  169     	extern	_GDUTY
                                    1-  170     	extern	_BDUTY
                                    1-  171     	extern	_ledFlag
                                    1-  172     	extern	_ledAddFlag
                                    1-  173     	extern	_keyCount
                                    1-  174     	extern	_keyClick
                                    1-  175     	extern	_douClickFlag
                                    1-  176     	extern	_R_AIN5_DATA
                                    1-  177     	extern	_R_AIN5_DATA_LB
                                    1-  178     	extern	_R_AIN9_DATA
                                    1-  179     	extern	_R_AIN9_DATA_LB
                                    1-  180     	extern	_sumR_AIN5_DATA
                                    1-  181     	extern	_addtime
                                    1-  182     	extern	_lowWaterTime
                                    1-  183     	extern	_numArray
                                    1-  185     	extern PSAVE
                                    1-  186     	extern SSAVE
                                    1-  187     	extern WSAVE
                                    1-  188     	extern STK06
                                    1-  189     	extern STK05
                                    1-  190     	extern STK04
                                    1-  191     	extern STK03
                                    1-  192     	extern STK02
                                    1-  193     	extern STK01
                                    1-  194     	extern STK00
                                    1-  196     .segment "uninit", 0x20000040
 20000040                           1-  197     PSAVE:
                                    1-  198     	.res 1
 20000041                           1-  199     SSAVE:
                                    1-  200     	.res 1
 20000042                           1-  201     WSAVE:
                                    1-  202     	.res 1
 20000043                           1-  203     STK06:
                                    1-  204     	.res 1
 20000044                           1-  205     STK05:
                                    1-  206     	.res 1
 20000045                           1-  207     STK04:
                                    1-  208     	.res 1
 20000046                           1-  209     STK03:
                                    1-  210     	.res 1
 20000047                           1-  211     STK02:
                                    1-  212     	.res 1
 20000048                           1-  213     STK01:
                                    1-  214     	.res 1
 20000049                           1-  215     STK00:
                                    1-  216     	.res 1
                                    1-  218     ;--------------------------------------------------------
                                    1-  219     ; global definitions
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     .segment "uninit"
     0000                           1-  222     _R_AIN5_DATA:
                                    1-  223     	.res	2
                                    1-  226     .segment "uninit"
     0000                           1-  227     _R_AIN5_DATA_LB:
                                    1-  228     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     _R_AIN9_DATA:
                                    1-  233     	.res	2
                                    1-  236     .segment "uninit"
     0000                           1-  237     _R_AIN9_DATA_LB:
                                    1-  238     	.res	1
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     ; absolute symbol definitions
                                    1-  243     ;--------------------------------------------------------
                                    1-  244     ;--------------------------------------------------------
                                    1-  245     ; compiler-defined variables
                                    1-  246     ;--------------------------------------------------------
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1057:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1058:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x1059:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x1056:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x1050:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1051:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x1052:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1053:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x1054:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1055:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1048:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1049:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x104A:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x104D:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x1042:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x1043:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x1044:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x1047:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x1040:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x1041:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x103E:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x103F:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x103D:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x103A:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x1037:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x1036:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1038:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x1039:
                                    1-  330     	.res	1
                                    1-  331     ;--------------------------------------------------------
                                    1-  332     ; initialized data
                                    1-  333     ;--------------------------------------------------------
                                    1-  335     .segment "idata"
     0000                           1-  336     _intCount:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _IntFlag:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _workStep:
     0000 0000                      1-  349     	dw	0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _ledCount:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _sleepDelay:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _step2Count:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _longPressFlag:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _count500ms:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _count10ms:
     0000 0000                      1-  385     	dw	0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _count1s:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _tempbaiweiNum:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _tempshiweiNum:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _tempgeweiNum:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _refreshCount:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _baiweiNum:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _shiweiNum:
     0000 0000                      1-  427     	dw	0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _geweiNum:
     0000 0000                      1-  433     	dw	0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _klcikTime:
     0000 0000 0000                 1-  439     	dw	0x00, 0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _count300s:
     0000 0000 0000                 1-  445     	dw	0x00, 0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _count60s:
     0000 0000 0000                 1-  451     	dw	0x00, 0x00
                                    1-  455     .segment "idata"
     0000                           1-  456     _RDUTY:
     0000 0000                      1-  457     	dw	0x00
                                    1-  461     .segment "idata"
     0000                           1-  462     _GDUTY:
     0000 0000                      1-  463     	dw	0x00
                                    1-  467     .segment "idata"
     0000                           1-  468     _BDUTY:
     0000 0000                      1-  469     	dw	0x00
                                    1-  473     .segment "idata"
     0000                           1-  474     _ledFlag:
     0000 0000                      1-  475     	dw	0x00
                                    1-  479     .segment "idata"
     0000                           1-  480     _ledAddFlag:
     0000 0000                      1-  481     	dw	0x00
                                    1-  485     .segment "idata"
     0000                           1-  486     _keyCount:
     0000 0000                      1-  487     	dw	0x00
                                    1-  491     .segment "idata"
     0000                           1-  492     _keyClick:
     0000 0000                      1-  493     	dw	0x00
                                    1-  497     .segment "idata"
     0000                           1-  498     _douClickFlag:
     0000 0000                      1-  499     	dw	0x00
                                    1-  503     .segment "idata"
     0000                           1-  504     _sumR_AIN5_DATA:
     0000 0000 0000                 1-  505     	dw	0x00, 0x00
                                    1-  509     .segment "idata"
     0000                           1-  510     _addtime:
     0000 0000                      1-  511     	dw	0x00
                                    1-  515     .segment "idata"
     0000                           1-  516     _lowWaterTime:
     0000 0000                      1-  517     	dw	0x00
                                    1-  521     .segment "idata"
     0000                           1-  522     _numArray:
     0000 003F                      1-  523     	dw	0x3f
     0001 0006                      1-  524     	dw	0x06
     0002 005B                      1-  525     	dw	0x5b
     0003 004F                      1-  526     	dw	0x4f
     0004 0066                      1-  527     	dw	0x66
     0005 006D                      1-  528     	dw	0x6d
     0006 007D                      1-  529     	dw	0x7d
     0007 0007                      1-  530     	dw	0x07
     0008 007F                      1-  531     	dw	0x7f
     0009 0067                      1-  532     	dw	0x67
                                    1-  535     ;--------------------------------------------------------
                                    1-  536     ; overlayable items in internal ram 
                                    1-  537     ;--------------------------------------------------------
                                    1-  538     ;	udata_ovr
                                    1-  539     ;--------------------------------------------------------
                                    1-  540     ; reset vector 
                                    1-  541     ;--------------------------------------------------------
                                    1-  542     ORG	0x0000
     0000 3rrr                      1-  543     	LGOTO	__nyc_ny8_startup
                                    1-  544     ;--------------------------------------------------------
                                    1-  545     ; interrupt and initialization code
                                    1-  546     ;--------------------------------------------------------
                                    1-  547     ORG 0x0008
     0008 3rrr                      1-  548     	lgoto	__sdcc_interrupt
                                    1-  550     .segment "code"
     0000                           1-  551     __sdcc_interrupt:
                                    1-  552     ;***
                                    1-  553     ;  pBlock Stats: dbName = I
                                    1-  554     ;***
                                    1-  555     ;functions called:
                                    1-  556     ;   _setPWMduty
                                    1-  557     ;   _setPWMdutyG
                                    1-  558     ;   _setPWMduty
                                    1-  559     ;   _setPWMduty
                                    1-  560     ;   _setPWMdutyG
                                    1-  561     ;   _setPWMduty
                                    1-  562     ;2 compiler assigned registers:
                                    1-  563     ;   STK00
                                    1-  564     ;   STK01
                                    1-  565     ;; Starting pCode block
     0000                           1-  566     _isr:
                                    1-  567     ; 0 exit points
                                    1-  568     	.line	74, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  569     	MOVAR	WSAVE
     0001 1503                      1-  570     	SWAPR	STATUS,W
     0002 0283                      1-  571     	CLRR	STATUS
     0003 00rr                      1-  572     	MOVAR	SSAVE
     0004 010A                      1-  573     	MOVR	PCHBUF,W
     0005 028A                      1-  574     	CLRR	PCHBUF
     0006 00rr                      1-  575     	MOVAR	PSAVE
     0007 0104                      1-  576     	MOVR	FSR,W
                                    1-  577     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  578     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  579     	MOVR	STK00,W
                                    1-  580     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  581     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  582     	MOVR	STK01,W
                                    1-  583     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  584     	MOVAR	___sdcc_saved_stk01
                                    1-  585     	.line	76, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  586     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  587     	LGOTO	_00122_DS_
                                    1-  588     	.line	78, "main.c"; 	TMR0 = 55;
     0012 2137                      1-  589     	MOVIA	0x37
     0013 00rr                      1-  590     	MOVAR	_TMR0
                                    1-  591     	.line	79, "main.c"; 	intCount++;
                                    1-  592     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  593     	INCR	_intCount,F
                                    1-  594     	.line	80, "main.c"; 	if(ledFlag)
                                    1-  595     	BANKSEL	_ledFlag
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1-  596     	MOVR	_ledFlag,W
     0018 0D03                      1-  597     	BTRSC	STATUS,2
     0019 3rrr                      1-  598     	LGOTO	_00106_DS_
                                    1-  599     	.line	82, "main.c"; 	setPWMduty(0x02,RDUTY);
                                    1-  600     	BANKSEL	_RDUTY
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  601     	MOVR	_RDUTY,W
     001C 00rr                      1-  602     	MOVAR	STK00
     001D 2102                      1-  603     	MOVIA	0x02
     001E 2rrr                      1-  604     	LCALL	_setPWMduty
                                    1-  605     	.line	83, "main.c"; 	setPWMdutyG(0x80,GDUTY);
                                    1-  606     	BANKSEL	_GDUTY
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  607     	MOVR	_GDUTY,W
     0021 00rr                      1-  608     	MOVAR	STK00
     0022 2180                      1-  609     	MOVIA	0x80
     0023 2rrr                      1-  610     	LCALL	_setPWMdutyG
                                    1-  611     	.line	84, "main.c"; 	setPWMduty(0x04,BDUTY);
                                    1-  612     	BANKSEL	_BDUTY
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  613     	MOVR	_BDUTY,W
     0026 00rr                      1-  614     	MOVAR	STK00
     0027 2104                      1-  615     	MOVIA	0x04
     0028 2rrr                      1-  616     	LCALL	_setPWMduty
                                    1-  617     	.line	85, "main.c"; 	ledCount++;
                                    1-  618     	BANKSEL	_ledCount
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 05rr                      1-  619     	INCR	_ledCount,F
     002B                           1-  620     _00106_DS_:
                                    1-  621     	.line	88, "main.c"; 	if(++intCount >= 100)
                                    1-  622     	BANKSEL	_intCount
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 05rr                      1-  623     	INCR	_intCount,F
                                    1-  624     ;;unsigned compare: left < lit (0x64=100), size=1
     002D 2164                      1-  625     	MOVIA	0x64
     002E 04rr                      1-  626     	SUBAR	_intCount,W
     002F 0803                      1-  627     	BTRSS	STATUS,0
     0030 3rrr                      1-  628     	LGOTO	_00122_DS_
                                    1-  629     	.line	90, "main.c"; 	intCount = 0;
     0031 02rr                      1-  630     	CLRR	_intCount
                                    1-  631     	.line	91, "main.c"; 	IntFlag = 1;
     0032 2101                      1-  632     	MOVIA	0x01
                                    1-  633     	BANKSEL	_IntFlag
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1-  634     	MOVAR	_IntFlag
                                    1-  635     	.line	93, "main.c"; 	if(klcikTime > 0)
                                    1-  636     	BANKSEL	_klcikTime
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1-  637     	MOVR	_klcikTime,W
     0037 11rr                      1-  638     	IORAR	(_klcikTime + 1),W
     0038 0D03                      1-  639     	BTRSC	STATUS,2
     0039 3rrr                      1-  640     	LGOTO	_00122_DS_
                                    1-  641     	.line	95, "main.c"; 	if(--klcikTime == 0)
     003A 21FF                      1-  642     	MOVIA	0xff
     003B 03rr                      1-  643     	ADDAR	_klcikTime,F
     003C 0803                      1-  644     	BTRSS	STATUS,0
     003D 06rr                      1-  645     	DECR	(_klcikTime + 1),F
     003E 01rr                      1-  646     	MOVR	_klcikTime,W
     003F 11rr                      1-  647     	IORAR	(_klcikTime + 1),W
     0040 0903                      1-  648     	BTRSS	STATUS,2
     0041 3rrr                      1-  649     	LGOTO	_00122_DS_
                                    1-  650     	.line	97, "main.c"; 	if(douClickFlag)
                                    1-  651     	BANKSEL	_douClickFlag
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1-  652     	MOVR	_douClickFlag,W
     0044 0D03                      1-  653     	BTRSC	STATUS,2
     0045 3rrr                      1-  654     	LGOTO	_00113_DS_
                                    1-  655     	.line	100, "main.c"; 	if(ledAddFlag)
                                    1-  656     	BANKSEL	_ledAddFlag
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1-  657     	MOVR	_ledAddFlag,W
     0048 0D03                      1-  658     	BTRSC	STATUS,2
     0049 3rrr                      1-  659     	LGOTO	_00108_DS_
                                    1-  660     	.line	101, "main.c"; 	ledAddFlag = 0;
     004A 02rr                      1-  661     	CLRR	_ledAddFlag
     004B 3rrr                      1-  662     	LGOTO	_00114_DS_
     004C                           1-  663     _00108_DS_:
                                    1-  664     	.line	103, "main.c"; 	ledAddFlag = 1;
     004C 2101                      1-  665     	MOVIA	0x01
                                    1-  666     	BANKSEL	_ledAddFlag
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1-  667     	MOVAR	_ledAddFlag
     004F 3rrr                      1-  668     	LGOTO	_00114_DS_
     0050                           1-  669     _00113_DS_:
                                    1-  670     	.line	107, "main.c"; 	if(++workStep >= 3)
                                    1-  671     	BANKSEL	_workStep
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 05rr                      1-  672     	INCR	_workStep,F
                                    1-  673     ;;unsigned compare: left < lit (0x3=3), size=1
     0052 2103                      1-  674     	MOVIA	0x03
     0053 04rr                      1-  675     	SUBAR	_workStep,W
     0054 0C03                      1-  676     	BTRSC	STATUS,0
                                    1-  677     	.line	108, "main.c"; 	workStep = 0;
     0055 02rr                      1-  678     	CLRR	_workStep
     0056                           1-  679     _00114_DS_:
                                    1-  680     	.line	110, "main.c"; 	douClickFlag = 0;
                                    1-  681     	BANKSEL	_douClickFlag
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 02rr                      1-  682     	CLRR	_douClickFlag
     0058                           1-  683     _00122_DS_:
                                    1-  684     	.line	116, "main.c"; 	if(INTFbits.T0IF)
     0058 08rr                      1-  685     	BTRSS	_INTFbits,0
     0059 3rrr                      1-  686     	LGOTO	_00124_DS_
                                    1-  687     	.line	118, "main.c"; 	INTF = 0;
     005A 02rr                      1-  688     	CLRR	_INTF
     005B                           1-  689     _00124_DS_:
                                    1-  690     	.line	121, "main.c"; 	if(INTFbits.PABIF)
     005B 08rr                      1-  691     	BTRSS	_INTFbits,1
     005C 3rrr                      1-  692     	LGOTO	_00126_DS_
                                    1-  693     	.line	123, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     005D 21FD                      1-  694     	MOVIA	0xfd
     005E 00rr                      1-  695     	MOVAR	_INTF
     005F                           1-  696     _00126_DS_:
                                    1-  697     	.line	126, "main.c"; 	INTF = 0;
     005F 02rr                      1-  698     	CLRR	_INTF
                                    1-  699     	.line	128, "main.c"; 	}
                                    1-  700     	BANKSEL	___sdcc_saved_stk01
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1-  701     	MOVR	___sdcc_saved_stk01,W
     0062 00rr                      1-  702     	MOVAR	STK01
                                    1-  703     	BANKSEL	___sdcc_saved_stk00
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 01rr                      1-  704     	MOVR	___sdcc_saved_stk00,W
     0065 00rr                      1-  705     	MOVAR	STK00
                                    1-  706     	BANKSEL	___sdcc_saved_fsr
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 01rr                      1-  707     	MOVR	___sdcc_saved_fsr,W
     0068 0084                      1-  708     	MOVAR	FSR
     0069 01rr                      1-  709     	MOVR	PSAVE,W
     006A 008A                      1-  710     	MOVAR	PCHBUF
     006B 0283                      1-  711     	CLRR	STATUS
     006C 15rr                      1-  712     	SWAPR	SSAVE,W
     006D 0083                      1-  713     	MOVAR	STATUS
     006E 15rr                      1-  714     	SWAPR	WSAVE,F
     006F 15rr                      1-  715     	SWAPR	WSAVE,W
     0070                           1-  716     END_OF_INTERRUPT:
     0070 0011                      1-  717     	RETIE	
                                    1-  719     ;--------------------------------------------------------
                                    1-  720     ; code
                                    1-  721     ;--------------------------------------------------------
                                    1-  722     ;***
                                    1-  723     ;  pBlock Stats: dbName = M
                                    1-  724     ;***
                                    1-  725     ;has an exit
                                    1-  726     ;functions called:
                                    1-  727     ;   _refreshNub
                                    1-  728     ;   _workCtr
                                    1-  729     ;   _refreshNub
                                    1-  730     ;   _workCtr
                                    1-  731     ;; Starting pCode block
                                    1-  732     .segment "code"; module=main, function=_main
     0000                           1-  734     _main:
                                    1-  735     ; 2 exit points
                                    1-  736     	.line	159, "main.c"; 	DISI();
     0000 0013                      1-  737     	DISI
                                    1-  738     	.line	160, "main.c"; 	IOSTA = C_PA6_Input;
     0001 2140                      1-  739     	MOVIA	0x40
     0002 000r                      1-  740     	IOST	_IOSTA
                                    1-  741     	.line	161, "main.c"; 	IOSTB = 0x11;
     0003 2111                      1-  742     	MOVIA	0x11
     0004 000r                      1-  743     	IOST	_IOSTB
                                    1-  744     	.line	162, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1-  745     	CLRR	_PORTB
                                    1-  746     	.line	163, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1-  747     	CLRR	_PORTA
                                    1-  748     	.line	164, "main.c"; 	APHCON = 0xBF;
     0007 21BF                      1-  749     	MOVIA	0xbf
     0008 000r                      1-  750     	IOST	_APHCON
                                    1-  751     	.line	166, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0009 2101                      1-  752     	MOVIA	0x01
     000A 00rr                      1-  753     	MOVAR	_INTE
                                    1-  754     	.line	168, "main.c"; 	PCON1 = C_TMR0_Dis;
     000B 0200                      1-  755     	CLRA	
     000C 000r                      1-  756     	IOST	_PCON1
                                    1-  757     	.line	170, "main.c"; 	TMR0 = 55;
     000D 2137                      1-  758     	MOVIA	0x37
     000E 00rr                      1-  759     	MOVAR	_TMR0
                                    1-  760     	.line	171, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     000F 0200                      1-  761     	CLRA	
     0010 0003                      1-  762     	T0MD	
                                    1-  763     	.line	173, "main.c"; 	PCON1 = C_TMR0_En;
     0011 2101                      1-  764     	MOVIA	0x01
     0012 000r                      1-  765     	IOST	_PCON1
                                    1-  766     	.line	175, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0013 2188                      1-  767     	MOVIA	0x88
     0014 00rr                      1-  768     	MOVAR	_PCON
                                    1-  769     	.line	178, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0015 2101                      1-  770     	MOVIA	0x01
     0016 000r                      1-  771     	IOST	_PCON1
                                    1-  772     	.line	179, "main.c"; 	ENI();
     0017 0004                      1-  773     	ENI
     0018                           1-  774     _00147_DS_:
                                    1-  775     	.line	183, "main.c"; 	CLRWDT();
     0018 0002                      1-  776     	clrwdt
                                    1-  777     	.line	184, "main.c"; 	if(!IntFlag)
                                    1-  778     	BANKSEL	_IntFlag
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  779     	MOVR	_IntFlag,W
     001B 0D03                      1-  780     	BTRSC	STATUS,2
     001C 3rrr                      1-  781     	LGOTO	_00147_DS_
                                    1-  782     	.line	186, "main.c"; 	IntFlag = 0;
     001D 02rr                      1-  783     	CLRR	_IntFlag
                                    1-  784     	.line	190, "main.c"; 	refreshNub();
     001E 2rrr                      1-  785     	LCALL	_refreshNub
                                    1-  786     	.line	192, "main.c"; 	workCtr();
     001F 2rrr                      1-  787     	LCALL	_workCtr
     0020 3rrr                      1-  788     	LGOTO	_00147_DS_
                                    1-  789     	.line	194, "main.c"; 	}
                                    1-  790     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1-  791     ; exit point of _main
                                    1-  793     ;***
                                    1-  794     ;  pBlock Stats: dbName = C
                                    1-  795     ;***
                                    1-  796     ;has an exit
                                    1-  797     ;5 compiler assigned registers:
                                    1-  798     ;   r0x1036
                                    1-  799     ;   STK00
                                    1-  800     ;   r0x1037
                                    1-  801     ;   r0x1038
                                    1-  802     ;   r0x1039
                                    1-  803     ;; Starting pCode block
                                    1-  804     .segment "code"; module=main, function=_delay
                                    1-  806     ;local variable name mapping:
     0000                           1-  811     _delay:
                                    1-  812     ; 2 exit points
                                    1-  813     	.line	605, "main.c"; 	void delay(u16t time)
                                    1-  814     	BANKSEL	r0x1036
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  815     	MOVAR	r0x1036
     0002 01rr                      1-  816     	MOVR	STK00,W
                                    1-  817     	BANKSEL	r0x1037
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  818     	MOVAR	r0x1037
                                    1-  819     	.line	607, "main.c"; 	for(u16t i=0;i<time;i++);
                                    1-  820     	BANKSEL	r0x1038
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  821     	CLRR	r0x1038
                                    1-  822     	BANKSEL	r0x1039
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  823     	CLRR	r0x1039
     0009                           1-  824     _00483_DS_:
                                    1-  825     	BANKSEL	r0x1036
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  826     	MOVR	r0x1036,W
                                    1-  827     	BANKSEL	r0x1039
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  828     	SUBAR	r0x1039,W
     000D 0903                      1-  829     	BTRSS	STATUS,2
     000E 3rrr                      1-  830     	LGOTO	_00494_DS_
                                    1-  831     	BANKSEL	r0x1037
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  832     	MOVR	r0x1037,W
                                    1-  833     	BANKSEL	r0x1038
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  834     	SUBAR	r0x1038,W
     0013                           1-  835     _00494_DS_:
     0013 0C03                      1-  836     	BTRSC	STATUS,0
     0014 3rrr                      1-  837     	LGOTO	_00485_DS_
                                    1-  838     	BANKSEL	r0x1038
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  839     	INCR	r0x1038,F
     0017 0903                      1-  840     	BTRSS	STATUS,2
     0018 3rrr                      1-  841     	LGOTO	_00001_DS_
                                    1-  842     	BANKSEL	r0x1039
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  843     	INCR	r0x1039,F
     001B                           1-  844     _00001_DS_:
     001B 3rrr                      1-  845     	LGOTO	_00483_DS_
     001C                           1-  846     _00485_DS_:
                                    1-  847     	.line	608, "main.c"; 	}
                                    1-  848     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  849     ; exit point of _delay
                                    1-  851     ;***
                                    1-  852     ;  pBlock Stats: dbName = C
                                    1-  853     ;***
                                    1-  854     ;has an exit
                                    1-  855     ;; Starting pCode block
                                    1-  856     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  858     _F_wait_eoc:
                                    1-  859     ; 2 exit points
     0000                           1-  860     _00476_DS_:
                                    1-  861     	.line	599, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  862     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  863     	LGOTO	_00476_DS_
                                    1-  864     	.line	601, "main.c"; 	}
                                    1-  865     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  866     ; exit point of _F_wait_eoc
                                    1-  868     ;***
                                    1-  869     ;  pBlock Stats: dbName = C
                                    1-  870     ;***
                                    1-  871     ;has an exit
                                    1-  872     ;functions called:
                                    1-  873     ;   _setInput
                                    1-  874     ;   _pwmStop
                                    1-  875     ;   _setInput
                                    1-  876     ;   _pwmStop
                                    1-  877     ;; Starting pCode block
                                    1-  878     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  880     _gotoSleep:
                                    1-  881     ; 2 exit points
                                    1-  882     	.line	576, "main.c"; 	setInput();
     0000 2rrr                      1-  883     	LCALL	_setInput
                                    1-  884     	.line	577, "main.c"; 	count500ms = 0;
                                    1-  885     	BANKSEL	_count500ms
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1-  886     	CLRR	_count500ms
                                    1-  887     	.line	578, "main.c"; 	count300s = 0;
                                    1-  888     	BANKSEL	_count300s
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1-  889     	CLRR	_count300s
     0005 02rr                      1-  890     	CLRR	(_count300s + 1)
                                    1-  891     	.line	579, "main.c"; 	pwmStop();
     0006 2rrr                      1-  892     	LCALL	_pwmStop
                                    1-  893     	.line	580, "main.c"; 	sleepDelay = 0;
                                    1-  894     	BANKSEL	_sleepDelay
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  895     	CLRR	_sleepDelay
                                    1-  896     	.line	581, "main.c"; 	workStep = 0;
                                    1-  897     	BANKSEL	_workStep
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1-  898     	CLRR	_workStep
                                    1-  899     	.line	582, "main.c"; 	AWUCON = 0x40;
     000B 2140                      1-  900     	MOVIA	0x40
     000C 00rr                      1-  901     	MOVAR	_AWUCON
                                    1-  902     	.line	583, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     000D 210B                      1-  903     	MOVIA	0x0b
     000E 00rr                      1-  904     	MOVAR	_INTE
                                    1-  905     	.line	584, "main.c"; 	PCON =  C_LVR_En;	
     000F 2108                      1-  906     	MOVIA	0x08
     0010 00rr                      1-  907     	MOVAR	_PCON
                                    1-  908     	.line	585, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0011 02rr                      1-  909     	CLRR	_INTF
                                    1-  910     	.line	586, "main.c"; 	CLRWDT();
     0012 0002                      1-  911     	clrwdt
                                    1-  912     	.line	587, "main.c"; 	ENI();
     0013 0004                      1-  913     	ENI
                                    1-  914     	.line	588, "main.c"; 	SLEEP();
     0014 0001                      1-  915     	sleep
                                    1-  916     	.line	589, "main.c"; 	AWUCON = 0x00;
     0015 02rr                      1-  917     	CLRR	_AWUCON
                                    1-  918     	.line	590, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0016 2101                      1-  919     	MOVIA	0x01
     0017 00rr                      1-  920     	MOVAR	_INTE
                                    1-  921     	.line	591, "main.c"; 	INTF = 0;
     0018 02rr                      1-  922     	CLRR	_INTF
                                    1-  923     	.line	593, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0019 21A8                      1-  924     	MOVIA	0xa8
     001A 00rr                      1-  925     	MOVAR	_PCON
                                    1-  926     	.line	595, "main.c"; 	}
                                    1-  927     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1-  928     ; exit point of _gotoSleep
                                    1-  930     ;***
                                    1-  931     ;  pBlock Stats: dbName = C
                                    1-  932     ;***
                                    1-  933     ;has an exit
                                    1-  934     ;1 compiler assigned register :
                                    1-  935     ;   r0x103A
                                    1-  936     ;; Starting pCode block
                                    1-  937     .segment "code"; module=main, function=_keyRead
                                    1-  939     ;local variable name mapping:
     0000                           1-  941     _keyRead:
                                    1-  942     ; 2 exit points
                                    1-  943     	.line	541, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  944     	BANKSEL	r0x103A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  945     	MOVAR	r0x103A
                                    1-  946     	.line	543, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  947     	MOVR	r0x103A,W
     0003 0D03                      1-  948     	BTRSC	STATUS,2
     0004 3rrr                      1-  949     	LGOTO	_00465_DS_
                                    1-  950     	.line	545, "main.c"; 	keyCount++;
                                    1-  951     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  952     	INCR	_keyCount,F
                                    1-  953     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  954     	.line	546, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  955     	MOVIA	0xc8
     0008 04rr                      1-  956     	SUBAR	_keyCount,W
     0009 0803                      1-  957     	BTRSS	STATUS,0
     000A 3rrr                      1-  958     	LGOTO	_00466_DS_
                                    1-  959     	.line	548, "main.c"; 	keyCount = 200;
     000B 21C8                      1-  960     	MOVIA	0xc8
     000C 00rr                      1-  961     	MOVAR	_keyCount
                                    1-  962     	.line	549, "main.c"; 	if(!longPressFlag)
                                    1-  963     	BANKSEL	_longPressFlag
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  964     	MOVR	_longPressFlag,W
     000F 0903                      1-  965     	BTRSS	STATUS,2
     0010 3rrr                      1-  966     	LGOTO	_00466_DS_
                                    1-  967     	.line	551, "main.c"; 	longPressFlag = 1;
     0011 2101                      1-  968     	MOVIA	0x01
     0012 00rr                      1-  969     	MOVAR	_longPressFlag
                                    1-  970     	.line	552, "main.c"; 	return 2;
     0013 2102                      1-  971     	MOVIA	0x02
     0014 3rrr                      1-  972     	LGOTO	_00467_DS_
                                    1-  973     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1-  974     _00465_DS_:
                                    1-  975     	.line	558, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1-  976     	MOVIA	0xc8
                                    1-  977     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 04rr                      1-  978     	SUBAR	_keyCount,W
     0018 0803                      1-  979     	BTRSS	STATUS,0
     0019 3rrr                      1-  980     	LGOTO	_00462_DS_
                                    1-  981     	.line	560, "main.c"; 	keyCount = 0;
     001A 02rr                      1-  982     	CLRR	_keyCount
                                    1-  983     	.line	561, "main.c"; 	longPressFlag = 0;
                                    1-  984     	BANKSEL	_longPressFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1-  985     	CLRR	_longPressFlag
                                    1-  986     	.line	562, "main.c"; 	return	0;
     001D 2100                      1-  987     	MOVIA	0x00
     001E 3rrr                      1-  988     	LGOTO	_00467_DS_
                                    1-  989     ;;unsigned compare: left < lit (0x8=8), size=1
     001F                           1-  990     _00462_DS_:
                                    1-  991     	.line	564, "main.c"; 	else if(keyCount >= 8)
     001F 2108                      1-  992     	MOVIA	0x08
                                    1-  993     	BANKSEL	_keyCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1-  994     	SUBAR	_keyCount,W
     0022 0803                      1-  995     	BTRSS	STATUS,0
     0023 3rrr                      1-  996     	LGOTO	_00463_DS_
                                    1-  997     	.line	566, "main.c"; 	keyCount = 0;
     0024 02rr                      1-  998     	CLRR	_keyCount
                                    1-  999     	.line	567, "main.c"; 	return	1;
     0025 2101                      1- 1000     	MOVIA	0x01
     0026 3rrr                      1- 1001     	LGOTO	_00467_DS_
     0027                           1- 1002     _00463_DS_:
                                    1- 1003     	.line	569, "main.c"; 	keyCount = 0;
                                    1- 1004     	BANKSEL	_keyCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1- 1005     	CLRR	_keyCount
     0029                           1- 1006     _00466_DS_:
                                    1- 1007     	.line	571, "main.c"; 	return 0;
     0029 2100                      1- 1008     	MOVIA	0x00
     002A                           1- 1009     _00467_DS_:
                                    1- 1010     	.line	572, "main.c"; 	}
                                    1- 1011     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1- 1012     ; exit point of _keyRead
                                    1- 1014     ;***
                                    1- 1015     ;  pBlock Stats: dbName = C
                                    1- 1016     ;***
                                    1- 1017     ;has an exit
                                    1- 1018     ;functions called:
                                    1- 1019     ;   __moduint
                                    1- 1020     ;   __moduint
                                    1- 1021     ;5 compiler assigned registers:
                                    1- 1022     ;   STK02
                                    1- 1023     ;   STK01
                                    1- 1024     ;   STK00
                                    1- 1025     ;   r0x103B
                                    1- 1026     ;   r0x103C
                                    1- 1027     ;; Starting pCode block
                                    1- 1028     .segment "code"; module=main, function=_ledCon
     0000                           1- 1030     _ledCon:
                                    1- 1031     ; 2 exit points
                                    1- 1032     	.line	462, "main.c"; 	if(count60s % 5 == 0)
     0000 2105                      1- 1033     	MOVIA	0x05
     0001 00rr                      1- 1034     	MOVAR	STK02
     0002 2100                      1- 1035     	MOVIA	0x00
     0003 00rr                      1- 1036     	MOVAR	STK01
                                    1- 1037     	BANKSEL	_count60s
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1038     	MOVR	_count60s,W
     0006 00rr                      1- 1039     	MOVAR	STK00
     0007 01rr                      1- 1040     	MOVR	(_count60s + 1),W
     0008 2rrr                      1- 1041     	LCALL	__moduint
                                    1- 1042     ;;1	MOVAR	r0x103B
     0009 11rr                      1- 1043     	IORAR	STK00,W
     000A 0903                      1- 1044     	BTRSS	STATUS,2
     000B 3rrr                      1- 1045     	LGOTO	_00376_DS_
                                    1- 1046     ;;unsigned compare: left < lit (0x1F4=500), size=2
                                    1- 1047     	.line	465, "main.c"; 	if(count60s < 500)
     000C 2101                      1- 1048     	MOVIA	0x01
                                    1- 1049     	BANKSEL	_count60s
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 1050     	SUBAR	(_count60s + 1),W
     000F 0903                      1- 1051     	BTRSS	STATUS,2
     0010 3rrr                      1- 1052     	LGOTO	_00435_DS_
     0011 21F4                      1- 1053     	MOVIA	0xf4
     0012 04rr                      1- 1054     	SUBAR	_count60s,W
     0013                           1- 1055     _00435_DS_:
     0013 0C03                      1- 1056     	BTRSC	STATUS,0
     0014 3rrr                      1- 1057     	LGOTO	_00373_DS_
                                    1- 1058     	.line	467, "main.c"; 	RDUTY = GDUTY = 20;
     0015 2114                      1- 1059     	MOVIA	0x14
                                    1- 1060     	BANKSEL	_GDUTY
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1061     	MOVAR	_GDUTY
                                    1- 1062     	BANKSEL	_RDUTY
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 1063     	MOVAR	_RDUTY
                                    1- 1064     	.line	468, "main.c"; 	BDUTY = 100;
     001A 2164                      1- 1065     	MOVIA	0x64
                                    1- 1066     	BANKSEL	_BDUTY
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1067     	MOVAR	_BDUTY
     001D 3rrr                      1- 1068     	LGOTO	_00376_DS_
                                    1- 1069     ;;unsigned compare: left < lit (0x258=600), size=2
     001E                           1- 1070     _00373_DS_:
                                    1- 1071     	.line	470, "main.c"; 	else if(count60s < 600)
     001E 2102                      1- 1072     	MOVIA	0x02
                                    1- 1073     	BANKSEL	_count60s
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1- 1074     	SUBAR	(_count60s + 1),W
     0021 0903                      1- 1075     	BTRSS	STATUS,2
     0022 3rrr                      1- 1076     	LGOTO	_00436_DS_
     0023 2158                      1- 1077     	MOVIA	0x58
     0024 04rr                      1- 1078     	SUBAR	_count60s,W
     0025                           1- 1079     _00436_DS_:
     0025 0C03                      1- 1080     	BTRSC	STATUS,0
     0026 3rrr                      1- 1081     	LGOTO	_00370_DS_
                                    1- 1082     	.line	472, "main.c"; 	--RDUTY;
                                    1- 1083     	BANKSEL	_RDUTY
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 06rr                      1- 1084     	DECR	_RDUTY,F
     0029 3rrr                      1- 1085     	LGOTO	_00376_DS_
                                    1- 1086     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     002A                           1- 1087     _00370_DS_:
                                    1- 1088     	.line	474, "main.c"; 	else if(count60s < 1000)
     002A 2103                      1- 1089     	MOVIA	0x03
                                    1- 1090     	BANKSEL	_count60s
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 04rr                      1- 1091     	SUBAR	(_count60s + 1),W
     002D 0903                      1- 1092     	BTRSS	STATUS,2
     002E 3rrr                      1- 1093     	LGOTO	_00437_DS_
     002F 21E8                      1- 1094     	MOVIA	0xe8
     0030 04rr                      1- 1095     	SUBAR	_count60s,W
     0031                           1- 1096     _00437_DS_:
     0031 0C03                      1- 1097     	BTRSC	STATUS,0
     0032 3rrr                      1- 1098     	LGOTO	_00367_DS_
                                    1- 1099     	.line	476, "main.c"; 	RDUTY = 0;
                                    1- 1100     	BANKSEL	_RDUTY
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1- 1101     	CLRR	_RDUTY
                                    1- 1102     	.line	477, "main.c"; 	++GDUTY;
                                    1- 1103     	BANKSEL	_GDUTY
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 05rr                      1- 1104     	INCR	_GDUTY,F
     0037 3rrr                      1- 1105     	LGOTO	_00376_DS_
                                    1- 1106     ;;unsigned compare: left < lit (0x5DC=1500), size=2
     0038                           1- 1107     _00367_DS_:
                                    1- 1108     	.line	479, "main.c"; 	else if(count60s < 1500)
     0038 2105                      1- 1109     	MOVIA	0x05
                                    1- 1110     	BANKSEL	_count60s
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1111     	SUBAR	(_count60s + 1),W
     003B 0903                      1- 1112     	BTRSS	STATUS,2
     003C 3rrr                      1- 1113     	LGOTO	_00438_DS_
     003D 21DC                      1- 1114     	MOVIA	0xdc
     003E 04rr                      1- 1115     	SUBAR	_count60s,W
     003F                           1- 1116     _00438_DS_:
     003F 0C03                      1- 1117     	BTRSC	STATUS,0
     0040 3rrr                      1- 1118     	LGOTO	_00364_DS_
                                    1- 1119     	.line	481, "main.c"; 	RDUTY = 0;
                                    1- 1120     	BANKSEL	_RDUTY
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 02rr                      1- 1121     	CLRR	_RDUTY
                                    1- 1122     	.line	482, "main.c"; 	GDUTY = 100;
     0043 2164                      1- 1123     	MOVIA	0x64
                                    1- 1124     	BANKSEL	_GDUTY
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 00rr                      1- 1125     	MOVAR	_GDUTY
     0046 3rrr                      1- 1126     	LGOTO	_00376_DS_
                                    1- 1127     ;;unsigned compare: left < lit (0x76C=1900), size=2
     0047                           1- 1128     _00364_DS_:
                                    1- 1129     	.line	484, "main.c"; 	else if(count60s < 1900)
     0047 2107                      1- 1130     	MOVIA	0x07
                                    1- 1131     	BANKSEL	_count60s
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 04rr                      1- 1132     	SUBAR	(_count60s + 1),W
     004A 0903                      1- 1133     	BTRSS	STATUS,2
     004B 3rrr                      1- 1134     	LGOTO	_00439_DS_
     004C 216C                      1- 1135     	MOVIA	0x6c
     004D 04rr                      1- 1136     	SUBAR	_count60s,W
     004E                           1- 1137     _00439_DS_:
     004E 0C03                      1- 1138     	BTRSC	STATUS,0
     004F 3rrr                      1- 1139     	LGOTO	_00361_DS_
                                    1- 1140     	.line	486, "main.c"; 	--BDUTY;
                                    1- 1141     	BANKSEL	_BDUTY
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 06rr                      1- 1142     	DECR	_BDUTY,F
     0052 3rrr                      1- 1143     	LGOTO	_00376_DS_
                                    1- 1144     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     0053                           1- 1145     _00361_DS_:
                                    1- 1146     	.line	488, "main.c"; 	else if(count60s < 2000)
     0053 2107                      1- 1147     	MOVIA	0x07
                                    1- 1148     	BANKSEL	_count60s
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 04rr                      1- 1149     	SUBAR	(_count60s + 1),W
     0056 0903                      1- 1150     	BTRSS	STATUS,2
     0057 3rrr                      1- 1151     	LGOTO	_00440_DS_
     0058 21D0                      1- 1152     	MOVIA	0xd0
     0059 04rr                      1- 1153     	SUBAR	_count60s,W
     005A                           1- 1154     _00440_DS_:
     005A 0C03                      1- 1155     	BTRSC	STATUS,0
     005B 3rrr                      1- 1156     	LGOTO	_00358_DS_
                                    1- 1157     	.line	490, "main.c"; 	BDUTY = 20;
     005C 2114                      1- 1158     	MOVIA	0x14
                                    1- 1159     	BANKSEL	_BDUTY
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 00rr                      1- 1160     	MOVAR	_BDUTY
                                    1- 1161     	.line	491, "main.c"; 	++RDUTY;
                                    1- 1162     	BANKSEL	_RDUTY
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 05rr                      1- 1163     	INCR	_RDUTY,F
     0061 3rrr                      1- 1164     	LGOTO	_00376_DS_
                                    1- 1165     ;;unsigned compare: left < lit (0x9C4=2500), size=2
     0062                           1- 1166     _00358_DS_:
                                    1- 1167     	.line	493, "main.c"; 	else if(count60s < 2500)
     0062 2109                      1- 1168     	MOVIA	0x09
                                    1- 1169     	BANKSEL	_count60s
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 04rr                      1- 1170     	SUBAR	(_count60s + 1),W
     0065 0903                      1- 1171     	BTRSS	STATUS,2
     0066 3rrr                      1- 1172     	LGOTO	_00441_DS_
     0067 21C4                      1- 1173     	MOVIA	0xc4
     0068 04rr                      1- 1174     	SUBAR	_count60s,W
     0069                           1- 1175     _00441_DS_:
     0069 0C03                      1- 1176     	BTRSC	STATUS,0
     006A 3rrr                      1- 1177     	LGOTO	_00355_DS_
                                    1- 1178     	.line	495, "main.c"; 	RDUTY = 20;
     006B 2114                      1- 1179     	MOVIA	0x14
                                    1- 1180     	BANKSEL	_RDUTY
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 00rr                      1- 1181     	MOVAR	_RDUTY
     006E 3rrr                      1- 1182     	LGOTO	_00376_DS_
                                    1- 1183     ;;unsigned compare: left < lit (0xA28=2600), size=2
     006F                           1- 1184     _00355_DS_:
                                    1- 1185     	.line	497, "main.c"; 	else if(count60s < 2600)
     006F 210A                      1- 1186     	MOVIA	0x0a
                                    1- 1187     	BANKSEL	_count60s
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 04rr                      1- 1188     	SUBAR	(_count60s + 1),W
     0072 0903                      1- 1189     	BTRSS	STATUS,2
     0073 3rrr                      1- 1190     	LGOTO	_00442_DS_
     0074 2128                      1- 1191     	MOVIA	0x28
     0075 04rr                      1- 1192     	SUBAR	_count60s,W
     0076                           1- 1193     _00442_DS_:
     0076 0C03                      1- 1194     	BTRSC	STATUS,0
     0077 3rrr                      1- 1195     	LGOTO	_00352_DS_
                                    1- 1196     	.line	499, "main.c"; 	--BDUTY;
                                    1- 1197     	BANKSEL	_BDUTY
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 06rr                      1- 1198     	DECR	_BDUTY,F
     007A 3rrr                      1- 1199     	LGOTO	_00376_DS_
                                    1- 1200     ;;unsigned compare: left < lit (0xBB8=3000), size=2
     007B                           1- 1201     _00352_DS_:
                                    1- 1202     	.line	501, "main.c"; 	else if(count60s < 3000)
     007B 210B                      1- 1203     	MOVIA	0x0b
                                    1- 1204     	BANKSEL	_count60s
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 04rr                      1- 1205     	SUBAR	(_count60s + 1),W
     007E 0903                      1- 1206     	BTRSS	STATUS,2
     007F 3rrr                      1- 1207     	LGOTO	_00443_DS_
     0080 21B8                      1- 1208     	MOVIA	0xb8
     0081 04rr                      1- 1209     	SUBAR	_count60s,W
     0082                           1- 1210     _00443_DS_:
     0082 0C03                      1- 1211     	BTRSC	STATUS,0
     0083 3rrr                      1- 1212     	LGOTO	_00349_DS_
                                    1- 1213     	.line	503, "main.c"; 	BDUTY = 0;
                                    1- 1214     	BANKSEL	_BDUTY
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 02rr                      1- 1215     	CLRR	_BDUTY
                                    1- 1216     	.line	504, "main.c"; 	++RDUTY;
                                    1- 1217     	BANKSEL	_RDUTY
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 05rr                      1- 1218     	INCR	_RDUTY,F
     0088 3rrr                      1- 1219     	LGOTO	_00376_DS_
                                    1- 1220     ;;unsigned compare: left < lit (0xDAC=3500), size=2
     0089                           1- 1221     _00349_DS_:
                                    1- 1222     	.line	506, "main.c"; 	else if(count60s < 3500)
     0089 210D                      1- 1223     	MOVIA	0x0d
                                    1- 1224     	BANKSEL	_count60s
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 04rr                      1- 1225     	SUBAR	(_count60s + 1),W
     008C 0903                      1- 1226     	BTRSS	STATUS,2
     008D 3rrr                      1- 1227     	LGOTO	_00444_DS_
     008E 21AC                      1- 1228     	MOVIA	0xac
     008F 04rr                      1- 1229     	SUBAR	_count60s,W
     0090                           1- 1230     _00444_DS_:
     0090 0C03                      1- 1231     	BTRSC	STATUS,0
     0091 3rrr                      1- 1232     	LGOTO	_00346_DS_
                                    1- 1233     	.line	508, "main.c"; 	RDUTY = 100;
     0092 2164                      1- 1234     	MOVIA	0x64
                                    1- 1235     	BANKSEL	_RDUTY
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 00rr                      1- 1236     	MOVAR	_RDUTY
     0095 3rrr                      1- 1237     	LGOTO	_00376_DS_
                                    1- 1238     ;;unsigned compare: left < lit (0xFA0=4000), size=2
     0096                           1- 1239     _00346_DS_:
                                    1- 1240     	.line	510, "main.c"; 	else if(count60s < 4000)
     0096 210F                      1- 1241     	MOVIA	0x0f
                                    1- 1242     	BANKSEL	_count60s
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 04rr                      1- 1243     	SUBAR	(_count60s + 1),W
     0099 0903                      1- 1244     	BTRSS	STATUS,2
     009A 3rrr                      1- 1245     	LGOTO	_00445_DS_
     009B 21A0                      1- 1246     	MOVIA	0xa0
     009C 04rr                      1- 1247     	SUBAR	_count60s,W
     009D                           1- 1248     _00445_DS_:
     009D 0C03                      1- 1249     	BTRSC	STATUS,0
     009E 3rrr                      1- 1250     	LGOTO	_00343_DS_
                                    1- 1251     	.line	512, "main.c"; 	--GDUTY;
                                    1- 1252     	BANKSEL	_GDUTY
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 06rr                      1- 1253     	DECR	_GDUTY,F
     00A1 3rrr                      1- 1254     	LGOTO	_00376_DS_
                                    1- 1255     ;;unsigned compare: left < lit (0x1194=4500), size=2
     00A2                           1- 1256     _00343_DS_:
                                    1- 1257     	.line	514, "main.c"; 	else if(count60s < 4500)
     00A2 2111                      1- 1258     	MOVIA	0x11
                                    1- 1259     	BANKSEL	_count60s
     00A3 rrrr                      3-   71 m1      .banksel ram_address
     00A4 04rr                      1- 1260     	SUBAR	(_count60s + 1),W
     00A5 0903                      1- 1261     	BTRSS	STATUS,2
     00A6 3rrr                      1- 1262     	LGOTO	_00446_DS_
     00A7 2194                      1- 1263     	MOVIA	0x94
     00A8 04rr                      1- 1264     	SUBAR	_count60s,W
     00A9                           1- 1265     _00446_DS_:
     00A9 0C03                      1- 1266     	BTRSC	STATUS,0
     00AA 3rrr                      1- 1267     	LGOTO	_00340_DS_
                                    1- 1268     	.line	516, "main.c"; 	GDUTY = 0;
                                    1- 1269     	BANKSEL	_GDUTY
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 02rr                      1- 1270     	CLRR	_GDUTY
     00AD 3rrr                      1- 1271     	LGOTO	_00376_DS_
                                    1- 1272     ;;unsigned compare: left < lit (0x1388=5000), size=2
     00AE                           1- 1273     _00340_DS_:
                                    1- 1274     	.line	518, "main.c"; 	else if(count60s < 5000)
     00AE 2113                      1- 1275     	MOVIA	0x13
                                    1- 1276     	BANKSEL	_count60s
     00AF rrrr                      3-   71 m1      .banksel ram_address
     00B0 04rr                      1- 1277     	SUBAR	(_count60s + 1),W
     00B1 0903                      1- 1278     	BTRSS	STATUS,2
     00B2 3rrr                      1- 1279     	LGOTO	_00447_DS_
     00B3 2188                      1- 1280     	MOVIA	0x88
     00B4 04rr                      1- 1281     	SUBAR	_count60s,W
     00B5                           1- 1282     _00447_DS_:
     00B5 0C03                      1- 1283     	BTRSC	STATUS,0
     00B6 3rrr                      1- 1284     	LGOTO	_00337_DS_
                                    1- 1285     	.line	520, "main.c"; 	++BDUTY;
                                    1- 1286     	BANKSEL	_BDUTY
     00B7 rrrr                      3-   71 m1      .banksel ram_address
     00B8 05rr                      1- 1287     	INCR	_BDUTY,F
     00B9 3rrr                      1- 1288     	LGOTO	_00376_DS_
                                    1- 1289     ;;unsigned compare: left < lit (0x157C=5500), size=2
     00BA                           1- 1290     _00337_DS_:
                                    1- 1291     	.line	522, "main.c"; 	else if(count60s < 5500)
     00BA 2115                      1- 1292     	MOVIA	0x15
                                    1- 1293     	BANKSEL	_count60s
     00BB rrrr                      3-   71 m1      .banksel ram_address
     00BC 04rr                      1- 1294     	SUBAR	(_count60s + 1),W
     00BD 0903                      1- 1295     	BTRSS	STATUS,2
     00BE 3rrr                      1- 1296     	LGOTO	_00448_DS_
     00BF 217C                      1- 1297     	MOVIA	0x7c
     00C0 04rr                      1- 1298     	SUBAR	_count60s,W
     00C1                           1- 1299     _00448_DS_:
     00C1 0C03                      1- 1300     	BTRSC	STATUS,0
     00C2 3rrr                      1- 1301     	LGOTO	_00334_DS_
                                    1- 1302     	.line	524, "main.c"; 	BDUTY = 100;
     00C3 2164                      1- 1303     	MOVIA	0x64
                                    1- 1304     	BANKSEL	_BDUTY
     00C4 rrrr                      3-   71 m1      .banksel ram_address
     00C5 00rr                      1- 1305     	MOVAR	_BDUTY
     00C6 3rrr                      1- 1306     	LGOTO	_00376_DS_
                                    1- 1307     ;;unsigned compare: left < lit (0x170C=5900), size=2
     00C7                           1- 1308     _00334_DS_:
                                    1- 1309     	.line	526, "main.c"; 	else if(count60s < 5900)
     00C7 2117                      1- 1310     	MOVIA	0x17
                                    1- 1311     	BANKSEL	_count60s
     00C8 rrrr                      3-   71 m1      .banksel ram_address
     00C9 04rr                      1- 1312     	SUBAR	(_count60s + 1),W
     00CA 0903                      1- 1313     	BTRSS	STATUS,2
     00CB 3rrr                      1- 1314     	LGOTO	_00449_DS_
     00CC 210C                      1- 1315     	MOVIA	0x0c
     00CD 04rr                      1- 1316     	SUBAR	_count60s,W
     00CE                           1- 1317     _00449_DS_:
     00CE 0C03                      1- 1318     	BTRSC	STATUS,0
     00CF 3rrr                      1- 1319     	LGOTO	_00331_DS_
                                    1- 1320     	.line	528, "main.c"; 	--RDUTY;
                                    1- 1321     	BANKSEL	_RDUTY
     00D0 rrrr                      3-   71 m1      .banksel ram_address
     00D1 06rr                      1- 1322     	DECR	_RDUTY,F
     00D2 3rrr                      1- 1323     	LGOTO	_00376_DS_
                                    1- 1324     ;;unsigned compare: left < lit (0x1770=6000), size=2
     00D3                           1- 1325     _00331_DS_:
                                    1- 1326     	.line	530, "main.c"; 	else if(count60s < 6000)
     00D3 2117                      1- 1327     	MOVIA	0x17
                                    1- 1328     	BANKSEL	_count60s
     00D4 rrrr                      3-   71 m1      .banksel ram_address
     00D5 04rr                      1- 1329     	SUBAR	(_count60s + 1),W
     00D6 0903                      1- 1330     	BTRSS	STATUS,2
     00D7 3rrr                      1- 1331     	LGOTO	_00450_DS_
     00D8 2170                      1- 1332     	MOVIA	0x70
     00D9 04rr                      1- 1333     	SUBAR	_count60s,W
     00DA                           1- 1334     _00450_DS_:
     00DA 0C03                      1- 1335     	BTRSC	STATUS,0
     00DB 3rrr                      1- 1336     	LGOTO	_00376_DS_
                                    1- 1337     	.line	532, "main.c"; 	RDUTY = 20;
     00DC 2114                      1- 1338     	MOVIA	0x14
                                    1- 1339     	BANKSEL	_RDUTY
     00DD rrrr                      3-   71 m1      .banksel ram_address
     00DE 00rr                      1- 1340     	MOVAR	_RDUTY
                                    1- 1341     	.line	533, "main.c"; 	++GDUTY;
                                    1- 1342     	BANKSEL	_GDUTY
     00DF rrrr                      3-   71 m1      .banksel ram_address
     00E0 05rr                      1- 1343     	INCR	_GDUTY,F
     00E1                           1- 1344     _00376_DS_:
                                    1- 1345     	.line	536, "main.c"; 	if(++count60s == 6000)
                                    1- 1346     	BANKSEL	_count60s
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 05rr                      1- 1347     	INCR	_count60s,F
     00E3 0D03                      1- 1348     	BTRSC	STATUS,2
     00E4 05rr                      1- 1349     	INCR	(_count60s + 1),F
     00E5 01rr                      1- 1350     	MOVR	_count60s,W
     00E6 2470                      1- 1351     	XORIA	0x70
     00E7 0903                      1- 1352     	BTRSS	STATUS,2
     00E8 3rrr                      1- 1353     	LGOTO	_00379_DS_
     00E9 01rr                      1- 1354     	MOVR	(_count60s + 1),W
     00EA 2417                      1- 1355     	XORIA	0x17
     00EB 0903                      1- 1356     	BTRSS	STATUS,2
     00EC 3rrr                      1- 1357     	LGOTO	_00379_DS_
                                    1- 1358     	.line	537, "main.c"; 	count60s = 0;
     00ED 02rr                      1- 1359     	CLRR	_count60s
     00EE 02rr                      1- 1360     	CLRR	(_count60s + 1)
     00EF                           1- 1361     _00379_DS_:
                                    1- 1362     	.line	538, "main.c"; 	}
                                    1- 1363     	RETURN	
     00EF 0010                      3-   26 m1      ret
                                    1- 1364     ; exit point of _ledCon
                                    1- 1366     ;***
                                    1- 1367     ;  pBlock Stats: dbName = C
                                    1- 1368     ;***
                                    1- 1369     ;has an exit
                                    1- 1370     ;; Starting pCode block
                                    1- 1371     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1373     _pwmStop:
                                    1- 1374     ; 2 exit points
                                    1- 1375     	.line	455, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 1376     	CLRA	
     0001 00rr                      1- 1377     	SFUN	_T1CR1
                                    1- 1378     	.line	458, "main.c"; 	}
                                    1- 1379     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1380     ; exit point of _pwmStop
                                    1- 1382     ;***
                                    1- 1383     ;  pBlock Stats: dbName = C
                                    1- 1384     ;***
                                    1- 1385     ;has an exit
                                    1- 1386     ;1 compiler assigned register :
                                    1- 1387     ;   r0x103D
                                    1- 1388     ;; Starting pCode block
                                    1- 1389     .segment "code"; module=main, function=_pwmStart
     0000                           1- 1391     _pwmStart:
                                    1- 1392     ; 2 exit points
                                    1- 1393     	.line	443, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 1394     	SFUNR	_T1CR1
                                    1- 1395     	BANKSEL	r0x103D
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1396     	MOVAR	r0x103D
     0003 0Frr                      1- 1397     	BTRSC	r0x103D,7
                                    1- 1398     	.line	444, "main.c"; 	return;
     0004 3rrr                      1- 1399     	LGOTO	_00319_DS_
                                    1- 1400     	.line	445, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1401     	CLRR	_TMRH
                                    1- 1402     	.line	446, "main.c"; 	TMR1 = 0x11;							//频率为110K
     0006 2111                      1- 1403     	MOVIA	0x11
     0007 00rr                      1- 1404     	SFUN	_TMR1
                                    1- 1405     	.line	447, "main.c"; 	PWM1DUTY = 0x08;				// 		
     0008 2108                      1- 1406     	MOVIA	0x08
     0009 00rr                      1- 1407     	SFUN	_PWM1DUTY
                                    1- 1408     	.line	449, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     000A 0200                      1- 1409     	CLRA	
     000B 00rr                      1- 1410     	SFUN	_T1CR2
                                    1- 1411     	.line	450, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 1412     	MOVIA	0x83
     000D 00rr                      1- 1413     	SFUN	_T1CR1
     000E                           1- 1414     _00319_DS_:
                                    1- 1415     	.line	451, "main.c"; 	}
                                    1- 1416     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1417     ; exit point of _pwmStart
                                    1- 1419     ;***
                                    1- 1420     ;  pBlock Stats: dbName = C
                                    1- 1421     ;***
                                    1- 1422     ;3 compiler assigned registers:
                                    1- 1423     ;   r0x103E
                                    1- 1424     ;   STK00
                                    1- 1425     ;   r0x103F
                                    1- 1426     ;; Starting pCode block
                                    1- 1427     .segment "code"; module=main, function=_setPWMdutyG
                                    1- 1429     ;local variable name mapping:
     0000                           1- 1432     _setPWMdutyG:
                                    1- 1433     ; 0 exit points
                                    1- 1434     	.line	431, "main.c"; 	void setPWMdutyG(char portPin,char duty)
                                    1- 1435     	BANKSEL	r0x103E
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1436     	MOVAR	r0x103E
     0002 01rr                      1- 1437     	MOVR	STK00,W
                                    1- 1438     	BANKSEL	r0x103F
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1439     	MOVAR	r0x103F
                                    1- 1440     	.line	433, "main.c"; 	if(ledCount <= duty)
                                    1- 1441     	BANKSEL	_ledCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1442     	MOVR	_ledCount,W
                                    1- 1443     	BANKSEL	r0x103F
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 04rr                      1- 1444     	SUBAR	r0x103F,W
     0009 0803                      1- 1445     	BTRSS	STATUS,0
     000A 3rrr                      1- 1446     	LGOTO	_00308_DS_
                                    1- 1447     	.line	434, "main.c"; 	PORTA |= portPin;
                                    1- 1448     	BANKSEL	r0x103E
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1449     	MOVR	r0x103E,W
     000D 11rr                      1- 1450     	IORAR	_PORTA,F
     000E 3rrr                      1- 1451     	LGOTO	_00309_DS_
     000F                           1- 1452     _00308_DS_:
                                    1- 1453     	.line	436, "main.c"; 	PORTA &= (~portPin);
                                    1- 1454     	BANKSEL	r0x103E
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 07rr                      1- 1455     	COMR	r0x103E,W
     0011 00rr                      1- 1456     	MOVAR	r0x103E
     0012 10rr                      1- 1457     	ANDAR	_PORTA,F
     0013                           1- 1458     _00309_DS_:
                                    1- 1459     	.line	437, "main.c"; 	if(ledCount == 100)
                                    1- 1460     	BANKSEL	_ledCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1461     	MOVR	_ledCount,W
     0015 2464                      1- 1462     	XORIA	0x64
     0016 0D03                      1- 1463     	BTRSC	STATUS,2
                                    1- 1464     	.line	438, "main.c"; 	ledCount = 0;
     0017 02rr                      1- 1465     	CLRR	_ledCount
                                    1- 1466     	.line	439, "main.c"; 	}
                                    1- 1467     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 1469     ;***
                                    1- 1470     ;  pBlock Stats: dbName = C
                                    1- 1471     ;***
                                    1- 1472     ;3 compiler assigned registers:
                                    1- 1473     ;   r0x1040
                                    1- 1474     ;   STK00
                                    1- 1475     ;   r0x1041
                                    1- 1476     ;; Starting pCode block
                                    1- 1477     .segment "code"; module=main, function=_setPWMduty
                                    1- 1479     ;local variable name mapping:
     0000                           1- 1482     _setPWMduty:
                                    1- 1483     ; 0 exit points
                                    1- 1484     	.line	420, "main.c"; 	void setPWMduty(char portPin,char duty)
                                    1- 1485     	BANKSEL	r0x1040
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1486     	MOVAR	r0x1040
     0002 01rr                      1- 1487     	MOVR	STK00,W
                                    1- 1488     	BANKSEL	r0x1041
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1489     	MOVAR	r0x1041
                                    1- 1490     	.line	422, "main.c"; 	if(ledCount <= duty)
                                    1- 1491     	BANKSEL	_ledCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1492     	MOVR	_ledCount,W
                                    1- 1493     	BANKSEL	r0x1041
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 04rr                      1- 1494     	SUBAR	r0x1041,W
     0009 0803                      1- 1495     	BTRSS	STATUS,0
     000A 3rrr                      1- 1496     	LGOTO	_00298_DS_
                                    1- 1497     	.line	423, "main.c"; 	PORTB |= portPin;
                                    1- 1498     	BANKSEL	r0x1040
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1499     	MOVR	r0x1040,W
     000D 11rr                      1- 1500     	IORAR	_PORTB,F
     000E 3rrr                      1- 1501     	LGOTO	_00299_DS_
     000F                           1- 1502     _00298_DS_:
                                    1- 1503     	.line	425, "main.c"; 	PORTB &= (~portPin);
                                    1- 1504     	BANKSEL	r0x1040
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 07rr                      1- 1505     	COMR	r0x1040,W
     0011 00rr                      1- 1506     	MOVAR	r0x1040
     0012 10rr                      1- 1507     	ANDAR	_PORTB,F
     0013                           1- 1508     _00299_DS_:
                                    1- 1509     	.line	426, "main.c"; 	if(ledCount == 100)
                                    1- 1510     	BANKSEL	_ledCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1511     	MOVR	_ledCount,W
     0015 2464                      1- 1512     	XORIA	0x64
     0016 0D03                      1- 1513     	BTRSC	STATUS,2
                                    1- 1514     	.line	427, "main.c"; 	ledCount = 0;
     0017 02rr                      1- 1515     	CLRR	_ledCount
                                    1- 1516     	.line	428, "main.c"; 	}
                                    1- 1517     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 1519     ;***
                                    1- 1520     ;  pBlock Stats: dbName = C
                                    1- 1521     ;***
                                    1- 1522     ;functions called:
                                    1- 1523     ;   _pwmStart
                                    1- 1524     ;   _pwmStop
                                    1- 1525     ;   _pwmStart
                                    1- 1526     ;   _pwmStop
                                    1- 1527     ;   _pwmStart
                                    1- 1528     ;   _pwmStop
                                    1- 1529     ;   _pwmStart
                                    1- 1530     ;   _pwmStop
                                    1- 1531     ;; Starting pCode block
                                    1- 1532     .segment "code"; module=main, function=_pwmCtr
     0000                           1- 1534     _pwmCtr:
                                    1- 1535     ; 0 exit points
                                    1- 1536     	.line	387, "main.c"; 	if(++count500ms >= 100)
                                    1- 1537     	BANKSEL	_count500ms
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1538     	INCR	_count500ms,F
                                    1- 1539     ;;unsigned compare: left < lit (0x64=100), size=1
     0002 2164                      1- 1540     	MOVIA	0x64
     0003 04rr                      1- 1541     	SUBAR	_count500ms,W
     0004 0C03                      1- 1542     	BTRSC	STATUS,0
                                    1- 1543     	.line	389, "main.c"; 	count500ms = 0;
     0005 02rr                      1- 1544     	CLRR	_count500ms
                                    1- 1545     	.line	391, "main.c"; 	if(workStep == 1)
                                    1- 1546     	BANKSEL	_workStep
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1- 1547     	MOVR	_workStep,W
     0008 2401                      1- 1548     	XORIA	0x01
     0009 0903                      1- 1549     	BTRSS	STATUS,2
     000A 3rrr                      1- 1550     	LGOTO	_00290_DS_
                                    1- 1551     	.line	393, "main.c"; 	pwmStart();
     000B 2rrr                      1- 1552     	LCALL	_pwmStart
     000C 3rrr                      1- 1553     	LGOTO	_00292_DS_
     000D                           1- 1554     _00290_DS_:
                                    1- 1555     	.line	395, "main.c"; 	else if(workStep == 2)
                                    1- 1556     	BANKSEL	_workStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 1557     	MOVR	_workStep,W
     000F 2402                      1- 1558     	XORIA	0x02
     0010 0903                      1- 1559     	BTRSS	STATUS,2
     0011 3rrr                      1- 1560     	LGOTO	_00287_DS_
                                    1- 1561     	.line	397, "main.c"; 	if(count500ms == 0)
                                    1- 1562     	BANKSEL	_count500ms
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1563     	MOVR	_count500ms,W
     0014 0903                      1- 1564     	BTRSS	STATUS,2
     0015 3rrr                      1- 1565     	LGOTO	_00292_DS_
                                    1- 1566     	.line	400, "main.c"; 	if(step2Count == 8)
                                    1- 1567     	BANKSEL	_step2Count
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1568     	MOVR	_step2Count,W
     0018 2408                      1- 1569     	XORIA	0x08
     0019 0D03                      1- 1570     	BTRSC	STATUS,2
                                    1- 1571     	.line	401, "main.c"; 	pwmStop();
     001A 2rrr                      1- 1572     	LCALL	_pwmStop
                                    1- 1573     	.line	402, "main.c"; 	if(step2Count >= 16)
     001B 2110                      1- 1574     	MOVIA	0x10
                                    1- 1575     	BANKSEL	_step2Count
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 04rr                      1- 1576     	SUBAR	_step2Count,W
     001E 0803                      1- 1577     	BTRSS	STATUS,0
     001F 3rrr                      1- 1578     	LGOTO	_00281_DS_
                                    1- 1579     	.line	404, "main.c"; 	step2Count = 0;
     0020 02rr                      1- 1580     	CLRR	_step2Count
                                    1- 1581     	.line	405, "main.c"; 	pwmStart();
     0021 2rrr                      1- 1582     	LCALL	_pwmStart
     0022                           1- 1583     _00281_DS_:
                                    1- 1584     	.line	407, "main.c"; 	step2Count++;
                                    1- 1585     	BANKSEL	_step2Count
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1- 1586     	INCR	_step2Count,F
     0024 3rrr                      1- 1587     	LGOTO	_00292_DS_
     0025                           1- 1588     _00287_DS_:
                                    1- 1589     	.line	410, "main.c"; 	else if(workStep == 0)
                                    1- 1590     	BANKSEL	_workStep
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 1591     	MOVR	_workStep,W
     0027 0D03                      1- 1592     	BTRSC	STATUS,2
                                    1- 1593     	.line	412, "main.c"; 	pwmStop();
     0028 2rrr                      1- 1594     	LCALL	_pwmStop
     0029                           1- 1595     _00292_DS_:
                                    1- 1596     	.line	416, "main.c"; 	}
                                    1- 1597     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1- 1599     ;***
                                    1- 1600     ;  pBlock Stats: dbName = C
                                    1- 1601     ;***
                                    1- 1602     ;has an exit
                                    1- 1603     ;functions called:
                                    1- 1604     ;   _delay
                                    1- 1605     ;   _F_wait_eoc
                                    1- 1606     ;   _delay
                                    1- 1607     ;   _F_wait_eoc
                                    1- 1608     ;7 compiler assigned registers:
                                    1- 1609     ;   r0x1042
                                    1- 1610     ;   STK00
                                    1- 1611     ;   r0x1043
                                    1- 1612     ;   r0x1044
                                    1- 1613     ;   r0x1045
                                    1- 1614     ;   r0x1046
                                    1- 1615     ;   r0x1047
                                    1- 1616     ;; Starting pCode block
                                    1- 1617     .segment "code"; module=main, function=_F_AIN9_Convert
                                    1- 1619     ;local variable name mapping:
     0000                           1- 1622     _F_AIN9_Convert:
                                    1- 1623     ; 2 exit points
                                    1- 1624     	.line	368, "main.c"; 	void F_AIN9_Convert(char count)
                                    1- 1625     	BANKSEL	r0x1042
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1626     	MOVAR	r0x1042
                                    1- 1627     	.line	370, "main.c"; 	R_AIN9_DATA=R_AIN9_DATA_LB=0x00;   
                                    1- 1628     	BANKSEL	_R_AIN9_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1629     	CLRR	_R_AIN9_DATA_LB
                                    1- 1630     	BANKSEL	_R_AIN9_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1631     	CLRR	_R_AIN9_DATA
     0006 02rr                      1- 1632     	CLRR	(_R_AIN9_DATA + 1)
                                    1- 1633     	.line	372, "main.c"; 	ADMD  = 0x90 | C_ADC_PB4;				// Select AIN6(PB1) pad as ADC input
     0007 2199                      1- 1634     	MOVIA	0x99
     0008 00rr                      1- 1635     	MOVAR	_ADMD
                                    1- 1636     	.line	373, "main.c"; 	delay(200);	
     0009 21C8                      1- 1637     	MOVIA	0xc8
     000A 00rr                      1- 1638     	MOVAR	STK00
     000B 2100                      1- 1639     	MOVIA	0x00
     000C 2rrr                      1- 1640     	LCALL	_delay
                                    1- 1641     	.line	374, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1642     	MOVIA	0x01
                                    1- 1643     	BANKSEL	r0x1043
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1644     	MOVAR	r0x1043
     0010                           1- 1645     _00269_DS_:
                                    1- 1646     	BANKSEL	r0x1043
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1647     	MOVR	r0x1043,W
                                    1- 1648     	BANKSEL	r0x1042
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1649     	SUBAR	r0x1042,W
     0014 0803                      1- 1650     	BTRSS	STATUS,0
     0015 3rrr                      1- 1651     	LGOTO	_00271_DS_
                                    1- 1652     	.line	376, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1653     	BSR	_ADMDbits,6
                                    1- 1654     	.line	377, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1655     	LCALL	_F_wait_eoc
                                    1- 1656     	.line	378, "main.c"; 	R_AIN9_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1657     	MOVIA	0x0f
     0019 10rr                      1- 1658     	ANDAR	_ADR,W
                                    1- 1659     ;;3	MOVAR	r0x1044
                                    1- 1660     	BANKSEL	_R_AIN9_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1661     	ADDAR	_R_AIN9_DATA_LB,F
                                    1- 1662     	.line	379, "main.c"; 	R_AIN9_DATA    += ADD; 
     001C 01rr                      1- 1663     	MOVR	_ADD,W
                                    1- 1664     	BANKSEL	r0x1044
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1665     	MOVAR	r0x1044
                                    1- 1666     ;;1	CLRR	r0x1045
                                    1- 1667     ;;105	MOVR	r0x1044,W
                                    1- 1668     ;;103	MOVAR	r0x1046
     001F 2100                      1- 1669     	MOVIA	0x00
                                    1- 1670     	BANKSEL	r0x1047
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1671     	MOVAR	r0x1047
                                    1- 1672     ;;104	MOVR	r0x1046,W
                                    1- 1673     	BANKSEL	r0x1044
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1674     	MOVR	r0x1044,W
                                    1- 1675     	BANKSEL	_R_AIN9_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1676     	ADDAR	_R_AIN9_DATA,F
                                    1- 1677     	BANKSEL	r0x1047
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1678     	MOVR	r0x1047,W
     0028 0C03                      1- 1679     	BTRSC	STATUS,0
     0029 05rr                      1- 1680     	INCR	r0x1047,W
     002A 0D03                      1- 1681     	BTRSC	STATUS,2
     002B 3rrr                      1- 1682     	LGOTO	_00002_DS_
                                    1- 1683     	BANKSEL	_R_AIN9_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1684     	ADDAR	(_R_AIN9_DATA + 1),F
     002E                           1- 1685     _00002_DS_:
                                    1- 1686     	.line	374, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1687     	BANKSEL	r0x1043
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1688     	INCR	r0x1043,F
     0030 3rrr                      1- 1689     	LGOTO	_00269_DS_
     0031                           1- 1690     _00271_DS_:
                                    1- 1691     	.line	381, "main.c"; 	}
                                    1- 1692     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1693     ; exit point of _F_AIN9_Convert
                                    1- 1695     ;***
                                    1- 1696     ;  pBlock Stats: dbName = C
                                    1- 1697     ;***
                                    1- 1698     ;has an exit
                                    1- 1699     ;functions called:
                                    1- 1700     ;   _delay
                                    1- 1701     ;   _F_wait_eoc
                                    1- 1702     ;   _delay
                                    1- 1703     ;   _F_wait_eoc
                                    1- 1704     ;7 compiler assigned registers:
                                    1- 1705     ;   r0x1048
                                    1- 1706     ;   STK00
                                    1- 1707     ;   r0x1049
                                    1- 1708     ;   r0x104A
                                    1- 1709     ;   r0x104B
                                    1- 1710     ;   r0x104C
                                    1- 1711     ;   r0x104D
                                    1- 1712     ;; Starting pCode block
                                    1- 1713     .segment "code"; module=main, function=_F_AIN5_Convert
                                    1- 1715     ;local variable name mapping:
     0000                           1- 1718     _F_AIN5_Convert:
                                    1- 1719     ; 2 exit points
                                    1- 1720     	.line	352, "main.c"; 	void F_AIN5_Convert(char count)
                                    1- 1721     	BANKSEL	r0x1048
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1722     	MOVAR	r0x1048
                                    1- 1723     	.line	354, "main.c"; 	R_AIN5_DATA=R_AIN5_DATA_LB=0x00;   
                                    1- 1724     	BANKSEL	_R_AIN5_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1725     	CLRR	_R_AIN5_DATA_LB
                                    1- 1726     	BANKSEL	_R_AIN5_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1727     	CLRR	_R_AIN5_DATA
     0006 02rr                      1- 1728     	CLRR	(_R_AIN5_DATA + 1)
                                    1- 1729     	.line	356, "main.c"; 	ADMD  = 0x90 | C_ADC_PB0;				// Select AIN6(PB1) pad as ADC input
     0007 2195                      1- 1730     	MOVIA	0x95
     0008 00rr                      1- 1731     	MOVAR	_ADMD
                                    1- 1732     	.line	357, "main.c"; 	delay(200);	
     0009 21C8                      1- 1733     	MOVIA	0xc8
     000A 00rr                      1- 1734     	MOVAR	STK00
     000B 2100                      1- 1735     	MOVIA	0x00
     000C 2rrr                      1- 1736     	LCALL	_delay
                                    1- 1737     	.line	358, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1738     	MOVIA	0x01
                                    1- 1739     	BANKSEL	r0x1049
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1740     	MOVAR	r0x1049
     0010                           1- 1741     _00260_DS_:
                                    1- 1742     	BANKSEL	r0x1049
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1743     	MOVR	r0x1049,W
                                    1- 1744     	BANKSEL	r0x1048
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1745     	SUBAR	r0x1048,W
     0014 0803                      1- 1746     	BTRSS	STATUS,0
     0015 3rrr                      1- 1747     	LGOTO	_00262_DS_
                                    1- 1748     	.line	360, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1749     	BSR	_ADMDbits,6
                                    1- 1750     	.line	361, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1751     	LCALL	_F_wait_eoc
                                    1- 1752     	.line	362, "main.c"; 	R_AIN5_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1753     	MOVIA	0x0f
     0019 10rr                      1- 1754     	ANDAR	_ADR,W
                                    1- 1755     ;;3	MOVAR	r0x104A
                                    1- 1756     	BANKSEL	_R_AIN5_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1757     	ADDAR	_R_AIN5_DATA_LB,F
                                    1- 1758     	.line	363, "main.c"; 	R_AIN5_DATA    += ADD; 
     001C 01rr                      1- 1759     	MOVR	_ADD,W
                                    1- 1760     	BANKSEL	r0x104A
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1761     	MOVAR	r0x104A
                                    1- 1762     ;;1	CLRR	r0x104B
                                    1- 1763     ;;102	MOVR	r0x104A,W
                                    1- 1764     ;;100	MOVAR	r0x104C
     001F 2100                      1- 1765     	MOVIA	0x00
                                    1- 1766     	BANKSEL	r0x104D
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1767     	MOVAR	r0x104D
                                    1- 1768     ;;101	MOVR	r0x104C,W
                                    1- 1769     	BANKSEL	r0x104A
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1770     	MOVR	r0x104A,W
                                    1- 1771     	BANKSEL	_R_AIN5_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1772     	ADDAR	_R_AIN5_DATA,F
                                    1- 1773     	BANKSEL	r0x104D
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1774     	MOVR	r0x104D,W
     0028 0C03                      1- 1775     	BTRSC	STATUS,0
     0029 05rr                      1- 1776     	INCR	r0x104D,W
     002A 0D03                      1- 1777     	BTRSC	STATUS,2
     002B 3rrr                      1- 1778     	LGOTO	_00003_DS_
                                    1- 1779     	BANKSEL	_R_AIN5_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1780     	ADDAR	(_R_AIN5_DATA + 1),F
     002E                           1- 1781     _00003_DS_:
                                    1- 1782     	.line	358, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1783     	BANKSEL	r0x1049
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1784     	INCR	r0x1049,F
     0030 3rrr                      1- 1785     	LGOTO	_00260_DS_
     0031                           1- 1786     _00262_DS_:
                                    1- 1787     	.line	365, "main.c"; 	}
                                    1- 1788     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1789     ; exit point of _F_AIN5_Convert
                                    1- 1791     ;***
                                    1- 1792     ;  pBlock Stats: dbName = C
                                    1- 1793     ;***
                                    1- 1794     ;has an exit
                                    1- 1795     ;functions called:
                                    1- 1796     ;   _F_AIN5_Convert
                                    1- 1797     ;   __divuint
                                    1- 1798     ;   _checkLowWater
                                    1- 1799     ;   __divuchar
                                    1- 1800     ;   __moduchar
                                    1- 1801     ;   _F_AIN5_Convert
                                    1- 1802     ;   __divuint
                                    1- 1803     ;   _checkLowWater
                                    1- 1804     ;   __divuchar
                                    1- 1805     ;   __moduchar
                                    1- 1806     ;7 compiler assigned registers:
                                    1- 1807     ;   r0x1052
                                    1- 1808     ;   r0x1053
                                    1- 1809     ;   r0x1054
                                    1- 1810     ;   r0x1055
                                    1- 1811     ;   STK02
                                    1- 1812     ;   STK01
                                    1- 1813     ;   STK00
                                    1- 1814     ;; Starting pCode block
                                    1- 1815     .segment "code"; module=main, function=_checkBatAD
                                    1- 1817     ;local variable name mapping:
     0000                           1- 1819     _checkBatAD:
                                    1- 1820     ; 2 exit points
                                    1- 1821     	.line	311, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA_LB = 0x00;
                                    1- 1822     	BANKSEL	_R_AIN5_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1823     	CLRR	_R_AIN5_DATA_LB
                                    1- 1824     	BANKSEL	_R_AIN5_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1825     	CLRR	_R_AIN5_DATA
     0004 02rr                      1- 1826     	CLRR	(_R_AIN5_DATA + 1)
                                    1- 1827     	.line	312, "main.c"; 	F_AIN5_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1828     	MOVIA	0x08
     0006 2rrr                      1- 1829     	LCALL	_F_AIN5_Convert
                                    1- 1830     	.line	313, "main.c"; 	R_AIN5_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1831     	BANKSEL	_R_AIN5_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1832     	SWAPR	(_R_AIN5_DATA + 1),W
     0009 22F0                      1- 1833     	ANDIA	0xf0
     000A 00rr                      1- 1834     	MOVAR	(_R_AIN5_DATA + 1)
     000B 15rr                      1- 1835     	SWAPR	_R_AIN5_DATA,W
     000C 00rr                      1- 1836     	MOVAR	_R_AIN5_DATA
     000D 220F                      1- 1837     	ANDIA	0x0f
     000E 11rr                      1- 1838     	IORAR	(_R_AIN5_DATA + 1),F
     000F 12rr                      1- 1839     	XORAR	_R_AIN5_DATA,F
                                    1- 1840     	.line	314, "main.c"; 	R_AIN5_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1841     	MOVIA	0xf0
                                    1- 1842     	BANKSEL	_R_AIN5_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1843     	ANDAR	_R_AIN5_DATA_LB,F
                                    1- 1844     	.line	315, "main.c"; 	R_AIN5_DATA += R_AIN5_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1845     	MOVR	_R_AIN5_DATA_LB,W
                                    1- 1846     	BANKSEL	r0x1052
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1847     	MOVAR	r0x1052
                                    1- 1848     	BANKSEL	r0x1053
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 02rr                      1- 1849     	CLRR	r0x1053
                                    1- 1850     	BANKSEL	r0x1052
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1851     	MOVR	r0x1052,W
     001A 2100                      1- 1852     	MOVIA	0x00
                                    1- 1853     	BANKSEL	r0x1055
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1854     	MOVAR	r0x1055
                                    1- 1855     ;;107	MOVR	r0x1054,W
                                    1- 1856     	BANKSEL	r0x1052
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1857     	MOVR	r0x1052,W
                                    1- 1858     	BANKSEL	r0x1054
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 1859     	MOVAR	r0x1054
                                    1- 1860     	BANKSEL	_R_AIN5_DATA
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 03rr                      1- 1861     	ADDAR	_R_AIN5_DATA,F
                                    1- 1862     	BANKSEL	r0x1055
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1- 1863     	MOVR	r0x1055,W
     0025 0C03                      1- 1864     	BTRSC	STATUS,0
     0026 05rr                      1- 1865     	INCR	r0x1055,W
     0027 0D03                      1- 1866     	BTRSC	STATUS,2
     0028 3rrr                      1- 1867     	LGOTO	_00004_DS_
                                    1- 1868     	BANKSEL	_R_AIN5_DATA
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 03rr                      1- 1869     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1- 1870     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002B                           1- 1871     _00004_DS_:
                                    1- 1872     	.line	316, "main.c"; 	R_AIN5_DATA >>=3;					// R_AIN0_DATA divided 8	
     002B 1C03                      1- 1873     	BCR	STATUS,0
                                    1- 1874     	BANKSEL	_R_AIN5_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 13rr                      1- 1875     	RRR	(_R_AIN5_DATA + 1),F
     002E 13rr                      1- 1876     	RRR	_R_AIN5_DATA,F
                                    1- 1877     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002F 1C03                      1- 1878     	BCR	STATUS,0
     0030 13rr                      1- 1879     	RRR	(_R_AIN5_DATA + 1),F
     0031 13rr                      1- 1880     	RRR	_R_AIN5_DATA,F
                                    1- 1881     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0032 1C03                      1- 1882     	BCR	STATUS,0
     0033 13rr                      1- 1883     	RRR	(_R_AIN5_DATA + 1),F
     0034 13rr                      1- 1884     	RRR	_R_AIN5_DATA,F
                                    1- 1885     	.line	318, "main.c"; 	sumR_AIN5_DATA += R_AIN5_DATA;
     0035 01rr                      1- 1886     	MOVR	_R_AIN5_DATA,W
                                    1- 1887     	BANKSEL	_sumR_AIN5_DATA
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 03rr                      1- 1888     	ADDAR	_sumR_AIN5_DATA,F
                                    1- 1889     	BANKSEL	_R_AIN5_DATA
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 01rr                      1- 1890     	MOVR	(_R_AIN5_DATA + 1),W
     003A 0C03                      1- 1891     	BTRSC	STATUS,0
     003B 05rr                      1- 1892     	INCR	(_R_AIN5_DATA + 1),W
     003C 0D03                      1- 1893     	BTRSC	STATUS,2
     003D 3rrr                      1- 1894     	LGOTO	_00005_DS_
                                    1- 1895     	BANKSEL	_sumR_AIN5_DATA
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 03rr                      1- 1896     	ADDAR	(_sumR_AIN5_DATA + 1),F
     0040                           1- 1897     _00005_DS_:
                                    1- 1898     	.line	319, "main.c"; 	if(++addtime >=10)
                                    1- 1899     	BANKSEL	_addtime
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 05rr                      1- 1900     	INCR	_addtime,F
                                    1- 1901     ;;unsigned compare: left < lit (0xA=10), size=1
     0042 210A                      1- 1902     	MOVIA	0x0a
     0043 04rr                      1- 1903     	SUBAR	_addtime,W
     0044 0803                      1- 1904     	BTRSS	STATUS,0
     0045 3rrr                      1- 1905     	LGOTO	_00233_DS_
                                    1- 1906     	.line	321, "main.c"; 	R_AIN5_DATA = sumR_AIN5_DATA/addtime;
     0046 01rr                      1- 1907     	MOVR	_addtime,W
                                    1- 1908     	BANKSEL	r0x1052
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 1909     	MOVAR	r0x1052
                                    1- 1910     	BANKSEL	r0x1053
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 02rr                      1- 1911     	CLRR	r0x1053
                                    1- 1912     	BANKSEL	r0x1052
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1- 1913     	MOVR	r0x1052,W
     004D 00rr                      1- 1914     	MOVAR	STK02
     004E 2100                      1- 1915     	MOVIA	0x00
     004F 00rr                      1- 1916     	MOVAR	STK01
                                    1- 1917     	BANKSEL	_sumR_AIN5_DATA
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1- 1918     	MOVR	_sumR_AIN5_DATA,W
     0052 00rr                      1- 1919     	MOVAR	STK00
     0053 01rr                      1- 1920     	MOVR	(_sumR_AIN5_DATA + 1),W
     0054 2rrr                      1- 1921     	LCALL	__divuint
                                    1- 1922     	BANKSEL	_R_AIN5_DATA
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 00rr                      1- 1923     	MOVAR	(_R_AIN5_DATA + 1)
     0057 01rr                      1- 1924     	MOVR	STK00,W
     0058 00rr                      1- 1925     	MOVAR	_R_AIN5_DATA
                                    1- 1926     	.line	322, "main.c"; 	sumR_AIN5_DATA = 0;
                                    1- 1927     	BANKSEL	_sumR_AIN5_DATA
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 02rr                      1- 1928     	CLRR	_sumR_AIN5_DATA
     005B 02rr                      1- 1929     	CLRR	(_sumR_AIN5_DATA + 1)
                                    1- 1930     	.line	323, "main.c"; 	addtime = 0;
                                    1- 1931     	BANKSEL	_addtime
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 02rr                      1- 1932     	CLRR	_addtime
                                    1- 1933     	.line	324, "main.c"; 	checkLowWater();
     005E 2rrr                      1- 1934     	LCALL	_checkLowWater
                                    1- 1935     ;;unsigned compare: left < lit (0x69A=1690), size=2
     005F                           1- 1936     _00233_DS_:
                                    1- 1937     	.line	326, "main.c"; 	if(R_AIN5_DATA < 1690)
     005F 2106                      1- 1938     	MOVIA	0x06
                                    1- 1939     	BANKSEL	_R_AIN5_DATA
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 04rr                      1- 1940     	SUBAR	(_R_AIN5_DATA + 1),W
     0062 0903                      1- 1941     	BTRSS	STATUS,2
     0063 3rrr                      1- 1942     	LGOTO	_00252_DS_
     0064 219A                      1- 1943     	MOVIA	0x9a
     0065 04rr                      1- 1944     	SUBAR	_R_AIN5_DATA,W
     0066                           1- 1945     _00252_DS_:
     0066 0C03                      1- 1946     	BTRSC	STATUS,0
     0067 3rrr                      1- 1947     	LGOTO	_00238_DS_
                                    1- 1948     	.line	328, "main.c"; 	baiweiNum = 0;
                                    1- 1949     	BANKSEL	_baiweiNum
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 02rr                      1- 1950     	CLRR	_baiweiNum
                                    1- 1951     	.line	329, "main.c"; 	shiweiNum = 0;
                                    1- 1952     	BANKSEL	_shiweiNum
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 02rr                      1- 1953     	CLRR	_shiweiNum
                                    1- 1954     	.line	330, "main.c"; 	geweiNum = 0;
                                    1- 1955     	BANKSEL	_geweiNum
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 02rr                      1- 1956     	CLRR	_geweiNum
     006E 3rrr                      1- 1957     	LGOTO	_00240_DS_
                                    1- 1958     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1959     ;;unsigned compare: left >= lit (0x835=2101), size=2
     006F                           1- 1960     _00238_DS_:
                                    1- 1961     	.line	332, "main.c"; 	else if(R_AIN5_DATA > 2100)
     006F 2108                      1- 1962     	MOVIA	0x08
                                    1- 1963     	BANKSEL	_R_AIN5_DATA
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 04rr                      1- 1964     	SUBAR	(_R_AIN5_DATA + 1),W
     0072 0903                      1- 1965     	BTRSS	STATUS,2
     0073 3rrr                      1- 1966     	LGOTO	_00253_DS_
     0074 2135                      1- 1967     	MOVIA	0x35
     0075 04rr                      1- 1968     	SUBAR	_R_AIN5_DATA,W
     0076                           1- 1969     _00253_DS_:
     0076 0803                      1- 1970     	BTRSS	STATUS,0
     0077 3rrr                      1- 1971     	LGOTO	_00235_DS_
                                    1- 1972     	.line	334, "main.c"; 	baiweiNum = 1;
     0078 2101                      1- 1973     	MOVIA	0x01
                                    1- 1974     	BANKSEL	_baiweiNum
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 00rr                      1- 1975     	MOVAR	_baiweiNum
                                    1- 1976     	.line	335, "main.c"; 	shiweiNum = 0;
                                    1- 1977     	BANKSEL	_shiweiNum
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 02rr                      1- 1978     	CLRR	_shiweiNum
                                    1- 1979     	.line	336, "main.c"; 	geweiNum = 0;
                                    1- 1980     	BANKSEL	_geweiNum
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 02rr                      1- 1981     	CLRR	_geweiNum
     007F 3rrr                      1- 1982     	LGOTO	_00240_DS_
     0080                           1- 1983     _00235_DS_:
                                    1- 1984     	.line	340, "main.c"; 	baiweiNum = 0;
                                    1- 1985     	BANKSEL	_baiweiNum
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 02rr                      1- 1986     	CLRR	_baiweiNum
                                    1- 1987     	.line	341, "main.c"; 	char nbat = (R_AIN5_DATA - 1690)/4;
     0082 2166                      1- 1988     	MOVIA	0x66
                                    1- 1989     	BANKSEL	_R_AIN5_DATA
     0083 rrrr                      3-   71 m1      .banksel ram_address
     0084 03rr                      1- 1990     	ADDAR	_R_AIN5_DATA,W
                                    1- 1991     	BANKSEL	r0x1052
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 00rr                      1- 1992     	MOVAR	r0x1052
     0087 21F9                      1- 1993     	MOVIA	0xf9
                                    1- 1994     	BANKSEL	r0x1053
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 00rr                      1- 1995     	MOVAR	r0x1053
                                    1- 1996     	BANKSEL	_R_AIN5_DATA
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 01rr                      1- 1997     	MOVR	(_R_AIN5_DATA + 1),W
     008C 0C03                      1- 1998     	BTRSC	STATUS,0
     008D 05rr                      1- 1999     	INCR	(_R_AIN5_DATA + 1),W
     008E 0D03                      1- 2000     	BTRSC	STATUS,2
     008F 3rrr                      1- 2001     	LGOTO	_00006_DS_
                                    1- 2002     	BANKSEL	r0x1053
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 03rr                      1- 2003     	ADDAR	r0x1053,F
                                    1- 2004     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=0, offr=0
     0092                           1- 2005     _00006_DS_:
     0092 1C03                      1- 2006     	BCR	STATUS,0
                                    1- 2007     	BANKSEL	r0x1053
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 13rr                      1- 2008     	RRR	r0x1053,W
                                    1- 2009     	BANKSEL	r0x1055
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 00rr                      1- 2010     	MOVAR	r0x1055
                                    1- 2011     	BANKSEL	r0x1052
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 13rr                      1- 2012     	RRR	r0x1052,W
                                    1- 2013     	BANKSEL	r0x1054
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 00rr                      1- 2014     	MOVAR	r0x1054
                                    1- 2015     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     009B 1C03                      1- 2016     	BCR	STATUS,0
                                    1- 2017     	BANKSEL	r0x1055
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 13rr                      1- 2018     	RRR	r0x1055,F
                                    1- 2019     	BANKSEL	r0x1054
     009E rrrr                      3-   71 m1      .banksel ram_address
     009F 13rr                      1- 2020     	RRR	r0x1054,F
     00A0 01rr                      1- 2021     	MOVR	r0x1054,W
                                    1- 2022     	.line	342, "main.c"; 	shiweiNum = nbat/10;
     00A1 210A                      1- 2023     	MOVIA	0x0a
     00A2 00rr                      1- 2024     	MOVAR	STK00
                                    1- 2025     ;;106	MOVR	r0x1052,W
     00A3 01rr                      1- 2026     	MOVR	r0x1054,W
                                    1- 2027     	BANKSEL	r0x1052
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 00rr                      1- 2028     	MOVAR	r0x1052
     00A6 2rrr                      1- 2029     	LCALL	__divuchar
                                    1- 2030     	BANKSEL	_shiweiNum
     00A7 rrrr                      3-   71 m1      .banksel ram_address
     00A8 00rr                      1- 2031     	MOVAR	_shiweiNum
                                    1- 2032     	.line	343, "main.c"; 	geweiNum = nbat %10;
     00A9 210A                      1- 2033     	MOVIA	0x0a
     00AA 00rr                      1- 2034     	MOVAR	STK00
                                    1- 2035     	BANKSEL	r0x1052
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 01rr                      1- 2036     	MOVR	r0x1052,W
     00AD 2rrr                      1- 2037     	LCALL	__moduchar
                                    1- 2038     	BANKSEL	_geweiNum
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 00rr                      1- 2039     	MOVAR	_geweiNum
     00B0                           1- 2040     _00240_DS_:
                                    1- 2041     	.line	346, "main.c"; 	}
                                    1- 2042     	RETURN	
     00B0 0010                      3-   26 m1      ret
                                    1- 2043     ; exit point of _checkBatAD
                                    1- 2045     ;***
                                    1- 2046     ;  pBlock Stats: dbName = C
                                    1- 2047     ;***
                                    1- 2048     ;has an exit
                                    1- 2049     ;functions called:
                                    1- 2050     ;   _F_AIN9_Convert
                                    1- 2051     ;   _F_AIN9_Convert
                                    1- 2052     ;4 compiler assigned registers:
                                    1- 2053     ;   r0x104E
                                    1- 2054     ;   r0x104F
                                    1- 2055     ;   r0x1050
                                    1- 2056     ;   r0x1051
                                    1- 2057     ;; Starting pCode block
                                    1- 2058     .segment "code"; module=main, function=_checkLowWater
     0000                           1- 2060     _checkLowWater:
                                    1- 2061     ; 2 exit points
                                    1- 2062     	.line	287, "main.c"; 	R_AIN9_DATA = R_AIN9_DATA_LB = 0x00;
                                    1- 2063     	BANKSEL	_R_AIN9_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 2064     	CLRR	_R_AIN9_DATA_LB
                                    1- 2065     	BANKSEL	_R_AIN9_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 2066     	CLRR	_R_AIN9_DATA
     0004 02rr                      1- 2067     	CLRR	(_R_AIN9_DATA + 1)
                                    1- 2068     	.line	288, "main.c"; 	F_AIN9_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 2069     	MOVIA	0x08
     0006 2rrr                      1- 2070     	LCALL	_F_AIN9_Convert
                                    1- 2071     	.line	289, "main.c"; 	R_AIN9_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 2072     	BANKSEL	_R_AIN9_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 2073     	SWAPR	(_R_AIN9_DATA + 1),W
     0009 22F0                      1- 2074     	ANDIA	0xf0
     000A 00rr                      1- 2075     	MOVAR	(_R_AIN9_DATA + 1)
     000B 15rr                      1- 2076     	SWAPR	_R_AIN9_DATA,W
     000C 00rr                      1- 2077     	MOVAR	_R_AIN9_DATA
     000D 220F                      1- 2078     	ANDIA	0x0f
     000E 11rr                      1- 2079     	IORAR	(_R_AIN9_DATA + 1),F
     000F 12rr                      1- 2080     	XORAR	_R_AIN9_DATA,F
                                    1- 2081     	.line	290, "main.c"; 	R_AIN9_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 2082     	MOVIA	0xf0
                                    1- 2083     	BANKSEL	_R_AIN9_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 2084     	ANDAR	_R_AIN9_DATA_LB,F
                                    1- 2085     	.line	291, "main.c"; 	R_AIN9_DATA += R_AIN9_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 2086     	MOVR	_R_AIN9_DATA_LB,W
                                    1- 2087     	BANKSEL	r0x1050
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 2088     	MOVAR	r0x1050
                                    1- 2089     ;;1	MOVAR	r0x104E
                                    1- 2090     ;;1	CLRR	r0x104F
                                    1- 2091     ;;99	MOVR	r0x104E,W
     0016 2100                      1- 2092     	MOVIA	0x00
                                    1- 2093     	BANKSEL	r0x1051
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 2094     	MOVAR	r0x1051
                                    1- 2095     	BANKSEL	r0x1050
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 2096     	MOVR	r0x1050,W
                                    1- 2097     	BANKSEL	_R_AIN9_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 2098     	ADDAR	_R_AIN9_DATA,F
                                    1- 2099     	BANKSEL	r0x1051
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 2100     	MOVR	r0x1051,W
     001F 0C03                      1- 2101     	BTRSC	STATUS,0
     0020 05rr                      1- 2102     	INCR	r0x1051,W
     0021 0D03                      1- 2103     	BTRSC	STATUS,2
     0022 3rrr                      1- 2104     	LGOTO	_00007_DS_
                                    1- 2105     	BANKSEL	_R_AIN9_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 2106     	ADDAR	(_R_AIN9_DATA + 1),F
                                    1- 2107     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 2108     _00007_DS_:
                                    1- 2109     	.line	292, "main.c"; 	R_AIN9_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 2110     	BCR	STATUS,0
                                    1- 2111     	BANKSEL	_R_AIN9_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 2112     	RRR	(_R_AIN9_DATA + 1),F
     0028 13rr                      1- 2113     	RRR	_R_AIN9_DATA,F
                                    1- 2114     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 2115     	BCR	STATUS,0
     002A 13rr                      1- 2116     	RRR	(_R_AIN9_DATA + 1),F
     002B 13rr                      1- 2117     	RRR	_R_AIN9_DATA,F
                                    1- 2118     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 2119     	BCR	STATUS,0
     002D 13rr                      1- 2120     	RRR	(_R_AIN9_DATA + 1),F
     002E 13rr                      1- 2121     	RRR	_R_AIN9_DATA,F
                                    1- 2122     	.line	294, "main.c"; 	if(R_AIN9_DATA > R_AIN5_DATA)
     002F 01rr                      1- 2123     	MOVR	(_R_AIN9_DATA + 1),W
                                    1- 2124     	BANKSEL	_R_AIN5_DATA
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 04rr                      1- 2125     	SUBAR	(_R_AIN5_DATA + 1),W
     0032 0903                      1- 2126     	BTRSS	STATUS,2
     0033 3rrr                      1- 2127     	LGOTO	_00227_DS_
                                    1- 2128     	BANKSEL	_R_AIN9_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 2129     	MOVR	_R_AIN9_DATA,W
                                    1- 2130     	BANKSEL	_R_AIN5_DATA
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 04rr                      1- 2131     	SUBAR	_R_AIN5_DATA,W
     0038                           1- 2132     _00227_DS_:
     0038 0C03                      1- 2133     	BTRSC	STATUS,0
     0039 3rrr                      1- 2134     	LGOTO	_00217_DS_
                                    1- 2135     	.line	296, "main.c"; 	if(++lowWaterTime >= 10)
                                    1- 2136     	BANKSEL	_lowWaterTime
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 05rr                      1- 2137     	INCR	_lowWaterTime,F
                                    1- 2138     ;;unsigned compare: left < lit (0xA=10), size=1
     003C 210A                      1- 2139     	MOVIA	0x0a
     003D 04rr                      1- 2140     	SUBAR	_lowWaterTime,W
     003E 0803                      1- 2141     	BTRSS	STATUS,0
     003F 3rrr                      1- 2142     	LGOTO	_00219_DS_
                                    1- 2143     	.line	298, "main.c"; 	workStep = 0;
                                    1- 2144     	BANKSEL	_workStep
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 02rr                      1- 2145     	CLRR	_workStep
     0042 3rrr                      1- 2146     	LGOTO	_00219_DS_
     0043                           1- 2147     _00217_DS_:
                                    1- 2148     	.line	303, "main.c"; 	lowWaterTime = 0;
                                    1- 2149     	BANKSEL	_lowWaterTime
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 02rr                      1- 2150     	CLRR	_lowWaterTime
     0045                           1- 2151     _00219_DS_:
                                    1- 2152     	.line	305, "main.c"; 	}
                                    1- 2153     	RETURN	
     0045 0010                      3-   26 m1      ret
                                    1- 2154     ; exit point of _checkLowWater
                                    1- 2156     ;***
                                    1- 2157     ;  pBlock Stats: dbName = C
                                    1- 2158     ;***
                                    1- 2159     ;has an exit
                                    1- 2160     ;functions called:
                                    1- 2161     ;   _delay
                                    1- 2162     ;   _delay
                                    1- 2163     ;1 compiler assigned register :
                                    1- 2164     ;   STK00
                                    1- 2165     ;; Starting pCode block
                                    1- 2166     .segment "code"; module=main, function=_initAD
     0000                           1- 2168     _initAD:
                                    1- 2169     ; 2 exit points
                                    1- 2170     	.line	264, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PB0 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2185                      1- 2171     	MOVIA	0x85
     0001 00rr                      1- 2172     	MOVAR	_ADMD
                                    1- 2173     	.line	267, "main.c"; 	ADVREFH = C_Vrefh_4V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 2102                      1- 2174     	MOVIA	0x02
     0003 00rr                      1- 2175     	MOVAR	_ADVREFH
                                    1- 2176     	.line	274, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0004 2110                      1- 2177     	MOVIA	0x10
     0005 00rr                      1- 2178     	MOVAR	_ADR
                                    1- 2179     	.line	276, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0006 2103                      1- 2180     	MOVIA	0x03
     0007 00rr                      1- 2181     	MOVAR	_ADCR
                                    1- 2182     	.line	279, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0008 1Arr                      1- 2183     	BSR	_ADMDbits,4
                                    1- 2184     	.line	280, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0009 2164                      1- 2185     	MOVIA	0x64
     000A 00rr                      1- 2186     	MOVAR	STK00
     000B 2100                      1- 2187     	MOVIA	0x00
     000C 2rrr                      1- 2188     	LCALL	_delay
                                    1- 2189     	.line	283, "main.c"; 	}
                                    1- 2190     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1- 2191     ; exit point of _initAD
                                    1- 2193     ;***
                                    1- 2194     ;  pBlock Stats: dbName = C
                                    1- 2195     ;***
                                    1- 2196     ;has an exit
                                    1- 2197     ;functions called:
                                    1- 2198     ;   _keyRead
                                    1- 2199     ;   _keyRead
                                    1- 2200     ;1 compiler assigned register :
                                    1- 2201     ;   r0x1056
                                    1- 2202     ;; Starting pCode block
                                    1- 2203     .segment "code"; module=main, function=_keyCon
     0000                           1- 2205     _keyCon:
                                    1- 2206     ; 2 exit points
                                    1- 2207     	.line	233, "main.c"; 	keyClick = keyRead(0x40&(~PORTA));
     0000 07rr                      1- 2208     	COMR	_PORTA,W
                                    1- 2209     	BANKSEL	r0x1056
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2210     	MOVAR	r0x1056
     0003 2140                      1- 2211     	MOVIA	0x40
     0004 10rr                      1- 2212     	ANDAR	r0x1056,F
     0005 01rr                      1- 2213     	MOVR	r0x1056,W
     0006 2rrr                      1- 2214     	LCALL	_keyRead
                                    1- 2215     	BANKSEL	_keyClick
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 2216     	MOVAR	_keyClick
                                    1- 2217     	.line	235, "main.c"; 	if(keyClick == 1)			//短按
     0009 2401                      1- 2218     	XORIA	0x01
     000A 0903                      1- 2219     	BTRSS	STATUS,2
     000B 3rrr                      1- 2220     	LGOTO	_00203_DS_
                                    1- 2221     	.line	237, "main.c"; 	if(klcikTime > 0)
                                    1- 2222     	BANKSEL	_klcikTime
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 2223     	MOVR	_klcikTime,W
     000E 11rr                      1- 2224     	IORAR	(_klcikTime + 1),W
     000F 0D03                      1- 2225     	BTRSC	STATUS,2
     0010 3rrr                      1- 2226     	LGOTO	_00196_DS_
                                    1- 2227     	.line	239, "main.c"; 	douClickFlag = 1;
     0011 2101                      1- 2228     	MOVIA	0x01
                                    1- 2229     	BANKSEL	_douClickFlag
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2230     	MOVAR	_douClickFlag
     0014                           1- 2231     _00196_DS_:
                                    1- 2232     	.line	241, "main.c"; 	klcikTime = 300;
     0014 212C                      1- 2233     	MOVIA	0x2c
                                    1- 2234     	BANKSEL	_klcikTime
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 00rr                      1- 2235     	MOVAR	_klcikTime
     0017 2101                      1- 2236     	MOVIA	0x01
     0018 00rr                      1- 2237     	MOVAR	(_klcikTime + 1)
     0019 3rrr                      1- 2238     	LGOTO	_00205_DS_
     001A                           1- 2239     _00203_DS_:
                                    1- 2240     	.line	243, "main.c"; 	else if(keyClick == 2)		//长按
                                    1- 2241     	BANKSEL	_keyClick
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1- 2242     	MOVR	_keyClick,W
     001C 2402                      1- 2243     	XORIA	0x02
     001D 0903                      1- 2244     	BTRSS	STATUS,2
     001E 3rrr                      1- 2245     	LGOTO	_00205_DS_
                                    1- 2246     	.line	245, "main.c"; 	if(ledFlag)
                                    1- 2247     	BANKSEL	_ledFlag
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 2248     	MOVR	_ledFlag,W
     0021 0D03                      1- 2249     	BTRSC	STATUS,2
     0022 3rrr                      1- 2250     	LGOTO	_00198_DS_
                                    1- 2251     	.line	247, "main.c"; 	ledFlag = 0;
     0023 02rr                      1- 2252     	CLRR	_ledFlag
                                    1- 2253     	.line	248, "main.c"; 	PORTB &= 0xF9;
     0024 21F9                      1- 2254     	MOVIA	0xf9
     0025 10rr                      1- 2255     	ANDAR	_PORTB,F
                                    1- 2256     	.line	249, "main.c"; 	PORTA &= 0x7F;
     0026 1Frr                      1- 2257     	BCR	_PORTA,7
                                    1- 2258     	.line	250, "main.c"; 	count60s = 0;
                                    1- 2259     	BANKSEL	_count60s
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1- 2260     	CLRR	_count60s
     0029 02rr                      1- 2261     	CLRR	(_count60s + 1)
     002A 3rrr                      1- 2262     	LGOTO	_00205_DS_
     002B                           1- 2263     _00198_DS_:
                                    1- 2264     	.line	254, "main.c"; 	ledFlag = 1;
     002B 2101                      1- 2265     	MOVIA	0x01
                                    1- 2266     	BANKSEL	_ledFlag
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 2267     	MOVAR	_ledFlag
                                    1- 2268     	.line	255, "main.c"; 	ledAddFlag = 1;
                                    1- 2269     	BANKSEL	_ledAddFlag
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1- 2270     	MOVAR	_ledAddFlag
     0030                           1- 2271     _00205_DS_:
                                    1- 2272     	.line	259, "main.c"; 	}
                                    1- 2273     	RETURN	
     0030 0010                      3-   26 m1      ret
                                    1- 2274     ; exit point of _keyCon
                                    1- 2276     ;***
                                    1- 2277     ;  pBlock Stats: dbName = C
                                    1- 2278     ;***
                                    1- 2279     ;has an exit
                                    1- 2280     ;functions called:
                                    1- 2281     ;   _keyCon
                                    1- 2282     ;   _checkBatAD
                                    1- 2283     ;   _gotoSleep
                                    1- 2284     ;   _ledCon
                                    1- 2285     ;   _pwmCtr
                                    1- 2286     ;   _keyCon
                                    1- 2287     ;   _checkBatAD
                                    1- 2288     ;   _gotoSleep
                                    1- 2289     ;   _ledCon
                                    1- 2290     ;   _pwmCtr
                                    1- 2291     ;; Starting pCode block
                                    1- 2292     .segment "code"; module=main, function=_workCtr
     0000                           1- 2294     _workCtr:
                                    1- 2295     ; 2 exit points
                                    1- 2296     	.line	198, "main.c"; 	if(++count10ms >=2)
                                    1- 2297     	BANKSEL	_count10ms
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 2298     	INCR	_count10ms,F
                                    1- 2299     ;;unsigned compare: left < lit (0x2=2), size=1
     0002 2102                      1- 2300     	MOVIA	0x02
     0003 04rr                      1- 2301     	SUBAR	_count10ms,W
     0004 0803                      1- 2302     	BTRSS	STATUS,0
     0005 3rrr                      1- 2303     	LGOTO	_00164_DS_
                                    1- 2304     	.line	200, "main.c"; 	count10ms = 0;
     0006 02rr                      1- 2305     	CLRR	_count10ms
                                    1- 2306     	.line	201, "main.c"; 	keyCon();
     0007 2rrr                      1- 2307     	LCALL	_keyCon
                                    1- 2308     	.line	202, "main.c"; 	if(++count1s >= 10)
                                    1- 2309     	BANKSEL	_count1s
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 05rr                      1- 2310     	INCR	_count1s,F
                                    1- 2311     ;;unsigned compare: left < lit (0xA=10), size=1
     000A 210A                      1- 2312     	MOVIA	0x0a
     000B 04rr                      1- 2313     	SUBAR	_count1s,W
     000C 0803                      1- 2314     	BTRSS	STATUS,0
     000D 3rrr                      1- 2315     	LGOTO	_00153_DS_
                                    1- 2316     	.line	204, "main.c"; 	count1s = 0;
     000E 02rr                      1- 2317     	CLRR	_count1s
                                    1- 2318     	.line	205, "main.c"; 	checkBatAD();
     000F 2rrr                      1- 2319     	LCALL	_checkBatAD
     0010                           1- 2320     _00153_DS_:
                                    1- 2321     	.line	207, "main.c"; 	if(keyCount == 0 && ledFlag == 0 && workStep == 0 )
                                    1- 2322     	BANKSEL	_keyCount
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 2323     	MOVR	_keyCount,W
     0012 0903                      1- 2324     	BTRSS	STATUS,2
     0013 3rrr                      1- 2325     	LGOTO	_00157_DS_
                                    1- 2326     	BANKSEL	_ledFlag
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 2327     	MOVR	_ledFlag,W
     0016 0903                      1- 2328     	BTRSS	STATUS,2
     0017 3rrr                      1- 2329     	LGOTO	_00157_DS_
                                    1- 2330     	BANKSEL	_workStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 2331     	MOVR	_workStep,W
     001A 0903                      1- 2332     	BTRSS	STATUS,2
     001B 3rrr                      1- 2333     	LGOTO	_00157_DS_
                                    1- 2334     	.line	209, "main.c"; 	if(++count300s > 30000){
                                    1- 2335     	BANKSEL	_count300s
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 05rr                      1- 2336     	INCR	_count300s,F
     001E 0D03                      1- 2337     	BTRSC	STATUS,2
     001F 05rr                      1- 2338     	INCR	(_count300s + 1),F
                                    1- 2339     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2340     ;;unsigned compare: left >= lit (0x7531=30001), size=2
     0020 2175                      1- 2341     	MOVIA	0x75
     0021 04rr                      1- 2342     	SUBAR	(_count300s + 1),W
     0022 0903                      1- 2343     	BTRSS	STATUS,2
     0023 3rrr                      1- 2344     	LGOTO	_00190_DS_
     0024 2131                      1- 2345     	MOVIA	0x31
     0025 04rr                      1- 2346     	SUBAR	_count300s,W
     0026                           1- 2347     _00190_DS_:
     0026 0803                      1- 2348     	BTRSS	STATUS,0
     0027 3rrr                      1- 2349     	LGOTO	_00158_DS_
                                    1- 2350     	.line	210, "main.c"; 	count300s = 0;
                                    1- 2351     	BANKSEL	_count300s
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 2352     	CLRR	_count300s
     002A 02rr                      1- 2353     	CLRR	(_count300s + 1)
                                    1- 2354     	.line	211, "main.c"; 	gotoSleep();
     002B 2rrr                      1- 2355     	LCALL	_gotoSleep
     002C 3rrr                      1- 2356     	LGOTO	_00158_DS_
     002D                           1- 2357     _00157_DS_:
                                    1- 2358     	.line	216, "main.c"; 	count300s = 0;
                                    1- 2359     	BANKSEL	_count300s
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 02rr                      1- 2360     	CLRR	_count300s
     002F 02rr                      1- 2361     	CLRR	(_count300s + 1)
     0030                           1- 2362     _00158_DS_:
                                    1- 2363     	.line	218, "main.c"; 	if(ledAddFlag)
                                    1- 2364     	BANKSEL	_ledAddFlag
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1- 2365     	MOVR	_ledAddFlag,W
     0032 0903                      1- 2366     	BTRSS	STATUS,2
                                    1- 2367     	.line	220, "main.c"; 	ledCon();
     0033 2rrr                      1- 2368     	LCALL	_ledCon
     0034                           1- 2369     _00164_DS_:
                                    1- 2370     	.line	226, "main.c"; 	pwmCtr();
     0034 2rrr                      1- 2371     	LCALL	_pwmCtr
                                    1- 2372     	.line	228, "main.c"; 	}
                                    1- 2373     	RETURN	
     0035 0010                      3-   26 m1      ret
                                    1- 2374     ; exit point of _workCtr
                                    1- 2376     ;***
                                    1- 2377     ;  pBlock Stats: dbName = C
                                    1- 2378     ;***
                                    1- 2379     ;has an exit
                                    1- 2380     ;functions called:
                                    1- 2381     ;   _showBaiwei
                                    1- 2382     ;   __gptrget1
                                    1- 2383     ;   _showNubShiwei
                                    1- 2384     ;   __gptrget1
                                    1- 2385     ;   _showNubShiwei
                                    1- 2386     ;   __gptrget1
                                    1- 2387     ;   _showNubGewei
                                    1- 2388     ;   _showBaiwei
                                    1- 2389     ;   __gptrget1
                                    1- 2390     ;   _showNubShiwei
                                    1- 2391     ;   __gptrget1
                                    1- 2392     ;   _showNubShiwei
                                    1- 2393     ;   __gptrget1
                                    1- 2394     ;   _showNubGewei
                                    1- 2395     ;5 compiler assigned registers:
                                    1- 2396     ;   r0x1057
                                    1- 2397     ;   r0x1058
                                    1- 2398     ;   STK01
                                    1- 2399     ;   STK00
                                    1- 2400     ;   r0x1059
                                    1- 2401     ;; Starting pCode block
                                    1- 2402     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2404     _refreshNub:
                                    1- 2405     ; 2 exit points
                                    1- 2406     	.line	136, "main.c"; 	if(++refreshCount >= 100)
                                    1- 2407     	BANKSEL	_refreshCount
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 2408     	INCR	_refreshCount,F
                                    1- 2409     ;;unsigned compare: left < lit (0x64=100), size=1
     0002 2164                      1- 2410     	MOVIA	0x64
     0003 04rr                      1- 2411     	SUBAR	_refreshCount,W
     0004 0803                      1- 2412     	BTRSS	STATUS,0
     0005 3rrr                      1- 2413     	LGOTO	_00132_DS_
                                    1- 2414     	.line	138, "main.c"; 	refreshCount = 0;
     0006 02rr                      1- 2415     	CLRR	_refreshCount
                                    1- 2416     	.line	139, "main.c"; 	tempbaiweiNum = baiweiNum;
                                    1- 2417     	BANKSEL	_baiweiNum
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1- 2418     	MOVR	_baiweiNum,W
                                    1- 2419     	BANKSEL	_tempbaiweiNum
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 2420     	MOVAR	_tempbaiweiNum
                                    1- 2421     	.line	140, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2422     	BANKSEL	_shiweiNum
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 2423     	MOVR	_shiweiNum,W
                                    1- 2424     	BANKSEL	_tempshiweiNum
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 2425     	MOVAR	_tempshiweiNum
                                    1- 2426     	.line	141, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2427     	BANKSEL	_geweiNum
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 2428     	MOVR	_geweiNum,W
                                    1- 2429     	BANKSEL	_tempgeweiNum
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 2430     	MOVAR	_tempgeweiNum
     0013                           1- 2431     _00132_DS_:
                                    1- 2432     	.line	145, "main.c"; 	if(tempbaiweiNum)
                                    1- 2433     	BANKSEL	_tempbaiweiNum
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 2434     	MOVR	_tempbaiweiNum,W
     0015 0903                      1- 2435     	BTRSS	STATUS,2
                                    1- 2436     	.line	146, "main.c"; 	showBaiwei();
     0016 2rrr                      1- 2437     	LCALL	_showBaiwei
                                    1- 2438     	.line	147, "main.c"; 	if(tempbaiweiNum)
                                    1- 2439     	BANKSEL	_tempbaiweiNum
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1- 2440     	MOVR	_tempbaiweiNum,W
     0019 0D03                      1- 2441     	BTRSC	STATUS,2
     001A 3rrr                      1- 2442     	LGOTO	_00138_DS_
                                    1- 2443     	.line	148, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2444     	BANKSEL	_tempshiweiNum
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 2445     	MOVR	_tempshiweiNum,W
     001D 25rr                      1- 2446     	ADDIA	(_numArray + 0)
                                    1- 2447     	BANKSEL	r0x1057
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 2448     	MOVAR	r0x1057
     0020 21rr                      1- 2449     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0021 0C03                      1- 2450     	BTRSC	STATUS,0
     0022 2501                      1- 2451     	ADDIA	0x01
                                    1- 2452     	BANKSEL	r0x1058
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 2453     	MOVAR	r0x1058
                                    1- 2454     	BANKSEL	r0x1057
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 2455     	MOVR	r0x1057,W
     0027 00rr                      1- 2456     	MOVAR	STK01
                                    1- 2457     	BANKSEL	r0x1058
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1- 2458     	MOVR	r0x1058,W
     002A 00rr                      1- 2459     	MOVAR	STK00
     002B 2100                      1- 2460     	MOVIA	0x00
     002C 2rrr                      1- 2461     	LCALL	__gptrget1
                                    1- 2462     	BANKSEL	r0x1059
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 2463     	MOVAR	r0x1059
     002F 2rrr                      1- 2464     	LCALL	_showNubShiwei
     0030 3rrr                      1- 2465     	LGOTO	_00139_DS_
     0031                           1- 2466     _00138_DS_:
                                    1- 2467     	.line	149, "main.c"; 	else if(tempshiweiNum)
                                    1- 2468     	BANKSEL	_tempshiweiNum
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1- 2469     	MOVR	_tempshiweiNum,W
     0033 0D03                      1- 2470     	BTRSC	STATUS,2
     0034 3rrr                      1- 2471     	LGOTO	_00139_DS_
                                    1- 2472     	.line	150, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
     0035 01rr                      1- 2473     	MOVR	_tempshiweiNum,W
     0036 25rr                      1- 2474     	ADDIA	(_numArray + 0)
                                    1- 2475     	BANKSEL	r0x1057
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 2476     	MOVAR	r0x1057
     0039 21rr                      1- 2477     	MOVIA	((_numArray + 0) >> 8) & 0xff
     003A 0C03                      1- 2478     	BTRSC	STATUS,0
     003B 2501                      1- 2479     	ADDIA	0x01
                                    1- 2480     	BANKSEL	r0x1058
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 00rr                      1- 2481     	MOVAR	r0x1058
                                    1- 2482     	BANKSEL	r0x1057
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1- 2483     	MOVR	r0x1057,W
     0040 00rr                      1- 2484     	MOVAR	STK01
                                    1- 2485     	BANKSEL	r0x1058
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 2486     	MOVR	r0x1058,W
     0043 00rr                      1- 2487     	MOVAR	STK00
     0044 2100                      1- 2488     	MOVIA	0x00
     0045 2rrr                      1- 2489     	LCALL	__gptrget1
                                    1- 2490     	BANKSEL	r0x1059
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 00rr                      1- 2491     	MOVAR	r0x1059
     0048 2rrr                      1- 2492     	LCALL	_showNubShiwei
     0049                           1- 2493     _00139_DS_:
                                    1- 2494     	.line	151, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2495     	BANKSEL	_tempgeweiNum
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 01rr                      1- 2496     	MOVR	_tempgeweiNum,W
     004B 25rr                      1- 2497     	ADDIA	(_numArray + 0)
                                    1- 2498     	BANKSEL	r0x1057
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 00rr                      1- 2499     	MOVAR	r0x1057
     004E 21rr                      1- 2500     	MOVIA	((_numArray + 0) >> 8) & 0xff
     004F 0C03                      1- 2501     	BTRSC	STATUS,0
     0050 2501                      1- 2502     	ADDIA	0x01
                                    1- 2503     	BANKSEL	r0x1058
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 2504     	MOVAR	r0x1058
                                    1- 2505     	BANKSEL	r0x1057
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 01rr                      1- 2506     	MOVR	r0x1057,W
     0055 00rr                      1- 2507     	MOVAR	STK01
                                    1- 2508     	BANKSEL	r0x1058
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 01rr                      1- 2509     	MOVR	r0x1058,W
     0058 00rr                      1- 2510     	MOVAR	STK00
     0059 2100                      1- 2511     	MOVIA	0x00
     005A 2rrr                      1- 2512     	LCALL	__gptrget1
                                    1- 2513     	BANKSEL	r0x1059
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 00rr                      1- 2514     	MOVAR	r0x1059
     005D 2rrr                      1- 2515     	LCALL	_showNubGewei
                                    1- 2516     	.line	154, "main.c"; 	}
                                    1- 2517     	RETURN	
     005E 0010                      3-   26 m1      ret
                                    1- 2518     ; exit point of _refreshNub
                                    1- 2521     ;	code size estimation:
                                    1- 2522     ;	  907+  246 =  1153 instructions ( 2798 byte)
                                    1- 2524     	end
                                    1- 2524     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuchar              Label    00000000
__divuint               Label    00000000
__gptrget1              Label    00000000
__moduchar              Label    00000000
__moduint               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    0000002E
_00003_DS_              Label    0000002E
_00004_DS_              Label    0000002B
_00005_DS_              Label    00000040
_00006_DS_              Label    00000092
_00007_DS_              Label    00000025
_00106_DS_              Label    0000002B
_00108_DS_              Label    0000004C
_00113_DS_              Label    00000050
_00114_DS_              Label    00000056
_00122_DS_              Label    00000058
_00124_DS_              Label    0000005B
_00126_DS_              Label    0000005F
_00132_DS_              Label    00000013
_00138_DS_              Label    00000031
_00139_DS_              Label    00000049
_00147_DS_              Label    00000018
_00153_DS_              Label    00000010
_00157_DS_              Label    0000002D
_00158_DS_              Label    00000030
_00164_DS_              Label    00000034
_00190_DS_              Label    00000026
_00196_DS_              Label    00000014
_00198_DS_              Label    0000002B
_00203_DS_              Label    0000001A
_00205_DS_              Label    00000030
_00217_DS_              Label    00000043
_00219_DS_              Label    00000045
_00227_DS_              Label    00000038
_00233_DS_              Label    0000005F
_00235_DS_              Label    00000080
_00238_DS_              Label    0000006F
_00240_DS_              Label    000000B0
_00252_DS_              Label    00000066
_00253_DS_              Label    00000076
_00260_DS_              Label    00000010
_00262_DS_              Label    00000031
_00269_DS_              Label    00000010
_00271_DS_              Label    00000031
_00281_DS_              Label    00000022
_00287_DS_              Label    00000025
_00290_DS_              Label    0000000D
_00292_DS_              Label    00000029
_00298_DS_              Label    0000000F
_00299_DS_              Label    00000013
_00308_DS_              Label    0000000F
_00309_DS_              Label    00000013
_00319_DS_              Label    0000000E
_00331_DS_              Label    000000D3
_00334_DS_              Label    000000C7
_00337_DS_              Label    000000BA
_00340_DS_              Label    000000AE
_00343_DS_              Label    000000A2
_00346_DS_              Label    00000096
_00349_DS_              Label    00000089
_00352_DS_              Label    0000007B
_00355_DS_              Label    0000006F
_00358_DS_              Label    00000062
_00361_DS_              Label    00000053
_00364_DS_              Label    00000047
_00367_DS_              Label    00000038
_00370_DS_              Label    0000002A
_00373_DS_              Label    0000001E
_00376_DS_              Label    000000E1
_00379_DS_              Label    000000EF
_00435_DS_              Label    00000013
_00436_DS_              Label    00000025
_00437_DS_              Label    00000031
_00438_DS_              Label    0000003F
_00439_DS_              Label    0000004E
_00440_DS_              Label    0000005A
_00441_DS_              Label    00000069
_00442_DS_              Label    00000076
_00443_DS_              Label    00000082
_00444_DS_              Label    00000090
_00445_DS_              Label    0000009D
_00446_DS_              Label    000000A9
_00447_DS_              Label    000000B5
_00448_DS_              Label    000000C1
_00449_DS_              Label    000000CE
_00450_DS_              Label    000000DA
_00462_DS_              Label    0000001F
_00463_DS_              Label    00000027
_00465_DS_              Label    00000015
_00466_DS_              Label    00000029
_00467_DS_              Label    0000002A
_00476_DS_              Label    00000000
_00483_DS_              Label    00000009
_00485_DS_              Label    0000001C
_00494_DS_              Label    00000013
_A2                     Label    00000000
_A3                     Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_addtime                Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_B1                     Label    00000000
_B2                     Label    00000000
_B3                     Label    00000000
_baiweiNum              Label    00000000
_BDUTY                  Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_C1                     Label    00000000
_C2                     Label    00000000
_C3                     Label    00000000
_checkBatAD             Label    00000000
_checkLowWater          Label    00000000
_CMPCR                  Label    00000000
_count10ms              Label    00000000
_count1s                Label    00000000
_count300s              Label    00000000
_count500ms             Label    00000000
_count60s               Label    00000000
_D2                     Label    00000000
_D3                     Label    00000000
_delay                  Label    00000000
_delayms                Label    00000000
_douClickFlag           Label    00000000
_E2                     Label    00000000
_E3                     Label    00000000
_F_AIN5_Convert         Label    00000000
_F_AIN9_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_F2                     Label    00000000
_F3                     Label    00000000
_FSR                    Label    00000000
_G2                     Label    00000000
_G3                     Label    00000000
_GDUTY                  Label    00000000
_geweiNum               Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCon                 Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_klcikTime              Label    00000000
_ledAddFlag             Label    00000000
_ledCon                 Label    00000000
_ledCount               Label    00000000
_ledFlag                Label    00000000
_longPressFlag          Label    00000000
_lowWaterTime           Label    00000000
_main                   Label    00000000
_numArray               Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmCtr                 Label    00000000
_pwmStart               Label    00000000
_pwmStop                Label    00000000
_R_AIN5_DATA            Label    00000000
_R_AIN5_DATA_LB         Label    00000000
_R_AIN9_DATA            Label    00000000
_R_AIN9_DATA_LB         Label    00000000
_RDUTY                  Label    00000000
_refreshCount           Label    00000000
_refreshNub             Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_setHightOutput         Label    00000000
_setInput               Label    00000000
_setlowOutput           Label    00000000
_setOutput              Label    00000000
_setPWMduty             Label    00000000
_setPWMdutyG            Label    00000000
_shiweiNum              Label    00000000
_showBaiwei             Label    00000000
_showNub                Label    00000000
_showNubGewei           Label    00000000
_showNubGewei2          Label    00000000
_showNubShiwei          Label    00000000
_showNubShiwei2         Label    00000000
_sleepDelay             Label    00000000
_STATUS                 Label    00000000
_step2Count             Label    00000000
_sumR_AIN5_DATA         Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempbaiweiNum          Label    00000000
_tempgeweiNum           Label    00000000
_tempshiweiNum          Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000070
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103D                 Label    00000000
r0x103E                 Label    00000000
r0x103F                 Label    00000000
r0x1040                 Label    00000000
r0x1041                 Label    00000000
r0x1042                 Label    00000000
r0x1043                 Label    00000000
r0x1044                 Label    00000000
r0x1047                 Label    00000000
r0x1048                 Label    00000000
r0x1049                 Label    00000000
r0x104A                 Label    00000000
r0x104D                 Label    00000000
r0x1050                 Label    00000000
r0x1051                 Label    00000000
r0x1052                 Label    00000000
r0x1053                 Label    00000000
r0x1054                 Label    00000000
r0x1055                 Label    00000000
r0x1056                 Label    00000000
r0x1057                 Label    00000000
r0x1058                 Label    00000000
r0x1059                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000009
STK01                   Label    00000008
STK02                   Label    00000007
STK03                   Label    00000006
STK04                   Label    00000005
STK05                   Label    00000004
STK06                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
