
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_LedCtr2
                                    1-   18     	extern	_checkOutA
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_ANAENbits
                                    1-   36     	extern	_RFCbits
                                    1-   37     	extern	_INTE2bits
                                    1-   38     	extern	_INDF
                                    1-   39     	extern	_TMR0
                                    1-   40     	extern	_PCL
                                    1-   41     	extern	_STATUS
                                    1-   42     	extern	_FSR
                                    1-   43     	extern	_PORTA
                                    1-   44     	extern	_PORTB
                                    1-   45     	extern	_PCON
                                    1-   46     	extern	_BWUCON
                                    1-   47     	extern	_PCHBUF
                                    1-   48     	extern	_ABPLCON
                                    1-   49     	extern	_BPHCON
                                    1-   50     	extern	_INTE
                                    1-   51     	extern	_INTF
                                    1-   52     	extern	_ADMD
                                    1-   53     	extern	_ADR
                                    1-   54     	extern	_ADD
                                    1-   55     	extern	_ADVREFH
                                    1-   56     	extern	_ADCR
                                    1-   57     	extern	_AWUCON
                                    1-   58     	extern	_PACON
                                    1-   59     	extern	_INTEDG
                                    1-   60     	extern	_TMRH
                                    1-   61     	extern	_ANAEN
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM3RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_TMR2
                                    1-   75     	extern	_T2CR1
                                    1-   76     	extern	_T2CR2
                                    1-   77     	extern	_PWM2DUTY
                                    1-   78     	extern	_PS2CV
                                    1-   79     	extern	_BZ2CR
                                    1-   80     	extern	_OSCCR
                                    1-   81     	extern	_TMR3
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_T3CR2
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_PS3CV
                                    1-   86     	extern	_BZ3CR
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	__nyc_ny8_startup
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_F_wait_eoc
                                    1-  103     	extern	_F_AIN1_Convert
                                    1-  104     	extern	_checkBatAD
                                    1-  105     	extern	_initAD
                                    1-  106     	extern	_delay
                                    1-  107     	extern	_chrgCtr
                                    1-  108     	extern	_keyRead
                                    1-  109     	extern	_gotoSleep
                                    1-  110     	extern	_pwmStop
                                    1-  111     	extern	_pwmInit
                                    1-  112     	extern	_LED6ON
                                    1-  113     	extern	_LED5ON
                                    1-  114     	extern	_LED4ON
                                    1-  115     	extern	_LED3ON
                                    1-  116     	extern	_LED2ON
                                    1-  117     	extern	_LED1ON
                                    1-  118     	extern	_LedInput
                                    1-  119     	extern	_ledShow
                                    1-  120     	extern	_initSys
                                    1-  121     	extern	_powerOff
                                    1-  122     	extern	_keyCtr
                                    1-  123     	extern	_isr
                                    1-  124     	extern	_main
                                    1-  125     	extern	_Status
                                    1-  126     	extern	_duty
                                    1-  127     	extern	_intCount
                                    1-  128     	extern	_count500ms
                                    1-  129     	extern	_keyCount
                                    1-  130     	extern	_workStep
                                    1-  131     	extern	_ledStep
                                    1-  132     	extern	_preFG
                                    1-  133     	extern	_maxDuty
                                    1-  134     	extern	_pwStep
                                    1-  135     	extern	_R_AIN1_DATA
                                    1-  136     	extern	_R_AIN1_DATA_LB
                                    1-  137     	extern	_chrgTime
                                    1-  138     	extern	_startStep
                                    1-  139     	extern	_sleepTime
                                    1-  140     	extern	_count200ms
                                    1-  141     	extern	_count1s
                                    1-  142     	extern	_count900s
                                    1-  143     	extern	_lowBatTime
                                    1-  144     	extern	_ledTime
                                    1-  145     	extern	_overCount
                                    1-  146     	extern	_chrgCount
                                    1-  147     	extern	_ledLightTime
                                    1-  148     	extern	_currentDuty
                                    1-  149     	extern	_fullCount
                                    1-  150     	extern	_shanshuoTime
                                    1-  151     	extern	_firstTime
                                    1-  152     	extern	_tempDuty
                                    1-  153     	extern	_lowCount
                                    1-  154     	extern	_debug
                                    1-  156     	extern PSAVE
                                    1-  157     	extern SSAVE
                                    1-  158     	extern WSAVE
                                    1-  159     	extern STK02
                                    1-  160     	extern STK01
                                    1-  161     	extern STK00
                                    1-  163     .segment "uninit", 0x20000040
 20000040                           1-  164     PSAVE:
                                    1-  165     	.res 1
 20000041                           1-  166     SSAVE:
                                    1-  167     	.res 1
 20000042                           1-  168     WSAVE:
                                    1-  169     	.res 1
 20000043                           1-  170     STK02:
                                    1-  171     	.res 1
 20000044                           1-  172     STK01:
                                    1-  173     	.res 1
 20000045                           1-  174     STK00:
                                    1-  175     	.res 1
                                    1-  177     ;--------------------------------------------------------
                                    1-  178     ; global definitions
                                    1-  179     ;--------------------------------------------------------
                                    1-  180     .segment "uninit"
     0000                           1-  181     _R_AIN1_DATA:
                                    1-  182     	.res	2
                                    1-  185     .segment "uninit"
     0000                           1-  186     _R_AIN1_DATA_LB:
                                    1-  187     	.res	1
                                    1-  190     ;--------------------------------------------------------
                                    1-  191     ; absolute symbol definitions
                                    1-  192     ;--------------------------------------------------------
                                    1-  193     ;--------------------------------------------------------
                                    1-  194     ; compiler-defined variables
                                    1-  195     ;--------------------------------------------------------
                                    1-  196     .segment "uninit"
     0000                           1-  197     r0x102D:
                                    1-  198     	.res	1
                                    1-  199     .segment "uninit"
     0000                           1-  200     r0x102C:
                                    1-  201     	.res	1
                                    1-  202     .segment "uninit"
     0000                           1-  203     r0x102B:
                                    1-  204     	.res	1
                                    1-  205     .segment "uninit"
     0000                           1-  206     r0x102A:
                                    1-  207     	.res	1
                                    1-  208     .segment "uninit"
     0000                           1-  209     r0x101E:
                                    1-  210     	.res	1
                                    1-  211     .segment "uninit"
     0000                           1-  212     r0x101F:
                                    1-  213     	.res	1
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x1028:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x1029:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x1020:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x1021:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x1022:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x1025:
                                    1-  231     	.res	1
                                    1-  232     ;--------------------------------------------------------
                                    1-  233     ; initialized data
                                    1-  234     ;--------------------------------------------------------
                                    1-  236     .segment "idata"
     0000                           1-  237     _Status:
     0000 0000                      1-  238     	dw	0x00
                                    1-  242     .segment "idata"
     0000                           1-  243     _duty:
     0000 0000 0000                 1-  244     	dw	0x00, 0x00
                                    1-  248     .segment "idata"
     0000                           1-  249     _intCount:
     0000 0000                      1-  250     	dw	0x00
                                    1-  254     .segment "idata"
     0000                           1-  255     _count500ms:
     0000 0000                      1-  256     	dw	0x00
                                    1-  260     .segment "idata"
     0000                           1-  261     _keyCount:
     0000 0000                      1-  262     	dw	0x00
                                    1-  266     .segment "idata"
     0000                           1-  267     _workStep:
     0000 0000                      1-  268     	dw	0x00
                                    1-  272     .segment "idata"
     0000                           1-  273     _ledStep:
     0000 0000                      1-  274     	dw	0x00
                                    1-  278     .segment "idata"
     0000                           1-  279     _preFG:
     0000 0000                      1-  280     	dw	0x00
                                    1-  284     .segment "idata"
     0000                           1-  285     _maxDuty:
     0000 0000                      1-  286     	dw	0x00
                                    1-  290     .segment "idata"
     0000                           1-  291     _pwStep:
     0000 0000                      1-  292     	dw	0x00
                                    1-  296     .segment "idata"
     0000                           1-  297     _chrgTime:
     0000 0000 0000                 1-  298     	dw	0x00, 0x00
                                    1-  302     .segment "idata"
     0000                           1-  303     _startStep:
     0000 0000                      1-  304     	dw	0x00
                                    1-  308     .segment "idata"
     0000                           1-  309     _sleepTime:
     0000 0000 0000                 1-  310     	dw	0x00, 0x00
                                    1-  314     .segment "idata"
     0000                           1-  315     _count200ms:
     0000 0000                      1-  316     	dw	0x00
                                    1-  320     .segment "idata"
     0000                           1-  321     _count1s:
     0000 0000                      1-  322     	dw	0x00
                                    1-  326     .segment "idata"
     0000                           1-  327     _count900s:
     0000 0000 0000                 1-  328     	dw	0x00, 0x00
                                    1-  332     .segment "idata"
     0000                           1-  333     _lowBatTime:
     0000 0000                      1-  334     	dw	0x00
                                    1-  338     .segment "idata"
     0000                           1-  339     _ledTime:
     0000 0000                      1-  340     	dw	0x00
                                    1-  344     .segment "idata"
     0000                           1-  345     _overCount:
     0000 0000                      1-  346     	dw	0x00
                                    1-  350     .segment "idata"
     0000                           1-  351     _chrgCount:
     0000 0000                      1-  352     	dw	0x00
                                    1-  356     .segment "idata"
     0000                           1-  357     _ledLightTime:
     0000 0000                      1-  358     	dw	0x00
                                    1-  362     .segment "idata"
     0000                           1-  363     _currentDuty:
     0000 0000                      1-  364     	dw	0x00
                                    1-  368     .segment "idata"
     0000                           1-  369     _fullCount:
     0000 0000                      1-  370     	dw	0x00
                                    1-  374     .segment "idata"
     0000                           1-  375     _shanshuoTime:
     0000 0000                      1-  376     	dw	0x00
                                    1-  380     .segment "idata"
     0000                           1-  381     _firstTime:
     0000 0000                      1-  382     	dw	0x00
                                    1-  386     .segment "idata"
     0000                           1-  387     _tempDuty:
     0000 0000                      1-  388     	dw	0x00
                                    1-  392     .segment "idata"
     0000                           1-  393     _lowCount:
     0000 0000                      1-  394     	dw	0x00
                                    1-  398     .segment "idata"
     0000                           1-  399     _debug:
     0000 0000                      1-  400     	dw	0x00
                                    1-  403     ;--------------------------------------------------------
                                    1-  404     ; overlayable items in internal ram 
                                    1-  405     ;--------------------------------------------------------
                                    1-  406     ;	udata_ovr
                                    1-  407     ;--------------------------------------------------------
                                    1-  408     ; reset vector 
                                    1-  409     ;--------------------------------------------------------
                                    1-  410     ORG	0x0000
     0000 3rrr                      1-  411     	LGOTO	__nyc_ny8_startup
                                    1-  412     ;--------------------------------------------------------
                                    1-  413     ; interrupt and initialization code
                                    1-  414     ;--------------------------------------------------------
                                    1-  415     ORG 0x0008
     0008 3rrr                      1-  416     	lgoto	__sdcc_interrupt
                                    1-  418     .segment "code"
     0000                           1-  419     __sdcc_interrupt:
                                    1-  420     ;***
                                    1-  421     ;  pBlock Stats: dbName = I
                                    1-  422     ;***
                                    1-  423     ;2 compiler assigned registers:
                                    1-  424     ;   STK00
                                    1-  425     ;   STK01
                                    1-  426     ;; Starting pCode block
     0000                           1-  427     _isr:
                                    1-  428     ; 0 exit points
                                    1-  429     	.line	82, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  430     	MOVAR	WSAVE
     0001 1503                      1-  431     	SWAPR	STATUS,W
     0002 0283                      1-  432     	CLRR	STATUS
     0003 00rr                      1-  433     	MOVAR	SSAVE
     0004 010A                      1-  434     	MOVR	PCHBUF,W
     0005 028A                      1-  435     	CLRR	PCHBUF
     0006 00rr                      1-  436     	MOVAR	PSAVE
     0007 0104                      1-  437     	MOVR	FSR,W
                                    1-  438     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  439     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  440     	MOVR	STK00,W
                                    1-  441     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  442     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  443     	MOVR	STK01,W
                                    1-  444     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  445     	MOVAR	___sdcc_saved_stk01
                                    1-  446     	.line	84, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  447     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  448     	LGOTO	_00124_DS_
                                    1-  449     	.line	86, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  450     	MOVIA	0x37
     0013 03rr                      1-  451     	ADDAR	_TMR0,F
                                    1-  452     	.line	88, "main.c"; 	if(++intCount >= 100)
                                    1-  453     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  454     	INCR	_intCount,F
                                    1-  455     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  456     	MOVIA	0x64
     0017 04rr                      1-  457     	SUBAR	_intCount,W
     0018 0803                      1-  458     	BTRSS	STATUS,0
     0019 3rrr                      1-  459     	LGOTO	_00124_DS_
                                    1-  460     	.line	90, "main.c"; 	IntFlag = 1;
                                    1-  461     	BANKSEL	_Status
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 18rr                      1-  462     	BSR	_Status,0
                                    1-  463     	.line	91, "main.c"; 	intCount = 0;
                                    1-  464     	BANKSEL	_intCount
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1-  465     	CLRR	_intCount
                                    1-  466     	.line	92, "main.c"; 	if(++count500ms >= 40)
                                    1-  467     	BANKSEL	_count500ms
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 05rr                      1-  468     	INCR	_count500ms,F
                                    1-  469     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  470     	MOVIA	0x28
     0021 04rr                      1-  471     	SUBAR	_count500ms,W
     0022 0C03                      1-  472     	BTRSC	STATUS,0
                                    1-  473     	.line	93, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  474     	CLRR	_count500ms
                                    1-  475     	.line	94, "main.c"; 	if(++count200ms >= 20)
                                    1-  476     	BANKSEL	_count200ms
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 05rr                      1-  477     	INCR	_count200ms,F
     0026 2114                      1-  478     	MOVIA	0x14
     0027 04rr                      1-  479     	SUBAR	_count200ms,W
     0028 0C03                      1-  480     	BTRSC	STATUS,0
                                    1-  481     	.line	95, "main.c"; 	count200ms = 0;
     0029 02rr                      1-  482     	CLRR	_count200ms
                                    1-  483     	.line	96, "main.c"; 	if(++count1s >= 100)
                                    1-  484     	BANKSEL	_count1s
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 05rr                      1-  485     	INCR	_count1s,F
     002C 2164                      1-  486     	MOVIA	0x64
     002D 04rr                      1-  487     	SUBAR	_count1s,W
     002E 0803                      1-  488     	BTRSS	STATUS,0
     002F 3rrr                      1-  489     	LGOTO	_00124_DS_
                                    1-  490     	.line	98, "main.c"; 	count1s = 0;
     0030 02rr                      1-  491     	CLRR	_count1s
                                    1-  492     	.line	99, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  493     	BANKSEL	_Status
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 09rr                      1-  494     	BTRSS	_Status,3
     0033 3rrr                      1-  495     	LGOTO	_00110_DS_
                                    1-  496     	BANKSEL	_pwStep
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1-  497     	MOVR	_pwStep,W
     0036 2406                      1-  498     	XORIA	0x06
     0037 0903                      1-  499     	BTRSS	STATUS,2
     0038 3rrr                      1-  500     	LGOTO	_00110_DS_
                                    1-  501     	.line	101, "main.c"; 	++chrgTime;
                                    1-  502     	BANKSEL	_chrgTime
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 05rr                      1-  503     	INCR	_chrgTime,F
     003B 0D03                      1-  504     	BTRSC	STATUS,2
     003C 05rr                      1-  505     	INCR	(_chrgTime + 1),F
                                    1-  506     	.line	102, "main.c"; 	PWM1DUTY = 7;
     003D 2107                      1-  507     	MOVIA	0x07
     003E 00rr                      1-  508     	SFUN	_PWM1DUTY
     003F                           1-  509     _00110_DS_:
                                    1-  510     	.line	104, "main.c"; 	if(ledLightTime > 0)
                                    1-  511     	BANKSEL	_ledLightTime
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1-  512     	MOVR	_ledLightTime,W
     0041 0903                      1-  513     	BTRSS	STATUS,2
                                    1-  514     	.line	105, "main.c"; 	--ledLightTime;
     0042 06rr                      1-  515     	DECR	_ledLightTime,F
                                    1-  516     	.line	106, "main.c"; 	if(shanshuoTime > 0)
                                    1-  517     	BANKSEL	_shanshuoTime
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 01rr                      1-  518     	MOVR	_shanshuoTime,W
     0045 0903                      1-  519     	BTRSS	STATUS,2
                                    1-  520     	.line	107, "main.c"; 	--shanshuoTime;
     0046 06rr                      1-  521     	DECR	_shanshuoTime,F
                                    1-  522     	.line	108, "main.c"; 	if(workStep)
                                    1-  523     	BANKSEL	_workStep
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1-  524     	MOVR	_workStep,W
     0049 0D03                      1-  525     	BTRSC	STATUS,2
     004A 3rrr                      1-  526     	LGOTO	_00117_DS_
                                    1-  527     	.line	110, "main.c"; 	++count900s;
                                    1-  528     	BANKSEL	_count900s
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 05rr                      1-  529     	INCR	_count900s,F
     004D 0D03                      1-  530     	BTRSC	STATUS,2
     004E 05rr                      1-  531     	INCR	(_count900s + 1),F
     004F 3rrr                      1-  532     	LGOTO	_00124_DS_
     0050                           1-  533     _00117_DS_:
                                    1-  534     	.line	114, "main.c"; 	count900s = 0;
                                    1-  535     	BANKSEL	_count900s
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 02rr                      1-  536     	CLRR	_count900s
     0052 02rr                      1-  537     	CLRR	(_count900s + 1)
     0053                           1-  538     _00124_DS_:
                                    1-  539     	.line	123, "main.c"; 	if(INTFbits.PABIF)
     0053 08rr                      1-  540     	BTRSS	_INTFbits,1
     0054 3rrr                      1-  541     	LGOTO	_00126_DS_
                                    1-  542     	.line	125, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0055 21FD                      1-  543     	MOVIA	0xfd
     0056 00rr                      1-  544     	MOVAR	_INTF
     0057                           1-  545     _00126_DS_:
                                    1-  546     	.line	128, "main.c"; 	INTF = 0;
     0057 02rr                      1-  547     	CLRR	_INTF
                                    1-  548     	.line	130, "main.c"; 	}
                                    1-  549     	BANKSEL	___sdcc_saved_stk01
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 01rr                      1-  550     	MOVR	___sdcc_saved_stk01,W
     005A 00rr                      1-  551     	MOVAR	STK01
                                    1-  552     	BANKSEL	___sdcc_saved_stk00
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 01rr                      1-  553     	MOVR	___sdcc_saved_stk00,W
     005D 00rr                      1-  554     	MOVAR	STK00
                                    1-  555     	BANKSEL	___sdcc_saved_fsr
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 01rr                      1-  556     	MOVR	___sdcc_saved_fsr,W
     0060 0084                      1-  557     	MOVAR	FSR
     0061 01rr                      1-  558     	MOVR	PSAVE,W
     0062 008A                      1-  559     	MOVAR	PCHBUF
     0063 0283                      1-  560     	CLRR	STATUS
     0064 15rr                      1-  561     	SWAPR	SSAVE,W
     0065 0083                      1-  562     	MOVAR	STATUS
     0066 15rr                      1-  563     	SWAPR	WSAVE,F
     0067 15rr                      1-  564     	SWAPR	WSAVE,W
     0068                           1-  565     END_OF_INTERRUPT:
     0068 0011                      1-  566     	RETIE	
                                    1-  568     ;--------------------------------------------------------
                                    1-  569     ; code
                                    1-  570     ;--------------------------------------------------------
                                    1-  571     ;***
                                    1-  572     ;  pBlock Stats: dbName = M
                                    1-  573     ;***
                                    1-  574     ;has an exit
                                    1-  575     ;functions called:
                                    1-  576     ;   _initSys
                                    1-  577     ;   _initAD
                                    1-  578     ;   _ledShow
                                    1-  579     ;   _keyCtr
                                    1-  580     ;   _checkBatAD
                                    1-  581     ;   _chrgCtr
                                    1-  582     ;   _gotoSleep
                                    1-  583     ;   _powerOff
                                    1-  584     ;   _initSys
                                    1-  585     ;   _initAD
                                    1-  586     ;   _ledShow
                                    1-  587     ;   _keyCtr
                                    1-  588     ;   _checkBatAD
                                    1-  589     ;   _chrgCtr
                                    1-  590     ;   _gotoSleep
                                    1-  591     ;   _powerOff
                                    1-  592     ;; Starting pCode block
                                    1-  593     .segment "code"; module=main, function=_main
     0000                           1-  595     _main:
                                    1-  596     ; 2 exit points
                                    1-  597     	.line	134, "main.c"; 	initSys();
     0000 2rrr                      1-  598     	LCALL	_initSys
                                    1-  599     	.line	135, "main.c"; 	initAD();
     0001 2rrr                      1-  600     	LCALL	_initAD
     0002                           1-  601     _00150_DS_:
                                    1-  602     	.line	138, "main.c"; 	CLRWDT();
     0002 0002                      1-  603     	clrwdt
                                    1-  604     	.line	139, "main.c"; 	ledShow();
     0003 2rrr                      1-  605     	LCALL	_ledShow
                                    1-  606     	.line	140, "main.c"; 	if(!IntFlag)
                                    1-  607     	BANKSEL	_Status
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 08rr                      1-  608     	BTRSS	_Status,0
     0006 3rrr                      1-  609     	LGOTO	_00150_DS_
                                    1-  610     	.line	142, "main.c"; 	IntFlag = 0;
     0007 1Crr                      1-  611     	BCR	_Status,0
                                    1-  612     	.line	143, "main.c"; 	if(chrgFlag == 0)
     0008 09rr                      1-  613     	BTRSS	_Status,3
                                    1-  614     	.line	144, "main.c"; 	keyCtr();
     0009 2rrr                      1-  615     	LCALL	_keyCtr
                                    1-  616     	.line	145, "main.c"; 	if(count200ms < 5)
     000A 2105                      1-  617     	MOVIA	0x05
                                    1-  618     	BANKSEL	_count200ms
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  619     	SUBAR	_count200ms,W
     000D 0803                      1-  620     	BTRSS	STATUS,0
                                    1-  621     	.line	147, "main.c"; 	checkBatAD();
     000E 2rrr                      1-  622     	LCALL	_checkBatAD
                                    1-  623     	.line	149, "main.c"; 	chrgCtr();
     000F 2rrr                      1-  624     	LCALL	_chrgCtr
                                    1-  625     	.line	151, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  626     	BANKSEL	_workStep
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1-  627     	MOVR	_workStep,W
     0012 0D03                      1-  628     	BTRSC	STATUS,2
     0013 3rrr                      1-  629     	LGOTO	_00138_DS_
                                    1-  630     	BANKSEL	_currentDuty
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1-  631     	MOVR	_currentDuty,W
                                    1-  632     	BANKSEL	_maxDuty
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 04rr                      1-  633     	SUBAR	_maxDuty,W
     0018 0C03                      1-  634     	BTRSC	STATUS,0
     0019 3rrr                      1-  635     	LGOTO	_00138_DS_
                                    1-  636     	.line	153, "main.c"; 	currentDuty = currentDuty - 5;
     001A 21FB                      1-  637     	MOVIA	0xfb
                                    1-  638     	BANKSEL	_currentDuty
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1-  639     	ADDAR	_currentDuty,F
                                    1-  640     	.line	154, "main.c"; 	PWM2DUTY = currentDuty;
     001D 01rr                      1-  641     	MOVR	_currentDuty,W
     001E 00rr                      1-  642     	SFUN	_PWM2DUTY
     001F                           1-  643     _00138_DS_:
                                    1-  644     	.line	156, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x80) == 0 && ledLightTime == 0)
                                    1-  645     	BANKSEL	_workStep
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  646     	MOVR	_workStep,W
     0021 0903                      1-  647     	BTRSS	STATUS,2
     0022 3rrr                      1-  648     	LGOTO	_00143_DS_
                                    1-  649     	BANKSEL	_keyCount
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  650     	MOVR	_keyCount,W
     0025 0903                      1-  651     	BTRSS	STATUS,2
     0026 3rrr                      1-  652     	LGOTO	_00143_DS_
                                    1-  653     	BANKSEL	_PORTA
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 0Frr                      1-  654     	BTRSC	_PORTA,7
     0029 3rrr                      1-  655     	LGOTO	_00143_DS_
                                    1-  656     	BANKSEL	_ledLightTime
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  657     	MOVR	_ledLightTime,W
     002C 0903                      1-  658     	BTRSS	STATUS,2
     002D 3rrr                      1-  659     	LGOTO	_00143_DS_
                                    1-  660     	.line	158, "main.c"; 	if(++sleepTime > 300)
                                    1-  661     	BANKSEL	_sleepTime
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1-  662     	INCR	_sleepTime,F
     0030 0D03                      1-  663     	BTRSC	STATUS,2
     0031 05rr                      1-  664     	INCR	(_sleepTime + 1),F
                                    1-  665     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  666     ;;unsigned compare: left >= lit (0x12D=301), size=2
     0032 2101                      1-  667     	MOVIA	0x01
     0033 04rr                      1-  668     	SUBAR	(_sleepTime + 1),W
     0034 0903                      1-  669     	BTRSS	STATUS,2
     0035 3rrr                      1-  670     	LGOTO	_00192_DS_
     0036 212D                      1-  671     	MOVIA	0x2d
     0037 04rr                      1-  672     	SUBAR	_sleepTime,W
     0038                           1-  673     _00192_DS_:
     0038 0803                      1-  674     	BTRSS	STATUS,0
     0039 3rrr                      1-  675     	LGOTO	_00143_DS_
                                    1-  676     	.line	160, "main.c"; 	gotoSleep();
     003A 2rrr                      1-  677     	LCALL	_gotoSleep
                                    1-  678     ;;unsigned compare: left < lit (0x384=900), size=2
     003B                           1-  679     _00143_DS_:
                                    1-  680     	.line	164, "main.c"; 	if(count900s >= 900)
     003B 2103                      1-  681     	MOVIA	0x03
                                    1-  682     	BANKSEL	_count900s
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 04rr                      1-  683     	SUBAR	(_count900s + 1),W
     003E 0903                      1-  684     	BTRSS	STATUS,2
     003F 3rrr                      1-  685     	LGOTO	_00193_DS_
     0040 2184                      1-  686     	MOVIA	0x84
     0041 04rr                      1-  687     	SUBAR	_count900s,W
     0042                           1-  688     _00193_DS_:
     0042 0803                      1-  689     	BTRSS	STATUS,0
     0043 3rrr                      1-  690     	LGOTO	_00150_DS_
                                    1-  691     	.line	166, "main.c"; 	powerOff();
     0044 2rrr                      1-  692     	LCALL	_powerOff
     0045 3rrr                      1-  693     	LGOTO	_00150_DS_
                                    1-  694     	.line	170, "main.c"; 	}
                                    1-  695     	RETURN	
     0046 0010                      3-   26 m1      ret
                                    1-  696     ; exit point of _main
                                    1-  698     ;***
                                    1-  699     ;  pBlock Stats: dbName = C
                                    1-  700     ;***
                                    1-  701     ;has an exit
                                    1-  702     ;; Starting pCode block
                                    1-  703     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  705     _F_wait_eoc:
                                    1-  706     ; 2 exit points
     0000                           1-  707     _00671_DS_:
                                    1-  708     	.line	706, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  709     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  710     	LGOTO	_00671_DS_
                                    1-  711     	.line	708, "main.c"; 	}
                                    1-  712     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  713     ; exit point of _F_wait_eoc
                                    1-  715     ;***
                                    1-  716     ;  pBlock Stats: dbName = C
                                    1-  717     ;***
                                    1-  718     ;has an exit
                                    1-  719     ;functions called:
                                    1-  720     ;   _delay
                                    1-  721     ;   _F_wait_eoc
                                    1-  722     ;   _delay
                                    1-  723     ;   _F_wait_eoc
                                    1-  724     ;6 compiler assigned registers:
                                    1-  725     ;   r0x1020
                                    1-  726     ;   r0x1021
                                    1-  727     ;   r0x1022
                                    1-  728     ;   r0x1023
                                    1-  729     ;   r0x1024
                                    1-  730     ;   r0x1025
                                    1-  731     ;; Starting pCode block
                                    1-  732     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1-  734     ;local variable name mapping:
     0000                           1-  737     _F_AIN1_Convert:
                                    1-  738     ; 2 exit points
                                    1-  739     	.line	689, "main.c"; 	void F_AIN1_Convert(char count)
                                    1-  740     	BANKSEL	r0x1020
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  741     	MOVAR	r0x1020
                                    1-  742     	.line	691, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
                                    1-  743     	BANKSEL	_R_AIN1_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  744     	CLRR	_R_AIN1_DATA_LB
                                    1-  745     	BANKSEL	_R_AIN1_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  746     	CLRR	_R_AIN1_DATA
     0006 02rr                      1-  747     	CLRR	(_R_AIN1_DATA + 1)
                                    1-  748     	.line	693, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0007 2191                      1-  749     	MOVIA	0x91
     0008 00rr                      1-  750     	MOVAR	_ADMD
                                    1-  751     	.line	694, "main.c"; 	delay(200);	
     0009 21C8                      1-  752     	MOVIA	0xc8
     000A 2rrr                      1-  753     	LCALL	_delay
                                    1-  754     	.line	695, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  755     	MOVIA	0x01
                                    1-  756     	BANKSEL	r0x1021
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  757     	MOVAR	r0x1021
     000E                           1-  758     _00664_DS_:
                                    1-  759     	BANKSEL	r0x1021
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1-  760     	MOVR	r0x1021,W
                                    1-  761     	BANKSEL	r0x1020
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  762     	SUBAR	r0x1020,W
     0012 0803                      1-  763     	BTRSS	STATUS,0
     0013 3rrr                      1-  764     	LGOTO	_00666_DS_
                                    1-  765     	.line	697, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  766     	BSR	_ADMDbits,6
                                    1-  767     	.line	698, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1-  768     	LCALL	_F_wait_eoc
                                    1-  769     	.line	699, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  770     	MOVIA	0x0f
     0017 10rr                      1-  771     	ANDAR	_ADR,W
                                    1-  772     ;;3	MOVAR	r0x1022
                                    1-  773     	BANKSEL	_R_AIN1_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1-  774     	ADDAR	_R_AIN1_DATA_LB,F
                                    1-  775     	.line	700, "main.c"; 	R_AIN1_DATA    += ADD; 
     001A 01rr                      1-  776     	MOVR	_ADD,W
                                    1-  777     	BANKSEL	r0x1022
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  778     	MOVAR	r0x1022
                                    1-  779     ;;1	CLRR	r0x1023
                                    1-  780     ;;102	MOVR	r0x1022,W
                                    1-  781     ;;100	MOVAR	r0x1024
     001D 2100                      1-  782     	MOVIA	0x00
                                    1-  783     	BANKSEL	r0x1025
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  784     	MOVAR	r0x1025
                                    1-  785     ;;101	MOVR	r0x1024,W
                                    1-  786     	BANKSEL	r0x1022
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  787     	MOVR	r0x1022,W
                                    1-  788     	BANKSEL	_R_AIN1_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1-  789     	ADDAR	_R_AIN1_DATA,F
                                    1-  790     	BANKSEL	r0x1025
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  791     	MOVR	r0x1025,W
     0026 0C03                      1-  792     	BTRSC	STATUS,0
     0027 05rr                      1-  793     	INCR	r0x1025,W
     0028 0D03                      1-  794     	BTRSC	STATUS,2
     0029 3rrr                      1-  795     	LGOTO	_00001_DS_
                                    1-  796     	BANKSEL	_R_AIN1_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1-  797     	ADDAR	(_R_AIN1_DATA + 1),F
     002C                           1-  798     _00001_DS_:
                                    1-  799     	.line	695, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  800     	BANKSEL	r0x1021
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  801     	INCR	r0x1021,F
     002E 3rrr                      1-  802     	LGOTO	_00664_DS_
     002F                           1-  803     _00666_DS_:
                                    1-  804     	.line	702, "main.c"; 	}
                                    1-  805     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1-  806     ; exit point of _F_AIN1_Convert
                                    1-  808     ;***
                                    1-  809     ;  pBlock Stats: dbName = C
                                    1-  810     ;***
                                    1-  811     ;has an exit
                                    1-  812     ;functions called:
                                    1-  813     ;   _F_AIN1_Convert
                                    1-  814     ;   _F_AIN1_Convert
                                    1-  815     ;4 compiler assigned registers:
                                    1-  816     ;   r0x1026
                                    1-  817     ;   r0x1027
                                    1-  818     ;   r0x1028
                                    1-  819     ;   r0x1029
                                    1-  820     ;; Starting pCode block
                                    1-  821     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  823     _checkBatAD:
                                    1-  824     ; 2 exit points
                                    1-  825     	.line	546, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA_LB = 0x00;
                                    1-  826     	BANKSEL	_R_AIN1_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  827     	CLRR	_R_AIN1_DATA_LB
                                    1-  828     	BANKSEL	_R_AIN1_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  829     	CLRR	_R_AIN1_DATA
     0004 02rr                      1-  830     	CLRR	(_R_AIN1_DATA + 1)
                                    1-  831     	.line	547, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  832     	MOVIA	0x08
     0006 2rrr                      1-  833     	LCALL	_F_AIN1_Convert
                                    1-  834     	.line	548, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  835     	BANKSEL	_R_AIN1_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1-  836     	SWAPR	(_R_AIN1_DATA + 1),W
     0009 22F0                      1-  837     	ANDIA	0xf0
     000A 00rr                      1-  838     	MOVAR	(_R_AIN1_DATA + 1)
     000B 15rr                      1-  839     	SWAPR	_R_AIN1_DATA,W
     000C 00rr                      1-  840     	MOVAR	_R_AIN1_DATA
     000D 220F                      1-  841     	ANDIA	0x0f
     000E 11rr                      1-  842     	IORAR	(_R_AIN1_DATA + 1),F
     000F 12rr                      1-  843     	XORAR	_R_AIN1_DATA,F
                                    1-  844     	.line	549, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  845     	MOVIA	0xf0
                                    1-  846     	BANKSEL	_R_AIN1_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1-  847     	ANDAR	_R_AIN1_DATA_LB,F
                                    1-  848     	.line	550, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  849     	MOVR	_R_AIN1_DATA_LB,W
                                    1-  850     	BANKSEL	r0x1028
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1-  851     	MOVAR	r0x1028
                                    1-  852     ;;1	MOVAR	r0x1026
                                    1-  853     ;;1	CLRR	r0x1027
                                    1-  854     ;;99	MOVR	r0x1026,W
     0016 2100                      1-  855     	MOVIA	0x00
                                    1-  856     	BANKSEL	r0x1029
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1-  857     	MOVAR	r0x1029
                                    1-  858     	BANKSEL	r0x1028
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  859     	MOVR	r0x1028,W
                                    1-  860     	BANKSEL	_R_AIN1_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1-  861     	ADDAR	_R_AIN1_DATA,F
                                    1-  862     	BANKSEL	r0x1029
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  863     	MOVR	r0x1029,W
     001F 0C03                      1-  864     	BTRSC	STATUS,0
     0020 05rr                      1-  865     	INCR	r0x1029,W
     0021 0D03                      1-  866     	BTRSC	STATUS,2
     0022 3rrr                      1-  867     	LGOTO	_00002_DS_
                                    1-  868     	BANKSEL	_R_AIN1_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1-  869     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1-  870     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  871     _00002_DS_:
                                    1-  872     	.line	551, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1-  873     	BCR	STATUS,0
                                    1-  874     	BANKSEL	_R_AIN1_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1-  875     	RRR	(_R_AIN1_DATA + 1),F
     0028 13rr                      1-  876     	RRR	_R_AIN1_DATA,F
                                    1-  877     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  878     	BCR	STATUS,0
     002A 13rr                      1-  879     	RRR	(_R_AIN1_DATA + 1),F
     002B 13rr                      1-  880     	RRR	_R_AIN1_DATA,F
                                    1-  881     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  882     	BCR	STATUS,0
     002D 13rr                      1-  883     	RRR	(_R_AIN1_DATA + 1),F
     002E 13rr                      1-  884     	RRR	_R_AIN1_DATA,F
                                    1-  885     	.line	552, "main.c"; 	if(debug)
                                    1-  886     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1-  887     	MOVR	_debug,W
     0031 0D03                      1-  888     	BTRSC	STATUS,2
     0032 3rrr                      1-  889     	LGOTO	_00423_DS_
                                    1-  890     	.line	553, "main.c"; 	R_AIN1_DATA = BATTLE;
     0033 210E                      1-  891     	MOVIA	0x0e
                                    1-  892     	BANKSEL	_R_AIN1_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1-  893     	MOVAR	_R_AIN1_DATA
     0036 2106                      1-  894     	MOVIA	0x06
     0037 00rr                      1-  895     	MOVAR	(_R_AIN1_DATA + 1)
                                    1-  896     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  897     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     0038                           1-  898     _00423_DS_:
                                    1-  899     	.line	555, "main.c"; 	if(R_AIN1_DATA > 1550)
     0038 2106                      1-  900     	MOVIA	0x06
                                    1-  901     	BANKSEL	_R_AIN1_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1-  902     	SUBAR	(_R_AIN1_DATA + 1),W
     003B 0903                      1-  903     	BTRSS	STATUS,2
     003C 3rrr                      1-  904     	LGOTO	_00629_DS_
     003D 210F                      1-  905     	MOVIA	0x0f
     003E 04rr                      1-  906     	SUBAR	_R_AIN1_DATA,W
     003F                           1-  907     _00629_DS_:
     003F 0803                      1-  908     	BTRSS	STATUS,0
     0040 3rrr                      1-  909     	LGOTO	_00435_DS_
                                    1-  910     	.line	558, "main.c"; 	lowCount = 0;
                                    1-  911     	BANKSEL	_lowCount
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 02rr                      1-  912     	CLRR	_lowCount
     0043 3rrr                      1-  913     	LGOTO	_00436_DS_
                                    1-  914     ;;unsigned compare: left < lit (0x479=1145), size=2
     0044                           1-  915     _00435_DS_:
                                    1-  916     	.line	560, "main.c"; 	else if(R_AIN1_DATA < 1145)
     0044 2104                      1-  917     	MOVIA	0x04
                                    1-  918     	BANKSEL	_R_AIN1_DATA
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 04rr                      1-  919     	SUBAR	(_R_AIN1_DATA + 1),W
     0047 0903                      1-  920     	BTRSS	STATUS,2
     0048 3rrr                      1-  921     	LGOTO	_00630_DS_
     0049 2179                      1-  922     	MOVIA	0x79
     004A 04rr                      1-  923     	SUBAR	_R_AIN1_DATA,W
     004B                           1-  924     _00630_DS_:
     004B 0C03                      1-  925     	BTRSC	STATUS,0
     004C 3rrr                      1-  926     	LGOTO	_00432_DS_
                                    1-  927     	.line	562, "main.c"; 	if(++lowCount < 10)
                                    1-  928     	BANKSEL	_lowCount
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 05rr                      1-  929     	INCR	_lowCount,F
                                    1-  930     ;;unsigned compare: left < lit (0xA=10), size=1
     004F 210A                      1-  931     	MOVIA	0x0a
     0050 04rr                      1-  932     	SUBAR	_lowCount,W
     0051 0803                      1-  933     	BTRSS	STATUS,0
                                    1-  934     	.line	563, "main.c"; 	return;
     0052 3rrr                      1-  935     	LGOTO	_00510_DS_
                                    1-  936     	.line	564, "main.c"; 	lowCount = 10;
     0053 210A                      1-  937     	MOVIA	0x0a
     0054 00rr                      1-  938     	MOVAR	_lowCount
                                    1-  939     	.line	565, "main.c"; 	pwStep = 0;
                                    1-  940     	BANKSEL	_pwStep
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 02rr                      1-  941     	CLRR	_pwStep
                                    1-  942     	.line	566, "main.c"; 	R_AIN1_DATA = 1145;
     0057 2179                      1-  943     	MOVIA	0x79
                                    1-  944     	BANKSEL	_R_AIN1_DATA
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 00rr                      1-  945     	MOVAR	_R_AIN1_DATA
     005A 2104                      1-  946     	MOVIA	0x04
     005B 00rr                      1-  947     	MOVAR	(_R_AIN1_DATA + 1)
                                    1-  948     	.line	568, "main.c"; 	if(workStep > 0 && ++firstTime == 10)
                                    1-  949     	BANKSEL	_workStep
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1-  950     	MOVR	_workStep,W
     005E 0D03                      1-  951     	BTRSC	STATUS,2
     005F 3rrr                      1-  952     	LGOTO	_00427_DS_
                                    1-  953     	BANKSEL	_firstTime
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 05rr                      1-  954     	INCR	_firstTime,F
     0062 01rr                      1-  955     	MOVR	_firstTime,W
     0063 240A                      1-  956     	XORIA	0x0a
     0064 0903                      1-  957     	BTRSS	STATUS,2
     0065 3rrr                      1-  958     	LGOTO	_00427_DS_
                                    1-  959     	.line	570, "main.c"; 	shanshuoTime = 16;
     0066 2110                      1-  960     	MOVIA	0x10
                                    1-  961     	BANKSEL	_shanshuoTime
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1-  962     	MOVAR	_shanshuoTime
                                    1-  963     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  964     ;;unsigned compare: left >= lit (0xC=12), size=1
     0069                           1-  965     _00427_DS_:
                                    1-  966     	.line	573, "main.c"; 	if(firstTime > 11)
     0069 210C                      1-  967     	MOVIA	0x0c
                                    1-  968     	BANKSEL	_firstTime
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 04rr                      1-  969     	SUBAR	_firstTime,W
     006C 0803                      1-  970     	BTRSS	STATUS,0
     006D 3rrr                      1-  971     	LGOTO	_00436_DS_
                                    1-  972     	.line	574, "main.c"; 	firstTime = 11;
     006E 210B                      1-  973     	MOVIA	0x0b
     006F 00rr                      1-  974     	MOVAR	_firstTime
     0070 3rrr                      1-  975     	LGOTO	_00436_DS_
     0071                           1-  976     _00432_DS_:
                                    1-  977     	.line	578, "main.c"; 	lowCount = 0;
                                    1-  978     	BANKSEL	_lowCount
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 02rr                      1-  979     	CLRR	_lowCount
                                    1-  980     	.line	579, "main.c"; 	firstTime = 0;
                                    1-  981     	BANKSEL	_firstTime
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 02rr                      1-  982     	CLRR	_firstTime
     0075                           1-  983     _00436_DS_:
                                    1-  984     	.line	581, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA - 1145;
     0075 2187                      1-  985     	MOVIA	0x87
                                    1-  986     	BANKSEL	_R_AIN1_DATA
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 03rr                      1-  987     	ADDAR	_R_AIN1_DATA,F
     0078 21FB                      1-  988     	MOVIA	0xfb
     0079 0C03                      1-  989     	BTRSC	STATUS,0
     007A 21FC                      1-  990     	MOVIA	0xfc
     007B 03rr                      1-  991     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1-  992     ;;unsigned compare: left < lit (0x1A6=422), size=2
                                    1-  993     	.line	583, "main.c"; 	if(R_AIN1_DATA >= 422)
     007C 2101                      1-  994     	MOVIA	0x01
     007D 04rr                      1-  995     	SUBAR	(_R_AIN1_DATA + 1),W
     007E 0903                      1-  996     	BTRSS	STATUS,2
     007F 3rrr                      1-  997     	LGOTO	_00633_DS_
     0080 21A6                      1-  998     	MOVIA	0xa6
     0081 04rr                      1-  999     	SUBAR	_R_AIN1_DATA,W
     0082                           1- 1000     _00633_DS_:
     0082 0803                      1- 1001     	BTRSS	STATUS,0
     0083 3rrr                      1- 1002     	LGOTO	_00508_DS_
                                    1- 1003     	.line	585, "main.c"; 	pwStep = 7;
     0084 2107                      1- 1004     	MOVIA	0x07
                                    1- 1005     	BANKSEL	_pwStep
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 00rr                      1- 1006     	MOVAR	_pwStep
     0087 3rrr                      1- 1007     	LGOTO	_00510_DS_
                                    1- 1008     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1009     ;;unsigned compare: left >= lit (0x15F=351), size=2
     0088                           1- 1010     _00508_DS_:
                                    1- 1011     	.line	587, "main.c"; 	else if(R_AIN1_DATA > 350)
     0088 2101                      1- 1012     	MOVIA	0x01
                                    1- 1013     	BANKSEL	_R_AIN1_DATA
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 04rr                      1- 1014     	SUBAR	(_R_AIN1_DATA + 1),W
     008B 0903                      1- 1015     	BTRSS	STATUS,2
     008C 3rrr                      1- 1016     	LGOTO	_00634_DS_
     008D 215F                      1- 1017     	MOVIA	0x5f
     008E 04rr                      1- 1018     	SUBAR	_R_AIN1_DATA,W
     008F                           1- 1019     _00634_DS_:
     008F 0803                      1- 1020     	BTRSS	STATUS,0
     0090 3rrr                      1- 1021     	LGOTO	_00505_DS_
                                    1- 1022     	.line	589, "main.c"; 	fullCount = 0;
                                    1- 1023     	BANKSEL	_fullCount
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 02rr                      1- 1024     	CLRR	_fullCount
                                    1- 1025     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1026     	.line	590, "main.c"; 	if(pwStep < 6)
     0093 2106                      1- 1027     	MOVIA	0x06
                                    1- 1028     	BANKSEL	_pwStep
     0094 rrrr                      3-   71 m1      .banksel ram_address
     0095 04rr                      1- 1029     	SUBAR	_pwStep,W
     0096 0C03                      1- 1030     	BTRSC	STATUS,0
     0097 3rrr                      1- 1031     	LGOTO	_00443_DS_
                                    1- 1032     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1033     ;;unsigned compare: left >= lit (0x164=356), size=2
                                    1- 1034     	.line	592, "main.c"; 	if(R_AIN1_DATA > 355)
     0098 2101                      1- 1035     	MOVIA	0x01
                                    1- 1036     	BANKSEL	_R_AIN1_DATA
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 04rr                      1- 1037     	SUBAR	(_R_AIN1_DATA + 1),W
     009B 0903                      1- 1038     	BTRSS	STATUS,2
     009C 3rrr                      1- 1039     	LGOTO	_00636_DS_
     009D 2164                      1- 1040     	MOVIA	0x64
     009E 04rr                      1- 1041     	SUBAR	_R_AIN1_DATA,W
     009F                           1- 1042     _00636_DS_:
     009F 0803                      1- 1043     	BTRSS	STATUS,0
     00A0 3rrr                      1- 1044     	LGOTO	_00444_DS_
                                    1- 1045     	.line	593, "main.c"; 	pwStep = 6;
     00A1 2106                      1- 1046     	MOVIA	0x06
                                    1- 1047     	BANKSEL	_pwStep
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 00rr                      1- 1048     	MOVAR	_pwStep
     00A4 3rrr                      1- 1049     	LGOTO	_00444_DS_
     00A5                           1- 1050     _00443_DS_:
                                    1- 1051     	.line	595, "main.c"; 	else if(chrgTime == 0 && R_AIN1_DATA < 396)
                                    1- 1052     	BANKSEL	_chrgTime
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 01rr                      1- 1053     	MOVR	_chrgTime,W
     00A7 11rr                      1- 1054     	IORAR	(_chrgTime + 1),W
     00A8 0903                      1- 1055     	BTRSS	STATUS,2
     00A9 3rrr                      1- 1056     	LGOTO	_00444_DS_
                                    1- 1057     ;;unsigned compare: left < lit (0x18C=396), size=2
     00AA 2101                      1- 1058     	MOVIA	0x01
                                    1- 1059     	BANKSEL	_R_AIN1_DATA
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 04rr                      1- 1060     	SUBAR	(_R_AIN1_DATA + 1),W
     00AD 0903                      1- 1061     	BTRSS	STATUS,2
     00AE 3rrr                      1- 1062     	LGOTO	_00637_DS_
     00AF 218C                      1- 1063     	MOVIA	0x8c
     00B0 04rr                      1- 1064     	SUBAR	_R_AIN1_DATA,W
     00B1                           1- 1065     _00637_DS_:
     00B1 0C03                      1- 1066     	BTRSC	STATUS,0
     00B2 3rrr                      1- 1067     	LGOTO	_00444_DS_
                                    1- 1068     	.line	597, "main.c"; 	pwStep = 6;
     00B3 2106                      1- 1069     	MOVIA	0x06
                                    1- 1070     	BANKSEL	_pwStep
     00B4 rrrr                      3-   71 m1      .banksel ram_address
     00B5 00rr                      1- 1071     	MOVAR	_pwStep
     00B6                           1- 1072     _00444_DS_:
                                    1- 1073     	.line	601, "main.c"; 	if(chrgTime > 0 && R_AIN1_DATA > 395 && chrgTime > 600)
                                    1- 1074     	BANKSEL	_chrgTime
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 01rr                      1- 1075     	MOVR	_chrgTime,W
     00B8 11rr                      1- 1076     	IORAR	(_chrgTime + 1),W
     00B9 0D03                      1- 1077     	BTRSC	STATUS,2
     00BA 3rrr                      1- 1078     	LGOTO	_00510_DS_
                                    1- 1079     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1080     ;;unsigned compare: left >= lit (0x18C=396), size=2
     00BB 2101                      1- 1081     	MOVIA	0x01
                                    1- 1082     	BANKSEL	_R_AIN1_DATA
     00BC rrrr                      3-   71 m1      .banksel ram_address
     00BD 04rr                      1- 1083     	SUBAR	(_R_AIN1_DATA + 1),W
     00BE 0903                      1- 1084     	BTRSS	STATUS,2
     00BF 3rrr                      1- 1085     	LGOTO	_00638_DS_
     00C0 218C                      1- 1086     	MOVIA	0x8c
     00C1 04rr                      1- 1087     	SUBAR	_R_AIN1_DATA,W
     00C2                           1- 1088     _00638_DS_:
     00C2 0803                      1- 1089     	BTRSS	STATUS,0
     00C3 3rrr                      1- 1090     	LGOTO	_00510_DS_
                                    1- 1091     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1092     ;;unsigned compare: left >= lit (0x259=601), size=2
     00C4 2102                      1- 1093     	MOVIA	0x02
                                    1- 1094     	BANKSEL	_chrgTime
     00C5 rrrr                      3-   71 m1      .banksel ram_address
     00C6 04rr                      1- 1095     	SUBAR	(_chrgTime + 1),W
     00C7 0903                      1- 1096     	BTRSS	STATUS,2
     00C8 3rrr                      1- 1097     	LGOTO	_00639_DS_
     00C9 2159                      1- 1098     	MOVIA	0x59
     00CA 04rr                      1- 1099     	SUBAR	_chrgTime,W
     00CB                           1- 1100     _00639_DS_:
     00CB 0803                      1- 1101     	BTRSS	STATUS,0
     00CC 3rrr                      1- 1102     	LGOTO	_00510_DS_
                                    1- 1103     	.line	603, "main.c"; 	chrgTime = 600;
     00CD 2158                      1- 1104     	MOVIA	0x58
                                    1- 1105     	BANKSEL	_chrgTime
     00CE rrrr                      3-   71 m1      .banksel ram_address
     00CF 00rr                      1- 1106     	MOVAR	_chrgTime
     00D0 2102                      1- 1107     	MOVIA	0x02
     00D1 00rr                      1- 1108     	MOVAR	(_chrgTime + 1)
                                    1- 1109     	.line	604, "main.c"; 	pwStep = 7;
     00D2 2107                      1- 1110     	MOVIA	0x07
                                    1- 1111     	BANKSEL	_pwStep
     00D3 rrrr                      3-   71 m1      .banksel ram_address
     00D4 00rr                      1- 1112     	MOVAR	_pwStep
     00D5 3rrr                      1- 1113     	LGOTO	_00510_DS_
                                    1- 1114     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1115     ;;unsigned compare: left >= lit (0x146=326), size=2
     00D6                           1- 1116     _00505_DS_:
                                    1- 1117     	.line	607, "main.c"; 	else if(R_AIN1_DATA > 325)
     00D6 2101                      1- 1118     	MOVIA	0x01
                                    1- 1119     	BANKSEL	_R_AIN1_DATA
     00D7 rrrr                      3-   71 m1      .banksel ram_address
     00D8 04rr                      1- 1120     	SUBAR	(_R_AIN1_DATA + 1),W
     00D9 0903                      1- 1121     	BTRSS	STATUS,2
     00DA 3rrr                      1- 1122     	LGOTO	_00640_DS_
     00DB 2146                      1- 1123     	MOVIA	0x46
     00DC 04rr                      1- 1124     	SUBAR	_R_AIN1_DATA,W
     00DD                           1- 1125     _00640_DS_:
     00DD 0803                      1- 1126     	BTRSS	STATUS,0
     00DE 3rrr                      1- 1127     	LGOTO	_00502_DS_
                                    1- 1128     	.line	610, "main.c"; 	if(pwStep == 4)
                                    1- 1129     	BANKSEL	_pwStep
     00DF rrrr                      3-   71 m1      .banksel ram_address
     00E0 01rr                      1- 1130     	MOVR	_pwStep,W
     00E1 2404                      1- 1131     	XORIA	0x04
     00E2 0903                      1- 1132     	BTRSS	STATUS,2
     00E3 3rrr                      1- 1133     	LGOTO	_00452_DS_
                                    1- 1134     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1135     ;;unsigned compare: left >= lit (0x14B=331), size=2
                                    1- 1136     	.line	612, "main.c"; 	if(R_AIN1_DATA > 330)
     00E4 2101                      1- 1137     	MOVIA	0x01
                                    1- 1138     	BANKSEL	_R_AIN1_DATA
     00E5 rrrr                      3-   71 m1      .banksel ram_address
     00E6 04rr                      1- 1139     	SUBAR	(_R_AIN1_DATA + 1),W
     00E7 0903                      1- 1140     	BTRSS	STATUS,2
     00E8 3rrr                      1- 1141     	LGOTO	_00641_DS_
     00E9 214B                      1- 1142     	MOVIA	0x4b
     00EA 04rr                      1- 1143     	SUBAR	_R_AIN1_DATA,W
     00EB                           1- 1144     _00641_DS_:
     00EB 0803                      1- 1145     	BTRSS	STATUS,0
     00EC 3rrr                      1- 1146     	LGOTO	_00452_DS_
                                    1- 1147     	.line	613, "main.c"; 	pwStep = 5;
     00ED 2105                      1- 1148     	MOVIA	0x05
                                    1- 1149     	BANKSEL	_pwStep
     00EE rrrr                      3-   71 m1      .banksel ram_address
     00EF 00rr                      1- 1150     	MOVAR	_pwStep
                                    1- 1151     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1152     ;;unsigned compare: left >= lit (0x6=6), size=1
     00F0                           1- 1153     _00452_DS_:
                                    1- 1154     	.line	615, "main.c"; 	if(pwStep > 5)
     00F0 2106                      1- 1155     	MOVIA	0x06
                                    1- 1156     	BANKSEL	_pwStep
     00F1 rrrr                      3-   71 m1      .banksel ram_address
     00F2 04rr                      1- 1157     	SUBAR	_pwStep,W
     00F3 0803                      1- 1158     	BTRSS	STATUS,0
     00F4 3rrr                      1- 1159     	LGOTO	_00456_DS_
                                    1- 1160     ;;unsigned compare: left < lit (0x16D=365), size=2
                                    1- 1161     	.line	617, "main.c"; 	if(R_AIN1_DATA < 365)
     00F5 2101                      1- 1162     	MOVIA	0x01
                                    1- 1163     	BANKSEL	_R_AIN1_DATA
     00F6 rrrr                      3-   71 m1      .banksel ram_address
     00F7 04rr                      1- 1164     	SUBAR	(_R_AIN1_DATA + 1),W
     00F8 0903                      1- 1165     	BTRSS	STATUS,2
     00F9 3rrr                      1- 1166     	LGOTO	_00643_DS_
     00FA 216D                      1- 1167     	MOVIA	0x6d
     00FB 04rr                      1- 1168     	SUBAR	_R_AIN1_DATA,W
     00FC                           1- 1169     _00643_DS_:
     00FC 0C03                      1- 1170     	BTRSC	STATUS,0
     00FD 3rrr                      1- 1171     	LGOTO	_00457_DS_
                                    1- 1172     	.line	618, "main.c"; 	pwStep = 5;
     00FE 2105                      1- 1173     	MOVIA	0x05
                                    1- 1174     	BANKSEL	_pwStep
     00FF rrrr                      3-   71 m1      .banksel ram_address
     0100 00rr                      1- 1175     	MOVAR	_pwStep
     0101 3rrr                      1- 1176     	LGOTO	_00457_DS_
     0102                           1- 1177     _00456_DS_:
                                    1- 1178     	.line	621, "main.c"; 	pwStep = 5;
     0102 2105                      1- 1179     	MOVIA	0x05
                                    1- 1180     	BANKSEL	_pwStep
     0103 rrrr                      3-   71 m1      .banksel ram_address
     0104 00rr                      1- 1181     	MOVAR	_pwStep
     0105                           1- 1182     _00457_DS_:
                                    1- 1183     	.line	622, "main.c"; 	chrgTime = 0;
                                    1- 1184     	BANKSEL	_chrgTime
     0105 rrrr                      3-   71 m1      .banksel ram_address
     0106 02rr                      1- 1185     	CLRR	_chrgTime
     0107 02rr                      1- 1186     	CLRR	(_chrgTime + 1)
     0108 3rrr                      1- 1187     	LGOTO	_00510_DS_
                                    1- 1188     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1189     ;;unsigned compare: left >= lit (0x105=261), size=2
     0109                           1- 1190     _00502_DS_:
                                    1- 1191     	.line	624, "main.c"; 	else if(R_AIN1_DATA > 260)
     0109 2101                      1- 1192     	MOVIA	0x01
                                    1- 1193     	BANKSEL	_R_AIN1_DATA
     010A rrrr                      3-   71 m1      .banksel ram_address
     010B 04rr                      1- 1194     	SUBAR	(_R_AIN1_DATA + 1),W
     010C 0903                      1- 1195     	BTRSS	STATUS,2
     010D 3rrr                      1- 1196     	LGOTO	_00644_DS_
     010E 2105                      1- 1197     	MOVIA	0x05
     010F 04rr                      1- 1198     	SUBAR	_R_AIN1_DATA,W
     0110                           1- 1199     _00644_DS_:
     0110 0803                      1- 1200     	BTRSS	STATUS,0
     0111 3rrr                      1- 1201     	LGOTO	_00499_DS_
                                    1- 1202     	.line	626, "main.c"; 	if(pwStep == 3)
                                    1- 1203     	BANKSEL	_pwStep
     0112 rrrr                      3-   71 m1      .banksel ram_address
     0113 01rr                      1- 1204     	MOVR	_pwStep,W
     0114 2403                      1- 1205     	XORIA	0x03
     0115 0903                      1- 1206     	BTRSS	STATUS,2
     0116 3rrr                      1- 1207     	LGOTO	_00461_DS_
                                    1- 1208     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1209     ;;unsigned compare: left >= lit (0x10A=266), size=2
                                    1- 1210     	.line	628, "main.c"; 	if(R_AIN1_DATA > 265)
     0117 2101                      1- 1211     	MOVIA	0x01
                                    1- 1212     	BANKSEL	_R_AIN1_DATA
     0118 rrrr                      3-   71 m1      .banksel ram_address
     0119 04rr                      1- 1213     	SUBAR	(_R_AIN1_DATA + 1),W
     011A 0903                      1- 1214     	BTRSS	STATUS,2
     011B 3rrr                      1- 1215     	LGOTO	_00645_DS_
     011C 210A                      1- 1216     	MOVIA	0x0a
     011D 04rr                      1- 1217     	SUBAR	_R_AIN1_DATA,W
     011E                           1- 1218     _00645_DS_:
     011E 0803                      1- 1219     	BTRSS	STATUS,0
     011F 3rrr                      1- 1220     	LGOTO	_00461_DS_
                                    1- 1221     	.line	629, "main.c"; 	pwStep = 4;
     0120 2104                      1- 1222     	MOVIA	0x04
                                    1- 1223     	BANKSEL	_pwStep
     0121 rrrr                      3-   71 m1      .banksel ram_address
     0122 00rr                      1- 1224     	MOVAR	_pwStep
                                    1- 1225     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1226     ;;unsigned compare: left >= lit (0x5=5), size=1
     0123                           1- 1227     _00461_DS_:
                                    1- 1228     	.line	631, "main.c"; 	if(pwStep > 4)
     0123 2105                      1- 1229     	MOVIA	0x05
                                    1- 1230     	BANKSEL	_pwStep
     0124 rrrr                      3-   71 m1      .banksel ram_address
     0125 04rr                      1- 1231     	SUBAR	_pwStep,W
     0126 0803                      1- 1232     	BTRSS	STATUS,0
     0127 3rrr                      1- 1233     	LGOTO	_00465_DS_
                                    1- 1234     ;;unsigned compare: left < lit (0x140=320), size=2
                                    1- 1235     	.line	633, "main.c"; 	if(R_AIN1_DATA < 320)
     0128 2101                      1- 1236     	MOVIA	0x01
                                    1- 1237     	BANKSEL	_R_AIN1_DATA
     0129 rrrr                      3-   71 m1      .banksel ram_address
     012A 04rr                      1- 1238     	SUBAR	(_R_AIN1_DATA + 1),W
     012B 0903                      1- 1239     	BTRSS	STATUS,2
     012C 3rrr                      1- 1240     	LGOTO	_00647_DS_
     012D 2140                      1- 1241     	MOVIA	0x40
     012E 04rr                      1- 1242     	SUBAR	_R_AIN1_DATA,W
     012F                           1- 1243     _00647_DS_:
     012F 0C03                      1- 1244     	BTRSC	STATUS,0
     0130 3rrr                      1- 1245     	LGOTO	_00466_DS_
                                    1- 1246     	.line	634, "main.c"; 	pwStep = 4;
     0131 2104                      1- 1247     	MOVIA	0x04
                                    1- 1248     	BANKSEL	_pwStep
     0132 rrrr                      3-   71 m1      .banksel ram_address
     0133 00rr                      1- 1249     	MOVAR	_pwStep
     0134 3rrr                      1- 1250     	LGOTO	_00466_DS_
     0135                           1- 1251     _00465_DS_:
                                    1- 1252     	.line	637, "main.c"; 	pwStep = 4;
     0135 2104                      1- 1253     	MOVIA	0x04
                                    1- 1254     	BANKSEL	_pwStep
     0136 rrrr                      3-   71 m1      .banksel ram_address
     0137 00rr                      1- 1255     	MOVAR	_pwStep
     0138                           1- 1256     _00466_DS_:
                                    1- 1257     	.line	638, "main.c"; 	chrgTime = 0;
                                    1- 1258     	BANKSEL	_chrgTime
     0138 rrrr                      3-   71 m1      .banksel ram_address
     0139 02rr                      1- 1259     	CLRR	_chrgTime
     013A 02rr                      1- 1260     	CLRR	(_chrgTime + 1)
     013B 3rrr                      1- 1261     	LGOTO	_00510_DS_
                                    1- 1262     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1263     ;;unsigned compare: left >= lit (0xC9=201), size=2
     013C                           1- 1264     _00499_DS_:
                                    1- 1265     	.line	640, "main.c"; 	else if(R_AIN1_DATA > 200)
     013C 2100                      1- 1266     	MOVIA	0x00
                                    1- 1267     	BANKSEL	_R_AIN1_DATA
     013D rrrr                      3-   71 m1      .banksel ram_address
     013E 04rr                      1- 1268     	SUBAR	(_R_AIN1_DATA + 1),W
     013F 0903                      1- 1269     	BTRSS	STATUS,2
     0140 3rrr                      1- 1270     	LGOTO	_00648_DS_
     0141 21C9                      1- 1271     	MOVIA	0xc9
     0142 04rr                      1- 1272     	SUBAR	_R_AIN1_DATA,W
     0143                           1- 1273     _00648_DS_:
     0143 0803                      1- 1274     	BTRSS	STATUS,0
     0144 3rrr                      1- 1275     	LGOTO	_00496_DS_
                                    1- 1276     	.line	642, "main.c"; 	if(pwStep == 2)
                                    1- 1277     	BANKSEL	_pwStep
     0145 rrrr                      3-   71 m1      .banksel ram_address
     0146 01rr                      1- 1278     	MOVR	_pwStep,W
     0147 2402                      1- 1279     	XORIA	0x02
     0148 0903                      1- 1280     	BTRSS	STATUS,2
     0149 3rrr                      1- 1281     	LGOTO	_00470_DS_
                                    1- 1282     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1283     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 1284     	.line	644, "main.c"; 	if(R_AIN1_DATA > 210)
     014A 2100                      1- 1285     	MOVIA	0x00
                                    1- 1286     	BANKSEL	_R_AIN1_DATA
     014B rrrr                      3-   71 m1      .banksel ram_address
     014C 04rr                      1- 1287     	SUBAR	(_R_AIN1_DATA + 1),W
     014D 0903                      1- 1288     	BTRSS	STATUS,2
     014E 3rrr                      1- 1289     	LGOTO	_00649_DS_
     014F 21D3                      1- 1290     	MOVIA	0xd3
     0150 04rr                      1- 1291     	SUBAR	_R_AIN1_DATA,W
     0151                           1- 1292     _00649_DS_:
     0151 0803                      1- 1293     	BTRSS	STATUS,0
     0152 3rrr                      1- 1294     	LGOTO	_00470_DS_
                                    1- 1295     	.line	645, "main.c"; 	pwStep = 3;
     0153 2103                      1- 1296     	MOVIA	0x03
                                    1- 1297     	BANKSEL	_pwStep
     0154 rrrr                      3-   71 m1      .banksel ram_address
     0155 00rr                      1- 1298     	MOVAR	_pwStep
                                    1- 1299     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1300     ;;unsigned compare: left >= lit (0x4=4), size=1
     0156                           1- 1301     _00470_DS_:
                                    1- 1302     	.line	647, "main.c"; 	if(pwStep > 3)
     0156 2104                      1- 1303     	MOVIA	0x04
                                    1- 1304     	BANKSEL	_pwStep
     0157 rrrr                      3-   71 m1      .banksel ram_address
     0158 04rr                      1- 1305     	SUBAR	_pwStep,W
     0159 0803                      1- 1306     	BTRSS	STATUS,0
     015A 3rrr                      1- 1307     	LGOTO	_00474_DS_
                                    1- 1308     ;;unsigned compare: left < lit (0x104=260), size=2
                                    1- 1309     	.line	649, "main.c"; 	if(R_AIN1_DATA < 260)
     015B 2101                      1- 1310     	MOVIA	0x01
                                    1- 1311     	BANKSEL	_R_AIN1_DATA
     015C rrrr                      3-   71 m1      .banksel ram_address
     015D 04rr                      1- 1312     	SUBAR	(_R_AIN1_DATA + 1),W
     015E 0903                      1- 1313     	BTRSS	STATUS,2
     015F 3rrr                      1- 1314     	LGOTO	_00651_DS_
     0160 2104                      1- 1315     	MOVIA	0x04
     0161 04rr                      1- 1316     	SUBAR	_R_AIN1_DATA,W
     0162                           1- 1317     _00651_DS_:
     0162 0C03                      1- 1318     	BTRSC	STATUS,0
     0163 3rrr                      1- 1319     	LGOTO	_00475_DS_
                                    1- 1320     	.line	650, "main.c"; 	pwStep = 3;
     0164 2103                      1- 1321     	MOVIA	0x03
                                    1- 1322     	BANKSEL	_pwStep
     0165 rrrr                      3-   71 m1      .banksel ram_address
     0166 00rr                      1- 1323     	MOVAR	_pwStep
     0167 3rrr                      1- 1324     	LGOTO	_00475_DS_
     0168                           1- 1325     _00474_DS_:
                                    1- 1326     	.line	653, "main.c"; 	pwStep = 3;
     0168 2103                      1- 1327     	MOVIA	0x03
                                    1- 1328     	BANKSEL	_pwStep
     0169 rrrr                      3-   71 m1      .banksel ram_address
     016A 00rr                      1- 1329     	MOVAR	_pwStep
     016B                           1- 1330     _00475_DS_:
                                    1- 1331     	.line	654, "main.c"; 	chrgTime = 0;
                                    1- 1332     	BANKSEL	_chrgTime
     016B rrrr                      3-   71 m1      .banksel ram_address
     016C 02rr                      1- 1333     	CLRR	_chrgTime
     016D 02rr                      1- 1334     	CLRR	(_chrgTime + 1)
     016E 3rrr                      1- 1335     	LGOTO	_00510_DS_
                                    1- 1336     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1337     ;;unsigned compare: left >= lit (0x65=101), size=2
     016F                           1- 1338     _00496_DS_:
                                    1- 1339     	.line	656, "main.c"; 	else if(R_AIN1_DATA > 100)
     016F 2100                      1- 1340     	MOVIA	0x00
                                    1- 1341     	BANKSEL	_R_AIN1_DATA
     0170 rrrr                      3-   71 m1      .banksel ram_address
     0171 04rr                      1- 1342     	SUBAR	(_R_AIN1_DATA + 1),W
     0172 0903                      1- 1343     	BTRSS	STATUS,2
     0173 3rrr                      1- 1344     	LGOTO	_00652_DS_
     0174 2165                      1- 1345     	MOVIA	0x65
     0175 04rr                      1- 1346     	SUBAR	_R_AIN1_DATA,W
     0176                           1- 1347     _00652_DS_:
     0176 0803                      1- 1348     	BTRSS	STATUS,0
     0177 3rrr                      1- 1349     	LGOTO	_00493_DS_
                                    1- 1350     	.line	659, "main.c"; 	if(pwStep == 1)
                                    1- 1351     	BANKSEL	_pwStep
     0178 rrrr                      3-   71 m1      .banksel ram_address
     0179 01rr                      1- 1352     	MOVR	_pwStep,W
     017A 2401                      1- 1353     	XORIA	0x01
     017B 0903                      1- 1354     	BTRSS	STATUS,2
     017C 3rrr                      1- 1355     	LGOTO	_00479_DS_
                                    1- 1356     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1357     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 1358     	.line	661, "main.c"; 	if(R_AIN1_DATA > 110)
     017D 2100                      1- 1359     	MOVIA	0x00
                                    1- 1360     	BANKSEL	_R_AIN1_DATA
     017E rrrr                      3-   71 m1      .banksel ram_address
     017F 04rr                      1- 1361     	SUBAR	(_R_AIN1_DATA + 1),W
     0180 0903                      1- 1362     	BTRSS	STATUS,2
     0181 3rrr                      1- 1363     	LGOTO	_00653_DS_
     0182 216F                      1- 1364     	MOVIA	0x6f
     0183 04rr                      1- 1365     	SUBAR	_R_AIN1_DATA,W
     0184                           1- 1366     _00653_DS_:
     0184 0803                      1- 1367     	BTRSS	STATUS,0
     0185 3rrr                      1- 1368     	LGOTO	_00479_DS_
                                    1- 1369     	.line	662, "main.c"; 	pwStep = 2;
     0186 2102                      1- 1370     	MOVIA	0x02
                                    1- 1371     	BANKSEL	_pwStep
     0187 rrrr                      3-   71 m1      .banksel ram_address
     0188 00rr                      1- 1372     	MOVAR	_pwStep
                                    1- 1373     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1374     ;;unsigned compare: left >= lit (0x3=3), size=1
     0189                           1- 1375     _00479_DS_:
                                    1- 1376     	.line	664, "main.c"; 	if(pwStep > 2)
     0189 2103                      1- 1377     	MOVIA	0x03
                                    1- 1378     	BANKSEL	_pwStep
     018A rrrr                      3-   71 m1      .banksel ram_address
     018B 04rr                      1- 1379     	SUBAR	_pwStep,W
     018C 0803                      1- 1380     	BTRSS	STATUS,0
     018D 3rrr                      1- 1381     	LGOTO	_00483_DS_
                                    1- 1382     ;;unsigned compare: left < lit (0xBE=190), size=2
                                    1- 1383     	.line	666, "main.c"; 	if(R_AIN1_DATA < 190)
     018E 2100                      1- 1384     	MOVIA	0x00
                                    1- 1385     	BANKSEL	_R_AIN1_DATA
     018F rrrr                      3-   71 m1      .banksel ram_address
     0190 04rr                      1- 1386     	SUBAR	(_R_AIN1_DATA + 1),W
     0191 0903                      1- 1387     	BTRSS	STATUS,2
     0192 3rrr                      1- 1388     	LGOTO	_00655_DS_
     0193 21BE                      1- 1389     	MOVIA	0xbe
     0194 04rr                      1- 1390     	SUBAR	_R_AIN1_DATA,W
     0195                           1- 1391     _00655_DS_:
     0195 0C03                      1- 1392     	BTRSC	STATUS,0
     0196 3rrr                      1- 1393     	LGOTO	_00484_DS_
                                    1- 1394     	.line	667, "main.c"; 	pwStep = 2;
     0197 2102                      1- 1395     	MOVIA	0x02
                                    1- 1396     	BANKSEL	_pwStep
     0198 rrrr                      3-   71 m1      .banksel ram_address
     0199 00rr                      1- 1397     	MOVAR	_pwStep
     019A 3rrr                      1- 1398     	LGOTO	_00484_DS_
     019B                           1- 1399     _00483_DS_:
                                    1- 1400     	.line	670, "main.c"; 	pwStep = 2;
     019B 2102                      1- 1401     	MOVIA	0x02
                                    1- 1402     	BANKSEL	_pwStep
     019C rrrr                      3-   71 m1      .banksel ram_address
     019D 00rr                      1- 1403     	MOVAR	_pwStep
     019E                           1- 1404     _00484_DS_:
                                    1- 1405     	.line	671, "main.c"; 	chrgTime = 0;
                                    1- 1406     	BANKSEL	_chrgTime
     019E rrrr                      3-   71 m1      .banksel ram_address
     019F 02rr                      1- 1407     	CLRR	_chrgTime
     01A0 02rr                      1- 1408     	CLRR	(_chrgTime + 1)
     01A1 3rrr                      1- 1409     	LGOTO	_00510_DS_
     01A2                           1- 1410     _00493_DS_:
                                    1- 1411     	.line	673, "main.c"; 	else  if(R_AIN1_DATA > 0)
                                    1- 1412     	BANKSEL	_R_AIN1_DATA
     01A2 rrrr                      3-   71 m1      .banksel ram_address
     01A3 01rr                      1- 1413     	MOVR	_R_AIN1_DATA,W
     01A4 11rr                      1- 1414     	IORAR	(_R_AIN1_DATA + 1),W
     01A5 0D03                      1- 1415     	BTRSC	STATUS,2
     01A6 3rrr                      1- 1416     	LGOTO	_00510_DS_
                                    1- 1417     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1418     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 1419     	.line	676, "main.c"; 	if(pwStep > 1)
     01A7 2102                      1- 1420     	MOVIA	0x02
                                    1- 1421     	BANKSEL	_pwStep
     01A8 rrrr                      3-   71 m1      .banksel ram_address
     01A9 04rr                      1- 1422     	SUBAR	_pwStep,W
     01AA 0803                      1- 1423     	BTRSS	STATUS,0
     01AB 3rrr                      1- 1424     	LGOTO	_00488_DS_
                                    1- 1425     ;;unsigned compare: left < lit (0x5A=90), size=2
                                    1- 1426     	.line	678, "main.c"; 	if(R_AIN1_DATA < 90)
     01AC 2100                      1- 1427     	MOVIA	0x00
                                    1- 1428     	BANKSEL	_R_AIN1_DATA
     01AD rrrr                      3-   71 m1      .banksel ram_address
     01AE 04rr                      1- 1429     	SUBAR	(_R_AIN1_DATA + 1),W
     01AF 0903                      1- 1430     	BTRSS	STATUS,2
     01B0 3rrr                      1- 1431     	LGOTO	_00657_DS_
     01B1 215A                      1- 1432     	MOVIA	0x5a
     01B2 04rr                      1- 1433     	SUBAR	_R_AIN1_DATA,W
     01B3                           1- 1434     _00657_DS_:
     01B3 0C03                      1- 1435     	BTRSC	STATUS,0
     01B4 3rrr                      1- 1436     	LGOTO	_00489_DS_
                                    1- 1437     	.line	679, "main.c"; 	pwStep = 1;
     01B5 2101                      1- 1438     	MOVIA	0x01
                                    1- 1439     	BANKSEL	_pwStep
     01B6 rrrr                      3-   71 m1      .banksel ram_address
     01B7 00rr                      1- 1440     	MOVAR	_pwStep
     01B8 3rrr                      1- 1441     	LGOTO	_00489_DS_
     01B9                           1- 1442     _00488_DS_:
                                    1- 1443     	.line	682, "main.c"; 	pwStep = 1;
     01B9 2101                      1- 1444     	MOVIA	0x01
                                    1- 1445     	BANKSEL	_pwStep
     01BA rrrr                      3-   71 m1      .banksel ram_address
     01BB 00rr                      1- 1446     	MOVAR	_pwStep
     01BC                           1- 1447     _00489_DS_:
                                    1- 1448     	.line	683, "main.c"; 	chrgTime = 0;
                                    1- 1449     	BANKSEL	_chrgTime
     01BC rrrr                      3-   71 m1      .banksel ram_address
     01BD 02rr                      1- 1450     	CLRR	_chrgTime
     01BE 02rr                      1- 1451     	CLRR	(_chrgTime + 1)
     01BF                           1- 1452     _00510_DS_:
                                    1- 1453     	.line	687, "main.c"; 	}
                                    1- 1454     	RETURN	
     01BF 0010                      3-   26 m1      ret
                                    1- 1455     ; exit point of _checkBatAD
                                    1- 1457     ;***
                                    1- 1458     ;  pBlock Stats: dbName = C
                                    1- 1459     ;***
                                    1- 1460     ;has an exit
                                    1- 1461     ;functions called:
                                    1- 1462     ;   _delay
                                    1- 1463     ;   _delay
                                    1- 1464     ;; Starting pCode block
                                    1- 1465     .segment "code"; module=main, function=_initAD
     0000                           1- 1467     _initAD:
                                    1- 1468     ; 2 exit points
                                    1- 1469     	.line	522, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA1 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2181                      1- 1470     	MOVIA	0x81
     0001 00rr                      1- 1471     	MOVAR	_ADMD
                                    1- 1472     	.line	527, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1473     	CLRR	_ADVREFH
                                    1- 1474     	.line	532, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1475     	MOVIA	0x10
     0004 00rr                      1- 1476     	MOVAR	_ADR
                                    1- 1477     	.line	534, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1478     	MOVIA	0x03
     0006 00rr                      1- 1479     	MOVAR	_ADCR
                                    1- 1480     	.line	537, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1481     	BSR	_ADMDbits,4
                                    1- 1482     	.line	538, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1483     	MOVIA	0x64
     0009 2rrr                      1- 1484     	LCALL	_delay
                                    1- 1485     	.line	541, "main.c"; 	}
                                    1- 1486     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 1487     ; exit point of _initAD
                                    1- 1489     ;***
                                    1- 1490     ;  pBlock Stats: dbName = C
                                    1- 1491     ;***
                                    1- 1492     ;has an exit
                                    1- 1493     ;2 compiler assigned registers:
                                    1- 1494     ;   r0x101E
                                    1- 1495     ;   r0x101F
                                    1- 1496     ;; Starting pCode block
                                    1- 1497     .segment "code"; module=main, function=_delay
                                    1- 1499     ;local variable name mapping:
     0000                           1- 1502     _delay:
                                    1- 1503     ; 2 exit points
                                    1- 1504     	.line	512, "main.c"; 	void delay(u8t time)
                                    1- 1505     	BANKSEL	r0x101E
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1506     	MOVAR	r0x101E
                                    1- 1507     	.line	514, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1508     	BANKSEL	r0x101F
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1509     	CLRR	r0x101F
     0004                           1- 1510     _00411_DS_:
                                    1- 1511     	BANKSEL	r0x101E
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1512     	MOVR	r0x101E,W
                                    1- 1513     	BANKSEL	r0x101F
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 1514     	SUBAR	r0x101F,W
     0008 0C03                      1- 1515     	BTRSC	STATUS,0
     0009 3rrr                      1- 1516     	LGOTO	_00413_DS_
                                    1- 1517     	.line	515, "main.c"; 	NOP();
     000A 0000                      1- 1518     	nop
                                    1- 1519     	.line	514, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1520     	BANKSEL	r0x101F
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 1521     	INCR	r0x101F,F
     000D 3rrr                      1- 1522     	LGOTO	_00411_DS_
     000E                           1- 1523     _00413_DS_:
                                    1- 1524     	.line	516, "main.c"; 	}
                                    1- 1525     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1526     ; exit point of _delay
                                    1- 1528     ;***
                                    1- 1529     ;  pBlock Stats: dbName = C
                                    1- 1530     ;***
                                    1- 1531     ;has an exit
                                    1- 1532     ;functions called:
                                    1- 1533     ;   _pwmStop
                                    1- 1534     ;   _pwmStop
                                    1- 1535     ;; Starting pCode block
                                    1- 1536     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1538     _chrgCtr:
                                    1- 1539     ; 2 exit points
                                    1- 1540     	.line	468, "main.c"; 	if(PORTA & 0x80)
                                    1- 1541     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 0Brr                      1- 1542     	BTRSS	_PORTA,7
     0002 3rrr                      1- 1543     	LGOTO	_00402_DS_
                                    1- 1544     	.line	471, "main.c"; 	chrgFlag = 1;
                                    1- 1545     	BANKSEL	_Status
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 19rr                      1- 1546     	BSR	_Status,3
                                    1- 1547     	.line	472, "main.c"; 	workStep = 0;
                                    1- 1548     	BANKSEL	_workStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1549     	CLRR	_workStep
                                    1- 1550     	.line	473, "main.c"; 	ledLightTime = 0;
                                    1- 1551     	BANKSEL	_ledLightTime
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 1552     	CLRR	_ledLightTime
                                    1- 1553     	.line	474, "main.c"; 	pwmStop();
     0009 2rrr                      1- 1554     	LCALL	_pwmStop
                                    1- 1555     	.line	476, "main.c"; 	if(pwStep == 7)
                                    1- 1556     	BANKSEL	_pwStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1557     	MOVR	_pwStep,W
     000C 2407                      1- 1558     	XORIA	0x07
     000D 0903                      1- 1559     	BTRSS	STATUS,2
     000E 3rrr                      1- 1560     	LGOTO	_00397_DS_
                                    1- 1561     	.line	479, "main.c"; 	ledStep = 6;
     000F 2106                      1- 1562     	MOVIA	0x06
                                    1- 1563     	BANKSEL	_ledStep
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1564     	MOVAR	_ledStep
                                    1- 1565     	.line	480, "main.c"; 	if(++fullCount > 100)
                                    1- 1566     	BANKSEL	_fullCount
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 05rr                      1- 1567     	INCR	_fullCount,F
                                    1- 1568     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1569     ;;unsigned compare: left >= lit (0x65=101), size=1
     0014 2165                      1- 1570     	MOVIA	0x65
     0015 04rr                      1- 1571     	SUBAR	_fullCount,W
     0016 0803                      1- 1572     	BTRSS	STATUS,0
     0017 3rrr                      1- 1573     	LGOTO	_00404_DS_
                                    1- 1574     	.line	481, "main.c"; 	PORTA &= 0XBF;
                                    1- 1575     	BANKSEL	_PORTA
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 1Frr                      1- 1576     	BCR	_PORTA,6
     001A 3rrr                      1- 1577     	LGOTO	_00404_DS_
     001B                           1- 1578     _00397_DS_:
                                    1- 1579     	.line	487, "main.c"; 	PORTA |= 0x40;
                                    1- 1580     	BANKSEL	_PORTA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 1Brr                      1- 1581     	BSR	_PORTA,6
                                    1- 1582     	.line	489, "main.c"; 	if(count500ms == 0)
                                    1- 1583     	BANKSEL	_count500ms
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1584     	MOVR	_count500ms,W
     001F 0903                      1- 1585     	BTRSS	STATUS,2
     0020 3rrr                      1- 1586     	LGOTO	_00404_DS_
                                    1- 1587     	.line	491, "main.c"; 	if(++ledStep > 6)
                                    1- 1588     	BANKSEL	_ledStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 05rr                      1- 1589     	INCR	_ledStep,F
                                    1- 1590     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1591     ;;unsigned compare: left >= lit (0x7=7), size=1
     0023 2107                      1- 1592     	MOVIA	0x07
     0024 04rr                      1- 1593     	SUBAR	_ledStep,W
     0025 0803                      1- 1594     	BTRSS	STATUS,0
     0026 3rrr                      1- 1595     	LGOTO	_00404_DS_
                                    1- 1596     	.line	492, "main.c"; 	ledStep = pwStep - 1;
                                    1- 1597     	BANKSEL	_pwStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 06rr                      1- 1598     	DECR	_pwStep,W
                                    1- 1599     	BANKSEL	_ledStep
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 00rr                      1- 1600     	MOVAR	_ledStep
     002B 3rrr                      1- 1601     	LGOTO	_00404_DS_
     002C                           1- 1602     _00402_DS_:
                                    1- 1603     	.line	501, "main.c"; 	chrgTime = 0;
                                    1- 1604     	BANKSEL	_chrgTime
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 02rr                      1- 1605     	CLRR	_chrgTime
     002E 02rr                      1- 1606     	CLRR	(_chrgTime + 1)
                                    1- 1607     	.line	502, "main.c"; 	PORTA &= 0XBF;	//停止充电
                                    1- 1608     	BANKSEL	_PORTA
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 1Frr                      1- 1609     	BCR	_PORTA,6
                                    1- 1610     	.line	503, "main.c"; 	if(workStep == 0)
                                    1- 1611     	BANKSEL	_workStep
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1- 1612     	MOVR	_workStep,W
     0033 0903                      1- 1613     	BTRSS	STATUS,2
     0034 3rrr                      1- 1614     	LGOTO	_00003_DS_
                                    1- 1615     	.line	504, "main.c"; 	ledStep = 0;
                                    1- 1616     	BANKSEL	_ledStep
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 02rr                      1- 1617     	CLRR	_ledStep
     0037                           1- 1618     _00003_DS_:
                                    1- 1619     	.line	505, "main.c"; 	chrgFlag = 0;
                                    1- 1620     	BANKSEL	_Status
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 1Drr                      1- 1621     	BCR	_Status,3
                                    1- 1622     	.line	506, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 1623     	BANKSEL	_chrgTime
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1- 1624     	CLRR	_chrgTime
     003B 02rr                      1- 1625     	CLRR	(_chrgTime + 1)
     003C                           1- 1626     _00404_DS_:
                                    1- 1627     	.line	509, "main.c"; 	}
                                    1- 1628     	RETURN	
     003C 0010                      3-   26 m1      ret
                                    1- 1629     ; exit point of _chrgCtr
                                    1- 1631     ;***
                                    1- 1632     ;  pBlock Stats: dbName = C
                                    1- 1633     ;***
                                    1- 1634     ;has an exit
                                    1- 1635     ;1 compiler assigned register :
                                    1- 1636     ;   r0x102A
                                    1- 1637     ;; Starting pCode block
                                    1- 1638     .segment "code"; module=main, function=_keyRead
                                    1- 1640     ;local variable name mapping:
     0000                           1- 1642     _keyRead:
                                    1- 1643     ; 2 exit points
                                    1- 1644     	.line	431, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1645     	BANKSEL	r0x102A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1646     	MOVAR	r0x102A
                                    1- 1647     	.line	433, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1648     	MOVR	r0x102A,W
     0003 0D03                      1- 1649     	BTRSC	STATUS,2
     0004 3rrr                      1- 1650     	LGOTO	_00383_DS_
                                    1- 1651     	.line	435, "main.c"; 	keyCount++;
                                    1- 1652     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1653     	INCR	_keyCount,F
                                    1- 1654     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 1655     	.line	436, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 1656     	MOVIA	0x64
     0008 04rr                      1- 1657     	SUBAR	_keyCount,W
     0009 0803                      1- 1658     	BTRSS	STATUS,0
     000A 3rrr                      1- 1659     	LGOTO	_00384_DS_
                                    1- 1660     	.line	438, "main.c"; 	keyCount = 100;
     000B 2164                      1- 1661     	MOVIA	0x64
     000C 00rr                      1- 1662     	MOVAR	_keyCount
                                    1- 1663     	.line	439, "main.c"; 	if(!longPressFlag)
                                    1- 1664     	BANKSEL	_Status
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 0Crr                      1- 1665     	BTRSC	_Status,1
     000F 3rrr                      1- 1666     	LGOTO	_00384_DS_
                                    1- 1667     	.line	441, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1668     	BSR	_Status,1
                                    1- 1669     	.line	442, "main.c"; 	return 2;
     0011 2102                      1- 1670     	MOVIA	0x02
     0012 3rrr                      1- 1671     	LGOTO	_00385_DS_
                                    1- 1672     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 1673     _00383_DS_:
                                    1- 1674     	.line	448, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 1675     	MOVIA	0x64
                                    1- 1676     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1677     	SUBAR	_keyCount,W
     0016 0803                      1- 1678     	BTRSS	STATUS,0
     0017 3rrr                      1- 1679     	LGOTO	_00380_DS_
                                    1- 1680     	.line	450, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1681     	CLRR	_keyCount
                                    1- 1682     	.line	451, "main.c"; 	longPressFlag = 0;
                                    1- 1683     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Crr                      1- 1684     	BCR	_Status,1
                                    1- 1685     	.line	452, "main.c"; 	return	0;
     001B 2100                      1- 1686     	MOVIA	0x00
     001C 3rrr                      1- 1687     	LGOTO	_00385_DS_
                                    1- 1688     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 1689     _00380_DS_:
                                    1- 1690     	.line	454, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 1691     	MOVIA	0x08
                                    1- 1692     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 1693     	SUBAR	_keyCount,W
     0020 0803                      1- 1694     	BTRSS	STATUS,0
     0021 3rrr                      1- 1695     	LGOTO	_00381_DS_
                                    1- 1696     	.line	456, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1697     	CLRR	_keyCount
                                    1- 1698     	.line	457, "main.c"; 	return	1;
     0023 2101                      1- 1699     	MOVIA	0x01
     0024 3rrr                      1- 1700     	LGOTO	_00385_DS_
     0025                           1- 1701     _00381_DS_:
                                    1- 1702     	.line	459, "main.c"; 	keyCount = 0;
                                    1- 1703     	BANKSEL	_keyCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 1704     	CLRR	_keyCount
     0027                           1- 1705     _00384_DS_:
                                    1- 1706     	.line	461, "main.c"; 	return 0;
     0027 2100                      1- 1707     	MOVIA	0x00
     0028                           1- 1708     _00385_DS_:
                                    1- 1709     	.line	462, "main.c"; 	}
                                    1- 1710     	RETURN	
     0028 0010                      3-   26 m1      ret
                                    1- 1711     ; exit point of _keyRead
                                    1- 1713     ;***
                                    1- 1714     ;  pBlock Stats: dbName = C
                                    1- 1715     ;***
                                    1- 1716     ;has an exit
                                    1- 1717     ;functions called:
                                    1- 1718     ;   _LedInput
                                    1- 1719     ;   _pwmStop
                                    1- 1720     ;   _LedInput
                                    1- 1721     ;   _pwmStop
                                    1- 1722     ;1 compiler assigned register :
                                    1- 1723     ;   r0x102B
                                    1- 1724     ;; Starting pCode block
                                    1- 1725     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1727     _gotoSleep:
                                    1- 1728     ; 2 exit points
                                    1- 1729     	.line	404, "main.c"; 	PORTB = 0x00;
     0000 02rr                      1- 1730     	CLRR	_PORTB
                                    1- 1731     	.line	405, "main.c"; 	PORTA = 0x00;
                                    1- 1732     	BANKSEL	_PORTA
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1- 1733     	CLRR	_PORTA
                                    1- 1734     	.line	406, "main.c"; 	IOSTA |= 0X40;
     0003 001r                      1- 1735     	IOSTR	_IOSTA
                                    1- 1736     	BANKSEL	r0x102B
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 1737     	MOVAR	r0x102B
     0006 1Brr                      1- 1738     	BSR	r0x102B,6
     0007 01rr                      1- 1739     	MOVR	r0x102B,W
     0008 000r                      1- 1740     	IOST	_IOSTA
                                    1- 1741     	.line	407, "main.c"; 	LedInput();
     0009 2rrr                      1- 1742     	LCALL	_LedInput
                                    1- 1743     	.line	408, "main.c"; 	sleepTime = 0;
                                    1- 1744     	BANKSEL	_sleepTime
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1- 1745     	CLRR	_sleepTime
     000C 02rr                      1- 1746     	CLRR	(_sleepTime + 1)
                                    1- 1747     	.line	410, "main.c"; 	pwmStop();
     000D 2rrr                      1- 1748     	LCALL	_pwmStop
                                    1- 1749     	.line	411, "main.c"; 	workStep = 0;
                                    1- 1750     	BANKSEL	_workStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 1751     	CLRR	_workStep
                                    1- 1752     	.line	412, "main.c"; 	AWUCON = 0x98;
     0010 2198                      1- 1753     	MOVIA	0x98
     0011 00rr                      1- 1754     	MOVAR	_AWUCON
                                    1- 1755     	.line	413, "main.c"; 	redLedFlag = 0;
                                    1- 1756     	BANKSEL	_Status
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 1Drr                      1- 1757     	BCR	_Status,2
                                    1- 1758     	.line	414, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0014 210B                      1- 1759     	MOVIA	0x0b
     0015 00rr                      1- 1760     	MOVAR	_INTE
                                    1- 1761     	.line	415, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0016 2118                      1- 1762     	MOVIA	0x18
     0017 00rr                      1- 1763     	MOVAR	_PCON
                                    1- 1764     	.line	416, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0018 02rr                      1- 1765     	CLRR	_INTF
                                    1- 1766     	.line	417, "main.c"; 	CLRWDT();
     0019 0002                      1- 1767     	clrwdt
                                    1- 1768     	.line	418, "main.c"; 	ENI();
     001A 0004                      1- 1769     	ENI
                                    1- 1770     	.line	419, "main.c"; 	SLEEP();
     001B 0001                      1- 1771     	sleep
                                    1- 1772     	.line	420, "main.c"; 	AWUCON = 0x00;
     001C 02rr                      1- 1773     	CLRR	_AWUCON
                                    1- 1774     	.line	421, "main.c"; 	IOSTA &= 0XBF;
     001D 001r                      1- 1775     	IOSTR	_IOSTA
                                    1- 1776     	BANKSEL	r0x102B
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1777     	MOVAR	r0x102B
     0020 1Frr                      1- 1778     	BCR	r0x102B,6
     0021 01rr                      1- 1779     	MOVR	r0x102B,W
     0022 000r                      1- 1780     	IOST	_IOSTA
                                    1- 1781     	.line	422, "main.c"; 	PORTB &= 0xBF;
     0023 1Frr                      1- 1782     	BCR	_PORTB,6
                                    1- 1783     	.line	423, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0024 2101                      1- 1784     	MOVIA	0x01
     0025 00rr                      1- 1785     	MOVAR	_INTE
                                    1- 1786     	.line	424, "main.c"; 	INTF = 0;
     0026 02rr                      1- 1787     	CLRR	_INTF
                                    1- 1788     	.line	426, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 1789     	MOVIA	0xb8
     0028 00rr                      1- 1790     	MOVAR	_PCON
                                    1- 1791     	.line	428, "main.c"; 	}
                                    1- 1792     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1- 1793     ; exit point of _gotoSleep
                                    1- 1795     ;***
                                    1- 1796     ;  pBlock Stats: dbName = C
                                    1- 1797     ;***
                                    1- 1798     ;has an exit
                                    1- 1799     ;; Starting pCode block
                                    1- 1800     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1802     _pwmStop:
                                    1- 1803     ; 2 exit points
                                    1- 1804     	.line	398, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 1805     	CLRA	
     0001 00rr                      1- 1806     	SFUN	_T2CR1
                                    1- 1807     	.line	399, "main.c"; 	}
                                    1- 1808     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1809     ; exit point of _pwmStop
                                    1- 1811     ;***
                                    1- 1812     ;  pBlock Stats: dbName = C
                                    1- 1813     ;***
                                    1- 1814     ;has an exit
                                    1- 1815     ;1 compiler assigned register :
                                    1- 1816     ;   r0x102C
                                    1- 1817     ;; Starting pCode block
                                    1- 1818     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1820     _pwmInit:
                                    1- 1821     ; 2 exit points
                                    1- 1822     	.line	386, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1823     	SFUNR	_T2CR1
                                    1- 1824     	BANKSEL	r0x102C
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1825     	MOVAR	r0x102C
     0003 0Frr                      1- 1826     	BTRSC	r0x102C,7
                                    1- 1827     	.line	387, "main.c"; 	return;
     0004 3rrr                      1- 1828     	LGOTO	_00360_DS_
                                    1- 1829     	.line	388, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1830     	CLRR	_TMRH
                                    1- 1831     	.line	389, "main.c"; 	TMR2 = 128;							//频率为110K
     0006 2180                      1- 1832     	MOVIA	0x80
     0007 00rr                      1- 1833     	SFUN	_TMR2
                                    1- 1834     	.line	392, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 1835     	CLRA	
     0009 00rr                      1- 1836     	SFUN	_T2CR2
                                    1- 1837     	.line	393, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 1838     	MOVIA	0x83
     000B 00rr                      1- 1839     	SFUN	_T2CR1
     000C                           1- 1840     _00360_DS_:
                                    1- 1841     	.line	394, "main.c"; 	}
                                    1- 1842     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 1843     ; exit point of _pwmInit
                                    1- 1845     ;***
                                    1- 1846     ;  pBlock Stats: dbName = C
                                    1- 1847     ;***
                                    1- 1848     ;has an exit
                                    1- 1849     ;functions called:
                                    1- 1850     ;   _delay
                                    1- 1851     ;   _LedInput
                                    1- 1852     ;   _delay
                                    1- 1853     ;   _LedInput
                                    1- 1854     ;; Starting pCode block
                                    1- 1855     .segment "code"; module=main, function=_LED6ON
     0000                           1- 1857     _LED6ON:
                                    1- 1858     ; 2 exit points
                                    1- 1859     	.line	377, "main.c"; 	PORTB |= 0x01;
     0000 18rr                      1- 1860     	BSR	_PORTB,0
                                    1- 1861     	.line	378, "main.c"; 	delay(100);
     0001 2164                      1- 1862     	MOVIA	0x64
     0002 2rrr                      1- 1863     	LCALL	_delay
                                    1- 1864     	.line	379, "main.c"; 	LedInput();
     0003 2rrr                      1- 1865     	LCALL	_LedInput
                                    1- 1866     	.line	380, "main.c"; 	}
                                    1- 1867     	RETURN	
     0004 0010                      3-   26 m1      ret
                                    1- 1868     ; exit point of _LED6ON
                                    1- 1870     ;***
                                    1- 1871     ;  pBlock Stats: dbName = C
                                    1- 1872     ;***
                                    1- 1873     ;has an exit
                                    1- 1874     ;functions called:
                                    1- 1875     ;   _delay
                                    1- 1876     ;   _LedInput
                                    1- 1877     ;   _delay
                                    1- 1878     ;   _LedInput
                                    1- 1879     ;; Starting pCode block
                                    1- 1880     .segment "code"; module=main, function=_LED5ON
     0000                           1- 1882     _LED5ON:
                                    1- 1883     ; 2 exit points
                                    1- 1884     	.line	369, "main.c"; 	PORTA |= 0x04;
                                    1- 1885     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 1886     	BSR	_PORTA,2
                                    1- 1887     	.line	370, "main.c"; 	delay(100);
     0002 2164                      1- 1888     	MOVIA	0x64
     0003 2rrr                      1- 1889     	LCALL	_delay
                                    1- 1890     	.line	371, "main.c"; 	LedInput();
     0004 2rrr                      1- 1891     	LCALL	_LedInput
                                    1- 1892     	.line	372, "main.c"; 	}
                                    1- 1893     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1- 1894     ; exit point of _LED5ON
                                    1- 1896     ;***
                                    1- 1897     ;  pBlock Stats: dbName = C
                                    1- 1898     ;***
                                    1- 1899     ;has an exit
                                    1- 1900     ;functions called:
                                    1- 1901     ;   _delay
                                    1- 1902     ;   _LedInput
                                    1- 1903     ;   _delay
                                    1- 1904     ;   _LedInput
                                    1- 1905     ;; Starting pCode block
                                    1- 1906     .segment "code"; module=main, function=_LED4ON
     0000                           1- 1908     _LED4ON:
                                    1- 1909     ; 2 exit points
                                    1- 1910     	.line	362, "main.c"; 	PORTA |= 0x08;
                                    1- 1911     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 1912     	BSR	_PORTA,3
                                    1- 1913     	.line	363, "main.c"; 	delay(100);
     0002 2164                      1- 1914     	MOVIA	0x64
     0003 2rrr                      1- 1915     	LCALL	_delay
                                    1- 1916     	.line	364, "main.c"; 	LedInput();
     0004 2rrr                      1- 1917     	LCALL	_LedInput
                                    1- 1918     	.line	365, "main.c"; 	}
                                    1- 1919     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1- 1920     ; exit point of _LED4ON
                                    1- 1922     ;***
                                    1- 1923     ;  pBlock Stats: dbName = C
                                    1- 1924     ;***
                                    1- 1925     ;has an exit
                                    1- 1926     ;functions called:
                                    1- 1927     ;   _delay
                                    1- 1928     ;   _LedInput
                                    1- 1929     ;   _delay
                                    1- 1930     ;   _LedInput
                                    1- 1931     ;; Starting pCode block
                                    1- 1932     .segment "code"; module=main, function=_LED3ON
     0000                           1- 1934     _LED3ON:
                                    1- 1935     ; 2 exit points
                                    1- 1936     	.line	355, "main.c"; 	PORTA |= 0x10;
                                    1- 1937     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Arr                      1- 1938     	BSR	_PORTA,4
                                    1- 1939     	.line	356, "main.c"; 	delay(100);
     0002 2164                      1- 1940     	MOVIA	0x64
     0003 2rrr                      1- 1941     	LCALL	_delay
                                    1- 1942     	.line	357, "main.c"; 	LedInput();
     0004 2rrr                      1- 1943     	LCALL	_LedInput
                                    1- 1944     	.line	358, "main.c"; 	}
                                    1- 1945     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1- 1946     ; exit point of _LED3ON
                                    1- 1948     ;***
                                    1- 1949     ;  pBlock Stats: dbName = C
                                    1- 1950     ;***
                                    1- 1951     ;has an exit
                                    1- 1952     ;functions called:
                                    1- 1953     ;   _delay
                                    1- 1954     ;   _LedInput
                                    1- 1955     ;   _delay
                                    1- 1956     ;   _LedInput
                                    1- 1957     ;; Starting pCode block
                                    1- 1958     .segment "code"; module=main, function=_LED2ON
     0000                           1- 1960     _LED2ON:
                                    1- 1961     ; 2 exit points
                                    1- 1962     	.line	348, "main.c"; 	PORTB |= 0x02;
     0000 18rr                      1- 1963     	BSR	_PORTB,1
                                    1- 1964     	.line	349, "main.c"; 	delay(100);
     0001 2164                      1- 1965     	MOVIA	0x64
     0002 2rrr                      1- 1966     	LCALL	_delay
                                    1- 1967     	.line	350, "main.c"; 	LedInput();
     0003 2rrr                      1- 1968     	LCALL	_LedInput
                                    1- 1969     	.line	351, "main.c"; 	}
                                    1- 1970     	RETURN	
     0004 0010                      3-   26 m1      ret
                                    1- 1971     ; exit point of _LED2ON
                                    1- 1973     ;***
                                    1- 1974     ;  pBlock Stats: dbName = C
                                    1- 1975     ;***
                                    1- 1976     ;has an exit
                                    1- 1977     ;functions called:
                                    1- 1978     ;   _delay
                                    1- 1979     ;   _LedInput
                                    1- 1980     ;   _delay
                                    1- 1981     ;   _LedInput
                                    1- 1982     ;; Starting pCode block
                                    1- 1983     .segment "code"; module=main, function=_LED1ON
     0000                           1- 1985     _LED1ON:
                                    1- 1986     ; 2 exit points
                                    1- 1987     	.line	341, "main.c"; 	PORTA |= 0x01;
                                    1- 1988     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 18rr                      1- 1989     	BSR	_PORTA,0
                                    1- 1990     	.line	342, "main.c"; 	delay(100);
     0002 2164                      1- 1991     	MOVIA	0x64
     0003 2rrr                      1- 1992     	LCALL	_delay
                                    1- 1993     	.line	343, "main.c"; 	LedInput();
     0004 2rrr                      1- 1994     	LCALL	_LedInput
                                    1- 1995     	.line	344, "main.c"; 	}
                                    1- 1996     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1- 1997     ; exit point of _LED1ON
                                    1- 1999     ;***
                                    1- 2000     ;  pBlock Stats: dbName = C
                                    1- 2001     ;***
                                    1- 2002     ;has an exit
                                    1- 2003     ;; Starting pCode block
                                    1- 2004     .segment "code"; module=main, function=_LedInput
     0000                           1- 2006     _LedInput:
                                    1- 2007     ; 2 exit points
                                    1- 2008     	.line	335, "main.c"; 	PORTA &= 0xE0;
     0000 21E0                      1- 2009     	MOVIA	0xe0
                                    1- 2010     	BANKSEL	_PORTA
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 10rr                      1- 2011     	ANDAR	_PORTA,F
                                    1- 2012     	.line	336, "main.c"; 	PORTB &= 0xFC;
     0003 21FC                      1- 2013     	MOVIA	0xfc
     0004 10rr                      1- 2014     	ANDAR	_PORTB,F
                                    1- 2015     	.line	337, "main.c"; 	}
                                    1- 2016     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1- 2017     ; exit point of _LedInput
                                    1- 2019     ;***
                                    1- 2020     ;  pBlock Stats: dbName = C
                                    1- 2021     ;***
                                    1- 2022     ;has an exit
                                    1- 2023     ;functions called:
                                    1- 2024     ;   _pwmStop
                                    1- 2025     ;   _LedInput
                                    1- 2026     ;   _LedInput
                                    1- 2027     ;   _LED6ON
                                    1- 2028     ;   _LED5ON
                                    1- 2029     ;   _LED4ON
                                    1- 2030     ;   _LED3ON
                                    1- 2031     ;   _LED2ON
                                    1- 2032     ;   _LED1ON
                                    1- 2033     ;   _pwmStop
                                    1- 2034     ;   _LedInput
                                    1- 2035     ;   _LedInput
                                    1- 2036     ;   _LED6ON
                                    1- 2037     ;   _LED5ON
                                    1- 2038     ;   _LED4ON
                                    1- 2039     ;   _LED3ON
                                    1- 2040     ;   _LED2ON
                                    1- 2041     ;   _LED1ON
                                    1- 2042     ;; Starting pCode block
                                    1- 2043     .segment "code"; module=main, function=_ledShow
     0000                           1- 2045     _ledShow:
                                    1- 2046     ; 2 exit points
                                    1- 2047     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 2048     	.line	278, "main.c"; 	if(overCount >= 5 && workStep > 0)
     0000 2105                      1- 2049     	MOVIA	0x05
                                    1- 2050     	BANKSEL	_overCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 2051     	SUBAR	_overCount,W
     0003 0803                      1- 2052     	BTRSS	STATUS,0
     0004 3rrr                      1- 2053     	LGOTO	_00248_DS_
                                    1- 2054     	BANKSEL	_workStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 2055     	MOVR	_workStep,W
     0007 0D03                      1- 2056     	BTRSC	STATUS,2
     0008 3rrr                      1- 2057     	LGOTO	_00248_DS_
                                    1- 2058     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 2059     	.line	280, "main.c"; 	if(count1s < 50)
     0009 2132                      1- 2060     	MOVIA	0x32
                                    1- 2061     	BANKSEL	_count1s
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 04rr                      1- 2062     	SUBAR	_count1s,W
     000C 0C03                      1- 2063     	BTRSC	STATUS,0
     000D 3rrr                      1- 2064     	LGOTO	_00245_DS_
                                    1- 2065     	.line	281, "main.c"; 	ledStep = workStep;
                                    1- 2066     	BANKSEL	_workStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 2067     	MOVR	_workStep,W
                                    1- 2068     	BANKSEL	_ledStep
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 2069     	MOVAR	_ledStep
     0012 3rrr                      1- 2070     	LGOTO	_00248_DS_
     0013                           1- 2071     _00245_DS_:
                                    1- 2072     	.line	283, "main.c"; 	ledStep = 0;
                                    1- 2073     	BANKSEL	_ledStep
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1- 2074     	CLRR	_ledStep
     0015                           1- 2075     _00248_DS_:
                                    1- 2076     	.line	285, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 2077     	BANKSEL	_ledLightTime
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2078     	MOVR	_ledLightTime,W
     0017 0D03                      1- 2079     	BTRSC	STATUS,2
     0018 3rrr                      1- 2080     	LGOTO	_00256_DS_
                                    1- 2081     	BANKSEL	_pwStep
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 2082     	MOVR	_pwStep,W
     001B 0D03                      1- 2083     	BTRSC	STATUS,2
     001C 3rrr                      1- 2084     	LGOTO	_00256_DS_
                                    1- 2085     	.line	287, "main.c"; 	if(ledLightTime == 2)
                                    1- 2086     	BANKSEL	_ledLightTime
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 2087     	MOVR	_ledLightTime,W
     001F 2402                      1- 2088     	XORIA	0x02
     0020 0903                      1- 2089     	BTRSS	STATUS,2
     0021 3rrr                      1- 2090     	LGOTO	_00256_DS_
                                    1- 2091     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2092     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 2093     	.line	289, "main.c"; 	if(pwStep > 6 )
     0022 2107                      1- 2094     	MOVIA	0x07
                                    1- 2095     	BANKSEL	_pwStep
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 04rr                      1- 2096     	SUBAR	_pwStep,W
     0025 0803                      1- 2097     	BTRSS	STATUS,0
     0026 3rrr                      1- 2098     	LGOTO	_00251_DS_
                                    1- 2099     	.line	290, "main.c"; 	ledStep = 6;
     0027 2106                      1- 2100     	MOVIA	0x06
                                    1- 2101     	BANKSEL	_ledStep
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 00rr                      1- 2102     	MOVAR	_ledStep
     002A 3rrr                      1- 2103     	LGOTO	_00256_DS_
     002B                           1- 2104     _00251_DS_:
                                    1- 2105     	.line	292, "main.c"; 	ledStep = pwStep;
                                    1- 2106     	BANKSEL	_pwStep
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 2107     	MOVR	_pwStep,W
                                    1- 2108     	BANKSEL	_ledStep
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 2109     	MOVAR	_ledStep
     002F                           1- 2110     _00256_DS_:
                                    1- 2111     	.line	295, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 2112     	BANKSEL	_shanshuoTime
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 2113     	MOVR	_shanshuoTime,W
     0031 0D03                      1- 2114     	BTRSC	STATUS,2
     0032 3rrr                      1- 2115     	LGOTO	_00262_DS_
                                    1- 2116     	BANKSEL	_workStep
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 2117     	MOVR	_workStep,W
     0035 0D03                      1- 2118     	BTRSC	STATUS,2
     0036 3rrr                      1- 2119     	LGOTO	_00262_DS_
                                    1- 2120     	BANKSEL	_pwStep
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1- 2121     	MOVR	_pwStep,W
     0039 0903                      1- 2122     	BTRSS	STATUS,2
     003A 3rrr                      1- 2123     	LGOTO	_00262_DS_
                                    1- 2124     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 2125     	.line	297, "main.c"; 	if(count1s < 50)
     003B 2132                      1- 2126     	MOVIA	0x32
                                    1- 2127     	BANKSEL	_count1s
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 04rr                      1- 2128     	SUBAR	_count1s,W
     003E 0C03                      1- 2129     	BTRSC	STATUS,0
     003F 3rrr                      1- 2130     	LGOTO	_00259_DS_
                                    1- 2131     	.line	298, "main.c"; 	ledStep = workStep;
                                    1- 2132     	BANKSEL	_workStep
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1- 2133     	MOVR	_workStep,W
                                    1- 2134     	BANKSEL	_ledStep
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 00rr                      1- 2135     	MOVAR	_ledStep
     0044 3rrr                      1- 2136     	LGOTO	_00262_DS_
     0045                           1- 2137     _00259_DS_:
                                    1- 2138     	.line	300, "main.c"; 	ledStep = 0;
                                    1- 2139     	BANKSEL	_ledStep
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 02rr                      1- 2140     	CLRR	_ledStep
     0047                           1- 2141     _00262_DS_:
                                    1- 2142     	.line	302, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0)
                                    1- 2143     	BANKSEL	_shanshuoTime
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1- 2144     	MOVR	_shanshuoTime,W
     0049 0903                      1- 2145     	BTRSS	STATUS,2
     004A 3rrr                      1- 2146     	LGOTO	_00266_DS_
                                    1- 2147     	BANKSEL	_pwStep
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1- 2148     	MOVR	_pwStep,W
     004D 0903                      1- 2149     	BTRSS	STATUS,2
     004E 3rrr                      1- 2150     	LGOTO	_00266_DS_
                                    1- 2151     	.line	304, "main.c"; 	workStep = 0;
                                    1- 2152     	BANKSEL	_workStep
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 02rr                      1- 2153     	CLRR	_workStep
                                    1- 2154     	.line	305, "main.c"; 	ledStep = 0;
                                    1- 2155     	BANKSEL	_ledStep
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 02rr                      1- 2156     	CLRR	_ledStep
                                    1- 2157     	.line	306, "main.c"; 	pwmStop();
     0053 2rrr                      1- 2158     	LCALL	_pwmStop
     0054                           1- 2159     _00266_DS_:
                                    1- 2160     	.line	308, "main.c"; 	LedInput();
     0054 2rrr                      1- 2161     	LCALL	_LedInput
                                    1- 2162     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2163     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 2164     	.line	309, "main.c"; 	switch(ledStep)
     0055 2107                      1- 2165     	MOVIA	0x07
                                    1- 2166     	BANKSEL	_ledStep
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 04rr                      1- 2167     	SUBAR	_ledStep,W
     0058 0C03                      1- 2168     	BTRSC	STATUS,0
     0059 3rrr                      1- 2169     	LGOTO	_00276_DS_
     005A 21rr                      1- 2170     	MOVIA	((_00325_DS_ >> 8) & 0xff)
     005B 008A                      1- 2171     	MOVAR	PCHBUF
     005C 01rr                      1- 2172     	MOVR	_ledStep,W
     005D 25rr                      1- 2173     	ADDIA	_00325_DS_
     005E 0C03                      1- 2174     	BTRSC	STATUS,0
     005F 058A                      1- 2175     	INCR	PCHBUF,F
     0060 0082                      1- 2176     	MOVAR	PCL
     0061                           1- 2177     _00325_DS_:
     0061 3rrr                      1- 2178     	LGOTO	_00268_DS_
     0062 3rrr                      1- 2179     	LGOTO	_00274_DS_
     0063 3rrr                      1- 2180     	LGOTO	_00273_DS_
     0064 3rrr                      1- 2181     	LGOTO	_00272_DS_
     0065 3rrr                      1- 2182     	LGOTO	_00271_DS_
     0066 3rrr                      1- 2183     	LGOTO	_00270_DS_
     0067 3rrr                      1- 2184     	LGOTO	_00269_DS_
     0068                           1- 2185     _00268_DS_:
                                    1- 2186     	.line	312, "main.c"; 	LedInput();
     0068 2rrr                      1- 2187     	LCALL	_LedInput
                                    1- 2188     	.line	313, "main.c"; 	break;
     0069 3rrr                      1- 2189     	LGOTO	_00276_DS_
     006A                           1- 2190     _00269_DS_:
                                    1- 2191     	.line	315, "main.c"; 	LED6ON();
     006A 2rrr                      1- 2192     	LCALL	_LED6ON
     006B                           1- 2193     _00270_DS_:
                                    1- 2194     	.line	317, "main.c"; 	LED5ON();
     006B 2rrr                      1- 2195     	LCALL	_LED5ON
     006C                           1- 2196     _00271_DS_:
                                    1- 2197     	.line	319, "main.c"; 	LED4ON();
     006C 2rrr                      1- 2198     	LCALL	_LED4ON
     006D                           1- 2199     _00272_DS_:
                                    1- 2200     	.line	321, "main.c"; 	LED3ON();
     006D 2rrr                      1- 2201     	LCALL	_LED3ON
     006E                           1- 2202     _00273_DS_:
                                    1- 2203     	.line	323, "main.c"; 	LED2ON();
     006E 2rrr                      1- 2204     	LCALL	_LED2ON
     006F                           1- 2205     _00274_DS_:
                                    1- 2206     	.line	325, "main.c"; 	LED1ON();
     006F 2rrr                      1- 2207     	LCALL	_LED1ON
     0070                           1- 2208     _00276_DS_:
                                    1- 2209     	.line	328, "main.c"; 	}
                                    1- 2210     	RETURN	
     0070 0010                      3-   26 m1      ret
                                    1- 2211     ; exit point of _ledShow
                                    1- 2213     ;***
                                    1- 2214     ;  pBlock Stats: dbName = C
                                    1- 2215     ;***
                                    1- 2216     ;has an exit
                                    1- 2217     ;functions called:
                                    1- 2218     ;   _LedInput
                                    1- 2219     ;   _LedInput
                                    1- 2220     ;; Starting pCode block
                                    1- 2221     .segment "code"; module=main, function=_initSys
     0000                           1- 2223     _initSys:
                                    1- 2224     ; 2 exit points
                                    1- 2225     	.line	246, "main.c"; 	DISI();
     0000 0013                      1- 2226     	DISI
                                    1- 2227     	.line	247, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA1_Input;
     0001 21A2                      1- 2228     	MOVIA	0xa2
     0002 000r                      1- 2229     	IOST	_IOSTA
                                    1- 2230     	.line	248, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 2231     	MOVIA	0x08
     0004 000r                      1- 2232     	IOST	_IOSTB
                                    1- 2233     	.line	249, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2234     	CLRR	_PORTB
                                    1- 2235     	.line	250, "main.c"; 	PORTA = 0x00;
                                    1- 2236     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 2237     	CLRR	_PORTA
                                    1- 2238     	.line	251, "main.c"; 	LedInput();
     0008 2rrr                      1- 2239     	LCALL	_LedInput
                                    1- 2240     	.line	252, "main.c"; 	APHCON = 0xFF;
     0009 21FF                      1- 2241     	MOVIA	0xff
     000A 000r                      1- 2242     	IOST	_APHCON
                                    1- 2243     	.line	253, "main.c"; 	BPHCON = 0xF7;
     000B 21F7                      1- 2244     	MOVIA	0xf7
     000C 00rr                      1- 2245     	MOVAR	_BPHCON
                                    1- 2246     	.line	254, "main.c"; 	ABPLCON = 0xFF;
     000D 21FF                      1- 2247     	MOVIA	0xff
     000E 00rr                      1- 2248     	MOVAR	_ABPLCON
                                    1- 2249     	.line	256, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000F 2101                      1- 2250     	MOVIA	0x01
     0010 00rr                      1- 2251     	MOVAR	_INTE
                                    1- 2252     	.line	258, "main.c"; 	PCON1 = C_TMR0_Dis;
     0011 0200                      1- 2253     	CLRA	
     0012 000r                      1- 2254     	IOST	_PCON1
                                    1- 2255     	.line	260, "main.c"; 	TMR0 = 55;
     0013 2137                      1- 2256     	MOVIA	0x37
     0014 00rr                      1- 2257     	MOVAR	_TMR0
                                    1- 2258     	.line	261, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0015 0200                      1- 2259     	CLRA	
     0016 0003                      1- 2260     	T0MD	
                                    1- 2261     	.line	263, "main.c"; 	PCON1 = C_TMR0_En;
     0017 2101                      1- 2262     	MOVIA	0x01
     0018 000r                      1- 2263     	IOST	_PCON1
                                    1- 2264     	.line	266, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0019 2198                      1- 2265     	MOVIA	0x98
     001A 00rr                      1- 2266     	MOVAR	_PCON
                                    1- 2267     	.line	269, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001B 2101                      1- 2268     	MOVIA	0x01
     001C 000r                      1- 2269     	IOST	_PCON1
                                    1- 2270     	.line	270, "main.c"; 	ENI();
     001D 0004                      1- 2271     	ENI
                                    1- 2272     	.line	271, "main.c"; 	}
                                    1- 2273     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1- 2274     ; exit point of _initSys
                                    1- 2276     ;***
                                    1- 2277     ;  pBlock Stats: dbName = C
                                    1- 2278     ;***
                                    1- 2279     ;has an exit
                                    1- 2280     ;functions called:
                                    1- 2281     ;   _pwmStop
                                    1- 2282     ;   _pwmStop
                                    1- 2283     ;; Starting pCode block
                                    1- 2284     .segment "code"; module=main, function=_powerOff
     0000                           1- 2286     _powerOff:
                                    1- 2287     ; 2 exit points
                                    1- 2288     	.line	237, "main.c"; 	workStep = 0;
                                    1- 2289     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 2290     	CLRR	_workStep
                                    1- 2291     	.line	238, "main.c"; 	pwmStop();
     0002 2rrr                      1- 2292     	LCALL	_pwmStop
                                    1- 2293     	.line	239, "main.c"; 	ledStep = 5;
     0003 2105                      1- 2294     	MOVIA	0x05
                                    1- 2295     	BANKSEL	_ledStep
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 2296     	MOVAR	_ledStep
                                    1- 2297     	.line	240, "main.c"; 	}
                                    1- 2298     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1- 2299     ; exit point of _powerOff
                                    1- 2301     ;***
                                    1- 2302     ;  pBlock Stats: dbName = C
                                    1- 2303     ;***
                                    1- 2304     ;has an exit
                                    1- 2305     ;functions called:
                                    1- 2306     ;   _keyRead
                                    1- 2307     ;   _pwmInit
                                    1- 2308     ;   _powerOff
                                    1- 2309     ;   _pwmInit
                                    1- 2310     ;   _keyRead
                                    1- 2311     ;   _pwmInit
                                    1- 2312     ;   _powerOff
                                    1- 2313     ;   _pwmInit
                                    1- 2314     ;1 compiler assigned register :
                                    1- 2315     ;   r0x102D
                                    1- 2316     ;; Starting pCode block
                                    1- 2317     .segment "code"; module=main, function=_keyCtr
                                    1- 2319     ;local variable name mapping:
     0000                           1- 2321     _keyCtr:
                                    1- 2322     ; 2 exit points
                                    1- 2323     	.line	175, "main.c"; 	char kclick = keyRead(0x08 & (~PORTB));
     0000 07rr                      1- 2324     	COMR	_PORTB,W
                                    1- 2325     	BANKSEL	r0x102D
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2326     	MOVAR	r0x102D
     0003 2108                      1- 2327     	MOVIA	0x08
     0004 10rr                      1- 2328     	ANDAR	r0x102D,F
     0005 01rr                      1- 2329     	MOVR	r0x102D,W
     0006 2rrr                      1- 2330     	LCALL	_keyRead
                                    1- 2331     	BANKSEL	r0x102D
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 2332     	MOVAR	r0x102D
                                    1- 2333     	.line	176, "main.c"; 	if(kclick == 1)
     0009 2401                      1- 2334     	XORIA	0x01
     000A 0903                      1- 2335     	BTRSS	STATUS,2
     000B 3rrr                      1- 2336     	LGOTO	_00229_DS_
                                    1- 2337     	.line	178, "main.c"; 	count500ms = 0;
                                    1- 2338     	BANKSEL	_count500ms
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1- 2339     	CLRR	_count500ms
                                    1- 2340     	.line	179, "main.c"; 	ledLightTime = 0;
                                    1- 2341     	BANKSEL	_ledLightTime
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 2342     	CLRR	_ledLightTime
                                    1- 2343     	.line	180, "main.c"; 	if(workStep == 0)
                                    1- 2344     	BANKSEL	_workStep
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 2345     	MOVR	_workStep,W
     0012 0903                      1- 2346     	BTRSS	STATUS,2
     0013 3rrr                      1- 2347     	LGOTO	_00199_DS_
                                    1- 2348     	.line	182, "main.c"; 	count1s = 0;
                                    1- 2349     	BANKSEL	_count1s
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 02rr                      1- 2350     	CLRR	_count1s
                                    1- 2351     	.line	183, "main.c"; 	ledLightTime = 2;
     0016 2102                      1- 2352     	MOVIA	0x02
                                    1- 2353     	BANKSEL	_ledLightTime
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 2354     	MOVAR	_ledLightTime
                                    1- 2355     	.line	184, "main.c"; 	return;
     0019 3rrr                      1- 2356     	LGOTO	_00231_DS_
     001A                           1- 2357     _00199_DS_:
                                    1- 2358     	.line	186, "main.c"; 	ledTime = 0;
                                    1- 2359     	BANKSEL	_ledTime
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 02rr                      1- 2360     	CLRR	_ledTime
                                    1- 2361     	.line	187, "main.c"; 	if(++workStep > 6)
                                    1- 2362     	BANKSEL	_workStep
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 05rr                      1- 2363     	INCR	_workStep,F
                                    1- 2364     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2365     ;;unsigned compare: left >= lit (0x7=7), size=1
     001E 2107                      1- 2366     	MOVIA	0x07
     001F 04rr                      1- 2367     	SUBAR	_workStep,W
     0020 0803                      1- 2368     	BTRSS	STATUS,0
     0021 3rrr                      1- 2369     	LGOTO	_00201_DS_
                                    1- 2370     	.line	188, "main.c"; 	workStep = 1;
     0022 2101                      1- 2371     	MOVIA	0x01
     0023 00rr                      1- 2372     	MOVAR	_workStep
     0024                           1- 2373     _00201_DS_:
                                    1- 2374     	.line	189, "main.c"; 	shanshuoTime = 6;
     0024 2106                      1- 2375     	MOVIA	0x06
                                    1- 2376     	BANKSEL	_shanshuoTime
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 00rr                      1- 2377     	MOVAR	_shanshuoTime
                                    1- 2378     	.line	190, "main.c"; 	if(workStep == 1)
                                    1- 2379     	BANKSEL	_workStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 2380     	MOVR	_workStep,W
     0029 2401                      1- 2381     	XORIA	0x01
     002A 0903                      1- 2382     	BTRSS	STATUS,2
     002B 3rrr                      1- 2383     	LGOTO	_00217_DS_
                                    1- 2384     	.line	191, "main.c"; 	maxDuty = 100;
     002C 2164                      1- 2385     	MOVIA	0x64
                                    1- 2386     	BANKSEL	_maxDuty
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 2387     	MOVAR	_maxDuty
     002F 3rrr                      1- 2388     	LGOTO	_00218_DS_
     0030                           1- 2389     _00217_DS_:
                                    1- 2390     	.line	192, "main.c"; 	else if(workStep == 2)
                                    1- 2391     	BANKSEL	_workStep
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1- 2392     	MOVR	_workStep,W
     0032 2402                      1- 2393     	XORIA	0x02
     0033 0903                      1- 2394     	BTRSS	STATUS,2
     0034 3rrr                      1- 2395     	LGOTO	_00214_DS_
                                    1- 2396     	.line	193, "main.c"; 	maxDuty = 105;
     0035 2169                      1- 2397     	MOVIA	0x69
                                    1- 2398     	BANKSEL	_maxDuty
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 2399     	MOVAR	_maxDuty
     0038 3rrr                      1- 2400     	LGOTO	_00218_DS_
     0039                           1- 2401     _00214_DS_:
                                    1- 2402     	.line	194, "main.c"; 	else if(workStep == 3)
                                    1- 2403     	BANKSEL	_workStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 2404     	MOVR	_workStep,W
     003B 2403                      1- 2405     	XORIA	0x03
     003C 0903                      1- 2406     	BTRSS	STATUS,2
     003D 3rrr                      1- 2407     	LGOTO	_00211_DS_
                                    1- 2408     	.line	195, "main.c"; 	maxDuty = 110;
     003E 216E                      1- 2409     	MOVIA	0x6e
                                    1- 2410     	BANKSEL	_maxDuty
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 00rr                      1- 2411     	MOVAR	_maxDuty
     0041 3rrr                      1- 2412     	LGOTO	_00218_DS_
     0042                           1- 2413     _00211_DS_:
                                    1- 2414     	.line	196, "main.c"; 	else if(workStep == 4)
                                    1- 2415     	BANKSEL	_workStep
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1- 2416     	MOVR	_workStep,W
     0044 2404                      1- 2417     	XORIA	0x04
     0045 0903                      1- 2418     	BTRSS	STATUS,2
     0046 3rrr                      1- 2419     	LGOTO	_00208_DS_
                                    1- 2420     	.line	197, "main.c"; 	maxDuty = 115;
     0047 2173                      1- 2421     	MOVIA	0x73
                                    1- 2422     	BANKSEL	_maxDuty
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 00rr                      1- 2423     	MOVAR	_maxDuty
     004A 3rrr                      1- 2424     	LGOTO	_00218_DS_
     004B                           1- 2425     _00208_DS_:
                                    1- 2426     	.line	198, "main.c"; 	else if(workStep == 5)
                                    1- 2427     	BANKSEL	_workStep
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1- 2428     	MOVR	_workStep,W
     004D 2405                      1- 2429     	XORIA	0x05
     004E 0903                      1- 2430     	BTRSS	STATUS,2
     004F 3rrr                      1- 2431     	LGOTO	_00205_DS_
                                    1- 2432     	.line	199, "main.c"; 	maxDuty = 120;
     0050 2178                      1- 2433     	MOVIA	0x78
                                    1- 2434     	BANKSEL	_maxDuty
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 2435     	MOVAR	_maxDuty
     0053 3rrr                      1- 2436     	LGOTO	_00218_DS_
     0054                           1- 2437     _00205_DS_:
                                    1- 2438     	.line	200, "main.c"; 	else if(workStep == 6)
                                    1- 2439     	BANKSEL	_workStep
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 01rr                      1- 2440     	MOVR	_workStep,W
     0056 2406                      1- 2441     	XORIA	0x06
     0057 0903                      1- 2442     	BTRSS	STATUS,2
     0058 3rrr                      1- 2443     	LGOTO	_00218_DS_
                                    1- 2444     	.line	201, "main.c"; 	maxDuty = 128;
     0059 2180                      1- 2445     	MOVIA	0x80
                                    1- 2446     	BANKSEL	_maxDuty
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1- 2447     	MOVAR	_maxDuty
     005C                           1- 2448     _00218_DS_:
                                    1- 2449     	.line	202, "main.c"; 	if(workStep > 0)
                                    1- 2450     	BANKSEL	_workStep
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 2451     	MOVR	_workStep,W
     005E 0D03                      1- 2452     	BTRSC	STATUS,2
     005F 3rrr                      1- 2453     	LGOTO	_00220_DS_
                                    1- 2454     	.line	204, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2455     	BANKSEL	_maxDuty
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1- 2456     	MOVR	_maxDuty,W
     0062 00rr                      1- 2457     	SFUN	_PWM2DUTY
                                    1- 2458     	.line	205, "main.c"; 	pwmInit();
     0063 2rrr                      1- 2459     	LCALL	_pwmInit
     0064                           1- 2460     _00220_DS_:
                                    1- 2461     	.line	207, "main.c"; 	ledStep = workStep;
                                    1- 2462     	BANKSEL	_workStep
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 01rr                      1- 2463     	MOVR	_workStep,W
                                    1- 2464     	BANKSEL	_ledStep
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 00rr                      1- 2465     	MOVAR	_ledStep
     0068 3rrr                      1- 2466     	LGOTO	_00231_DS_
     0069                           1- 2467     _00229_DS_:
                                    1- 2468     	.line	209, "main.c"; 	else if(kclick == 2)
                                    1- 2469     	BANKSEL	r0x102D
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 01rr                      1- 2470     	MOVR	r0x102D,W
     006B 2402                      1- 2471     	XORIA	0x02
     006C 0903                      1- 2472     	BTRSS	STATUS,2
     006D 3rrr                      1- 2473     	LGOTO	_00231_DS_
                                    1- 2474     	.line	211, "main.c"; 	if(workStep > 0)
                                    1- 2475     	BANKSEL	_workStep
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 01rr                      1- 2476     	MOVR	_workStep,W
     0070 0D03                      1- 2477     	BTRSC	STATUS,2
     0071 3rrr                      1- 2478     	LGOTO	_00224_DS_
                                    1- 2479     	.line	213, "main.c"; 	powerOff();
     0072 2rrr                      1- 2480     	LCALL	_powerOff
     0073 3rrr                      1- 2481     	LGOTO	_00225_DS_
     0074                           1- 2482     _00224_DS_:
                                    1- 2483     	.line	217, "main.c"; 	if(pwStep == 10)
                                    1- 2484     	BANKSEL	_pwStep
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 01rr                      1- 2485     	MOVR	_pwStep,W
     0076 240A                      1- 2486     	XORIA	0x0a
     0077 0903                      1- 2487     	BTRSS	STATUS,2
     0078 3rrr                      1- 2488     	LGOTO	_00222_DS_
                                    1- 2489     	.line	219, "main.c"; 	sleepTime = 0;
                                    1- 2490     	BANKSEL	_sleepTime
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 02rr                      1- 2491     	CLRR	_sleepTime
     007B 02rr                      1- 2492     	CLRR	(_sleepTime + 1)
                                    1- 2493     	.line	220, "main.c"; 	return;
     007C 3rrr                      1- 2494     	LGOTO	_00231_DS_
     007D                           1- 2495     _00222_DS_:
                                    1- 2496     	.line	222, "main.c"; 	workStep = 1;
     007D 2101                      1- 2497     	MOVIA	0x01
                                    1- 2498     	BANKSEL	_workStep
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 00rr                      1- 2499     	MOVAR	_workStep
                                    1- 2500     	.line	223, "main.c"; 	PWM2DUTY = 120;
     0080 2178                      1- 2501     	MOVIA	0x78
     0081 00rr                      1- 2502     	SFUN	_PWM2DUTY
                                    1- 2503     	.line	224, "main.c"; 	currentDuty = 120;
                                    1- 2504     	BANKSEL	_currentDuty
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 00rr                      1- 2505     	MOVAR	_currentDuty
                                    1- 2506     	.line	225, "main.c"; 	maxDuty = 100;
     0084 2164                      1- 2507     	MOVIA	0x64
                                    1- 2508     	BANKSEL	_maxDuty
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 00rr                      1- 2509     	MOVAR	_maxDuty
                                    1- 2510     	.line	226, "main.c"; 	pwmInit();
     0087 2rrr                      1- 2511     	LCALL	_pwmInit
                                    1- 2512     	.line	227, "main.c"; 	shanshuoTime = 16;
     0088 2110                      1- 2513     	MOVIA	0x10
                                    1- 2514     	BANKSEL	_shanshuoTime
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 00rr                      1- 2515     	MOVAR	_shanshuoTime
     008B                           1- 2516     _00225_DS_:
                                    1- 2517     	.line	230, "main.c"; 	ledStep = workStep;
                                    1- 2518     	BANKSEL	_workStep
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 01rr                      1- 2519     	MOVR	_workStep,W
                                    1- 2520     	BANKSEL	_ledStep
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 00rr                      1- 2521     	MOVAR	_ledStep
     008F                           1- 2522     _00231_DS_:
                                    1- 2523     	.line	232, "main.c"; 	}
                                    1- 2524     	RETURN	
     008F 0010                      3-   26 m1      ret
                                    1- 2525     ; exit point of _keyCtr
                                    1- 2528     ;	code size estimation:
                                    1- 2529     ;	  954+  235 =  1189 instructions ( 2848 byte)
                                    1- 2531     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002C
_00002_DS_              Label    00000025
_00003_DS_              Label    00000037
_00110_DS_              Label    0000003F
_00117_DS_              Label    00000050
_00124_DS_              Label    00000053
_00126_DS_              Label    00000057
_00138_DS_              Label    0000001F
_00143_DS_              Label    0000003B
_00150_DS_              Label    00000002
_00192_DS_              Label    00000038
_00193_DS_              Label    00000042
_00199_DS_              Label    0000001A
_00201_DS_              Label    00000024
_00205_DS_              Label    00000054
_00208_DS_              Label    0000004B
_00211_DS_              Label    00000042
_00214_DS_              Label    00000039
_00217_DS_              Label    00000030
_00218_DS_              Label    0000005C
_00220_DS_              Label    00000064
_00222_DS_              Label    0000007D
_00224_DS_              Label    00000074
_00225_DS_              Label    0000008B
_00229_DS_              Label    00000069
_00231_DS_              Label    0000008F
_00245_DS_              Label    00000013
_00248_DS_              Label    00000015
_00251_DS_              Label    0000002B
_00256_DS_              Label    0000002F
_00259_DS_              Label    00000045
_00262_DS_              Label    00000047
_00266_DS_              Label    00000054
_00268_DS_              Label    00000068
_00269_DS_              Label    0000006A
_00270_DS_              Label    0000006B
_00271_DS_              Label    0000006C
_00272_DS_              Label    0000006D
_00273_DS_              Label    0000006E
_00274_DS_              Label    0000006F
_00276_DS_              Label    00000070
_00325_DS_              Label    00000061
_00360_DS_              Label    0000000C
_00380_DS_              Label    0000001D
_00381_DS_              Label    00000025
_00383_DS_              Label    00000013
_00384_DS_              Label    00000027
_00385_DS_              Label    00000028
_00397_DS_              Label    0000001B
_00402_DS_              Label    0000002C
_00404_DS_              Label    0000003C
_00411_DS_              Label    00000004
_00413_DS_              Label    0000000E
_00423_DS_              Label    00000038
_00427_DS_              Label    00000069
_00432_DS_              Label    00000071
_00435_DS_              Label    00000044
_00436_DS_              Label    00000075
_00443_DS_              Label    000000A5
_00444_DS_              Label    000000B6
_00452_DS_              Label    000000F0
_00456_DS_              Label    00000102
_00457_DS_              Label    00000105
_00461_DS_              Label    00000123
_00465_DS_              Label    00000135
_00466_DS_              Label    00000138
_00470_DS_              Label    00000156
_00474_DS_              Label    00000168
_00475_DS_              Label    0000016B
_00479_DS_              Label    00000189
_00483_DS_              Label    0000019B
_00484_DS_              Label    0000019E
_00488_DS_              Label    000001B9
_00489_DS_              Label    000001BC
_00493_DS_              Label    000001A2
_00496_DS_              Label    0000016F
_00499_DS_              Label    0000013C
_00502_DS_              Label    00000109
_00505_DS_              Label    000000D6
_00508_DS_              Label    00000088
_00510_DS_              Label    000001BF
_00629_DS_              Label    0000003F
_00630_DS_              Label    0000004B
_00633_DS_              Label    00000082
_00634_DS_              Label    0000008F
_00636_DS_              Label    0000009F
_00637_DS_              Label    000000B1
_00638_DS_              Label    000000C2
_00639_DS_              Label    000000CB
_00640_DS_              Label    000000DD
_00641_DS_              Label    000000EB
_00643_DS_              Label    000000FC
_00644_DS_              Label    00000110
_00645_DS_              Label    0000011E
_00647_DS_              Label    0000012F
_00648_DS_              Label    00000143
_00649_DS_              Label    00000151
_00651_DS_              Label    00000162
_00652_DS_              Label    00000176
_00653_DS_              Label    00000184
_00655_DS_              Label    00000195
_00657_DS_              Label    000001B3
_00664_DS_              Label    0000000E
_00666_DS_              Label    0000002F
_00671_DS_              Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBatAD             Label    00000000
_checkInAD              Label    00000000
_checkOutA              Label    00000000
_chrgCount              Label    00000000
_chrgCtr                Label    00000000
_chrgTime               Label    00000000
_CMPCR                  Label    00000000
_count1s                Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_count900s              Label    00000000
_currentDuty            Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_F_AIN1_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_firstTime              Label    00000000
_FSR                    Label    00000000
_fullCount              Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IO_Init                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_LED5ON                 Label    00000000
_LED6ON                 Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_LedInput               Label    00000000
_ledLightTime           Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_ledTime                Label    00000000
_lowBatTime             Label    00000000
_lowCount               Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_overCount              Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_powerOff               Label    00000000
_preFG                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN1_DATA            Label    00000000
_R_AIN1_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_shanshuoTime           Label    00000000
_sleepTime              Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempDuty               Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000068
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1025                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
