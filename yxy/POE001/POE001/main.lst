
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_closeStatus
                                    1-   97     	extern	_keyRead
                                    1-   98     	extern	_delay
                                    1-   99     	extern	_F_wait_eoc
                                    1-  100     	extern	_gotoSleep
                                    1-  101     	extern	_F_AIN4_Convert
                                    1-  102     	extern	_F_AIN2_Convert
                                    1-  103     	extern	_F_AIN1_Convert
                                    1-  104     	extern	_checkBat
                                    1-  105     	extern	_checkInV
                                    1-  106     	extern	_initAD
                                    1-  107     	extern	_keyCtr
                                    1-  108     	extern	_workCtr
                                    1-  109     	extern	_chrgWork
                                    1-  110     	extern	_isr
                                    1-  111     	extern	_main
                                    1-  112     	extern	_debug
                                    1-  113     	extern	_intCount
                                    1-  114     	extern	_IntFlag
                                    1-  115     	extern	_sleepDelay
                                    1-  116     	extern	_workStep
                                    1-  117     	extern	_longPressFlag
                                    1-  118     	extern	_keyCount
                                    1-  119     	extern	_keyClick
                                    1-  120     	extern	_chrgStatus
                                    1-  121     	extern	_batStatus
                                    1-  122     	extern	_workStatus
                                    1-  123     	extern	_inLowTime
                                    1-  124     	extern	_R_AIN1_DATA
                                    1-  125     	extern	_R_AIN1_DATA_LB
                                    1-  126     	extern	_R_AIN2_DATA
                                    1-  127     	extern	_R_AIN2_DATA_LB
                                    1-  128     	extern	_R_AIN4_DATA
                                    1-  129     	extern	_R_AIN4_DATA_LB
                                    1-  130     	extern	_overTime
                                    1-  131     	extern	_shandeng
                                    1-  132     	extern	_count500ms
                                    1-  133     	extern	_firstLow
                                    1-  134     	extern	_firstLowTime
                                    1-  135     	extern	_batLowTime
                                    1-  137     	extern PSAVE
                                    1-  138     	extern SSAVE
                                    1-  139     	extern WSAVE
                                    1-  140     	extern STK02
                                    1-  141     	extern STK01
                                    1-  142     	extern STK00
                                    1-  144     .segment "uninit", 0x20000040
 20000040                           1-  145     PSAVE:
                                    1-  146     	.res 1
 20000041                           1-  147     SSAVE:
                                    1-  148     	.res 1
 20000042                           1-  149     WSAVE:
                                    1-  150     	.res 1
 20000043                           1-  151     STK02:
                                    1-  152     	.res 1
 20000044                           1-  153     STK01:
                                    1-  154     	.res 1
 20000045                           1-  155     STK00:
                                    1-  156     	.res 1
                                    1-  158     ;--------------------------------------------------------
                                    1-  159     ; global definitions
                                    1-  160     ;--------------------------------------------------------
                                    1-  161     ;--------------------------------------------------------
                                    1-  162     ; absolute symbol definitions
                                    1-  163     ;--------------------------------------------------------
                                    1-  164     ;--------------------------------------------------------
                                    1-  165     ; compiler-defined variables
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     .segment "uninit"
     0000                           1-  168     r0x103D:
                                    1-  169     	.res	1
                                    1-  170     .segment "uninit"
     0000                           1-  171     r0x103C:
                                    1-  172     	.res	1
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x103B:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x1039:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x103A:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x1035:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1036:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x102D:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x102E:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x102F:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x1032:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x1027:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x1028:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x1029:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x102C:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1021:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1022:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x1023:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x1026:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x101E:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x101D:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x101F:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1020:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x101C:
                                    1-  238     	.res	1
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ; initialized data
                                    1-  241     ;--------------------------------------------------------
                                    1-  243     .segment "idata"
     0000                           1-  244     _debug:
     0000 0000                      1-  245     	dw	0x00
                                    1-  249     .segment "idata"
     0000                           1-  250     _intCount:
     0000 0000                      1-  251     	dw	0x00
                                    1-  255     .segment "idata"
     0000                           1-  256     _IntFlag:
     0000 0000                      1-  257     	dw	0x00
                                    1-  261     .segment "idata"
     0000                           1-  262     _sleepDelay:
     0000 0000                      1-  263     	dw	0x00
                                    1-  267     .segment "idata"
     0000                           1-  268     _workStep:
     0000 0000                      1-  269     	dw	0x00
                                    1-  273     .segment "idata"
     0000                           1-  274     _longPressFlag:
     0000 0000                      1-  275     	dw	0x00
                                    1-  279     .segment "idata"
     0000                           1-  280     _keyCount:
     0000 0000                      1-  281     	dw	0x00
                                    1-  285     .segment "idata"
     0000                           1-  286     _keyClick:
     0000 0000                      1-  287     	dw	0x00
                                    1-  291     .segment "idata"
     0000                           1-  292     _chrgStatus:
     0000 0000                      1-  293     	dw	0x00
                                    1-  297     .segment "idata"
     0000                           1-  298     _batStatus:
     0000 0000                      1-  299     	dw	0x00
                                    1-  303     .segment "idata"
     0000                           1-  304     _workStatus:
     0000 0000                      1-  305     	dw	0x00
                                    1-  309     .segment "idata"
     0000                           1-  310     _inLowTime:
     0000 0000                      1-  311     	dw	0x00
                                    1-  315     .segment "idata"
     0000                           1-  316     _R_AIN1_DATA:
     0000 0000 0000                 1-  317     	dw	0x00, 0x00
                                    1-  321     .segment "idata"
     0000                           1-  322     _R_AIN1_DATA_LB:
     0000 0000                      1-  323     	dw	0x00
                                    1-  327     .segment "idata"
     0000                           1-  328     _R_AIN2_DATA:
     0000 0000 0000                 1-  329     	dw	0x00, 0x00
                                    1-  333     .segment "idata"
     0000                           1-  334     _R_AIN2_DATA_LB:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _R_AIN4_DATA:
     0000 0000 0000                 1-  341     	dw	0x00, 0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _R_AIN4_DATA_LB:
     0000 0000                      1-  347     	dw	0x00
                                    1-  351     .segment "idata"
     0000                           1-  352     _overTime:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _shandeng:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _count500ms:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _firstLow:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _firstLowTime:
     0000 0000                      1-  377     	dw	0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _batLowTime:
     0000 0000                      1-  383     	dw	0x00
                                    1-  386     ;--------------------------------------------------------
                                    1-  387     ; overlayable items in internal ram 
                                    1-  388     ;--------------------------------------------------------
                                    1-  389     ;	udata_ovr
                                    1-  390     ;--------------------------------------------------------
                                    1-  391     ; reset vector 
                                    1-  392     ;--------------------------------------------------------
                                    1-  393     ORG	0x0000
     0000 3rrr                      1-  394     	LGOTO	__nyc_ny8_startup
                                    1-  395     ;--------------------------------------------------------
                                    1-  396     ; interrupt and initialization code
                                    1-  397     ;--------------------------------------------------------
                                    1-  398     ORG 0x0008
     0008 3rrr                      1-  399     	lgoto	__sdcc_interrupt
                                    1-  401     .segment "code"
     0000                           1-  402     __sdcc_interrupt:
                                    1-  403     ;***
                                    1-  404     ;  pBlock Stats: dbName = I
                                    1-  405     ;***
                                    1-  406     ;functions called:
                                    1-  407     ;   _closeStatus
                                    1-  408     ;   _gotoSleep
                                    1-  409     ;   _closeStatus
                                    1-  410     ;   _gotoSleep
                                    1-  411     ;2 compiler assigned registers:
                                    1-  412     ;   STK00
                                    1-  413     ;   STK01
                                    1-  414     ;; Starting pCode block
     0000                           1-  415     _isr:
                                    1-  416     ; 0 exit points
                                    1-  417     	.line	70, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  418     	MOVAR	WSAVE
     0001 1503                      1-  419     	SWAPR	STATUS,W
     0002 0283                      1-  420     	CLRR	STATUS
     0003 00rr                      1-  421     	MOVAR	SSAVE
     0004 010A                      1-  422     	MOVR	PCHBUF,W
     0005 028A                      1-  423     	CLRR	PCHBUF
     0006 00rr                      1-  424     	MOVAR	PSAVE
     0007 0104                      1-  425     	MOVR	FSR,W
                                    1-  426     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  427     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  428     	MOVR	STK00,W
                                    1-  429     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  430     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  431     	MOVR	STK01,W
                                    1-  432     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  433     	MOVAR	___sdcc_saved_stk01
                                    1-  434     	.line	72, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  435     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  436     	LGOTO	_00120_DS_
                                    1-  437     	.line	74, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  438     	MOVIA	0x37
     0013 03rr                      1-  439     	ADDAR	_TMR0,F
                                    1-  440     	.line	75, "main.c"; 	intCount++;
                                    1-  441     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  442     	INCR	_intCount,F
                                    1-  443     	.line	77, "main.c"; 	if(++intCount >= 100)
     0016 05rr                      1-  444     	INCR	_intCount,F
                                    1-  445     ;;unsigned compare: left < lit (0x64=100), size=1
     0017 2164                      1-  446     	MOVIA	0x64
     0018 04rr                      1-  447     	SUBAR	_intCount,W
     0019 0803                      1-  448     	BTRSS	STATUS,0
     001A 3rrr                      1-  449     	LGOTO	_00120_DS_
                                    1-  450     	.line	79, "main.c"; 	intCount = 0;
     001B 02rr                      1-  451     	CLRR	_intCount
                                    1-  452     	.line	80, "main.c"; 	IntFlag = 1;
     001C 2101                      1-  453     	MOVIA	0x01
                                    1-  454     	BANKSEL	_IntFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  455     	MOVAR	_IntFlag
                                    1-  456     	.line	81, "main.c"; 	if(++count500ms >= 50)
                                    1-  457     	BANKSEL	_count500ms
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 05rr                      1-  458     	INCR	_count500ms,F
                                    1-  459     ;;unsigned compare: left < lit (0x32=50), size=1
     0021 2132                      1-  460     	MOVIA	0x32
     0022 04rr                      1-  461     	SUBAR	_count500ms,W
     0023 0803                      1-  462     	BTRSS	STATUS,0
     0024 3rrr                      1-  463     	LGOTO	_00120_DS_
                                    1-  464     	.line	83, "main.c"; 	count500ms = 0;
     0025 02rr                      1-  465     	CLRR	_count500ms
                                    1-  466     	.line	84, "main.c"; 	if(shandeng > 0)
                                    1-  467     	BANKSEL	_shandeng
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  468     	MOVR	_shandeng,W
     0028 0D03                      1-  469     	BTRSC	STATUS,2
     0029 3rrr                      1-  470     	LGOTO	_00113_DS_
                                    1-  471     	.line	86, "main.c"; 	if(shandeng % 2 == 0)
     002A 0Crr                      1-  472     	BTRSC	_shandeng,0
     002B 3rrr                      1-  473     	LGOTO	_00106_DS_
                                    1-  474     	.line	87, "main.c"; 	LED4ON();
     002C 1Crr                      1-  475     	BCR	_PORTB,1
     002D 3rrr                      1-  476     	LGOTO	_00107_DS_
     002E                           1-  477     _00106_DS_:
                                    1-  478     	.line	89, "main.c"; 	LED4OFF();
     002E 18rr                      1-  479     	BSR	_PORTB,1
     002F                           1-  480     _00107_DS_:
                                    1-  481     	.line	90, "main.c"; 	shandeng--;
                                    1-  482     	BANKSEL	_shandeng
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 17rr                      1-  483     	DECRSZ	_shandeng,F
                                    1-  484     	.line	91, "main.c"; 	if(shandeng == 0)
     0031 3rrr                      1-  485     	LGOTO	_00120_DS_
                                    1-  486     	.line	93, "main.c"; 	workStatus = 0;
                                    1-  487     	BANKSEL	_workStatus
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 02rr                      1-  488     	CLRR	_workStatus
                                    1-  489     	.line	94, "main.c"; 	closeStatus();
     0034 2rrr                      1-  490     	LCALL	_closeStatus
                                    1-  491     	.line	95, "main.c"; 	gotoSleep();
     0035 2rrr                      1-  492     	LCALL	_gotoSleep
     0036 3rrr                      1-  493     	LGOTO	_00120_DS_
     0037                           1-  494     _00113_DS_:
                                    1-  495     	.line	98, "main.c"; 	else if(batStatus != 1)
                                    1-  496     	BANKSEL	_batStatus
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1-  497     	MOVR	_batStatus,W
     0039 2401                      1-  498     	XORIA	0x01
     003A 0903                      1-  499     	BTRSS	STATUS,2
                                    1-  500     	.line	100, "main.c"; 	LED4OFF();
     003B 18rr                      1-  501     	BSR	_PORTB,1
     003C                           1-  502     _00120_DS_:
                                    1-  503     	.line	107, "main.c"; 	if(INTFbits.PABIF)
     003C 08rr                      1-  504     	BTRSS	_INTFbits,1
     003D 3rrr                      1-  505     	LGOTO	_00122_DS_
                                    1-  506     	.line	109, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     003E 21FD                      1-  507     	MOVIA	0xfd
     003F 00rr                      1-  508     	MOVAR	_INTF
     0040                           1-  509     _00122_DS_:
                                    1-  510     	.line	112, "main.c"; 	INTF = 0;
     0040 02rr                      1-  511     	CLRR	_INTF
                                    1-  512     	.line	114, "main.c"; 	}
                                    1-  513     	BANKSEL	___sdcc_saved_stk01
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1-  514     	MOVR	___sdcc_saved_stk01,W
     0043 00rr                      1-  515     	MOVAR	STK01
                                    1-  516     	BANKSEL	___sdcc_saved_stk00
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  517     	MOVR	___sdcc_saved_stk00,W
     0046 00rr                      1-  518     	MOVAR	STK00
                                    1-  519     	BANKSEL	___sdcc_saved_fsr
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1-  520     	MOVR	___sdcc_saved_fsr,W
     0049 0084                      1-  521     	MOVAR	FSR
     004A 01rr                      1-  522     	MOVR	PSAVE,W
     004B 008A                      1-  523     	MOVAR	PCHBUF
     004C 0283                      1-  524     	CLRR	STATUS
     004D 15rr                      1-  525     	SWAPR	SSAVE,W
     004E 0083                      1-  526     	MOVAR	STATUS
     004F 15rr                      1-  527     	SWAPR	WSAVE,F
     0050 15rr                      1-  528     	SWAPR	WSAVE,W
     0051                           1-  529     END_OF_INTERRUPT:
     0051 0011                      1-  530     	RETIE	
                                    1-  532     ;--------------------------------------------------------
                                    1-  533     ; code
                                    1-  534     ;--------------------------------------------------------
                                    1-  535     ;***
                                    1-  536     ;  pBlock Stats: dbName = M
                                    1-  537     ;***
                                    1-  538     ;has an exit
                                    1-  539     ;functions called:
                                    1-  540     ;   _closeStatus
                                    1-  541     ;   _initAD
                                    1-  542     ;   _keyCtr
                                    1-  543     ;   _chrgWork
                                    1-  544     ;   _workCtr
                                    1-  545     ;   _closeStatus
                                    1-  546     ;   _gotoSleep
                                    1-  547     ;   _closeStatus
                                    1-  548     ;   _initAD
                                    1-  549     ;   _keyCtr
                                    1-  550     ;   _chrgWork
                                    1-  551     ;   _workCtr
                                    1-  552     ;   _closeStatus
                                    1-  553     ;   _gotoSleep
                                    1-  554     ;1 compiler assigned register :
                                    1-  555     ;   r0x103D
                                    1-  556     ;; Starting pCode block
                                    1-  557     .segment "code"; module=main, function=_main
     0000                           1-  559     _main:
                                    1-  560     ; 2 exit points
                                    1-  561     	.line	118, "main.c"; 	DISI();
     0000 0013                      1-  562     	DISI
                                    1-  563     	.line	119, "main.c"; 	IOSTA = C_PA1_Input | C_PA2_Input  | C_PA5_Input;
     0001 2126                      1-  564     	MOVIA	0x26
     0002 000r                      1-  565     	IOST	_IOSTA
                                    1-  566     	.line	120, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1-  567     	MOVIA	0x01
     0004 000r                      1-  568     	IOST	_IOSTB
                                    1-  569     	.line	121, "main.c"; 	PORTB = 0x02;
     0005 2102                      1-  570     	MOVIA	0x02
     0006 00rr                      1-  571     	MOVAR	_PORTB
                                    1-  572     	.line	122, "main.c"; 	PORTA = 0x00;
     0007 02rr                      1-  573     	CLRR	_PORTA
                                    1-  574     	.line	123, "main.c"; 	APHCON = 0xFF;
     0008 21FF                      1-  575     	MOVIA	0xff
     0009 000r                      1-  576     	IOST	_APHCON
                                    1-  577     	.line	124, "main.c"; 	BPHCON = 0xFE;
     000A 21FE                      1-  578     	MOVIA	0xfe
     000B 00rr                      1-  579     	MOVAR	_BPHCON
                                    1-  580     	.line	125, "main.c"; 	ABPLCON = 0xFF;
     000C 21FF                      1-  581     	MOVIA	0xff
     000D 00rr                      1-  582     	MOVAR	_ABPLCON
                                    1-  583     	.line	127, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1-  584     	MOVIA	0x01
     000F 00rr                      1-  585     	MOVAR	_INTE
                                    1-  586     	.line	129, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1-  587     	CLRA	
     0011 000r                      1-  588     	IOST	_PCON1
                                    1-  589     	.line	131, "main.c"; 	TMR0 = 55;
     0012 2137                      1-  590     	MOVIA	0x37
     0013 00rr                      1-  591     	MOVAR	_TMR0
                                    1-  592     	.line	132, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1-  593     	CLRA	
     0015 0003                      1-  594     	T0MD	
                                    1-  595     	.line	134, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1-  596     	MOVIA	0x01
     0017 000r                      1-  597     	IOST	_PCON1
                                    1-  598     	.line	136, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR,PA5关闭上拉
     0018 2198                      1-  599     	MOVIA	0x98
     0019 00rr                      1-  600     	MOVAR	_PCON
                                    1-  601     	.line	138, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1-  602     	MOVIA	0x01
     001B 000r                      1-  603     	IOST	_PCON1
                                    1-  604     	.line	139, "main.c"; 	ENI();
     001C 0004                      1-  605     	ENI
                                    1-  606     	.line	140, "main.c"; 	closeStatus();
     001D 2rrr                      1-  607     	LCALL	_closeStatus
                                    1-  608     	.line	141, "main.c"; 	initAD();
     001E 2rrr                      1-  609     	LCALL	_initAD
     001F                           1-  610     _00194_DS_:
                                    1-  611     	.line	146, "main.c"; 	CLRWDT();
     001F 0002                      1-  612     	clrwdt
                                    1-  613     	.line	147, "main.c"; 	if(PORTA & 0x20)
     0020 0Arr                      1-  614     	BTRSS	_PORTA,5
     0021 3rrr                      1-  615     	LGOTO	_00179_DS_
                                    1-  616     ;;unsigned compare: left < lit (0x2=2), size=1
                                    1-  617     	.line	150, "main.c"; 	if(chrgStatus < 2)
     0022 2102                      1-  618     	MOVIA	0x02
                                    1-  619     	BANKSEL	_chrgStatus
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 04rr                      1-  620     	SUBAR	_chrgStatus,W
                                    1-  621     	BANKSEL	r0x103D
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1-  622     	CLRR	r0x103D
     0027 0803                      1-  623     	BTRSS	STATUS,0
     0028 18rr                      1-  624     	BSR	r0x103D,0
     0029 01rr                      1-  625     	MOVR	r0x103D,W
     002A 0D03                      1-  626     	BTRSC	STATUS,2
     002B 3rrr                      1-  627     	LGOTO	_00166_DS_
                                    1-  628     	.line	152, "main.c"; 	LED2OFF();
     002C 1Frr                      1-  629     	BCR	_PORTA,7
                                    1-  630     	.line	153, "main.c"; 	if(chrgStatus == 1)
                                    1-  631     	BANKSEL	_chrgStatus
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  632     	MOVR	_chrgStatus,W
     002F 2401                      1-  633     	XORIA	0x01
     0030 0D03                      1-  634     	BTRSC	STATUS,2
                                    1-  635     	.line	154, "main.c"; 	LED4OFF();
     0031 18rr                      1-  636     	BSR	_PORTB,1
                                    1-  637     	.line	155, "main.c"; 	if(batStatus == 0 || batStatus == 2 || (batStatus == 3 && shandeng == 0))
                                    1-  638     	BANKSEL	_batStatus
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 01rr                      1-  639     	MOVR	_batStatus,W
     0034 0D03                      1-  640     	BTRSC	STATUS,2
     0035 3rrr                      1-  641     	LGOTO	_00158_DS_
     0036 01rr                      1-  642     	MOVR	_batStatus,W
     0037 2402                      1-  643     	XORIA	0x02
     0038 0D03                      1-  644     	BTRSC	STATUS,2
     0039 3rrr                      1-  645     	LGOTO	_00158_DS_
     003A 01rr                      1-  646     	MOVR	_batStatus,W
     003B 2403                      1-  647     	XORIA	0x03
     003C 0903                      1-  648     	BTRSS	STATUS,2
     003D 3rrr                      1-  649     	LGOTO	_00167_DS_
                                    1-  650     	BANKSEL	_shandeng
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1-  651     	MOVR	_shandeng,W
     0040 0903                      1-  652     	BTRSS	STATUS,2
     0041 3rrr                      1-  653     	LGOTO	_00167_DS_
     0042                           1-  654     _00158_DS_:
                                    1-  655     	.line	156, "main.c"; 	LED4OFF();
     0042 18rr                      1-  656     	BSR	_PORTB,1
     0043 3rrr                      1-  657     	LGOTO	_00167_DS_
     0044                           1-  658     _00166_DS_:
                                    1-  659     	.line	160, "main.c"; 	LED3OFF();
     0044 1Frr                      1-  660     	BCR	_PORTA,6
                                    1-  661     	.line	161, "main.c"; 	if(batStatus == 3)
                                    1-  662     	BANKSEL	_batStatus
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1-  663     	MOVR	_batStatus,W
     0047 2403                      1-  664     	XORIA	0x03
     0048 0D03                      1-  665     	BTRSC	STATUS,2
                                    1-  666     	.line	162, "main.c"; 	LED2OFF();
     0049 1Frr                      1-  667     	BCR	_PORTA,7
     004A                           1-  668     _00167_DS_:
                                    1-  669     	.line	164, "main.c"; 	if(chrgStatus == 0)
                                    1-  670     	BANKSEL	_chrgStatus
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 01rr                      1-  671     	MOVR	_chrgStatus,W
     004C 0D03                      1-  672     	BTRSC	STATUS,2
                                    1-  673     	.line	166, "main.c"; 	CHRGON();
     004D 19rr                      1-  674     	BSR	_PORTB,2
                                    1-  675     	.line	168, "main.c"; 	if(workStatus == 1  && chrgStatus < 2)
                                    1-  676     	BANKSEL	_workStatus
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1-  677     	MOVR	_workStatus,W
     0050 2401                      1-  678     	XORIA	0x01
     0051 0903                      1-  679     	BTRSS	STATUS,2
     0052 3rrr                      1-  680     	LGOTO	_00180_DS_
                                    1-  681     	BANKSEL	r0x103D
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 01rr                      1-  682     	MOVR	r0x103D,W
     0055 0D03                      1-  683     	BTRSC	STATUS,2
     0056 3rrr                      1-  684     	LGOTO	_00180_DS_
                                    1-  685     	.line	170, "main.c"; 	POWERON();
     0057 18rr                      1-  686     	BSR	_PORTA,0
                                    1-  687     	.line	171, "main.c"; 	LED3ON();
     0058 1Brr                      1-  688     	BSR	_PORTA,6
     0059 3rrr                      1-  689     	LGOTO	_00180_DS_
     005A                           1-  690     _00179_DS_:
                                    1-  691     	.line	178, "main.c"; 	if(workStatus == 1)
                                    1-  692     	BANKSEL	r0x103D
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 02rr                      1-  693     	CLRR	r0x103D
                                    1-  694     	BANKSEL	_workStatus
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1-  695     	MOVR	_workStatus,W
     005E 2401                      1-  696     	XORIA	0x01
     005F 0903                      1-  697     	BTRSS	STATUS,2
     0060 3rrr                      1-  698     	LGOTO	_00008_DS_
                                    1-  699     	BANKSEL	r0x103D
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 05rr                      1-  700     	INCR	r0x103D,F
     0063                           1-  701     _00008_DS_:
                                    1-  702     	BANKSEL	r0x103D
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 01rr                      1-  703     	MOVR	r0x103D,W
     0065 0903                      1-  704     	BTRSS	STATUS,2
                                    1-  705     	.line	179, "main.c"; 	CHRGOFF();
     0066 1Drr                      1-  706     	BCR	_PORTB,2
                                    1-  707     	.line	180, "main.c"; 	LED3OFF();
     0067 1Frr                      1-  708     	BCR	_PORTA,6
                                    1-  709     	.line	181, "main.c"; 	chrgStatus = 0;
                                    1-  710     	BANKSEL	_chrgStatus
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 02rr                      1-  711     	CLRR	_chrgStatus
                                    1-  712     ;;unsigned compare: left < lit (0x3=3), size=1
                                    1-  713     	.line	182, "main.c"; 	if( batStatus < 3 && workStatus == 1)
     006A 2103                      1-  714     	MOVIA	0x03
                                    1-  715     	BANKSEL	_batStatus
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 04rr                      1-  716     	SUBAR	_batStatus,W
     006D 0C03                      1-  717     	BTRSC	STATUS,0
     006E 3rrr                      1-  718     	LGOTO	_00180_DS_
                                    1-  719     	BANKSEL	r0x103D
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 01rr                      1-  720     	MOVR	r0x103D,W
     0071 0903                      1-  721     	BTRSS	STATUS,2
                                    1-  722     	.line	184, "main.c"; 	POWERON();
     0072 18rr                      1-  723     	BSR	_PORTA,0
     0073                           1-  724     _00180_DS_:
                                    1-  725     	.line	187, "main.c"; 	if(!IntFlag)
                                    1-  726     	BANKSEL	_IntFlag
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 01rr                      1-  727     	MOVR	_IntFlag,W
     0075 0D03                      1-  728     	BTRSC	STATUS,2
     0076 3rrr                      1-  729     	LGOTO	_00194_DS_
                                    1-  730     	.line	189, "main.c"; 	IntFlag = 0;
     0077 02rr                      1-  731     	CLRR	_IntFlag
                                    1-  732     	.line	190, "main.c"; 	keyCtr();
     0078 2rrr                      1-  733     	LCALL	_keyCtr
                                    1-  734     	.line	191, "main.c"; 	chrgWork();
     0079 2rrr                      1-  735     	LCALL	_chrgWork
                                    1-  736     	.line	192, "main.c"; 	if(workStatus == 1)
                                    1-  737     	BANKSEL	_workStatus
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 01rr                      1-  738     	MOVR	_workStatus,W
     007C 2401                      1-  739     	XORIA	0x01
     007D 0D03                      1-  740     	BTRSC	STATUS,2
                                    1-  741     	.line	193, "main.c"; 	workCtr();
     007E 2rrr                      1-  742     	LCALL	_workCtr
                                    1-  743     	.line	194, "main.c"; 	if(((PORTA & 0x20) == 0 || chrgStatus == 2) && workStatus == 0 && keyCount == 0 && shandeng == 0)
     007F 0Arr                      1-  744     	BTRSS	_PORTA,5
     0080 3rrr                      1-  745     	LGOTO	_00190_DS_
                                    1-  746     	BANKSEL	_chrgStatus
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 01rr                      1-  747     	MOVR	_chrgStatus,W
     0083 2402                      1-  748     	XORIA	0x02
     0084 0903                      1-  749     	BTRSS	STATUS,2
     0085 3rrr                      1-  750     	LGOTO	_00194_DS_
     0086                           1-  751     _00190_DS_:
                                    1-  752     	BANKSEL	_workStatus
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 01rr                      1-  753     	MOVR	_workStatus,W
     0088 0903                      1-  754     	BTRSS	STATUS,2
     0089 3rrr                      1-  755     	LGOTO	_00194_DS_
                                    1-  756     	BANKSEL	_keyCount
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 01rr                      1-  757     	MOVR	_keyCount,W
     008C 0903                      1-  758     	BTRSS	STATUS,2
     008D 3rrr                      1-  759     	LGOTO	_00194_DS_
                                    1-  760     	BANKSEL	_shandeng
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 01rr                      1-  761     	MOVR	_shandeng,W
     0090 0903                      1-  762     	BTRSS	STATUS,2
     0091 3rrr                      1-  763     	LGOTO	_00194_DS_
                                    1-  764     	.line	196, "main.c"; 	closeStatus();
     0092 2rrr                      1-  765     	LCALL	_closeStatus
                                    1-  766     	.line	197, "main.c"; 	if(++sleepDelay > 50)
                                    1-  767     	BANKSEL	_sleepDelay
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 05rr                      1-  768     	INCR	_sleepDelay,F
                                    1-  769     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  770     ;;unsigned compare: left >= lit (0x33=51), size=1
     0095 2133                      1-  771     	MOVIA	0x33
     0096 04rr                      1-  772     	SUBAR	_sleepDelay,W
     0097 0803                      1-  773     	BTRSS	STATUS,0
     0098 3rrr                      1-  774     	LGOTO	_00194_DS_
                                    1-  775     	.line	198, "main.c"; 	gotoSleep();
     0099 2rrr                      1-  776     	LCALL	_gotoSleep
     009A 3rrr                      1-  777     	LGOTO	_00194_DS_
                                    1-  778     	.line	201, "main.c"; 	}
                                    1-  779     	RETURN	
     009B 0010                      3-   26 m1      ret
                                    1-  780     ; exit point of _main
                                    1-  782     ;***
                                    1-  783     ;  pBlock Stats: dbName = C
                                    1-  784     ;***
                                    1-  785     ;has an exit
                                    1-  786     ;; Starting pCode block
                                    1-  787     .segment "code"; module=main, function=_closeStatus
     0000                           1-  789     _closeStatus:
                                    1-  790     ; 2 exit points
                                    1-  791     	.line	590, "main.c"; 	LED1OFF();
     0000 1Drr                      1-  792     	BCR	_PORTB,3
                                    1-  793     	.line	591, "main.c"; 	LED2OFF();
     0001 1Frr                      1-  794     	BCR	_PORTA,7
                                    1-  795     	.line	592, "main.c"; 	LED3OFF();
     0002 1Frr                      1-  796     	BCR	_PORTA,6
                                    1-  797     	.line	593, "main.c"; 	LED4OFF();
     0003 18rr                      1-  798     	BSR	_PORTB,1
                                    1-  799     	.line	594, "main.c"; 	CHRGON();
     0004 19rr                      1-  800     	BSR	_PORTB,2
                                    1-  801     	.line	595, "main.c"; 	POWEROFF();
     0005 1Crr                      1-  802     	BCR	_PORTA,0
                                    1-  803     	.line	596, "main.c"; 	}
                                    1-  804     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  805     ; exit point of _closeStatus
                                    1-  807     ;***
                                    1-  808     ;  pBlock Stats: dbName = C
                                    1-  809     ;***
                                    1-  810     ;has an exit
                                    1-  811     ;1 compiler assigned register :
                                    1-  812     ;   r0x101C
                                    1-  813     ;; Starting pCode block
                                    1-  814     .segment "code"; module=main, function=_keyRead
                                    1-  816     ;local variable name mapping:
     0000                           1-  818     _keyRead:
                                    1-  819     ; 2 exit points
                                    1-  820     	.line	555, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  821     	BANKSEL	r0x101C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  822     	MOVAR	r0x101C
                                    1-  823     	.line	557, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  824     	MOVR	r0x101C,W
     0003 0D03                      1-  825     	BTRSC	STATUS,2
     0004 3rrr                      1-  826     	LGOTO	_00579_DS_
                                    1-  827     	.line	559, "main.c"; 	keyCount++;
                                    1-  828     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  829     	INCR	_keyCount,F
                                    1-  830     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  831     	.line	560, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  832     	MOVIA	0xc8
     0008 04rr                      1-  833     	SUBAR	_keyCount,W
     0009 0803                      1-  834     	BTRSS	STATUS,0
     000A 3rrr                      1-  835     	LGOTO	_00580_DS_
                                    1-  836     	.line	562, "main.c"; 	keyCount = 200;
     000B 21C8                      1-  837     	MOVIA	0xc8
     000C 00rr                      1-  838     	MOVAR	_keyCount
                                    1-  839     	.line	563, "main.c"; 	if(!longPressFlag)
                                    1-  840     	BANKSEL	_longPressFlag
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  841     	MOVR	_longPressFlag,W
     000F 0903                      1-  842     	BTRSS	STATUS,2
     0010 3rrr                      1-  843     	LGOTO	_00580_DS_
                                    1-  844     	.line	565, "main.c"; 	longPressFlag = 1;
     0011 2101                      1-  845     	MOVIA	0x01
     0012 00rr                      1-  846     	MOVAR	_longPressFlag
                                    1-  847     	.line	566, "main.c"; 	return 2;
     0013 2102                      1-  848     	MOVIA	0x02
     0014 3rrr                      1-  849     	LGOTO	_00581_DS_
                                    1-  850     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1-  851     _00579_DS_:
                                    1-  852     	.line	572, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1-  853     	MOVIA	0xc8
                                    1-  854     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 04rr                      1-  855     	SUBAR	_keyCount,W
     0018 0803                      1-  856     	BTRSS	STATUS,0
     0019 3rrr                      1-  857     	LGOTO	_00576_DS_
                                    1-  858     	.line	574, "main.c"; 	keyCount = 0;
     001A 02rr                      1-  859     	CLRR	_keyCount
                                    1-  860     	.line	575, "main.c"; 	longPressFlag = 0;
                                    1-  861     	BANKSEL	_longPressFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1-  862     	CLRR	_longPressFlag
                                    1-  863     	.line	576, "main.c"; 	return	0;
     001D 2100                      1-  864     	MOVIA	0x00
     001E 3rrr                      1-  865     	LGOTO	_00581_DS_
                                    1-  866     ;;unsigned compare: left < lit (0x8=8), size=1
     001F                           1-  867     _00576_DS_:
                                    1-  868     	.line	578, "main.c"; 	else if(keyCount >= 8)
     001F 2108                      1-  869     	MOVIA	0x08
                                    1-  870     	BANKSEL	_keyCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1-  871     	SUBAR	_keyCount,W
     0022 0803                      1-  872     	BTRSS	STATUS,0
     0023 3rrr                      1-  873     	LGOTO	_00577_DS_
                                    1-  874     	.line	580, "main.c"; 	keyCount = 0;
     0024 02rr                      1-  875     	CLRR	_keyCount
                                    1-  876     	.line	581, "main.c"; 	return	1;
     0025 2101                      1-  877     	MOVIA	0x01
     0026 3rrr                      1-  878     	LGOTO	_00581_DS_
     0027                           1-  879     _00577_DS_:
                                    1-  880     	.line	583, "main.c"; 	keyCount = 0;
                                    1-  881     	BANKSEL	_keyCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1-  882     	CLRR	_keyCount
     0029                           1-  883     _00580_DS_:
                                    1-  884     	.line	585, "main.c"; 	return 0;
     0029 2100                      1-  885     	MOVIA	0x00
     002A                           1-  886     _00581_DS_:
                                    1-  887     	.line	586, "main.c"; 	}
                                    1-  888     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1-  889     ; exit point of _keyRead
                                    1-  891     ;***
                                    1-  892     ;  pBlock Stats: dbName = C
                                    1-  893     ;***
                                    1-  894     ;has an exit
                                    1-  895     ;5 compiler assigned registers:
                                    1-  896     ;   r0x101D
                                    1-  897     ;   STK00
                                    1-  898     ;   r0x101E
                                    1-  899     ;   r0x101F
                                    1-  900     ;   r0x1020
                                    1-  901     ;; Starting pCode block
                                    1-  902     .segment "code"; module=main, function=_delay
                                    1-  904     ;local variable name mapping:
     0000                           1-  909     _delay:
                                    1-  910     ; 2 exit points
                                    1-  911     	.line	549, "main.c"; 	void delay(u16t time)
                                    1-  912     	BANKSEL	r0x101D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  913     	MOVAR	r0x101D
     0002 01rr                      1-  914     	MOVR	STK00,W
                                    1-  915     	BANKSEL	r0x101E
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  916     	MOVAR	r0x101E
                                    1-  917     	.line	551, "main.c"; 	for(u16t i=0;i<time;i++);
                                    1-  918     	BANKSEL	r0x101F
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  919     	CLRR	r0x101F
                                    1-  920     	BANKSEL	r0x1020
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  921     	CLRR	r0x1020
     0009                           1-  922     _00553_DS_:
                                    1-  923     	BANKSEL	r0x101D
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  924     	MOVR	r0x101D,W
                                    1-  925     	BANKSEL	r0x1020
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  926     	SUBAR	r0x1020,W
     000D 0903                      1-  927     	BTRSS	STATUS,2
     000E 3rrr                      1-  928     	LGOTO	_00564_DS_
                                    1-  929     	BANKSEL	r0x101E
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  930     	MOVR	r0x101E,W
                                    1-  931     	BANKSEL	r0x101F
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  932     	SUBAR	r0x101F,W
     0013                           1-  933     _00564_DS_:
     0013 0C03                      1-  934     	BTRSC	STATUS,0
     0014 3rrr                      1-  935     	LGOTO	_00555_DS_
                                    1-  936     	BANKSEL	r0x101F
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  937     	INCR	r0x101F,F
     0017 0903                      1-  938     	BTRSS	STATUS,2
     0018 3rrr                      1-  939     	LGOTO	_00001_DS_
                                    1-  940     	BANKSEL	r0x1020
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  941     	INCR	r0x1020,F
     001B                           1-  942     _00001_DS_:
     001B 3rrr                      1-  943     	LGOTO	_00553_DS_
     001C                           1-  944     _00555_DS_:
                                    1-  945     	.line	552, "main.c"; 	}
                                    1-  946     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  947     ; exit point of _delay
                                    1-  949     ;***
                                    1-  950     ;  pBlock Stats: dbName = C
                                    1-  951     ;***
                                    1-  952     ;has an exit
                                    1-  953     ;; Starting pCode block
                                    1-  954     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  956     _F_wait_eoc:
                                    1-  957     ; 2 exit points
     0000                           1-  958     _00546_DS_:
                                    1-  959     	.line	543, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  960     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  961     	LGOTO	_00546_DS_
                                    1-  962     	.line	545, "main.c"; 	}
                                    1-  963     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  964     ; exit point of _F_wait_eoc
                                    1-  966     ;***
                                    1-  967     ;  pBlock Stats: dbName = C
                                    1-  968     ;***
                                    1-  969     ;has an exit
                                    1-  970     ;; Starting pCode block
                                    1-  971     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  973     _gotoSleep:
                                    1-  974     ; 2 exit points
                                    1-  975     	.line	516, "main.c"; 	workStatus = 0;
                                    1-  976     	BANKSEL	_workStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  977     	CLRR	_workStatus
                                    1-  978     	.line	518, "main.c"; 	chrgStatus = 0;
                                    1-  979     	BANKSEL	_chrgStatus
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  980     	CLRR	_chrgStatus
                                    1-  981     	.line	519, "main.c"; 	firstLow = 0;
                                    1-  982     	BANKSEL	_firstLow
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  983     	CLRR	_firstLow
                                    1-  984     	.line	520, "main.c"; 	sleepDelay = 0;
                                    1-  985     	BANKSEL	_sleepDelay
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  986     	CLRR	_sleepDelay
                                    1-  987     	.line	521, "main.c"; 	workStep = 0;
                                    1-  988     	BANKSEL	_workStep
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1-  989     	CLRR	_workStep
                                    1-  990     	.line	522, "main.c"; 	PORTB = 0x02;
     000A 2102                      1-  991     	MOVIA	0x02
     000B 00rr                      1-  992     	MOVAR	_PORTB
                                    1-  993     	.line	523, "main.c"; 	PORTA = 0x00;
     000C 02rr                      1-  994     	CLRR	_PORTA
                                    1-  995     	.line	524, "main.c"; 	AWUCON = 0x28;
     000D 2128                      1-  996     	MOVIA	0x28
     000E 00rr                      1-  997     	MOVAR	_AWUCON
                                    1-  998     	.line	525, "main.c"; 	BWUCON = 0x01;
     000F 2101                      1-  999     	MOVIA	0x01
     0010 00rr                      1- 1000     	MOVAR	_BWUCON
                                    1- 1001     	.line	526, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0011 210B                      1- 1002     	MOVIA	0x0b
     0012 00rr                      1- 1003     	MOVAR	_INTE
                                    1- 1004     	.line	527, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0013 2118                      1- 1005     	MOVIA	0x18
     0014 00rr                      1- 1006     	MOVAR	_PCON
                                    1- 1007     	.line	528, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0015 02rr                      1- 1008     	CLRR	_INTF
                                    1- 1009     	.line	529, "main.c"; 	CLRWDT();
     0016 0002                      1- 1010     	clrwdt
                                    1- 1011     	.line	530, "main.c"; 	ENI();
     0017 0004                      1- 1012     	ENI
                                    1- 1013     	.line	531, "main.c"; 	SLEEP();
     0018 0001                      1- 1014     	sleep
                                    1- 1015     	.line	532, "main.c"; 	AWUCON = 0x00;
     0019 02rr                      1- 1016     	CLRR	_AWUCON
                                    1- 1017     	.line	533, "main.c"; 	BWUCON = 0x00;
     001A 02rr                      1- 1018     	CLRR	_BWUCON
                                    1- 1019     	.line	534, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     001B 2101                      1- 1020     	MOVIA	0x01
     001C 00rr                      1- 1021     	MOVAR	_INTE
                                    1- 1022     	.line	535, "main.c"; 	INTF = 0;
     001D 02rr                      1- 1023     	CLRR	_INTF
                                    1- 1024     	.line	537, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     001E 21B8                      1- 1025     	MOVIA	0xb8
     001F 00rr                      1- 1026     	MOVAR	_PCON
                                    1- 1027     	.line	539, "main.c"; 	}
                                    1- 1028     	RETURN	
     0020 0010                      3-   26 m1      ret
                                    1- 1029     ; exit point of _gotoSleep
                                    1- 1031     ;***
                                    1- 1032     ;  pBlock Stats: dbName = C
                                    1- 1033     ;***
                                    1- 1034     ;has an exit
                                    1- 1035     ;functions called:
                                    1- 1036     ;   _delay
                                    1- 1037     ;   _F_wait_eoc
                                    1- 1038     ;   _delay
                                    1- 1039     ;   _F_wait_eoc
                                    1- 1040     ;7 compiler assigned registers:
                                    1- 1041     ;   r0x1021
                                    1- 1042     ;   STK00
                                    1- 1043     ;   r0x1022
                                    1- 1044     ;   r0x1023
                                    1- 1045     ;   r0x1024
                                    1- 1046     ;   r0x1025
                                    1- 1047     ;   r0x1026
                                    1- 1048     ;; Starting pCode block
                                    1- 1049     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1051     ;local variable name mapping:
     0000                           1- 1054     _F_AIN4_Convert:
                                    1- 1055     ; 2 exit points
                                    1- 1056     	.line	498, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1057     	BANKSEL	r0x1021
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1058     	MOVAR	r0x1021
                                    1- 1059     	.line	500, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1060     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1061     	CLRR	_R_AIN4_DATA_LB
                                    1- 1062     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1063     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1064     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1065     	.line	502, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1066     	MOVIA	0x94
     0008 00rr                      1- 1067     	MOVAR	_ADMD
                                    1- 1068     	.line	503, "main.c"; 	delay(200);	
     0009 21C8                      1- 1069     	MOVIA	0xc8
     000A 00rr                      1- 1070     	MOVAR	STK00
     000B 2100                      1- 1071     	MOVIA	0x00
     000C 2rrr                      1- 1072     	LCALL	_delay
                                    1- 1073     	.line	504, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1074     	MOVIA	0x01
                                    1- 1075     	BANKSEL	r0x1022
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1076     	MOVAR	r0x1022
     0010                           1- 1077     _00535_DS_:
                                    1- 1078     	BANKSEL	r0x1022
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1079     	MOVR	r0x1022,W
                                    1- 1080     	BANKSEL	r0x1021
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1081     	SUBAR	r0x1021,W
     0014 0803                      1- 1082     	BTRSS	STATUS,0
     0015 3rrr                      1- 1083     	LGOTO	_00537_DS_
                                    1- 1084     	.line	506, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1085     	BSR	_ADMDbits,6
                                    1- 1086     	.line	507, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1087     	LCALL	_F_wait_eoc
                                    1- 1088     	.line	508, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1089     	MOVIA	0x0f
     0019 10rr                      1- 1090     	ANDAR	_ADR,W
                                    1- 1091     ;;3	MOVAR	r0x1023
                                    1- 1092     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1093     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1094     	.line	509, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1- 1095     	MOVR	_ADD,W
                                    1- 1096     	BANKSEL	r0x1023
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1097     	MOVAR	r0x1023
                                    1- 1098     ;;1	CLRR	r0x1024
                                    1- 1099     ;;109	MOVR	r0x1023,W
                                    1- 1100     ;;107	MOVAR	r0x1025
     001F 2100                      1- 1101     	MOVIA	0x00
                                    1- 1102     	BANKSEL	r0x1026
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1103     	MOVAR	r0x1026
                                    1- 1104     ;;108	MOVR	r0x1025,W
                                    1- 1105     	BANKSEL	r0x1023
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1106     	MOVR	r0x1023,W
                                    1- 1107     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1108     	ADDAR	_R_AIN4_DATA,F
                                    1- 1109     	BANKSEL	r0x1026
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1110     	MOVR	r0x1026,W
     0028 0C03                      1- 1111     	BTRSC	STATUS,0
     0029 05rr                      1- 1112     	INCR	r0x1026,W
     002A 0D03                      1- 1113     	BTRSC	STATUS,2
     002B 3rrr                      1- 1114     	LGOTO	_00002_DS_
                                    1- 1115     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1116     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1- 1117     _00002_DS_:
                                    1- 1118     	.line	504, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1119     	BANKSEL	r0x1022
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1120     	INCR	r0x1022,F
     0030 3rrr                      1- 1121     	LGOTO	_00535_DS_
     0031                           1- 1122     _00537_DS_:
                                    1- 1123     	.line	511, "main.c"; 	}
                                    1- 1124     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1125     ; exit point of _F_AIN4_Convert
                                    1- 1127     ;***
                                    1- 1128     ;  pBlock Stats: dbName = C
                                    1- 1129     ;***
                                    1- 1130     ;has an exit
                                    1- 1131     ;functions called:
                                    1- 1132     ;   _delay
                                    1- 1133     ;   _F_wait_eoc
                                    1- 1134     ;   _delay
                                    1- 1135     ;   _F_wait_eoc
                                    1- 1136     ;7 compiler assigned registers:
                                    1- 1137     ;   r0x1027
                                    1- 1138     ;   STK00
                                    1- 1139     ;   r0x1028
                                    1- 1140     ;   r0x1029
                                    1- 1141     ;   r0x102A
                                    1- 1142     ;   r0x102B
                                    1- 1143     ;   r0x102C
                                    1- 1144     ;; Starting pCode block
                                    1- 1145     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1147     ;local variable name mapping:
     0000                           1- 1150     _F_AIN2_Convert:
                                    1- 1151     ; 2 exit points
                                    1- 1152     	.line	482, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1153     	BANKSEL	r0x1027
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1154     	MOVAR	r0x1027
                                    1- 1155     	.line	484, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1156     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1157     	CLRR	_R_AIN2_DATA_LB
                                    1- 1158     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1159     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1160     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1161     	.line	486, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1162     	MOVIA	0x92
     0008 00rr                      1- 1163     	MOVAR	_ADMD
                                    1- 1164     	.line	487, "main.c"; 	delay(200);	
     0009 21C8                      1- 1165     	MOVIA	0xc8
     000A 00rr                      1- 1166     	MOVAR	STK00
     000B 2100                      1- 1167     	MOVIA	0x00
     000C 2rrr                      1- 1168     	LCALL	_delay
                                    1- 1169     	.line	488, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1170     	MOVIA	0x01
                                    1- 1171     	BANKSEL	r0x1028
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1172     	MOVAR	r0x1028
     0010                           1- 1173     _00526_DS_:
                                    1- 1174     	BANKSEL	r0x1028
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1175     	MOVR	r0x1028,W
                                    1- 1176     	BANKSEL	r0x1027
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1177     	SUBAR	r0x1027,W
     0014 0803                      1- 1178     	BTRSS	STATUS,0
     0015 3rrr                      1- 1179     	LGOTO	_00528_DS_
                                    1- 1180     	.line	490, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1181     	BSR	_ADMDbits,6
                                    1- 1182     	.line	491, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1183     	LCALL	_F_wait_eoc
                                    1- 1184     	.line	492, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1185     	MOVIA	0x0f
     0019 10rr                      1- 1186     	ANDAR	_ADR,W
                                    1- 1187     ;;3	MOVAR	r0x1029
                                    1- 1188     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1189     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1190     	.line	493, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1191     	MOVR	_ADD,W
                                    1- 1192     	BANKSEL	r0x1029
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1193     	MOVAR	r0x1029
                                    1- 1194     ;;1	CLRR	r0x102A
                                    1- 1195     ;;106	MOVR	r0x1029,W
                                    1- 1196     ;;104	MOVAR	r0x102B
     001F 2100                      1- 1197     	MOVIA	0x00
                                    1- 1198     	BANKSEL	r0x102C
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1199     	MOVAR	r0x102C
                                    1- 1200     ;;105	MOVR	r0x102B,W
                                    1- 1201     	BANKSEL	r0x1029
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1202     	MOVR	r0x1029,W
                                    1- 1203     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1204     	ADDAR	_R_AIN2_DATA,F
                                    1- 1205     	BANKSEL	r0x102C
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1206     	MOVR	r0x102C,W
     0028 0C03                      1- 1207     	BTRSC	STATUS,0
     0029 05rr                      1- 1208     	INCR	r0x102C,W
     002A 0D03                      1- 1209     	BTRSC	STATUS,2
     002B 3rrr                      1- 1210     	LGOTO	_00003_DS_
                                    1- 1211     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1212     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1213     _00003_DS_:
                                    1- 1214     	.line	488, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1215     	BANKSEL	r0x1028
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1216     	INCR	r0x1028,F
     0030 3rrr                      1- 1217     	LGOTO	_00526_DS_
     0031                           1- 1218     _00528_DS_:
                                    1- 1219     	.line	495, "main.c"; 	}
                                    1- 1220     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1221     ; exit point of _F_AIN2_Convert
                                    1- 1223     ;***
                                    1- 1224     ;  pBlock Stats: dbName = C
                                    1- 1225     ;***
                                    1- 1226     ;has an exit
                                    1- 1227     ;functions called:
                                    1- 1228     ;   _delay
                                    1- 1229     ;   _F_wait_eoc
                                    1- 1230     ;   _delay
                                    1- 1231     ;   _F_wait_eoc
                                    1- 1232     ;7 compiler assigned registers:
                                    1- 1233     ;   r0x102D
                                    1- 1234     ;   STK00
                                    1- 1235     ;   r0x102E
                                    1- 1236     ;   r0x102F
                                    1- 1237     ;   r0x1030
                                    1- 1238     ;   r0x1031
                                    1- 1239     ;   r0x1032
                                    1- 1240     ;; Starting pCode block
                                    1- 1241     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1- 1243     ;local variable name mapping:
     0000                           1- 1246     _F_AIN1_Convert:
                                    1- 1247     ; 2 exit points
                                    1- 1248     	.line	467, "main.c"; 	void F_AIN1_Convert(char count)
                                    1- 1249     	BANKSEL	r0x102D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1250     	MOVAR	r0x102D
                                    1- 1251     	.line	469, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
                                    1- 1252     	BANKSEL	_R_AIN1_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1253     	CLRR	_R_AIN1_DATA_LB
                                    1- 1254     	BANKSEL	_R_AIN1_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1255     	CLRR	_R_AIN1_DATA
     0006 02rr                      1- 1256     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1257     	.line	471, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0007 2191                      1- 1258     	MOVIA	0x91
     0008 00rr                      1- 1259     	MOVAR	_ADMD
                                    1- 1260     	.line	472, "main.c"; 	delay(200);	
     0009 21C8                      1- 1261     	MOVIA	0xc8
     000A 00rr                      1- 1262     	MOVAR	STK00
     000B 2100                      1- 1263     	MOVIA	0x00
     000C 2rrr                      1- 1264     	LCALL	_delay
                                    1- 1265     	.line	473, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1266     	MOVIA	0x01
                                    1- 1267     	BANKSEL	r0x102E
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1268     	MOVAR	r0x102E
     0010                           1- 1269     _00517_DS_:
                                    1- 1270     	BANKSEL	r0x102E
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1271     	MOVR	r0x102E,W
                                    1- 1272     	BANKSEL	r0x102D
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1273     	SUBAR	r0x102D,W
     0014 0803                      1- 1274     	BTRSS	STATUS,0
     0015 3rrr                      1- 1275     	LGOTO	_00519_DS_
                                    1- 1276     	.line	475, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1277     	BSR	_ADMDbits,6
                                    1- 1278     	.line	476, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1279     	LCALL	_F_wait_eoc
                                    1- 1280     	.line	477, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1281     	MOVIA	0x0f
     0019 10rr                      1- 1282     	ANDAR	_ADR,W
                                    1- 1283     ;;3	MOVAR	r0x102F
                                    1- 1284     	BANKSEL	_R_AIN1_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1285     	ADDAR	_R_AIN1_DATA_LB,F
                                    1- 1286     	.line	478, "main.c"; 	R_AIN1_DATA    += ADD; 
     001C 01rr                      1- 1287     	MOVR	_ADD,W
                                    1- 1288     	BANKSEL	r0x102F
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1289     	MOVAR	r0x102F
                                    1- 1290     ;;1	CLRR	r0x1030
                                    1- 1291     ;;103	MOVR	r0x102F,W
                                    1- 1292     ;;101	MOVAR	r0x1031
     001F 2100                      1- 1293     	MOVIA	0x00
                                    1- 1294     	BANKSEL	r0x1032
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1295     	MOVAR	r0x1032
                                    1- 1296     ;;102	MOVR	r0x1031,W
                                    1- 1297     	BANKSEL	r0x102F
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1298     	MOVR	r0x102F,W
                                    1- 1299     	BANKSEL	_R_AIN1_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1300     	ADDAR	_R_AIN1_DATA,F
                                    1- 1301     	BANKSEL	r0x1032
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1302     	MOVR	r0x1032,W
     0028 0C03                      1- 1303     	BTRSC	STATUS,0
     0029 05rr                      1- 1304     	INCR	r0x1032,W
     002A 0D03                      1- 1305     	BTRSC	STATUS,2
     002B 3rrr                      1- 1306     	LGOTO	_00004_DS_
                                    1- 1307     	BANKSEL	_R_AIN1_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1308     	ADDAR	(_R_AIN1_DATA + 1),F
     002E                           1- 1309     _00004_DS_:
                                    1- 1310     	.line	473, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1311     	BANKSEL	r0x102E
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1312     	INCR	r0x102E,F
     0030 3rrr                      1- 1313     	LGOTO	_00517_DS_
     0031                           1- 1314     _00519_DS_:
                                    1- 1315     	.line	480, "main.c"; 	}
                                    1- 1316     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1317     ; exit point of _F_AIN1_Convert
                                    1- 1319     ;***
                                    1- 1320     ;  pBlock Stats: dbName = C
                                    1- 1321     ;***
                                    1- 1322     ;has an exit
                                    1- 1323     ;functions called:
                                    1- 1324     ;   _F_AIN2_Convert
                                    1- 1325     ;   _F_AIN2_Convert
                                    1- 1326     ;4 compiler assigned registers:
                                    1- 1327     ;   r0x1033
                                    1- 1328     ;   r0x1034
                                    1- 1329     ;   r0x1035
                                    1- 1330     ;   r0x1036
                                    1- 1331     ;; Starting pCode block
                                    1- 1332     .segment "code"; module=main, function=_checkBat
     0000                           1- 1334     _checkBat:
                                    1- 1335     ; 2 exit points
                                    1- 1336     	.line	395, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1337     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1338     	CLRR	_R_AIN2_DATA_LB
                                    1- 1339     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1340     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1341     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1342     	.line	396, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1343     	MOVIA	0x08
     0006 2rrr                      1- 1344     	LCALL	_F_AIN2_Convert
                                    1- 1345     	.line	397, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1346     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1347     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1348     	ANDIA	0xf0
     000A 00rr                      1- 1349     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1350     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1351     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1352     	ANDIA	0x0f
     000E 11rr                      1- 1353     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1354     	XORAR	_R_AIN2_DATA,F
                                    1- 1355     	.line	398, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1356     	MOVIA	0xf0
                                    1- 1357     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1358     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1359     	.line	399, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1360     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1361     	BANKSEL	r0x1035
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1362     	MOVAR	r0x1035
                                    1- 1363     ;;1	MOVAR	r0x1033
                                    1- 1364     ;;1	CLRR	r0x1034
                                    1- 1365     ;;100	MOVR	r0x1033,W
     0016 2100                      1- 1366     	MOVIA	0x00
                                    1- 1367     	BANKSEL	r0x1036
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1368     	MOVAR	r0x1036
                                    1- 1369     	BANKSEL	r0x1035
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1370     	MOVR	r0x1035,W
                                    1- 1371     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1372     	ADDAR	_R_AIN2_DATA,F
                                    1- 1373     	BANKSEL	r0x1036
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1374     	MOVR	r0x1036,W
     001F 0C03                      1- 1375     	BTRSC	STATUS,0
     0020 05rr                      1- 1376     	INCR	r0x1036,W
     0021 0D03                      1- 1377     	BTRSC	STATUS,2
     0022 3rrr                      1- 1378     	LGOTO	_00005_DS_
                                    1- 1379     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1380     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1381     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1382     _00005_DS_:
                                    1- 1383     	.line	400, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1384     	BCR	STATUS,0
                                    1- 1385     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1386     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1387     	RRR	_R_AIN2_DATA,F
                                    1- 1388     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1389     	BCR	STATUS,0
     002A 13rr                      1- 1390     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1391     	RRR	_R_AIN2_DATA,F
                                    1- 1392     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1393     	BCR	STATUS,0
     002D 13rr                      1- 1394     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1395     	RRR	_R_AIN2_DATA,F
                                    1- 1396     	.line	401, "main.c"; 	if(debug)
                                    1- 1397     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1398     	MOVR	_debug,W
     0031 0D03                      1- 1399     	BTRSC	STATUS,2
     0032 3rrr                      1- 1400     	LGOTO	_00432_DS_
                                    1- 1401     	.line	403, "main.c"; 	R_AIN2_DATA = BAT;
     0033 21B8                      1- 1402     	MOVIA	0xb8
                                    1- 1403     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1404     	MOVAR	_R_AIN2_DATA
     0036 210B                      1- 1405     	MOVIA	0x0b
     0037 00rr                      1- 1406     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1407     ;;unsigned compare: left < lit (0x922=2338), size=2
     0038                           1- 1408     _00432_DS_:
                                    1- 1409     	.line	406, "main.c"; 	if(R_AIN2_DATA < 2338)
     0038 2109                      1- 1410     	MOVIA	0x09
                                    1- 1411     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1412     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1413     	BTRSS	STATUS,2
     003C 3rrr                      1- 1414     	LGOTO	_00504_DS_
     003D 2122                      1- 1415     	MOVIA	0x22
     003E 04rr                      1- 1416     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1417     _00504_DS_:
     003F 0C03                      1- 1418     	BTRSC	STATUS,0
     0040 3rrr                      1- 1419     	LGOTO	_00461_DS_
                                    1- 1420     	.line	408, "main.c"; 	if(batStatus == 1)
                                    1- 1421     	BANKSEL	_batStatus
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 1422     	MOVR	_batStatus,W
     0043 2401                      1- 1423     	XORIA	0x01
     0044 0903                      1- 1424     	BTRSS	STATUS,2
     0045 3rrr                      1- 1425     	LGOTO	_00436_DS_
                                    1- 1426     ;;unsigned compare: left < lit (0x91A=2330), size=2
                                    1- 1427     	.line	410, "main.c"; 	if(R_AIN2_DATA < 2330)
     0046 2109                      1- 1428     	MOVIA	0x09
                                    1- 1429     	BANKSEL	_R_AIN2_DATA
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 04rr                      1- 1430     	SUBAR	(_R_AIN2_DATA + 1),W
     0049 0903                      1- 1431     	BTRSS	STATUS,2
     004A 3rrr                      1- 1432     	LGOTO	_00505_DS_
     004B 211A                      1- 1433     	MOVIA	0x1a
     004C 04rr                      1- 1434     	SUBAR	_R_AIN2_DATA,W
     004D                           1- 1435     _00505_DS_:
     004D 0C03                      1- 1436     	BTRSC	STATUS,0
     004E 3rrr                      1- 1437     	LGOTO	_00463_DS_
                                    1- 1438     	.line	411, "main.c"; 	batStatus = 3;//缺电状态
     004F 2103                      1- 1439     	MOVIA	0x03
                                    1- 1440     	BANKSEL	_batStatus
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1- 1441     	MOVAR	_batStatus
     0052 3rrr                      1- 1442     	LGOTO	_00463_DS_
     0053                           1- 1443     _00436_DS_:
                                    1- 1444     	.line	414, "main.c"; 	batStatus = 3;
     0053 2103                      1- 1445     	MOVIA	0x03
                                    1- 1446     	BANKSEL	_batStatus
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 00rr                      1- 1447     	MOVAR	_batStatus
     0056 3rrr                      1- 1448     	LGOTO	_00463_DS_
                                    1- 1449     ;;unsigned compare: left < lit (0xA2F=2607), size=2
     0057                           1- 1450     _00461_DS_:
                                    1- 1451     	.line	416, "main.c"; 	else if(R_AIN2_DATA < 2607)
     0057 210A                      1- 1452     	MOVIA	0x0a
                                    1- 1453     	BANKSEL	_R_AIN2_DATA
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 04rr                      1- 1454     	SUBAR	(_R_AIN2_DATA + 1),W
     005A 0903                      1- 1455     	BTRSS	STATUS,2
     005B 3rrr                      1- 1456     	LGOTO	_00506_DS_
     005C 212F                      1- 1457     	MOVIA	0x2f
     005D 04rr                      1- 1458     	SUBAR	_R_AIN2_DATA,W
     005E                           1- 1459     _00506_DS_:
     005E 0C03                      1- 1460     	BTRSC	STATUS,0
     005F 3rrr                      1- 1461     	LGOTO	_00458_DS_
                                    1- 1462     	.line	418, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1463     	BANKSEL	_firstLow
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 02rr                      1- 1464     	CLRR	_firstLow
                                    1- 1465     	.line	419, "main.c"; 	if(shandeng == 0)
                                    1- 1466     	BANKSEL	_shandeng
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 01rr                      1- 1467     	MOVR	_shandeng,W
     0064 0903                      1- 1468     	BTRSS	STATUS,2
     0065 3rrr                      1- 1469     	LGOTO	_00463_DS_
                                    1- 1470     	.line	421, "main.c"; 	batStatus = 1;//低电状态
     0066 2101                      1- 1471     	MOVIA	0x01
                                    1- 1472     	BANKSEL	_batStatus
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1- 1473     	MOVAR	_batStatus
                                    1- 1474     	.line	422, "main.c"; 	batLowTime = 0;
                                    1- 1475     	BANKSEL	_batLowTime
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 02rr                      1- 1476     	CLRR	_batLowTime
     006B 3rrr                      1- 1477     	LGOTO	_00463_DS_
                                    1- 1478     ;;unsigned compare: left < lit (0xC08=3080), size=2
     006C                           1- 1479     _00458_DS_:
                                    1- 1480     	.line	426, "main.c"; 	else if(R_AIN2_DATA < 3080)		//16.55
     006C 210C                      1- 1481     	MOVIA	0x0c
                                    1- 1482     	BANKSEL	_R_AIN2_DATA
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 04rr                      1- 1483     	SUBAR	(_R_AIN2_DATA + 1),W
     006F 0903                      1- 1484     	BTRSS	STATUS,2
     0070 3rrr                      1- 1485     	LGOTO	_00507_DS_
     0071 2108                      1- 1486     	MOVIA	0x08
     0072 04rr                      1- 1487     	SUBAR	_R_AIN2_DATA,W
     0073                           1- 1488     _00507_DS_:
     0073 0C03                      1- 1489     	BTRSC	STATUS,0
     0074 3rrr                      1- 1490     	LGOTO	_00455_DS_
                                    1- 1491     	.line	428, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1492     	BANKSEL	_firstLow
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 02rr                      1- 1493     	CLRR	_firstLow
                                    1- 1494     	.line	429, "main.c"; 	if(batStatus == 2)
                                    1- 1495     	BANKSEL	_batStatus
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 01rr                      1- 1496     	MOVR	_batStatus,W
     0079 2402                      1- 1497     	XORIA	0x02
     007A 0903                      1- 1498     	BTRSS	STATUS,2
     007B 3rrr                      1- 1499     	LGOTO	_00450_DS_
                                    1- 1500     ;;unsigned compare: left < lit (0xBFE=3070), size=2
                                    1- 1501     	.line	431, "main.c"; 	if(R_AIN2_DATA < 3070)
     007C 210B                      1- 1502     	MOVIA	0x0b
                                    1- 1503     	BANKSEL	_R_AIN2_DATA
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 04rr                      1- 1504     	SUBAR	(_R_AIN2_DATA + 1),W
     007F 0903                      1- 1505     	BTRSS	STATUS,2
     0080 3rrr                      1- 1506     	LGOTO	_00508_DS_
     0081 21FE                      1- 1507     	MOVIA	0xfe
     0082 04rr                      1- 1508     	SUBAR	_R_AIN2_DATA,W
     0083                           1- 1509     _00508_DS_:
     0083 0C03                      1- 1510     	BTRSC	STATUS,0
     0084 3rrr                      1- 1511     	LGOTO	_00463_DS_
                                    1- 1512     	.line	433, "main.c"; 	batStatus = 0;//正常状态
                                    1- 1513     	BANKSEL	_batStatus
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 02rr                      1- 1514     	CLRR	_batStatus
     0087 3rrr                      1- 1515     	LGOTO	_00463_DS_
     0088                           1- 1516     _00450_DS_:
                                    1- 1517     	.line	437, "main.c"; 	else if(batStatus == 1)
                                    1- 1518     	BANKSEL	_batStatus
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 01rr                      1- 1519     	MOVR	_batStatus,W
     008A 2401                      1- 1520     	XORIA	0x01
     008B 0903                      1- 1521     	BTRSS	STATUS,2
     008C 3rrr                      1- 1522     	LGOTO	_00447_DS_
                                    1- 1523     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1524     ;;unsigned compare: left >= lit (0xA47=2631), size=2
                                    1- 1525     	.line	439, "main.c"; 	if(R_AIN2_DATA > 2630)
     008D 210A                      1- 1526     	MOVIA	0x0a
                                    1- 1527     	BANKSEL	_R_AIN2_DATA
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 04rr                      1- 1528     	SUBAR	(_R_AIN2_DATA + 1),W
     0090 0903                      1- 1529     	BTRSS	STATUS,2
     0091 3rrr                      1- 1530     	LGOTO	_00509_DS_
     0092 2147                      1- 1531     	MOVIA	0x47
     0093 04rr                      1- 1532     	SUBAR	_R_AIN2_DATA,W
     0094                           1- 1533     _00509_DS_:
     0094 0803                      1- 1534     	BTRSS	STATUS,0
     0095 3rrr                      1- 1535     	LGOTO	_00463_DS_
                                    1- 1536     	.line	441, "main.c"; 	batStatus = 0;//正常状态
                                    1- 1537     	BANKSEL	_batStatus
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 02rr                      1- 1538     	CLRR	_batStatus
     0098 3rrr                      1- 1539     	LGOTO	_00463_DS_
     0099                           1- 1540     _00447_DS_:
                                    1- 1541     	.line	445, "main.c"; 	else if(batStatus > 0)
                                    1- 1542     	BANKSEL	_batStatus
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 01rr                      1- 1543     	MOVR	_batStatus,W
     009B 0D03                      1- 1544     	BTRSC	STATUS,2
     009C 3rrr                      1- 1545     	LGOTO	_00463_DS_
                                    1- 1546     	.line	447, "main.c"; 	batStatus = 0;//正常状态
     009D 02rr                      1- 1547     	CLRR	_batStatus
     009E 3rrr                      1- 1548     	LGOTO	_00463_DS_
     009F                           1- 1549     _00455_DS_:
                                    1- 1550     	.line	454, "main.c"; 	batLowTime = 0;
                                    1- 1551     	BANKSEL	_batLowTime
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 02rr                      1- 1552     	CLRR	_batLowTime
                                    1- 1553     	.line	455, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1554     	BANKSEL	_firstLow
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 02rr                      1- 1555     	CLRR	_firstLow
                                    1- 1556     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1557     ;;unsigned compare: left >= lit (0xC13=3091), size=2
                                    1- 1558     	.line	456, "main.c"; 	if(R_AIN2_DATA > 3090)
     00A3 210C                      1- 1559     	MOVIA	0x0c
                                    1- 1560     	BANKSEL	_R_AIN2_DATA
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 04rr                      1- 1561     	SUBAR	(_R_AIN2_DATA + 1),W
     00A6 0903                      1- 1562     	BTRSS	STATUS,2
     00A7 3rrr                      1- 1563     	LGOTO	_00510_DS_
     00A8 2113                      1- 1564     	MOVIA	0x13
     00A9 04rr                      1- 1565     	SUBAR	_R_AIN2_DATA,W
     00AA                           1- 1566     _00510_DS_:
     00AA 0803                      1- 1567     	BTRSS	STATUS,0
     00AB 3rrr                      1- 1568     	LGOTO	_00463_DS_
                                    1- 1569     	.line	458, "main.c"; 	batStatus = 2;//满电状态
     00AC 2102                      1- 1570     	MOVIA	0x02
                                    1- 1571     	BANKSEL	_batStatus
     00AD rrrr                      3-   71 m1      .banksel ram_address
     00AE 00rr                      1- 1572     	MOVAR	_batStatus
     00AF                           1- 1573     _00463_DS_:
                                    1- 1574     	.line	463, "main.c"; 	}
                                    1- 1575     	RETURN	
     00AF 0010                      3-   26 m1      ret
                                    1- 1576     ; exit point of _checkBat
                                    1- 1578     ;***
                                    1- 1579     ;  pBlock Stats: dbName = C
                                    1- 1580     ;***
                                    1- 1581     ;has an exit
                                    1- 1582     ;functions called:
                                    1- 1583     ;   _F_AIN1_Convert
                                    1- 1584     ;   _F_AIN1_Convert
                                    1- 1585     ;4 compiler assigned registers:
                                    1- 1586     ;   r0x1037
                                    1- 1587     ;   r0x1038
                                    1- 1588     ;   r0x1039
                                    1- 1589     ;   r0x103A
                                    1- 1590     ;; Starting pCode block
                                    1- 1591     .segment "code"; module=main, function=_checkInV
     0000                           1- 1593     _checkInV:
                                    1- 1594     ; 2 exit points
                                    1- 1595     	.line	364, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA_LB = 0x00;
                                    1- 1596     	BANKSEL	_R_AIN1_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1597     	CLRR	_R_AIN1_DATA_LB
                                    1- 1598     	BANKSEL	_R_AIN1_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1599     	CLRR	_R_AIN1_DATA
     0004 02rr                      1- 1600     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1601     	.line	365, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1602     	MOVIA	0x08
     0006 2rrr                      1- 1603     	LCALL	_F_AIN1_Convert
                                    1- 1604     	.line	366, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1605     	BANKSEL	_R_AIN1_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1606     	SWAPR	(_R_AIN1_DATA + 1),W
     0009 22F0                      1- 1607     	ANDIA	0xf0
     000A 00rr                      1- 1608     	MOVAR	(_R_AIN1_DATA + 1)
     000B 15rr                      1- 1609     	SWAPR	_R_AIN1_DATA,W
     000C 00rr                      1- 1610     	MOVAR	_R_AIN1_DATA
     000D 220F                      1- 1611     	ANDIA	0x0f
     000E 11rr                      1- 1612     	IORAR	(_R_AIN1_DATA + 1),F
     000F 12rr                      1- 1613     	XORAR	_R_AIN1_DATA,F
                                    1- 1614     	.line	367, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1615     	MOVIA	0xf0
                                    1- 1616     	BANKSEL	_R_AIN1_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1617     	ANDAR	_R_AIN1_DATA_LB,F
                                    1- 1618     	.line	368, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1619     	MOVR	_R_AIN1_DATA_LB,W
                                    1- 1620     	BANKSEL	r0x1039
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1621     	MOVAR	r0x1039
                                    1- 1622     ;;1	MOVAR	r0x1037
                                    1- 1623     ;;1	CLRR	r0x1038
                                    1- 1624     ;;99	MOVR	r0x1037,W
     0016 2100                      1- 1625     	MOVIA	0x00
                                    1- 1626     	BANKSEL	r0x103A
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1627     	MOVAR	r0x103A
                                    1- 1628     	BANKSEL	r0x1039
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1629     	MOVR	r0x1039,W
                                    1- 1630     	BANKSEL	_R_AIN1_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1631     	ADDAR	_R_AIN1_DATA,F
                                    1- 1632     	BANKSEL	r0x103A
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1633     	MOVR	r0x103A,W
     001F 0C03                      1- 1634     	BTRSC	STATUS,0
     0020 05rr                      1- 1635     	INCR	r0x103A,W
     0021 0D03                      1- 1636     	BTRSC	STATUS,2
     0022 3rrr                      1- 1637     	LGOTO	_00006_DS_
                                    1- 1638     	BANKSEL	_R_AIN1_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1639     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1- 1640     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1641     _00006_DS_:
                                    1- 1642     	.line	369, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1643     	BCR	STATUS,0
                                    1- 1644     	BANKSEL	_R_AIN1_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1645     	RRR	(_R_AIN1_DATA + 1),F
     0028 13rr                      1- 1646     	RRR	_R_AIN1_DATA,F
                                    1- 1647     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1648     	BCR	STATUS,0
     002A 13rr                      1- 1649     	RRR	(_R_AIN1_DATA + 1),F
     002B 13rr                      1- 1650     	RRR	_R_AIN1_DATA,F
                                    1- 1651     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1652     	BCR	STATUS,0
     002D 13rr                      1- 1653     	RRR	(_R_AIN1_DATA + 1),F
     002E 13rr                      1- 1654     	RRR	_R_AIN1_DATA,F
                                    1- 1655     	.line	370, "main.c"; 	if(debug)
                                    1- 1656     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1657     	MOVR	_debug,W
     0031 0D03                      1- 1658     	BTRSC	STATUS,2
     0032 3rrr                      1- 1659     	LGOTO	_00403_DS_
                                    1- 1660     	.line	372, "main.c"; 	R_AIN1_DATA = INV;
     0033 218B                      1- 1661     	MOVIA	0x8b
                                    1- 1662     	BANKSEL	_R_AIN1_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1663     	MOVAR	_R_AIN1_DATA
     0036 210C                      1- 1664     	MOVIA	0x0c
     0037 00rr                      1- 1665     	MOVAR	(_R_AIN1_DATA + 1)
                                    1- 1666     ;;unsigned compare: left < lit (0xC8A=3210), size=2
     0038                           1- 1667     _00403_DS_:
                                    1- 1668     	.line	374, "main.c"; 	if(R_AIN1_DATA < 3210)
     0038 210C                      1- 1669     	MOVIA	0x0c
                                    1- 1670     	BANKSEL	_R_AIN1_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1671     	SUBAR	(_R_AIN1_DATA + 1),W
     003B 0903                      1- 1672     	BTRSS	STATUS,2
     003C 3rrr                      1- 1673     	LGOTO	_00425_DS_
     003D 218A                      1- 1674     	MOVIA	0x8a
     003E 04rr                      1- 1675     	SUBAR	_R_AIN1_DATA,W
     003F                           1- 1676     _00425_DS_:
     003F 0C03                      1- 1677     	BTRSC	STATUS,0
     0040 3rrr                      1- 1678     	LGOTO	_00407_DS_
                                    1- 1679     	.line	376, "main.c"; 	inLowTime++;
                                    1- 1680     	BANKSEL	_inLowTime
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 05rr                      1- 1681     	INCR	_inLowTime,F
     0043 3rrr                      1- 1682     	LGOTO	_00408_DS_
     0044                           1- 1683     _00407_DS_:
                                    1- 1684     	.line	380, "main.c"; 	inLowTime = 0;
                                    1- 1685     	BANKSEL	_inLowTime
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 02rr                      1- 1686     	CLRR	_inLowTime
                                    1- 1687     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1688     ;;unsigned compare: left >= lit (0xC95=3221), size=2
                                    1- 1689     	.line	381, "main.c"; 	if(R_AIN1_DATA > 3220)
     0046 210C                      1- 1690     	MOVIA	0x0c
                                    1- 1691     	BANKSEL	_R_AIN1_DATA
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 04rr                      1- 1692     	SUBAR	(_R_AIN1_DATA + 1),W
     0049 0903                      1- 1693     	BTRSS	STATUS,2
     004A 3rrr                      1- 1694     	LGOTO	_00426_DS_
     004B 2195                      1- 1695     	MOVIA	0x95
     004C 04rr                      1- 1696     	SUBAR	_R_AIN1_DATA,W
     004D                           1- 1697     _00426_DS_:
     004D 0803                      1- 1698     	BTRSS	STATUS,0
     004E 3rrr                      1- 1699     	LGOTO	_00408_DS_
                                    1- 1700     	.line	382, "main.c"; 	chrgStatus = 1;
     004F 2101                      1- 1701     	MOVIA	0x01
                                    1- 1702     	BANKSEL	_chrgStatus
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1- 1703     	MOVAR	_chrgStatus
                                    1- 1704     ;;unsigned compare: left < lit (0x64=100), size=1
     0052                           1- 1705     _00408_DS_:
                                    1- 1706     	.line	385, "main.c"; 	if(inLowTime >= 100)
     0052 2164                      1- 1707     	MOVIA	0x64
                                    1- 1708     	BANKSEL	_inLowTime
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 04rr                      1- 1709     	SUBAR	_inLowTime,W
     0055 0803                      1- 1710     	BTRSS	STATUS,0
     0056 3rrr                      1- 1711     	LGOTO	_00411_DS_
                                    1- 1712     	.line	387, "main.c"; 	inLowTime = 100;
     0057 2164                      1- 1713     	MOVIA	0x64
     0058 00rr                      1- 1714     	MOVAR	_inLowTime
                                    1- 1715     	.line	388, "main.c"; 	chrgStatus = 2;
     0059 2102                      1- 1716     	MOVIA	0x02
                                    1- 1717     	BANKSEL	_chrgStatus
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1- 1718     	MOVAR	_chrgStatus
     005C                           1- 1719     _00411_DS_:
                                    1- 1720     	.line	391, "main.c"; 	}
                                    1- 1721     	RETURN	
     005C 0010                      3-   26 m1      ret
                                    1- 1722     ; exit point of _checkInV
                                    1- 1724     ;***
                                    1- 1725     ;  pBlock Stats: dbName = C
                                    1- 1726     ;***
                                    1- 1727     ;has an exit
                                    1- 1728     ;functions called:
                                    1- 1729     ;   _delay
                                    1- 1730     ;   _delay
                                    1- 1731     ;1 compiler assigned register :
                                    1- 1732     ;   STK00
                                    1- 1733     ;; Starting pCode block
                                    1- 1734     .segment "code"; module=main, function=_initAD
     0000                           1- 1736     _initAD:
                                    1- 1737     ; 2 exit points
                                    1- 1738     	.line	339, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_Quarter_VDD ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 218B                      1- 1739     	MOVIA	0x8b
     0001 00rr                      1- 1740     	MOVAR	_ADMD
                                    1- 1741     	.line	344, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1742     	CLRR	_ADVREFH
                                    1- 1743     	.line	349, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1744     	MOVIA	0x10
     0004 00rr                      1- 1745     	MOVAR	_ADR
                                    1- 1746     	.line	351, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1747     	MOVIA	0x03
     0006 00rr                      1- 1748     	MOVAR	_ADCR
                                    1- 1749     	.line	354, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1750     	BSR	_ADMDbits,4
                                    1- 1751     	.line	355, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1752     	MOVIA	0x64
     0009 00rr                      1- 1753     	MOVAR	STK00
     000A 2100                      1- 1754     	MOVIA	0x00
     000B 2rrr                      1- 1755     	LCALL	_delay
                                    1- 1756     	.line	358, "main.c"; 	}
                                    1- 1757     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 1758     ; exit point of _initAD
                                    1- 1760     ;***
                                    1- 1761     ;  pBlock Stats: dbName = C
                                    1- 1762     ;***
                                    1- 1763     ;has an exit
                                    1- 1764     ;functions called:
                                    1- 1765     ;   _keyRead
                                    1- 1766     ;   _closeStatus
                                    1- 1767     ;   _gotoSleep
                                    1- 1768     ;   _keyRead
                                    1- 1769     ;   _closeStatus
                                    1- 1770     ;   _gotoSleep
                                    1- 1771     ;1 compiler assigned register :
                                    1- 1772     ;   r0x103B
                                    1- 1773     ;; Starting pCode block
                                    1- 1774     .segment "code"; module=main, function=_keyCtr
                                    1- 1776     ;local variable name mapping:
     0000                           1- 1778     _keyCtr:
                                    1- 1779     ; 2 exit points
                                    1- 1780     	.line	308, "main.c"; 	if(chrgStatus == 1)
                                    1- 1781     	BANKSEL	_chrgStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1782     	MOVR	_chrgStatus,W
     0002 2401                      1- 1783     	XORIA	0x01
     0003 0903                      1- 1784     	BTRSS	STATUS,2
     0004 3rrr                      1- 1785     	LGOTO	_00384_DS_
                                    1- 1786     	.line	311, "main.c"; 	workStatus = 1;
     0005 2101                      1- 1787     	MOVIA	0x01
                                    1- 1788     	BANKSEL	_workStatus
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1789     	MOVAR	_workStatus
     0008                           1- 1790     _00384_DS_:
                                    1- 1791     	.line	315, "main.c"; 	if(chrgStatus == 0 || chrgStatus == 2)
                                    1- 1792     	BANKSEL	_chrgStatus
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1- 1793     	MOVR	_chrgStatus,W
     000A 0D03                      1- 1794     	BTRSC	STATUS,2
     000B 3rrr                      1- 1795     	LGOTO	_00390_DS_
     000C 01rr                      1- 1796     	MOVR	_chrgStatus,W
     000D 2402                      1- 1797     	XORIA	0x02
     000E 0903                      1- 1798     	BTRSS	STATUS,2
     000F 3rrr                      1- 1799     	LGOTO	_00393_DS_
     0010                           1- 1800     _00390_DS_:
                                    1- 1801     	.line	317, "main.c"; 	char kClick = keyRead(0x01 & ~PORTB);
     0010 07rr                      1- 1802     	COMR	_PORTB,W
                                    1- 1803     	BANKSEL	r0x103B
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 1804     	MOVAR	r0x103B
     0013 2101                      1- 1805     	MOVIA	0x01
     0014 10rr                      1- 1806     	ANDAR	r0x103B,F
     0015 01rr                      1- 1807     	MOVR	r0x103B,W
     0016 2rrr                      1- 1808     	LCALL	_keyRead
                                    1- 1809     	BANKSEL	r0x103B
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1810     	MOVAR	r0x103B
                                    1- 1811     	.line	318, "main.c"; 	if(kClick == 2)
     0019 2402                      1- 1812     	XORIA	0x02
     001A 0903                      1- 1813     	BTRSS	STATUS,2
     001B 3rrr                      1- 1814     	LGOTO	_00393_DS_
                                    1- 1815     	.line	320, "main.c"; 	if(workStatus == 0 )
                                    1- 1816     	BANKSEL	_workStatus
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 1817     	MOVR	_workStatus,W
     001E 0903                      1- 1818     	BTRSS	STATUS,2
     001F 3rrr                      1- 1819     	LGOTO	_00386_DS_
                                    1- 1820     	.line	322, "main.c"; 	workStatus = 1;
     0020 2101                      1- 1821     	MOVIA	0x01
     0021 00rr                      1- 1822     	MOVAR	_workStatus
     0022 3rrr                      1- 1823     	LGOTO	_00393_DS_
     0023                           1- 1824     _00386_DS_:
                                    1- 1825     	.line	327, "main.c"; 	workStatus = 0;
                                    1- 1826     	BANKSEL	_workStatus
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 02rr                      1- 1827     	CLRR	_workStatus
                                    1- 1828     	.line	328, "main.c"; 	closeStatus();
     0025 2rrr                      1- 1829     	LCALL	_closeStatus
                                    1- 1830     	.line	329, "main.c"; 	gotoSleep();
     0026 2rrr                      1- 1831     	LCALL	_gotoSleep
     0027                           1- 1832     _00393_DS_:
                                    1- 1833     	.line	333, "main.c"; 	}
                                    1- 1834     	RETURN	
     0027 0010                      3-   26 m1      ret
                                    1- 1835     ; exit point of _keyCtr
                                    1- 1837     ;***
                                    1- 1838     ;  pBlock Stats: dbName = C
                                    1- 1839     ;***
                                    1- 1840     ;has an exit
                                    1- 1841     ;functions called:
                                    1- 1842     ;   _checkBat
                                    1- 1843     ;   _checkBat
                                    1- 1844     ;1 compiler assigned register :
                                    1- 1845     ;   r0x103C
                                    1- 1846     ;; Starting pCode block
                                    1- 1847     .segment "code"; module=main, function=_workCtr
     0000                           1- 1849     _workCtr:
                                    1- 1850     ; 2 exit points
                                    1- 1851     	.line	240, "main.c"; 	checkBat();
     0000 2rrr                      1- 1852     	LCALL	_checkBat
                                    1- 1853     	.line	241, "main.c"; 	if(PORTA & 0x20 )
     0001 0Arr                      1- 1854     	BTRSS	_PORTA,5
     0002 3rrr                      1- 1855     	LGOTO	_00322_DS_
                                    1- 1856     	.line	244, "main.c"; 	if(batStatus == 2 || chrgStatus == 2)
                                    1- 1857     	BANKSEL	_batStatus
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 01rr                      1- 1858     	MOVR	_batStatus,W
     0005 2402                      1- 1859     	XORIA	0x02
     0006 0D03                      1- 1860     	BTRSC	STATUS,2
     0007 3rrr                      1- 1861     	LGOTO	_00302_DS_
                                    1- 1862     	BANKSEL	_chrgStatus
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1- 1863     	MOVR	_chrgStatus,W
     000A 2402                      1- 1864     	XORIA	0x02
     000B 0903                      1- 1865     	BTRSS	STATUS,2
     000C 3rrr                      1- 1866     	LGOTO	_00303_DS_
     000D                           1- 1867     _00302_DS_:
                                    1- 1868     	.line	246, "main.c"; 	LED1OFF();		//充满了，灭灯
     000D 1Drr                      1- 1869     	BCR	_PORTB,3
                                    1- 1870     	.line	247, "main.c"; 	CHRGOFF();
     000E 1Drr                      1- 1871     	BCR	_PORTB,2
     000F 3rrr                      1- 1872     	LGOTO	_00304_DS_
     0010                           1- 1873     _00303_DS_:
                                    1- 1874     	.line	251, "main.c"; 	LED1ON();
     0010 19rr                      1- 1875     	BSR	_PORTB,3
     0011                           1- 1876     _00304_DS_:
                                    1- 1877     	.line	255, "main.c"; 	if(batStatus == 1 && chrgStatus == 2)
                                    1- 1878     	BANKSEL	_batStatus
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 1879     	MOVR	_batStatus,W
     0013 2401                      1- 1880     	XORIA	0x01
     0014 0903                      1- 1881     	BTRSS	STATUS,2
     0015 3rrr                      1- 1882     	LGOTO	_00307_DS_
                                    1- 1883     	BANKSEL	_chrgStatus
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1884     	MOVR	_chrgStatus,W
     0018 2402                      1- 1885     	XORIA	0x02
     0019 0D03                      1- 1886     	BTRSC	STATUS,2
                                    1- 1887     	.line	257, "main.c"; 	LED4ON();
     001A 1Crr                      1- 1888     	BCR	_PORTB,1
     001B                           1- 1889     _00307_DS_:
                                    1- 1890     	.line	260, "main.c"; 	if(chrgStatus == 1)
                                    1- 1891     	BANKSEL	_chrgStatus
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 1892     	MOVR	_chrgStatus,W
     001D 2401                      1- 1893     	XORIA	0x01
     001E 0903                      1- 1894     	BTRSS	STATUS,2
     001F 3rrr                      1- 1895     	LGOTO	_00323_DS_
                                    1- 1896     	.line	262, "main.c"; 	firstLow = 0;
                                    1- 1897     	BANKSEL	_firstLow
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 02rr                      1- 1898     	CLRR	_firstLow
     0022 3rrr                      1- 1899     	LGOTO	_00323_DS_
     0023                           1- 1900     _00322_DS_:
                                    1- 1901     	.line	268, "main.c"; 	LED1OFF();		//未充电,电池供电
     0023 1Drr                      1- 1902     	BCR	_PORTB,3
                                    1- 1903     	.line	269, "main.c"; 	if(workStatus == 1 && batStatus < 3)
                                    1- 1904     	BANKSEL	r0x103C
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1- 1905     	CLRR	r0x103C
                                    1- 1906     	BANKSEL	_workStatus
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1907     	MOVR	_workStatus,W
     0028 2401                      1- 1908     	XORIA	0x01
     0029 0903                      1- 1909     	BTRSS	STATUS,2
     002A 3rrr                      1- 1910     	LGOTO	_00007_DS_
                                    1- 1911     	BANKSEL	r0x103C
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 05rr                      1- 1912     	INCR	r0x103C,F
     002D                           1- 1913     _00007_DS_:
                                    1- 1914     	BANKSEL	r0x103C
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1- 1915     	MOVR	r0x103C,W
     002F 0D03                      1- 1916     	BTRSC	STATUS,2
     0030 3rrr                      1- 1917     	LGOTO	_00312_DS_
                                    1- 1918     ;;unsigned compare: left < lit (0x3=3), size=1
     0031 2103                      1- 1919     	MOVIA	0x03
                                    1- 1920     	BANKSEL	_batStatus
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 04rr                      1- 1921     	SUBAR	_batStatus,W
     0034 0803                      1- 1922     	BTRSS	STATUS,0
                                    1- 1923     	.line	271, "main.c"; 	LED2ON();
     0035 1Brr                      1- 1924     	BSR	_PORTA,7
     0036                           1- 1925     _00312_DS_:
                                    1- 1926     	.line	273, "main.c"; 	if(batStatus == 1 && workStatus == 1)
                                    1- 1927     	BANKSEL	_batStatus
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1- 1928     	MOVR	_batStatus,W
     0038 2401                      1- 1929     	XORIA	0x01
     0039 0903                      1- 1930     	BTRSS	STATUS,2
     003A 3rrr                      1- 1931     	LGOTO	_00318_DS_
                                    1- 1932     	BANKSEL	r0x103C
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 01rr                      1- 1933     	MOVR	r0x103C,W
     003D 0D03                      1- 1934     	BTRSC	STATUS,2
     003E 3rrr                      1- 1935     	LGOTO	_00318_DS_
                                    1- 1936     	.line	275, "main.c"; 	LED4ON();
     003F 1Crr                      1- 1937     	BCR	_PORTB,1
     0040 3rrr                      1- 1938     	LGOTO	_00323_DS_
     0041                           1- 1939     _00318_DS_:
                                    1- 1940     	.line	277, "main.c"; 	else if(batStatus == 0 || batStatus == 2)
                                    1- 1941     	BANKSEL	_batStatus
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 1942     	MOVR	_batStatus,W
     0043 0D03                      1- 1943     	BTRSC	STATUS,2
     0044 3rrr                      1- 1944     	LGOTO	_00314_DS_
     0045 01rr                      1- 1945     	MOVR	_batStatus,W
     0046 2402                      1- 1946     	XORIA	0x02
     0047 0D03                      1- 1947     	BTRSC	STATUS,2
     0048                           1- 1948     _00314_DS_:
                                    1- 1949     	.line	279, "main.c"; 	LED4OFF();
     0048 18rr                      1- 1950     	BSR	_PORTB,1
     0049                           1- 1951     _00323_DS_:
                                    1- 1952     	.line	284, "main.c"; 	if(batStatus == 3 && chrgStatus != 1)
                                    1- 1953     	BANKSEL	_batStatus
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 01rr                      1- 1954     	MOVR	_batStatus,W
     004B 2403                      1- 1955     	XORIA	0x03
     004C 0903                      1- 1956     	BTRSS	STATUS,2
     004D 3rrr                      1- 1957     	LGOTO	_00331_DS_
                                    1- 1958     	BANKSEL	_chrgStatus
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1- 1959     	MOVR	_chrgStatus,W
     0050 2401                      1- 1960     	XORIA	0x01
     0051 0D03                      1- 1961     	BTRSC	STATUS,2
     0052 3rrr                      1- 1962     	LGOTO	_00331_DS_
                                    1- 1963     	.line	286, "main.c"; 	if(++firstLowTime >= 10)
                                    1- 1964     	BANKSEL	_firstLowTime
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 05rr                      1- 1965     	INCR	_firstLowTime,F
     0055 210A                      1- 1966     	MOVIA	0x0a
     0056 04rr                      1- 1967     	SUBAR	_firstLowTime,W
     0057 0803                      1- 1968     	BTRSS	STATUS,0
     0058 3rrr                      1- 1969     	LGOTO	_00331_DS_
                                    1- 1970     	.line	288, "main.c"; 	firstLowTime = 0;
     0059 02rr                      1- 1971     	CLRR	_firstLowTime
                                    1- 1972     	.line	289, "main.c"; 	POWEROFF();			//缺电状态关闭负载
     005A 1Crr                      1- 1973     	BCR	_PORTA,0
                                    1- 1974     	.line	290, "main.c"; 	LED2OFF();
     005B 1Frr                      1- 1975     	BCR	_PORTA,7
                                    1- 1976     	.line	291, "main.c"; 	if(firstLow == 0)
                                    1- 1977     	BANKSEL	_firstLow
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 1978     	MOVR	_firstLow,W
     005E 0903                      1- 1979     	BTRSS	STATUS,2
     005F 3rrr                      1- 1980     	LGOTO	_00325_DS_
                                    1- 1981     	.line	293, "main.c"; 	shandeng = 6;		//闪灯3次
     0060 2106                      1- 1982     	MOVIA	0x06
                                    1- 1983     	BANKSEL	_shandeng
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 00rr                      1- 1984     	MOVAR	_shandeng
     0063                           1- 1985     _00325_DS_:
                                    1- 1986     	.line	296, "main.c"; 	firstLow = 1;
     0063 2101                      1- 1987     	MOVIA	0x01
                                    1- 1988     	BANKSEL	_firstLow
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 00rr                      1- 1989     	MOVAR	_firstLow
     0066                           1- 1990     _00331_DS_:
                                    1- 1991     	.line	303, "main.c"; 	}
                                    1- 1992     	RETURN	
     0066 0010                      3-   26 m1      ret
                                    1- 1993     ; exit point of _workCtr
                                    1- 1995     ;***
                                    1- 1996     ;  pBlock Stats: dbName = C
                                    1- 1997     ;***
                                    1- 1998     ;has an exit
                                    1- 1999     ;functions called:
                                    1- 2000     ;   _checkInV
                                    1- 2001     ;   _checkInV
                                    1- 2002     ;; Starting pCode block
                                    1- 2003     .segment "code"; module=main, function=_chrgWork
     0000                           1- 2005     _chrgWork:
                                    1- 2006     ; 2 exit points
                                    1- 2007     	.line	208, "main.c"; 	if(PORTA & 0x20)
     0000 0Arr                      1- 2008     	BTRSS	_PORTA,5
     0001 3rrr                      1- 2009     	LGOTO	_00279_DS_
                                    1- 2010     	.line	210, "main.c"; 	checkInV();
     0002 2rrr                      1- 2011     	LCALL	_checkInV
                                    1- 2012     	.line	211, "main.c"; 	if(chrgStatus == 2)
                                    1- 2013     	BANKSEL	_chrgStatus
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 01rr                      1- 2014     	MOVR	_chrgStatus,W
     0005 2402                      1- 2015     	XORIA	0x02
     0006 0903                      1- 2016     	BTRSS	STATUS,2
     0007 3rrr                      1- 2017     	LGOTO	_00275_DS_
                                    1- 2018     	.line	214, "main.c"; 	if(workStatus == 1 && batStatus < 3)
                                    1- 2019     	BANKSEL	_workStatus
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1- 2020     	MOVR	_workStatus,W
     000A 2401                      1- 2021     	XORIA	0x01
     000B 0903                      1- 2022     	BTRSS	STATUS,2
     000C 3rrr                      1- 2023     	LGOTO	_00271_DS_
                                    1- 2024     ;;unsigned compare: left < lit (0x3=3), size=1
     000D 2103                      1- 2025     	MOVIA	0x03
                                    1- 2026     	BANKSEL	_batStatus
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 04rr                      1- 2027     	SUBAR	_batStatus,W
     0010 0C03                      1- 2028     	BTRSC	STATUS,0
     0011 3rrr                      1- 2029     	LGOTO	_00271_DS_
                                    1- 2030     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2031     ;;unsigned compare: left >= lit (0x65=101), size=2
                                    1- 2032     	.line	216, "main.c"; 	if(R_AIN2_DATA > 100)
     0012 2100                      1- 2033     	MOVIA	0x00
                                    1- 2034     	BANKSEL	_R_AIN2_DATA
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 04rr                      1- 2035     	SUBAR	(_R_AIN2_DATA + 1),W
     0015 0903                      1- 2036     	BTRSS	STATUS,2
     0016 3rrr                      1- 2037     	LGOTO	_00297_DS_
     0017 2165                      1- 2038     	MOVIA	0x65
     0018 04rr                      1- 2039     	SUBAR	_R_AIN2_DATA,W
     0019                           1- 2040     _00297_DS_:
     0019 0803                      1- 2041     	BTRSS	STATUS,0
     001A 3rrr                      1- 2042     	LGOTO	_00269_DS_
                                    1- 2043     	.line	217, "main.c"; 	LED2ON();
     001B 1Brr                      1- 2044     	BSR	_PORTA,7
     001C                           1- 2045     _00269_DS_:
                                    1- 2046     	.line	218, "main.c"; 	POWERON();
     001C 18rr                      1- 2047     	BSR	_PORTA,0
     001D 3rrr                      1- 2048     	LGOTO	_00279_DS_
     001E                           1- 2049     _00271_DS_:
                                    1- 2050     	.line	222, "main.c"; 	LED3OFF();
     001E 1Frr                      1- 2051     	BCR	_PORTA,6
                                    1- 2052     	.line	223, "main.c"; 	POWEROFF();
     001F 1Crr                      1- 2053     	BCR	_PORTA,0
     0020 3rrr                      1- 2054     	LGOTO	_00279_DS_
     0021                           1- 2055     _00275_DS_:
                                    1- 2056     	.line	228, "main.c"; 	LED3ON();
     0021 1Brr                      1- 2057     	BSR	_PORTA,6
     0022                           1- 2058     _00279_DS_:
                                    1- 2059     	.line	232, "main.c"; 	}
                                    1- 2060     	RETURN	
     0022 0010                      3-   26 m1      ret
                                    1- 2061     ; exit point of _chrgWork
                                    1- 2064     ;	code size estimation:
                                    1- 2065     ;	  770+  187 =   957 instructions ( 2288 byte)
                                    1- 2067     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    0000002E
_00003_DS_              Label    0000002E
_00004_DS_              Label    0000002E
_00005_DS_              Label    00000025
_00006_DS_              Label    00000025
_00007_DS_              Label    0000002D
_00008_DS_              Label    00000063
_00106_DS_              Label    0000002E
_00107_DS_              Label    0000002F
_00113_DS_              Label    00000037
_00120_DS_              Label    0000003C
_00122_DS_              Label    00000040
_00158_DS_              Label    00000042
_00166_DS_              Label    00000044
_00167_DS_              Label    0000004A
_00179_DS_              Label    0000005A
_00180_DS_              Label    00000073
_00190_DS_              Label    00000086
_00194_DS_              Label    0000001F
_00269_DS_              Label    0000001C
_00271_DS_              Label    0000001E
_00275_DS_              Label    00000021
_00279_DS_              Label    00000022
_00297_DS_              Label    00000019
_00302_DS_              Label    0000000D
_00303_DS_              Label    00000010
_00304_DS_              Label    00000011
_00307_DS_              Label    0000001B
_00312_DS_              Label    00000036
_00314_DS_              Label    00000048
_00318_DS_              Label    00000041
_00322_DS_              Label    00000023
_00323_DS_              Label    00000049
_00325_DS_              Label    00000063
_00331_DS_              Label    00000066
_00384_DS_              Label    00000008
_00386_DS_              Label    00000023
_00390_DS_              Label    00000010
_00393_DS_              Label    00000027
_00403_DS_              Label    00000038
_00407_DS_              Label    00000044
_00408_DS_              Label    00000052
_00411_DS_              Label    0000005C
_00425_DS_              Label    0000003F
_00426_DS_              Label    0000004D
_00432_DS_              Label    00000038
_00436_DS_              Label    00000053
_00447_DS_              Label    00000099
_00450_DS_              Label    00000088
_00455_DS_              Label    0000009F
_00458_DS_              Label    0000006C
_00461_DS_              Label    00000057
_00463_DS_              Label    000000AF
_00504_DS_              Label    0000003F
_00505_DS_              Label    0000004D
_00506_DS_              Label    0000005E
_00507_DS_              Label    00000073
_00508_DS_              Label    00000083
_00509_DS_              Label    00000094
_00510_DS_              Label    000000AA
_00517_DS_              Label    00000010
_00519_DS_              Label    00000031
_00526_DS_              Label    00000010
_00528_DS_              Label    00000031
_00535_DS_              Label    00000010
_00537_DS_              Label    00000031
_00546_DS_              Label    00000000
_00553_DS_              Label    00000009
_00555_DS_              Label    0000001C
_00564_DS_              Label    00000013
_00576_DS_              Label    0000001F
_00577_DS_              Label    00000027
_00579_DS_              Label    00000015
_00580_DS_              Label    00000029
_00581_DS_              Label    0000002A
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_batLowTime             Label    00000000
_batStatus              Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBat               Label    00000000
_checkInV               Label    00000000
_chrgStatus             Label    00000000
_chrgWork               Label    00000000
_closeStatus            Label    00000000
_CMPCR                  Label    00000000
_count500ms             Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_F_AIN1_Convert         Label    00000000
_F_AIN2_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_firstLow               Label    00000000
_firstLowTime           Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_inLowTime              Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_longPressFlag          Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_overTime               Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN1_DATA            Label    00000000
_R_AIN1_DATA_LB         Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_shandeng               Label    00000000
_sleepDelay             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStatus             Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000051
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101C                 Label    00000000
r0x101D                 Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1032                 Label    00000000
r0x1035                 Label    00000000
r0x1036                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
r0x103D                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
