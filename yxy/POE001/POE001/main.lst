
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_closeStatus
                                    1-   97     	extern	_keyRead
                                    1-   98     	extern	_delay
                                    1-   99     	extern	_F_wait_eoc
                                    1-  100     	extern	_gotoSleep
                                    1-  101     	extern	_F_AIN4_Convert
                                    1-  102     	extern	_F_AIN2_Convert
                                    1-  103     	extern	_F_AIN1_Convert
                                    1-  104     	extern	_checkBat
                                    1-  105     	extern	_checkInV
                                    1-  106     	extern	_initAD
                                    1-  107     	extern	_keyCtr
                                    1-  108     	extern	_workCtr
                                    1-  109     	extern	_chrgWork
                                    1-  110     	extern	_isr
                                    1-  111     	extern	_main
                                    1-  112     	extern	_debug
                                    1-  113     	extern	_intCount
                                    1-  114     	extern	_IntFlag
                                    1-  115     	extern	_sleepDelay
                                    1-  116     	extern	_workStep
                                    1-  117     	extern	_longPressFlag
                                    1-  118     	extern	_keyCount
                                    1-  119     	extern	_keyClick
                                    1-  120     	extern	_chrgStatus
                                    1-  121     	extern	_batStatus
                                    1-  122     	extern	_workStatus
                                    1-  123     	extern	_inLowTime
                                    1-  124     	extern	_R_AIN1_DATA
                                    1-  125     	extern	_R_AIN1_DATA_LB
                                    1-  126     	extern	_R_AIN2_DATA
                                    1-  127     	extern	_R_AIN2_DATA_LB
                                    1-  128     	extern	_R_AIN4_DATA
                                    1-  129     	extern	_R_AIN4_DATA_LB
                                    1-  130     	extern	_overTime
                                    1-  131     	extern	_shandeng
                                    1-  132     	extern	_count500ms
                                    1-  133     	extern	_firstLow
                                    1-  134     	extern	_firstLowTime
                                    1-  135     	extern	_batLowTime
                                    1-  137     	extern PSAVE
                                    1-  138     	extern SSAVE
                                    1-  139     	extern WSAVE
                                    1-  140     	extern STK02
                                    1-  141     	extern STK01
                                    1-  142     	extern STK00
                                    1-  144     .segment "uninit", 0x20000040
 20000040                           1-  145     PSAVE:
                                    1-  146     	.res 1
 20000041                           1-  147     SSAVE:
                                    1-  148     	.res 1
 20000042                           1-  149     WSAVE:
                                    1-  150     	.res 1
 20000043                           1-  151     STK02:
                                    1-  152     	.res 1
 20000044                           1-  153     STK01:
                                    1-  154     	.res 1
 20000045                           1-  155     STK00:
                                    1-  156     	.res 1
                                    1-  158     ;--------------------------------------------------------
                                    1-  159     ; global definitions
                                    1-  160     ;--------------------------------------------------------
                                    1-  161     ;--------------------------------------------------------
                                    1-  162     ; absolute symbol definitions
                                    1-  163     ;--------------------------------------------------------
                                    1-  164     ;--------------------------------------------------------
                                    1-  165     ; compiler-defined variables
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     .segment "uninit"
     0000                           1-  168     r0x103C:
                                    1-  169     	.res	1
                                    1-  170     .segment "uninit"
     0000                           1-  171     r0x103B:
                                    1-  172     	.res	1
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x1039:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x103A:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x1035:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x1036:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x102D:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x102E:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x102F:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x1032:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x1027:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x1028:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x1029:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x102C:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x1021:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1022:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1023:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x1026:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x101E:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x101D:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x101F:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x1020:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x101C:
                                    1-  235     	.res	1
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; initialized data
                                    1-  238     ;--------------------------------------------------------
                                    1-  240     .segment "idata"
     0000                           1-  241     _debug:
     0000 0000                      1-  242     	dw	0x00
                                    1-  246     .segment "idata"
     0000                           1-  247     _intCount:
     0000 0000                      1-  248     	dw	0x00
                                    1-  252     .segment "idata"
     0000                           1-  253     _IntFlag:
     0000 0000                      1-  254     	dw	0x00
                                    1-  258     .segment "idata"
     0000                           1-  259     _sleepDelay:
     0000 0000                      1-  260     	dw	0x00
                                    1-  264     .segment "idata"
     0000                           1-  265     _workStep:
     0000 0000                      1-  266     	dw	0x00
                                    1-  270     .segment "idata"
     0000                           1-  271     _longPressFlag:
     0000 0000                      1-  272     	dw	0x00
                                    1-  276     .segment "idata"
     0000                           1-  277     _keyCount:
     0000 0000                      1-  278     	dw	0x00
                                    1-  282     .segment "idata"
     0000                           1-  283     _keyClick:
     0000 0000                      1-  284     	dw	0x00
                                    1-  288     .segment "idata"
     0000                           1-  289     _chrgStatus:
     0000 0000                      1-  290     	dw	0x00
                                    1-  294     .segment "idata"
     0000                           1-  295     _batStatus:
     0000 0000                      1-  296     	dw	0x00
                                    1-  300     .segment "idata"
     0000                           1-  301     _workStatus:
     0000 0000                      1-  302     	dw	0x00
                                    1-  306     .segment "idata"
     0000                           1-  307     _inLowTime:
     0000 0000                      1-  308     	dw	0x00
                                    1-  312     .segment "idata"
     0000                           1-  313     _R_AIN1_DATA:
     0000 0000 0000                 1-  314     	dw	0x00, 0x00
                                    1-  318     .segment "idata"
     0000                           1-  319     _R_AIN1_DATA_LB:
     0000 0000                      1-  320     	dw	0x00
                                    1-  324     .segment "idata"
     0000                           1-  325     _R_AIN2_DATA:
     0000 0000 0000                 1-  326     	dw	0x00, 0x00
                                    1-  330     .segment "idata"
     0000                           1-  331     _R_AIN2_DATA_LB:
     0000 0000                      1-  332     	dw	0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _R_AIN4_DATA:
     0000 0000 0000                 1-  338     	dw	0x00, 0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _R_AIN4_DATA_LB:
     0000 0000                      1-  344     	dw	0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _overTime:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _shandeng:
     0000 0000                      1-  356     	dw	0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _count500ms:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _firstLow:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _firstLowTime:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _batLowTime:
     0000 0000                      1-  380     	dw	0x00
                                    1-  383     ;--------------------------------------------------------
                                    1-  384     ; overlayable items in internal ram 
                                    1-  385     ;--------------------------------------------------------
                                    1-  386     ;	udata_ovr
                                    1-  387     ;--------------------------------------------------------
                                    1-  388     ; reset vector 
                                    1-  389     ;--------------------------------------------------------
                                    1-  390     ORG	0x0000
     0000 3rrr                      1-  391     	LGOTO	__nyc_ny8_startup
                                    1-  392     ;--------------------------------------------------------
                                    1-  393     ; interrupt and initialization code
                                    1-  394     ;--------------------------------------------------------
                                    1-  395     ORG 0x0008
     0008 3rrr                      1-  396     	lgoto	__sdcc_interrupt
                                    1-  398     .segment "code"
     0000                           1-  399     __sdcc_interrupt:
                                    1-  400     ;***
                                    1-  401     ;  pBlock Stats: dbName = I
                                    1-  402     ;***
                                    1-  403     ;functions called:
                                    1-  404     ;   _closeStatus
                                    1-  405     ;   _gotoSleep
                                    1-  406     ;   _closeStatus
                                    1-  407     ;   _gotoSleep
                                    1-  408     ;2 compiler assigned registers:
                                    1-  409     ;   STK00
                                    1-  410     ;   STK01
                                    1-  411     ;; Starting pCode block
     0000                           1-  412     _isr:
                                    1-  413     ; 0 exit points
                                    1-  414     	.line	70, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  415     	MOVAR	WSAVE
     0001 1503                      1-  416     	SWAPR	STATUS,W
     0002 0283                      1-  417     	CLRR	STATUS
     0003 00rr                      1-  418     	MOVAR	SSAVE
     0004 010A                      1-  419     	MOVR	PCHBUF,W
     0005 028A                      1-  420     	CLRR	PCHBUF
     0006 00rr                      1-  421     	MOVAR	PSAVE
     0007 0104                      1-  422     	MOVR	FSR,W
                                    1-  423     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  424     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  425     	MOVR	STK00,W
                                    1-  426     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  427     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  428     	MOVR	STK01,W
                                    1-  429     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  430     	MOVAR	___sdcc_saved_stk01
                                    1-  431     	.line	72, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  432     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  433     	LGOTO	_00120_DS_
                                    1-  434     	.line	74, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  435     	MOVIA	0x37
     0013 03rr                      1-  436     	ADDAR	_TMR0,F
                                    1-  437     	.line	75, "main.c"; 	intCount++;
                                    1-  438     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  439     	INCR	_intCount,F
                                    1-  440     	.line	77, "main.c"; 	if(++intCount >= 100)
     0016 05rr                      1-  441     	INCR	_intCount,F
                                    1-  442     ;;unsigned compare: left < lit (0x64=100), size=1
     0017 2164                      1-  443     	MOVIA	0x64
     0018 04rr                      1-  444     	SUBAR	_intCount,W
     0019 0803                      1-  445     	BTRSS	STATUS,0
     001A 3rrr                      1-  446     	LGOTO	_00120_DS_
                                    1-  447     	.line	79, "main.c"; 	intCount = 0;
     001B 02rr                      1-  448     	CLRR	_intCount
                                    1-  449     	.line	80, "main.c"; 	IntFlag = 1;
     001C 2101                      1-  450     	MOVIA	0x01
                                    1-  451     	BANKSEL	_IntFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  452     	MOVAR	_IntFlag
                                    1-  453     	.line	81, "main.c"; 	if(++count500ms >= 50)
                                    1-  454     	BANKSEL	_count500ms
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 05rr                      1-  455     	INCR	_count500ms,F
                                    1-  456     ;;unsigned compare: left < lit (0x32=50), size=1
     0021 2132                      1-  457     	MOVIA	0x32
     0022 04rr                      1-  458     	SUBAR	_count500ms,W
     0023 0803                      1-  459     	BTRSS	STATUS,0
     0024 3rrr                      1-  460     	LGOTO	_00120_DS_
                                    1-  461     	.line	83, "main.c"; 	count500ms = 0;
     0025 02rr                      1-  462     	CLRR	_count500ms
                                    1-  463     	.line	84, "main.c"; 	if(shandeng > 0)
                                    1-  464     	BANKSEL	_shandeng
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  465     	MOVR	_shandeng,W
     0028 0D03                      1-  466     	BTRSC	STATUS,2
     0029 3rrr                      1-  467     	LGOTO	_00113_DS_
                                    1-  468     	.line	86, "main.c"; 	if(shandeng % 2 == 0)
     002A 0Crr                      1-  469     	BTRSC	_shandeng,0
     002B 3rrr                      1-  470     	LGOTO	_00106_DS_
                                    1-  471     	.line	87, "main.c"; 	LED4ON();
     002C 1Crr                      1-  472     	BCR	_PORTB,1
     002D 3rrr                      1-  473     	LGOTO	_00107_DS_
     002E                           1-  474     _00106_DS_:
                                    1-  475     	.line	89, "main.c"; 	LED4OFF();
     002E 18rr                      1-  476     	BSR	_PORTB,1
     002F                           1-  477     _00107_DS_:
                                    1-  478     	.line	90, "main.c"; 	shandeng--;
                                    1-  479     	BANKSEL	_shandeng
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 17rr                      1-  480     	DECRSZ	_shandeng,F
                                    1-  481     	.line	91, "main.c"; 	if(shandeng == 0)
     0031 3rrr                      1-  482     	LGOTO	_00120_DS_
                                    1-  483     	.line	93, "main.c"; 	workStatus = 0;
                                    1-  484     	BANKSEL	_workStatus
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 02rr                      1-  485     	CLRR	_workStatus
                                    1-  486     	.line	94, "main.c"; 	closeStatus();
     0034 2rrr                      1-  487     	LCALL	_closeStatus
                                    1-  488     	.line	95, "main.c"; 	gotoSleep();
     0035 2rrr                      1-  489     	LCALL	_gotoSleep
     0036 3rrr                      1-  490     	LGOTO	_00120_DS_
     0037                           1-  491     _00113_DS_:
                                    1-  492     	.line	98, "main.c"; 	else if(batStatus != 1)
                                    1-  493     	BANKSEL	_batStatus
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1-  494     	MOVR	_batStatus,W
     0039 2401                      1-  495     	XORIA	0x01
     003A 0903                      1-  496     	BTRSS	STATUS,2
                                    1-  497     	.line	100, "main.c"; 	LED4OFF();
     003B 18rr                      1-  498     	BSR	_PORTB,1
     003C                           1-  499     _00120_DS_:
                                    1-  500     	.line	107, "main.c"; 	if(INTFbits.PABIF)
     003C 08rr                      1-  501     	BTRSS	_INTFbits,1
     003D 3rrr                      1-  502     	LGOTO	_00122_DS_
                                    1-  503     	.line	109, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     003E 21FD                      1-  504     	MOVIA	0xfd
     003F 00rr                      1-  505     	MOVAR	_INTF
     0040                           1-  506     _00122_DS_:
                                    1-  507     	.line	112, "main.c"; 	INTF = 0;
     0040 02rr                      1-  508     	CLRR	_INTF
                                    1-  509     	.line	114, "main.c"; 	}
                                    1-  510     	BANKSEL	___sdcc_saved_stk01
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1-  511     	MOVR	___sdcc_saved_stk01,W
     0043 00rr                      1-  512     	MOVAR	STK01
                                    1-  513     	BANKSEL	___sdcc_saved_stk00
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  514     	MOVR	___sdcc_saved_stk00,W
     0046 00rr                      1-  515     	MOVAR	STK00
                                    1-  516     	BANKSEL	___sdcc_saved_fsr
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1-  517     	MOVR	___sdcc_saved_fsr,W
     0049 0084                      1-  518     	MOVAR	FSR
     004A 01rr                      1-  519     	MOVR	PSAVE,W
     004B 008A                      1-  520     	MOVAR	PCHBUF
     004C 0283                      1-  521     	CLRR	STATUS
     004D 15rr                      1-  522     	SWAPR	SSAVE,W
     004E 0083                      1-  523     	MOVAR	STATUS
     004F 15rr                      1-  524     	SWAPR	WSAVE,F
     0050 15rr                      1-  525     	SWAPR	WSAVE,W
     0051                           1-  526     END_OF_INTERRUPT:
     0051 0011                      1-  527     	RETIE	
                                    1-  529     ;--------------------------------------------------------
                                    1-  530     ; code
                                    1-  531     ;--------------------------------------------------------
                                    1-  532     ;***
                                    1-  533     ;  pBlock Stats: dbName = M
                                    1-  534     ;***
                                    1-  535     ;has an exit
                                    1-  536     ;functions called:
                                    1-  537     ;   _closeStatus
                                    1-  538     ;   _initAD
                                    1-  539     ;   _keyCtr
                                    1-  540     ;   _chrgWork
                                    1-  541     ;   _workCtr
                                    1-  542     ;   _closeStatus
                                    1-  543     ;   _gotoSleep
                                    1-  544     ;   _closeStatus
                                    1-  545     ;   _initAD
                                    1-  546     ;   _keyCtr
                                    1-  547     ;   _chrgWork
                                    1-  548     ;   _workCtr
                                    1-  549     ;   _closeStatus
                                    1-  550     ;   _gotoSleep
                                    1-  551     ;1 compiler assigned register :
                                    1-  552     ;   r0x103C
                                    1-  553     ;; Starting pCode block
                                    1-  554     .segment "code"; module=main, function=_main
     0000                           1-  556     _main:
                                    1-  557     ; 2 exit points
                                    1-  558     	.line	118, "main.c"; 	DISI();
     0000 0013                      1-  559     	DISI
                                    1-  560     	.line	119, "main.c"; 	IOSTA = C_PA1_Input | C_PA2_Input | C_PA3_Input | C_PA4_Input | C_PA5_Input;
     0001 213E                      1-  561     	MOVIA	0x3e
     0002 000r                      1-  562     	IOST	_IOSTA
                                    1-  563     	.line	120, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1-  564     	MOVIA	0x01
     0004 000r                      1-  565     	IOST	_IOSTB
                                    1-  566     	.line	121, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1-  567     	CLRR	_PORTB
                                    1-  568     	.line	122, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1-  569     	CLRR	_PORTA
                                    1-  570     	.line	123, "main.c"; 	APHCON = 0xFF;
     0007 21FF                      1-  571     	MOVIA	0xff
     0008 000r                      1-  572     	IOST	_APHCON
                                    1-  573     	.line	124, "main.c"; 	BPHCON = 0xFE;
     0009 21FE                      1-  574     	MOVIA	0xfe
     000A 00rr                      1-  575     	MOVAR	_BPHCON
                                    1-  576     	.line	125, "main.c"; 	ABPLCON = 0xFF;
     000B 21FF                      1-  577     	MOVIA	0xff
     000C 00rr                      1-  578     	MOVAR	_ABPLCON
                                    1-  579     	.line	127, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000D 2101                      1-  580     	MOVIA	0x01
     000E 00rr                      1-  581     	MOVAR	_INTE
                                    1-  582     	.line	129, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1-  583     	CLRA	
     0010 000r                      1-  584     	IOST	_PCON1
                                    1-  585     	.line	131, "main.c"; 	TMR0 = 55;
     0011 2137                      1-  586     	MOVIA	0x37
     0012 00rr                      1-  587     	MOVAR	_TMR0
                                    1-  588     	.line	132, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0013 0200                      1-  589     	CLRA	
     0014 0003                      1-  590     	T0MD	
                                    1-  591     	.line	134, "main.c"; 	PCON1 = C_TMR0_En;
     0015 2101                      1-  592     	MOVIA	0x01
     0016 000r                      1-  593     	IOST	_PCON1
                                    1-  594     	.line	136, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR,PA5关闭上拉
     0017 2198                      1-  595     	MOVIA	0x98
     0018 00rr                      1-  596     	MOVAR	_PCON
                                    1-  597     	.line	138, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1-  598     	MOVIA	0x01
     001A 000r                      1-  599     	IOST	_PCON1
                                    1-  600     	.line	139, "main.c"; 	ENI();
     001B 0004                      1-  601     	ENI
                                    1-  602     	.line	140, "main.c"; 	closeStatus();
     001C 2rrr                      1-  603     	LCALL	_closeStatus
                                    1-  604     	.line	141, "main.c"; 	initAD();
     001D 2rrr                      1-  605     	LCALL	_initAD
     001E                           1-  606     _00193_DS_:
                                    1-  607     	.line	146, "main.c"; 	CLRWDT();
     001E 0002                      1-  608     	clrwdt
                                    1-  609     	.line	147, "main.c"; 	if(PORTA & 0x20)
     001F 0Arr                      1-  610     	BTRSS	_PORTA,5
     0020 3rrr                      1-  611     	LGOTO	_00179_DS_
                                    1-  612     ;;unsigned compare: left < lit (0x2=2), size=1
                                    1-  613     	.line	150, "main.c"; 	if(chrgStatus < 2)
     0021 2102                      1-  614     	MOVIA	0x02
                                    1-  615     	BANKSEL	_chrgStatus
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 04rr                      1-  616     	SUBAR	_chrgStatus,W
                                    1-  617     	BANKSEL	r0x103C
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1-  618     	CLRR	r0x103C
     0026 0803                      1-  619     	BTRSS	STATUS,0
     0027 18rr                      1-  620     	BSR	r0x103C,0
     0028 01rr                      1-  621     	MOVR	r0x103C,W
     0029 0D03                      1-  622     	BTRSC	STATUS,2
     002A 3rrr                      1-  623     	LGOTO	_00166_DS_
                                    1-  624     	.line	152, "main.c"; 	LED2OFF();
     002B 1Frr                      1-  625     	BCR	_PORTA,7
                                    1-  626     	.line	153, "main.c"; 	if(chrgStatus == 1)
                                    1-  627     	BANKSEL	_chrgStatus
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1-  628     	MOVR	_chrgStatus,W
     002E 2401                      1-  629     	XORIA	0x01
     002F 0D03                      1-  630     	BTRSC	STATUS,2
                                    1-  631     	.line	154, "main.c"; 	LED4OFF();
     0030 18rr                      1-  632     	BSR	_PORTB,1
                                    1-  633     	.line	155, "main.c"; 	if(batStatus == 0 || batStatus == 2 || (batStatus == 3 && shandeng == 0))
                                    1-  634     	BANKSEL	_batStatus
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1-  635     	MOVR	_batStatus,W
     0033 0D03                      1-  636     	BTRSC	STATUS,2
     0034 3rrr                      1-  637     	LGOTO	_00158_DS_
     0035 01rr                      1-  638     	MOVR	_batStatus,W
     0036 2402                      1-  639     	XORIA	0x02
     0037 0D03                      1-  640     	BTRSC	STATUS,2
     0038 3rrr                      1-  641     	LGOTO	_00158_DS_
     0039 01rr                      1-  642     	MOVR	_batStatus,W
     003A 2403                      1-  643     	XORIA	0x03
     003B 0903                      1-  644     	BTRSS	STATUS,2
     003C 3rrr                      1-  645     	LGOTO	_00167_DS_
                                    1-  646     	BANKSEL	_shandeng
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1-  647     	MOVR	_shandeng,W
     003F 0903                      1-  648     	BTRSS	STATUS,2
     0040 3rrr                      1-  649     	LGOTO	_00167_DS_
     0041                           1-  650     _00158_DS_:
                                    1-  651     	.line	156, "main.c"; 	LED4OFF();
     0041 18rr                      1-  652     	BSR	_PORTB,1
     0042 3rrr                      1-  653     	LGOTO	_00167_DS_
     0043                           1-  654     _00166_DS_:
                                    1-  655     	.line	160, "main.c"; 	LED3OFF();
     0043 1Frr                      1-  656     	BCR	_PORTA,6
                                    1-  657     	.line	161, "main.c"; 	if(batStatus == 3)
                                    1-  658     	BANKSEL	_batStatus
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  659     	MOVR	_batStatus,W
     0046 2403                      1-  660     	XORIA	0x03
     0047 0D03                      1-  661     	BTRSC	STATUS,2
                                    1-  662     	.line	162, "main.c"; 	LED2OFF();
     0048 1Frr                      1-  663     	BCR	_PORTA,7
     0049                           1-  664     _00167_DS_:
                                    1-  665     	.line	164, "main.c"; 	if(chrgStatus == 0)
                                    1-  666     	BANKSEL	_chrgStatus
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 01rr                      1-  667     	MOVR	_chrgStatus,W
     004B 0D03                      1-  668     	BTRSC	STATUS,2
                                    1-  669     	.line	166, "main.c"; 	CHRGON();
     004C 19rr                      1-  670     	BSR	_PORTB,2
                                    1-  671     	.line	168, "main.c"; 	if(workStatus == 1  && chrgStatus < 2)
                                    1-  672     	BANKSEL	_workStatus
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1-  673     	MOVR	_workStatus,W
     004F 2401                      1-  674     	XORIA	0x01
     0050 0903                      1-  675     	BTRSS	STATUS,2
     0051 3rrr                      1-  676     	LGOTO	_00180_DS_
                                    1-  677     	BANKSEL	r0x103C
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1-  678     	MOVR	r0x103C,W
     0054 0D03                      1-  679     	BTRSC	STATUS,2
     0055 3rrr                      1-  680     	LGOTO	_00180_DS_
                                    1-  681     	.line	170, "main.c"; 	POWERON();
     0056 18rr                      1-  682     	BSR	_PORTA,0
                                    1-  683     	.line	171, "main.c"; 	LED3ON();
     0057 1Brr                      1-  684     	BSR	_PORTA,6
     0058 3rrr                      1-  685     	LGOTO	_00180_DS_
     0059                           1-  686     _00179_DS_:
                                    1-  687     	.line	178, "main.c"; 	if(workStatus == 1)
                                    1-  688     	BANKSEL	r0x103C
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 02rr                      1-  689     	CLRR	r0x103C
                                    1-  690     	BANKSEL	_workStatus
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 01rr                      1-  691     	MOVR	_workStatus,W
     005D 2401                      1-  692     	XORIA	0x01
     005E 0903                      1-  693     	BTRSS	STATUS,2
     005F 3rrr                      1-  694     	LGOTO	_00007_DS_
                                    1-  695     	BANKSEL	r0x103C
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 05rr                      1-  696     	INCR	r0x103C,F
     0062                           1-  697     _00007_DS_:
                                    1-  698     	BANKSEL	r0x103C
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 01rr                      1-  699     	MOVR	r0x103C,W
     0064 0903                      1-  700     	BTRSS	STATUS,2
                                    1-  701     	.line	179, "main.c"; 	CHRGOFF();
     0065 1Drr                      1-  702     	BCR	_PORTB,2
                                    1-  703     	.line	180, "main.c"; 	LED3OFF();
     0066 1Frr                      1-  704     	BCR	_PORTA,6
                                    1-  705     	.line	181, "main.c"; 	chrgStatus = 0;
                                    1-  706     	BANKSEL	_chrgStatus
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 02rr                      1-  707     	CLRR	_chrgStatus
                                    1-  708     ;;unsigned compare: left < lit (0x3=3), size=1
                                    1-  709     	.line	182, "main.c"; 	if( batStatus < 3 && workStatus == 1)
     0069 2103                      1-  710     	MOVIA	0x03
                                    1-  711     	BANKSEL	_batStatus
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 04rr                      1-  712     	SUBAR	_batStatus,W
     006C 0C03                      1-  713     	BTRSC	STATUS,0
     006D 3rrr                      1-  714     	LGOTO	_00180_DS_
                                    1-  715     	BANKSEL	r0x103C
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 01rr                      1-  716     	MOVR	r0x103C,W
     0070 0903                      1-  717     	BTRSS	STATUS,2
                                    1-  718     	.line	184, "main.c"; 	POWERON();
     0071 18rr                      1-  719     	BSR	_PORTA,0
     0072                           1-  720     _00180_DS_:
                                    1-  721     	.line	187, "main.c"; 	if(!IntFlag)
                                    1-  722     	BANKSEL	_IntFlag
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 01rr                      1-  723     	MOVR	_IntFlag,W
     0074 0D03                      1-  724     	BTRSC	STATUS,2
     0075 3rrr                      1-  725     	LGOTO	_00193_DS_
                                    1-  726     	.line	189, "main.c"; 	IntFlag = 0;
     0076 02rr                      1-  727     	CLRR	_IntFlag
                                    1-  728     	.line	190, "main.c"; 	keyCtr();
     0077 2rrr                      1-  729     	LCALL	_keyCtr
                                    1-  730     	.line	191, "main.c"; 	chrgWork();
     0078 2rrr                      1-  731     	LCALL	_chrgWork
                                    1-  732     	.line	192, "main.c"; 	if(workStatus == 1)
                                    1-  733     	BANKSEL	_workStatus
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 01rr                      1-  734     	MOVR	_workStatus,W
     007B 2401                      1-  735     	XORIA	0x01
     007C 0D03                      1-  736     	BTRSC	STATUS,2
                                    1-  737     	.line	193, "main.c"; 	workCtr();
     007D 2rrr                      1-  738     	LCALL	_workCtr
                                    1-  739     	.line	194, "main.c"; 	if(((PORTA & 0x20) == 0 || chrgStatus == 2) && workStatus == 0 && keyCount == 0)
     007E 0Arr                      1-  740     	BTRSS	_PORTA,5
     007F 3rrr                      1-  741     	LGOTO	_00190_DS_
                                    1-  742     	BANKSEL	_chrgStatus
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1-  743     	MOVR	_chrgStatus,W
     0082 2402                      1-  744     	XORIA	0x02
     0083 0903                      1-  745     	BTRSS	STATUS,2
     0084 3rrr                      1-  746     	LGOTO	_00193_DS_
     0085                           1-  747     _00190_DS_:
                                    1-  748     	BANKSEL	_workStatus
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 01rr                      1-  749     	MOVR	_workStatus,W
     0087 0903                      1-  750     	BTRSS	STATUS,2
     0088 3rrr                      1-  751     	LGOTO	_00193_DS_
                                    1-  752     	BANKSEL	_keyCount
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 01rr                      1-  753     	MOVR	_keyCount,W
     008B 0903                      1-  754     	BTRSS	STATUS,2
     008C 3rrr                      1-  755     	LGOTO	_00193_DS_
                                    1-  756     	.line	196, "main.c"; 	closeStatus();
     008D 2rrr                      1-  757     	LCALL	_closeStatus
                                    1-  758     	.line	197, "main.c"; 	if(++sleepDelay > 50)
                                    1-  759     	BANKSEL	_sleepDelay
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 05rr                      1-  760     	INCR	_sleepDelay,F
                                    1-  761     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  762     ;;unsigned compare: left >= lit (0x33=51), size=1
     0090 2133                      1-  763     	MOVIA	0x33
     0091 04rr                      1-  764     	SUBAR	_sleepDelay,W
     0092 0803                      1-  765     	BTRSS	STATUS,0
     0093 3rrr                      1-  766     	LGOTO	_00193_DS_
                                    1-  767     	.line	198, "main.c"; 	gotoSleep();
     0094 2rrr                      1-  768     	LCALL	_gotoSleep
     0095 3rrr                      1-  769     	LGOTO	_00193_DS_
                                    1-  770     	.line	201, "main.c"; 	}
                                    1-  771     	RETURN	
     0096 0010                      3-   26 m1      ret
                                    1-  772     ; exit point of _main
                                    1-  774     ;***
                                    1-  775     ;  pBlock Stats: dbName = C
                                    1-  776     ;***
                                    1-  777     ;has an exit
                                    1-  778     ;; Starting pCode block
                                    1-  779     .segment "code"; module=main, function=_closeStatus
     0000                           1-  781     _closeStatus:
                                    1-  782     ; 2 exit points
                                    1-  783     	.line	573, "main.c"; 	LED1OFF();
     0000 1Drr                      1-  784     	BCR	_PORTB,3
                                    1-  785     	.line	574, "main.c"; 	LED2OFF();
     0001 1Frr                      1-  786     	BCR	_PORTA,7
                                    1-  787     	.line	575, "main.c"; 	LED3OFF();
     0002 1Frr                      1-  788     	BCR	_PORTA,6
                                    1-  789     	.line	576, "main.c"; 	LED4OFF();
     0003 18rr                      1-  790     	BSR	_PORTB,1
                                    1-  791     	.line	577, "main.c"; 	CHRGON();
     0004 19rr                      1-  792     	BSR	_PORTB,2
                                    1-  793     	.line	578, "main.c"; 	POWEROFF();
     0005 1Crr                      1-  794     	BCR	_PORTA,0
                                    1-  795     	.line	579, "main.c"; 	}
                                    1-  796     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  797     ; exit point of _closeStatus
                                    1-  799     ;***
                                    1-  800     ;  pBlock Stats: dbName = C
                                    1-  801     ;***
                                    1-  802     ;has an exit
                                    1-  803     ;1 compiler assigned register :
                                    1-  804     ;   r0x101C
                                    1-  805     ;; Starting pCode block
                                    1-  806     .segment "code"; module=main, function=_keyRead
                                    1-  808     ;local variable name mapping:
     0000                           1-  810     _keyRead:
                                    1-  811     ; 2 exit points
                                    1-  812     	.line	538, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  813     	BANKSEL	r0x101C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  814     	MOVAR	r0x101C
                                    1-  815     	.line	540, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  816     	MOVR	r0x101C,W
     0003 0D03                      1-  817     	BTRSC	STATUS,2
     0004 3rrr                      1-  818     	LGOTO	_00543_DS_
                                    1-  819     	.line	542, "main.c"; 	keyCount++;
                                    1-  820     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  821     	INCR	_keyCount,F
                                    1-  822     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  823     	.line	543, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  824     	MOVIA	0xc8
     0008 04rr                      1-  825     	SUBAR	_keyCount,W
     0009 0803                      1-  826     	BTRSS	STATUS,0
     000A 3rrr                      1-  827     	LGOTO	_00544_DS_
                                    1-  828     	.line	545, "main.c"; 	keyCount = 200;
     000B 21C8                      1-  829     	MOVIA	0xc8
     000C 00rr                      1-  830     	MOVAR	_keyCount
                                    1-  831     	.line	546, "main.c"; 	if(!longPressFlag)
                                    1-  832     	BANKSEL	_longPressFlag
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  833     	MOVR	_longPressFlag,W
     000F 0903                      1-  834     	BTRSS	STATUS,2
     0010 3rrr                      1-  835     	LGOTO	_00544_DS_
                                    1-  836     	.line	548, "main.c"; 	longPressFlag = 1;
     0011 2101                      1-  837     	MOVIA	0x01
     0012 00rr                      1-  838     	MOVAR	_longPressFlag
                                    1-  839     	.line	549, "main.c"; 	return 2;
     0013 2102                      1-  840     	MOVIA	0x02
     0014 3rrr                      1-  841     	LGOTO	_00545_DS_
                                    1-  842     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1-  843     _00543_DS_:
                                    1-  844     	.line	555, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1-  845     	MOVIA	0xc8
                                    1-  846     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 04rr                      1-  847     	SUBAR	_keyCount,W
     0018 0803                      1-  848     	BTRSS	STATUS,0
     0019 3rrr                      1-  849     	LGOTO	_00540_DS_
                                    1-  850     	.line	557, "main.c"; 	keyCount = 0;
     001A 02rr                      1-  851     	CLRR	_keyCount
                                    1-  852     	.line	558, "main.c"; 	longPressFlag = 0;
                                    1-  853     	BANKSEL	_longPressFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1-  854     	CLRR	_longPressFlag
                                    1-  855     	.line	559, "main.c"; 	return	0;
     001D 2100                      1-  856     	MOVIA	0x00
     001E 3rrr                      1-  857     	LGOTO	_00545_DS_
                                    1-  858     ;;unsigned compare: left < lit (0x8=8), size=1
     001F                           1-  859     _00540_DS_:
                                    1-  860     	.line	561, "main.c"; 	else if(keyCount >= 8)
     001F 2108                      1-  861     	MOVIA	0x08
                                    1-  862     	BANKSEL	_keyCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1-  863     	SUBAR	_keyCount,W
     0022 0803                      1-  864     	BTRSS	STATUS,0
     0023 3rrr                      1-  865     	LGOTO	_00541_DS_
                                    1-  866     	.line	563, "main.c"; 	keyCount = 0;
     0024 02rr                      1-  867     	CLRR	_keyCount
                                    1-  868     	.line	564, "main.c"; 	return	1;
     0025 2101                      1-  869     	MOVIA	0x01
     0026 3rrr                      1-  870     	LGOTO	_00545_DS_
     0027                           1-  871     _00541_DS_:
                                    1-  872     	.line	566, "main.c"; 	keyCount = 0;
                                    1-  873     	BANKSEL	_keyCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1-  874     	CLRR	_keyCount
     0029                           1-  875     _00544_DS_:
                                    1-  876     	.line	568, "main.c"; 	return 0;
     0029 2100                      1-  877     	MOVIA	0x00
     002A                           1-  878     _00545_DS_:
                                    1-  879     	.line	569, "main.c"; 	}
                                    1-  880     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1-  881     ; exit point of _keyRead
                                    1-  883     ;***
                                    1-  884     ;  pBlock Stats: dbName = C
                                    1-  885     ;***
                                    1-  886     ;has an exit
                                    1-  887     ;5 compiler assigned registers:
                                    1-  888     ;   r0x101D
                                    1-  889     ;   STK00
                                    1-  890     ;   r0x101E
                                    1-  891     ;   r0x101F
                                    1-  892     ;   r0x1020
                                    1-  893     ;; Starting pCode block
                                    1-  894     .segment "code"; module=main, function=_delay
                                    1-  896     ;local variable name mapping:
     0000                           1-  901     _delay:
                                    1-  902     ; 2 exit points
                                    1-  903     	.line	532, "main.c"; 	void delay(u16t time)
                                    1-  904     	BANKSEL	r0x101D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  905     	MOVAR	r0x101D
     0002 01rr                      1-  906     	MOVR	STK00,W
                                    1-  907     	BANKSEL	r0x101E
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  908     	MOVAR	r0x101E
                                    1-  909     	.line	534, "main.c"; 	for(u16t i=0;i<time;i++);
                                    1-  910     	BANKSEL	r0x101F
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  911     	CLRR	r0x101F
                                    1-  912     	BANKSEL	r0x1020
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  913     	CLRR	r0x1020
     0009                           1-  914     _00517_DS_:
                                    1-  915     	BANKSEL	r0x101D
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  916     	MOVR	r0x101D,W
                                    1-  917     	BANKSEL	r0x1020
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  918     	SUBAR	r0x1020,W
     000D 0903                      1-  919     	BTRSS	STATUS,2
     000E 3rrr                      1-  920     	LGOTO	_00528_DS_
                                    1-  921     	BANKSEL	r0x101E
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  922     	MOVR	r0x101E,W
                                    1-  923     	BANKSEL	r0x101F
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  924     	SUBAR	r0x101F,W
     0013                           1-  925     _00528_DS_:
     0013 0C03                      1-  926     	BTRSC	STATUS,0
     0014 3rrr                      1-  927     	LGOTO	_00519_DS_
                                    1-  928     	BANKSEL	r0x101F
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  929     	INCR	r0x101F,F
     0017 0903                      1-  930     	BTRSS	STATUS,2
     0018 3rrr                      1-  931     	LGOTO	_00001_DS_
                                    1-  932     	BANKSEL	r0x1020
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  933     	INCR	r0x1020,F
     001B                           1-  934     _00001_DS_:
     001B 3rrr                      1-  935     	LGOTO	_00517_DS_
     001C                           1-  936     _00519_DS_:
                                    1-  937     	.line	535, "main.c"; 	}
                                    1-  938     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  939     ; exit point of _delay
                                    1-  941     ;***
                                    1-  942     ;  pBlock Stats: dbName = C
                                    1-  943     ;***
                                    1-  944     ;has an exit
                                    1-  945     ;; Starting pCode block
                                    1-  946     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  948     _F_wait_eoc:
                                    1-  949     ; 2 exit points
     0000                           1-  950     _00510_DS_:
                                    1-  951     	.line	526, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  952     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  953     	LGOTO	_00510_DS_
                                    1-  954     	.line	528, "main.c"; 	}
                                    1-  955     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  956     ; exit point of _F_wait_eoc
                                    1-  958     ;***
                                    1-  959     ;  pBlock Stats: dbName = C
                                    1-  960     ;***
                                    1-  961     ;has an exit
                                    1-  962     ;; Starting pCode block
                                    1-  963     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  965     _gotoSleep:
                                    1-  966     ; 2 exit points
                                    1-  967     	.line	501, "main.c"; 	workStatus = 0;
                                    1-  968     	BANKSEL	_workStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  969     	CLRR	_workStatus
                                    1-  970     	.line	503, "main.c"; 	chrgStatus = 0;
                                    1-  971     	BANKSEL	_chrgStatus
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  972     	CLRR	_chrgStatus
                                    1-  973     	.line	504, "main.c"; 	firstLow = 0;
                                    1-  974     	BANKSEL	_firstLow
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  975     	CLRR	_firstLow
                                    1-  976     	.line	505, "main.c"; 	sleepDelay = 0;
                                    1-  977     	BANKSEL	_sleepDelay
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  978     	CLRR	_sleepDelay
                                    1-  979     	.line	506, "main.c"; 	workStep = 0;
                                    1-  980     	BANKSEL	_workStep
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1-  981     	CLRR	_workStep
                                    1-  982     	.line	507, "main.c"; 	AWUCON = 0x28;
     000A 2128                      1-  983     	MOVIA	0x28
     000B 00rr                      1-  984     	MOVAR	_AWUCON
                                    1-  985     	.line	508, "main.c"; 	BWUCON = 0x01;
     000C 2101                      1-  986     	MOVIA	0x01
     000D 00rr                      1-  987     	MOVAR	_BWUCON
                                    1-  988     	.line	509, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     000E 210B                      1-  989     	MOVIA	0x0b
     000F 00rr                      1-  990     	MOVAR	_INTE
                                    1-  991     	.line	510, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0010 2118                      1-  992     	MOVIA	0x18
     0011 00rr                      1-  993     	MOVAR	_PCON
                                    1-  994     	.line	511, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0012 02rr                      1-  995     	CLRR	_INTF
                                    1-  996     	.line	512, "main.c"; 	CLRWDT();
     0013 0002                      1-  997     	clrwdt
                                    1-  998     	.line	513, "main.c"; 	ENI();
     0014 0004                      1-  999     	ENI
                                    1- 1000     	.line	514, "main.c"; 	SLEEP();
     0015 0001                      1- 1001     	sleep
                                    1- 1002     	.line	515, "main.c"; 	AWUCON = 0x00;
     0016 02rr                      1- 1003     	CLRR	_AWUCON
                                    1- 1004     	.line	516, "main.c"; 	BWUCON = 0x00;
     0017 02rr                      1- 1005     	CLRR	_BWUCON
                                    1- 1006     	.line	517, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0018 2101                      1- 1007     	MOVIA	0x01
     0019 00rr                      1- 1008     	MOVAR	_INTE
                                    1- 1009     	.line	518, "main.c"; 	INTF = 0;
     001A 02rr                      1- 1010     	CLRR	_INTF
                                    1- 1011     	.line	520, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     001B 21B8                      1- 1012     	MOVIA	0xb8
     001C 00rr                      1- 1013     	MOVAR	_PCON
                                    1- 1014     	.line	522, "main.c"; 	}
                                    1- 1015     	RETURN	
     001D 0010                      3-   26 m1      ret
                                    1- 1016     ; exit point of _gotoSleep
                                    1- 1018     ;***
                                    1- 1019     ;  pBlock Stats: dbName = C
                                    1- 1020     ;***
                                    1- 1021     ;has an exit
                                    1- 1022     ;functions called:
                                    1- 1023     ;   _delay
                                    1- 1024     ;   _F_wait_eoc
                                    1- 1025     ;   _delay
                                    1- 1026     ;   _F_wait_eoc
                                    1- 1027     ;7 compiler assigned registers:
                                    1- 1028     ;   r0x1021
                                    1- 1029     ;   STK00
                                    1- 1030     ;   r0x1022
                                    1- 1031     ;   r0x1023
                                    1- 1032     ;   r0x1024
                                    1- 1033     ;   r0x1025
                                    1- 1034     ;   r0x1026
                                    1- 1035     ;; Starting pCode block
                                    1- 1036     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1038     ;local variable name mapping:
     0000                           1- 1041     _F_AIN4_Convert:
                                    1- 1042     ; 2 exit points
                                    1- 1043     	.line	483, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1044     	BANKSEL	r0x1021
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1045     	MOVAR	r0x1021
                                    1- 1046     	.line	485, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1047     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1048     	CLRR	_R_AIN4_DATA_LB
                                    1- 1049     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1050     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1051     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1052     	.line	487, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1053     	MOVIA	0x94
     0008 00rr                      1- 1054     	MOVAR	_ADMD
                                    1- 1055     	.line	488, "main.c"; 	delay(200);	
     0009 21C8                      1- 1056     	MOVIA	0xc8
     000A 00rr                      1- 1057     	MOVAR	STK00
     000B 2100                      1- 1058     	MOVIA	0x00
     000C 2rrr                      1- 1059     	LCALL	_delay
                                    1- 1060     	.line	489, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1061     	MOVIA	0x01
                                    1- 1062     	BANKSEL	r0x1022
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1063     	MOVAR	r0x1022
     0010                           1- 1064     _00499_DS_:
                                    1- 1065     	BANKSEL	r0x1022
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1066     	MOVR	r0x1022,W
                                    1- 1067     	BANKSEL	r0x1021
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1068     	SUBAR	r0x1021,W
     0014 0803                      1- 1069     	BTRSS	STATUS,0
     0015 3rrr                      1- 1070     	LGOTO	_00501_DS_
                                    1- 1071     	.line	491, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1072     	BSR	_ADMDbits,6
                                    1- 1073     	.line	492, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1074     	LCALL	_F_wait_eoc
                                    1- 1075     	.line	493, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1076     	MOVIA	0x0f
     0019 10rr                      1- 1077     	ANDAR	_ADR,W
                                    1- 1078     ;;3	MOVAR	r0x1023
                                    1- 1079     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1080     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1081     	.line	494, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1- 1082     	MOVR	_ADD,W
                                    1- 1083     	BANKSEL	r0x1023
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1084     	MOVAR	r0x1023
                                    1- 1085     ;;1	CLRR	r0x1024
                                    1- 1086     ;;109	MOVR	r0x1023,W
                                    1- 1087     ;;107	MOVAR	r0x1025
     001F 2100                      1- 1088     	MOVIA	0x00
                                    1- 1089     	BANKSEL	r0x1026
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1090     	MOVAR	r0x1026
                                    1- 1091     ;;108	MOVR	r0x1025,W
                                    1- 1092     	BANKSEL	r0x1023
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1093     	MOVR	r0x1023,W
                                    1- 1094     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1095     	ADDAR	_R_AIN4_DATA,F
                                    1- 1096     	BANKSEL	r0x1026
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1097     	MOVR	r0x1026,W
     0028 0C03                      1- 1098     	BTRSC	STATUS,0
     0029 05rr                      1- 1099     	INCR	r0x1026,W
     002A 0D03                      1- 1100     	BTRSC	STATUS,2
     002B 3rrr                      1- 1101     	LGOTO	_00002_DS_
                                    1- 1102     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1103     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1- 1104     _00002_DS_:
                                    1- 1105     	.line	489, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1106     	BANKSEL	r0x1022
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1107     	INCR	r0x1022,F
     0030 3rrr                      1- 1108     	LGOTO	_00499_DS_
     0031                           1- 1109     _00501_DS_:
                                    1- 1110     	.line	496, "main.c"; 	}
                                    1- 1111     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1112     ; exit point of _F_AIN4_Convert
                                    1- 1114     ;***
                                    1- 1115     ;  pBlock Stats: dbName = C
                                    1- 1116     ;***
                                    1- 1117     ;has an exit
                                    1- 1118     ;functions called:
                                    1- 1119     ;   _delay
                                    1- 1120     ;   _F_wait_eoc
                                    1- 1121     ;   _delay
                                    1- 1122     ;   _F_wait_eoc
                                    1- 1123     ;7 compiler assigned registers:
                                    1- 1124     ;   r0x1027
                                    1- 1125     ;   STK00
                                    1- 1126     ;   r0x1028
                                    1- 1127     ;   r0x1029
                                    1- 1128     ;   r0x102A
                                    1- 1129     ;   r0x102B
                                    1- 1130     ;   r0x102C
                                    1- 1131     ;; Starting pCode block
                                    1- 1132     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1134     ;local variable name mapping:
     0000                           1- 1137     _F_AIN2_Convert:
                                    1- 1138     ; 2 exit points
                                    1- 1139     	.line	467, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1140     	BANKSEL	r0x1027
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1141     	MOVAR	r0x1027
                                    1- 1142     	.line	469, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1143     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1144     	CLRR	_R_AIN2_DATA_LB
                                    1- 1145     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1146     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1147     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1148     	.line	471, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1149     	MOVIA	0x92
     0008 00rr                      1- 1150     	MOVAR	_ADMD
                                    1- 1151     	.line	472, "main.c"; 	delay(200);	
     0009 21C8                      1- 1152     	MOVIA	0xc8
     000A 00rr                      1- 1153     	MOVAR	STK00
     000B 2100                      1- 1154     	MOVIA	0x00
     000C 2rrr                      1- 1155     	LCALL	_delay
                                    1- 1156     	.line	473, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1157     	MOVIA	0x01
                                    1- 1158     	BANKSEL	r0x1028
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1159     	MOVAR	r0x1028
     0010                           1- 1160     _00490_DS_:
                                    1- 1161     	BANKSEL	r0x1028
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1162     	MOVR	r0x1028,W
                                    1- 1163     	BANKSEL	r0x1027
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1164     	SUBAR	r0x1027,W
     0014 0803                      1- 1165     	BTRSS	STATUS,0
     0015 3rrr                      1- 1166     	LGOTO	_00492_DS_
                                    1- 1167     	.line	475, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1168     	BSR	_ADMDbits,6
                                    1- 1169     	.line	476, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1170     	LCALL	_F_wait_eoc
                                    1- 1171     	.line	477, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1172     	MOVIA	0x0f
     0019 10rr                      1- 1173     	ANDAR	_ADR,W
                                    1- 1174     ;;3	MOVAR	r0x1029
                                    1- 1175     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1176     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1177     	.line	478, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1178     	MOVR	_ADD,W
                                    1- 1179     	BANKSEL	r0x1029
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1180     	MOVAR	r0x1029
                                    1- 1181     ;;1	CLRR	r0x102A
                                    1- 1182     ;;106	MOVR	r0x1029,W
                                    1- 1183     ;;104	MOVAR	r0x102B
     001F 2100                      1- 1184     	MOVIA	0x00
                                    1- 1185     	BANKSEL	r0x102C
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1186     	MOVAR	r0x102C
                                    1- 1187     ;;105	MOVR	r0x102B,W
                                    1- 1188     	BANKSEL	r0x1029
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1189     	MOVR	r0x1029,W
                                    1- 1190     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1191     	ADDAR	_R_AIN2_DATA,F
                                    1- 1192     	BANKSEL	r0x102C
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1193     	MOVR	r0x102C,W
     0028 0C03                      1- 1194     	BTRSC	STATUS,0
     0029 05rr                      1- 1195     	INCR	r0x102C,W
     002A 0D03                      1- 1196     	BTRSC	STATUS,2
     002B 3rrr                      1- 1197     	LGOTO	_00003_DS_
                                    1- 1198     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1199     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1200     _00003_DS_:
                                    1- 1201     	.line	473, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1202     	BANKSEL	r0x1028
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1203     	INCR	r0x1028,F
     0030 3rrr                      1- 1204     	LGOTO	_00490_DS_
     0031                           1- 1205     _00492_DS_:
                                    1- 1206     	.line	480, "main.c"; 	}
                                    1- 1207     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1208     ; exit point of _F_AIN2_Convert
                                    1- 1210     ;***
                                    1- 1211     ;  pBlock Stats: dbName = C
                                    1- 1212     ;***
                                    1- 1213     ;has an exit
                                    1- 1214     ;functions called:
                                    1- 1215     ;   _delay
                                    1- 1216     ;   _F_wait_eoc
                                    1- 1217     ;   _delay
                                    1- 1218     ;   _F_wait_eoc
                                    1- 1219     ;7 compiler assigned registers:
                                    1- 1220     ;   r0x102D
                                    1- 1221     ;   STK00
                                    1- 1222     ;   r0x102E
                                    1- 1223     ;   r0x102F
                                    1- 1224     ;   r0x1030
                                    1- 1225     ;   r0x1031
                                    1- 1226     ;   r0x1032
                                    1- 1227     ;; Starting pCode block
                                    1- 1228     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1- 1230     ;local variable name mapping:
     0000                           1- 1233     _F_AIN1_Convert:
                                    1- 1234     ; 2 exit points
                                    1- 1235     	.line	452, "main.c"; 	void F_AIN1_Convert(char count)
                                    1- 1236     	BANKSEL	r0x102D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1237     	MOVAR	r0x102D
                                    1- 1238     	.line	454, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
                                    1- 1239     	BANKSEL	_R_AIN1_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1240     	CLRR	_R_AIN1_DATA_LB
                                    1- 1241     	BANKSEL	_R_AIN1_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1242     	CLRR	_R_AIN1_DATA
     0006 02rr                      1- 1243     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1244     	.line	456, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0007 2191                      1- 1245     	MOVIA	0x91
     0008 00rr                      1- 1246     	MOVAR	_ADMD
                                    1- 1247     	.line	457, "main.c"; 	delay(200);	
     0009 21C8                      1- 1248     	MOVIA	0xc8
     000A 00rr                      1- 1249     	MOVAR	STK00
     000B 2100                      1- 1250     	MOVIA	0x00
     000C 2rrr                      1- 1251     	LCALL	_delay
                                    1- 1252     	.line	458, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1253     	MOVIA	0x01
                                    1- 1254     	BANKSEL	r0x102E
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1255     	MOVAR	r0x102E
     0010                           1- 1256     _00481_DS_:
                                    1- 1257     	BANKSEL	r0x102E
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1258     	MOVR	r0x102E,W
                                    1- 1259     	BANKSEL	r0x102D
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1260     	SUBAR	r0x102D,W
     0014 0803                      1- 1261     	BTRSS	STATUS,0
     0015 3rrr                      1- 1262     	LGOTO	_00483_DS_
                                    1- 1263     	.line	460, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1264     	BSR	_ADMDbits,6
                                    1- 1265     	.line	461, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1266     	LCALL	_F_wait_eoc
                                    1- 1267     	.line	462, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1268     	MOVIA	0x0f
     0019 10rr                      1- 1269     	ANDAR	_ADR,W
                                    1- 1270     ;;3	MOVAR	r0x102F
                                    1- 1271     	BANKSEL	_R_AIN1_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1272     	ADDAR	_R_AIN1_DATA_LB,F
                                    1- 1273     	.line	463, "main.c"; 	R_AIN1_DATA    += ADD; 
     001C 01rr                      1- 1274     	MOVR	_ADD,W
                                    1- 1275     	BANKSEL	r0x102F
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1276     	MOVAR	r0x102F
                                    1- 1277     ;;1	CLRR	r0x1030
                                    1- 1278     ;;103	MOVR	r0x102F,W
                                    1- 1279     ;;101	MOVAR	r0x1031
     001F 2100                      1- 1280     	MOVIA	0x00
                                    1- 1281     	BANKSEL	r0x1032
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1282     	MOVAR	r0x1032
                                    1- 1283     ;;102	MOVR	r0x1031,W
                                    1- 1284     	BANKSEL	r0x102F
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1285     	MOVR	r0x102F,W
                                    1- 1286     	BANKSEL	_R_AIN1_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1287     	ADDAR	_R_AIN1_DATA,F
                                    1- 1288     	BANKSEL	r0x1032
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1289     	MOVR	r0x1032,W
     0028 0C03                      1- 1290     	BTRSC	STATUS,0
     0029 05rr                      1- 1291     	INCR	r0x1032,W
     002A 0D03                      1- 1292     	BTRSC	STATUS,2
     002B 3rrr                      1- 1293     	LGOTO	_00004_DS_
                                    1- 1294     	BANKSEL	_R_AIN1_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1295     	ADDAR	(_R_AIN1_DATA + 1),F
     002E                           1- 1296     _00004_DS_:
                                    1- 1297     	.line	458, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1298     	BANKSEL	r0x102E
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1299     	INCR	r0x102E,F
     0030 3rrr                      1- 1300     	LGOTO	_00481_DS_
     0031                           1- 1301     _00483_DS_:
                                    1- 1302     	.line	465, "main.c"; 	}
                                    1- 1303     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1304     ; exit point of _F_AIN1_Convert
                                    1- 1306     ;***
                                    1- 1307     ;  pBlock Stats: dbName = C
                                    1- 1308     ;***
                                    1- 1309     ;has an exit
                                    1- 1310     ;functions called:
                                    1- 1311     ;   _F_AIN2_Convert
                                    1- 1312     ;   _F_AIN2_Convert
                                    1- 1313     ;4 compiler assigned registers:
                                    1- 1314     ;   r0x1033
                                    1- 1315     ;   r0x1034
                                    1- 1316     ;   r0x1035
                                    1- 1317     ;   r0x1036
                                    1- 1318     ;; Starting pCode block
                                    1- 1319     .segment "code"; module=main, function=_checkBat
     0000                           1- 1321     _checkBat:
                                    1- 1322     ; 2 exit points
                                    1- 1323     	.line	394, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1324     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1325     	CLRR	_R_AIN2_DATA_LB
                                    1- 1326     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1327     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1328     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1329     	.line	395, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1330     	MOVIA	0x08
     0006 2rrr                      1- 1331     	LCALL	_F_AIN2_Convert
                                    1- 1332     	.line	396, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1333     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1334     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1335     	ANDIA	0xf0
     000A 00rr                      1- 1336     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1337     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1338     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1339     	ANDIA	0x0f
     000E 11rr                      1- 1340     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1341     	XORAR	_R_AIN2_DATA,F
                                    1- 1342     	.line	397, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1343     	MOVIA	0xf0
                                    1- 1344     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1345     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1346     	.line	398, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1347     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1348     	BANKSEL	r0x1035
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1349     	MOVAR	r0x1035
                                    1- 1350     ;;1	MOVAR	r0x1033
                                    1- 1351     ;;1	CLRR	r0x1034
                                    1- 1352     ;;100	MOVR	r0x1033,W
     0016 2100                      1- 1353     	MOVIA	0x00
                                    1- 1354     	BANKSEL	r0x1036
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1355     	MOVAR	r0x1036
                                    1- 1356     	BANKSEL	r0x1035
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1357     	MOVR	r0x1035,W
                                    1- 1358     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1359     	ADDAR	_R_AIN2_DATA,F
                                    1- 1360     	BANKSEL	r0x1036
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1361     	MOVR	r0x1036,W
     001F 0C03                      1- 1362     	BTRSC	STATUS,0
     0020 05rr                      1- 1363     	INCR	r0x1036,W
     0021 0D03                      1- 1364     	BTRSC	STATUS,2
     0022 3rrr                      1- 1365     	LGOTO	_00005_DS_
                                    1- 1366     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1367     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1368     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1369     _00005_DS_:
                                    1- 1370     	.line	399, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1371     	BCR	STATUS,0
                                    1- 1372     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1373     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1374     	RRR	_R_AIN2_DATA,F
                                    1- 1375     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1376     	BCR	STATUS,0
     002A 13rr                      1- 1377     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1378     	RRR	_R_AIN2_DATA,F
                                    1- 1379     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1380     	BCR	STATUS,0
     002D 13rr                      1- 1381     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1382     	RRR	_R_AIN2_DATA,F
                                    1- 1383     	.line	400, "main.c"; 	if(debug)
                                    1- 1384     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1385     	MOVR	_debug,W
     0031 0D03                      1- 1386     	BTRSC	STATUS,2
     0032 3rrr                      1- 1387     	LGOTO	_00403_DS_
                                    1- 1388     	.line	402, "main.c"; 	R_AIN2_DATA = BAT;
     0033 2113                      1- 1389     	MOVIA	0x13
                                    1- 1390     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1391     	MOVAR	_R_AIN2_DATA
     0036 210C                      1- 1392     	MOVIA	0x0c
     0037 00rr                      1- 1393     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1394     ;;unsigned compare: left < lit (0x92C=2348), size=2
     0038                           1- 1395     _00403_DS_:
                                    1- 1396     	.line	405, "main.c"; 	if(R_AIN2_DATA < 2348)
     0038 2109                      1- 1397     	MOVIA	0x09
                                    1- 1398     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1399     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1400     	BTRSS	STATUS,2
     003C 3rrr                      1- 1401     	LGOTO	_00467_DS_
     003D 212C                      1- 1402     	MOVIA	0x2c
     003E 04rr                      1- 1403     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1404     _00467_DS_:
     003F 0C03                      1- 1405     	BTRSC	STATUS,0
     0040 3rrr                      1- 1406     	LGOTO	_00427_DS_
                                    1- 1407     	.line	407, "main.c"; 	if(++batLowTime > 50)
                                    1- 1408     	BANKSEL	_batLowTime
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 05rr                      1- 1409     	INCR	_batLowTime,F
                                    1- 1410     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1411     ;;unsigned compare: left >= lit (0x33=51), size=1
     0043 2133                      1- 1412     	MOVIA	0x33
     0044 04rr                      1- 1413     	SUBAR	_batLowTime,W
     0045 0803                      1- 1414     	BTRSS	STATUS,0
     0046 3rrr                      1- 1415     	LGOTO	_00429_DS_
                                    1- 1416     	.line	409, "main.c"; 	batStatus = 3;//缺电状态
     0047 2103                      1- 1417     	MOVIA	0x03
                                    1- 1418     	BANKSEL	_batStatus
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 00rr                      1- 1419     	MOVAR	_batStatus
     004A 3rrr                      1- 1420     	LGOTO	_00429_DS_
                                    1- 1421     ;;unsigned compare: left < lit (0xA2F=2607), size=2
     004B                           1- 1422     _00427_DS_:
                                    1- 1423     	.line	412, "main.c"; 	else if(R_AIN2_DATA < 2607)
     004B 210A                      1- 1424     	MOVIA	0x0a
                                    1- 1425     	BANKSEL	_R_AIN2_DATA
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 04rr                      1- 1426     	SUBAR	(_R_AIN2_DATA + 1),W
     004E 0903                      1- 1427     	BTRSS	STATUS,2
     004F 3rrr                      1- 1428     	LGOTO	_00469_DS_
     0050 212F                      1- 1429     	MOVIA	0x2f
     0051 04rr                      1- 1430     	SUBAR	_R_AIN2_DATA,W
     0052                           1- 1431     _00469_DS_:
     0052 0C03                      1- 1432     	BTRSC	STATUS,0
     0053 3rrr                      1- 1433     	LGOTO	_00424_DS_
                                    1- 1434     	.line	414, "main.c"; 	batLowTime = 0;
                                    1- 1435     	BANKSEL	_batLowTime
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 02rr                      1- 1436     	CLRR	_batLowTime
                                    1- 1437     	.line	415, "main.c"; 	if(shandeng == 0)
                                    1- 1438     	BANKSEL	_shandeng
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 01rr                      1- 1439     	MOVR	_shandeng,W
     0058 0903                      1- 1440     	BTRSS	STATUS,2
     0059 3rrr                      1- 1441     	LGOTO	_00407_DS_
                                    1- 1442     	.line	416, "main.c"; 	batStatus = 1;//低电状态
     005A 2101                      1- 1443     	MOVIA	0x01
                                    1- 1444     	BANKSEL	_batStatus
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 00rr                      1- 1445     	MOVAR	_batStatus
                                    1- 1446     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1447     ;;unsigned compare: left >= lit (0x961=2401), size=2
     005D                           1- 1448     _00407_DS_:
                                    1- 1449     	.line	417, "main.c"; 	if(R_AIN2_DATA > 2400)
     005D 2109                      1- 1450     	MOVIA	0x09
                                    1- 1451     	BANKSEL	_R_AIN2_DATA
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 04rr                      1- 1452     	SUBAR	(_R_AIN2_DATA + 1),W
     0060 0903                      1- 1453     	BTRSS	STATUS,2
     0061 3rrr                      1- 1454     	LGOTO	_00470_DS_
     0062 2161                      1- 1455     	MOVIA	0x61
     0063 04rr                      1- 1456     	SUBAR	_R_AIN2_DATA,W
     0064                           1- 1457     _00470_DS_:
     0064 0803                      1- 1458     	BTRSS	STATUS,0
     0065 3rrr                      1- 1459     	LGOTO	_00429_DS_
                                    1- 1460     	.line	418, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1461     	BANKSEL	_firstLow
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 02rr                      1- 1462     	CLRR	_firstLow
     0068 3rrr                      1- 1463     	LGOTO	_00429_DS_
                                    1- 1464     ;;unsigned compare: left < lit (0xC08=3080), size=2
     0069                           1- 1465     _00424_DS_:
                                    1- 1466     	.line	420, "main.c"; 	else if(R_AIN2_DATA < 3080)		//16.55
     0069 210C                      1- 1467     	MOVIA	0x0c
                                    1- 1468     	BANKSEL	_R_AIN2_DATA
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 04rr                      1- 1469     	SUBAR	(_R_AIN2_DATA + 1),W
     006C 0903                      1- 1470     	BTRSS	STATUS,2
     006D 3rrr                      1- 1471     	LGOTO	_00471_DS_
     006E 2108                      1- 1472     	MOVIA	0x08
     006F 04rr                      1- 1473     	SUBAR	_R_AIN2_DATA,W
     0070                           1- 1474     _00471_DS_:
     0070 0C03                      1- 1475     	BTRSC	STATUS,0
     0071 3rrr                      1- 1476     	LGOTO	_00421_DS_
                                    1- 1477     	.line	422, "main.c"; 	if(batStatus == 2)
                                    1- 1478     	BANKSEL	_batStatus
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 01rr                      1- 1479     	MOVR	_batStatus,W
     0074 2402                      1- 1480     	XORIA	0x02
     0075 0903                      1- 1481     	BTRSS	STATUS,2
     0076 3rrr                      1- 1482     	LGOTO	_00416_DS_
                                    1- 1483     ;;unsigned compare: left < lit (0xBFE=3070), size=2
                                    1- 1484     	.line	424, "main.c"; 	if(R_AIN2_DATA < 3070)
     0077 210B                      1- 1485     	MOVIA	0x0b
                                    1- 1486     	BANKSEL	_R_AIN2_DATA
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 04rr                      1- 1487     	SUBAR	(_R_AIN2_DATA + 1),W
     007A 0903                      1- 1488     	BTRSS	STATUS,2
     007B 3rrr                      1- 1489     	LGOTO	_00472_DS_
     007C 21FE                      1- 1490     	MOVIA	0xfe
     007D 04rr                      1- 1491     	SUBAR	_R_AIN2_DATA,W
     007E                           1- 1492     _00472_DS_:
     007E 0C03                      1- 1493     	BTRSC	STATUS,0
     007F 3rrr                      1- 1494     	LGOTO	_00429_DS_
                                    1- 1495     	.line	426, "main.c"; 	batStatus = 0;//正常状态
                                    1- 1496     	BANKSEL	_batStatus
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 02rr                      1- 1497     	CLRR	_batStatus
                                    1- 1498     	.line	427, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1499     	BANKSEL	_firstLow
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 02rr                      1- 1500     	CLRR	_firstLow
     0084 3rrr                      1- 1501     	LGOTO	_00429_DS_
     0085                           1- 1502     _00416_DS_:
                                    1- 1503     	.line	430, "main.c"; 	else if(batStatus > 0 && (++batLowTime > 50))
                                    1- 1504     	BANKSEL	_batStatus
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 01rr                      1- 1505     	MOVR	_batStatus,W
     0087 0D03                      1- 1506     	BTRSC	STATUS,2
     0088 3rrr                      1- 1507     	LGOTO	_00429_DS_
                                    1- 1508     	BANKSEL	_batLowTime
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 05rr                      1- 1509     	INCR	_batLowTime,F
                                    1- 1510     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1511     ;;unsigned compare: left >= lit (0x33=51), size=1
     008B 2133                      1- 1512     	MOVIA	0x33
     008C 04rr                      1- 1513     	SUBAR	_batLowTime,W
     008D 0803                      1- 1514     	BTRSS	STATUS,0
     008E 3rrr                      1- 1515     	LGOTO	_00429_DS_
                                    1- 1516     	.line	432, "main.c"; 	batStatus = 0;//正常状态
                                    1- 1517     	BANKSEL	_batStatus
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 02rr                      1- 1518     	CLRR	_batStatus
                                    1- 1519     	.line	433, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1520     	BANKSEL	_firstLow
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 02rr                      1- 1521     	CLRR	_firstLow
     0093 3rrr                      1- 1522     	LGOTO	_00429_DS_
     0094                           1- 1523     _00421_DS_:
                                    1- 1524     	.line	439, "main.c"; 	batLowTime = 0;
                                    1- 1525     	BANKSEL	_batLowTime
     0094 rrrr                      3-   71 m1      .banksel ram_address
     0095 02rr                      1- 1526     	CLRR	_batLowTime
                                    1- 1527     	.line	440, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1528     	BANKSEL	_firstLow
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 02rr                      1- 1529     	CLRR	_firstLow
                                    1- 1530     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1531     ;;unsigned compare: left >= lit (0xC0E=3086), size=2
                                    1- 1532     	.line	441, "main.c"; 	if(R_AIN2_DATA > 3085)
     0098 210C                      1- 1533     	MOVIA	0x0c
                                    1- 1534     	BANKSEL	_R_AIN2_DATA
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 04rr                      1- 1535     	SUBAR	(_R_AIN2_DATA + 1),W
     009B 0903                      1- 1536     	BTRSS	STATUS,2
     009C 3rrr                      1- 1537     	LGOTO	_00474_DS_
     009D 210E                      1- 1538     	MOVIA	0x0e
     009E 04rr                      1- 1539     	SUBAR	_R_AIN2_DATA,W
     009F                           1- 1540     _00474_DS_:
     009F 0803                      1- 1541     	BTRSS	STATUS,0
     00A0 3rrr                      1- 1542     	LGOTO	_00429_DS_
                                    1- 1543     	.line	443, "main.c"; 	batStatus = 2;//满电状态
     00A1 2102                      1- 1544     	MOVIA	0x02
                                    1- 1545     	BANKSEL	_batStatus
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 00rr                      1- 1546     	MOVAR	_batStatus
     00A4                           1- 1547     _00429_DS_:
                                    1- 1548     	.line	448, "main.c"; 	}
                                    1- 1549     	RETURN	
     00A4 0010                      3-   26 m1      ret
                                    1- 1550     ; exit point of _checkBat
                                    1- 1552     ;***
                                    1- 1553     ;  pBlock Stats: dbName = C
                                    1- 1554     ;***
                                    1- 1555     ;has an exit
                                    1- 1556     ;functions called:
                                    1- 1557     ;   _F_AIN1_Convert
                                    1- 1558     ;   _F_AIN1_Convert
                                    1- 1559     ;4 compiler assigned registers:
                                    1- 1560     ;   r0x1037
                                    1- 1561     ;   r0x1038
                                    1- 1562     ;   r0x1039
                                    1- 1563     ;   r0x103A
                                    1- 1564     ;; Starting pCode block
                                    1- 1565     .segment "code"; module=main, function=_checkInV
     0000                           1- 1567     _checkInV:
                                    1- 1568     ; 2 exit points
                                    1- 1569     	.line	363, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA_LB = 0x00;
                                    1- 1570     	BANKSEL	_R_AIN1_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1571     	CLRR	_R_AIN1_DATA_LB
                                    1- 1572     	BANKSEL	_R_AIN1_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1573     	CLRR	_R_AIN1_DATA
     0004 02rr                      1- 1574     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1575     	.line	364, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1576     	MOVIA	0x08
     0006 2rrr                      1- 1577     	LCALL	_F_AIN1_Convert
                                    1- 1578     	.line	365, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1579     	BANKSEL	_R_AIN1_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1580     	SWAPR	(_R_AIN1_DATA + 1),W
     0009 22F0                      1- 1581     	ANDIA	0xf0
     000A 00rr                      1- 1582     	MOVAR	(_R_AIN1_DATA + 1)
     000B 15rr                      1- 1583     	SWAPR	_R_AIN1_DATA,W
     000C 00rr                      1- 1584     	MOVAR	_R_AIN1_DATA
     000D 220F                      1- 1585     	ANDIA	0x0f
     000E 11rr                      1- 1586     	IORAR	(_R_AIN1_DATA + 1),F
     000F 12rr                      1- 1587     	XORAR	_R_AIN1_DATA,F
                                    1- 1588     	.line	366, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1589     	MOVIA	0xf0
                                    1- 1590     	BANKSEL	_R_AIN1_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1591     	ANDAR	_R_AIN1_DATA_LB,F
                                    1- 1592     	.line	367, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1593     	MOVR	_R_AIN1_DATA_LB,W
                                    1- 1594     	BANKSEL	r0x1039
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1595     	MOVAR	r0x1039
                                    1- 1596     ;;1	MOVAR	r0x1037
                                    1- 1597     ;;1	CLRR	r0x1038
                                    1- 1598     ;;99	MOVR	r0x1037,W
     0016 2100                      1- 1599     	MOVIA	0x00
                                    1- 1600     	BANKSEL	r0x103A
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1601     	MOVAR	r0x103A
                                    1- 1602     	BANKSEL	r0x1039
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1603     	MOVR	r0x1039,W
                                    1- 1604     	BANKSEL	_R_AIN1_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1605     	ADDAR	_R_AIN1_DATA,F
                                    1- 1606     	BANKSEL	r0x103A
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1607     	MOVR	r0x103A,W
     001F 0C03                      1- 1608     	BTRSC	STATUS,0
     0020 05rr                      1- 1609     	INCR	r0x103A,W
     0021 0D03                      1- 1610     	BTRSC	STATUS,2
     0022 3rrr                      1- 1611     	LGOTO	_00006_DS_
                                    1- 1612     	BANKSEL	_R_AIN1_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1613     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1- 1614     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1615     _00006_DS_:
                                    1- 1616     	.line	368, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1617     	BCR	STATUS,0
                                    1- 1618     	BANKSEL	_R_AIN1_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1619     	RRR	(_R_AIN1_DATA + 1),F
     0028 13rr                      1- 1620     	RRR	_R_AIN1_DATA,F
                                    1- 1621     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1622     	BCR	STATUS,0
     002A 13rr                      1- 1623     	RRR	(_R_AIN1_DATA + 1),F
     002B 13rr                      1- 1624     	RRR	_R_AIN1_DATA,F
                                    1- 1625     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1626     	BCR	STATUS,0
     002D 13rr                      1- 1627     	RRR	(_R_AIN1_DATA + 1),F
     002E 13rr                      1- 1628     	RRR	_R_AIN1_DATA,F
                                    1- 1629     	.line	369, "main.c"; 	if(debug)
                                    1- 1630     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1631     	MOVR	_debug,W
     0031 0D03                      1- 1632     	BTRSC	STATUS,2
     0032 3rrr                      1- 1633     	LGOTO	_00374_DS_
                                    1- 1634     	.line	371, "main.c"; 	R_AIN1_DATA = INV;
     0033 218B                      1- 1635     	MOVIA	0x8b
                                    1- 1636     	BANKSEL	_R_AIN1_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1637     	MOVAR	_R_AIN1_DATA
     0036 210C                      1- 1638     	MOVIA	0x0c
     0037 00rr                      1- 1639     	MOVAR	(_R_AIN1_DATA + 1)
                                    1- 1640     ;;unsigned compare: left < lit (0xC8A=3210), size=2
     0038                           1- 1641     _00374_DS_:
                                    1- 1642     	.line	373, "main.c"; 	if(R_AIN1_DATA < 3210)
     0038 210C                      1- 1643     	MOVIA	0x0c
                                    1- 1644     	BANKSEL	_R_AIN1_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1645     	SUBAR	(_R_AIN1_DATA + 1),W
     003B 0903                      1- 1646     	BTRSS	STATUS,2
     003C 3rrr                      1- 1647     	LGOTO	_00396_DS_
     003D 218A                      1- 1648     	MOVIA	0x8a
     003E 04rr                      1- 1649     	SUBAR	_R_AIN1_DATA,W
     003F                           1- 1650     _00396_DS_:
     003F 0C03                      1- 1651     	BTRSC	STATUS,0
     0040 3rrr                      1- 1652     	LGOTO	_00378_DS_
                                    1- 1653     	.line	375, "main.c"; 	inLowTime++;
                                    1- 1654     	BANKSEL	_inLowTime
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 05rr                      1- 1655     	INCR	_inLowTime,F
     0043 3rrr                      1- 1656     	LGOTO	_00379_DS_
     0044                           1- 1657     _00378_DS_:
                                    1- 1658     	.line	379, "main.c"; 	inLowTime = 0;
                                    1- 1659     	BANKSEL	_inLowTime
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 02rr                      1- 1660     	CLRR	_inLowTime
                                    1- 1661     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1662     ;;unsigned compare: left >= lit (0xC95=3221), size=2
                                    1- 1663     	.line	380, "main.c"; 	if(R_AIN1_DATA > 3220)
     0046 210C                      1- 1664     	MOVIA	0x0c
                                    1- 1665     	BANKSEL	_R_AIN1_DATA
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 04rr                      1- 1666     	SUBAR	(_R_AIN1_DATA + 1),W
     0049 0903                      1- 1667     	BTRSS	STATUS,2
     004A 3rrr                      1- 1668     	LGOTO	_00397_DS_
     004B 2195                      1- 1669     	MOVIA	0x95
     004C 04rr                      1- 1670     	SUBAR	_R_AIN1_DATA,W
     004D                           1- 1671     _00397_DS_:
     004D 0803                      1- 1672     	BTRSS	STATUS,0
     004E 3rrr                      1- 1673     	LGOTO	_00379_DS_
                                    1- 1674     	.line	381, "main.c"; 	chrgStatus = 1;
     004F 2101                      1- 1675     	MOVIA	0x01
                                    1- 1676     	BANKSEL	_chrgStatus
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1- 1677     	MOVAR	_chrgStatus
                                    1- 1678     ;;unsigned compare: left < lit (0x64=100), size=1
     0052                           1- 1679     _00379_DS_:
                                    1- 1680     	.line	384, "main.c"; 	if(inLowTime >= 100)
     0052 2164                      1- 1681     	MOVIA	0x64
                                    1- 1682     	BANKSEL	_inLowTime
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 04rr                      1- 1683     	SUBAR	_inLowTime,W
     0055 0803                      1- 1684     	BTRSS	STATUS,0
     0056 3rrr                      1- 1685     	LGOTO	_00382_DS_
                                    1- 1686     	.line	386, "main.c"; 	inLowTime = 100;
     0057 2164                      1- 1687     	MOVIA	0x64
     0058 00rr                      1- 1688     	MOVAR	_inLowTime
                                    1- 1689     	.line	387, "main.c"; 	chrgStatus = 2;
     0059 2102                      1- 1690     	MOVIA	0x02
                                    1- 1691     	BANKSEL	_chrgStatus
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1- 1692     	MOVAR	_chrgStatus
     005C                           1- 1693     _00382_DS_:
                                    1- 1694     	.line	390, "main.c"; 	}
                                    1- 1695     	RETURN	
     005C 0010                      3-   26 m1      ret
                                    1- 1696     ; exit point of _checkInV
                                    1- 1698     ;***
                                    1- 1699     ;  pBlock Stats: dbName = C
                                    1- 1700     ;***
                                    1- 1701     ;has an exit
                                    1- 1702     ;functions called:
                                    1- 1703     ;   _delay
                                    1- 1704     ;   _delay
                                    1- 1705     ;1 compiler assigned register :
                                    1- 1706     ;   STK00
                                    1- 1707     ;; Starting pCode block
                                    1- 1708     .segment "code"; module=main, function=_initAD
     0000                           1- 1710     _initAD:
                                    1- 1711     ; 2 exit points
                                    1- 1712     	.line	338, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_Quarter_VDD ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 218B                      1- 1713     	MOVIA	0x8b
     0001 00rr                      1- 1714     	MOVAR	_ADMD
                                    1- 1715     	.line	343, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1716     	CLRR	_ADVREFH
                                    1- 1717     	.line	348, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1718     	MOVIA	0x10
     0004 00rr                      1- 1719     	MOVAR	_ADR
                                    1- 1720     	.line	350, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1721     	MOVIA	0x03
     0006 00rr                      1- 1722     	MOVAR	_ADCR
                                    1- 1723     	.line	353, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1724     	BSR	_ADMDbits,4
                                    1- 1725     	.line	354, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1726     	MOVIA	0x64
     0009 00rr                      1- 1727     	MOVAR	STK00
     000A 2100                      1- 1728     	MOVIA	0x00
     000B 2rrr                      1- 1729     	LCALL	_delay
                                    1- 1730     	.line	357, "main.c"; 	}
                                    1- 1731     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 1732     ; exit point of _initAD
                                    1- 1734     ;***
                                    1- 1735     ;  pBlock Stats: dbName = C
                                    1- 1736     ;***
                                    1- 1737     ;has an exit
                                    1- 1738     ;functions called:
                                    1- 1739     ;   _keyRead
                                    1- 1740     ;   _closeStatus
                                    1- 1741     ;   _gotoSleep
                                    1- 1742     ;   _keyRead
                                    1- 1743     ;   _closeStatus
                                    1- 1744     ;   _gotoSleep
                                    1- 1745     ;1 compiler assigned register :
                                    1- 1746     ;   r0x103B
                                    1- 1747     ;; Starting pCode block
                                    1- 1748     .segment "code"; module=main, function=_keyCtr
                                    1- 1750     ;local variable name mapping:
     0000                           1- 1752     _keyCtr:
                                    1- 1753     ; 2 exit points
                                    1- 1754     	.line	307, "main.c"; 	if(chrgStatus == 1)
                                    1- 1755     	BANKSEL	_chrgStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1756     	MOVR	_chrgStatus,W
     0002 2401                      1- 1757     	XORIA	0x01
     0003 0903                      1- 1758     	BTRSS	STATUS,2
     0004 3rrr                      1- 1759     	LGOTO	_00355_DS_
                                    1- 1760     	.line	310, "main.c"; 	workStatus = 1;
     0005 2101                      1- 1761     	MOVIA	0x01
                                    1- 1762     	BANKSEL	_workStatus
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1763     	MOVAR	_workStatus
     0008                           1- 1764     _00355_DS_:
                                    1- 1765     	.line	314, "main.c"; 	if(chrgStatus == 0 || chrgStatus == 2)
                                    1- 1766     	BANKSEL	_chrgStatus
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1- 1767     	MOVR	_chrgStatus,W
     000A 0D03                      1- 1768     	BTRSC	STATUS,2
     000B 3rrr                      1- 1769     	LGOTO	_00361_DS_
     000C 01rr                      1- 1770     	MOVR	_chrgStatus,W
     000D 2402                      1- 1771     	XORIA	0x02
     000E 0903                      1- 1772     	BTRSS	STATUS,2
     000F 3rrr                      1- 1773     	LGOTO	_00364_DS_
     0010                           1- 1774     _00361_DS_:
                                    1- 1775     	.line	316, "main.c"; 	char kClick = keyRead(0x01 & ~PORTB);
     0010 07rr                      1- 1776     	COMR	_PORTB,W
                                    1- 1777     	BANKSEL	r0x103B
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 1778     	MOVAR	r0x103B
     0013 2101                      1- 1779     	MOVIA	0x01
     0014 10rr                      1- 1780     	ANDAR	r0x103B,F
     0015 01rr                      1- 1781     	MOVR	r0x103B,W
     0016 2rrr                      1- 1782     	LCALL	_keyRead
                                    1- 1783     	BANKSEL	r0x103B
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1784     	MOVAR	r0x103B
                                    1- 1785     	.line	317, "main.c"; 	if(kClick == 2)
     0019 2402                      1- 1786     	XORIA	0x02
     001A 0903                      1- 1787     	BTRSS	STATUS,2
     001B 3rrr                      1- 1788     	LGOTO	_00364_DS_
                                    1- 1789     	.line	319, "main.c"; 	if(workStatus == 0 )
                                    1- 1790     	BANKSEL	_workStatus
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 1791     	MOVR	_workStatus,W
     001E 0903                      1- 1792     	BTRSS	STATUS,2
     001F 3rrr                      1- 1793     	LGOTO	_00357_DS_
                                    1- 1794     	.line	321, "main.c"; 	workStatus = 1;
     0020 2101                      1- 1795     	MOVIA	0x01
     0021 00rr                      1- 1796     	MOVAR	_workStatus
     0022 3rrr                      1- 1797     	LGOTO	_00364_DS_
     0023                           1- 1798     _00357_DS_:
                                    1- 1799     	.line	326, "main.c"; 	workStatus = 0;
                                    1- 1800     	BANKSEL	_workStatus
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 02rr                      1- 1801     	CLRR	_workStatus
                                    1- 1802     	.line	327, "main.c"; 	closeStatus();
     0025 2rrr                      1- 1803     	LCALL	_closeStatus
                                    1- 1804     	.line	328, "main.c"; 	gotoSleep();
     0026 2rrr                      1- 1805     	LCALL	_gotoSleep
     0027                           1- 1806     _00364_DS_:
                                    1- 1807     	.line	332, "main.c"; 	}
                                    1- 1808     	RETURN	
     0027 0010                      3-   26 m1      ret
                                    1- 1809     ; exit point of _keyCtr
                                    1- 1811     ;***
                                    1- 1812     ;  pBlock Stats: dbName = C
                                    1- 1813     ;***
                                    1- 1814     ;has an exit
                                    1- 1815     ;functions called:
                                    1- 1816     ;   _checkBat
                                    1- 1817     ;   _checkBat
                                    1- 1818     ;; Starting pCode block
                                    1- 1819     .segment "code"; module=main, function=_workCtr
     0000                           1- 1821     _workCtr:
                                    1- 1822     ; 2 exit points
                                    1- 1823     	.line	239, "main.c"; 	checkBat();
     0000 2rrr                      1- 1824     	LCALL	_checkBat
                                    1- 1825     	.line	240, "main.c"; 	if(PORTA & 0x20)
     0001 0Arr                      1- 1826     	BTRSS	_PORTA,5
     0002 3rrr                      1- 1827     	LGOTO	_00297_DS_
                                    1- 1828     	.line	243, "main.c"; 	if(batStatus == 2 || chrgStatus == 2)
                                    1- 1829     	BANKSEL	_batStatus
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 01rr                      1- 1830     	MOVR	_batStatus,W
     0005 2402                      1- 1831     	XORIA	0x02
     0006 0D03                      1- 1832     	BTRSC	STATUS,2
     0007 3rrr                      1- 1833     	LGOTO	_00278_DS_
                                    1- 1834     	BANKSEL	_chrgStatus
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1- 1835     	MOVR	_chrgStatus,W
     000A 2402                      1- 1836     	XORIA	0x02
     000B 0903                      1- 1837     	BTRSS	STATUS,2
     000C 3rrr                      1- 1838     	LGOTO	_00279_DS_
     000D                           1- 1839     _00278_DS_:
                                    1- 1840     	.line	245, "main.c"; 	LED1OFF();		//充满了，灭灯
     000D 1Drr                      1- 1841     	BCR	_PORTB,3
                                    1- 1842     	.line	246, "main.c"; 	CHRGOFF();
     000E 1Drr                      1- 1843     	BCR	_PORTB,2
     000F 3rrr                      1- 1844     	LGOTO	_00280_DS_
     0010                           1- 1845     _00279_DS_:
                                    1- 1846     	.line	250, "main.c"; 	LED1ON();
     0010 19rr                      1- 1847     	BSR	_PORTB,3
     0011                           1- 1848     _00280_DS_:
                                    1- 1849     	.line	254, "main.c"; 	if(batStatus == 1 && chrgStatus == 2)
                                    1- 1850     	BANKSEL	_batStatus
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 1851     	MOVR	_batStatus,W
     0013 2401                      1- 1852     	XORIA	0x01
     0014 0903                      1- 1853     	BTRSS	STATUS,2
     0015 3rrr                      1- 1854     	LGOTO	_00283_DS_
                                    1- 1855     	BANKSEL	_chrgStatus
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1856     	MOVR	_chrgStatus,W
     0018 2402                      1- 1857     	XORIA	0x02
     0019 0D03                      1- 1858     	BTRSC	STATUS,2
                                    1- 1859     	.line	256, "main.c"; 	LED4ON();
     001A 1Crr                      1- 1860     	BCR	_PORTB,1
     001B                           1- 1861     _00283_DS_:
                                    1- 1862     	.line	259, "main.c"; 	if(chrgStatus == 1)
                                    1- 1863     	BANKSEL	_chrgStatus
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 1864     	MOVR	_chrgStatus,W
     001D 2401                      1- 1865     	XORIA	0x01
     001E 0903                      1- 1866     	BTRSS	STATUS,2
     001F 3rrr                      1- 1867     	LGOTO	_00298_DS_
                                    1- 1868     	.line	261, "main.c"; 	firstLow = 0;
                                    1- 1869     	BANKSEL	_firstLow
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 02rr                      1- 1870     	CLRR	_firstLow
     0022 3rrr                      1- 1871     	LGOTO	_00298_DS_
     0023                           1- 1872     _00297_DS_:
                                    1- 1873     	.line	267, "main.c"; 	LED1OFF();		//未充电,电池供电
     0023 1Drr                      1- 1874     	BCR	_PORTB,3
                                    1- 1875     	.line	268, "main.c"; 	if(workStatus == 1 && batStatus < 3)
                                    1- 1876     	BANKSEL	_workStatus
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1877     	MOVR	_workStatus,W
     0026 2401                      1- 1878     	XORIA	0x01
     0027 0903                      1- 1879     	BTRSS	STATUS,2
     0028 3rrr                      1- 1880     	LGOTO	_00288_DS_
                                    1- 1881     ;;unsigned compare: left < lit (0x3=3), size=1
     0029 2103                      1- 1882     	MOVIA	0x03
                                    1- 1883     	BANKSEL	_batStatus
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 04rr                      1- 1884     	SUBAR	_batStatus,W
     002C 0803                      1- 1885     	BTRSS	STATUS,0
                                    1- 1886     	.line	270, "main.c"; 	LED2ON();
     002D 1Brr                      1- 1887     	BSR	_PORTA,7
     002E                           1- 1888     _00288_DS_:
                                    1- 1889     	.line	272, "main.c"; 	if(batStatus == 1)
                                    1- 1890     	BANKSEL	_batStatus
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1- 1891     	MOVR	_batStatus,W
     0030 2401                      1- 1892     	XORIA	0x01
     0031 0903                      1- 1893     	BTRSS	STATUS,2
     0032 3rrr                      1- 1894     	LGOTO	_00294_DS_
                                    1- 1895     	.line	274, "main.c"; 	LED4ON();
     0033 1Crr                      1- 1896     	BCR	_PORTB,1
     0034 3rrr                      1- 1897     	LGOTO	_00298_DS_
     0035                           1- 1898     _00294_DS_:
                                    1- 1899     	.line	276, "main.c"; 	else if(batStatus == 0 || batStatus == 2)
                                    1- 1900     	BANKSEL	_batStatus
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1901     	MOVR	_batStatus,W
     0037 0D03                      1- 1902     	BTRSC	STATUS,2
     0038 3rrr                      1- 1903     	LGOTO	_00290_DS_
     0039 01rr                      1- 1904     	MOVR	_batStatus,W
     003A 2402                      1- 1905     	XORIA	0x02
     003B 0D03                      1- 1906     	BTRSC	STATUS,2
     003C                           1- 1907     _00290_DS_:
                                    1- 1908     	.line	278, "main.c"; 	LED4OFF();
     003C 18rr                      1- 1909     	BSR	_PORTB,1
     003D                           1- 1910     _00298_DS_:
                                    1- 1911     	.line	283, "main.c"; 	if(batStatus == 3 && chrgStatus != 1)
                                    1- 1912     	BANKSEL	_batStatus
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1- 1913     	MOVR	_batStatus,W
     003F 2403                      1- 1914     	XORIA	0x03
     0040 0903                      1- 1915     	BTRSS	STATUS,2
     0041 3rrr                      1- 1916     	LGOTO	_00306_DS_
                                    1- 1917     	BANKSEL	_chrgStatus
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1- 1918     	MOVR	_chrgStatus,W
     0044 2401                      1- 1919     	XORIA	0x01
     0045 0D03                      1- 1920     	BTRSC	STATUS,2
     0046 3rrr                      1- 1921     	LGOTO	_00306_DS_
                                    1- 1922     	.line	285, "main.c"; 	if(++firstLowTime >= 10)
                                    1- 1923     	BANKSEL	_firstLowTime
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 05rr                      1- 1924     	INCR	_firstLowTime,F
     0049 210A                      1- 1925     	MOVIA	0x0a
     004A 04rr                      1- 1926     	SUBAR	_firstLowTime,W
     004B 0803                      1- 1927     	BTRSS	STATUS,0
     004C 3rrr                      1- 1928     	LGOTO	_00306_DS_
                                    1- 1929     	.line	287, "main.c"; 	firstLowTime = 0;
     004D 02rr                      1- 1930     	CLRR	_firstLowTime
                                    1- 1931     	.line	288, "main.c"; 	POWEROFF();			//缺电状态关闭负载
     004E 1Crr                      1- 1932     	BCR	_PORTA,0
                                    1- 1933     	.line	289, "main.c"; 	LED2OFF();
     004F 1Frr                      1- 1934     	BCR	_PORTA,7
                                    1- 1935     	.line	290, "main.c"; 	if(firstLow == 0)
                                    1- 1936     	BANKSEL	_firstLow
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1- 1937     	MOVR	_firstLow,W
     0052 0903                      1- 1938     	BTRSS	STATUS,2
     0053 3rrr                      1- 1939     	LGOTO	_00300_DS_
                                    1- 1940     	.line	292, "main.c"; 	shandeng = 6;		//闪灯3次
     0054 2106                      1- 1941     	MOVIA	0x06
                                    1- 1942     	BANKSEL	_shandeng
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 00rr                      1- 1943     	MOVAR	_shandeng
     0057                           1- 1944     _00300_DS_:
                                    1- 1945     	.line	295, "main.c"; 	firstLow = 1;
     0057 2101                      1- 1946     	MOVIA	0x01
                                    1- 1947     	BANKSEL	_firstLow
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 00rr                      1- 1948     	MOVAR	_firstLow
     005A                           1- 1949     _00306_DS_:
                                    1- 1950     	.line	302, "main.c"; 	}
                                    1- 1951     	RETURN	
     005A 0010                      3-   26 m1      ret
                                    1- 1952     ; exit point of _workCtr
                                    1- 1954     ;***
                                    1- 1955     ;  pBlock Stats: dbName = C
                                    1- 1956     ;***
                                    1- 1957     ;has an exit
                                    1- 1958     ;functions called:
                                    1- 1959     ;   _checkInV
                                    1- 1960     ;   _checkInV
                                    1- 1961     ;; Starting pCode block
                                    1- 1962     .segment "code"; module=main, function=_chrgWork
     0000                           1- 1964     _chrgWork:
                                    1- 1965     ; 2 exit points
                                    1- 1966     	.line	208, "main.c"; 	if(PORTA & 0x20)
     0000 0Arr                      1- 1967     	BTRSS	_PORTA,5
     0001 3rrr                      1- 1968     	LGOTO	_00273_DS_
                                    1- 1969     	.line	210, "main.c"; 	checkInV();
     0002 2rrr                      1- 1970     	LCALL	_checkInV
                                    1- 1971     	.line	211, "main.c"; 	if(chrgStatus == 2)
                                    1- 1972     	BANKSEL	_chrgStatus
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 01rr                      1- 1973     	MOVR	_chrgStatus,W
     0005 2402                      1- 1974     	XORIA	0x02
     0006 0903                      1- 1975     	BTRSS	STATUS,2
     0007 3rrr                      1- 1976     	LGOTO	_00269_DS_
                                    1- 1977     	.line	214, "main.c"; 	if(workStatus == 1 && batStatus < 3)
                                    1- 1978     	BANKSEL	_workStatus
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1- 1979     	MOVR	_workStatus,W
     000A 2401                      1- 1980     	XORIA	0x01
     000B 0903                      1- 1981     	BTRSS	STATUS,2
     000C 3rrr                      1- 1982     	LGOTO	_00265_DS_
                                    1- 1983     ;;unsigned compare: left < lit (0x3=3), size=1
     000D 2103                      1- 1984     	MOVIA	0x03
                                    1- 1985     	BANKSEL	_batStatus
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 04rr                      1- 1986     	SUBAR	_batStatus,W
     0010 0C03                      1- 1987     	BTRSC	STATUS,0
     0011 3rrr                      1- 1988     	LGOTO	_00265_DS_
                                    1- 1989     	.line	216, "main.c"; 	LED2ON();
     0012 1Brr                      1- 1990     	BSR	_PORTA,7
                                    1- 1991     	.line	217, "main.c"; 	POWERON();
     0013 18rr                      1- 1992     	BSR	_PORTA,0
     0014 3rrr                      1- 1993     	LGOTO	_00273_DS_
     0015                           1- 1994     _00265_DS_:
                                    1- 1995     	.line	221, "main.c"; 	LED3OFF();
     0015 1Frr                      1- 1996     	BCR	_PORTA,6
                                    1- 1997     	.line	222, "main.c"; 	POWEROFF();
     0016 1Crr                      1- 1998     	BCR	_PORTA,0
     0017 3rrr                      1- 1999     	LGOTO	_00273_DS_
     0018                           1- 2000     _00269_DS_:
                                    1- 2001     	.line	227, "main.c"; 	LED3ON();
     0018 1Brr                      1- 2002     	BSR	_PORTA,6
     0019                           1- 2003     _00273_DS_:
                                    1- 2004     	.line	231, "main.c"; 	}
                                    1- 2005     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1- 2006     ; exit point of _chrgWork
                                    1- 2009     ;	code size estimation:
                                    1- 2010     ;	  737+  180 =   917 instructions ( 2194 byte)
                                    1- 2012     	end
                                    1- 2012     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    0000002E
_00003_DS_              Label    0000002E
_00004_DS_              Label    0000002E
_00005_DS_              Label    00000025
_00006_DS_              Label    00000025
_00007_DS_              Label    00000062
_00106_DS_              Label    0000002E
_00107_DS_              Label    0000002F
_00113_DS_              Label    00000037
_00120_DS_              Label    0000003C
_00122_DS_              Label    00000040
_00158_DS_              Label    00000041
_00166_DS_              Label    00000043
_00167_DS_              Label    00000049
_00179_DS_              Label    00000059
_00180_DS_              Label    00000072
_00190_DS_              Label    00000085
_00193_DS_              Label    0000001E
_00265_DS_              Label    00000015
_00269_DS_              Label    00000018
_00273_DS_              Label    00000019
_00278_DS_              Label    0000000D
_00279_DS_              Label    00000010
_00280_DS_              Label    00000011
_00283_DS_              Label    0000001B
_00288_DS_              Label    0000002E
_00290_DS_              Label    0000003C
_00294_DS_              Label    00000035
_00297_DS_              Label    00000023
_00298_DS_              Label    0000003D
_00300_DS_              Label    00000057
_00306_DS_              Label    0000005A
_00355_DS_              Label    00000008
_00357_DS_              Label    00000023
_00361_DS_              Label    00000010
_00364_DS_              Label    00000027
_00374_DS_              Label    00000038
_00378_DS_              Label    00000044
_00379_DS_              Label    00000052
_00382_DS_              Label    0000005C
_00396_DS_              Label    0000003F
_00397_DS_              Label    0000004D
_00403_DS_              Label    00000038
_00407_DS_              Label    0000005D
_00416_DS_              Label    00000085
_00421_DS_              Label    00000094
_00424_DS_              Label    00000069
_00427_DS_              Label    0000004B
_00429_DS_              Label    000000A4
_00467_DS_              Label    0000003F
_00469_DS_              Label    00000052
_00470_DS_              Label    00000064
_00471_DS_              Label    00000070
_00472_DS_              Label    0000007E
_00474_DS_              Label    0000009F
_00481_DS_              Label    00000010
_00483_DS_              Label    00000031
_00490_DS_              Label    00000010
_00492_DS_              Label    00000031
_00499_DS_              Label    00000010
_00501_DS_              Label    00000031
_00510_DS_              Label    00000000
_00517_DS_              Label    00000009
_00519_DS_              Label    0000001C
_00528_DS_              Label    00000013
_00540_DS_              Label    0000001F
_00541_DS_              Label    00000027
_00543_DS_              Label    00000015
_00544_DS_              Label    00000029
_00545_DS_              Label    0000002A
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_batLowTime             Label    00000000
_batStatus              Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBat               Label    00000000
_checkInV               Label    00000000
_chrgStatus             Label    00000000
_chrgWork               Label    00000000
_closeStatus            Label    00000000
_CMPCR                  Label    00000000
_count500ms             Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_F_AIN1_Convert         Label    00000000
_F_AIN2_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_firstLow               Label    00000000
_firstLowTime           Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_inLowTime              Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_longPressFlag          Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_overTime               Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN1_DATA            Label    00000000
_R_AIN1_DATA_LB         Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_shandeng               Label    00000000
_sleepDelay             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStatus             Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000051
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101C                 Label    00000000
r0x101D                 Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1032                 Label    00000000
r0x1035                 Label    00000000
r0x1036                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
