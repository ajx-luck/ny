
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_ADMDbits
                                    1-   24     	extern	_ADRbits
                                    1-   25     	extern	_ADVREFHbits
                                    1-   26     	extern	_ADCRbits
                                    1-   27     	extern	_AWUCONbits
                                    1-   28     	extern	_PACONbits
                                    1-   29     	extern	_INTEDGbits
                                    1-   30     	extern	_ANAENbits
                                    1-   31     	extern	_RFCbits
                                    1-   32     	extern	_INTE2bits
                                    1-   33     	extern	_INDF
                                    1-   34     	extern	_TMR0
                                    1-   35     	extern	_PCL
                                    1-   36     	extern	_STATUS
                                    1-   37     	extern	_FSR
                                    1-   38     	extern	_PORTA
                                    1-   39     	extern	_PORTB
                                    1-   40     	extern	_PCON
                                    1-   41     	extern	_BWUCON
                                    1-   42     	extern	_PCHBUF
                                    1-   43     	extern	_ABPLCON
                                    1-   44     	extern	_BPHCON
                                    1-   45     	extern	_INTE
                                    1-   46     	extern	_INTF
                                    1-   47     	extern	_ADMD
                                    1-   48     	extern	_ADR
                                    1-   49     	extern	_ADD
                                    1-   50     	extern	_ADVREFH
                                    1-   51     	extern	_ADCR
                                    1-   52     	extern	_AWUCON
                                    1-   53     	extern	_PACON
                                    1-   54     	extern	_INTEDG
                                    1-   55     	extern	_TMRH
                                    1-   56     	extern	_ANAEN
                                    1-   57     	extern	_RFC
                                    1-   58     	extern	_TM3RH
                                    1-   59     	extern	_INTE2
                                    1-   60     	extern	_TMR1
                                    1-   61     	extern	_T1CR1
                                    1-   62     	extern	_T1CR2
                                    1-   63     	extern	_PWM1DUTY
                                    1-   64     	extern	_PS1CV
                                    1-   65     	extern	_BZ1CR
                                    1-   66     	extern	_IRCR
                                    1-   67     	extern	_TBHP
                                    1-   68     	extern	_TBHD
                                    1-   69     	extern	_TMR2
                                    1-   70     	extern	_T2CR1
                                    1-   71     	extern	_T2CR2
                                    1-   72     	extern	_PWM2DUTY
                                    1-   73     	extern	_PS2CV
                                    1-   74     	extern	_BZ2CR
                                    1-   75     	extern	_OSCCR
                                    1-   76     	extern	_TMR3
                                    1-   77     	extern	_T3CR1
                                    1-   78     	extern	_T3CR2
                                    1-   79     	extern	_PWM3DUTY
                                    1-   80     	extern	_PS3CV
                                    1-   81     	extern	_BZ3CR
                                    1-   82     	extern	_IOSTA
                                    1-   83     	extern	_IOSTB
                                    1-   84     	extern	_APHCON
                                    1-   85     	extern	_PS0CV
                                    1-   86     	extern	_BODCON
                                    1-   87     	extern	_CMPCR
                                    1-   88     	extern	_PCON1
                                    1-   89     	extern	_T0MD
                                    1-   90     	extern	___sdcc_saved_fsr
                                    1-   91     	extern	___sdcc_saved_stk00
                                    1-   92     	extern	___sdcc_saved_stk01
                                    1-   93     	extern	__nyc_ny8_startup
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     ; global declarations
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     	extern	_F_wait_eoc
                                    1-   98     	extern	_F_AIN5_Convert
                                    1-   99     	extern	_checkBatAD
                                    1-  100     	extern	_initAD
                                    1-  101     	extern	_delay
                                    1-  102     	extern	_chrgCtr
                                    1-  103     	extern	_keyRead
                                    1-  104     	extern	_gotoSleep
                                    1-  105     	extern	_powerOff
                                    1-  106     	extern	_keyCtr
                                    1-  107     	extern	_ledCtr
                                    1-  108     	extern	_LedCtr2
                                    1-  109     	extern	_workCtr
                                    1-  110     	extern	_pwmStop
                                    1-  111     	extern	_pwmInit
                                    1-  112     	extern	_LED4ON
                                    1-  113     	extern	_LED3ON
                                    1-  114     	extern	_LED2ON
                                    1-  115     	extern	_LED1ON
                                    1-  116     	extern	_LedInput
                                    1-  117     	extern	_ledShow
                                    1-  118     	extern	_initSys
                                    1-  119     	extern	_fgCtr
                                    1-  120     	extern	_isr
                                    1-  121     	extern	_main
                                    1-  122     	extern	_LEDHON
                                    1-  123     	extern	_LEDLON
                                    1-  124     	extern	_LEDHOFF
                                    1-  125     	extern	_LEDLOFF
                                    1-  126     	extern	_Status
                                    1-  127     	extern	_duty
                                    1-  128     	extern	_intCount
                                    1-  129     	extern	_count500ms
                                    1-  130     	extern	_keyCount
                                    1-  131     	extern	_workStep
                                    1-  132     	extern	_ledStep
                                    1-  133     	extern	_fgCount
                                    1-  134     	extern	_fgPRD
                                    1-  135     	extern	_preFG
                                    1-  136     	extern	_maxDuty
                                    1-  137     	extern	_pwStep
                                    1-  138     	extern	_R_AIN5_DATA
                                    1-  139     	extern	_R_AIN5_DATA_LB
                                    1-  140     	extern	_chrgTime
                                    1-  141     	extern	_startStep
                                    1-  142     	extern	_sleepTime
                                    1-  143     	extern	_count200ms
                                    1-  144     	extern	_count1s
                                    1-  145     	extern	_count900s
                                    1-  146     	extern	_lowBatTime
                                    1-  147     	extern	_workStartFlag
                                    1-  149     	extern PSAVE
                                    1-  150     	extern SSAVE
                                    1-  151     	extern WSAVE
                                    1-  152     	extern STK02
                                    1-  153     	extern STK01
                                    1-  154     	extern STK00
                                    1-  156     .segment "uninit", 0x20000040
 20000040                           1-  157     PSAVE:
                                    1-  158     	.res 1
 20000041                           1-  159     SSAVE:
                                    1-  160     	.res 1
 20000042                           1-  161     WSAVE:
                                    1-  162     	.res 1
 20000043                           1-  163     STK02:
                                    1-  164     	.res 1
 20000044                           1-  165     STK01:
                                    1-  166     	.res 1
 20000045                           1-  167     STK00:
                                    1-  168     	.res 1
                                    1-  170     ;--------------------------------------------------------
                                    1-  171     ; global definitions
                                    1-  172     ;--------------------------------------------------------
                                    1-  173     .segment "uninit"
     0000                           1-  174     _R_AIN5_DATA:
                                    1-  175     	.res	2
                                    1-  178     .segment "uninit"
     0000                           1-  179     _R_AIN5_DATA_LB:
                                    1-  180     	.res	1
                                    1-  183     ;--------------------------------------------------------
                                    1-  184     ; absolute symbol definitions
                                    1-  185     ;--------------------------------------------------------
                                    1-  186     ;--------------------------------------------------------
                                    1-  187     ; compiler-defined variables
                                    1-  188     ;--------------------------------------------------------
                                    1-  189     .segment "uninit"
     0000                           1-  190     r0x102B:
                                    1-  191     	.res	1
                                    1-  192     .segment "uninit"
     0000                           1-  193     r0x1033:
                                    1-  194     	.res	1
                                    1-  195     .segment "uninit"
     0000                           1-  196     r0x1032:
                                    1-  197     	.res	1
                                    1-  198     .segment "uninit"
     0000                           1-  199     r0x1031:
                                    1-  200     	.res	1
                                    1-  201     .segment "uninit"
     0000                           1-  202     r0x1030:
                                    1-  203     	.res	1
                                    1-  204     .segment "uninit"
     0000                           1-  205     r0x102D:
                                    1-  206     	.res	1
                                    1-  207     .segment "uninit"
     0000                           1-  208     r0x102F:
                                    1-  209     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     r0x102E:
                                    1-  212     	.res	1
                                    1-  213     .segment "uninit"
     0000                           1-  214     r0x102C:
                                    1-  215     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     r0x101F:
                                    1-  218     	.res	1
                                    1-  219     .segment "uninit"
     0000                           1-  220     r0x1020:
                                    1-  221     	.res	1
                                    1-  222     .segment "uninit"
     0000                           1-  223     r0x1029:
                                    1-  224     	.res	1
                                    1-  225     .segment "uninit"
     0000                           1-  226     r0x102A:
                                    1-  227     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     r0x1021:
                                    1-  230     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     r0x1022:
                                    1-  233     	.res	1
                                    1-  234     .segment "uninit"
     0000                           1-  235     r0x1023:
                                    1-  236     	.res	1
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x1026:
                                    1-  239     	.res	1
                                    1-  240     ;--------------------------------------------------------
                                    1-  241     ; initialized data
                                    1-  242     ;--------------------------------------------------------
                                    1-  244     .segment "idata"
     0000                           1-  245     _Status:
     0000 0000                      1-  246     	dw	0x00
                                    1-  250     .segment "idata"
     0000                           1-  251     _duty:
     0000 0000 0000                 1-  252     	dw	0x00, 0x00
                                    1-  256     .segment "idata"
     0000                           1-  257     _intCount:
     0000 0000                      1-  258     	dw	0x00
                                    1-  262     .segment "idata"
     0000                           1-  263     _count500ms:
     0000 0000                      1-  264     	dw	0x00
                                    1-  268     .segment "idata"
     0000                           1-  269     _keyCount:
     0000 0000                      1-  270     	dw	0x00
                                    1-  274     .segment "idata"
     0000                           1-  275     _workStep:
     0000 0000                      1-  276     	dw	0x00
                                    1-  280     .segment "idata"
     0000                           1-  281     _ledStep:
     0000 0000                      1-  282     	dw	0x00
                                    1-  286     .segment "idata"
     0000                           1-  287     _fgCount:
     0000 0000 0000                 1-  288     	dw	0x00, 0x00
                                    1-  292     .segment "idata"
     0000                           1-  293     _fgPRD:
     0000 0000 0000                 1-  294     	dw	0x00, 0x00
                                    1-  298     .segment "idata"
     0000                           1-  299     _preFG:
     0000 0000                      1-  300     	dw	0x00
                                    1-  304     .segment "idata"
     0000                           1-  305     _maxDuty:
     0000 0000                      1-  306     	dw	0x00
                                    1-  310     .segment "idata"
     0000                           1-  311     _pwStep:
     0000 0000                      1-  312     	dw	0x00
                                    1-  316     .segment "idata"
     0000                           1-  317     _chrgTime:
     0000 0000 0000                 1-  318     	dw	0x00, 0x00
                                    1-  322     .segment "idata"
     0000                           1-  323     _startStep:
     0000 0000                      1-  324     	dw	0x00
                                    1-  328     .segment "idata"
     0000                           1-  329     _sleepTime:
     0000 0000 0000                 1-  330     	dw	0x00, 0x00
                                    1-  334     .segment "idata"
     0000                           1-  335     _count200ms:
     0000 0000                      1-  336     	dw	0x00
                                    1-  340     .segment "idata"
     0000                           1-  341     _count1s:
     0000 0000                      1-  342     	dw	0x00
                                    1-  346     .segment "idata"
     0000                           1-  347     _count900s:
     0000 0000 0000                 1-  348     	dw	0x00, 0x00
                                    1-  352     .segment "idata"
     0000                           1-  353     _lowBatTime:
     0000 0000                      1-  354     	dw	0x00
                                    1-  358     .segment "idata"
     0000                           1-  359     _workStartFlag:
     0000 0000                      1-  360     	dw	0x00
                                    1-  363     ;--------------------------------------------------------
                                    1-  364     ; overlayable items in internal ram 
                                    1-  365     ;--------------------------------------------------------
                                    1-  366     ;	udata_ovr
                                    1-  367     ;--------------------------------------------------------
                                    1-  368     ; reset vector 
                                    1-  369     ;--------------------------------------------------------
                                    1-  370     ORG	0x0000
     0000 3rrr                      1-  371     	LGOTO	__nyc_ny8_startup
                                    1-  372     ;--------------------------------------------------------
                                    1-  373     ; interrupt and initialization code
                                    1-  374     ;--------------------------------------------------------
                                    1-  375     ORG 0x0008
     0008 3rrr                      1-  376     	lgoto	__sdcc_interrupt
                                    1-  378     .segment "code"
     0000                           1-  379     __sdcc_interrupt:
                                    1-  380     ;***
                                    1-  381     ;  pBlock Stats: dbName = I
                                    1-  382     ;***
                                    1-  383     ;2 compiler assigned registers:
                                    1-  384     ;   STK00
                                    1-  385     ;   STK01
                                    1-  386     ;; Starting pCode block
     0000                           1-  387     _isr:
                                    1-  388     ; 0 exit points
                                    1-  389     	.line	80, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  390     	MOVAR	WSAVE
     0001 1503                      1-  391     	SWAPR	STATUS,W
     0002 0283                      1-  392     	CLRR	STATUS
     0003 00rr                      1-  393     	MOVAR	SSAVE
     0004 010A                      1-  394     	MOVR	PCHBUF,W
     0005 028A                      1-  395     	CLRR	PCHBUF
     0006 00rr                      1-  396     	MOVAR	PSAVE
     0007 0104                      1-  397     	MOVR	FSR,W
                                    1-  398     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  399     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  400     	MOVR	STK00,W
                                    1-  401     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  402     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  403     	MOVR	STK01,W
                                    1-  404     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  405     	MOVAR	___sdcc_saved_stk01
                                    1-  406     	.line	82, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  407     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  408     	LGOTO	_00119_DS_
                                    1-  409     	.line	84, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  410     	MOVIA	0x37
     0013 03rr                      1-  411     	ADDAR	_TMR0,F
                                    1-  412     	.line	86, "main.c"; 	if(++intCount >= 100)
                                    1-  413     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  414     	INCR	_intCount,F
                                    1-  415     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  416     	MOVIA	0x64
     0017 04rr                      1-  417     	SUBAR	_intCount,W
     0018 0803                      1-  418     	BTRSS	STATUS,0
     0019 3rrr                      1-  419     	LGOTO	_00119_DS_
                                    1-  420     	.line	88, "main.c"; 	IntFlag = 1;
                                    1-  421     	BANKSEL	_Status
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 18rr                      1-  422     	BSR	_Status,0
                                    1-  423     	.line	89, "main.c"; 	intCount = 0;
                                    1-  424     	BANKSEL	_intCount
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1-  425     	CLRR	_intCount
                                    1-  426     	.line	90, "main.c"; 	if(workStep)
                                    1-  427     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1-  428     	MOVR	_workStep,W
     0020 0D03                      1-  429     	BTRSC	STATUS,2
     0021 3rrr                      1-  430     	LGOTO	_00106_DS_
                                    1-  431     	.line	91, "main.c"; 	++fgCount;
                                    1-  432     	BANKSEL	_fgCount
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  433     	INCR	_fgCount,F
     0024 0D03                      1-  434     	BTRSC	STATUS,2
     0025 05rr                      1-  435     	INCR	(_fgCount + 1),F
     0026                           1-  436     _00106_DS_:
                                    1-  437     	.line	92, "main.c"; 	if(++count500ms >= 40)
                                    1-  438     	BANKSEL	_count500ms
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 05rr                      1-  439     	INCR	_count500ms,F
                                    1-  440     ;;unsigned compare: left < lit (0x28=40), size=1
     0028 2128                      1-  441     	MOVIA	0x28
     0029 04rr                      1-  442     	SUBAR	_count500ms,W
     002A 0C03                      1-  443     	BTRSC	STATUS,0
                                    1-  444     	.line	93, "main.c"; 	count500ms = 0;
     002B 02rr                      1-  445     	CLRR	_count500ms
                                    1-  446     	.line	94, "main.c"; 	if(++count200ms >= 20)
                                    1-  447     	BANKSEL	_count200ms
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  448     	INCR	_count200ms,F
     002E 2114                      1-  449     	MOVIA	0x14
     002F 04rr                      1-  450     	SUBAR	_count200ms,W
     0030 0C03                      1-  451     	BTRSC	STATUS,0
                                    1-  452     	.line	95, "main.c"; 	count200ms = 0;
     0031 02rr                      1-  453     	CLRR	_count200ms
                                    1-  454     	.line	96, "main.c"; 	if(++count1s >= 100)
                                    1-  455     	BANKSEL	_count1s
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 05rr                      1-  456     	INCR	_count1s,F
     0034 2164                      1-  457     	MOVIA	0x64
     0035 04rr                      1-  458     	SUBAR	_count1s,W
     0036 0803                      1-  459     	BTRSS	STATUS,0
     0037 3rrr                      1-  460     	LGOTO	_00119_DS_
                                    1-  461     	.line	98, "main.c"; 	count1s = 0;
     0038 02rr                      1-  462     	CLRR	_count1s
                                    1-  463     	.line	99, "main.c"; 	if(workStep)
                                    1-  464     	BANKSEL	_workStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  465     	MOVR	_workStep,W
     003B 0D03                      1-  466     	BTRSC	STATUS,2
     003C 3rrr                      1-  467     	LGOTO	_00112_DS_
                                    1-  468     	.line	101, "main.c"; 	++count900s;
                                    1-  469     	BANKSEL	_count900s
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 05rr                      1-  470     	INCR	_count900s,F
     003F 0D03                      1-  471     	BTRSC	STATUS,2
     0040 05rr                      1-  472     	INCR	(_count900s + 1),F
     0041 3rrr                      1-  473     	LGOTO	_00119_DS_
     0042                           1-  474     _00112_DS_:
                                    1-  475     	.line	105, "main.c"; 	count900s = 0;
                                    1-  476     	BANKSEL	_count900s
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 02rr                      1-  477     	CLRR	_count900s
     0044 02rr                      1-  478     	CLRR	(_count900s + 1)
     0045                           1-  479     _00119_DS_:
                                    1-  480     	.line	114, "main.c"; 	if(INTFbits.PABIF)
     0045 08rr                      1-  481     	BTRSS	_INTFbits,1
     0046 3rrr                      1-  482     	LGOTO	_00121_DS_
                                    1-  483     	.line	116, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0047 21FD                      1-  484     	MOVIA	0xfd
     0048 00rr                      1-  485     	MOVAR	_INTF
     0049                           1-  486     _00121_DS_:
                                    1-  487     	.line	119, "main.c"; 	INTF = 0;
     0049 02rr                      1-  488     	CLRR	_INTF
                                    1-  489     	.line	121, "main.c"; 	}
                                    1-  490     	BANKSEL	___sdcc_saved_stk01
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 01rr                      1-  491     	MOVR	___sdcc_saved_stk01,W
     004C 00rr                      1-  492     	MOVAR	STK01
                                    1-  493     	BANKSEL	___sdcc_saved_stk00
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1-  494     	MOVR	___sdcc_saved_stk00,W
     004F 00rr                      1-  495     	MOVAR	STK00
                                    1-  496     	BANKSEL	___sdcc_saved_fsr
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1-  497     	MOVR	___sdcc_saved_fsr,W
     0052 0084                      1-  498     	MOVAR	FSR
     0053 01rr                      1-  499     	MOVR	PSAVE,W
     0054 008A                      1-  500     	MOVAR	PCHBUF
     0055 0283                      1-  501     	CLRR	STATUS
     0056 15rr                      1-  502     	SWAPR	SSAVE,W
     0057 0083                      1-  503     	MOVAR	STATUS
     0058 15rr                      1-  504     	SWAPR	WSAVE,F
     0059 15rr                      1-  505     	SWAPR	WSAVE,W
     005A                           1-  506     END_OF_INTERRUPT:
     005A 0011                      1-  507     	RETIE	
                                    1-  509     ;--------------------------------------------------------
                                    1-  510     ; code
                                    1-  511     ;--------------------------------------------------------
                                    1-  512     ;***
                                    1-  513     ;  pBlock Stats: dbName = M
                                    1-  514     ;***
                                    1-  515     ;has an exit
                                    1-  516     ;functions called:
                                    1-  517     ;   _initSys
                                    1-  518     ;   _initAD
                                    1-  519     ;   _ledShow
                                    1-  520     ;   _fgCtr
                                    1-  521     ;   _keyCtr
                                    1-  522     ;   _checkBatAD
                                    1-  523     ;   _ledCtr
                                    1-  524     ;   _chrgCtr
                                    1-  525     ;   _LedCtr2
                                    1-  526     ;   _workCtr
                                    1-  527     ;   _gotoSleep
                                    1-  528     ;   _powerOff
                                    1-  529     ;   _pwmStop
                                    1-  530     ;   _delay
                                    1-  531     ;   _pwmStop
                                    1-  532     ;   _initSys
                                    1-  533     ;   _initAD
                                    1-  534     ;   _ledShow
                                    1-  535     ;   _fgCtr
                                    1-  536     ;   _keyCtr
                                    1-  537     ;   _checkBatAD
                                    1-  538     ;   _ledCtr
                                    1-  539     ;   _chrgCtr
                                    1-  540     ;   _LedCtr2
                                    1-  541     ;   _workCtr
                                    1-  542     ;   _gotoSleep
                                    1-  543     ;   _powerOff
                                    1-  544     ;   _pwmStop
                                    1-  545     ;   _delay
                                    1-  546     ;   _pwmStop
                                    1-  547     ;; Starting pCode block
                                    1-  548     .segment "code"; module=main, function=_main
     0000                           1-  550     _main:
                                    1-  551     ; 2 exit points
                                    1-  552     	.line	125, "main.c"; 	initSys();
     0000 2rrr                      1-  553     	LCALL	_initSys
                                    1-  554     	.line	126, "main.c"; 	initAD();
     0001 2rrr                      1-  555     	LCALL	_initAD
     0002                           1-  556     _00159_DS_:
                                    1-  557     	.line	129, "main.c"; 	ledShow();
     0002 2rrr                      1-  558     	LCALL	_ledShow
                                    1-  559     	.line	130, "main.c"; 	CLRWDT();
     0003 0002                      1-  560     	clrwdt
                                    1-  561     	.line	131, "main.c"; 	fgCtr();
     0004 2rrr                      1-  562     	LCALL	_fgCtr
                                    1-  563     	.line	132, "main.c"; 	if(!IntFlag)
                                    1-  564     	BANKSEL	_Status
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 08rr                      1-  565     	BTRSS	_Status,0
     0007 3rrr                      1-  566     	LGOTO	_00159_DS_
                                    1-  567     	.line	134, "main.c"; 	IntFlag = 0;
     0008 1Crr                      1-  568     	BCR	_Status,0
                                    1-  569     	.line	135, "main.c"; 	if((PORTA & 0x20) == 0)
                                    1-  570     	BANKSEL	_PORTA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 0Arr                      1-  571     	BTRSS	_PORTA,5
                                    1-  572     	.line	136, "main.c"; 	keyCtr();
     000B 2rrr                      1-  573     	LCALL	_keyCtr
                                    1-  574     	.line	137, "main.c"; 	if(count200ms == 0)
                                    1-  575     	BANKSEL	_count200ms
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  576     	MOVR	_count200ms,W
     000E 0903                      1-  577     	BTRSS	STATUS,2
     000F 3rrr                      1-  578     	LGOTO	_00131_DS_
                                    1-  579     	.line	139, "main.c"; 	checkBatAD();
     0010 2rrr                      1-  580     	LCALL	_checkBatAD
                                    1-  581     	.line	140, "main.c"; 	ledCtr();
     0011 2rrr                      1-  582     	LCALL	_ledCtr
     0012                           1-  583     _00131_DS_:
                                    1-  584     	.line	142, "main.c"; 	if(count500ms == 0)
                                    1-  585     	BANKSEL	_count500ms
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1-  586     	MOVR	_count500ms,W
     0014 0903                      1-  587     	BTRSS	STATUS,2
     0015 3rrr                      1-  588     	LGOTO	_00139_DS_
                                    1-  589     	.line	144, "main.c"; 	chrgCtr();
     0016 2rrr                      1-  590     	LCALL	_chrgCtr
                                    1-  591     	.line	145, "main.c"; 	if(workStartFlag == 1 || workStartFlag == 3 || workStartFlag == 4)
                                    1-  592     	BANKSEL	_workStartFlag
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1-  593     	MOVR	_workStartFlag,W
     0019 2401                      1-  594     	XORIA	0x01
     001A 0D03                      1-  595     	BTRSC	STATUS,2
     001B 3rrr                      1-  596     	LGOTO	_00134_DS_
     001C 01rr                      1-  597     	MOVR	_workStartFlag,W
     001D 2403                      1-  598     	XORIA	0x03
     001E 0D03                      1-  599     	BTRSC	STATUS,2
     001F 3rrr                      1-  600     	LGOTO	_00134_DS_
     0020 01rr                      1-  601     	MOVR	_workStartFlag,W
     0021 2404                      1-  602     	XORIA	0x04
     0022 0903                      1-  603     	BTRSS	STATUS,2
     0023 3rrr                      1-  604     	LGOTO	_00139_DS_
     0024                           1-  605     _00134_DS_:
                                    1-  606     	.line	147, "main.c"; 	if(chrgFlag == 0)
                                    1-  607     	BANKSEL	_Status
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 09rr                      1-  608     	BTRSS	_Status,3
                                    1-  609     	.line	148, "main.c"; 	LedCtr2();
     0026 2rrr                      1-  610     	LCALL	_LedCtr2
     0027                           1-  611     _00139_DS_:
                                    1-  612     	.line	152, "main.c"; 	if(workStep)
                                    1-  613     	BANKSEL	_workStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  614     	MOVR	_workStep,W
     0029 0903                      1-  615     	BTRSS	STATUS,2
                                    1-  616     	.line	153, "main.c"; 	workCtr();
     002A 2rrr                      1-  617     	LCALL	_workCtr
                                    1-  618     	.line	154, "main.c"; 	if(workStep == 0 && keyCount == 0 && workStartFlag == 0 && ((PORTA & 0x20) == 0))
                                    1-  619     	BANKSEL	_workStep
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1-  620     	MOVR	_workStep,W
     002D 0903                      1-  621     	BTRSS	STATUS,2
     002E 3rrr                      1-  622     	LGOTO	_00145_DS_
                                    1-  623     	BANKSEL	_keyCount
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1-  624     	MOVR	_keyCount,W
     0031 0903                      1-  625     	BTRSS	STATUS,2
     0032 3rrr                      1-  626     	LGOTO	_00145_DS_
                                    1-  627     	BANKSEL	_workStartFlag
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  628     	MOVR	_workStartFlag,W
     0035 0903                      1-  629     	BTRSS	STATUS,2
     0036 3rrr                      1-  630     	LGOTO	_00145_DS_
                                    1-  631     	BANKSEL	_PORTA
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 0Err                      1-  632     	BTRSC	_PORTA,5
     0039 3rrr                      1-  633     	LGOTO	_00145_DS_
                                    1-  634     	.line	156, "main.c"; 	if(++sleepTime > 2000)
                                    1-  635     	BANKSEL	_sleepTime
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 05rr                      1-  636     	INCR	_sleepTime,F
     003C 0D03                      1-  637     	BTRSC	STATUS,2
     003D 05rr                      1-  638     	INCR	(_sleepTime + 1),F
                                    1-  639     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  640     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     003E 2107                      1-  641     	MOVIA	0x07
     003F 04rr                      1-  642     	SUBAR	(_sleepTime + 1),W
     0040 0903                      1-  643     	BTRSS	STATUS,2
     0041 3rrr                      1-  644     	LGOTO	_00219_DS_
     0042 21D1                      1-  645     	MOVIA	0xd1
     0043 04rr                      1-  646     	SUBAR	_sleepTime,W
     0044                           1-  647     _00219_DS_:
     0044 0803                      1-  648     	BTRSS	STATUS,0
     0045 3rrr                      1-  649     	LGOTO	_00145_DS_
                                    1-  650     	.line	158, "main.c"; 	gotoSleep();
     0046 2rrr                      1-  651     	LCALL	_gotoSleep
                                    1-  652     ;;unsigned compare: left < lit (0x384=900), size=2
     0047                           1-  653     _00145_DS_:
                                    1-  654     	.line	162, "main.c"; 	if(count900s >= 900)
     0047 2103                      1-  655     	MOVIA	0x03
                                    1-  656     	BANKSEL	_count900s
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 04rr                      1-  657     	SUBAR	(_count900s + 1),W
     004A 0903                      1-  658     	BTRSS	STATUS,2
     004B 3rrr                      1-  659     	LGOTO	_00220_DS_
     004C 2184                      1-  660     	MOVIA	0x84
     004D 04rr                      1-  661     	SUBAR	_count900s,W
     004E                           1-  662     _00220_DS_:
     004E 0803                      1-  663     	BTRSS	STATUS,0
     004F 3rrr                      1-  664     	LGOTO	_00150_DS_
                                    1-  665     	.line	164, "main.c"; 	powerOff();
     0050 2rrr                      1-  666     	LCALL	_powerOff
                                    1-  667     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  668     ;;unsigned compare: left >= lit (0x65=101), size=2
     0051                           1-  669     _00150_DS_:
                                    1-  670     	.line	167, "main.c"; 	if(fgPRD > 100 || fgCount > 100)
     0051 2100                      1-  671     	MOVIA	0x00
                                    1-  672     	BANKSEL	_fgPRD
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 04rr                      1-  673     	SUBAR	(_fgPRD + 1),W
     0054 0903                      1-  674     	BTRSS	STATUS,2
     0055 3rrr                      1-  675     	LGOTO	_00221_DS_
     0056 2165                      1-  676     	MOVIA	0x65
     0057 04rr                      1-  677     	SUBAR	_fgPRD,W
     0058                           1-  678     _00221_DS_:
     0058 0C03                      1-  679     	BTRSC	STATUS,0
     0059 3rrr                      1-  680     	LGOTO	_00155_DS_
                                    1-  681     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  682     ;;unsigned compare: left >= lit (0x65=101), size=2
     005A 2100                      1-  683     	MOVIA	0x00
                                    1-  684     	BANKSEL	_fgCount
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 04rr                      1-  685     	SUBAR	(_fgCount + 1),W
     005D 0903                      1-  686     	BTRSS	STATUS,2
     005E 3rrr                      1-  687     	LGOTO	_00222_DS_
     005F 2165                      1-  688     	MOVIA	0x65
     0060 04rr                      1-  689     	SUBAR	_fgCount,W
     0061                           1-  690     _00222_DS_:
     0061 0803                      1-  691     	BTRSS	STATUS,0
     0062 3rrr                      1-  692     	LGOTO	_00159_DS_
                                    1-  693     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  694     ;;unsigned compare: left >= lit (0x97=151), size=2
     0063                           1-  695     _00155_DS_:
                                    1-  696     	.line	169, "main.c"; 	if(fgCount > 150)
     0063 2100                      1-  697     	MOVIA	0x00
                                    1-  698     	BANKSEL	_fgCount
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 04rr                      1-  699     	SUBAR	(_fgCount + 1),W
     0066 0903                      1-  700     	BTRSS	STATUS,2
     0067 3rrr                      1-  701     	LGOTO	_00223_DS_
     0068 2197                      1-  702     	MOVIA	0x97
     0069 04rr                      1-  703     	SUBAR	_fgCount,W
     006A                           1-  704     _00223_DS_:
     006A 0803                      1-  705     	BTRSS	STATUS,0
     006B 3rrr                      1-  706     	LGOTO	_00152_DS_
                                    1-  707     	.line	171, "main.c"; 	pwmStop();
     006C 2rrr                      1-  708     	LCALL	_pwmStop
                                    1-  709     	.line	172, "main.c"; 	PORTB &= 0xFD;
     006D 1Crr                      1-  710     	BCR	_PORTB,1
                                    1-  711     	.line	173, "main.c"; 	fgPRD = 0;
                                    1-  712     	BANKSEL	_fgPRD
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 02rr                      1-  713     	CLRR	_fgPRD
     0070 02rr                      1-  714     	CLRR	(_fgPRD + 1)
                                    1-  715     	.line	174, "main.c"; 	fgCount = 0;
                                    1-  716     	BANKSEL	_fgCount
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 02rr                      1-  717     	CLRR	_fgCount
     0073 02rr                      1-  718     	CLRR	(_fgCount + 1)
                                    1-  719     	.line	175, "main.c"; 	delay(100);
     0074 2164                      1-  720     	MOVIA	0x64
     0075 2rrr                      1-  721     	LCALL	_delay
     0076                           1-  722     _00152_DS_:
                                    1-  723     	.line	177, "main.c"; 	if(++sleepTime > 2000)
                                    1-  724     	BANKSEL	_sleepTime
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 05rr                      1-  725     	INCR	_sleepTime,F
     0078 0D03                      1-  726     	BTRSC	STATUS,2
     0079 05rr                      1-  727     	INCR	(_sleepTime + 1),F
                                    1-  728     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  729     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     007A 2107                      1-  730     	MOVIA	0x07
     007B 04rr                      1-  731     	SUBAR	(_sleepTime + 1),W
     007C 0903                      1-  732     	BTRSS	STATUS,2
     007D 3rrr                      1-  733     	LGOTO	_00224_DS_
     007E 21D1                      1-  734     	MOVIA	0xd1
     007F 04rr                      1-  735     	SUBAR	_sleepTime,W
     0080                           1-  736     _00224_DS_:
     0080 0803                      1-  737     	BTRSS	STATUS,0
     0081 3rrr                      1-  738     	LGOTO	_00159_DS_
                                    1-  739     	.line	180, "main.c"; 	pwmStop();
     0082 2rrr                      1-  740     	LCALL	_pwmStop
                                    1-  741     	.line	181, "main.c"; 	PORTB &= 0xFD;
     0083 1Crr                      1-  742     	BCR	_PORTB,1
                                    1-  743     	.line	183, "main.c"; 	AWUCON = 0x60;
     0084 2160                      1-  744     	MOVIA	0x60
     0085 00rr                      1-  745     	MOVAR	_AWUCON
                                    1-  746     	.line	184, "main.c"; 	fgPRD = 0;
                                    1-  747     	BANKSEL	_fgPRD
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 02rr                      1-  748     	CLRR	_fgPRD
     0088 02rr                      1-  749     	CLRR	(_fgPRD + 1)
                                    1-  750     	.line	185, "main.c"; 	fgCount = 0;
                                    1-  751     	BANKSEL	_fgCount
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 02rr                      1-  752     	CLRR	_fgCount
     008B 02rr                      1-  753     	CLRR	(_fgCount + 1)
                                    1-  754     	.line	186, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     008C 210B                      1-  755     	MOVIA	0x0b
     008D 00rr                      1-  756     	MOVAR	_INTE
                                    1-  757     	.line	187, "main.c"; 	PCON =  C_LVR_En ;	
     008E 2108                      1-  758     	MOVIA	0x08
     008F 00rr                      1-  759     	MOVAR	_PCON
                                    1-  760     	.line	188, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0090 02rr                      1-  761     	CLRR	_INTF
                                    1-  762     	.line	189, "main.c"; 	CLRWDT();
     0091 0002                      1-  763     	clrwdt
                                    1-  764     	.line	190, "main.c"; 	ENI();
     0092 0004                      1-  765     	ENI
                                    1-  766     	.line	191, "main.c"; 	SLEEP();
     0093 0001                      1-  767     	sleep
                                    1-  768     	.line	192, "main.c"; 	AWUCON = 0x00;
     0094 02rr                      1-  769     	CLRR	_AWUCON
                                    1-  770     	.line	193, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0095 2101                      1-  771     	MOVIA	0x01
     0096 00rr                      1-  772     	MOVAR	_INTE
                                    1-  773     	.line	194, "main.c"; 	INTF = 0;
     0097 02rr                      1-  774     	CLRR	_INTF
                                    1-  775     	.line	196, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0098 21A8                      1-  776     	MOVIA	0xa8
     0099 00rr                      1-  777     	MOVAR	_PCON
     009A 3rrr                      1-  778     	LGOTO	_00159_DS_
                                    1-  779     	.line	200, "main.c"; 	}
                                    1-  780     	RETURN	
     009B 0010                      3-   26 m1      ret
                                    1-  781     ; exit point of _main
                                    1-  783     ;***
                                    1-  784     ;  pBlock Stats: dbName = C
                                    1-  785     ;***
                                    1-  786     ;has an exit
                                    1-  787     ;; Starting pCode block
                                    1-  788     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  790     _F_wait_eoc:
                                    1-  791     ; 2 exit points
     0000                           1-  792     _00602_DS_:
                                    1-  793     	.line	770, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  794     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  795     	LGOTO	_00602_DS_
                                    1-  796     	.line	772, "main.c"; 	}
                                    1-  797     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  798     ; exit point of _F_wait_eoc
                                    1-  800     ;***
                                    1-  801     ;  pBlock Stats: dbName = C
                                    1-  802     ;***
                                    1-  803     ;has an exit
                                    1-  804     ;functions called:
                                    1-  805     ;   _delay
                                    1-  806     ;   _F_wait_eoc
                                    1-  807     ;   _delay
                                    1-  808     ;   _F_wait_eoc
                                    1-  809     ;6 compiler assigned registers:
                                    1-  810     ;   r0x1021
                                    1-  811     ;   r0x1022
                                    1-  812     ;   r0x1023
                                    1-  813     ;   r0x1024
                                    1-  814     ;   r0x1025
                                    1-  815     ;   r0x1026
                                    1-  816     ;; Starting pCode block
                                    1-  817     .segment "code"; module=main, function=_F_AIN5_Convert
                                    1-  819     ;local variable name mapping:
     0000                           1-  822     _F_AIN5_Convert:
                                    1-  823     ; 2 exit points
                                    1-  824     	.line	753, "main.c"; 	void F_AIN5_Convert(char count)
                                    1-  825     	BANKSEL	r0x1021
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  826     	MOVAR	r0x1021
                                    1-  827     	.line	755, "main.c"; 	R_AIN5_DATA=R_AIN5_DATA_LB=0x00;   
                                    1-  828     	BANKSEL	_R_AIN5_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  829     	CLRR	_R_AIN5_DATA_LB
                                    1-  830     	BANKSEL	_R_AIN5_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  831     	CLRR	_R_AIN5_DATA
     0006 02rr                      1-  832     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  833     	.line	757, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  834     	MOVIA	0x94
     0008 00rr                      1-  835     	MOVAR	_ADMD
                                    1-  836     	.line	758, "main.c"; 	delay(200);	
     0009 21C8                      1-  837     	MOVIA	0xc8
     000A 2rrr                      1-  838     	LCALL	_delay
                                    1-  839     	.line	759, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  840     	MOVIA	0x01
                                    1-  841     	BANKSEL	r0x1022
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  842     	MOVAR	r0x1022
     000E                           1-  843     _00595_DS_:
                                    1-  844     	BANKSEL	r0x1022
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1-  845     	MOVR	r0x1022,W
                                    1-  846     	BANKSEL	r0x1021
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  847     	SUBAR	r0x1021,W
     0012 0803                      1-  848     	BTRSS	STATUS,0
     0013 3rrr                      1-  849     	LGOTO	_00597_DS_
                                    1-  850     	.line	761, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  851     	BSR	_ADMDbits,6
                                    1-  852     	.line	762, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1-  853     	LCALL	_F_wait_eoc
                                    1-  854     	.line	763, "main.c"; 	R_AIN5_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  855     	MOVIA	0x0f
     0017 10rr                      1-  856     	ANDAR	_ADR,W
                                    1-  857     ;;3	MOVAR	r0x1023
                                    1-  858     	BANKSEL	_R_AIN5_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1-  859     	ADDAR	_R_AIN5_DATA_LB,F
                                    1-  860     	.line	764, "main.c"; 	R_AIN5_DATA    += ADD; 
     001A 01rr                      1-  861     	MOVR	_ADD,W
                                    1-  862     	BANKSEL	r0x1023
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  863     	MOVAR	r0x1023
                                    1-  864     ;;1	CLRR	r0x1024
                                    1-  865     ;;102	MOVR	r0x1023,W
                                    1-  866     ;;100	MOVAR	r0x1025
     001D 2100                      1-  867     	MOVIA	0x00
                                    1-  868     	BANKSEL	r0x1026
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  869     	MOVAR	r0x1026
                                    1-  870     ;;101	MOVR	r0x1025,W
                                    1-  871     	BANKSEL	r0x1023
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  872     	MOVR	r0x1023,W
                                    1-  873     	BANKSEL	_R_AIN5_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1-  874     	ADDAR	_R_AIN5_DATA,F
                                    1-  875     	BANKSEL	r0x1026
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  876     	MOVR	r0x1026,W
     0026 0C03                      1-  877     	BTRSC	STATUS,0
     0027 05rr                      1-  878     	INCR	r0x1026,W
     0028 0D03                      1-  879     	BTRSC	STATUS,2
     0029 3rrr                      1-  880     	LGOTO	_00001_DS_
                                    1-  881     	BANKSEL	_R_AIN5_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1-  882     	ADDAR	(_R_AIN5_DATA + 1),F
     002C                           1-  883     _00001_DS_:
                                    1-  884     	.line	759, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  885     	BANKSEL	r0x1022
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  886     	INCR	r0x1022,F
     002E 3rrr                      1-  887     	LGOTO	_00595_DS_
     002F                           1-  888     _00597_DS_:
                                    1-  889     	.line	766, "main.c"; 	}
                                    1-  890     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1-  891     ; exit point of _F_AIN5_Convert
                                    1-  893     ;***
                                    1-  894     ;  pBlock Stats: dbName = C
                                    1-  895     ;***
                                    1-  896     ;functions called:
                                    1-  897     ;   _F_AIN5_Convert
                                    1-  898     ;   _LEDHOFF
                                    1-  899     ;   _LEDLOFF
                                    1-  900     ;   _F_AIN5_Convert
                                    1-  901     ;   _LEDHOFF
                                    1-  902     ;   _LEDLOFF
                                    1-  903     ;4 compiler assigned registers:
                                    1-  904     ;   r0x1027
                                    1-  905     ;   r0x1028
                                    1-  906     ;   r0x1029
                                    1-  907     ;   r0x102A
                                    1-  908     ;; Starting pCode block
                                    1-  909     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  911     _checkBatAD:
                                    1-  912     ; 0 exit points
                                    1-  913     	.line	662, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA_LB = 0x00;
                                    1-  914     	BANKSEL	_R_AIN5_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  915     	CLRR	_R_AIN5_DATA_LB
                                    1-  916     	BANKSEL	_R_AIN5_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  917     	CLRR	_R_AIN5_DATA
     0004 02rr                      1-  918     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  919     	.line	663, "main.c"; 	F_AIN5_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  920     	MOVIA	0x08
     0006 2rrr                      1-  921     	LCALL	_F_AIN5_Convert
                                    1-  922     	.line	664, "main.c"; 	R_AIN5_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  923     	BANKSEL	_R_AIN5_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1-  924     	SWAPR	(_R_AIN5_DATA + 1),W
     0009 22F0                      1-  925     	ANDIA	0xf0
     000A 00rr                      1-  926     	MOVAR	(_R_AIN5_DATA + 1)
     000B 15rr                      1-  927     	SWAPR	_R_AIN5_DATA,W
     000C 00rr                      1-  928     	MOVAR	_R_AIN5_DATA
     000D 220F                      1-  929     	ANDIA	0x0f
     000E 11rr                      1-  930     	IORAR	(_R_AIN5_DATA + 1),F
     000F 12rr                      1-  931     	XORAR	_R_AIN5_DATA,F
                                    1-  932     	.line	665, "main.c"; 	R_AIN5_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  933     	MOVIA	0xf0
                                    1-  934     	BANKSEL	_R_AIN5_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1-  935     	ANDAR	_R_AIN5_DATA_LB,F
                                    1-  936     	.line	666, "main.c"; 	R_AIN5_DATA += R_AIN5_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  937     	MOVR	_R_AIN5_DATA_LB,W
                                    1-  938     	BANKSEL	r0x1029
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1-  939     	MOVAR	r0x1029
                                    1-  940     ;;1	MOVAR	r0x1027
                                    1-  941     ;;1	CLRR	r0x1028
                                    1-  942     ;;99	MOVR	r0x1027,W
     0016 2100                      1-  943     	MOVIA	0x00
                                    1-  944     	BANKSEL	r0x102A
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1-  945     	MOVAR	r0x102A
                                    1-  946     	BANKSEL	r0x1029
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  947     	MOVR	r0x1029,W
                                    1-  948     	BANKSEL	_R_AIN5_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1-  949     	ADDAR	_R_AIN5_DATA,F
                                    1-  950     	BANKSEL	r0x102A
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  951     	MOVR	r0x102A,W
     001F 0C03                      1-  952     	BTRSC	STATUS,0
     0020 05rr                      1-  953     	INCR	r0x102A,W
     0021 0D03                      1-  954     	BTRSC	STATUS,2
     0022 3rrr                      1-  955     	LGOTO	_00002_DS_
                                    1-  956     	BANKSEL	_R_AIN5_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1-  957     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1-  958     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  959     _00002_DS_:
                                    1-  960     	.line	667, "main.c"; 	R_AIN5_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1-  961     	BCR	STATUS,0
                                    1-  962     	BANKSEL	_R_AIN5_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1-  963     	RRR	(_R_AIN5_DATA + 1),F
     0028 13rr                      1-  964     	RRR	_R_AIN5_DATA,F
                                    1-  965     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  966     	BCR	STATUS,0
     002A 13rr                      1-  967     	RRR	(_R_AIN5_DATA + 1),F
     002B 13rr                      1-  968     	RRR	_R_AIN5_DATA,F
                                    1-  969     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  970     	BCR	STATUS,0
     002D 13rr                      1-  971     	RRR	(_R_AIN5_DATA + 1),F
     002E 13rr                      1-  972     	RRR	_R_AIN5_DATA,F
                                    1-  973     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  974     ;;unsigned compare: left >= lit (0x614=1556), size=2
                                    1-  975     	.line	668, "main.c"; 	if(R_AIN5_DATA > 1555)
     002F 2106                      1-  976     	MOVIA	0x06
     0030 04rr                      1-  977     	SUBAR	(_R_AIN5_DATA + 1),W
     0031 0903                      1-  978     	BTRSS	STATUS,2
     0032 3rrr                      1-  979     	LGOTO	_00576_DS_
     0033 2114                      1-  980     	MOVIA	0x14
     0034 04rr                      1-  981     	SUBAR	_R_AIN5_DATA,W
     0035                           1-  982     _00576_DS_:
     0035 0803                      1-  983     	BTRSS	STATUS,0
     0036 3rrr                      1-  984     	LGOTO	_00482_DS_
                                    1-  985     	.line	670, "main.c"; 	R_AIN5_DATA = 1555;
     0037 2113                      1-  986     	MOVIA	0x13
                                    1-  987     	BANKSEL	_R_AIN5_DATA
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 00rr                      1-  988     	MOVAR	_R_AIN5_DATA
     003A 2106                      1-  989     	MOVIA	0x06
     003B 00rr                      1-  990     	MOVAR	(_R_AIN5_DATA + 1)
     003C 3rrr                      1-  991     	LGOTO	_00483_DS_
                                    1-  992     ;;unsigned compare: left < lit (0x45D=1117), size=2
     003D                           1-  993     _00482_DS_:
                                    1-  994     	.line	672, "main.c"; 	else if(R_AIN5_DATA < 1117)
     003D 2104                      1-  995     	MOVIA	0x04
                                    1-  996     	BANKSEL	_R_AIN5_DATA
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 04rr                      1-  997     	SUBAR	(_R_AIN5_DATA + 1),W
     0040 0903                      1-  998     	BTRSS	STATUS,2
     0041 3rrr                      1-  999     	LGOTO	_00577_DS_
     0042 215D                      1- 1000     	MOVIA	0x5d
     0043 04rr                      1- 1001     	SUBAR	_R_AIN5_DATA,W
     0044                           1- 1002     _00577_DS_:
     0044 0C03                      1- 1003     	BTRSC	STATUS,0
     0045 3rrr                      1- 1004     	LGOTO	_00483_DS_
                                    1- 1005     	.line	674, "main.c"; 	R_AIN5_DATA = 1117;
     0046 215D                      1- 1006     	MOVIA	0x5d
                                    1- 1007     	BANKSEL	_R_AIN5_DATA
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 1008     	MOVAR	_R_AIN5_DATA
     0049 2104                      1- 1009     	MOVIA	0x04
     004A 00rr                      1- 1010     	MOVAR	(_R_AIN5_DATA + 1)
     004B                           1- 1011     _00483_DS_:
                                    1- 1012     	.line	676, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA - 1117;
     004B 21A3                      1- 1013     	MOVIA	0xa3
                                    1- 1014     	BANKSEL	_R_AIN5_DATA
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 03rr                      1- 1015     	ADDAR	_R_AIN5_DATA,F
     004E 21FB                      1- 1016     	MOVIA	0xfb
     004F 0C03                      1- 1017     	BTRSC	STATUS,0
     0050 21FC                      1- 1018     	MOVIA	0xfc
     0051 03rr                      1- 1019     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1- 1020     ;;unsigned compare: left < lit (0x1AE=430), size=2
                                    1- 1021     	.line	678, "main.c"; 	if(R_AIN5_DATA >= 430)
     0052 2101                      1- 1022     	MOVIA	0x01
     0053 04rr                      1- 1023     	SUBAR	(_R_AIN5_DATA + 1),W
     0054 0903                      1- 1024     	BTRSS	STATUS,2
     0055 3rrr                      1- 1025     	LGOTO	_00578_DS_
     0056 21AE                      1- 1026     	MOVIA	0xae
     0057 04rr                      1- 1027     	SUBAR	_R_AIN5_DATA,W
     0058                           1- 1028     _00578_DS_:
     0058 0803                      1- 1029     	BTRSS	STATUS,0
     0059 3rrr                      1- 1030     	LGOTO	_00518_DS_
                                    1- 1031     	.line	680, "main.c"; 	pwStep = 6;
     005A 2106                      1- 1032     	MOVIA	0x06
                                    1- 1033     	BANKSEL	_pwStep
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 00rr                      1- 1034     	MOVAR	_pwStep
     005D 3rrr                      1- 1035     	LGOTO	_00003_DS_
                                    1- 1036     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1037     ;;unsigned compare: left >= lit (0x18B=395), size=2
     005E                           1- 1038     _00518_DS_:
                                    1- 1039     	.line	682, "main.c"; 	else if(R_AIN5_DATA > 394)
     005E 2101                      1- 1040     	MOVIA	0x01
                                    1- 1041     	BANKSEL	_R_AIN5_DATA
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 04rr                      1- 1042     	SUBAR	(_R_AIN5_DATA + 1),W
     0061 0903                      1- 1043     	BTRSS	STATUS,2
     0062 3rrr                      1- 1044     	LGOTO	_00579_DS_
     0063 218B                      1- 1045     	MOVIA	0x8b
     0064 04rr                      1- 1046     	SUBAR	_R_AIN5_DATA,W
     0065                           1- 1047     _00579_DS_:
     0065 0803                      1- 1048     	BTRSS	STATUS,0
     0066 3rrr                      1- 1049     	LGOTO	_00515_DS_
                                    1- 1050     	.line	685, "main.c"; 	if(pwStep == 6)
                                    1- 1051     	BANKSEL	_pwStep
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 01rr                      1- 1052     	MOVR	_pwStep,W
     0069 2406                      1- 1053     	XORIA	0x06
     006A 0903                      1- 1054     	BTRSS	STATUS,2
     006B 3rrr                      1- 1055     	LGOTO	_00487_DS_
                                    1- 1056     ;;unsigned compare: left < lit (0x195=405), size=2
                                    1- 1057     	.line	687, "main.c"; 	if(R_AIN5_DATA < 405)
     006C 2101                      1- 1058     	MOVIA	0x01
                                    1- 1059     	BANKSEL	_R_AIN5_DATA
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 04rr                      1- 1060     	SUBAR	(_R_AIN5_DATA + 1),W
     006F 0903                      1- 1061     	BTRSS	STATUS,2
     0070 3rrr                      1- 1062     	LGOTO	_00580_DS_
     0071 2195                      1- 1063     	MOVIA	0x95
     0072 04rr                      1- 1064     	SUBAR	_R_AIN5_DATA,W
     0073                           1- 1065     _00580_DS_:
     0073 0C03                      1- 1066     	BTRSC	STATUS,0
     0074 3rrr                      1- 1067     	LGOTO	_00488_DS_
                                    1- 1068     	.line	688, "main.c"; 	pwStep = 5;
     0075 2105                      1- 1069     	MOVIA	0x05
                                    1- 1070     	BANKSEL	_pwStep
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 00rr                      1- 1071     	MOVAR	_pwStep
     0078 3rrr                      1- 1072     	LGOTO	_00488_DS_
     0079                           1- 1073     _00487_DS_:
                                    1- 1074     	.line	692, "main.c"; 	pwStep = 5;
     0079 2105                      1- 1075     	MOVIA	0x05
                                    1- 1076     	BANKSEL	_pwStep
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 00rr                      1- 1077     	MOVAR	_pwStep
                                    1- 1078     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1079     ;;unsigned compare: left >= lit (0x19B=411), size=2
     007C                           1- 1080     _00488_DS_:
                                    1- 1081     	.line	695, "main.c"; 	if(R_AIN5_DATA > 410)
     007C 2101                      1- 1082     	MOVIA	0x01
                                    1- 1083     	BANKSEL	_R_AIN5_DATA
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 04rr                      1- 1084     	SUBAR	(_R_AIN5_DATA + 1),W
     007F 0903                      1- 1085     	BTRSS	STATUS,2
     0080 3rrr                      1- 1086     	LGOTO	_00581_DS_
     0081 219B                      1- 1087     	MOVIA	0x9b
     0082 04rr                      1- 1088     	SUBAR	_R_AIN5_DATA,W
     0083                           1- 1089     _00581_DS_:
     0083 0803                      1- 1090     	BTRSS	STATUS,0
     0084 3rrr                      1- 1091     	LGOTO	_00003_DS_
                                    1- 1092     	.line	697, "main.c"; 	if(++chrgTime > 1800)
                                    1- 1093     	BANKSEL	_chrgTime
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 05rr                      1- 1094     	INCR	_chrgTime,F
     0087 0D03                      1- 1095     	BTRSC	STATUS,2
     0088 05rr                      1- 1096     	INCR	(_chrgTime + 1),F
                                    1- 1097     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1098     ;;unsigned compare: left >= lit (0x709=1801), size=2
     0089 2107                      1- 1099     	MOVIA	0x07
     008A 04rr                      1- 1100     	SUBAR	(_chrgTime + 1),W
     008B 0903                      1- 1101     	BTRSS	STATUS,2
     008C 3rrr                      1- 1102     	LGOTO	_00582_DS_
     008D 2109                      1- 1103     	MOVIA	0x09
     008E 04rr                      1- 1104     	SUBAR	_chrgTime,W
     008F                           1- 1105     _00582_DS_:
     008F 0803                      1- 1106     	BTRSS	STATUS,0
     0090 3rrr                      1- 1107     	LGOTO	_00003_DS_
                                    1- 1108     	.line	699, "main.c"; 	chrgTime = 1800;
     0091 2108                      1- 1109     	MOVIA	0x08
                                    1- 1110     	BANKSEL	_chrgTime
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 00rr                      1- 1111     	MOVAR	_chrgTime
     0094 2107                      1- 1112     	MOVIA	0x07
     0095 00rr                      1- 1113     	MOVAR	(_chrgTime + 1)
                                    1- 1114     	.line	700, "main.c"; 	pwStep = 6;
     0096 2106                      1- 1115     	MOVIA	0x06
                                    1- 1116     	BANKSEL	_pwStep
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 00rr                      1- 1117     	MOVAR	_pwStep
     0099 3rrr                      1- 1118     	LGOTO	_00003_DS_
                                    1- 1119     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1120     ;;unsigned compare: left >= lit (0xE0=224), size=2
     009A                           1- 1121     _00515_DS_:
                                    1- 1122     	.line	704, "main.c"; 	else if(R_AIN5_DATA > 223)
     009A 2100                      1- 1123     	MOVIA	0x00
                                    1- 1124     	BANKSEL	_R_AIN5_DATA
     009B rrrr                      3-   71 m1      .banksel ram_address
     009C 04rr                      1- 1125     	SUBAR	(_R_AIN5_DATA + 1),W
     009D 0903                      1- 1126     	BTRSS	STATUS,2
     009E 3rrr                      1- 1127     	LGOTO	_00583_DS_
     009F 21E0                      1- 1128     	MOVIA	0xe0
     00A0 04rr                      1- 1129     	SUBAR	_R_AIN5_DATA,W
     00A1                           1- 1130     _00583_DS_:
     00A1 0803                      1- 1131     	BTRSS	STATUS,0
     00A2 3rrr                      1- 1132     	LGOTO	_00512_DS_
                                    1- 1133     	.line	707, "main.c"; 	pwStep = 4;
     00A3 2104                      1- 1134     	MOVIA	0x04
                                    1- 1135     	BANKSEL	_pwStep
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 00rr                      1- 1136     	MOVAR	_pwStep
                                    1- 1137     	.line	708, "main.c"; 	chrgTime = 0;
                                    1- 1138     	BANKSEL	_chrgTime
     00A6 rrrr                      3-   71 m1      .banksel ram_address
     00A7 02rr                      1- 1139     	CLRR	_chrgTime
     00A8 02rr                      1- 1140     	CLRR	(_chrgTime + 1)
     00A9 3rrr                      1- 1141     	LGOTO	_00003_DS_
                                    1- 1142     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1143     ;;unsigned compare: left >= lit (0x96=150), size=2
     00AA                           1- 1144     _00512_DS_:
                                    1- 1145     	.line	710, "main.c"; 	else if(R_AIN5_DATA > 149)
     00AA 2100                      1- 1146     	MOVIA	0x00
                                    1- 1147     	BANKSEL	_R_AIN5_DATA
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 04rr                      1- 1148     	SUBAR	(_R_AIN5_DATA + 1),W
     00AD 0903                      1- 1149     	BTRSS	STATUS,2
     00AE 3rrr                      1- 1150     	LGOTO	_00584_DS_
     00AF 2196                      1- 1151     	MOVIA	0x96
     00B0 04rr                      1- 1152     	SUBAR	_R_AIN5_DATA,W
     00B1                           1- 1153     _00584_DS_:
     00B1 0803                      1- 1154     	BTRSS	STATUS,0
     00B2 3rrr                      1- 1155     	LGOTO	_00509_DS_
                                    1- 1156     	.line	713, "main.c"; 	pwStep = 3;
     00B3 2103                      1- 1157     	MOVIA	0x03
                                    1- 1158     	BANKSEL	_pwStep
     00B4 rrrr                      3-   71 m1      .banksel ram_address
     00B5 00rr                      1- 1159     	MOVAR	_pwStep
                                    1- 1160     	.line	714, "main.c"; 	chrgTime = 0;
                                    1- 1161     	BANKSEL	_chrgTime
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 02rr                      1- 1162     	CLRR	_chrgTime
     00B8 02rr                      1- 1163     	CLRR	(_chrgTime + 1)
     00B9 3rrr                      1- 1164     	LGOTO	_00003_DS_
                                    1- 1165     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1166     ;;unsigned compare: left >= lit (0x5E=94), size=2
     00BA                           1- 1167     _00509_DS_:
                                    1- 1168     	.line	716, "main.c"; 	else if(R_AIN5_DATA > 93)
     00BA 2100                      1- 1169     	MOVIA	0x00
                                    1- 1170     	BANKSEL	_R_AIN5_DATA
     00BB rrrr                      3-   71 m1      .banksel ram_address
     00BC 04rr                      1- 1171     	SUBAR	(_R_AIN5_DATA + 1),W
     00BD 0903                      1- 1172     	BTRSS	STATUS,2
     00BE 3rrr                      1- 1173     	LGOTO	_00585_DS_
     00BF 215E                      1- 1174     	MOVIA	0x5e
     00C0 04rr                      1- 1175     	SUBAR	_R_AIN5_DATA,W
     00C1                           1- 1176     _00585_DS_:
     00C1 0803                      1- 1177     	BTRSS	STATUS,0
     00C2 3rrr                      1- 1178     	LGOTO	_00506_DS_
                                    1- 1179     	.line	719, "main.c"; 	pwStep = 2;
     00C3 2102                      1- 1180     	MOVIA	0x02
                                    1- 1181     	BANKSEL	_pwStep
     00C4 rrrr                      3-   71 m1      .banksel ram_address
     00C5 00rr                      1- 1182     	MOVAR	_pwStep
                                    1- 1183     	.line	720, "main.c"; 	chrgTime = 0;
                                    1- 1184     	BANKSEL	_chrgTime
     00C6 rrrr                      3-   71 m1      .banksel ram_address
     00C7 02rr                      1- 1185     	CLRR	_chrgTime
     00C8 02rr                      1- 1186     	CLRR	(_chrgTime + 1)
                                    1- 1187     	.line	721, "main.c"; 	if(workStartFlag == 4)
                                    1- 1188     	BANKSEL	_workStartFlag
     00C9 rrrr                      3-   71 m1      .banksel ram_address
     00CA 01rr                      1- 1189     	MOVR	_workStartFlag,W
     00CB 2404                      1- 1190     	XORIA	0x04
     00CC 0903                      1- 1191     	BTRSS	STATUS,2
     00CD 3rrr                      1- 1192     	LGOTO	_00003_DS_
                                    1- 1193     	.line	723, "main.c"; 	workStartFlag = 0;
     00CE 02rr                      1- 1194     	CLRR	_workStartFlag
                                    1- 1195     	.line	724, "main.c"; 	LEDHOFF();
     00CF 2rrr                      1- 1196     	LCALL	_LEDHOFF
                                    1- 1197     	.line	725, "main.c"; 	LEDLOFF();
     00D0 2rrr                      1- 1198     	LCALL	_LEDLOFF
     00D1 3rrr                      1- 1199     	LGOTO	_00003_DS_
     00D2                           1- 1200     _00506_DS_:
                                    1- 1201     	.line	731, "main.c"; 	if(pwStep == 0 || pwStep == 1 || (++lowBatTime > 10))
                                    1- 1202     	BANKSEL	_pwStep
     00D2 rrrr                      3-   71 m1      .banksel ram_address
     00D3 01rr                      1- 1203     	MOVR	_pwStep,W
     00D4 0D03                      1- 1204     	BTRSC	STATUS,2
     00D5 3rrr                      1- 1205     	LGOTO	_00501_DS_
     00D6 01rr                      1- 1206     	MOVR	_pwStep,W
     00D7 2401                      1- 1207     	XORIA	0x01
     00D8 0D03                      1- 1208     	BTRSC	STATUS,2
     00D9 3rrr                      1- 1209     	LGOTO	_00501_DS_
                                    1- 1210     	BANKSEL	_lowBatTime
     00DA rrrr                      3-   71 m1      .banksel ram_address
     00DB 05rr                      1- 1211     	INCR	_lowBatTime,F
     00DC 210B                      1- 1212     	MOVIA	0x0b
     00DD 04rr                      1- 1213     	SUBAR	_lowBatTime,W
     00DE 0803                      1- 1214     	BTRSS	STATUS,0
     00DF 3rrr                      1- 1215     	LGOTO	_00003_DS_
     00E0                           1- 1216     _00501_DS_:
                                    1- 1217     	.line	733, "main.c"; 	lowBatTime = 0;
                                    1- 1218     	BANKSEL	_lowBatTime
     00E0 rrrr                      3-   71 m1      .banksel ram_address
     00E1 02rr                      1- 1219     	CLRR	_lowBatTime
                                    1- 1220     	.line	734, "main.c"; 	pwStep = 1;
     00E2 2101                      1- 1221     	MOVIA	0x01
                                    1- 1222     	BANKSEL	_pwStep
     00E3 rrrr                      3-   71 m1      .banksel ram_address
     00E4 00rr                      1- 1223     	MOVAR	_pwStep
                                    1- 1224     	.line	735, "main.c"; 	chrgTime = 0;
                                    1- 1225     	BANKSEL	_chrgTime
     00E5 rrrr                      3-   71 m1      .banksel ram_address
     00E6 02rr                      1- 1226     	CLRR	_chrgTime
     00E7 02rr                      1- 1227     	CLRR	(_chrgTime + 1)
                                    1- 1228     	.line	736, "main.c"; 	if(workStep > 0 && fgPRD < 100 && workStartFlag == 0)
                                    1- 1229     	BANKSEL	_workStep
     00E8 rrrr                      3-   71 m1      .banksel ram_address
     00E9 01rr                      1- 1230     	MOVR	_workStep,W
     00EA 0D03                      1- 1231     	BTRSC	STATUS,2
     00EB 3rrr                      1- 1232     	LGOTO	_00003_DS_
                                    1- 1233     ;;unsigned compare: left < lit (0x64=100), size=2
     00EC 2100                      1- 1234     	MOVIA	0x00
                                    1- 1235     	BANKSEL	_fgPRD
     00ED rrrr                      3-   71 m1      .banksel ram_address
     00EE 04rr                      1- 1236     	SUBAR	(_fgPRD + 1),W
     00EF 0903                      1- 1237     	BTRSS	STATUS,2
     00F0 3rrr                      1- 1238     	LGOTO	_00588_DS_
     00F1 2164                      1- 1239     	MOVIA	0x64
     00F2 04rr                      1- 1240     	SUBAR	_fgPRD,W
     00F3                           1- 1241     _00588_DS_:
     00F3 0C03                      1- 1242     	BTRSC	STATUS,0
     00F4 3rrr                      1- 1243     	LGOTO	_00003_DS_
                                    1- 1244     	BANKSEL	_workStartFlag
     00F5 rrrr                      3-   71 m1      .banksel ram_address
     00F6 01rr                      1- 1245     	MOVR	_workStartFlag,W
     00F7 0903                      1- 1246     	BTRSS	STATUS,2
     00F8 3rrr                      1- 1247     	LGOTO	_00003_DS_
                                    1- 1248     	.line	738, "main.c"; 	workStartFlag = 4;
     00F9 2104                      1- 1249     	MOVIA	0x04
     00FA 00rr                      1- 1250     	MOVAR	_workStartFlag
                                    1- 1251     	.line	739, "main.c"; 	if(redLedFlag == 0)
                                    1- 1252     	BANKSEL	_Status
     00FB rrrr                      3-   71 m1      .banksel ram_address
     00FC 0Drr                      1- 1253     	BTRSC	_Status,2
     00FD 3rrr                      1- 1254     	LGOTO	_00003_DS_
                                    1- 1255     	.line	741, "main.c"; 	startStep = 0;
                                    1- 1256     	BANKSEL	_startStep
     00FE rrrr                      3-   71 m1      .banksel ram_address
     00FF 02rr                      1- 1257     	CLRR	_startStep
     0100                           1- 1258     _00003_DS_:
                                    1- 1259     	.line	748, "main.c"; 	}
                                    1- 1260     	RETURN	
     0100 0010                      3-   26 m1      ret
                                    1- 1262     ;***
                                    1- 1263     ;  pBlock Stats: dbName = C
                                    1- 1264     ;***
                                    1- 1265     ;has an exit
                                    1- 1266     ;functions called:
                                    1- 1267     ;   _delay
                                    1- 1268     ;   _delay
                                    1- 1269     ;; Starting pCode block
                                    1- 1270     .segment "code"; module=main, function=_initAD
     0000                           1- 1272     _initAD:
                                    1- 1273     ; 2 exit points
                                    1- 1274     	.line	638, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1275     	MOVIA	0x84
     0001 00rr                      1- 1276     	MOVAR	_ADMD
                                    1- 1277     	.line	643, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1278     	CLRR	_ADVREFH
                                    1- 1279     	.line	648, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1280     	MOVIA	0x10
     0004 00rr                      1- 1281     	MOVAR	_ADR
                                    1- 1282     	.line	650, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1283     	MOVIA	0x03
     0006 00rr                      1- 1284     	MOVAR	_ADCR
                                    1- 1285     	.line	653, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1286     	BSR	_ADMDbits,4
                                    1- 1287     	.line	654, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1288     	MOVIA	0x64
     0009 2rrr                      1- 1289     	LCALL	_delay
                                    1- 1290     	.line	657, "main.c"; 	}
                                    1- 1291     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 1292     ; exit point of _initAD
                                    1- 1294     ;***
                                    1- 1295     ;  pBlock Stats: dbName = C
                                    1- 1296     ;***
                                    1- 1297     ;has an exit
                                    1- 1298     ;2 compiler assigned registers:
                                    1- 1299     ;   r0x101F
                                    1- 1300     ;   r0x1020
                                    1- 1301     ;; Starting pCode block
                                    1- 1302     .segment "code"; module=main, function=_delay
                                    1- 1304     ;local variable name mapping:
     0000                           1- 1307     _delay:
                                    1- 1308     ; 2 exit points
                                    1- 1309     	.line	628, "main.c"; 	void delay(u8t time)
                                    1- 1310     	BANKSEL	r0x101F
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1311     	MOVAR	r0x101F
                                    1- 1312     	.line	630, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1313     	BANKSEL	r0x1020
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1314     	CLRR	r0x1020
     0004                           1- 1315     _00468_DS_:
                                    1- 1316     	BANKSEL	r0x101F
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1317     	MOVR	r0x101F,W
                                    1- 1318     	BANKSEL	r0x1020
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 1319     	SUBAR	r0x1020,W
     0008 0C03                      1- 1320     	BTRSC	STATUS,0
     0009 3rrr                      1- 1321     	LGOTO	_00470_DS_
                                    1- 1322     	.line	631, "main.c"; 	NOP();
     000A 0000                      1- 1323     	nop
                                    1- 1324     	.line	630, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1325     	BANKSEL	r0x1020
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 1326     	INCR	r0x1020,F
     000D 3rrr                      1- 1327     	LGOTO	_00468_DS_
     000E                           1- 1328     _00470_DS_:
                                    1- 1329     	.line	632, "main.c"; 	}
                                    1- 1330     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1331     ; exit point of _delay
                                    1- 1333     ;***
                                    1- 1334     ;  pBlock Stats: dbName = C
                                    1- 1335     ;***
                                    1- 1336     ;has an exit
                                    1- 1337     ;functions called:
                                    1- 1338     ;   _pwmStop
                                    1- 1339     ;   _LedInput
                                    1- 1340     ;   _LEDLOFF
                                    1- 1341     ;   _LEDHON
                                    1- 1342     ;   _LEDHOFF
                                    1- 1343     ;   _LEDHOFF
                                    1- 1344     ;   _LEDLOFF
                                    1- 1345     ;   _pwmStop
                                    1- 1346     ;   _LedInput
                                    1- 1347     ;   _LEDLOFF
                                    1- 1348     ;   _LEDHON
                                    1- 1349     ;   _LEDHOFF
                                    1- 1350     ;   _LEDHOFF
                                    1- 1351     ;   _LEDLOFF
                                    1- 1352     ;; Starting pCode block
                                    1- 1353     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1355     _chrgCtr:
                                    1- 1356     ; 2 exit points
                                    1- 1357     	.line	588, "main.c"; 	if(PORTA & 0x20)
                                    1- 1358     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 0Arr                      1- 1359     	BTRSS	_PORTA,5
     0002 3rrr                      1- 1360     	LGOTO	_00459_DS_
                                    1- 1361     	.line	591, "main.c"; 	chrgFlag = 1;
                                    1- 1362     	BANKSEL	_Status
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 19rr                      1- 1363     	BSR	_Status,3
                                    1- 1364     	.line	592, "main.c"; 	workStartFlag = 0;
                                    1- 1365     	BANKSEL	_workStartFlag
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1366     	CLRR	_workStartFlag
                                    1- 1367     	.line	593, "main.c"; 	workStep = 0;
                                    1- 1368     	BANKSEL	_workStep
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 1369     	CLRR	_workStep
                                    1- 1370     	.line	594, "main.c"; 	ledStep = 0;
                                    1- 1371     	BANKSEL	_ledStep
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 1372     	CLRR	_ledStep
                                    1- 1373     	.line	595, "main.c"; 	pwmStop();
     000B 2rrr                      1- 1374     	LCALL	_pwmStop
                                    1- 1375     	.line	596, "main.c"; 	LedInput();
     000C 2rrr                      1- 1376     	LCALL	_LedInput
                                    1- 1377     	.line	597, "main.c"; 	PORTB &= 0xFD;
     000D 1Crr                      1- 1378     	BCR	_PORTB,1
                                    1- 1379     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1380     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 1381     	.line	598, "main.c"; 	if(pwStep > 5)
     000E 2106                      1- 1382     	MOVIA	0x06
                                    1- 1383     	BANKSEL	_pwStep
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1- 1384     	SUBAR	_pwStep,W
     0011 0803                      1- 1385     	BTRSS	STATUS,0
     0012 3rrr                      1- 1386     	LGOTO	_00454_DS_
                                    1- 1387     	.line	601, "main.c"; 	LEDLOFF();
     0013 2rrr                      1- 1388     	LCALL	_LEDLOFF
                                    1- 1389     	.line	602, "main.c"; 	LEDHON();
     0014 2rrr                      1- 1390     	LCALL	_LEDHON
     0015 3rrr                      1- 1391     	LGOTO	_00461_DS_
     0016                           1- 1392     _00454_DS_:
                                    1- 1393     	.line	606, "main.c"; 	if(pwStep == 6)
                                    1- 1394     	BANKSEL	_pwStep
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1395     	MOVR	_pwStep,W
     0018 2406                      1- 1396     	XORIA	0x06
     0019 0903                      1- 1397     	BTRSS	STATUS,2
     001A 3rrr                      1- 1398     	LGOTO	_00452_DS_
                                    1- 1399     	.line	608, "main.c"; 	pwStep = 5;
     001B 2105                      1- 1400     	MOVIA	0x05
     001C 00rr                      1- 1401     	MOVAR	_pwStep
     001D                           1- 1402     _00452_DS_:
                                    1- 1403     	.line	610, "main.c"; 	LEDHOFF();
     001D 2rrr                      1- 1404     	LCALL	_LEDHOFF
                                    1- 1405     	.line	611, "main.c"; 	PORTA ^= 0x08;
     001E 2108                      1- 1406     	MOVIA	0x08
                                    1- 1407     	BANKSEL	_PORTA
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 12rr                      1- 1408     	XORAR	_PORTA,F
     0021 3rrr                      1- 1409     	LGOTO	_00461_DS_
     0022                           1- 1410     _00459_DS_:
                                    1- 1411     	.line	616, "main.c"; 	chrgFlag = 0;
                                    1- 1412     	BANKSEL	_Status
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 1Drr                      1- 1413     	BCR	_Status,3
                                    1- 1414     	.line	617, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 1415     	BANKSEL	_chrgTime
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1- 1416     	CLRR	_chrgTime
     0026 02rr                      1- 1417     	CLRR	(_chrgTime + 1)
                                    1- 1418     	.line	618, "main.c"; 	if(workStartFlag == 0)
                                    1- 1419     	BANKSEL	_workStartFlag
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 1420     	MOVR	_workStartFlag,W
     0029 0903                      1- 1421     	BTRSS	STATUS,2
     002A 3rrr                      1- 1422     	LGOTO	_00461_DS_
                                    1- 1423     	.line	620, "main.c"; 	LEDHOFF();
     002B 2rrr                      1- 1424     	LCALL	_LEDHOFF
                                    1- 1425     	.line	621, "main.c"; 	LEDLOFF();	
     002C 2rrr                      1- 1426     	LCALL	_LEDLOFF
     002D                           1- 1427     _00461_DS_:
                                    1- 1428     	.line	625, "main.c"; 	}
                                    1- 1429     	RETURN	
     002D 0010                      3-   26 m1      ret
                                    1- 1430     ; exit point of _chrgCtr
                                    1- 1432     ;***
                                    1- 1433     ;  pBlock Stats: dbName = C
                                    1- 1434     ;***
                                    1- 1435     ;has an exit
                                    1- 1436     ;1 compiler assigned register :
                                    1- 1437     ;   r0x102C
                                    1- 1438     ;; Starting pCode block
                                    1- 1439     .segment "code"; module=main, function=_keyRead
                                    1- 1441     ;local variable name mapping:
     0000                           1- 1443     _keyRead:
                                    1- 1444     ; 2 exit points
                                    1- 1445     	.line	551, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1446     	BANKSEL	r0x102C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1447     	MOVAR	r0x102C
                                    1- 1448     	.line	553, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1449     	MOVR	r0x102C,W
     0003 0D03                      1- 1450     	BTRSC	STATUS,2
     0004 3rrr                      1- 1451     	LGOTO	_00444_DS_
                                    1- 1452     	.line	555, "main.c"; 	keyCount++;
                                    1- 1453     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1454     	INCR	_keyCount,F
                                    1- 1455     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1456     	.line	556, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1457     	MOVIA	0xc8
     0008 04rr                      1- 1458     	SUBAR	_keyCount,W
     0009 0803                      1- 1459     	BTRSS	STATUS,0
     000A 3rrr                      1- 1460     	LGOTO	_00445_DS_
                                    1- 1461     	.line	558, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1462     	MOVIA	0xc8
     000C 00rr                      1- 1463     	MOVAR	_keyCount
                                    1- 1464     	.line	559, "main.c"; 	if(!longPressFlag)
                                    1- 1465     	BANKSEL	_Status
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 0Crr                      1- 1466     	BTRSC	_Status,1
     000F 3rrr                      1- 1467     	LGOTO	_00445_DS_
                                    1- 1468     	.line	561, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1469     	BSR	_Status,1
                                    1- 1470     	.line	562, "main.c"; 	return 2;
     0011 2102                      1- 1471     	MOVIA	0x02
     0012 3rrr                      1- 1472     	LGOTO	_00446_DS_
                                    1- 1473     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 1474     _00444_DS_:
                                    1- 1475     	.line	568, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 1476     	MOVIA	0xc8
                                    1- 1477     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1478     	SUBAR	_keyCount,W
     0016 0803                      1- 1479     	BTRSS	STATUS,0
     0017 3rrr                      1- 1480     	LGOTO	_00441_DS_
                                    1- 1481     	.line	570, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1482     	CLRR	_keyCount
                                    1- 1483     	.line	571, "main.c"; 	longPressFlag = 0;
                                    1- 1484     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Crr                      1- 1485     	BCR	_Status,1
                                    1- 1486     	.line	572, "main.c"; 	return	0;
     001B 2100                      1- 1487     	MOVIA	0x00
     001C 3rrr                      1- 1488     	LGOTO	_00446_DS_
                                    1- 1489     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 1490     _00441_DS_:
                                    1- 1491     	.line	574, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 1492     	MOVIA	0x08
                                    1- 1493     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 1494     	SUBAR	_keyCount,W
     0020 0803                      1- 1495     	BTRSS	STATUS,0
     0021 3rrr                      1- 1496     	LGOTO	_00442_DS_
                                    1- 1497     	.line	576, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1498     	CLRR	_keyCount
                                    1- 1499     	.line	577, "main.c"; 	return	1;
     0023 2101                      1- 1500     	MOVIA	0x01
     0024 3rrr                      1- 1501     	LGOTO	_00446_DS_
     0025                           1- 1502     _00442_DS_:
                                    1- 1503     	.line	579, "main.c"; 	keyCount = 0;
                                    1- 1504     	BANKSEL	_keyCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 1505     	CLRR	_keyCount
     0027                           1- 1506     _00445_DS_:
                                    1- 1507     	.line	581, "main.c"; 	return 0;
     0027 2100                      1- 1508     	MOVIA	0x00
     0028                           1- 1509     _00446_DS_:
                                    1- 1510     	.line	582, "main.c"; 	}
                                    1- 1511     	RETURN	
     0028 0010                      3-   26 m1      ret
                                    1- 1512     ; exit point of _keyRead
                                    1- 1514     ;***
                                    1- 1515     ;  pBlock Stats: dbName = C
                                    1- 1516     ;***
                                    1- 1517     ;has an exit
                                    1- 1518     ;functions called:
                                    1- 1519     ;   _LedInput
                                    1- 1520     ;   _pwmStop
                                    1- 1521     ;   _LedInput
                                    1- 1522     ;   _pwmStop
                                    1- 1523     ;; Starting pCode block
                                    1- 1524     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1526     _gotoSleep:
                                    1- 1527     ; 2 exit points
                                    1- 1528     	.line	527, "main.c"; 	LedInput();
     0000 2rrr                      1- 1529     	LCALL	_LedInput
                                    1- 1530     	.line	528, "main.c"; 	sleepTime = 0;
                                    1- 1531     	BANKSEL	_sleepTime
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1- 1532     	CLRR	_sleepTime
     0003 02rr                      1- 1533     	CLRR	(_sleepTime + 1)
                                    1- 1534     	.line	530, "main.c"; 	pwmStop();
     0004 2rrr                      1- 1535     	LCALL	_pwmStop
                                    1- 1536     	.line	531, "main.c"; 	workStep = 0;
                                    1- 1537     	BANKSEL	_workStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1538     	CLRR	_workStep
                                    1- 1539     	.line	532, "main.c"; 	AWUCON = 0x60;
     0007 2160                      1- 1540     	MOVIA	0x60
     0008 00rr                      1- 1541     	MOVAR	_AWUCON
                                    1- 1542     	.line	533, "main.c"; 	fgPRD = 0;
                                    1- 1543     	BANKSEL	_fgPRD
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 1544     	CLRR	_fgPRD
     000B 02rr                      1- 1545     	CLRR	(_fgPRD + 1)
                                    1- 1546     	.line	534, "main.c"; 	fgCount = 0;
                                    1- 1547     	BANKSEL	_fgCount
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1- 1548     	CLRR	_fgCount
     000E 02rr                      1- 1549     	CLRR	(_fgCount + 1)
                                    1- 1550     	.line	535, "main.c"; 	redLedFlag = 0;
                                    1- 1551     	BANKSEL	_Status
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 1Drr                      1- 1552     	BCR	_Status,2
                                    1- 1553     	.line	536, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0011 210B                      1- 1554     	MOVIA	0x0b
     0012 00rr                      1- 1555     	MOVAR	_INTE
                                    1- 1556     	.line	537, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0013 2118                      1- 1557     	MOVIA	0x18
     0014 00rr                      1- 1558     	MOVAR	_PCON
                                    1- 1559     	.line	538, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0015 02rr                      1- 1560     	CLRR	_INTF
                                    1- 1561     	.line	539, "main.c"; 	CLRWDT();
     0016 0002                      1- 1562     	clrwdt
                                    1- 1563     	.line	540, "main.c"; 	ENI();
     0017 0004                      1- 1564     	ENI
                                    1- 1565     	.line	541, "main.c"; 	SLEEP();
     0018 0001                      1- 1566     	sleep
                                    1- 1567     	.line	542, "main.c"; 	AWUCON = 0x00;
     0019 02rr                      1- 1568     	CLRR	_AWUCON
                                    1- 1569     	.line	543, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     001A 2101                      1- 1570     	MOVIA	0x01
     001B 00rr                      1- 1571     	MOVAR	_INTE
                                    1- 1572     	.line	544, "main.c"; 	INTF = 0;
     001C 02rr                      1- 1573     	CLRR	_INTF
                                    1- 1574     	.line	546, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     001D 21B8                      1- 1575     	MOVIA	0xb8
     001E 00rr                      1- 1576     	MOVAR	_PCON
                                    1- 1577     	.line	548, "main.c"; 	}
                                    1- 1578     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1- 1579     ; exit point of _gotoSleep
                                    1- 1581     ;***
                                    1- 1582     ;  pBlock Stats: dbName = C
                                    1- 1583     ;***
                                    1- 1584     ;has an exit
                                    1- 1585     ;functions called:
                                    1- 1586     ;   _pwmStop
                                    1- 1587     ;   _LEDHOFF
                                    1- 1588     ;   _LEDLOFF
                                    1- 1589     ;   _pwmStop
                                    1- 1590     ;   _LEDHOFF
                                    1- 1591     ;   _LEDLOFF
                                    1- 1592     ;; Starting pCode block
                                    1- 1593     .segment "code"; module=main, function=_powerOff
     0000                           1- 1595     _powerOff:
                                    1- 1596     ; 2 exit points
                                    1- 1597     	.line	517, "main.c"; 	workStep = 0;
                                    1- 1598     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1599     	CLRR	_workStep
                                    1- 1600     	.line	518, "main.c"; 	pwmStop();
     0002 2rrr                      1- 1601     	LCALL	_pwmStop
                                    1- 1602     	.line	519, "main.c"; 	LEDHOFF();
     0003 2rrr                      1- 1603     	LCALL	_LEDHOFF
                                    1- 1604     	.line	520, "main.c"; 	LEDLOFF();
     0004 2rrr                      1- 1605     	LCALL	_LEDLOFF
                                    1- 1606     	.line	521, "main.c"; 	ledStep = 5;
     0005 2105                      1- 1607     	MOVIA	0x05
                                    1- 1608     	BANKSEL	_ledStep
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1609     	MOVAR	_ledStep
                                    1- 1610     	.line	522, "main.c"; 	workStartFlag = 2;
     0008 2102                      1- 1611     	MOVIA	0x02
                                    1- 1612     	BANKSEL	_workStartFlag
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1613     	MOVAR	_workStartFlag
                                    1- 1614     	.line	523, "main.c"; 	}
                                    1- 1615     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 1616     ; exit point of _powerOff
                                    1- 1618     ;***
                                    1- 1619     ;  pBlock Stats: dbName = C
                                    1- 1620     ;***
                                    1- 1621     ;has an exit
                                    1- 1622     ;functions called:
                                    1- 1623     ;   _keyRead
                                    1- 1624     ;   _pwmInit
                                    1- 1625     ;   _powerOff
                                    1- 1626     ;   _pwmInit
                                    1- 1627     ;   _keyRead
                                    1- 1628     ;   _pwmInit
                                    1- 1629     ;   _powerOff
                                    1- 1630     ;   _pwmInit
                                    1- 1631     ;1 compiler assigned register :
                                    1- 1632     ;   r0x102E
                                    1- 1633     ;; Starting pCode block
                                    1- 1634     .segment "code"; module=main, function=_keyCtr
                                    1- 1636     ;local variable name mapping:
     0000                           1- 1638     _keyCtr:
                                    1- 1639     ; 2 exit points
                                    1- 1640     	.line	462, "main.c"; 	if(workStep > 0)
                                    1- 1641     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1642     	MOVR	_workStep,W
     0002 0D03                      1- 1643     	BTRSC	STATUS,2
     0003 3rrr                      1- 1644     	LGOTO	_00395_DS_
                                    1- 1645     	.line	464, "main.c"; 	PORTB |= 0x02;
     0004 18rr                      1- 1646     	BSR	_PORTB,1
     0005 3rrr                      1- 1647     	LGOTO	_00396_DS_
     0006                           1- 1648     _00395_DS_:
                                    1- 1649     	.line	468, "main.c"; 	PORTB &= 0xFD;
     0006 1Crr                      1- 1650     	BCR	_PORTB,1
     0007                           1- 1651     _00396_DS_:
                                    1- 1652     	.line	471, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 1653     	BANKSEL	_PORTA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 07rr                      1- 1654     	COMR	_PORTA,W
                                    1- 1655     	BANKSEL	r0x102E
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1656     	MOVAR	r0x102E
     000B 2140                      1- 1657     	MOVIA	0x40
     000C 10rr                      1- 1658     	ANDAR	r0x102E,F
     000D 01rr                      1- 1659     	MOVR	r0x102E,W
     000E 2rrr                      1- 1660     	LCALL	_keyRead
                                    1- 1661     	BANKSEL	r0x102E
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 1662     	MOVAR	r0x102E
                                    1- 1663     	.line	472, "main.c"; 	if(kclick == 1 && workStep > 0)
     0011 2401                      1- 1664     	XORIA	0x01
     0012 0903                      1- 1665     	BTRSS	STATUS,2
     0013 3rrr                      1- 1666     	LGOTO	_00418_DS_
                                    1- 1667     	BANKSEL	_workStep
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 1668     	MOVR	_workStep,W
     0016 0D03                      1- 1669     	BTRSC	STATUS,2
     0017 3rrr                      1- 1670     	LGOTO	_00418_DS_
                                    1- 1671     	.line	474, "main.c"; 	count500ms = 0;
                                    1- 1672     	BANKSEL	_count500ms
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1- 1673     	CLRR	_count500ms
                                    1- 1674     	.line	475, "main.c"; 	if(workStep > 0)
                                    1- 1675     	BANKSEL	_workStep
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1- 1676     	MOVR	_workStep,W
     001C 0D03                      1- 1677     	BTRSC	STATUS,2
     001D 3rrr                      1- 1678     	LGOTO	_00400_DS_
                                    1- 1679     	.line	477, "main.c"; 	if(++workStep > 4)
     001E 05rr                      1- 1680     	INCR	_workStep,F
                                    1- 1681     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1682     ;;unsigned compare: left >= lit (0x5=5), size=1
     001F 2105                      1- 1683     	MOVIA	0x05
     0020 04rr                      1- 1684     	SUBAR	_workStep,W
     0021 0803                      1- 1685     	BTRSS	STATUS,0
     0022 3rrr                      1- 1686     	LGOTO	_00400_DS_
                                    1- 1687     	.line	478, "main.c"; 	workStep = 1;
     0023 2101                      1- 1688     	MOVIA	0x01
     0024 00rr                      1- 1689     	MOVAR	_workStep
     0025                           1- 1690     _00400_DS_:
                                    1- 1691     	.line	480, "main.c"; 	duty = 1;
     0025 2101                      1- 1692     	MOVIA	0x01
                                    1- 1693     	BANKSEL	_duty
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1- 1694     	MOVAR	_duty
     0028 02rr                      1- 1695     	CLRR	(_duty + 1)
                                    1- 1696     	.line	481, "main.c"; 	fgCount = 0;
                                    1- 1697     	BANKSEL	_fgCount
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 02rr                      1- 1698     	CLRR	_fgCount
     002B 02rr                      1- 1699     	CLRR	(_fgCount + 1)
                                    1- 1700     	.line	482, "main.c"; 	workStartFlag = 0;
                                    1- 1701     	BANKSEL	_workStartFlag
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 02rr                      1- 1702     	CLRR	_workStartFlag
                                    1- 1703     	.line	483, "main.c"; 	if(workStep == 1)
                                    1- 1704     	BANKSEL	_workStep
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1- 1705     	MOVR	_workStep,W
     0030 2401                      1- 1706     	XORIA	0x01
     0031 0903                      1- 1707     	BTRSS	STATUS,2
     0032 3rrr                      1- 1708     	LGOTO	_00410_DS_
                                    1- 1709     	.line	484, "main.c"; 	maxDuty = 37;
     0033 2125                      1- 1710     	MOVIA	0x25
                                    1- 1711     	BANKSEL	_maxDuty
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1712     	MOVAR	_maxDuty
     0036 3rrr                      1- 1713     	LGOTO	_00411_DS_
     0037                           1- 1714     _00410_DS_:
                                    1- 1715     	.line	485, "main.c"; 	else if(workStep == 2)
                                    1- 1716     	BANKSEL	_workStep
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1- 1717     	MOVR	_workStep,W
     0039 2402                      1- 1718     	XORIA	0x02
     003A 0903                      1- 1719     	BTRSS	STATUS,2
     003B 3rrr                      1- 1720     	LGOTO	_00407_DS_
                                    1- 1721     	.line	486, "main.c"; 	maxDuty = 18;
     003C 2112                      1- 1722     	MOVIA	0x12
                                    1- 1723     	BANKSEL	_maxDuty
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 00rr                      1- 1724     	MOVAR	_maxDuty
     003F 3rrr                      1- 1725     	LGOTO	_00411_DS_
     0040                           1- 1726     _00407_DS_:
                                    1- 1727     	.line	487, "main.c"; 	else if(workStep == 3)
                                    1- 1728     	BANKSEL	_workStep
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1- 1729     	MOVR	_workStep,W
     0042 2403                      1- 1730     	XORIA	0x03
     0043 0903                      1- 1731     	BTRSS	STATUS,2
     0044 3rrr                      1- 1732     	LGOTO	_00404_DS_
                                    1- 1733     	.line	488, "main.c"; 	maxDuty = 13;
     0045 210D                      1- 1734     	MOVIA	0x0d
                                    1- 1735     	BANKSEL	_maxDuty
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 00rr                      1- 1736     	MOVAR	_maxDuty
     0048 3rrr                      1- 1737     	LGOTO	_00411_DS_
     0049                           1- 1738     _00404_DS_:
                                    1- 1739     	.line	489, "main.c"; 	else if(workStep == 4)
                                    1- 1740     	BANKSEL	_workStep
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 01rr                      1- 1741     	MOVR	_workStep,W
     004B 2404                      1- 1742     	XORIA	0x04
     004C 0903                      1- 1743     	BTRSS	STATUS,2
     004D 3rrr                      1- 1744     	LGOTO	_00411_DS_
                                    1- 1745     	.line	490, "main.c"; 	maxDuty = 1;
     004E 2101                      1- 1746     	MOVIA	0x01
                                    1- 1747     	BANKSEL	_maxDuty
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1- 1748     	MOVAR	_maxDuty
     0051                           1- 1749     _00411_DS_:
                                    1- 1750     	.line	491, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1751     	BANKSEL	_maxDuty
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 01rr                      1- 1752     	MOVR	_maxDuty,W
     0053 00rr                      1- 1753     	SFUN	_PWM2DUTY
                                    1- 1754     	.line	492, "main.c"; 	pwmInit();
     0054 2rrr                      1- 1755     	LCALL	_pwmInit
     0055 3rrr                      1- 1756     	LGOTO	_00421_DS_
     0056                           1- 1757     _00418_DS_:
                                    1- 1758     	.line	494, "main.c"; 	else if(kclick == 2)
                                    1- 1759     	BANKSEL	r0x102E
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 01rr                      1- 1760     	MOVR	r0x102E,W
     0058 2402                      1- 1761     	XORIA	0x02
     0059 0903                      1- 1762     	BTRSS	STATUS,2
     005A 3rrr                      1- 1763     	LGOTO	_00421_DS_
                                    1- 1764     	.line	496, "main.c"; 	if(workStep > 0)
                                    1- 1765     	BANKSEL	_workStep
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 01rr                      1- 1766     	MOVR	_workStep,W
     005D 0D03                      1- 1767     	BTRSC	STATUS,2
     005E 3rrr                      1- 1768     	LGOTO	_00413_DS_
                                    1- 1769     	.line	498, "main.c"; 	powerOff();
     005F 2rrr                      1- 1770     	LCALL	_powerOff
     0060 3rrr                      1- 1771     	LGOTO	_00421_DS_
     0061                           1- 1772     _00413_DS_:
                                    1- 1773     	.line	502, "main.c"; 	workStartFlag = 1;
     0061 2101                      1- 1774     	MOVIA	0x01
                                    1- 1775     	BANKSEL	_workStartFlag
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 00rr                      1- 1776     	MOVAR	_workStartFlag
                                    1- 1777     	.line	503, "main.c"; 	maxDuty = 37;
     0064 2125                      1- 1778     	MOVIA	0x25
                                    1- 1779     	BANKSEL	_maxDuty
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 00rr                      1- 1780     	MOVAR	_maxDuty
                                    1- 1781     	.line	504, "main.c"; 	workStep = 1;
     0067 2101                      1- 1782     	MOVIA	0x01
                                    1- 1783     	BANKSEL	_workStep
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 00rr                      1- 1784     	MOVAR	_workStep
                                    1- 1785     	.line	505, "main.c"; 	ledStep = 0;
                                    1- 1786     	BANKSEL	_ledStep
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 02rr                      1- 1787     	CLRR	_ledStep
                                    1- 1788     	.line	506, "main.c"; 	count500ms = 0;
                                    1- 1789     	BANKSEL	_count500ms
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 02rr                      1- 1790     	CLRR	_count500ms
                                    1- 1791     	.line	507, "main.c"; 	pwmInit();
     006E 2rrr                      1- 1792     	LCALL	_pwmInit
                                    1- 1793     	.line	508, "main.c"; 	duty = 1;
     006F 2101                      1- 1794     	MOVIA	0x01
                                    1- 1795     	BANKSEL	_duty
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 00rr                      1- 1796     	MOVAR	_duty
     0072 02rr                      1- 1797     	CLRR	(_duty + 1)
                                    1- 1798     	.line	509, "main.c"; 	fgCount = 0;
                                    1- 1799     	BANKSEL	_fgCount
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 02rr                      1- 1800     	CLRR	_fgCount
     0075 02rr                      1- 1801     	CLRR	(_fgCount + 1)
     0076                           1- 1802     _00421_DS_:
                                    1- 1803     	.line	513, "main.c"; 	}
                                    1- 1804     	RETURN	
     0076 0010                      3-   26 m1      ret
                                    1- 1805     ; exit point of _keyCtr
                                    1- 1807     ;***
                                    1- 1808     ;  pBlock Stats: dbName = C
                                    1- 1809     ;***
                                    1- 1810     ;functions called:
                                    1- 1811     ;   _pwmInit
                                    1- 1812     ;   _pwmInit
                                    1- 1813     ;; Starting pCode block
                                    1- 1814     .segment "code"; module=main, function=_ledCtr
     0000                           1- 1816     _ledCtr:
                                    1- 1817     ; 0 exit points
                                    1- 1818     	.line	431, "main.c"; 	if(workStartFlag == 1)
                                    1- 1819     	BANKSEL	_workStartFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1820     	MOVR	_workStartFlag,W
     0002 2401                      1- 1821     	XORIA	0x01
     0003 0903                      1- 1822     	BTRSS	STATUS,2
     0004 3rrr                      1- 1823     	LGOTO	_00387_DS_
                                    1- 1824     	.line	434, "main.c"; 	if(++ledStep > 4)
                                    1- 1825     	BANKSEL	_ledStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1826     	INCR	_ledStep,F
                                    1- 1827     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1828     ;;unsigned compare: left >= lit (0x5=5), size=1
     0007 2105                      1- 1829     	MOVIA	0x05
     0008 04rr                      1- 1830     	SUBAR	_ledStep,W
     0009 0803                      1- 1831     	BTRSS	STATUS,0
     000A 3rrr                      1- 1832     	LGOTO	_00389_DS_
                                    1- 1833     	.line	436, "main.c"; 	ledStep = workStep;
                                    1- 1834     	BANKSEL	_workStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1835     	MOVR	_workStep,W
                                    1- 1836     	BANKSEL	_ledStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1837     	MOVAR	_ledStep
                                    1- 1838     	.line	437, "main.c"; 	workStartFlag = 3;
     000F 2103                      1- 1839     	MOVIA	0x03
                                    1- 1840     	BANKSEL	_workStartFlag
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1841     	MOVAR	_workStartFlag
     0012 3rrr                      1- 1842     	LGOTO	_00389_DS_
     0013                           1- 1843     _00387_DS_:
                                    1- 1844     	.line	441, "main.c"; 	else if(workStartFlag == 2)
                                    1- 1845     	BANKSEL	_workStartFlag
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1846     	MOVR	_workStartFlag,W
     0015 2402                      1- 1847     	XORIA	0x02
     0016 0903                      1- 1848     	BTRSS	STATUS,2
     0017 3rrr                      1- 1849     	LGOTO	_00384_DS_
                                    1- 1850     	.line	443, "main.c"; 	if(ledStep > 0)
                                    1- 1851     	BANKSEL	_ledStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1852     	MOVR	_ledStep,W
     001A 0D03                      1- 1853     	BTRSC	STATUS,2
     001B 3rrr                      1- 1854     	LGOTO	_00389_DS_
                                    1- 1855     	.line	445, "main.c"; 	ledStep--;
     001C 17rr                      1- 1856     	DECRSZ	_ledStep,F
                                    1- 1857     	.line	446, "main.c"; 	if(ledStep == 0)
     001D 3rrr                      1- 1858     	LGOTO	_00389_DS_
                                    1- 1859     	.line	447, "main.c"; 	workStartFlag = 0;
                                    1- 1860     	BANKSEL	_workStartFlag
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 02rr                      1- 1861     	CLRR	_workStartFlag
     0020 3rrr                      1- 1862     	LGOTO	_00389_DS_
     0021                           1- 1863     _00384_DS_:
                                    1- 1864     	.line	452, "main.c"; 	ledStep = workStep;
                                    1- 1865     	BANKSEL	_workStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1866     	MOVR	_workStep,W
                                    1- 1867     	BANKSEL	_ledStep
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1868     	MOVAR	_ledStep
                                    1- 1869     	.line	453, "main.c"; 	if(workStep)
                                    1- 1870     	BANKSEL	_workStep
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 1871     	MOVR	_workStep,W
     0027 0903                      1- 1872     	BTRSS	STATUS,2
                                    1- 1873     	.line	454, "main.c"; 	pwmInit();
     0028 2rrr                      1- 1874     	LCALL	_pwmInit
     0029                           1- 1875     _00389_DS_:
                                    1- 1876     	.line	457, "main.c"; 	}
                                    1- 1877     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1- 1879     ;***
                                    1- 1880     ;  pBlock Stats: dbName = C
                                    1- 1881     ;***
                                    1- 1882     ;has an exit
                                    1- 1883     ;functions called:
                                    1- 1884     ;   _LEDLON
                                    1- 1885     ;   _LEDHON
                                    1- 1886     ;   _LEDHOFF
                                    1- 1887     ;   _LEDLOFF
                                    1- 1888     ;   _LEDHON
                                    1- 1889     ;   _LEDHOFF
                                    1- 1890     ;   _LEDLOFF
                                    1- 1891     ;   _LEDHON
                                    1- 1892     ;   _LEDLOFF
                                    1- 1893     ;   _LEDHOFF
                                    1- 1894     ;   _LEDLON
                                    1- 1895     ;   _LEDHON
                                    1- 1896     ;   _LEDHOFF
                                    1- 1897     ;   _LEDLOFF
                                    1- 1898     ;   _LEDHON
                                    1- 1899     ;   _LEDHOFF
                                    1- 1900     ;   _LEDLOFF
                                    1- 1901     ;   _LEDHON
                                    1- 1902     ;   _LEDLOFF
                                    1- 1903     ;   _LEDHOFF
                                    1- 1904     ;; Starting pCode block
                                    1- 1905     .segment "code"; module=main, function=_LedCtr2
     0000                           1- 1907     _LedCtr2:
                                    1- 1908     ; 2 exit points
                                    1- 1909     	.line	382, "main.c"; 	if(++startStep > 6)
                                    1- 1910     	BANKSEL	_startStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1911     	INCR	_startStep,F
                                    1- 1912     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1913     ;;unsigned compare: left >= lit (0x7=7), size=1
     0002 2107                      1- 1914     	MOVIA	0x07
     0003 04rr                      1- 1915     	SUBAR	_startStep,W
     0004 0803                      1- 1916     	BTRSS	STATUS,0
     0005 3rrr                      1- 1917     	LGOTO	_00344_DS_
                                    1- 1918     	.line	384, "main.c"; 	workStartFlag = 0;
                                    1- 1919     	BANKSEL	_workStartFlag
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 1920     	CLRR	_workStartFlag
                                    1- 1921     	.line	385, "main.c"; 	startStep = 0;
                                    1- 1922     	BANKSEL	_startStep
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 1923     	CLRR	_startStep
                                    1- 1924     	.line	386, "main.c"; 	ledStep = workStep;
                                    1- 1925     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1926     	MOVR	_workStep,W
                                    1- 1927     	BANKSEL	_ledStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1928     	MOVAR	_ledStep
                                    1- 1929     	.line	387, "main.c"; 	redLedFlag = 0;
                                    1- 1930     	BANKSEL	_Status
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 1Drr                      1- 1931     	BCR	_Status,2
     0010                           1- 1932     _00344_DS_:
                                    1- 1933     	.line	389, "main.c"; 	if(redLedFlag && startStep > 2)
                                    1- 1934     	BANKSEL	_Status
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 09rr                      1- 1935     	BTRSS	_Status,2
     0012 3rrr                      1- 1936     	LGOTO	_00346_DS_
                                    1- 1937     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1938     ;;unsigned compare: left >= lit (0x3=3), size=1
     0013 2103                      1- 1939     	MOVIA	0x03
                                    1- 1940     	BANKSEL	_startStep
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1941     	SUBAR	_startStep,W
     0016 0C03                      1- 1942     	BTRSC	STATUS,0
                                    1- 1943     	.line	390, "main.c"; 	return;
     0017 3rrr                      1- 1944     	LGOTO	_00370_DS_
     0018                           1- 1945     _00346_DS_:
                                    1- 1946     	.line	392, "main.c"; 	if(startStep == 1)
                                    1- 1947     	BANKSEL	_startStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1948     	MOVR	_startStep,W
     001A 2401                      1- 1949     	XORIA	0x01
     001B 0903                      1- 1950     	BTRSS	STATUS,2
     001C 3rrr                      1- 1951     	LGOTO	_00368_DS_
                                    1- 1952     	.line	394, "main.c"; 	if(pwStep == 1)
                                    1- 1953     	BANKSEL	_pwStep
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1954     	MOVR	_pwStep,W
     001F 2401                      1- 1955     	XORIA	0x01
     0020 0903                      1- 1956     	BTRSS	STATUS,2
     0021 3rrr                      1- 1957     	LGOTO	_00351_DS_
                                    1- 1958     	.line	396, "main.c"; 	LEDLON();
     0022 2rrr                      1- 1959     	LCALL	_LEDLON
                                    1- 1960     	.line	397, "main.c"; 	redLedFlag = 1;
                                    1- 1961     	BANKSEL	_Status
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 19rr                      1- 1962     	BSR	_Status,2
     0025 3rrr                      1- 1963     	LGOTO	_00370_DS_
                                    1- 1964     ;;unsigned compare: left < lit (0x2=2), size=1
     0026                           1- 1965     _00351_DS_:
                                    1- 1966     	.line	399, "main.c"; 	else if(pwStep >= 2)
     0026 2102                      1- 1967     	MOVIA	0x02
                                    1- 1968     	BANKSEL	_pwStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 04rr                      1- 1969     	SUBAR	_pwStep,W
     0029 0803                      1- 1970     	BTRSS	STATUS,0
     002A 3rrr                      1- 1971     	LGOTO	_00370_DS_
                                    1- 1972     	.line	401, "main.c"; 	LEDHON();
     002B 2rrr                      1- 1973     	LCALL	_LEDHON
     002C 3rrr                      1- 1974     	LGOTO	_00370_DS_
     002D                           1- 1975     _00368_DS_:
                                    1- 1976     	.line	404, "main.c"; 	else if(startStep == 2)
                                    1- 1977     	BANKSEL	_startStep
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1- 1978     	MOVR	_startStep,W
     002F 2402                      1- 1979     	XORIA	0x02
     0030 0903                      1- 1980     	BTRSS	STATUS,2
     0031 3rrr                      1- 1981     	LGOTO	_00365_DS_
                                    1- 1982     	.line	406, "main.c"; 	LEDHOFF();
     0032 2rrr                      1- 1983     	LCALL	_LEDHOFF
                                    1- 1984     	.line	407, "main.c"; 	LEDLOFF();
     0033 2rrr                      1- 1985     	LCALL	_LEDLOFF
     0034 3rrr                      1- 1986     	LGOTO	_00370_DS_
     0035                           1- 1987     _00365_DS_:
                                    1- 1988     	.line	409, "main.c"; 	else if(startStep == 3 && pwStep >= 3)
                                    1- 1989     	BANKSEL	_startStep
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1990     	MOVR	_startStep,W
     0037 2403                      1- 1991     	XORIA	0x03
     0038 0903                      1- 1992     	BTRSS	STATUS,2
     0039 3rrr                      1- 1993     	LGOTO	_00361_DS_
                                    1- 1994     ;;unsigned compare: left < lit (0x3=3), size=1
     003A 2103                      1- 1995     	MOVIA	0x03
                                    1- 1996     	BANKSEL	_pwStep
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 04rr                      1- 1997     	SUBAR	_pwStep,W
     003D 0803                      1- 1998     	BTRSS	STATUS,0
     003E 3rrr                      1- 1999     	LGOTO	_00361_DS_
                                    1- 2000     	.line	411, "main.c"; 	LEDHON();
     003F 2rrr                      1- 2001     	LCALL	_LEDHON
     0040 3rrr                      1- 2002     	LGOTO	_00370_DS_
     0041                           1- 2003     _00361_DS_:
                                    1- 2004     	.line	413, "main.c"; 	else if(startStep == 4)
                                    1- 2005     	BANKSEL	_startStep
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 2006     	MOVR	_startStep,W
     0043 2404                      1- 2007     	XORIA	0x04
     0044 0903                      1- 2008     	BTRSS	STATUS,2
     0045 3rrr                      1- 2009     	LGOTO	_00358_DS_
                                    1- 2010     	.line	415, "main.c"; 	LEDHOFF();
     0046 2rrr                      1- 2011     	LCALL	_LEDHOFF
                                    1- 2012     	.line	416, "main.c"; 	LEDLOFF();
     0047 2rrr                      1- 2013     	LCALL	_LEDLOFF
     0048 3rrr                      1- 2014     	LGOTO	_00370_DS_
     0049                           1- 2015     _00358_DS_:
                                    1- 2016     	.line	418, "main.c"; 	else if(startStep == 5 && pwStep >= 4)
                                    1- 2017     	BANKSEL	_startStep
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 01rr                      1- 2018     	MOVR	_startStep,W
     004B 2405                      1- 2019     	XORIA	0x05
     004C 0903                      1- 2020     	BTRSS	STATUS,2
     004D 3rrr                      1- 2021     	LGOTO	_00354_DS_
                                    1- 2022     ;;unsigned compare: left < lit (0x4=4), size=1
     004E 2104                      1- 2023     	MOVIA	0x04
                                    1- 2024     	BANKSEL	_pwStep
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 04rr                      1- 2025     	SUBAR	_pwStep,W
     0051 0803                      1- 2026     	BTRSS	STATUS,0
     0052 3rrr                      1- 2027     	LGOTO	_00354_DS_
                                    1- 2028     	.line	420, "main.c"; 	LEDHON();
     0053 2rrr                      1- 2029     	LCALL	_LEDHON
     0054 3rrr                      1- 2030     	LGOTO	_00370_DS_
     0055                           1- 2031     _00354_DS_:
                                    1- 2032     	.line	424, "main.c"; 	LEDLOFF();
     0055 2rrr                      1- 2033     	LCALL	_LEDLOFF
                                    1- 2034     	.line	425, "main.c"; 	LEDHOFF();
     0056 2rrr                      1- 2035     	LCALL	_LEDHOFF
     0057                           1- 2036     _00370_DS_:
                                    1- 2037     	.line	427, "main.c"; 	}
                                    1- 2038     	RETURN	
     0057 0010                      3-   26 m1      ret
                                    1- 2039     ; exit point of _LedCtr2
                                    1- 2041     ;***
                                    1- 2042     ;  pBlock Stats: dbName = C
                                    1- 2043     ;***
                                    1- 2044     ;has an exit
                                    1- 2045     ;1 compiler assigned register :
                                    1- 2046     ;   r0x102F
                                    1- 2047     ;; Starting pCode block
                                    1- 2048     .segment "code"; module=main, function=_workCtr
                                    1- 2050     ;local variable name mapping:
     0000                           1- 2052     _workCtr:
                                    1- 2053     ; 2 exit points
                                    1- 2054     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2055     ;;unsigned compare: left >= lit (0x47=71), size=2
                                    1- 2056     	.line	350, "main.c"; 	if(fgPRD > 70)
     0000 2100                      1- 2057     	MOVIA	0x00
                                    1- 2058     	BANKSEL	_fgPRD
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 2059     	SUBAR	(_fgPRD + 1),W
     0003 0903                      1- 2060     	BTRSS	STATUS,2
     0004 3rrr                      1- 2061     	LGOTO	_00338_DS_
     0005 2147                      1- 2062     	MOVIA	0x47
     0006 04rr                      1- 2063     	SUBAR	_fgPRD,W
     0007                           1- 2064     _00338_DS_:
     0007 0803                      1- 2065     	BTRSS	STATUS,0
     0008 3rrr                      1- 2066     	LGOTO	_00319_DS_
                                    1- 2067     	.line	353, "main.c"; 	u8t minDuty = 36;
     0009 2124                      1- 2068     	MOVIA	0x24
                                    1- 2069     	BANKSEL	r0x102F
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 2070     	MOVAR	r0x102F
                                    1- 2071     	.line	354, "main.c"; 	if(workStep == 1)
                                    1- 2072     	BANKSEL	_workStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 2073     	MOVR	_workStep,W
     000E 2401                      1- 2074     	XORIA	0x01
     000F 0903                      1- 2075     	BTRSS	STATUS,2
     0010 3rrr                      1- 2076     	LGOTO	_00316_DS_
                                    1- 2077     	.line	355, "main.c"; 	minDuty = 36;
     0011 2124                      1- 2078     	MOVIA	0x24
                                    1- 2079     	BANKSEL	r0x102F
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2080     	MOVAR	r0x102F
     0014 3rrr                      1- 2081     	LGOTO	_00317_DS_
     0015                           1- 2082     _00316_DS_:
                                    1- 2083     	.line	356, "main.c"; 	else if(workStep == 2)
                                    1- 2084     	BANKSEL	_workStep
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2085     	MOVR	_workStep,W
     0017 2402                      1- 2086     	XORIA	0x02
     0018 0903                      1- 2087     	BTRSS	STATUS,2
     0019 3rrr                      1- 2088     	LGOTO	_00313_DS_
                                    1- 2089     	.line	357, "main.c"; 	minDuty = 15;
     001A 210F                      1- 2090     	MOVIA	0x0f
                                    1- 2091     	BANKSEL	r0x102F
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 2092     	MOVAR	r0x102F
     001D 3rrr                      1- 2093     	LGOTO	_00317_DS_
     001E                           1- 2094     _00313_DS_:
                                    1- 2095     	.line	358, "main.c"; 	else if(workStep == 3)
                                    1- 2096     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 2097     	MOVR	_workStep,W
     0020 2403                      1- 2098     	XORIA	0x03
     0021 0903                      1- 2099     	BTRSS	STATUS,2
     0022 3rrr                      1- 2100     	LGOTO	_00310_DS_
                                    1- 2101     	.line	359, "main.c"; 	minDuty = 11;
     0023 210B                      1- 2102     	MOVIA	0x0b
                                    1- 2103     	BANKSEL	r0x102F
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 2104     	MOVAR	r0x102F
     0026 3rrr                      1- 2105     	LGOTO	_00317_DS_
     0027                           1- 2106     _00310_DS_:
                                    1- 2107     	.line	360, "main.c"; 	else if(workStep == 4)
                                    1- 2108     	BANKSEL	_workStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 2109     	MOVR	_workStep,W
     0029 2404                      1- 2110     	XORIA	0x04
     002A 0903                      1- 2111     	BTRSS	STATUS,2
     002B 3rrr                      1- 2112     	LGOTO	_00317_DS_
                                    1- 2113     	.line	361, "main.c"; 	minDuty = 1;
     002C 2101                      1- 2114     	MOVIA	0x01
                                    1- 2115     	BANKSEL	r0x102F
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 2116     	MOVAR	r0x102F
     002F                           1- 2117     _00317_DS_:
                                    1- 2118     	.line	362, "main.c"; 	PWM2DUTY = minDuty;
                                    1- 2119     	BANKSEL	r0x102F
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 2120     	MOVR	r0x102F,W
     0031 00rr                      1- 2121     	SFUN	_PWM2DUTY
     0032 3rrr                      1- 2122     	LGOTO	_00321_DS_
     0033                           1- 2123     _00319_DS_:
                                    1- 2124     	.line	375, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2125     	BANKSEL	_maxDuty
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 2126     	MOVR	_maxDuty,W
     0035 00rr                      1- 2127     	SFUN	_PWM2DUTY
     0036                           1- 2128     _00321_DS_:
                                    1- 2129     	.line	377, "main.c"; 	}
                                    1- 2130     	RETURN	
     0036 0010                      3-   26 m1      ret
                                    1- 2131     ; exit point of _workCtr
                                    1- 2133     ;***
                                    1- 2134     ;  pBlock Stats: dbName = C
                                    1- 2135     ;***
                                    1- 2136     ;has an exit
                                    1- 2137     ;; Starting pCode block
                                    1- 2138     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2140     _pwmStop:
                                    1- 2141     ; 2 exit points
                                    1- 2142     	.line	344, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2143     	CLRA	
     0001 00rr                      1- 2144     	SFUN	_T2CR1
                                    1- 2145     	.line	345, "main.c"; 	}
                                    1- 2146     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2147     ; exit point of _pwmStop
                                    1- 2149     ;***
                                    1- 2150     ;  pBlock Stats: dbName = C
                                    1- 2151     ;***
                                    1- 2152     ;has an exit
                                    1- 2153     ;1 compiler assigned register :
                                    1- 2154     ;   r0x102D
                                    1- 2155     ;; Starting pCode block
                                    1- 2156     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2158     _pwmInit:
                                    1- 2159     ; 2 exit points
                                    1- 2160     	.line	332, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2161     	SFUNR	_T2CR1
                                    1- 2162     	BANKSEL	r0x102D
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2163     	MOVAR	r0x102D
     0003 0Frr                      1- 2164     	BTRSC	r0x102D,7
                                    1- 2165     	.line	333, "main.c"; 	return;
     0004 3rrr                      1- 2166     	LGOTO	_00298_DS_
                                    1- 2167     	.line	334, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2168     	CLRR	_TMRH
                                    1- 2169     	.line	335, "main.c"; 	TMR2 = 128;							//频率为110K
     0006 2180                      1- 2170     	MOVIA	0x80
     0007 00rr                      1- 2171     	SFUN	_TMR2
                                    1- 2172     	.line	338, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2173     	CLRA	
     0009 00rr                      1- 2174     	SFUN	_T2CR2
                                    1- 2175     	.line	339, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2176     	MOVIA	0x83
     000B 00rr                      1- 2177     	SFUN	_T2CR1
     000C                           1- 2178     _00298_DS_:
                                    1- 2179     	.line	340, "main.c"; 	}
                                    1- 2180     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2181     ; exit point of _pwmInit
                                    1- 2183     ;***
                                    1- 2184     ;  pBlock Stats: dbName = C
                                    1- 2185     ;***
                                    1- 2186     ;has an exit
                                    1- 2187     ;functions called:
                                    1- 2188     ;   _delay
                                    1- 2189     ;   _LedInput
                                    1- 2190     ;   _delay
                                    1- 2191     ;   _LedInput
                                    1- 2192     ;1 compiler assigned register :
                                    1- 2193     ;   r0x1030
                                    1- 2194     ;; Starting pCode block
                                    1- 2195     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2197     _LED4ON:
                                    1- 2198     ; 2 exit points
                                    1- 2199     	.line	323, "main.c"; 	IOSTB &= 0xF7;
     0000 001r                      1- 2200     	IOSTR	_IOSTB
                                    1- 2201     	BANKSEL	r0x1030
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2202     	MOVAR	r0x1030
     0003 1Drr                      1- 2203     	BCR	r0x1030,3
     0004 01rr                      1- 2204     	MOVR	r0x1030,W
     0005 000r                      1- 2205     	IOST	_IOSTB
                                    1- 2206     	.line	324, "main.c"; 	PORTB |= 0x08;
     0006 19rr                      1- 2207     	BSR	_PORTB,3
                                    1- 2208     	.line	325, "main.c"; 	delay(100);
     0007 2164                      1- 2209     	MOVIA	0x64
     0008 2rrr                      1- 2210     	LCALL	_delay
                                    1- 2211     	.line	326, "main.c"; 	LedInput();
     0009 2rrr                      1- 2212     	LCALL	_LedInput
                                    1- 2213     	.line	327, "main.c"; 	}
                                    1- 2214     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 2215     ; exit point of _LED4ON
                                    1- 2217     ;***
                                    1- 2218     ;  pBlock Stats: dbName = C
                                    1- 2219     ;***
                                    1- 2220     ;has an exit
                                    1- 2221     ;functions called:
                                    1- 2222     ;   _delay
                                    1- 2223     ;   _LedInput
                                    1- 2224     ;   _delay
                                    1- 2225     ;   _LedInput
                                    1- 2226     ;1 compiler assigned register :
                                    1- 2227     ;   r0x1031
                                    1- 2228     ;; Starting pCode block
                                    1- 2229     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2231     _LED3ON:
                                    1- 2232     ; 2 exit points
                                    1- 2233     	.line	315, "main.c"; 	IOSTA &= 0X7F;
     0000 001r                      1- 2234     	IOSTR	_IOSTA
                                    1- 2235     	BANKSEL	r0x1031
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2236     	MOVAR	r0x1031
     0003 1Frr                      1- 2237     	BCR	r0x1031,7
     0004 01rr                      1- 2238     	MOVR	r0x1031,W
     0005 000r                      1- 2239     	IOST	_IOSTA
                                    1- 2240     	.line	316, "main.c"; 	PORTA |= 0X80;
                                    1- 2241     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Brr                      1- 2242     	BSR	_PORTA,7
                                    1- 2243     	.line	317, "main.c"; 	delay(100);
     0008 2164                      1- 2244     	MOVIA	0x64
     0009 2rrr                      1- 2245     	LCALL	_delay
                                    1- 2246     	.line	318, "main.c"; 	LedInput();
     000A 2rrr                      1- 2247     	LCALL	_LedInput
                                    1- 2248     	.line	319, "main.c"; 	}
                                    1- 2249     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 2250     ; exit point of _LED3ON
                                    1- 2252     ;***
                                    1- 2253     ;  pBlock Stats: dbName = C
                                    1- 2254     ;***
                                    1- 2255     ;has an exit
                                    1- 2256     ;functions called:
                                    1- 2257     ;   _delay
                                    1- 2258     ;   _LedInput
                                    1- 2259     ;   _delay
                                    1- 2260     ;   _LedInput
                                    1- 2261     ;1 compiler assigned register :
                                    1- 2262     ;   r0x1032
                                    1- 2263     ;; Starting pCode block
                                    1- 2264     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2266     _LED2ON:
                                    1- 2267     ; 2 exit points
                                    1- 2268     	.line	307, "main.c"; 	IOSTA &= 0XFD;
     0000 001r                      1- 2269     	IOSTR	_IOSTA
                                    1- 2270     	BANKSEL	r0x1032
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2271     	MOVAR	r0x1032
     0003 1Crr                      1- 2272     	BCR	r0x1032,1
     0004 01rr                      1- 2273     	MOVR	r0x1032,W
     0005 000r                      1- 2274     	IOST	_IOSTA
                                    1- 2275     	.line	308, "main.c"; 	PORTA |= 0X02;
                                    1- 2276     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 18rr                      1- 2277     	BSR	_PORTA,1
                                    1- 2278     	.line	309, "main.c"; 	delay(100);
     0008 2164                      1- 2279     	MOVIA	0x64
     0009 2rrr                      1- 2280     	LCALL	_delay
                                    1- 2281     	.line	310, "main.c"; 	LedInput();
     000A 2rrr                      1- 2282     	LCALL	_LedInput
                                    1- 2283     	.line	311, "main.c"; 	}
                                    1- 2284     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 2285     ; exit point of _LED2ON
                                    1- 2287     ;***
                                    1- 2288     ;  pBlock Stats: dbName = C
                                    1- 2289     ;***
                                    1- 2290     ;has an exit
                                    1- 2291     ;functions called:
                                    1- 2292     ;   _delay
                                    1- 2293     ;   _LedInput
                                    1- 2294     ;   _delay
                                    1- 2295     ;   _LedInput
                                    1- 2296     ;1 compiler assigned register :
                                    1- 2297     ;   r0x1033
                                    1- 2298     ;; Starting pCode block
                                    1- 2299     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2301     _LED1ON:
                                    1- 2302     ; 2 exit points
                                    1- 2303     	.line	299, "main.c"; 	IOSTA &= 0XFE;
     0000 001r                      1- 2304     	IOSTR	_IOSTA
                                    1- 2305     	BANKSEL	r0x1033
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2306     	MOVAR	r0x1033
     0003 1Crr                      1- 2307     	BCR	r0x1033,0
     0004 01rr                      1- 2308     	MOVR	r0x1033,W
     0005 000r                      1- 2309     	IOST	_IOSTA
                                    1- 2310     	.line	300, "main.c"; 	PORTA |= 0X01;
                                    1- 2311     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 18rr                      1- 2312     	BSR	_PORTA,0
                                    1- 2313     	.line	301, "main.c"; 	delay(100);
     0008 2164                      1- 2314     	MOVIA	0x64
     0009 2rrr                      1- 2315     	LCALL	_delay
                                    1- 2316     	.line	302, "main.c"; 	LedInput();
     000A 2rrr                      1- 2317     	LCALL	_LedInput
                                    1- 2318     	.line	303, "main.c"; 	}
                                    1- 2319     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 2320     ; exit point of _LED1ON
                                    1- 2322     ;***
                                    1- 2323     ;  pBlock Stats: dbName = C
                                    1- 2324     ;***
                                    1- 2325     ;has an exit
                                    1- 2326     ;1 compiler assigned register :
                                    1- 2327     ;   r0x102B
                                    1- 2328     ;; Starting pCode block
                                    1- 2329     .segment "code"; module=main, function=_LedInput
     0000                           1- 2331     _LedInput:
                                    1- 2332     ; 2 exit points
                                    1- 2333     	.line	291, "main.c"; 	IOSTA |= 0x83;
     0000 001r                      1- 2334     	IOSTR	_IOSTA
                                    1- 2335     	BANKSEL	r0x102B
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2336     	MOVAR	r0x102B
     0003 2183                      1- 2337     	MOVIA	0x83
     0004 11rr                      1- 2338     	IORAR	r0x102B,F
     0005 01rr                      1- 2339     	MOVR	r0x102B,W
     0006 000r                      1- 2340     	IOST	_IOSTA
                                    1- 2341     	.line	292, "main.c"; 	IOSTB |= 0x08;
     0007 001r                      1- 2342     	IOSTR	_IOSTB
     0008 00rr                      1- 2343     	MOVAR	r0x102B
     0009 19rr                      1- 2344     	BSR	r0x102B,3
     000A 01rr                      1- 2345     	MOVR	r0x102B,W
     000B 000r                      1- 2346     	IOST	_IOSTB
                                    1- 2347     	.line	293, "main.c"; 	PORTA &= 0x7C;
     000C 217C                      1- 2348     	MOVIA	0x7c
                                    1- 2349     	BANKSEL	_PORTA
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 10rr                      1- 2350     	ANDAR	_PORTA,F
                                    1- 2351     	.line	294, "main.c"; 	PORTB &= 0xF7;
     000F 1Drr                      1- 2352     	BCR	_PORTB,3
                                    1- 2353     	.line	295, "main.c"; 	}
                                    1- 2354     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 2355     ; exit point of _LedInput
                                    1- 2357     ;***
                                    1- 2358     ;  pBlock Stats: dbName = C
                                    1- 2359     ;***
                                    1- 2360     ;has an exit
                                    1- 2361     ;functions called:
                                    1- 2362     ;   _LedInput
                                    1- 2363     ;   _LedInput
                                    1- 2364     ;   _LED4ON
                                    1- 2365     ;   _LED1ON
                                    1- 2366     ;   _LED3ON
                                    1- 2367     ;   _LED2ON
                                    1- 2368     ;   _LedInput
                                    1- 2369     ;   _LedInput
                                    1- 2370     ;   _LED4ON
                                    1- 2371     ;   _LED1ON
                                    1- 2372     ;   _LED3ON
                                    1- 2373     ;   _LED2ON
                                    1- 2374     ;; Starting pCode block
                                    1- 2375     .segment "code"; module=main, function=_ledShow
     0000                           1- 2377     _ledShow:
                                    1- 2378     ; 2 exit points
                                    1- 2379     	.line	269, "main.c"; 	LedInput();
     0000 2rrr                      1- 2380     	LCALL	_LedInput
                                    1- 2381     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2382     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2383     	.line	270, "main.c"; 	switch(ledStep)
     0001 2105                      1- 2384     	MOVIA	0x05
                                    1- 2385     	BANKSEL	_ledStep
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 2386     	SUBAR	_ledStep,W
     0004 0C03                      1- 2387     	BTRSC	STATUS,0
     0005 3rrr                      1- 2388     	LGOTO	_00265_DS_
     0006 21rr                      1- 2389     	MOVIA	((_00271_DS_ >> 8) & 0xff)
     0007 008A                      1- 2390     	MOVAR	PCHBUF
     0008 01rr                      1- 2391     	MOVR	_ledStep,W
     0009 25rr                      1- 2392     	ADDIA	_00271_DS_
     000A 0C03                      1- 2393     	BTRSC	STATUS,0
     000B 058A                      1- 2394     	INCR	PCHBUF,F
     000C 0082                      1- 2395     	MOVAR	PCL
     000D                           1- 2396     _00271_DS_:
     000D 3rrr                      1- 2397     	LGOTO	_00259_DS_
     000E 3rrr                      1- 2398     	LGOTO	_00263_DS_
     000F 3rrr                      1- 2399     	LGOTO	_00262_DS_
     0010 3rrr                      1- 2400     	LGOTO	_00261_DS_
     0011 3rrr                      1- 2401     	LGOTO	_00260_DS_
     0012                           1- 2402     _00259_DS_:
                                    1- 2403     	.line	273, "main.c"; 	LedInput();
     0012 2rrr                      1- 2404     	LCALL	_LedInput
                                    1- 2405     	.line	274, "main.c"; 	break;
     0013 3rrr                      1- 2406     	LGOTO	_00265_DS_
     0014                           1- 2407     _00260_DS_:
                                    1- 2408     	.line	276, "main.c"; 	LED4ON();
     0014 2rrr                      1- 2409     	LCALL	_LED4ON
     0015                           1- 2410     _00261_DS_:
                                    1- 2411     	.line	278, "main.c"; 	LED1ON();
     0015 2rrr                      1- 2412     	LCALL	_LED1ON
     0016                           1- 2413     _00262_DS_:
                                    1- 2414     	.line	280, "main.c"; 	LED3ON();
     0016 2rrr                      1- 2415     	LCALL	_LED3ON
     0017                           1- 2416     _00263_DS_:
                                    1- 2417     	.line	282, "main.c"; 	LED2ON();
     0017 2rrr                      1- 2418     	LCALL	_LED2ON
     0018                           1- 2419     _00265_DS_:
                                    1- 2420     	.line	285, "main.c"; 	}
                                    1- 2421     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 2422     ; exit point of _ledShow
                                    1- 2424     ;***
                                    1- 2425     ;  pBlock Stats: dbName = C
                                    1- 2426     ;***
                                    1- 2427     ;has an exit
                                    1- 2428     ;; Starting pCode block
                                    1- 2429     .segment "code"; module=main, function=_initSys
     0000                           1- 2431     _initSys:
                                    1- 2432     ; 2 exit points
                                    1- 2433     	.line	242, "main.c"; 	DISI();
     0000 0013                      1- 2434     	DISI
                                    1- 2435     	.line	243, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input;
     0001 2170                      1- 2436     	MOVIA	0x70
     0002 000r                      1- 2437     	IOST	_IOSTA
                                    1- 2438     	.line	244, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1- 2439     	MOVIA	0x01
     0004 000r                      1- 2440     	IOST	_IOSTB
                                    1- 2441     	.line	245, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2442     	CLRR	_PORTB
                                    1- 2443     	.line	246, "main.c"; 	PORTA = 0x00;
                                    1- 2444     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 2445     	CLRR	_PORTA
                                    1- 2446     	.line	247, "main.c"; 	APHCON = 0x9F;
     0008 219F                      1- 2447     	MOVIA	0x9f
     0009 000r                      1- 2448     	IOST	_APHCON
                                    1- 2449     	.line	248, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 2450     	MOVIA	0xff
     000B 00rr                      1- 2451     	MOVAR	_BPHCON
                                    1- 2452     	.line	250, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2453     	MOVIA	0x01
     000D 00rr                      1- 2454     	MOVAR	_INTE
                                    1- 2455     	.line	252, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2456     	CLRA	
     000F 000r                      1- 2457     	IOST	_PCON1
                                    1- 2458     	.line	254, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2459     	MOVIA	0x37
     0011 00rr                      1- 2460     	MOVAR	_TMR0
                                    1- 2461     	.line	255, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0012 0200                      1- 2462     	CLRA	
     0013 0003                      1- 2463     	T0MD	
                                    1- 2464     	.line	257, "main.c"; 	PCON1 = C_TMR0_En;
     0014 2101                      1- 2465     	MOVIA	0x01
     0015 000r                      1- 2466     	IOST	_PCON1
                                    1- 2467     	.line	260, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0016 2198                      1- 2468     	MOVIA	0x98
     0017 00rr                      1- 2469     	MOVAR	_PCON
                                    1- 2470     	.line	263, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0018 2101                      1- 2471     	MOVIA	0x01
     0019 000r                      1- 2472     	IOST	_PCON1
                                    1- 2473     	.line	264, "main.c"; 	ENI();
     001A 0004                      1- 2474     	ENI
                                    1- 2475     	.line	265, "main.c"; 	}
                                    1- 2476     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1- 2477     ; exit point of _initSys
                                    1- 2479     ;***
                                    1- 2480     ;  pBlock Stats: dbName = C
                                    1- 2481     ;***
                                    1- 2482     ;has an exit
                                    1- 2483     ;; Starting pCode block
                                    1- 2484     .segment "code"; module=main, function=_fgCtr
     0000                           1- 2486     _fgCtr:
                                    1- 2487     ; 2 exit points
                                    1- 2488     	.line	225, "main.c"; 	if(PORTB & 0x01)
     0000 08rr                      1- 2489     	BTRSS	_PORTB,0
     0001 3rrr                      1- 2490     	LGOTO	_00248_DS_
                                    1- 2491     	.line	227, "main.c"; 	if(preFG == 0)
                                    1- 2492     	BANKSEL	_preFG
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 01rr                      1- 2493     	MOVR	_preFG,W
     0004 0903                      1- 2494     	BTRSS	STATUS,2
     0005 3rrr                      1- 2495     	LGOTO	_00246_DS_
                                    1- 2496     	.line	229, "main.c"; 	fgPRD = fgCount;
                                    1- 2497     	BANKSEL	_fgCount
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1- 2498     	MOVR	_fgCount,W
                                    1- 2499     	BANKSEL	_fgPRD
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 2500     	MOVAR	_fgPRD
                                    1- 2501     	BANKSEL	_fgCount
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 2502     	MOVR	(_fgCount + 1),W
                                    1- 2503     	BANKSEL	_fgPRD
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 2504     	MOVAR	(_fgPRD + 1)
                                    1- 2505     	.line	230, "main.c"; 	fgCount = 0;
                                    1- 2506     	BANKSEL	_fgCount
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 2507     	CLRR	_fgCount
     0010 02rr                      1- 2508     	CLRR	(_fgCount + 1)
     0011                           1- 2509     _00246_DS_:
                                    1- 2510     	.line	232, "main.c"; 	preFG = 1;
     0011 2101                      1- 2511     	MOVIA	0x01
                                    1- 2512     	BANKSEL	_preFG
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2513     	MOVAR	_preFG
     0014 3rrr                      1- 2514     	LGOTO	_00250_DS_
     0015                           1- 2515     _00248_DS_:
                                    1- 2516     	.line	236, "main.c"; 	preFG = 0;
                                    1- 2517     	BANKSEL	_preFG
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 2518     	CLRR	_preFG
     0017                           1- 2519     _00250_DS_:
                                    1- 2520     	.line	238, "main.c"; 	}
                                    1- 2521     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 2522     ; exit point of _fgCtr
                                    1- 2524     ;***
                                    1- 2525     ;  pBlock Stats: dbName = C
                                    1- 2526     ;***
                                    1- 2527     ;has an exit
                                    1- 2528     ;; Starting pCode block
                                    1- 2529     .segment "code"; module=main, function=_LEDLOFF
     0000                           1- 2531     _LEDLOFF:
                                    1- 2532     ; 2 exit points
                                    1- 2533     	.line	219, "main.c"; 	PORTA &= 0xF7;
                                    1- 2534     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Drr                      1- 2535     	BCR	_PORTA,3
                                    1- 2536     	.line	221, "main.c"; 	}
                                    1- 2537     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2538     ; exit point of _LEDLOFF
                                    1- 2540     ;***
                                    1- 2541     ;  pBlock Stats: dbName = C
                                    1- 2542     ;***
                                    1- 2543     ;has an exit
                                    1- 2544     ;; Starting pCode block
                                    1- 2545     .segment "code"; module=main, function=_LEDHOFF
     0000                           1- 2547     _LEDHOFF:
                                    1- 2548     ; 2 exit points
                                    1- 2549     	.line	214, "main.c"; 	PORTA &= 0xFB;
                                    1- 2550     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Drr                      1- 2551     	BCR	_PORTA,2
                                    1- 2552     	.line	216, "main.c"; 	}
                                    1- 2553     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2554     ; exit point of _LEDHOFF
                                    1- 2556     ;***
                                    1- 2557     ;  pBlock Stats: dbName = C
                                    1- 2558     ;***
                                    1- 2559     ;has an exit
                                    1- 2560     ;; Starting pCode block
                                    1- 2561     .segment "code"; module=main, function=_LEDLON
     0000                           1- 2563     _LEDLON:
                                    1- 2564     ; 2 exit points
                                    1- 2565     	.line	209, "main.c"; 	PORTA |= 0x08;
                                    1- 2566     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 2567     	BSR	_PORTA,3
                                    1- 2568     	.line	211, "main.c"; 	}
                                    1- 2569     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2570     ; exit point of _LEDLON
                                    1- 2572     ;***
                                    1- 2573     ;  pBlock Stats: dbName = C
                                    1- 2574     ;***
                                    1- 2575     ;has an exit
                                    1- 2576     ;; Starting pCode block
                                    1- 2577     .segment "code"; module=main, function=_LEDHON
     0000                           1- 2579     _LEDHON:
                                    1- 2580     ; 2 exit points
                                    1- 2581     	.line	204, "main.c"; 	PORTA |= 0x04;
                                    1- 2582     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 2583     	BSR	_PORTA,2
                                    1- 2584     	.line	206, "main.c"; 	}
                                    1- 2585     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2586     ; exit point of _LEDHON
                                    1- 2589     ;	code size estimation:
                                    1- 2590     ;	  954+  221 =  1175 instructions ( 2792 byte)
                                    1- 2592     	end
                                    1- 2592     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002C
_00002_DS_              Label    00000025
_00003_DS_              Label    00000100
_00106_DS_              Label    00000026
_00112_DS_              Label    00000042
_00119_DS_              Label    00000045
_00121_DS_              Label    00000049
_00131_DS_              Label    00000012
_00134_DS_              Label    00000024
_00139_DS_              Label    00000027
_00145_DS_              Label    00000047
_00150_DS_              Label    00000051
_00152_DS_              Label    00000076
_00155_DS_              Label    00000063
_00159_DS_              Label    00000002
_00219_DS_              Label    00000044
_00220_DS_              Label    0000004E
_00221_DS_              Label    00000058
_00222_DS_              Label    00000061
_00223_DS_              Label    0000006A
_00224_DS_              Label    00000080
_00246_DS_              Label    00000011
_00248_DS_              Label    00000015
_00250_DS_              Label    00000017
_00259_DS_              Label    00000012
_00260_DS_              Label    00000014
_00261_DS_              Label    00000015
_00262_DS_              Label    00000016
_00263_DS_              Label    00000017
_00265_DS_              Label    00000018
_00271_DS_              Label    0000000D
_00298_DS_              Label    0000000C
_00310_DS_              Label    00000027
_00313_DS_              Label    0000001E
_00316_DS_              Label    00000015
_00317_DS_              Label    0000002F
_00319_DS_              Label    00000033
_00321_DS_              Label    00000036
_00338_DS_              Label    00000007
_00344_DS_              Label    00000010
_00346_DS_              Label    00000018
_00351_DS_              Label    00000026
_00354_DS_              Label    00000055
_00358_DS_              Label    00000049
_00361_DS_              Label    00000041
_00365_DS_              Label    00000035
_00368_DS_              Label    0000002D
_00370_DS_              Label    00000057
_00384_DS_              Label    00000021
_00387_DS_              Label    00000013
_00389_DS_              Label    00000029
_00395_DS_              Label    00000006
_00396_DS_              Label    00000007
_00400_DS_              Label    00000025
_00404_DS_              Label    00000049
_00407_DS_              Label    00000040
_00410_DS_              Label    00000037
_00411_DS_              Label    00000051
_00413_DS_              Label    00000061
_00418_DS_              Label    00000056
_00421_DS_              Label    00000076
_00441_DS_              Label    0000001D
_00442_DS_              Label    00000025
_00444_DS_              Label    00000013
_00445_DS_              Label    00000027
_00446_DS_              Label    00000028
_00452_DS_              Label    0000001D
_00454_DS_              Label    00000016
_00459_DS_              Label    00000022
_00461_DS_              Label    0000002D
_00468_DS_              Label    00000004
_00470_DS_              Label    0000000E
_00482_DS_              Label    0000003D
_00483_DS_              Label    0000004B
_00487_DS_              Label    00000079
_00488_DS_              Label    0000007C
_00501_DS_              Label    000000E0
_00506_DS_              Label    000000D2
_00509_DS_              Label    000000BA
_00512_DS_              Label    000000AA
_00515_DS_              Label    0000009A
_00518_DS_              Label    0000005E
_00576_DS_              Label    00000035
_00577_DS_              Label    00000044
_00578_DS_              Label    00000058
_00579_DS_              Label    00000065
_00580_DS_              Label    00000073
_00581_DS_              Label    00000083
_00582_DS_              Label    0000008F
_00583_DS_              Label    000000A1
_00584_DS_              Label    000000B1
_00585_DS_              Label    000000C1
_00588_DS_              Label    000000F3
_00595_DS_              Label    0000000E
_00597_DS_              Label    0000002F
_00602_DS_              Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBatAD             Label    00000000
_chrgCtr                Label    00000000
_chrgTime               Label    00000000
_CMPCR                  Label    00000000
_count1s                Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_count900s              Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_F_AIN5_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_fgCount                Label    00000000
_fgCtr                  Label    00000000
_fgPRD                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IO_Init                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_LEDHOFF                Label    00000000
_LEDHON                 Label    00000000
_LedInput               Label    00000000
_LEDLOFF                Label    00000000
_LEDLON                 Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_lowBatTime             Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_powerOff               Label    00000000
_preFG                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN5_DATA            Label    00000000
_R_AIN5_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepTime              Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStartFlag          Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    0000005A
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1026                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
