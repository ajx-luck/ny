
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_gotoSleep
                                    1-   97     	extern	_keyCtr
                                    1-   98     	extern	_keyRead
                                    1-   99     	extern	_chrgCtr
                                    1-  100     	extern	_setLed2PWM
                                    1-  101     	extern	_setLed1PWM
                                    1-  102     	extern	_chrgPWM
                                    1-  103     	extern	_LEDOFF
                                    1-  104     	extern	_LED2ON
                                    1-  105     	extern	_LED1ON
                                    1-  106     	extern	_workCtr
                                    1-  107     	extern	_delay
                                    1-  108     	extern	_F_wait_eoc
                                    1-  109     	extern	_F_AIN2_Convert
                                    1-  110     	extern	_checkBat
                                    1-  111     	extern	_initAD
                                    1-  112     	extern	_isr
                                    1-  113     	extern	_main
                                    1-  114     	extern	_longPressFlag
                                    1-  115     	extern	_IntFlag
                                    1-  116     	extern	_chrgFlag
                                    1-  117     	extern	_doublePressFlag
                                    1-  118     	extern	_intCount
                                    1-  119     	extern	_count1s
                                    1-  120     	extern	_count900s
                                    1-  121     	extern	_keyCount
                                    1-  122     	extern	_sleepDelay
                                    1-  123     	extern	_workStep
                                    1-  124     	extern	_chrgCount
                                    1-  125     	extern	_duty
                                    1-  126     	extern	_led2count
                                    1-  127     	extern	_ledCount
                                    1-  128     	extern	_ledCount2
                                    1-  129     	extern	_duty5
                                    1-  130     	extern	_duty7
                                    1-  131     	extern	_ledStep
                                    1-  132     	extern	_timeCountKey
                                    1-  133     	extern	_R_AIN2_DATA
                                    1-  134     	extern	_R_AIN2_DATA_LB
                                    1-  135     	extern	_ADC_work_value
                                    1-  136     	extern	_ADC_num_value
                                    1-  137     	extern	_sleepTime
                                    1-  138     	extern	_stopFlag
                                    1-  139     	extern	_chrgTime
                                    1-  140     	extern	_checkTime
                                    1-  141     	extern	_loadFlag
                                    1-  143     	extern PSAVE
                                    1-  144     	extern SSAVE
                                    1-  145     	extern WSAVE
                                    1-  146     	extern STK02
                                    1-  147     	extern STK01
                                    1-  148     	extern STK00
                                    1-  150     .segment "uninit", 0x20000040
 20000040                           1-  151     PSAVE:
                                    1-  152     	.res 1
 20000041                           1-  153     SSAVE:
                                    1-  154     	.res 1
 20000042                           1-  155     WSAVE:
                                    1-  156     	.res 1
 20000043                           1-  157     STK02:
                                    1-  158     	.res 1
 20000044                           1-  159     STK01:
                                    1-  160     	.res 1
 20000045                           1-  161     STK00:
                                    1-  162     	.res 1
                                    1-  164     ;--------------------------------------------------------
                                    1-  165     ; global definitions
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ;--------------------------------------------------------
                                    1-  168     ; absolute symbol definitions
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     ;--------------------------------------------------------
                                    1-  171     ; compiler-defined variables
                                    1-  172     ;--------------------------------------------------------
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x1038:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x102F:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x1030:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x1027:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1028:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x1029:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x102C:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x1024:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x1023:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x1025:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x1026:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x1036:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x1037:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1032:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1035:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x1034:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x1033:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1022:
                                    1-  226     	.res	1
                                    1-  227     ;--------------------------------------------------------
                                    1-  228     ; initialized data
                                    1-  229     ;--------------------------------------------------------
                                    1-  231     .segment "idata"
     0000                           1-  232     _longPressFlag:
     0000 0000                      1-  233     	dw	0x00
                                    1-  237     .segment "idata"
     0000                           1-  238     _IntFlag:
     0000 0000                      1-  239     	dw	0x00
                                    1-  243     .segment "idata"
     0000                           1-  244     _chrgFlag:
     0000 0000                      1-  245     	dw	0x00
                                    1-  249     .segment "idata"
     0000                           1-  250     _doublePressFlag:
     0000 0000                      1-  251     	dw	0x00
                                    1-  255     .segment "idata"
     0000                           1-  256     _intCount:
     0000 0000                      1-  257     	dw	0x00
                                    1-  261     .segment "idata"
     0000                           1-  262     _count1s:
     0000 0000                      1-  263     	dw	0x00
                                    1-  267     .segment "idata"
     0000                           1-  268     _count900s:
     0000 0000 0000                 1-  269     	dw	0x00, 0x00
                                    1-  273     .segment "idata"
     0000                           1-  274     _keyCount:
     0000 0000                      1-  275     	dw	0x00
                                    1-  279     .segment "idata"
     0000                           1-  280     _sleepDelay:
     0000 0000                      1-  281     	dw	0x00
                                    1-  285     .segment "idata"
     0000                           1-  286     _workStep:
     0000 0000                      1-  287     	dw	0x00
                                    1-  291     .segment "idata"
     0000                           1-  292     _chrgCount:
     0000 0000                      1-  293     	dw	0x00
                                    1-  297     .segment "idata"
     0000                           1-  298     _duty:
     0000 0000                      1-  299     	dw	0x00
                                    1-  303     .segment "idata"
     0000                           1-  304     _led2count:
     0000 0000 0000                 1-  305     	dw	0x00, 0x00
                                    1-  309     .segment "idata"
     0000                           1-  310     _ledCount:
     0000 0000                      1-  311     	dw	0x00
                                    1-  315     .segment "idata"
     0000                           1-  316     _ledCount2:
     0000 0000                      1-  317     	dw	0x00
                                    1-  321     .segment "idata"
     0000                           1-  322     _duty5:
     0000 0000                      1-  323     	dw	0x00
                                    1-  327     .segment "idata"
     0000                           1-  328     _duty7:
     0000 0000                      1-  329     	dw	0x00
                                    1-  333     .segment "idata"
     0000                           1-  334     _ledStep:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _timeCountKey:
     0000 0000 0000                 1-  341     	dw	0x00, 0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _R_AIN2_DATA:
     0000 0000 0000                 1-  347     	dw	0x00, 0x00
                                    1-  351     .segment "idata"
     0000                           1-  352     _R_AIN2_DATA_LB:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _ADC_work_value:
     0000 0000 0000                 1-  359     	dw	0x00, 0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _ADC_num_value:
     0000 0000 0000                 1-  365     	dw	0x00, 0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _sleepTime:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _stopFlag:
     0000 0000                      1-  377     	dw	0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _chrgTime:
     0000 0000                      1-  383     	dw	0x00
                                    1-  387     .segment "idata"
     0000                           1-  388     _checkTime:
     0000 0000                      1-  389     	dw	0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _loadFlag:
     0000 0000                      1-  395     	dw	0x00
                                    1-  398     ;--------------------------------------------------------
                                    1-  399     ; overlayable items in internal ram 
                                    1-  400     ;--------------------------------------------------------
                                    1-  401     ;	udata_ovr
                                    1-  402     ;--------------------------------------------------------
                                    1-  403     ; reset vector 
                                    1-  404     ;--------------------------------------------------------
                                    1-  405     ORG	0x0000
     0000 3rrr                      1-  406     	LGOTO	__nyc_ny8_startup
                                    1-  407     ;--------------------------------------------------------
                                    1-  408     ; interrupt and initialization code
                                    1-  409     ;--------------------------------------------------------
                                    1-  410     ORG 0x0008
     0008 3rrr                      1-  411     	lgoto	__sdcc_interrupt
                                    1-  413     .segment "code"
     0000                           1-  414     __sdcc_interrupt:
                                    1-  415     ;***
                                    1-  416     ;  pBlock Stats: dbName = I
                                    1-  417     ;***
                                    1-  418     ;2 compiler assigned registers:
                                    1-  419     ;   STK00
                                    1-  420     ;   STK01
                                    1-  421     ;; Starting pCode block
     0000                           1-  422     _isr:
                                    1-  423     ; 0 exit points
                                    1-  424     	.line	70, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  425     	MOVAR	WSAVE
     0001 1503                      1-  426     	SWAPR	STATUS,W
     0002 0283                      1-  427     	CLRR	STATUS
     0003 00rr                      1-  428     	MOVAR	SSAVE
     0004 010A                      1-  429     	MOVR	PCHBUF,W
     0005 028A                      1-  430     	CLRR	PCHBUF
     0006 00rr                      1-  431     	MOVAR	PSAVE
     0007 0104                      1-  432     	MOVR	FSR,W
                                    1-  433     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  434     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  435     	MOVR	STK00,W
                                    1-  436     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  437     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  438     	MOVR	STK01,W
                                    1-  439     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  440     	MOVAR	___sdcc_saved_stk01
                                    1-  441     	.line	72, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  442     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  443     	LGOTO	_00113_DS_
                                    1-  444     	.line	74, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  445     	MOVIA	0x37
     0013 03rr                      1-  446     	ADDAR	_TMR0,F
                                    1-  447     	.line	75, "main.c"; 	intCount++;
                                    1-  448     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  449     	INCR	_intCount,F
                                    1-  450     	.line	77, "main.c"; 	if(++intCount >= 100)
     0016 05rr                      1-  451     	INCR	_intCount,F
                                    1-  452     ;;unsigned compare: left < lit (0x64=100), size=1
     0017 2164                      1-  453     	MOVIA	0x64
     0018 04rr                      1-  454     	SUBAR	_intCount,W
     0019 0803                      1-  455     	BTRSS	STATUS,0
     001A 3rrr                      1-  456     	LGOTO	_00113_DS_
                                    1-  457     	.line	79, "main.c"; 	intCount = 0;
     001B 02rr                      1-  458     	CLRR	_intCount
                                    1-  459     	.line	80, "main.c"; 	IntFlag = 1;
     001C 2101                      1-  460     	MOVIA	0x01
                                    1-  461     	BANKSEL	_IntFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  462     	MOVAR	_IntFlag
                                    1-  463     	.line	81, "main.c"; 	if(++count1s >= 100)
                                    1-  464     	BANKSEL	_count1s
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 05rr                      1-  465     	INCR	_count1s,F
                                    1-  466     ;;unsigned compare: left < lit (0x64=100), size=1
     0021 2164                      1-  467     	MOVIA	0x64
     0022 04rr                      1-  468     	SUBAR	_count1s,W
     0023 0803                      1-  469     	BTRSS	STATUS,0
     0024 3rrr                      1-  470     	LGOTO	_00113_DS_
                                    1-  471     	.line	83, "main.c"; 	count1s = 0;
     0025 02rr                      1-  472     	CLRR	_count1s
                                    1-  473     	.line	84, "main.c"; 	if(workStep)
                                    1-  474     	BANKSEL	_workStep
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  475     	MOVR	_workStep,W
     0028 0D03                      1-  476     	BTRSC	STATUS,2
     0029 3rrr                      1-  477     	LGOTO	_00106_DS_
                                    1-  478     	.line	86, "main.c"; 	++count900s;
                                    1-  479     	BANKSEL	_count900s
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 05rr                      1-  480     	INCR	_count900s,F
     002C 0D03                      1-  481     	BTRSC	STATUS,2
     002D 05rr                      1-  482     	INCR	(_count900s + 1),F
     002E 3rrr                      1-  483     	LGOTO	_00113_DS_
     002F                           1-  484     _00106_DS_:
                                    1-  485     	.line	90, "main.c"; 	count900s = 0;
                                    1-  486     	BANKSEL	_count900s
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1-  487     	CLRR	_count900s
     0031 02rr                      1-  488     	CLRR	(_count900s + 1)
     0032                           1-  489     _00113_DS_:
                                    1-  490     	.line	95, "main.c"; 	if(INTFbits.PABIF)
     0032 08rr                      1-  491     	BTRSS	_INTFbits,1
     0033 3rrr                      1-  492     	LGOTO	_00115_DS_
                                    1-  493     	.line	97, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0034 21FD                      1-  494     	MOVIA	0xfd
     0035 00rr                      1-  495     	MOVAR	_INTF
     0036                           1-  496     _00115_DS_:
                                    1-  497     	.line	100, "main.c"; 	INTF = 0;
     0036 02rr                      1-  498     	CLRR	_INTF
                                    1-  499     	.line	101, "main.c"; 	}
                                    1-  500     	BANKSEL	___sdcc_saved_stk01
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1-  501     	MOVR	___sdcc_saved_stk01,W
     0039 00rr                      1-  502     	MOVAR	STK01
                                    1-  503     	BANKSEL	___sdcc_saved_stk00
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1-  504     	MOVR	___sdcc_saved_stk00,W
     003C 00rr                      1-  505     	MOVAR	STK00
                                    1-  506     	BANKSEL	___sdcc_saved_fsr
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1-  507     	MOVR	___sdcc_saved_fsr,W
     003F 0084                      1-  508     	MOVAR	FSR
     0040 01rr                      1-  509     	MOVR	PSAVE,W
     0041 008A                      1-  510     	MOVAR	PCHBUF
     0042 0283                      1-  511     	CLRR	STATUS
     0043 15rr                      1-  512     	SWAPR	SSAVE,W
     0044 0083                      1-  513     	MOVAR	STATUS
     0045 15rr                      1-  514     	SWAPR	WSAVE,F
     0046 15rr                      1-  515     	SWAPR	WSAVE,W
     0047                           1-  516     END_OF_INTERRUPT:
     0047 0011                      1-  517     	RETIE	
                                    1-  519     ;--------------------------------------------------------
                                    1-  520     ; code
                                    1-  521     ;--------------------------------------------------------
                                    1-  522     ;***
                                    1-  523     ;  pBlock Stats: dbName = M
                                    1-  524     ;***
                                    1-  525     ;has an exit
                                    1-  526     ;functions called:
                                    1-  527     ;   _initAD
                                    1-  528     ;   _chrgPWM
                                    1-  529     ;   _setLed2PWM
                                    1-  530     ;   _setLed1PWM
                                    1-  531     ;   _setLed2PWM
                                    1-  532     ;   _setLed1PWM
                                    1-  533     ;   _chrgCtr
                                    1-  534     ;   _keyCtr
                                    1-  535     ;   _workCtr
                                    1-  536     ;   _initAD
                                    1-  537     ;   _chrgPWM
                                    1-  538     ;   _setLed2PWM
                                    1-  539     ;   _setLed1PWM
                                    1-  540     ;   _setLed2PWM
                                    1-  541     ;   _setLed1PWM
                                    1-  542     ;   _chrgCtr
                                    1-  543     ;   _keyCtr
                                    1-  544     ;   _workCtr
                                    1-  545     ;1 compiler assigned register :
                                    1-  546     ;   r0x1038
                                    1-  547     ;; Starting pCode block
                                    1-  548     .segment "code"; module=main, function=_main
     0000                           1-  550     _main:
                                    1-  551     ; 2 exit points
                                    1-  552     	.line	106, "main.c"; 	DISI();
     0000 0013                      1-  553     	DISI
                                    1-  554     	.line	107, "main.c"; 	IOSTA = C_PA5_Input;
     0001 2120                      1-  555     	MOVIA	0x20
     0002 000r                      1-  556     	IOST	_IOSTA
                                    1-  557     	.line	108, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1-  558     	CLRA	
     0004 000r                      1-  559     	IOST	_IOSTB
                                    1-  560     	.line	109, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1-  561     	CLRR	_PORTB
                                    1-  562     	.line	110, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1-  563     	CLRR	_PORTA
                                    1-  564     	.line	111, "main.c"; 	APHCON = 0xDF;
     0007 21DF                      1-  565     	MOVIA	0xdf
     0008 000r                      1-  566     	IOST	_APHCON
                                    1-  567     	.line	112, "main.c"; 	ABPLCON = 0xFF;
     0009 21FF                      1-  568     	MOVIA	0xff
     000A 00rr                      1-  569     	MOVAR	_ABPLCON
                                    1-  570     	.line	114, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000B 2101                      1-  571     	MOVIA	0x01
     000C 00rr                      1-  572     	MOVAR	_INTE
                                    1-  573     	.line	116, "main.c"; 	PCON1 = C_TMR0_Dis;
     000D 0200                      1-  574     	CLRA	
     000E 000r                      1-  575     	IOST	_PCON1
                                    1-  576     	.line	118, "main.c"; 	TMR0 = 55;
     000F 2137                      1-  577     	MOVIA	0x37
     0010 00rr                      1-  578     	MOVAR	_TMR0
                                    1-  579     	.line	119, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0011 2101                      1-  580     	MOVIA	0x01
     0012 0003                      1-  581     	T0MD	
                                    1-  582     	.line	121, "main.c"; 	PCON1 = C_TMR0_En;
     0013 000r                      1-  583     	IOST	_PCON1
                                    1-  584     	.line	123, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR,PA5关闭上拉
     0014 2198                      1-  585     	MOVIA	0x98
     0015 00rr                      1-  586     	MOVAR	_PCON
                                    1-  587     	.line	125, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0016 2101                      1-  588     	MOVIA	0x01
     0017 000r                      1-  589     	IOST	_PCON1
                                    1-  590     	.line	126, "main.c"; 	ENI();
     0018 0004                      1-  591     	ENI
                                    1-  592     	.line	127, "main.c"; 	initAD();						// PA3 & PA2 output high
     0019 2rrr                      1-  593     	LCALL	_initAD
     001A                           1-  594     _00132_DS_:
                                    1-  595     	.line	131, "main.c"; 	if(chrgFlag)
                                    1-  596     	BANKSEL	_chrgFlag
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  597     	MOVR	_chrgFlag,W
     001C 0D03                      1-  598     	BTRSC	STATUS,2
     001D 3rrr                      1-  599     	LGOTO	_00121_DS_
                                    1-  600     	.line	133, "main.c"; 	chrgPWM();
     001E 2rrr                      1-  601     	LCALL	_chrgPWM
                                    1-  602     	.line	135, "main.c"; 	workStep == 0;
     001F 3rrr                      1-  603     	LGOTO	_00122_DS_
     0020                           1-  604     _00121_DS_:
                                    1-  605     	.line	139, "main.c"; 	PORTB &= 0xF7;
     0020 1Drr                      1-  606     	BCR	_PORTB,3
     0021                           1-  607     _00122_DS_:
                                    1-  608     	.line	141, "main.c"; 	if(ledStep == 2)
                                    1-  609     	BANKSEL	_ledStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1-  610     	MOVR	_ledStep,W
     0023 2402                      1-  611     	XORIA	0x02
     0024 0903                      1-  612     	BTRSS	STATUS,2
     0025 3rrr                      1-  613     	LGOTO	_00127_DS_
                                    1-  614     	.line	144, "main.c"; 	setLed2PWM();
     0026 2rrr                      1-  615     	LCALL	_setLed2PWM
                                    1-  616     	.line	145, "main.c"; 	setLed1PWM();
     0027 2rrr                      1-  617     	LCALL	_setLed1PWM
                                    1-  618     	.line	146, "main.c"; 	PORTA &= 0xFB;
     0028 1Drr                      1-  619     	BCR	_PORTA,2
     0029 3rrr                      1-  620     	LGOTO	_00128_DS_
     002A                           1-  621     _00127_DS_:
                                    1-  622     	.line	148, "main.c"; 	else if(ledStep == 1)
                                    1-  623     	BANKSEL	_ledStep
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  624     	MOVR	_ledStep,W
     002C 2401                      1-  625     	XORIA	0x01
     002D 0903                      1-  626     	BTRSS	STATUS,2
     002E 3rrr                      1-  627     	LGOTO	_00124_DS_
                                    1-  628     	.line	151, "main.c"; 	setLed2PWM();
     002F 2rrr                      1-  629     	LCALL	_setLed2PWM
                                    1-  630     	.line	152, "main.c"; 	setLed1PWM();
     0030 2rrr                      1-  631     	LCALL	_setLed1PWM
     0031 3rrr                      1-  632     	LGOTO	_00128_DS_
     0032                           1-  633     _00124_DS_:
                                    1-  634     	.line	156, "main.c"; 	PORTA &= 0xEA;
     0032 21EA                      1-  635     	MOVIA	0xea
     0033 10rr                      1-  636     	ANDAR	_PORTA,F
                                    1-  637     	.line	157, "main.c"; 	IOSTA |= 0x01;
     0034 001r                      1-  638     	IOSTR	_IOSTA
                                    1-  639     	BANKSEL	r0x1038
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 00rr                      1-  640     	MOVAR	r0x1038
     0037 18rr                      1-  641     	BSR	r0x1038,0
     0038 01rr                      1-  642     	MOVR	r0x1038,W
     0039 000r                      1-  643     	IOST	_IOSTA
     003A                           1-  644     _00128_DS_:
                                    1-  645     	.line	159, "main.c"; 	CLRWDT();
     003A 0002                      1-  646     	clrwdt
                                    1-  647     	.line	160, "main.c"; 	if(!IntFlag)
                                    1-  648     	BANKSEL	_IntFlag
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 01rr                      1-  649     	MOVR	_IntFlag,W
     003D 0D03                      1-  650     	BTRSC	STATUS,2
     003E 3rrr                      1-  651     	LGOTO	_00132_DS_
                                    1-  652     	.line	162, "main.c"; 	IntFlag = 0;  
     003F 02rr                      1-  653     	CLRR	_IntFlag
                                    1-  654     	.line	163, "main.c"; 	chrgCtr();
     0040 2rrr                      1-  655     	LCALL	_chrgCtr
                                    1-  656     	.line	164, "main.c"; 	keyCtr();
     0041 2rrr                      1-  657     	LCALL	_keyCtr
                                    1-  658     	.line	165, "main.c"; 	workCtr();
     0042 2rrr                      1-  659     	LCALL	_workCtr
     0043 3rrr                      1-  660     	LGOTO	_00132_DS_
                                    1-  661     	.line	167, "main.c"; 	}
                                    1-  662     	RETURN	
     0044 0010                      3-   26 m1      ret
                                    1-  663     ; exit point of _main
                                    1-  665     ;***
                                    1-  666     ;  pBlock Stats: dbName = C
                                    1-  667     ;***
                                    1-  668     ;has an exit
                                    1-  669     ;1 compiler assigned register :
                                    1-  670     ;   r0x1022
                                    1-  671     ;; Starting pCode block
                                    1-  672     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  674     _gotoSleep:
                                    1-  675     ; 2 exit points
                                    1-  676     	.line	525, "main.c"; 	led2count = 0;
                                    1-  677     	BANKSEL	_led2count
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  678     	CLRR	_led2count
     0002 02rr                      1-  679     	CLRR	(_led2count + 1)
                                    1-  680     	.line	526, "main.c"; 	ADC_work_value = 0;
                                    1-  681     	BANKSEL	_ADC_work_value
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1-  682     	CLRR	_ADC_work_value
     0005 02rr                      1-  683     	CLRR	(_ADC_work_value + 1)
                                    1-  684     	.line	527, "main.c"; 	ADC_num_value = 0;
                                    1-  685     	BANKSEL	_ADC_num_value
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  686     	CLRR	_ADC_num_value
     0008 02rr                      1-  687     	CLRR	(_ADC_num_value + 1)
                                    1-  688     	.line	528, "main.c"; 	stopFlag = 0;
                                    1-  689     	BANKSEL	_stopFlag
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1-  690     	CLRR	_stopFlag
                                    1-  691     	.line	529, "main.c"; 	sleepTime = 0;
                                    1-  692     	BANKSEL	_sleepTime
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1-  693     	CLRR	_sleepTime
                                    1-  694     	.line	530, "main.c"; 	workStep = 0;
                                    1-  695     	BANKSEL	_workStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1-  696     	CLRR	_workStep
                                    1-  697     	.line	531, "main.c"; 	count900s = 0;
                                    1-  698     	BANKSEL	_count900s
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1-  699     	CLRR	_count900s
     0011 02rr                      1-  700     	CLRR	(_count900s + 1)
                                    1-  701     	.line	532, "main.c"; 	PORTA &= 0X6F;
     0012 216F                      1-  702     	MOVIA	0x6f
     0013 10rr                      1-  703     	ANDAR	_PORTA,F
                                    1-  704     	.line	533, "main.c"; 	IOSTA |= 0x05;
     0014 001r                      1-  705     	IOSTR	_IOSTA
                                    1-  706     	BANKSEL	r0x1022
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 00rr                      1-  707     	MOVAR	r0x1022
     0017 2105                      1-  708     	MOVIA	0x05
     0018 11rr                      1-  709     	IORAR	r0x1022,F
     0019 01rr                      1-  710     	MOVR	r0x1022,W
     001A 000r                      1-  711     	IOST	_IOSTA
                                    1-  712     	.line	534, "main.c"; 	AWUCON = 0x21;
     001B 2121                      1-  713     	MOVIA	0x21
     001C 00rr                      1-  714     	MOVAR	_AWUCON
                                    1-  715     	.line	535, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     001D 210B                      1-  716     	MOVIA	0x0b
     001E 00rr                      1-  717     	MOVAR	_INTE
                                    1-  718     	.line	536, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     001F 2118                      1-  719     	MOVIA	0x18
     0020 00rr                      1-  720     	MOVAR	_PCON
                                    1-  721     	.line	537, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0021 02rr                      1-  722     	CLRR	_INTF
                                    1-  723     	.line	538, "main.c"; 	CLRWDT();
     0022 0002                      1-  724     	clrwdt
                                    1-  725     	.line	539, "main.c"; 	SLEEP();
     0023 0001                      1-  726     	sleep
                                    1-  727     	.line	540, "main.c"; 	AWUCON = 0x00;
     0024 02rr                      1-  728     	CLRR	_AWUCON
                                    1-  729     	.line	541, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0025 2101                      1-  730     	MOVIA	0x01
     0026 00rr                      1-  731     	MOVAR	_INTE
                                    1-  732     	.line	542, "main.c"; 	INTF = 0;
     0027 02rr                      1-  733     	CLRR	_INTF
                                    1-  734     	.line	544, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0028 21B8                      1-  735     	MOVIA	0xb8
     0029 00rr                      1-  736     	MOVAR	_PCON
                                    1-  737     	.line	546, "main.c"; 	}
                                    1-  738     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1-  739     ; exit point of _gotoSleep
                                    1-  741     ;***
                                    1-  742     ;  pBlock Stats: dbName = C
                                    1-  743     ;***
                                    1-  744     ;has an exit
                                    1-  745     ;functions called:
                                    1-  746     ;   _keyRead
                                    1-  747     ;   _LEDOFF
                                    1-  748     ;   _checkBat
                                    1-  749     ;   _keyRead
                                    1-  750     ;   _LEDOFF
                                    1-  751     ;   _checkBat
                                    1-  752     ;1 compiler assigned register :
                                    1-  753     ;   r0x1031
                                    1-  754     ;; Starting pCode block
                                    1-  755     .segment "code"; module=main, function=_keyCtr
                                    1-  757     ;local variable name mapping:
     0000                           1-  759     _keyCtr:
                                    1-  760     ; 2 exit points
                                    1-  761     	.line	476, "main.c"; 	char kclick = keyRead();
     0000 2rrr                      1-  762     	LCALL	_keyRead
                                    1-  763     ;;1	MOVAR	r0x1031
                                    1-  764     	.line	477, "main.c"; 	if(kclick == 1)
     0001 2401                      1-  765     	XORIA	0x01
     0002 0903                      1-  766     	BTRSS	STATUS,2
     0003 3rrr                      1-  767     	LGOTO	_00404_DS_
                                    1-  768     	.line	483, "main.c"; 	if(doublePressFlag == 1)
                                    1-  769     	BANKSEL	_doublePressFlag
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1-  770     	MOVR	_doublePressFlag,W
     0006 2401                      1-  771     	XORIA	0x01
     0007 0903                      1-  772     	BTRSS	STATUS,2
     0008 3rrr                      1-  773     	LGOTO	_00401_DS_
                                    1-  774     	.line	485, "main.c"; 	workStep = 1;
     0009 2101                      1-  775     	MOVIA	0x01
                                    1-  776     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1-  777     	MOVAR	_workStep
                                    1-  778     	.line	486, "main.c"; 	doublePressFlag = 0;
                                    1-  779     	BANKSEL	_doublePressFlag
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1-  780     	CLRR	_doublePressFlag
                                    1-  781     	.line	487, "main.c"; 	stopFlag = 0;
                                    1-  782     	BANKSEL	_stopFlag
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1-  783     	CLRR	_stopFlag
                                    1-  784     	.line	488, "main.c"; 	LEDOFF();
     0010 2rrr                      1-  785     	LCALL	_LEDOFF
                                    1-  786     	.line	489, "main.c"; 	checkBat();
     0011 2rrr                      1-  787     	LCALL	_checkBat
                                    1-  788     	.line	490, "main.c"; 	ADC_num_value = R_AIN2_DATA;//未工作时候的电压
                                    1-  789     	BANKSEL	_R_AIN2_DATA
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1-  790     	MOVR	_R_AIN2_DATA,W
                                    1-  791     	BANKSEL	_ADC_num_value
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1-  792     	MOVAR	_ADC_num_value
                                    1-  793     	BANKSEL	_R_AIN2_DATA
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1-  794     	MOVR	(_R_AIN2_DATA + 1),W
                                    1-  795     	BANKSEL	_ADC_num_value
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1-  796     	MOVAR	(_ADC_num_value + 1)
                                    1-  797     	.line	491, "main.c"; 	checkTime = 50;
     001A 2132                      1-  798     	MOVIA	0x32
                                    1-  799     	BANKSEL	_checkTime
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  800     	MOVAR	_checkTime
     001D 3rrr                      1-  801     	LGOTO	_00402_DS_
     001E                           1-  802     _00401_DS_:
                                    1-  803     	.line	496, "main.c"; 	if(workStep)
                                    1-  804     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1-  805     	MOVR	_workStep,W
     0020 0D03                      1-  806     	BTRSC	STATUS,2
     0021 3rrr                      1-  807     	LGOTO	_00398_DS_
                                    1-  808     	.line	498, "main.c"; 	workStep = 0;//停止工作
     0022 02rr                      1-  809     	CLRR	_workStep
                                    1-  810     	.line	499, "main.c"; 	doublePressFlag = 0;
                                    1-  811     	BANKSEL	_doublePressFlag
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 02rr                      1-  812     	CLRR	_doublePressFlag
     0025 3rrr                      1-  813     	LGOTO	_00402_DS_
     0026                           1-  814     _00398_DS_:
                                    1-  815     	.line	503, "main.c"; 	doublePressFlag = 1;
     0026 2101                      1-  816     	MOVIA	0x01
                                    1-  817     	BANKSEL	_doublePressFlag
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1-  818     	MOVAR	_doublePressFlag
     0029                           1-  819     _00402_DS_:
                                    1-  820     	.line	506, "main.c"; 	count1s = 0;
                                    1-  821     	BANKSEL	_count1s
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 02rr                      1-  822     	CLRR	_count1s
                                    1-  823     	.line	507, "main.c"; 	count900s = 0;
                                    1-  824     	BANKSEL	_count900s
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 02rr                      1-  825     	CLRR	_count900s
     002D 02rr                      1-  826     	CLRR	(_count900s + 1)
                                    1-  827     	.line	508, "main.c"; 	timeCountKey = 0;
                                    1-  828     	BANKSEL	_timeCountKey
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 02rr                      1-  829     	CLRR	_timeCountKey
     0030 02rr                      1-  830     	CLRR	(_timeCountKey + 1)
     0031                           1-  831     _00404_DS_:
                                    1-  832     	.line	513, "main.c"; 	if(keyCount == 0 && doublePressFlag && (++timeCountKey > 100))
                                    1-  833     	BANKSEL	_keyCount
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1-  834     	MOVR	_keyCount,W
     0033 0903                      1-  835     	BTRSS	STATUS,2
     0034 3rrr                      1-  836     	LGOTO	_00409_DS_
                                    1-  837     	BANKSEL	_doublePressFlag
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1-  838     	MOVR	_doublePressFlag,W
     0037 0D03                      1-  839     	BTRSC	STATUS,2
     0038 3rrr                      1-  840     	LGOTO	_00409_DS_
                                    1-  841     	BANKSEL	_timeCountKey
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 05rr                      1-  842     	INCR	_timeCountKey,F
     003B 0D03                      1-  843     	BTRSC	STATUS,2
     003C 05rr                      1-  844     	INCR	(_timeCountKey + 1),F
                                    1-  845     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  846     ;;unsigned compare: left >= lit (0x65=101), size=2
     003D 2100                      1-  847     	MOVIA	0x00
     003E 04rr                      1-  848     	SUBAR	(_timeCountKey + 1),W
     003F 0903                      1-  849     	BTRSS	STATUS,2
     0040 3rrr                      1-  850     	LGOTO	_00429_DS_
     0041 2165                      1-  851     	MOVIA	0x65
     0042 04rr                      1-  852     	SUBAR	_timeCountKey,W
     0043                           1-  853     _00429_DS_:
     0043 0803                      1-  854     	BTRSS	STATUS,0
     0044 3rrr                      1-  855     	LGOTO	_00409_DS_
                                    1-  856     	.line	515, "main.c"; 	doublePressFlag = 0;   	//1秒内未双击，重新计数
                                    1-  857     	BANKSEL	_doublePressFlag
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 02rr                      1-  858     	CLRR	_doublePressFlag
                                    1-  859     	.line	516, "main.c"; 	timeCountKey = 0;
                                    1-  860     	BANKSEL	_timeCountKey
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 02rr                      1-  861     	CLRR	_timeCountKey
     0049 02rr                      1-  862     	CLRR	(_timeCountKey + 1)
     004A                           1-  863     _00409_DS_:
                                    1-  864     	.line	519, "main.c"; 	}
                                    1-  865     	RETURN	
     004A 0010                      3-   26 m1      ret
                                    1-  866     ; exit point of _keyCtr
                                    1-  868     ;***
                                    1-  869     ;  pBlock Stats: dbName = C
                                    1-  870     ;***
                                    1-  871     ;has an exit
                                    1-  872     ;; Starting pCode block
                                    1-  873     .segment "code"; module=main, function=_keyRead
     0000                           1-  875     _keyRead:
                                    1-  876     ; 2 exit points
                                    1-  877     	.line	455, "main.c"; 	if (PORTA & 0x20)
     0000 0Arr                      1-  878     	BTRSS	_PORTA,5
     0001 3rrr                      1-  879     	LGOTO	_00390_DS_
                                    1-  880     	.line	457, "main.c"; 	if(++keyCount >= 200)
                                    1-  881     	BANKSEL	_keyCount
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 05rr                      1-  882     	INCR	_keyCount,F
                                    1-  883     ;;unsigned compare: left < lit (0xC8=200), size=1
     0004 21C8                      1-  884     	MOVIA	0xc8
     0005 04rr                      1-  885     	SUBAR	_keyCount,W
     0006 0803                      1-  886     	BTRSS	STATUS,0
     0007 3rrr                      1-  887     	LGOTO	_00391_DS_
                                    1-  888     	.line	459, "main.c"; 	keyCount = 200;
     0008 21C8                      1-  889     	MOVIA	0xc8
     0009 00rr                      1-  890     	MOVAR	_keyCount
     000A 3rrr                      1-  891     	LGOTO	_00391_DS_
                                    1-  892     ;;unsigned compare: left < lit (0x5=5), size=1
     000B                           1-  893     _00390_DS_:
                                    1-  894     	.line	464, "main.c"; 	if(keyCount >= 5)
     000B 2105                      1-  895     	MOVIA	0x05
                                    1-  896     	BANKSEL	_keyCount
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 04rr                      1-  897     	SUBAR	_keyCount,W
     000E 0803                      1-  898     	BTRSS	STATUS,0
     000F 3rrr                      1-  899     	LGOTO	_00388_DS_
                                    1-  900     	.line	466, "main.c"; 	keyCount = 0;
     0010 02rr                      1-  901     	CLRR	_keyCount
                                    1-  902     	.line	467, "main.c"; 	return 	1;
     0011 2101                      1-  903     	MOVIA	0x01
     0012 3rrr                      1-  904     	LGOTO	_00392_DS_
     0013                           1-  905     _00388_DS_:
                                    1-  906     	.line	469, "main.c"; 	keyCount = 0;
                                    1-  907     	BANKSEL	_keyCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1-  908     	CLRR	_keyCount
     0015                           1-  909     _00391_DS_:
                                    1-  910     	.line	471, "main.c"; 	return 0;
     0015 2100                      1-  911     	MOVIA	0x00
     0016                           1-  912     _00392_DS_:
                                    1-  913     	.line	472, "main.c"; 	}
                                    1-  914     	RETURN	
     0016 0010                      3-   26 m1      ret
                                    1-  915     ; exit point of _keyRead
                                    1-  917     ;***
                                    1-  918     ;  pBlock Stats: dbName = C
                                    1-  919     ;***
                                    1-  920     ;has an exit
                                    1-  921     ;functions called:
                                    1-  922     ;   _delay
                                    1-  923     ;   _checkBat
                                    1-  924     ;   _LED1ON
                                    1-  925     ;   _LED2ON
                                    1-  926     ;   _LEDOFF
                                    1-  927     ;   _delay
                                    1-  928     ;   _checkBat
                                    1-  929     ;   _LED1ON
                                    1-  930     ;   _LED2ON
                                    1-  931     ;   _LEDOFF
                                    1-  932     ;2 compiler assigned registers:
                                    1-  933     ;   r0x1033
                                    1-  934     ;   STK00
                                    1-  935     ;; Starting pCode block
                                    1-  936     .segment "code"; module=main, function=_chrgCtr
     0000                           1-  938     _chrgCtr:
                                    1-  939     ; 2 exit points
                                    1-  940     	.line	409, "main.c"; 	if(ledStep == 0 || ledCount > duty5)
                                    1-  941     	BANKSEL	_ledStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1-  942     	MOVR	_ledStep,W
     0002 0D03                      1-  943     	BTRSC	STATUS,2
     0003 3rrr                      1-  944     	LGOTO	_00346_DS_
                                    1-  945     	BANKSEL	_ledCount
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1-  946     	MOVR	_ledCount,W
                                    1-  947     	BANKSEL	_duty5
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1-  948     	SUBAR	_duty5,W
     0008 0C03                      1-  949     	BTRSC	STATUS,0
     0009 3rrr                      1-  950     	LGOTO	_00349_DS_
     000A                           1-  951     _00346_DS_:
                                    1-  952     	.line	411, "main.c"; 	ledStep = 0;
                                    1-  953     	BANKSEL	_ledStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1-  954     	CLRR	_ledStep
                                    1-  955     	.line	412, "main.c"; 	IOSTA |= 0x15;
     000C 001r                      1-  956     	IOSTR	_IOSTA
                                    1-  957     	BANKSEL	r0x1033
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1-  958     	MOVAR	r0x1033
     000F 2115                      1-  959     	MOVIA	0x15
     0010 11rr                      1-  960     	IORAR	r0x1033,F
     0011 01rr                      1-  961     	MOVR	r0x1033,W
     0012 000r                      1-  962     	IOST	_IOSTA
                                    1-  963     	.line	413, "main.c"; 	ABPLCON = 0xFE;
     0013 21FE                      1-  964     	MOVIA	0xfe
     0014 00rr                      1-  965     	MOVAR	_ABPLCON
                                    1-  966     	.line	414, "main.c"; 	delay(10);
     0015 210A                      1-  967     	MOVIA	0x0a
     0016 00rr                      1-  968     	MOVAR	STK00
     0017 2100                      1-  969     	MOVIA	0x00
     0018 2rrr                      1-  970     	LCALL	_delay
                                    1-  971     	.line	415, "main.c"; 	if(PORTA & 0x01)
     0019 08rr                      1-  972     	BTRSS	_PORTA,0
     001A 3rrr                      1-  973     	LGOTO	_00344_DS_
                                    1-  974     	.line	418, "main.c"; 	if(++chrgTime > 100)
                                    1-  975     	BANKSEL	_chrgTime
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 05rr                      1-  976     	INCR	_chrgTime,F
                                    1-  977     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  978     ;;unsigned compare: left >= lit (0x65=101), size=1
     001D 2165                      1-  979     	MOVIA	0x65
     001E 04rr                      1-  980     	SUBAR	_chrgTime,W
     001F 0803                      1-  981     	BTRSS	STATUS,0
     0020 3rrr                      1-  982     	LGOTO	_00329_DS_
                                    1-  983     	.line	419, "main.c"; 	chrgFlag = 1;
     0021 2101                      1-  984     	MOVIA	0x01
                                    1-  985     	BANKSEL	_chrgFlag
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 00rr                      1-  986     	MOVAR	_chrgFlag
     0024                           1-  987     _00329_DS_:
                                    1-  988     	.line	421, "main.c"; 	checkBat();
     0024 2rrr                      1-  989     	LCALL	_checkBat
                                    1-  990     	.line	422, "main.c"; 	ADC_num_value = R_AIN2_DATA;
                                    1-  991     	BANKSEL	_R_AIN2_DATA
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1-  992     	MOVR	_R_AIN2_DATA,W
                                    1-  993     	BANKSEL	_ADC_num_value
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1-  994     	MOVAR	_ADC_num_value
                                    1-  995     	BANKSEL	_R_AIN2_DATA
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  996     	MOVR	(_R_AIN2_DATA + 1),W
                                    1-  997     	BANKSEL	_ADC_num_value
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 00rr                      1-  998     	MOVAR	(_ADC_num_value + 1)
                                    1-  999     ;;unsigned compare: left < lit (0xB36=2870), size=2
                                    1- 1000     	.line	423, "main.c"; 	if(ADC_num_value < 2870)
     002D 210B                      1- 1001     	MOVIA	0x0b
     002E 04rr                      1- 1002     	SUBAR	(_ADC_num_value + 1),W
     002F 0903                      1- 1003     	BTRSS	STATUS,2
     0030 3rrr                      1- 1004     	LGOTO	_00377_DS_
     0031 2136                      1- 1005     	MOVIA	0x36
     0032 04rr                      1- 1006     	SUBAR	_ADC_num_value,W
     0033                           1- 1007     _00377_DS_:
     0033 0C03                      1- 1008     	BTRSC	STATUS,0
     0034 3rrr                      1- 1009     	LGOTO	_00333_DS_
                                    1- 1010     	.line	424, "main.c"; 	LED1ON();
     0035 2rrr                      1- 1011     	LCALL	_LED1ON
     0036 3rrr                      1- 1012     	LGOTO	_00334_DS_
                                    1- 1013     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1014     ;;unsigned compare: left >= lit (0xB41=2881), size=2
     0037                           1- 1015     _00333_DS_:
                                    1- 1016     	.line	425, "main.c"; 	else if(ADC_num_value > 2880)
     0037 210B                      1- 1017     	MOVIA	0x0b
                                    1- 1018     	BANKSEL	_ADC_num_value
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 04rr                      1- 1019     	SUBAR	(_ADC_num_value + 1),W
     003A 0903                      1- 1020     	BTRSS	STATUS,2
     003B 3rrr                      1- 1021     	LGOTO	_00378_DS_
     003C 2141                      1- 1022     	MOVIA	0x41
     003D 04rr                      1- 1023     	SUBAR	_ADC_num_value,W
     003E                           1- 1024     _00378_DS_:
     003E 0803                      1- 1025     	BTRSS	STATUS,0
     003F 3rrr                      1- 1026     	LGOTO	_00334_DS_
                                    1- 1027     	.line	426, "main.c"; 	LED2ON();
     0040 2rrr                      1- 1028     	LCALL	_LED2ON
                                    1- 1029     ;;unsigned compare: left < lit (0x6DB=1755), size=2
     0041                           1- 1030     _00334_DS_:
                                    1- 1031     	.line	428, "main.c"; 	if(ADC_num_value < 1755)
     0041 2106                      1- 1032     	MOVIA	0x06
                                    1- 1033     	BANKSEL	_ADC_num_value
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 04rr                      1- 1034     	SUBAR	(_ADC_num_value + 1),W
     0044 0903                      1- 1035     	BTRSS	STATUS,2
     0045 3rrr                      1- 1036     	LGOTO	_00379_DS_
     0046 21DB                      1- 1037     	MOVIA	0xdb
     0047 04rr                      1- 1038     	SUBAR	_ADC_num_value,W
     0048                           1- 1039     _00379_DS_:
     0048 0C03                      1- 1040     	BTRSC	STATUS,0
     0049 3rrr                      1- 1041     	LGOTO	_00339_DS_
                                    1- 1042     	.line	430, "main.c"; 	duty = 5;
     004A 2105                      1- 1043     	MOVIA	0x05
                                    1- 1044     	BANKSEL	_duty
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1- 1045     	MOVAR	_duty
     004D 3rrr                      1- 1046     	LGOTO	_00345_DS_
                                    1- 1047     ;;unsigned compare: left < lit (0x8DA=2266), size=2
     004E                           1- 1048     _00339_DS_:
                                    1- 1049     	.line	432, "main.c"; 	else if(ADC_num_value < 2266)
     004E 2108                      1- 1050     	MOVIA	0x08
                                    1- 1051     	BANKSEL	_ADC_num_value
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 04rr                      1- 1052     	SUBAR	(_ADC_num_value + 1),W
     0051 0903                      1- 1053     	BTRSS	STATUS,2
     0052 3rrr                      1- 1054     	LGOTO	_00380_DS_
     0053 21DA                      1- 1055     	MOVIA	0xda
     0054 04rr                      1- 1056     	SUBAR	_ADC_num_value,W
     0055                           1- 1057     _00380_DS_:
     0055 0C03                      1- 1058     	BTRSC	STATUS,0
     0056 3rrr                      1- 1059     	LGOTO	_00336_DS_
                                    1- 1060     	.line	434, "main.c"; 	duty = 75;
     0057 214B                      1- 1061     	MOVIA	0x4b
                                    1- 1062     	BANKSEL	_duty
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 00rr                      1- 1063     	MOVAR	_duty
     005A 3rrr                      1- 1064     	LGOTO	_00345_DS_
     005B                           1- 1065     _00336_DS_:
                                    1- 1066     	.line	438, "main.c"; 	duty = 5;
     005B 2105                      1- 1067     	MOVIA	0x05
                                    1- 1068     	BANKSEL	_duty
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 00rr                      1- 1069     	MOVAR	_duty
     005E 3rrr                      1- 1070     	LGOTO	_00345_DS_
     005F                           1- 1071     _00344_DS_:
                                    1- 1072     	.line	443, "main.c"; 	chrgTime = 0;
                                    1- 1073     	BANKSEL	_chrgTime
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 02rr                      1- 1074     	CLRR	_chrgTime
                                    1- 1075     	.line	444, "main.c"; 	chrgFlag = 0;
                                    1- 1076     	BANKSEL	_chrgFlag
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 02rr                      1- 1077     	CLRR	_chrgFlag
                                    1- 1078     	.line	445, "main.c"; 	if(workStep == 0)
                                    1- 1079     	BANKSEL	_workStep
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 01rr                      1- 1080     	MOVR	_workStep,W
     0065 0D03                      1- 1081     	BTRSC	STATUS,2
                                    1- 1082     	.line	446, "main.c"; 	LEDOFF();
     0066 2rrr                      1- 1083     	LCALL	_LEDOFF
     0067                           1- 1084     _00345_DS_:
                                    1- 1085     	.line	448, "main.c"; 	ABPLCON = 0xFF;   //关闭PA0下拉
     0067 21FF                      1- 1086     	MOVIA	0xff
     0068 00rr                      1- 1087     	MOVAR	_ABPLCON
     0069                           1- 1088     _00349_DS_:
                                    1- 1089     	.line	450, "main.c"; 	}
                                    1- 1090     	RETURN	
     0069 0010                      3-   26 m1      ret
                                    1- 1091     ; exit point of _chrgCtr
                                    1- 1093     ;***
                                    1- 1094     ;  pBlock Stats: dbName = C
                                    1- 1095     ;***
                                    1- 1096     ;has an exit
                                    1- 1097     ;1 compiler assigned register :
                                    1- 1098     ;   r0x1034
                                    1- 1099     ;; Starting pCode block
                                    1- 1100     .segment "code"; module=main, function=_setLed2PWM
     0000                           1- 1102     _setLed2PWM:
                                    1- 1103     ; 2 exit points
                                    1- 1104     	.line	393, "main.c"; 	if(ledCount >= duty7)
                                    1- 1105     	BANKSEL	_duty7
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1106     	MOVR	_duty7,W
                                    1- 1107     	BANKSEL	_ledCount
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 1108     	SUBAR	_ledCount,W
     0004 0803                      1- 1109     	BTRSS	STATUS,0
     0005 3rrr                      1- 1110     	LGOTO	_00321_DS_
                                    1- 1111     	.line	395, "main.c"; 	PORTA &= 0xEF;
     0006 1Err                      1- 1112     	BCR	_PORTA,4
                                    1- 1113     	.line	396, "main.c"; 	IOSTA |= 0x10;
     0007 001r                      1- 1114     	IOSTR	_IOSTA
                                    1- 1115     	BANKSEL	r0x1034
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 1116     	MOVAR	r0x1034
     000A 1Arr                      1- 1117     	BSR	r0x1034,4
     000B 01rr                      1- 1118     	MOVR	r0x1034,W
     000C 000r                      1- 1119     	IOST	_IOSTA
     000D 3rrr                      1- 1120     	LGOTO	_00323_DS_
     000E                           1- 1121     _00321_DS_:
                                    1- 1122     	.line	400, "main.c"; 	IOSTA &= 0xEF;
     000E 001r                      1- 1123     	IOSTR	_IOSTA
                                    1- 1124     	BANKSEL	r0x1034
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 1125     	MOVAR	r0x1034
     0011 1Err                      1- 1126     	BCR	r0x1034,4
     0012 01rr                      1- 1127     	MOVR	r0x1034,W
     0013 000r                      1- 1128     	IOST	_IOSTA
                                    1- 1129     	.line	401, "main.c"; 	PORTA |= 0x10;
     0014 1Arr                      1- 1130     	BSR	_PORTA,4
     0015                           1- 1131     _00323_DS_:
                                    1- 1132     	.line	403, "main.c"; 	}
                                    1- 1133     	RETURN	
     0015 0010                      3-   26 m1      ret
                                    1- 1134     ; exit point of _setLed2PWM
                                    1- 1136     ;***
                                    1- 1137     ;  pBlock Stats: dbName = C
                                    1- 1138     ;***
                                    1- 1139     ;1 compiler assigned register :
                                    1- 1140     ;   r0x1035
                                    1- 1141     ;; Starting pCode block
                                    1- 1142     .segment "code"; module=main, function=_setLed1PWM
     0000                           1- 1144     _setLed1PWM:
                                    1- 1145     ; 0 exit points
                                    1- 1146     	.line	377, "main.c"; 	if(ledCount >= duty5)
                                    1- 1147     	BANKSEL	_duty5
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1148     	MOVR	_duty5,W
                                    1- 1149     	BANKSEL	_ledCount
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 1150     	SUBAR	_ledCount,W
     0004 0803                      1- 1151     	BTRSS	STATUS,0
     0005 3rrr                      1- 1152     	LGOTO	_00311_DS_
                                    1- 1153     	.line	379, "main.c"; 	PORTA &= 0xFE;
     0006 1Crr                      1- 1154     	BCR	_PORTA,0
                                    1- 1155     	.line	380, "main.c"; 	IOSTA |= 0x01;
     0007 001r                      1- 1156     	IOSTR	_IOSTA
                                    1- 1157     	BANKSEL	r0x1035
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 1158     	MOVAR	r0x1035
     000A 18rr                      1- 1159     	BSR	r0x1035,0
     000B 01rr                      1- 1160     	MOVR	r0x1035,W
     000C 000r                      1- 1161     	IOST	_IOSTA
     000D 3rrr                      1- 1162     	LGOTO	_00312_DS_
     000E                           1- 1163     _00311_DS_:
                                    1- 1164     	.line	384, "main.c"; 	IOSTA &= 0xFE;
     000E 001r                      1- 1165     	IOSTR	_IOSTA
                                    1- 1166     	BANKSEL	r0x1035
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 1167     	MOVAR	r0x1035
     0011 1Crr                      1- 1168     	BCR	r0x1035,0
     0012 01rr                      1- 1169     	MOVR	r0x1035,W
     0013 000r                      1- 1170     	IOST	_IOSTA
                                    1- 1171     	.line	385, "main.c"; 	PORTA |= 0x01;
     0014 18rr                      1- 1172     	BSR	_PORTA,0
     0015                           1- 1173     _00312_DS_:
                                    1- 1174     	.line	387, "main.c"; 	if(++ledCount >= 10)
                                    1- 1175     	BANKSEL	_ledCount
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1- 1176     	INCR	_ledCount,F
                                    1- 1177     ;;unsigned compare: left < lit (0xA=10), size=1
     0017 210A                      1- 1178     	MOVIA	0x0a
     0018 04rr                      1- 1179     	SUBAR	_ledCount,W
     0019 0C03                      1- 1180     	BTRSC	STATUS,0
                                    1- 1181     	.line	388, "main.c"; 	ledCount = 0;
     001A 02rr                      1- 1182     	CLRR	_ledCount
                                    1- 1183     	.line	389, "main.c"; 	}
                                    1- 1184     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1- 1186     ;***
                                    1- 1187     ;  pBlock Stats: dbName = C
                                    1- 1188     ;***
                                    1- 1189     ;; Starting pCode block
                                    1- 1190     .segment "code"; module=main, function=_chrgPWM
     0000                           1- 1192     _chrgPWM:
                                    1- 1193     ; 0 exit points
                                    1- 1194     	.line	362, "main.c"; 	if(chrgCount >= duty)
                                    1- 1195     	BANKSEL	_duty
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1196     	MOVR	_duty,W
                                    1- 1197     	BANKSEL	_chrgCount
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 1198     	SUBAR	_chrgCount,W
     0004 0803                      1- 1199     	BTRSS	STATUS,0
     0005 3rrr                      1- 1200     	LGOTO	_00301_DS_
                                    1- 1201     	.line	364, "main.c"; 	PORTB &= 0xF7;
     0006 1Drr                      1- 1202     	BCR	_PORTB,3
     0007 3rrr                      1- 1203     	LGOTO	_00302_DS_
     0008                           1- 1204     _00301_DS_:
                                    1- 1205     	.line	368, "main.c"; 	PORTB |= 0x08;
     0008 19rr                      1- 1206     	BSR	_PORTB,3
     0009                           1- 1207     _00302_DS_:
                                    1- 1208     	.line	370, "main.c"; 	if(++chrgCount >= 100)
                                    1- 1209     	BANKSEL	_chrgCount
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 05rr                      1- 1210     	INCR	_chrgCount,F
                                    1- 1211     ;;unsigned compare: left < lit (0x64=100), size=1
     000B 2164                      1- 1212     	MOVIA	0x64
     000C 04rr                      1- 1213     	SUBAR	_chrgCount,W
     000D 0C03                      1- 1214     	BTRSC	STATUS,0
                                    1- 1215     	.line	371, "main.c"; 	chrgCount = 0;
     000E 02rr                      1- 1216     	CLRR	_chrgCount
                                    1- 1217     	.line	372, "main.c"; 	}
                                    1- 1218     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 1220     ;***
                                    1- 1221     ;  pBlock Stats: dbName = C
                                    1- 1222     ;***
                                    1- 1223     ;has an exit
                                    1- 1224     ;1 compiler assigned register :
                                    1- 1225     ;   r0x1023
                                    1- 1226     ;; Starting pCode block
                                    1- 1227     .segment "code"; module=main, function=_LEDOFF
     0000                           1- 1229     _LEDOFF:
                                    1- 1230     ; 2 exit points
                                    1- 1231     	.line	352, "main.c"; 	IOSTA |= 0x05;
     0000 001r                      1- 1232     	IOSTR	_IOSTA
                                    1- 1233     	BANKSEL	r0x1023
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1234     	MOVAR	r0x1023
     0003 2105                      1- 1235     	MOVIA	0x05
     0004 11rr                      1- 1236     	IORAR	r0x1023,F
     0005 01rr                      1- 1237     	MOVR	r0x1023,W
     0006 000r                      1- 1238     	IOST	_IOSTA
                                    1- 1239     	.line	353, "main.c"; 	ledStep = 0;
                                    1- 1240     	BANKSEL	_ledStep
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 1241     	CLRR	_ledStep
                                    1- 1242     	.line	354, "main.c"; 	PORTA &= 0xF7;
     0009 1Drr                      1- 1243     	BCR	_PORTA,3
                                    1- 1244     	.line	355, "main.c"; 	}
                                    1- 1245     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 1246     ; exit point of _LEDOFF
                                    1- 1248     ;***
                                    1- 1249     ;  pBlock Stats: dbName = C
                                    1- 1250     ;***
                                    1- 1251     ;has an exit
                                    1- 1252     ;1 compiler assigned register :
                                    1- 1253     ;   r0x1032
                                    1- 1254     ;; Starting pCode block
                                    1- 1255     .segment "code"; module=main, function=_LED2ON
     0000                           1- 1257     _LED2ON:
                                    1- 1258     ; 2 exit points
                                    1- 1259     	.line	342, "main.c"; 	IOSTA &= 0xEB;
     0000 001r                      1- 1260     	IOSTR	_IOSTA
                                    1- 1261     	BANKSEL	r0x1032
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1262     	MOVAR	r0x1032
     0003 21EB                      1- 1263     	MOVIA	0xeb
     0004 10rr                      1- 1264     	ANDAR	r0x1032,F
     0005 01rr                      1- 1265     	MOVR	r0x1032,W
     0006 000r                      1- 1266     	IOST	_IOSTA
                                    1- 1267     	.line	343, "main.c"; 	PORTA &= 0xFB;
     0007 1Drr                      1- 1268     	BCR	_PORTA,2
                                    1- 1269     	.line	344, "main.c"; 	ledStep = 2;
     0008 2102                      1- 1270     	MOVIA	0x02
                                    1- 1271     	BANKSEL	_ledStep
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1272     	MOVAR	_ledStep
                                    1- 1273     	.line	345, "main.c"; 	duty7 = 6;
     000B 2106                      1- 1274     	MOVIA	0x06
                                    1- 1275     	BANKSEL	_duty7
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1276     	MOVAR	_duty7
                                    1- 1277     	.line	346, "main.c"; 	duty5 = 6;
                                    1- 1278     	BANKSEL	_duty5
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1279     	MOVAR	_duty5
                                    1- 1280     	.line	347, "main.c"; 	}
                                    1- 1281     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 1282     ; exit point of _LED2ON
                                    1- 1284     ;***
                                    1- 1285     ;  pBlock Stats: dbName = C
                                    1- 1286     ;***
                                    1- 1287     ;has an exit
                                    1- 1288     ;1 compiler assigned register :
                                    1- 1289     ;   r0x1032
                                    1- 1290     ;; Starting pCode block
                                    1- 1291     .segment "code"; module=main, function=_LED1ON
     0000                           1- 1293     _LED1ON:
                                    1- 1294     ; 2 exit points
                                    1- 1295     	.line	333, "main.c"; 	ledStep = 1;
     0000 2101                      1- 1296     	MOVIA	0x01
                                    1- 1297     	BANKSEL	_ledStep
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1298     	MOVAR	_ledStep
                                    1- 1299     	.line	334, "main.c"; 	IOSTA |= 0x04;
     0003 001r                      1- 1300     	IOSTR	_IOSTA
                                    1- 1301     	BANKSEL	r0x1032
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 1302     	MOVAR	r0x1032
     0006 19rr                      1- 1303     	BSR	r0x1032,2
     0007 01rr                      1- 1304     	MOVR	r0x1032,W
     0008 000r                      1- 1305     	IOST	_IOSTA
                                    1- 1306     	.line	335, "main.c"; 	IOSTA &= 0xEE;
     0009 001r                      1- 1307     	IOSTR	_IOSTA
     000A 00rr                      1- 1308     	MOVAR	r0x1032
     000B 21EE                      1- 1309     	MOVIA	0xee
     000C 10rr                      1- 1310     	ANDAR	r0x1032,F
     000D 01rr                      1- 1311     	MOVR	r0x1032,W
     000E 000r                      1- 1312     	IOST	_IOSTA
                                    1- 1313     	.line	336, "main.c"; 	duty7 = 6;
     000F 2106                      1- 1314     	MOVIA	0x06
                                    1- 1315     	BANKSEL	_duty7
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1316     	MOVAR	_duty7
                                    1- 1317     	.line	337, "main.c"; 	duty5 = 4;
     0012 2104                      1- 1318     	MOVIA	0x04
                                    1- 1319     	BANKSEL	_duty5
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1- 1320     	MOVAR	_duty5
                                    1- 1321     	.line	338, "main.c"; 	}
                                    1- 1322     	RETURN	
     0015 0010                      3-   26 m1      ret
                                    1- 1323     ; exit point of _LED1ON
                                    1- 1325     ;***
                                    1- 1326     ;  pBlock Stats: dbName = C
                                    1- 1327     ;***
                                    1- 1328     ;functions called:
                                    1- 1329     ;   _gotoSleep
                                    1- 1330     ;   _LEDOFF
                                    1- 1331     ;   _checkBat
                                    1- 1332     ;   _LED2ON
                                    1- 1333     ;   _LED2ON
                                    1- 1334     ;   _LED2ON
                                    1- 1335     ;   _LEDOFF
                                    1- 1336     ;   _LED2ON
                                    1- 1337     ;   _LEDOFF
                                    1- 1338     ;   _LED2ON
                                    1- 1339     ;   _LEDOFF
                                    1- 1340     ;   _gotoSleep
                                    1- 1341     ;   _gotoSleep
                                    1- 1342     ;   _gotoSleep
                                    1- 1343     ;   _LEDOFF
                                    1- 1344     ;   _checkBat
                                    1- 1345     ;   _LED2ON
                                    1- 1346     ;   _LED2ON
                                    1- 1347     ;   _LED2ON
                                    1- 1348     ;   _LEDOFF
                                    1- 1349     ;   _LED2ON
                                    1- 1350     ;   _LEDOFF
                                    1- 1351     ;   _LED2ON
                                    1- 1352     ;   _LEDOFF
                                    1- 1353     ;   _gotoSleep
                                    1- 1354     ;   _gotoSleep
                                    1- 1355     ;2 compiler assigned registers:
                                    1- 1356     ;   r0x1036
                                    1- 1357     ;   r0x1037
                                    1- 1358     ;; Starting pCode block
                                    1- 1359     .segment "code"; module=main, function=_workCtr
     0000                           1- 1361     _workCtr:
                                    1- 1362     ; 0 exit points
                                    1- 1363     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1364     ;;unsigned compare: left >= lit (0x29=41), size=2
                                    1- 1365     	.line	241, "main.c"; 	if(count900s > 40)
     0000 2100                      1- 1366     	MOVIA	0x00
                                    1- 1367     	BANKSEL	_count900s
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1368     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 1369     	BTRSS	STATUS,2
     0004 3rrr                      1- 1370     	LGOTO	_00274_DS_
     0005 2129                      1- 1371     	MOVIA	0x29
     0006 04rr                      1- 1372     	SUBAR	_count900s,W
     0007                           1- 1373     _00274_DS_:
     0007 0803                      1- 1374     	BTRSS	STATUS,0
     0008 3rrr                      1- 1375     	LGOTO	_00178_DS_
                                    1- 1376     	.line	243, "main.c"; 	gotoSleep();
     0009 2rrr                      1- 1377     	LCALL	_gotoSleep
     000A                           1- 1378     _00178_DS_:
                                    1- 1379     	.line	245, "main.c"; 	if(workStep == 1)
                                    1- 1380     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1381     	MOVR	_workStep,W
     000C 2401                      1- 1382     	XORIA	0x01
     000D 0903                      1- 1383     	BTRSS	STATUS,2
     000E 3rrr                      1- 1384     	LGOTO	_00219_DS_
                                    1- 1385     	.line	247, "main.c"; 	if(checkTime > 0)
                                    1- 1386     	BANKSEL	_checkTime
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1387     	MOVR	_checkTime,W
     0011 0D03                      1- 1388     	BTRSC	STATUS,2
     0012 3rrr                      1- 1389     	LGOTO	_00183_DS_
                                    1- 1390     	.line	249, "main.c"; 	--checkTime;	//检测次数
     0013 06rr                      1- 1391     	DECR	_checkTime,F
                                    1- 1392     	.line	250, "main.c"; 	LEDOFF();
     0014 2rrr                      1- 1393     	LCALL	_LEDOFF
                                    1- 1394     	.line	251, "main.c"; 	checkBat();
     0015 2rrr                      1- 1395     	LCALL	_checkBat
                                    1- 1396     	.line	252, "main.c"; 	ADC_work_value = R_AIN2_DATA;
                                    1- 1397     	BANKSEL	_R_AIN2_DATA
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1398     	MOVR	_R_AIN2_DATA,W
                                    1- 1399     	BANKSEL	_ADC_work_value
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 1400     	MOVAR	_ADC_work_value
                                    1- 1401     	BANKSEL	_R_AIN2_DATA
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1- 1402     	MOVR	(_R_AIN2_DATA + 1),W
                                    1- 1403     	BANKSEL	_ADC_work_value
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1- 1404     	MOVAR	(_ADC_work_value + 1)
                                    1- 1405     	.line	253, "main.c"; 	if(ADC_num_value < (ADC_work_value + 100))
     001E 2164                      1- 1406     	MOVIA	0x64
     001F 03rr                      1- 1407     	ADDAR	_ADC_work_value,W
                                    1- 1408     	BANKSEL	r0x1036
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1409     	MOVAR	r0x1036
                                    1- 1410     	BANKSEL	r0x1037
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 02rr                      1- 1411     	CLRR	r0x1037
     0024 14rr                      1- 1412     	RLR	r0x1037,F
                                    1- 1413     	BANKSEL	_ADC_work_value
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 1414     	MOVR	(_ADC_work_value + 1),W
                                    1- 1415     	BANKSEL	r0x1037
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 03rr                      1- 1416     	ADDAR	r0x1037,F
     0029 01rr                      1- 1417     	MOVR	r0x1037,W
                                    1- 1418     	BANKSEL	_ADC_num_value
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 04rr                      1- 1419     	SUBAR	(_ADC_num_value + 1),W
     002C 0903                      1- 1420     	BTRSS	STATUS,2
     002D 3rrr                      1- 1421     	LGOTO	_00275_DS_
                                    1- 1422     	BANKSEL	r0x1036
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1- 1423     	MOVR	r0x1036,W
                                    1- 1424     	BANKSEL	_ADC_num_value
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 04rr                      1- 1425     	SUBAR	_ADC_num_value,W
     0032                           1- 1426     _00275_DS_:
     0032 0C03                      1- 1427     	BTRSC	STATUS,0
     0033 3rrr                      1- 1428     	LGOTO	_00180_DS_
                                    1- 1429     	.line	255, "main.c"; 	loadFlag = 0;//空载
                                    1- 1430     	BANKSEL	_loadFlag
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 02rr                      1- 1431     	CLRR	_loadFlag
     0036 3rrr                      1- 1432     	LGOTO	_00183_DS_
     0037                           1- 1433     _00180_DS_:
                                    1- 1434     	.line	259, "main.c"; 	loadFlag = 1;//满载
     0037 2101                      1- 1435     	MOVIA	0x01
                                    1- 1436     	BANKSEL	_loadFlag
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 00rr                      1- 1437     	MOVAR	_loadFlag
     003A                           1- 1438     _00183_DS_:
                                    1- 1439     	.line	262, "main.c"; 	if((loadFlag == 0 && count900s < 15) || stopFlag == 1)
                                    1- 1440     	BANKSEL	_loadFlag
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1- 1441     	MOVR	_loadFlag,W
     003C 0903                      1- 1442     	BTRSS	STATUS,2
     003D 3rrr                      1- 1443     	LGOTO	_00192_DS_
                                    1- 1444     ;;unsigned compare: left < lit (0xF=15), size=2
     003E 2100                      1- 1445     	MOVIA	0x00
                                    1- 1446     	BANKSEL	_count900s
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 04rr                      1- 1447     	SUBAR	(_count900s + 1),W
     0041 0903                      1- 1448     	BTRSS	STATUS,2
     0042 3rrr                      1- 1449     	LGOTO	_00276_DS_
     0043 210F                      1- 1450     	MOVIA	0x0f
     0044 04rr                      1- 1451     	SUBAR	_count900s,W
     0045                           1- 1452     _00276_DS_:
     0045 0803                      1- 1453     	BTRSS	STATUS,0
     0046 3rrr                      1- 1454     	LGOTO	_00188_DS_
     0047                           1- 1455     _00192_DS_:
                                    1- 1456     	BANKSEL	_stopFlag
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1- 1457     	MOVR	_stopFlag,W
     0049 2401                      1- 1458     	XORIA	0x01
     004A 0903                      1- 1459     	BTRSS	STATUS,2
     004B 3rrr                      1- 1460     	LGOTO	_00189_DS_
                                    1- 1461     ;;unsigned compare: left < lit (0x6=6), size=2
     004C                           1- 1462     _00188_DS_:
                                    1- 1463     	.line	265, "main.c"; 	if(count900s >= 6 || stopFlag == 1)
     004C 2100                      1- 1464     	MOVIA	0x00
                                    1- 1465     	BANKSEL	_count900s
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 04rr                      1- 1466     	SUBAR	(_count900s + 1),W
     004F 0903                      1- 1467     	BTRSS	STATUS,2
     0050 3rrr                      1- 1468     	LGOTO	_00277_DS_
     0051 2106                      1- 1469     	MOVIA	0x06
     0052 04rr                      1- 1470     	SUBAR	_count900s,W
     0053                           1- 1471     _00277_DS_:
     0053 0C03                      1- 1472     	BTRSC	STATUS,0
     0054 3rrr                      1- 1473     	LGOTO	_00184_DS_
                                    1- 1474     	BANKSEL	_stopFlag
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1- 1475     	MOVR	_stopFlag,W
     0057 2401                      1- 1476     	XORIA	0x01
     0058 0903                      1- 1477     	BTRSS	STATUS,2
     0059 3rrr                      1- 1478     	LGOTO	_00185_DS_
     005A                           1- 1479     _00184_DS_:
                                    1- 1480     	.line	267, "main.c"; 	PORTA &= 0x7F;
     005A 1Frr                      1- 1481     	BCR	_PORTA,7
                                    1- 1482     	.line	268, "main.c"; 	stopFlag = 1;
     005B 2101                      1- 1483     	MOVIA	0x01
                                    1- 1484     	BANKSEL	_stopFlag
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 00rr                      1- 1485     	MOVAR	_stopFlag
     005E 3rrr                      1- 1486     	LGOTO	_00190_DS_
     005F                           1- 1487     _00185_DS_:
                                    1- 1488     	.line	272, "main.c"; 	PORTA |= 0x80;
     005F 1Brr                      1- 1489     	BSR	_PORTA,7
                                    1- 1490     	.line	273, "main.c"; 	LED2ON();
     0060 2rrr                      1- 1491     	LCALL	_LED2ON
     0061 3rrr                      1- 1492     	LGOTO	_00190_DS_
     0062                           1- 1493     _00189_DS_:
                                    1- 1494     	.line	279, "main.c"; 	PORTA |= 0x80;
     0062 1Brr                      1- 1495     	BSR	_PORTA,7
                                    1- 1496     	.line	280, "main.c"; 	LED2ON();
     0063 2rrr                      1- 1497     	LCALL	_LED2ON
     0064                           1- 1498     _00190_DS_:
                                    1- 1499     	.line	284, "main.c"; 	if(stopFlag)
                                    1- 1500     	BANKSEL	_stopFlag
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 01rr                      1- 1501     	MOVR	_stopFlag,W
     0066 0D03                      1- 1502     	BTRSC	STATUS,2
     0067 3rrr                      1- 1503     	LGOTO	_00221_DS_
                                    1- 1504     ;;unsigned compare: left < lit (0x64=100), size=2
                                    1- 1505     	.line	286, "main.c"; 	if(led2count < 100)
     0068 2100                      1- 1506     	MOVIA	0x00
                                    1- 1507     	BANKSEL	_led2count
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 04rr                      1- 1508     	SUBAR	(_led2count + 1),W
     006B 0903                      1- 1509     	BTRSS	STATUS,2
     006C 3rrr                      1- 1510     	LGOTO	_00278_DS_
     006D 2164                      1- 1511     	MOVIA	0x64
     006E 04rr                      1- 1512     	SUBAR	_led2count,W
     006F                           1- 1513     _00278_DS_:
     006F 0C03                      1- 1514     	BTRSC	STATUS,0
     0070 3rrr                      1- 1515     	LGOTO	_00206_DS_
                                    1- 1516     	.line	288, "main.c"; 	LED2ON();
     0071 2rrr                      1- 1517     	LCALL	_LED2ON
     0072 3rrr                      1- 1518     	LGOTO	_00207_DS_
                                    1- 1519     ;;unsigned compare: left < lit (0xC8=200), size=2
     0073                           1- 1520     _00206_DS_:
                                    1- 1521     	.line	290, "main.c"; 	else if(led2count < 200)
     0073 2100                      1- 1522     	MOVIA	0x00
                                    1- 1523     	BANKSEL	_led2count
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 04rr                      1- 1524     	SUBAR	(_led2count + 1),W
     0076 0903                      1- 1525     	BTRSS	STATUS,2
     0077 3rrr                      1- 1526     	LGOTO	_00279_DS_
     0078 21C8                      1- 1527     	MOVIA	0xc8
     0079 04rr                      1- 1528     	SUBAR	_led2count,W
     007A                           1- 1529     _00279_DS_:
     007A 0C03                      1- 1530     	BTRSC	STATUS,0
     007B 3rrr                      1- 1531     	LGOTO	_00203_DS_
                                    1- 1532     	.line	292, "main.c"; 	LEDOFF();
     007C 2rrr                      1- 1533     	LCALL	_LEDOFF
     007D 3rrr                      1- 1534     	LGOTO	_00207_DS_
                                    1- 1535     ;;unsigned compare: left < lit (0x12C=300), size=2
     007E                           1- 1536     _00203_DS_:
                                    1- 1537     	.line	294, "main.c"; 	else if(led2count < 300)
     007E 2101                      1- 1538     	MOVIA	0x01
                                    1- 1539     	BANKSEL	_led2count
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 04rr                      1- 1540     	SUBAR	(_led2count + 1),W
     0081 0903                      1- 1541     	BTRSS	STATUS,2
     0082 3rrr                      1- 1542     	LGOTO	_00280_DS_
     0083 212C                      1- 1543     	MOVIA	0x2c
     0084 04rr                      1- 1544     	SUBAR	_led2count,W
     0085                           1- 1545     _00280_DS_:
     0085 0C03                      1- 1546     	BTRSC	STATUS,0
     0086 3rrr                      1- 1547     	LGOTO	_00200_DS_
                                    1- 1548     	.line	296, "main.c"; 	LED2ON();
     0087 2rrr                      1- 1549     	LCALL	_LED2ON
     0088 3rrr                      1- 1550     	LGOTO	_00207_DS_
                                    1- 1551     ;;unsigned compare: left < lit (0x190=400), size=2
     0089                           1- 1552     _00200_DS_:
                                    1- 1553     	.line	298, "main.c"; 	else if(led2count < 400)
     0089 2101                      1- 1554     	MOVIA	0x01
                                    1- 1555     	BANKSEL	_led2count
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 04rr                      1- 1556     	SUBAR	(_led2count + 1),W
     008C 0903                      1- 1557     	BTRSS	STATUS,2
     008D 3rrr                      1- 1558     	LGOTO	_00281_DS_
     008E 2190                      1- 1559     	MOVIA	0x90
     008F 04rr                      1- 1560     	SUBAR	_led2count,W
     0090                           1- 1561     _00281_DS_:
     0090 0C03                      1- 1562     	BTRSC	STATUS,0
     0091 3rrr                      1- 1563     	LGOTO	_00197_DS_
                                    1- 1564     	.line	300, "main.c"; 	LEDOFF();
     0092 2rrr                      1- 1565     	LCALL	_LEDOFF
     0093 3rrr                      1- 1566     	LGOTO	_00207_DS_
                                    1- 1567     ;;unsigned compare: left < lit (0x1F4=500), size=2
     0094                           1- 1568     _00197_DS_:
                                    1- 1569     	.line	302, "main.c"; 	else if(led2count < 500)
     0094 2101                      1- 1570     	MOVIA	0x01
                                    1- 1571     	BANKSEL	_led2count
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 04rr                      1- 1572     	SUBAR	(_led2count + 1),W
     0097 0903                      1- 1573     	BTRSS	STATUS,2
     0098 3rrr                      1- 1574     	LGOTO	_00282_DS_
     0099 21F4                      1- 1575     	MOVIA	0xf4
     009A 04rr                      1- 1576     	SUBAR	_led2count,W
     009B                           1- 1577     _00282_DS_:
     009B 0C03                      1- 1578     	BTRSC	STATUS,0
     009C 3rrr                      1- 1579     	LGOTO	_00194_DS_
                                    1- 1580     	.line	304, "main.c"; 	LED2ON();
     009D 2rrr                      1- 1581     	LCALL	_LED2ON
     009E 3rrr                      1- 1582     	LGOTO	_00207_DS_
     009F                           1- 1583     _00194_DS_:
                                    1- 1584     	.line	308, "main.c"; 	LEDOFF();
     009F 2rrr                      1- 1585     	LCALL	_LEDOFF
     00A0                           1- 1586     _00207_DS_:
                                    1- 1587     	.line	310, "main.c"; 	if(++led2count > 600)
                                    1- 1588     	BANKSEL	_led2count
     00A0 rrrr                      3-   71 m1      .banksel ram_address
     00A1 05rr                      1- 1589     	INCR	_led2count,F
     00A2 0D03                      1- 1590     	BTRSC	STATUS,2
     00A3 05rr                      1- 1591     	INCR	(_led2count + 1),F
                                    1- 1592     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1593     ;;unsigned compare: left >= lit (0x259=601), size=2
     00A4 2102                      1- 1594     	MOVIA	0x02
     00A5 04rr                      1- 1595     	SUBAR	(_led2count + 1),W
     00A6 0903                      1- 1596     	BTRSS	STATUS,2
     00A7 3rrr                      1- 1597     	LGOTO	_00283_DS_
     00A8 2159                      1- 1598     	MOVIA	0x59
     00A9 04rr                      1- 1599     	SUBAR	_led2count,W
     00AA                           1- 1600     _00283_DS_:
     00AA 0803                      1- 1601     	BTRSS	STATUS,0
     00AB 3rrr                      1- 1602     	LGOTO	_00221_DS_
                                    1- 1603     	.line	312, "main.c"; 	stopFlag = 0;
                                    1- 1604     	BANKSEL	_stopFlag
     00AC rrrr                      3-   71 m1      .banksel ram_address
     00AD 02rr                      1- 1605     	CLRR	_stopFlag
                                    1- 1606     	.line	313, "main.c"; 	gotoSleep();
     00AE 2rrr                      1- 1607     	LCALL	_gotoSleep
     00AF 3rrr                      1- 1608     	LGOTO	_00221_DS_
     00B0                           1- 1609     _00219_DS_:
                                    1- 1610     	.line	320, "main.c"; 	PORTA &= 0x6F;
     00B0 216F                      1- 1611     	MOVIA	0x6f
     00B1 10rr                      1- 1612     	ANDAR	_PORTA,F
                                    1- 1613     	.line	321, "main.c"; 	if(chrgFlag == 0 && doublePressFlag == 0 && keyCount == 0)
                                    1- 1614     	BANKSEL	_chrgFlag
     00B2 rrrr                      3-   71 m1      .banksel ram_address
     00B3 01rr                      1- 1615     	MOVR	_chrgFlag,W
     00B4 0903                      1- 1616     	BTRSS	STATUS,2
     00B5 3rrr                      1- 1617     	LGOTO	_00221_DS_
                                    1- 1618     	BANKSEL	_doublePressFlag
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 01rr                      1- 1619     	MOVR	_doublePressFlag,W
     00B8 0903                      1- 1620     	BTRSS	STATUS,2
     00B9 3rrr                      1- 1621     	LGOTO	_00221_DS_
                                    1- 1622     	BANKSEL	_keyCount
     00BA rrrr                      3-   71 m1      .banksel ram_address
     00BB 01rr                      1- 1623     	MOVR	_keyCount,W
     00BC 0903                      1- 1624     	BTRSS	STATUS,2
     00BD 3rrr                      1- 1625     	LGOTO	_00221_DS_
                                    1- 1626     	.line	323, "main.c"; 	if(++sleepTime > 200)
                                    1- 1627     	BANKSEL	_sleepTime
     00BE rrrr                      3-   71 m1      .banksel ram_address
     00BF 05rr                      1- 1628     	INCR	_sleepTime,F
                                    1- 1629     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1630     ;;unsigned compare: left >= lit (0xC9=201), size=1
     00C0 21C9                      1- 1631     	MOVIA	0xc9
     00C1 04rr                      1- 1632     	SUBAR	_sleepTime,W
     00C2 0C03                      1- 1633     	BTRSC	STATUS,0
                                    1- 1634     	.line	324, "main.c"; 	gotoSleep();
     00C3 2rrr                      1- 1635     	LCALL	_gotoSleep
     00C4                           1- 1636     _00221_DS_:
                                    1- 1637     	.line	328, "main.c"; 	}
                                    1- 1638     	RETURN	
     00C4 0010                      3-   26 m1      ret
                                    1- 1640     ;***
                                    1- 1641     ;  pBlock Stats: dbName = C
                                    1- 1642     ;***
                                    1- 1643     ;has an exit
                                    1- 1644     ;5 compiler assigned registers:
                                    1- 1645     ;   r0x1023
                                    1- 1646     ;   STK00
                                    1- 1647     ;   r0x1024
                                    1- 1648     ;   r0x1025
                                    1- 1649     ;   r0x1026
                                    1- 1650     ;; Starting pCode block
                                    1- 1651     .segment "code"; module=main, function=_delay
                                    1- 1653     ;local variable name mapping:
     0000                           1- 1658     _delay:
                                    1- 1659     ; 2 exit points
                                    1- 1660     	.line	232, "main.c"; 	void delay(u16 time)
                                    1- 1661     	BANKSEL	r0x1023
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1662     	MOVAR	r0x1023
     0002 01rr                      1- 1663     	MOVR	STK00,W
                                    1- 1664     	BANKSEL	r0x1024
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1665     	MOVAR	r0x1024
                                    1- 1666     	.line	234, "main.c"; 	for(u16 i=0;i<time;i++);
                                    1- 1667     	BANKSEL	r0x1025
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1668     	CLRR	r0x1025
                                    1- 1669     	BANKSEL	r0x1026
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 1670     	CLRR	r0x1026
     0009                           1- 1671     _00161_DS_:
                                    1- 1672     	BANKSEL	r0x1023
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1- 1673     	MOVR	r0x1023,W
                                    1- 1674     	BANKSEL	r0x1026
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1- 1675     	SUBAR	r0x1026,W
     000D 0903                      1- 1676     	BTRSS	STATUS,2
     000E 3rrr                      1- 1677     	LGOTO	_00172_DS_
                                    1- 1678     	BANKSEL	r0x1024
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1679     	MOVR	r0x1024,W
                                    1- 1680     	BANKSEL	r0x1025
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1- 1681     	SUBAR	r0x1025,W
     0013                           1- 1682     _00172_DS_:
     0013 0C03                      1- 1683     	BTRSC	STATUS,0
     0014 3rrr                      1- 1684     	LGOTO	_00163_DS_
                                    1- 1685     	BANKSEL	r0x1025
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1- 1686     	INCR	r0x1025,F
     0017 0903                      1- 1687     	BTRSS	STATUS,2
     0018 3rrr                      1- 1688     	LGOTO	_00001_DS_
                                    1- 1689     	BANKSEL	r0x1026
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1- 1690     	INCR	r0x1026,F
     001B                           1- 1691     _00001_DS_:
     001B 3rrr                      1- 1692     	LGOTO	_00161_DS_
     001C                           1- 1693     _00163_DS_:
                                    1- 1694     	.line	235, "main.c"; 	}
                                    1- 1695     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1- 1696     ; exit point of _delay
                                    1- 1698     ;***
                                    1- 1699     ;  pBlock Stats: dbName = C
                                    1- 1700     ;***
                                    1- 1701     ;has an exit
                                    1- 1702     ;; Starting pCode block
                                    1- 1703     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1705     _F_wait_eoc:
                                    1- 1706     ; 2 exit points
     0000                           1- 1707     _00154_DS_:
                                    1- 1708     	.line	226, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1709     	BTRSS	_ADMDbits,5
     0001 3rrr                      1- 1710     	LGOTO	_00154_DS_
                                    1- 1711     	.line	228, "main.c"; 	}
                                    1- 1712     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1713     ; exit point of _F_wait_eoc
                                    1- 1715     ;***
                                    1- 1716     ;  pBlock Stats: dbName = C
                                    1- 1717     ;***
                                    1- 1718     ;has an exit
                                    1- 1719     ;functions called:
                                    1- 1720     ;   _delay
                                    1- 1721     ;   _F_wait_eoc
                                    1- 1722     ;   _delay
                                    1- 1723     ;   _F_wait_eoc
                                    1- 1724     ;7 compiler assigned registers:
                                    1- 1725     ;   r0x1027
                                    1- 1726     ;   STK00
                                    1- 1727     ;   r0x1028
                                    1- 1728     ;   r0x1029
                                    1- 1729     ;   r0x102A
                                    1- 1730     ;   r0x102B
                                    1- 1731     ;   r0x102C
                                    1- 1732     ;; Starting pCode block
                                    1- 1733     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1735     ;local variable name mapping:
     0000                           1- 1738     _F_AIN2_Convert:
                                    1- 1739     ; 2 exit points
                                    1- 1740     	.line	208, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1741     	BANKSEL	r0x1027
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1742     	MOVAR	r0x1027
                                    1- 1743     	.line	210, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1744     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1745     	CLRR	_R_AIN2_DATA_LB
                                    1- 1746     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1747     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1748     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1749     	.line	212, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1750     	MOVIA	0x92
     0008 00rr                      1- 1751     	MOVAR	_ADMD
                                    1- 1752     	.line	213, "main.c"; 	delay(200);	
     0009 21C8                      1- 1753     	MOVIA	0xc8
     000A 00rr                      1- 1754     	MOVAR	STK00
     000B 2100                      1- 1755     	MOVIA	0x00
     000C 2rrr                      1- 1756     	LCALL	_delay
                                    1- 1757     	.line	214, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1758     	MOVIA	0x01
                                    1- 1759     	BANKSEL	r0x1028
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1760     	MOVAR	r0x1028
     0010                           1- 1761     _00147_DS_:
                                    1- 1762     	BANKSEL	r0x1028
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1763     	MOVR	r0x1028,W
                                    1- 1764     	BANKSEL	r0x1027
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1765     	SUBAR	r0x1027,W
     0014 0803                      1- 1766     	BTRSS	STATUS,0
     0015 3rrr                      1- 1767     	LGOTO	_00149_DS_
                                    1- 1768     	.line	216, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1769     	BSR	_ADMDbits,6
                                    1- 1770     	.line	217, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1771     	LCALL	_F_wait_eoc
                                    1- 1772     	.line	218, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1773     	MOVIA	0x0f
     0019 10rr                      1- 1774     	ANDAR	_ADR,W
                                    1- 1775     ;;3	MOVAR	r0x1029
                                    1- 1776     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1777     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1778     	.line	219, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1779     	MOVR	_ADD,W
                                    1- 1780     	BANKSEL	r0x1029
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1781     	MOVAR	r0x1029
                                    1- 1782     ;;1	CLRR	r0x102A
                                    1- 1783     ;;102	MOVR	r0x1029,W
                                    1- 1784     ;;100	MOVAR	r0x102B
     001F 2100                      1- 1785     	MOVIA	0x00
                                    1- 1786     	BANKSEL	r0x102C
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1787     	MOVAR	r0x102C
                                    1- 1788     ;;101	MOVR	r0x102B,W
                                    1- 1789     	BANKSEL	r0x1029
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1790     	MOVR	r0x1029,W
                                    1- 1791     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1792     	ADDAR	_R_AIN2_DATA,F
                                    1- 1793     	BANKSEL	r0x102C
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1794     	MOVR	r0x102C,W
     0028 0C03                      1- 1795     	BTRSC	STATUS,0
     0029 05rr                      1- 1796     	INCR	r0x102C,W
     002A 0D03                      1- 1797     	BTRSC	STATUS,2
     002B 3rrr                      1- 1798     	LGOTO	_00002_DS_
                                    1- 1799     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1800     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1801     _00002_DS_:
                                    1- 1802     	.line	214, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1803     	BANKSEL	r0x1028
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1804     	INCR	r0x1028,F
     0030 3rrr                      1- 1805     	LGOTO	_00147_DS_
     0031                           1- 1806     _00149_DS_:
                                    1- 1807     	.line	221, "main.c"; 	}
                                    1- 1808     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1809     ; exit point of _F_AIN2_Convert
                                    1- 1811     ;***
                                    1- 1812     ;  pBlock Stats: dbName = C
                                    1- 1813     ;***
                                    1- 1814     ;has an exit
                                    1- 1815     ;functions called:
                                    1- 1816     ;   _F_AIN2_Convert
                                    1- 1817     ;   _F_AIN2_Convert
                                    1- 1818     ;4 compiler assigned registers:
                                    1- 1819     ;   r0x102D
                                    1- 1820     ;   r0x102E
                                    1- 1821     ;   r0x102F
                                    1- 1822     ;   r0x1030
                                    1- 1823     ;; Starting pCode block
                                    1- 1824     .segment "code"; module=main, function=_checkBat
     0000                           1- 1826     _checkBat:
                                    1- 1827     ; 2 exit points
                                    1- 1828     	.line	198, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1829     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1830     	CLRR	_R_AIN2_DATA_LB
                                    1- 1831     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1832     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1833     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1834     	.line	199, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1835     	MOVIA	0x08
     0006 2rrr                      1- 1836     	LCALL	_F_AIN2_Convert
                                    1- 1837     	.line	200, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1838     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1839     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1840     	ANDIA	0xf0
     000A 00rr                      1- 1841     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1842     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1843     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1844     	ANDIA	0x0f
     000E 11rr                      1- 1845     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1846     	XORAR	_R_AIN2_DATA,F
                                    1- 1847     	.line	201, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1848     	MOVIA	0xf0
                                    1- 1849     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1850     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1851     	.line	202, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1852     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1853     	BANKSEL	r0x102F
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1854     	MOVAR	r0x102F
                                    1- 1855     ;;1	MOVAR	r0x102D
                                    1- 1856     ;;1	CLRR	r0x102E
                                    1- 1857     ;;99	MOVR	r0x102D,W
     0016 2100                      1- 1858     	MOVIA	0x00
                                    1- 1859     	BANKSEL	r0x1030
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1860     	MOVAR	r0x1030
                                    1- 1861     	BANKSEL	r0x102F
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1862     	MOVR	r0x102F,W
                                    1- 1863     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1864     	ADDAR	_R_AIN2_DATA,F
                                    1- 1865     	BANKSEL	r0x1030
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1866     	MOVR	r0x1030,W
     001F 0C03                      1- 1867     	BTRSC	STATUS,0
     0020 05rr                      1- 1868     	INCR	r0x1030,W
     0021 0D03                      1- 1869     	BTRSC	STATUS,2
     0022 3rrr                      1- 1870     	LGOTO	_00003_DS_
                                    1- 1871     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1872     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1873     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1874     _00003_DS_:
                                    1- 1875     	.line	203, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1876     	BCR	STATUS,0
                                    1- 1877     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1878     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1879     	RRR	_R_AIN2_DATA,F
                                    1- 1880     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1881     	BCR	STATUS,0
     002A 13rr                      1- 1882     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1883     	RRR	_R_AIN2_DATA,F
                                    1- 1884     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1885     	BCR	STATUS,0
     002D 13rr                      1- 1886     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1887     	RRR	_R_AIN2_DATA,F
                                    1- 1888     	.line	205, "main.c"; 	}
                                    1- 1889     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1890     ; exit point of _checkBat
                                    1- 1892     ;***
                                    1- 1893     ;  pBlock Stats: dbName = C
                                    1- 1894     ;***
                                    1- 1895     ;has an exit
                                    1- 1896     ;functions called:
                                    1- 1897     ;   _delay
                                    1- 1898     ;   _delay
                                    1- 1899     ;1 compiler assigned register :
                                    1- 1900     ;   STK00
                                    1- 1901     ;; Starting pCode block
                                    1- 1902     .segment "code"; module=main, function=_initAD
     0000                           1- 1904     _initAD:
                                    1- 1905     ; 2 exit points
                                    1- 1906     	.line	174, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA2 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2182                      1- 1907     	MOVIA	0x82
     0001 00rr                      1- 1908     	MOVAR	_ADMD
                                    1- 1909     	.line	178, "main.c"; 	ADVREFH = C_Vrefh_3V;					// ADC reference high voltage is supplied by internal 3V  (Note: ADC clock freq. must be equal or less than 500KHz)
     0002 2101                      1- 1910     	MOVIA	0x01
     0003 00rr                      1- 1911     	MOVAR	_ADVREFH
                                    1- 1912     	.line	184, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0004 2110                      1- 1913     	MOVIA	0x10
     0005 00rr                      1- 1914     	MOVAR	_ADR
                                    1- 1915     	.line	186, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0006 2103                      1- 1916     	MOVIA	0x03
     0007 00rr                      1- 1917     	MOVAR	_ADCR
                                    1- 1918     	.line	189, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0008 1Arr                      1- 1919     	BSR	_ADMDbits,4
                                    1- 1920     	.line	190, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0009 2164                      1- 1921     	MOVIA	0x64
     000A 00rr                      1- 1922     	MOVAR	STK00
     000B 2100                      1- 1923     	MOVIA	0x00
     000C 2rrr                      1- 1924     	LCALL	_delay
                                    1- 1925     	.line	193, "main.c"; 	}
                                    1- 1926     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1- 1927     ; exit point of _initAD
                                    1- 1930     ;	code size estimation:
                                    1- 1931     ;	  681+  159 =   840 instructions ( 1998 byte)
                                    1- 1933     	end
                                    1- 1933     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    0000002E
_00003_DS_              Label    00000025
_00106_DS_              Label    0000002F
_00113_DS_              Label    00000032
_00115_DS_              Label    00000036
_00121_DS_              Label    00000020
_00122_DS_              Label    00000021
_00124_DS_              Label    00000032
_00127_DS_              Label    0000002A
_00128_DS_              Label    0000003A
_00132_DS_              Label    0000001A
_00147_DS_              Label    00000010
_00149_DS_              Label    00000031
_00154_DS_              Label    00000000
_00161_DS_              Label    00000009
_00163_DS_              Label    0000001C
_00172_DS_              Label    00000013
_00178_DS_              Label    0000000A
_00180_DS_              Label    00000037
_00183_DS_              Label    0000003A
_00184_DS_              Label    0000005A
_00185_DS_              Label    0000005F
_00188_DS_              Label    0000004C
_00189_DS_              Label    00000062
_00190_DS_              Label    00000064
_00192_DS_              Label    00000047
_00194_DS_              Label    0000009F
_00197_DS_              Label    00000094
_00200_DS_              Label    00000089
_00203_DS_              Label    0000007E
_00206_DS_              Label    00000073
_00207_DS_              Label    000000A0
_00219_DS_              Label    000000B0
_00221_DS_              Label    000000C4
_00274_DS_              Label    00000007
_00275_DS_              Label    00000032
_00276_DS_              Label    00000045
_00277_DS_              Label    00000053
_00278_DS_              Label    0000006F
_00279_DS_              Label    0000007A
_00280_DS_              Label    00000085
_00281_DS_              Label    00000090
_00282_DS_              Label    0000009B
_00283_DS_              Label    000000AA
_00301_DS_              Label    00000008
_00302_DS_              Label    00000009
_00311_DS_              Label    0000000E
_00312_DS_              Label    00000015
_00321_DS_              Label    0000000E
_00323_DS_              Label    00000015
_00329_DS_              Label    00000024
_00333_DS_              Label    00000037
_00334_DS_              Label    00000041
_00336_DS_              Label    0000005B
_00339_DS_              Label    0000004E
_00344_DS_              Label    0000005F
_00345_DS_              Label    00000067
_00346_DS_              Label    0000000A
_00349_DS_              Label    00000069
_00377_DS_              Label    00000033
_00378_DS_              Label    0000003E
_00379_DS_              Label    00000048
_00380_DS_              Label    00000055
_00388_DS_              Label    00000013
_00390_DS_              Label    0000000B
_00391_DS_              Label    00000015
_00392_DS_              Label    00000016
_00398_DS_              Label    00000026
_00401_DS_              Label    0000001E
_00402_DS_              Label    00000029
_00404_DS_              Label    00000031
_00409_DS_              Label    0000004A
_00429_DS_              Label    00000043
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADC_num_value          Label    00000000
_ADC_work_value         Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBat               Label    00000000
_checkTime              Label    00000000
_chrgCount              Label    00000000
_chrgCtr                Label    00000000
_chrgFlag               Label    00000000
_chrgPWM                Label    00000000
_chrgTime               Label    00000000
_CMPCR                  Label    00000000
_count1s                Label    00000000
_count900s              Label    00000000
_delay                  Label    00000000
_doublePressFlag        Label    00000000
_duty                   Label    00000000
_duty5                  Label    00000000
_duty7                  Label    00000000
_F_AIN2_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_led2count              Label    00000000
_LED2ON                 Label    00000000
_ledCount               Label    00000000
_ledCount2              Label    00000000
_LEDOFF                 Label    00000000
_ledStep                Label    00000000
_loadFlag               Label    00000000
_longPressFlag          Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_setLed1PWM             Label    00000000
_setLed2PWM             Label    00000000
_sleepDelay             Label    00000000
_sleepTime              Label    00000000
_STATUS                 Label    00000000
_stopFlag               Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_timeCountKey           Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000047
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102C                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1035                 Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
