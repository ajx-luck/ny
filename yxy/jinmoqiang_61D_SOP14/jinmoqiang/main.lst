
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B061D,c=on
                                    1-    9     	#include "ny8b061d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_ADMDbits
                                    1-   24     	extern	_ADRbits
                                    1-   25     	extern	_ADVREFHbits
                                    1-   26     	extern	_ADCRbits
                                    1-   27     	extern	_AWUCONbits
                                    1-   28     	extern	_PACONbits
                                    1-   29     	extern	_INTEDGbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_RFC
                                    1-   56     	extern	_TM3RH
                                    1-   57     	extern	_INTE2
                                    1-   58     	extern	_TMR1
                                    1-   59     	extern	_T1CR1
                                    1-   60     	extern	_T1CR2
                                    1-   61     	extern	_PWM1DUTY
                                    1-   62     	extern	_PS1CV
                                    1-   63     	extern	_BZ1CR
                                    1-   64     	extern	_IRCR
                                    1-   65     	extern	_TBHP
                                    1-   66     	extern	_TBHD
                                    1-   67     	extern	_TMR2
                                    1-   68     	extern	_T2CR1
                                    1-   69     	extern	_T2CR2
                                    1-   70     	extern	_PWM2DUTY
                                    1-   71     	extern	_PS2CV
                                    1-   72     	extern	_BZ2CR
                                    1-   73     	extern	_OSCCR
                                    1-   74     	extern	_TMR3
                                    1-   75     	extern	_T3CR1
                                    1-   76     	extern	_T3CR2
                                    1-   77     	extern	_PWM3DUTY
                                    1-   78     	extern	_PS3CV
                                    1-   79     	extern	_BZ3CR
                                    1-   80     	extern	_IOSTA
                                    1-   81     	extern	_IOSTB
                                    1-   82     	extern	_APHCON
                                    1-   83     	extern	_PS0CV
                                    1-   84     	extern	_BODCON
                                    1-   85     	extern	_PCON1
                                    1-   86     	extern	_T0MD
                                    1-   87     	extern	___sdcc_saved_fsr
                                    1-   88     	extern	___sdcc_saved_stk00
                                    1-   89     	extern	___sdcc_saved_stk01
                                    1-   90     	extern	__nyc_ny8_startup
                                    1-   91     ;--------------------------------------------------------
                                    1-   92     ; global declarations
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     	extern	_F_wait_eoc
                                    1-   95     	extern	_F_AIN5_Convert
                                    1-   96     	extern	_checkBatAD
                                    1-   97     	extern	_initAD
                                    1-   98     	extern	_delay
                                    1-   99     	extern	_chrgCtr
                                    1-  100     	extern	_keyRead
                                    1-  101     	extern	_gotoSleep
                                    1-  102     	extern	_powerOff
                                    1-  103     	extern	_keyCtr
                                    1-  104     	extern	_ledCtr
                                    1-  105     	extern	_LedCtr2
                                    1-  106     	extern	_workCtr
                                    1-  107     	extern	_pwmStop
                                    1-  108     	extern	_pwmInit
                                    1-  109     	extern	_LED4ON
                                    1-  110     	extern	_LED3ON
                                    1-  111     	extern	_LED2ON
                                    1-  112     	extern	_LED1ON
                                    1-  113     	extern	_LedInput
                                    1-  114     	extern	_ledShow
                                    1-  115     	extern	_initSys
                                    1-  116     	extern	_fgCtr
                                    1-  117     	extern	_isr
                                    1-  118     	extern	_main
                                    1-  119     	extern	_LEDHON
                                    1-  120     	extern	_LEDLON
                                    1-  121     	extern	_LEDHOFF
                                    1-  122     	extern	_LEDLOFF
                                    1-  123     	extern	_Status
                                    1-  124     	extern	_duty
                                    1-  125     	extern	_intCount
                                    1-  126     	extern	_count500ms
                                    1-  127     	extern	_keyCount
                                    1-  128     	extern	_workStep
                                    1-  129     	extern	_ledStep
                                    1-  130     	extern	_fgCount
                                    1-  131     	extern	_fgPRD
                                    1-  132     	extern	_preFG
                                    1-  133     	extern	_maxDuty
                                    1-  134     	extern	_pwStep
                                    1-  135     	extern	_R_AIN5_DATA
                                    1-  136     	extern	_R_AIN5_DATA_LB
                                    1-  137     	extern	_chrgTime
                                    1-  138     	extern	_startStep
                                    1-  139     	extern	_sleepTime
                                    1-  140     	extern	_count200ms
                                    1-  141     	extern	_count1s
                                    1-  142     	extern	_count900s
                                    1-  143     	extern	_lowBatTime
                                    1-  144     	extern	_ledTime
                                    1-  145     	extern	_workStartFlag
                                    1-  147     	extern PSAVE
                                    1-  148     	extern SSAVE
                                    1-  149     	extern WSAVE
                                    1-  150     	extern STK02
                                    1-  151     	extern STK01
                                    1-  152     	extern STK00
                                    1-  154     .segment "uninit", 0x20000040
 20000040                           1-  155     PSAVE:
                                    1-  156     	.res 1
 20000041                           1-  157     SSAVE:
                                    1-  158     	.res 1
 20000042                           1-  159     WSAVE:
                                    1-  160     	.res 1
 20000043                           1-  161     STK02:
                                    1-  162     	.res 1
 20000044                           1-  163     STK01:
                                    1-  164     	.res 1
 20000045                           1-  165     STK00:
                                    1-  166     	.res 1
                                    1-  168     ;--------------------------------------------------------
                                    1-  169     ; global definitions
                                    1-  170     ;--------------------------------------------------------
                                    1-  171     .segment "uninit"
     0000                           1-  172     _R_AIN5_DATA:
                                    1-  173     	.res	2
                                    1-  176     .segment "uninit"
     0000                           1-  177     _R_AIN5_DATA_LB:
                                    1-  178     	.res	1
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     ; absolute symbol definitions
                                    1-  183     ;--------------------------------------------------------
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     ; compiler-defined variables
                                    1-  186     ;--------------------------------------------------------
                                    1-  187     .segment "uninit"
     0000                           1-  188     r0x102C:
                                    1-  189     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     r0x1034:
                                    1-  192     	.res	1
                                    1-  193     .segment "uninit"
     0000                           1-  194     r0x1033:
                                    1-  195     	.res	1
                                    1-  196     .segment "uninit"
     0000                           1-  197     r0x1032:
                                    1-  198     	.res	1
                                    1-  199     .segment "uninit"
     0000                           1-  200     r0x1031:
                                    1-  201     	.res	1
                                    1-  202     .segment "uninit"
     0000                           1-  203     r0x102E:
                                    1-  204     	.res	1
                                    1-  205     .segment "uninit"
     0000                           1-  206     r0x1030:
                                    1-  207     	.res	1
                                    1-  208     .segment "uninit"
     0000                           1-  209     r0x102F:
                                    1-  210     	.res	1
                                    1-  211     .segment "uninit"
     0000                           1-  212     r0x102D:
                                    1-  213     	.res	1
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x1020:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x1021:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x102A:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x102B:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x1022:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x1023:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x1024:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x1027:
                                    1-  237     	.res	1
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ; initialized data
                                    1-  240     ;--------------------------------------------------------
                                    1-  242     .segment "idata"
     0000                           1-  243     _Status:
     0000 0000                      1-  244     	dw	0x00
                                    1-  248     .segment "idata"
     0000                           1-  249     _duty:
     0000 0000 0000                 1-  250     	dw	0x00, 0x00
                                    1-  254     .segment "idata"
     0000                           1-  255     _intCount:
     0000 0000                      1-  256     	dw	0x00
                                    1-  260     .segment "idata"
     0000                           1-  261     _count500ms:
     0000 0000                      1-  262     	dw	0x00
                                    1-  266     .segment "idata"
     0000                           1-  267     _keyCount:
     0000 0000                      1-  268     	dw	0x00
                                    1-  272     .segment "idata"
     0000                           1-  273     _workStep:
     0000 0000                      1-  274     	dw	0x00
                                    1-  278     .segment "idata"
     0000                           1-  279     _ledStep:
     0000 0000                      1-  280     	dw	0x00
                                    1-  284     .segment "idata"
     0000                           1-  285     _fgCount:
     0000 0000 0000                 1-  286     	dw	0x00, 0x00
                                    1-  290     .segment "idata"
     0000                           1-  291     _fgPRD:
     0000 0000 0000                 1-  292     	dw	0x00, 0x00
                                    1-  296     .segment "idata"
     0000                           1-  297     _preFG:
     0000 0000                      1-  298     	dw	0x00
                                    1-  302     .segment "idata"
     0000                           1-  303     _maxDuty:
     0000 0000                      1-  304     	dw	0x00
                                    1-  308     .segment "idata"
     0000                           1-  309     _pwStep:
     0000 0000                      1-  310     	dw	0x00
                                    1-  314     .segment "idata"
     0000                           1-  315     _chrgTime:
     0000 0000 0000                 1-  316     	dw	0x00, 0x00
                                    1-  320     .segment "idata"
     0000                           1-  321     _startStep:
     0000 0000                      1-  322     	dw	0x00
                                    1-  326     .segment "idata"
     0000                           1-  327     _sleepTime:
     0000 0000 0000                 1-  328     	dw	0x00, 0x00
                                    1-  332     .segment "idata"
     0000                           1-  333     _count200ms:
     0000 0000                      1-  334     	dw	0x00
                                    1-  338     .segment "idata"
     0000                           1-  339     _count1s:
     0000 0000                      1-  340     	dw	0x00
                                    1-  344     .segment "idata"
     0000                           1-  345     _count900s:
     0000 0000 0000                 1-  346     	dw	0x00, 0x00
                                    1-  350     .segment "idata"
     0000                           1-  351     _lowBatTime:
     0000 0000                      1-  352     	dw	0x00
                                    1-  356     .segment "idata"
     0000                           1-  357     _ledTime:
     0000 0000                      1-  358     	dw	0x00
                                    1-  362     .segment "idata"
     0000                           1-  363     _workStartFlag:
     0000 0000                      1-  364     	dw	0x00
                                    1-  367     ;--------------------------------------------------------
                                    1-  368     ; overlayable items in internal ram 
                                    1-  369     ;--------------------------------------------------------
                                    1-  370     ;	udata_ovr
                                    1-  371     ;--------------------------------------------------------
                                    1-  372     ; reset vector 
                                    1-  373     ;--------------------------------------------------------
                                    1-  374     ORG	0x0000
     0000 3rrr                      1-  375     	LGOTO	__nyc_ny8_startup
                                    1-  376     ;--------------------------------------------------------
                                    1-  377     ; interrupt and initialization code
                                    1-  378     ;--------------------------------------------------------
                                    1-  379     ORG 0x0008
     0008 3rrr                      1-  380     	lgoto	__sdcc_interrupt
                                    1-  382     .segment "code"
     0000                           1-  383     __sdcc_interrupt:
                                    1-  384     ;***
                                    1-  385     ;  pBlock Stats: dbName = I
                                    1-  386     ;***
                                    1-  387     ;2 compiler assigned registers:
                                    1-  388     ;   STK00
                                    1-  389     ;   STK01
                                    1-  390     ;; Starting pCode block
     0000                           1-  391     _isr:
                                    1-  392     ; 0 exit points
                                    1-  393     	.line	81, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  394     	MOVAR	WSAVE
     0001 1503                      1-  395     	SWAPR	STATUS,W
     0002 0283                      1-  396     	CLRR	STATUS
     0003 00rr                      1-  397     	MOVAR	SSAVE
     0004 010A                      1-  398     	MOVR	PCHBUF,W
     0005 028A                      1-  399     	CLRR	PCHBUF
     0006 00rr                      1-  400     	MOVAR	PSAVE
     0007 0104                      1-  401     	MOVR	FSR,W
                                    1-  402     	BANKSEL	___sdcc_saved_fsr
     0008 00rr                      1-  403     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  404     	MOVR	STK00,W
                                    1-  405     	BANKSEL	___sdcc_saved_stk00
     000A 00rr                      1-  406     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  407     	MOVR	STK01,W
                                    1-  408     	BANKSEL	___sdcc_saved_stk01
     000C 00rr                      1-  409     	MOVAR	___sdcc_saved_stk01
                                    1-  410     	.line	83, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  411     	BTRSS	_INTFbits,0
     000E 3rrr                      1-  412     	LGOTO	_00119_DS_
                                    1-  413     	.line	85, "main.c"; 	TMR0 += 55;
     000F 2137                      1-  414     	MOVIA	0x37
     0010 03rr                      1-  415     	ADDAR	_TMR0,F
                                    1-  416     	.line	87, "main.c"; 	if(++intCount >= 100)
                                    1-  417     	BANKSEL	_intCount
     0011 05rr                      1-  418     	INCR	_intCount,F
                                    1-  419     ;;unsigned compare: left < lit (0x64=100), size=1
     0012 2164                      1-  420     	MOVIA	0x64
     0013 04rr                      1-  421     	SUBAR	_intCount,W
     0014 0803                      1-  422     	BTRSS	STATUS,0
     0015 3rrr                      1-  423     	LGOTO	_00119_DS_
                                    1-  424     	.line	89, "main.c"; 	IntFlag = 1;
                                    1-  425     	BANKSEL	_Status
     0016 18rr                      1-  426     	BSR	_Status,0
                                    1-  427     	.line	90, "main.c"; 	intCount = 0;
                                    1-  428     	BANKSEL	_intCount
     0017 02rr                      1-  429     	CLRR	_intCount
                                    1-  430     	.line	91, "main.c"; 	if(workStep)
                                    1-  431     	BANKSEL	_workStep
     0018 01rr                      1-  432     	MOVR	_workStep,W
     0019 0D03                      1-  433     	BTRSC	STATUS,2
     001A 3rrr                      1-  434     	LGOTO	_00106_DS_
                                    1-  435     	.line	92, "main.c"; 	++fgCount;
                                    1-  436     	BANKSEL	_fgCount
     001B 05rr                      1-  437     	INCR	_fgCount,F
     001C 0D03                      1-  438     	BTRSC	STATUS,2
     001D 05rr                      1-  439     	INCR	(_fgCount + 1),F
     001E                           1-  440     _00106_DS_:
                                    1-  441     	.line	93, "main.c"; 	if(++count500ms >= 40)
                                    1-  442     	BANKSEL	_count500ms
     001E 05rr                      1-  443     	INCR	_count500ms,F
                                    1-  444     ;;unsigned compare: left < lit (0x28=40), size=1
     001F 2128                      1-  445     	MOVIA	0x28
     0020 04rr                      1-  446     	SUBAR	_count500ms,W
     0021 0C03                      1-  447     	BTRSC	STATUS,0
                                    1-  448     	.line	94, "main.c"; 	count500ms = 0;
     0022 02rr                      1-  449     	CLRR	_count500ms
                                    1-  450     	.line	95, "main.c"; 	if(++count200ms >= 20)
                                    1-  451     	BANKSEL	_count200ms
     0023 05rr                      1-  452     	INCR	_count200ms,F
     0024 2114                      1-  453     	MOVIA	0x14
     0025 04rr                      1-  454     	SUBAR	_count200ms,W
     0026 0C03                      1-  455     	BTRSC	STATUS,0
                                    1-  456     	.line	96, "main.c"; 	count200ms = 0;
     0027 02rr                      1-  457     	CLRR	_count200ms
                                    1-  458     	.line	97, "main.c"; 	if(++count1s >= 100)
                                    1-  459     	BANKSEL	_count1s
     0028 05rr                      1-  460     	INCR	_count1s,F
     0029 2164                      1-  461     	MOVIA	0x64
     002A 04rr                      1-  462     	SUBAR	_count1s,W
     002B 0803                      1-  463     	BTRSS	STATUS,0
     002C 3rrr                      1-  464     	LGOTO	_00119_DS_
                                    1-  465     	.line	99, "main.c"; 	count1s = 0;
     002D 02rr                      1-  466     	CLRR	_count1s
                                    1-  467     	.line	100, "main.c"; 	if(workStep)
                                    1-  468     	BANKSEL	_workStep
     002E 01rr                      1-  469     	MOVR	_workStep,W
     002F 0D03                      1-  470     	BTRSC	STATUS,2
     0030 3rrr                      1-  471     	LGOTO	_00112_DS_
                                    1-  472     	.line	102, "main.c"; 	++count900s;
                                    1-  473     	BANKSEL	_count900s
     0031 05rr                      1-  474     	INCR	_count900s,F
     0032 0D03                      1-  475     	BTRSC	STATUS,2
     0033 05rr                      1-  476     	INCR	(_count900s + 1),F
     0034 3rrr                      1-  477     	LGOTO	_00119_DS_
     0035                           1-  478     _00112_DS_:
                                    1-  479     	.line	106, "main.c"; 	count900s = 0;
                                    1-  480     	BANKSEL	_count900s
     0035 02rr                      1-  481     	CLRR	_count900s
     0036 02rr                      1-  482     	CLRR	(_count900s + 1)
     0037                           1-  483     _00119_DS_:
                                    1-  484     	.line	115, "main.c"; 	if(INTFbits.PABIF)
     0037 08rr                      1-  485     	BTRSS	_INTFbits,1
     0038 3rrr                      1-  486     	LGOTO	_00121_DS_
                                    1-  487     	.line	117, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0039 21FD                      1-  488     	MOVIA	0xfd
     003A 00rr                      1-  489     	MOVAR	_INTF
     003B                           1-  490     _00121_DS_:
                                    1-  491     	.line	120, "main.c"; 	INTF = 0;
     003B 02rr                      1-  492     	CLRR	_INTF
                                    1-  493     	.line	122, "main.c"; 	}
                                    1-  494     	BANKSEL	___sdcc_saved_stk01
     003C 01rr                      1-  495     	MOVR	___sdcc_saved_stk01,W
     003D 00rr                      1-  496     	MOVAR	STK01
                                    1-  497     	BANKSEL	___sdcc_saved_stk00
     003E 01rr                      1-  498     	MOVR	___sdcc_saved_stk00,W
     003F 00rr                      1-  499     	MOVAR	STK00
                                    1-  500     	BANKSEL	___sdcc_saved_fsr
     0040 01rr                      1-  501     	MOVR	___sdcc_saved_fsr,W
     0041 0084                      1-  502     	MOVAR	FSR
     0042 01rr                      1-  503     	MOVR	PSAVE,W
     0043 008A                      1-  504     	MOVAR	PCHBUF
     0044 0283                      1-  505     	CLRR	STATUS
     0045 15rr                      1-  506     	SWAPR	SSAVE,W
     0046 0083                      1-  507     	MOVAR	STATUS
     0047 15rr                      1-  508     	SWAPR	WSAVE,F
     0048 15rr                      1-  509     	SWAPR	WSAVE,W
     0049                           1-  510     END_OF_INTERRUPT:
     0049 0011                      1-  511     	RETIE	
                                    1-  513     ;--------------------------------------------------------
                                    1-  514     ; code
                                    1-  515     ;--------------------------------------------------------
                                    1-  516     ;***
                                    1-  517     ;  pBlock Stats: dbName = M
                                    1-  518     ;***
                                    1-  519     ;has an exit
                                    1-  520     ;functions called:
                                    1-  521     ;   _initSys
                                    1-  522     ;   _initAD
                                    1-  523     ;   _ledShow
                                    1-  524     ;   _fgCtr
                                    1-  525     ;   _keyCtr
                                    1-  526     ;   _checkBatAD
                                    1-  527     ;   _ledCtr
                                    1-  528     ;   _chrgCtr
                                    1-  529     ;   _LedCtr2
                                    1-  530     ;   _workCtr
                                    1-  531     ;   _gotoSleep
                                    1-  532     ;   _powerOff
                                    1-  533     ;   _pwmStop
                                    1-  534     ;   _delay
                                    1-  535     ;   _pwmStop
                                    1-  536     ;   _initSys
                                    1-  537     ;   _initAD
                                    1-  538     ;   _ledShow
                                    1-  539     ;   _fgCtr
                                    1-  540     ;   _keyCtr
                                    1-  541     ;   _checkBatAD
                                    1-  542     ;   _ledCtr
                                    1-  543     ;   _chrgCtr
                                    1-  544     ;   _LedCtr2
                                    1-  545     ;   _workCtr
                                    1-  546     ;   _gotoSleep
                                    1-  547     ;   _powerOff
                                    1-  548     ;   _pwmStop
                                    1-  549     ;   _delay
                                    1-  550     ;   _pwmStop
                                    1-  551     ;; Starting pCode block
                                    1-  552     .segment "code"; module=main, function=_main
     0000                           1-  554     _main:
                                    1-  555     ; 2 exit points
                                    1-  556     	.line	126, "main.c"; 	initSys();
     0000 2rrr                      1-  557     	LCALL	_initSys
                                    1-  558     	.line	127, "main.c"; 	initAD();
     0001 2rrr                      1-  559     	LCALL	_initAD
     0002                           1-  560     _00159_DS_:
                                    1-  561     	.line	130, "main.c"; 	ledShow();
     0002 2rrr                      1-  562     	LCALL	_ledShow
                                    1-  563     	.line	131, "main.c"; 	CLRWDT();
     0003 0002                      1-  564     	clrwdt
                                    1-  565     	.line	132, "main.c"; 	fgCtr();
     0004 2rrr                      1-  566     	LCALL	_fgCtr
                                    1-  567     	.line	133, "main.c"; 	if(!IntFlag)
                                    1-  568     	BANKSEL	_Status
     0005 08rr                      1-  569     	BTRSS	_Status,0
     0006 3rrr                      1-  570     	LGOTO	_00159_DS_
                                    1-  571     	.line	135, "main.c"; 	IntFlag = 0;
     0007 1Crr                      1-  572     	BCR	_Status,0
                                    1-  573     	.line	136, "main.c"; 	if((PORTA & 0x20) == 0)
                                    1-  574     	BANKSEL	_PORTA
     0008 0Arr                      1-  575     	BTRSS	_PORTA,5
                                    1-  576     	.line	137, "main.c"; 	keyCtr();
     0009 2rrr                      1-  577     	LCALL	_keyCtr
                                    1-  578     	.line	138, "main.c"; 	if(count200ms == 0)
                                    1-  579     	BANKSEL	_count200ms
     000A 01rr                      1-  580     	MOVR	_count200ms,W
     000B 0903                      1-  581     	BTRSS	STATUS,2
     000C 3rrr                      1-  582     	LGOTO	_00131_DS_
                                    1-  583     	.line	140, "main.c"; 	checkBatAD();
     000D 2rrr                      1-  584     	LCALL	_checkBatAD
                                    1-  585     	.line	141, "main.c"; 	ledCtr();
     000E 2rrr                      1-  586     	LCALL	_ledCtr
     000F                           1-  587     _00131_DS_:
                                    1-  588     	.line	143, "main.c"; 	if(count500ms == 0)
                                    1-  589     	BANKSEL	_count500ms
     000F 01rr                      1-  590     	MOVR	_count500ms,W
     0010 0903                      1-  591     	BTRSS	STATUS,2
     0011 3rrr                      1-  592     	LGOTO	_00139_DS_
                                    1-  593     	.line	145, "main.c"; 	chrgCtr();
     0012 2rrr                      1-  594     	LCALL	_chrgCtr
                                    1-  595     	.line	146, "main.c"; 	if(workStartFlag == 1 || workStartFlag == 3 || workStartFlag == 4)
                                    1-  596     	BANKSEL	_workStartFlag
     0013 01rr                      1-  597     	MOVR	_workStartFlag,W
     0014 2401                      1-  598     	XORIA	0x01
     0015 0D03                      1-  599     	BTRSC	STATUS,2
     0016 3rrr                      1-  600     	LGOTO	_00134_DS_
     0017 01rr                      1-  601     	MOVR	_workStartFlag,W
     0018 2403                      1-  602     	XORIA	0x03
     0019 0D03                      1-  603     	BTRSC	STATUS,2
     001A 3rrr                      1-  604     	LGOTO	_00134_DS_
     001B 01rr                      1-  605     	MOVR	_workStartFlag,W
     001C 2404                      1-  606     	XORIA	0x04
     001D 0903                      1-  607     	BTRSS	STATUS,2
     001E 3rrr                      1-  608     	LGOTO	_00139_DS_
     001F                           1-  609     _00134_DS_:
                                    1-  610     	.line	148, "main.c"; 	if(chrgFlag == 0)
                                    1-  611     	BANKSEL	_Status
     001F 09rr                      1-  612     	BTRSS	_Status,3
                                    1-  613     	.line	149, "main.c"; 	LedCtr2();
     0020 2rrr                      1-  614     	LCALL	_LedCtr2
     0021                           1-  615     _00139_DS_:
                                    1-  616     	.line	153, "main.c"; 	if(workStep)
                                    1-  617     	BANKSEL	_workStep
     0021 01rr                      1-  618     	MOVR	_workStep,W
     0022 0903                      1-  619     	BTRSS	STATUS,2
                                    1-  620     	.line	154, "main.c"; 	workCtr();
     0023 2rrr                      1-  621     	LCALL	_workCtr
                                    1-  622     	.line	155, "main.c"; 	if(workStep == 0 && keyCount == 0 && workStartFlag == 0 && ((PORTA & 0x20) == 0))
                                    1-  623     	BANKSEL	_workStep
     0024 01rr                      1-  624     	MOVR	_workStep,W
     0025 0903                      1-  625     	BTRSS	STATUS,2
     0026 3rrr                      1-  626     	LGOTO	_00145_DS_
                                    1-  627     	BANKSEL	_keyCount
     0027 01rr                      1-  628     	MOVR	_keyCount,W
     0028 0903                      1-  629     	BTRSS	STATUS,2
     0029 3rrr                      1-  630     	LGOTO	_00145_DS_
                                    1-  631     	BANKSEL	_workStartFlag
     002A 01rr                      1-  632     	MOVR	_workStartFlag,W
     002B 0903                      1-  633     	BTRSS	STATUS,2
     002C 3rrr                      1-  634     	LGOTO	_00145_DS_
                                    1-  635     	BANKSEL	_PORTA
     002D 0Err                      1-  636     	BTRSC	_PORTA,5
     002E 3rrr                      1-  637     	LGOTO	_00145_DS_
                                    1-  638     	.line	157, "main.c"; 	if(++sleepTime > 2000)
                                    1-  639     	BANKSEL	_sleepTime
     002F 05rr                      1-  640     	INCR	_sleepTime,F
     0030 0D03                      1-  641     	BTRSC	STATUS,2
     0031 05rr                      1-  642     	INCR	(_sleepTime + 1),F
                                    1-  643     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  644     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0032 2107                      1-  645     	MOVIA	0x07
     0033 04rr                      1-  646     	SUBAR	(_sleepTime + 1),W
     0034 0903                      1-  647     	BTRSS	STATUS,2
     0035 3rrr                      1-  648     	LGOTO	_00219_DS_
     0036 21D1                      1-  649     	MOVIA	0xd1
     0037 04rr                      1-  650     	SUBAR	_sleepTime,W
     0038                           1-  651     _00219_DS_:
     0038 0803                      1-  652     	BTRSS	STATUS,0
     0039 3rrr                      1-  653     	LGOTO	_00145_DS_
                                    1-  654     	.line	159, "main.c"; 	gotoSleep();
     003A 2rrr                      1-  655     	LCALL	_gotoSleep
                                    1-  656     ;;unsigned compare: left < lit (0x384=900), size=2
     003B                           1-  657     _00145_DS_:
                                    1-  658     	.line	163, "main.c"; 	if(count900s >= 900)
     003B 2103                      1-  659     	MOVIA	0x03
                                    1-  660     	BANKSEL	_count900s
     003C 04rr                      1-  661     	SUBAR	(_count900s + 1),W
     003D 0903                      1-  662     	BTRSS	STATUS,2
     003E 3rrr                      1-  663     	LGOTO	_00220_DS_
     003F 2184                      1-  664     	MOVIA	0x84
     0040 04rr                      1-  665     	SUBAR	_count900s,W
     0041                           1-  666     _00220_DS_:
     0041 0803                      1-  667     	BTRSS	STATUS,0
     0042 3rrr                      1-  668     	LGOTO	_00150_DS_
                                    1-  669     	.line	165, "main.c"; 	powerOff();
     0043 2rrr                      1-  670     	LCALL	_powerOff
                                    1-  671     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  672     ;;unsigned compare: left >= lit (0x65=101), size=2
     0044                           1-  673     _00150_DS_:
                                    1-  674     	.line	168, "main.c"; 	if(fgPRD > 100 || fgCount > 100)
     0044 2100                      1-  675     	MOVIA	0x00
                                    1-  676     	BANKSEL	_fgPRD
     0045 04rr                      1-  677     	SUBAR	(_fgPRD + 1),W
     0046 0903                      1-  678     	BTRSS	STATUS,2
     0047 3rrr                      1-  679     	LGOTO	_00221_DS_
     0048 2165                      1-  680     	MOVIA	0x65
     0049 04rr                      1-  681     	SUBAR	_fgPRD,W
     004A                           1-  682     _00221_DS_:
     004A 0C03                      1-  683     	BTRSC	STATUS,0
     004B 3rrr                      1-  684     	LGOTO	_00155_DS_
                                    1-  685     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  686     ;;unsigned compare: left >= lit (0x65=101), size=2
     004C 2100                      1-  687     	MOVIA	0x00
                                    1-  688     	BANKSEL	_fgCount
     004D 04rr                      1-  689     	SUBAR	(_fgCount + 1),W
     004E 0903                      1-  690     	BTRSS	STATUS,2
     004F 3rrr                      1-  691     	LGOTO	_00222_DS_
     0050 2165                      1-  692     	MOVIA	0x65
     0051 04rr                      1-  693     	SUBAR	_fgCount,W
     0052                           1-  694     _00222_DS_:
     0052 0803                      1-  695     	BTRSS	STATUS,0
     0053 3rrr                      1-  696     	LGOTO	_00159_DS_
                                    1-  697     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  698     ;;unsigned compare: left >= lit (0x97=151), size=2
     0054                           1-  699     _00155_DS_:
                                    1-  700     	.line	170, "main.c"; 	if(fgCount > 150)
     0054 2100                      1-  701     	MOVIA	0x00
                                    1-  702     	BANKSEL	_fgCount
     0055 04rr                      1-  703     	SUBAR	(_fgCount + 1),W
     0056 0903                      1-  704     	BTRSS	STATUS,2
     0057 3rrr                      1-  705     	LGOTO	_00223_DS_
     0058 2197                      1-  706     	MOVIA	0x97
     0059 04rr                      1-  707     	SUBAR	_fgCount,W
     005A                           1-  708     _00223_DS_:
     005A 0803                      1-  709     	BTRSS	STATUS,0
     005B 3rrr                      1-  710     	LGOTO	_00152_DS_
                                    1-  711     	.line	172, "main.c"; 	pwmStop();
     005C 2rrr                      1-  712     	LCALL	_pwmStop
                                    1-  713     	.line	173, "main.c"; 	PORTB &= 0xFD;
     005D 1Crr                      1-  714     	BCR	_PORTB,1
                                    1-  715     	.line	174, "main.c"; 	fgPRD = 0;
                                    1-  716     	BANKSEL	_fgPRD
     005E 02rr                      1-  717     	CLRR	_fgPRD
     005F 02rr                      1-  718     	CLRR	(_fgPRD + 1)
                                    1-  719     	.line	175, "main.c"; 	fgCount = 0;
                                    1-  720     	BANKSEL	_fgCount
     0060 02rr                      1-  721     	CLRR	_fgCount
     0061 02rr                      1-  722     	CLRR	(_fgCount + 1)
                                    1-  723     	.line	176, "main.c"; 	delay(100);
     0062 2164                      1-  724     	MOVIA	0x64
     0063 2rrr                      1-  725     	LCALL	_delay
     0064                           1-  726     _00152_DS_:
                                    1-  727     	.line	178, "main.c"; 	if(++sleepTime > 2000)
                                    1-  728     	BANKSEL	_sleepTime
     0064 05rr                      1-  729     	INCR	_sleepTime,F
     0065 0D03                      1-  730     	BTRSC	STATUS,2
     0066 05rr                      1-  731     	INCR	(_sleepTime + 1),F
                                    1-  732     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  733     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0067 2107                      1-  734     	MOVIA	0x07
     0068 04rr                      1-  735     	SUBAR	(_sleepTime + 1),W
     0069 0903                      1-  736     	BTRSS	STATUS,2
     006A 3rrr                      1-  737     	LGOTO	_00224_DS_
     006B 21D1                      1-  738     	MOVIA	0xd1
     006C 04rr                      1-  739     	SUBAR	_sleepTime,W
     006D                           1-  740     _00224_DS_:
     006D 0803                      1-  741     	BTRSS	STATUS,0
     006E 3rrr                      1-  742     	LGOTO	_00159_DS_
                                    1-  743     	.line	181, "main.c"; 	pwmStop();
     006F 2rrr                      1-  744     	LCALL	_pwmStop
                                    1-  745     	.line	182, "main.c"; 	PORTB &= 0xFD;
     0070 1Crr                      1-  746     	BCR	_PORTB,1
                                    1-  747     	.line	184, "main.c"; 	AWUCON = 0x60;
     0071 2160                      1-  748     	MOVIA	0x60
     0072 00rr                      1-  749     	MOVAR	_AWUCON
                                    1-  750     	.line	185, "main.c"; 	fgPRD = 0;
                                    1-  751     	BANKSEL	_fgPRD
     0073 02rr                      1-  752     	CLRR	_fgPRD
     0074 02rr                      1-  753     	CLRR	(_fgPRD + 1)
                                    1-  754     	.line	186, "main.c"; 	fgCount = 0;
                                    1-  755     	BANKSEL	_fgCount
     0075 02rr                      1-  756     	CLRR	_fgCount
     0076 02rr                      1-  757     	CLRR	(_fgCount + 1)
                                    1-  758     	.line	187, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0077 210B                      1-  759     	MOVIA	0x0b
     0078 00rr                      1-  760     	MOVAR	_INTE
                                    1-  761     	.line	188, "main.c"; 	PCON =  C_LVR_En ;	
     0079 2108                      1-  762     	MOVIA	0x08
     007A 00rr                      1-  763     	MOVAR	_PCON
                                    1-  764     	.line	189, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     007B 02rr                      1-  765     	CLRR	_INTF
                                    1-  766     	.line	190, "main.c"; 	CLRWDT();
     007C 0002                      1-  767     	clrwdt
                                    1-  768     	.line	191, "main.c"; 	ENI();
     007D 0004                      1-  769     	ENI
                                    1-  770     	.line	192, "main.c"; 	SLEEP();
     007E 0001                      1-  771     	sleep
                                    1-  772     	.line	193, "main.c"; 	AWUCON = 0x00;
     007F 02rr                      1-  773     	CLRR	_AWUCON
                                    1-  774     	.line	194, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0080 2101                      1-  775     	MOVIA	0x01
     0081 00rr                      1-  776     	MOVAR	_INTE
                                    1-  777     	.line	195, "main.c"; 	INTF = 0;
     0082 02rr                      1-  778     	CLRR	_INTF
                                    1-  779     	.line	197, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0083 21A8                      1-  780     	MOVIA	0xa8
     0084 00rr                      1-  781     	MOVAR	_PCON
     0085 3rrr                      1-  782     	LGOTO	_00159_DS_
                                    1-  783     	.line	201, "main.c"; 	}
                                    1-  784     	RETURN	
     0086 0010                      3-   26 m1      ret
                                    1-  785     ; exit point of _main
                                    1-  787     ;***
                                    1-  788     ;  pBlock Stats: dbName = C
                                    1-  789     ;***
                                    1-  790     ;has an exit
                                    1-  791     ;; Starting pCode block
                                    1-  792     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  794     _F_wait_eoc:
                                    1-  795     ; 2 exit points
     0000                           1-  796     _00606_DS_:
                                    1-  797     	.line	780, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  798     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  799     	LGOTO	_00606_DS_
                                    1-  800     	.line	782, "main.c"; 	}
                                    1-  801     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  802     ; exit point of _F_wait_eoc
                                    1-  804     ;***
                                    1-  805     ;  pBlock Stats: dbName = C
                                    1-  806     ;***
                                    1-  807     ;has an exit
                                    1-  808     ;functions called:
                                    1-  809     ;   _delay
                                    1-  810     ;   _F_wait_eoc
                                    1-  811     ;   _delay
                                    1-  812     ;   _F_wait_eoc
                                    1-  813     ;6 compiler assigned registers:
                                    1-  814     ;   r0x1022
                                    1-  815     ;   r0x1023
                                    1-  816     ;   r0x1024
                                    1-  817     ;   r0x1025
                                    1-  818     ;   r0x1026
                                    1-  819     ;   r0x1027
                                    1-  820     ;; Starting pCode block
                                    1-  821     .segment "code"; module=main, function=_F_AIN5_Convert
                                    1-  823     ;local variable name mapping:
     0000                           1-  826     _F_AIN5_Convert:
                                    1-  827     ; 2 exit points
                                    1-  828     	.line	763, "main.c"; 	void F_AIN5_Convert(char count)
                                    1-  829     	BANKSEL	r0x1022
     0000 00rr                      1-  830     	MOVAR	r0x1022
                                    1-  831     	.line	765, "main.c"; 	R_AIN5_DATA=R_AIN5_DATA_LB=0x00;   
                                    1-  832     	BANKSEL	_R_AIN5_DATA_LB
     0001 02rr                      1-  833     	CLRR	_R_AIN5_DATA_LB
                                    1-  834     	BANKSEL	_R_AIN5_DATA
     0002 02rr                      1-  835     	CLRR	_R_AIN5_DATA
     0003 02rr                      1-  836     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  837     	.line	767, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0004 2194                      1-  838     	MOVIA	0x94
     0005 00rr                      1-  839     	MOVAR	_ADMD
                                    1-  840     	.line	768, "main.c"; 	delay(200);	
     0006 21C8                      1-  841     	MOVIA	0xc8
     0007 2rrr                      1-  842     	LCALL	_delay
                                    1-  843     	.line	769, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  844     	MOVIA	0x01
                                    1-  845     	BANKSEL	r0x1023
     0009 00rr                      1-  846     	MOVAR	r0x1023
     000A                           1-  847     _00599_DS_:
                                    1-  848     	BANKSEL	r0x1023
     000A 01rr                      1-  849     	MOVR	r0x1023,W
                                    1-  850     	BANKSEL	r0x1022
     000B 04rr                      1-  851     	SUBAR	r0x1022,W
     000C 0803                      1-  852     	BTRSS	STATUS,0
     000D 3rrr                      1-  853     	LGOTO	_00601_DS_
                                    1-  854     	.line	771, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1-  855     	BSR	_ADMDbits,6
                                    1-  856     	.line	772, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     000F 2rrr                      1-  857     	LCALL	_F_wait_eoc
                                    1-  858     	.line	773, "main.c"; 	R_AIN5_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1-  859     	MOVIA	0x0f
     0011 10rr                      1-  860     	ANDAR	_ADR,W
                                    1-  861     ;;3	MOVAR	r0x1024
                                    1-  862     	BANKSEL	_R_AIN5_DATA_LB
     0012 03rr                      1-  863     	ADDAR	_R_AIN5_DATA_LB,F
                                    1-  864     	.line	774, "main.c"; 	R_AIN5_DATA    += ADD; 
     0013 01rr                      1-  865     	MOVR	_ADD,W
                                    1-  866     	BANKSEL	r0x1024
     0014 00rr                      1-  867     	MOVAR	r0x1024
                                    1-  868     ;;1	CLRR	r0x1025
                                    1-  869     ;;102	MOVR	r0x1024,W
                                    1-  870     ;;100	MOVAR	r0x1026
     0015 2100                      1-  871     	MOVIA	0x00
                                    1-  872     	BANKSEL	r0x1027
     0016 00rr                      1-  873     	MOVAR	r0x1027
                                    1-  874     ;;101	MOVR	r0x1026,W
                                    1-  875     	BANKSEL	r0x1024
     0017 01rr                      1-  876     	MOVR	r0x1024,W
                                    1-  877     	BANKSEL	_R_AIN5_DATA
     0018 03rr                      1-  878     	ADDAR	_R_AIN5_DATA,F
                                    1-  879     	BANKSEL	r0x1027
     0019 01rr                      1-  880     	MOVR	r0x1027,W
     001A 0C03                      1-  881     	BTRSC	STATUS,0
     001B 05rr                      1-  882     	INCR	r0x1027,W
     001C 0D03                      1-  883     	BTRSC	STATUS,2
     001D 3rrr                      1-  884     	LGOTO	_00001_DS_
                                    1-  885     	BANKSEL	_R_AIN5_DATA
     001E 03rr                      1-  886     	ADDAR	(_R_AIN5_DATA + 1),F
     001F                           1-  887     _00001_DS_:
                                    1-  888     	.line	769, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  889     	BANKSEL	r0x1023
     001F 05rr                      1-  890     	INCR	r0x1023,F
     0020 3rrr                      1-  891     	LGOTO	_00599_DS_
     0021                           1-  892     _00601_DS_:
                                    1-  893     	.line	776, "main.c"; 	}
                                    1-  894     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1-  895     ; exit point of _F_AIN5_Convert
                                    1-  897     ;***
                                    1-  898     ;  pBlock Stats: dbName = C
                                    1-  899     ;***
                                    1-  900     ;functions called:
                                    1-  901     ;   _F_AIN5_Convert
                                    1-  902     ;   _LEDHOFF
                                    1-  903     ;   _LEDLOFF
                                    1-  904     ;   _F_AIN5_Convert
                                    1-  905     ;   _LEDHOFF
                                    1-  906     ;   _LEDLOFF
                                    1-  907     ;4 compiler assigned registers:
                                    1-  908     ;   r0x1028
                                    1-  909     ;   r0x1029
                                    1-  910     ;   r0x102A
                                    1-  911     ;   r0x102B
                                    1-  912     ;; Starting pCode block
                                    1-  913     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  915     _checkBatAD:
                                    1-  916     ; 0 exit points
                                    1-  917     	.line	672, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA_LB = 0x00;
                                    1-  918     	BANKSEL	_R_AIN5_DATA_LB
     0000 02rr                      1-  919     	CLRR	_R_AIN5_DATA_LB
                                    1-  920     	BANKSEL	_R_AIN5_DATA
     0001 02rr                      1-  921     	CLRR	_R_AIN5_DATA
     0002 02rr                      1-  922     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  923     	.line	673, "main.c"; 	F_AIN5_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1-  924     	MOVIA	0x08
     0004 2rrr                      1-  925     	LCALL	_F_AIN5_Convert
                                    1-  926     	.line	674, "main.c"; 	R_AIN5_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  927     	BANKSEL	_R_AIN5_DATA
     0005 15rr                      1-  928     	SWAPR	(_R_AIN5_DATA + 1),W
     0006 22F0                      1-  929     	ANDIA	0xf0
     0007 00rr                      1-  930     	MOVAR	(_R_AIN5_DATA + 1)
     0008 15rr                      1-  931     	SWAPR	_R_AIN5_DATA,W
     0009 00rr                      1-  932     	MOVAR	_R_AIN5_DATA
     000A 220F                      1-  933     	ANDIA	0x0f
     000B 11rr                      1-  934     	IORAR	(_R_AIN5_DATA + 1),F
     000C 12rr                      1-  935     	XORAR	_R_AIN5_DATA,F
                                    1-  936     	.line	675, "main.c"; 	R_AIN5_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1-  937     	MOVIA	0xf0
                                    1-  938     	BANKSEL	_R_AIN5_DATA_LB
     000E 10rr                      1-  939     	ANDAR	_R_AIN5_DATA_LB,F
                                    1-  940     	.line	676, "main.c"; 	R_AIN5_DATA += R_AIN5_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1-  941     	MOVR	_R_AIN5_DATA_LB,W
                                    1-  942     	BANKSEL	r0x102A
     0010 00rr                      1-  943     	MOVAR	r0x102A
                                    1-  944     ;;1	MOVAR	r0x1028
                                    1-  945     ;;1	CLRR	r0x1029
                                    1-  946     ;;99	MOVR	r0x1028,W
     0011 2100                      1-  947     	MOVIA	0x00
                                    1-  948     	BANKSEL	r0x102B
     0012 00rr                      1-  949     	MOVAR	r0x102B
                                    1-  950     	BANKSEL	r0x102A
     0013 01rr                      1-  951     	MOVR	r0x102A,W
                                    1-  952     	BANKSEL	_R_AIN5_DATA
     0014 03rr                      1-  953     	ADDAR	_R_AIN5_DATA,F
                                    1-  954     	BANKSEL	r0x102B
     0015 01rr                      1-  955     	MOVR	r0x102B,W
     0016 0C03                      1-  956     	BTRSC	STATUS,0
     0017 05rr                      1-  957     	INCR	r0x102B,W
     0018 0D03                      1-  958     	BTRSC	STATUS,2
     0019 3rrr                      1-  959     	LGOTO	_00002_DS_
                                    1-  960     	BANKSEL	_R_AIN5_DATA
     001A 03rr                      1-  961     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1-  962     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001B                           1-  963     _00002_DS_:
                                    1-  964     	.line	677, "main.c"; 	R_AIN5_DATA >>=3;					// R_AIN0_DATA divided 8
     001B 1C03                      1-  965     	BCR	STATUS,0
                                    1-  966     	BANKSEL	_R_AIN5_DATA
     001C 13rr                      1-  967     	RRR	(_R_AIN5_DATA + 1),F
     001D 13rr                      1-  968     	RRR	_R_AIN5_DATA,F
                                    1-  969     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001E 1C03                      1-  970     	BCR	STATUS,0
     001F 13rr                      1-  971     	RRR	(_R_AIN5_DATA + 1),F
     0020 13rr                      1-  972     	RRR	_R_AIN5_DATA,F
                                    1-  973     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0021 1C03                      1-  974     	BCR	STATUS,0
     0022 13rr                      1-  975     	RRR	(_R_AIN5_DATA + 1),F
     0023 13rr                      1-  976     	RRR	_R_AIN5_DATA,F
                                    1-  977     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  978     ;;unsigned compare: left >= lit (0x614=1556), size=2
                                    1-  979     	.line	678, "main.c"; 	if(R_AIN5_DATA > 1555)
     0024 2106                      1-  980     	MOVIA	0x06
     0025 04rr                      1-  981     	SUBAR	(_R_AIN5_DATA + 1),W
     0026 0903                      1-  982     	BTRSS	STATUS,2
     0027 3rrr                      1-  983     	LGOTO	_00580_DS_
     0028 2114                      1-  984     	MOVIA	0x14
     0029 04rr                      1-  985     	SUBAR	_R_AIN5_DATA,W
     002A                           1-  986     _00580_DS_:
     002A 0803                      1-  987     	BTRSS	STATUS,0
     002B 3rrr                      1-  988     	LGOTO	_00486_DS_
                                    1-  989     	.line	680, "main.c"; 	R_AIN5_DATA = 1555;
     002C 2113                      1-  990     	MOVIA	0x13
                                    1-  991     	BANKSEL	_R_AIN5_DATA
     002D 00rr                      1-  992     	MOVAR	_R_AIN5_DATA
     002E 2106                      1-  993     	MOVIA	0x06
     002F 00rr                      1-  994     	MOVAR	(_R_AIN5_DATA + 1)
     0030 3rrr                      1-  995     	LGOTO	_00487_DS_
                                    1-  996     ;;unsigned compare: left < lit (0x45D=1117), size=2
     0031                           1-  997     _00486_DS_:
                                    1-  998     	.line	682, "main.c"; 	else if(R_AIN5_DATA < 1117)
     0031 2104                      1-  999     	MOVIA	0x04
                                    1- 1000     	BANKSEL	_R_AIN5_DATA
     0032 04rr                      1- 1001     	SUBAR	(_R_AIN5_DATA + 1),W
     0033 0903                      1- 1002     	BTRSS	STATUS,2
     0034 3rrr                      1- 1003     	LGOTO	_00581_DS_
     0035 215D                      1- 1004     	MOVIA	0x5d
     0036 04rr                      1- 1005     	SUBAR	_R_AIN5_DATA,W
     0037                           1- 1006     _00581_DS_:
     0037 0C03                      1- 1007     	BTRSC	STATUS,0
     0038 3rrr                      1- 1008     	LGOTO	_00487_DS_
                                    1- 1009     	.line	684, "main.c"; 	R_AIN5_DATA = 1117;
     0039 215D                      1- 1010     	MOVIA	0x5d
                                    1- 1011     	BANKSEL	_R_AIN5_DATA
     003A 00rr                      1- 1012     	MOVAR	_R_AIN5_DATA
     003B 2104                      1- 1013     	MOVIA	0x04
     003C 00rr                      1- 1014     	MOVAR	(_R_AIN5_DATA + 1)
     003D                           1- 1015     _00487_DS_:
                                    1- 1016     	.line	686, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA - 1117;
     003D 21A3                      1- 1017     	MOVIA	0xa3
                                    1- 1018     	BANKSEL	_R_AIN5_DATA
     003E 03rr                      1- 1019     	ADDAR	_R_AIN5_DATA,F
     003F 21FB                      1- 1020     	MOVIA	0xfb
     0040 0C03                      1- 1021     	BTRSC	STATUS,0
     0041 21FC                      1- 1022     	MOVIA	0xfc
     0042 03rr                      1- 1023     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1- 1024     ;;unsigned compare: left < lit (0x1AE=430), size=2
                                    1- 1025     	.line	688, "main.c"; 	if(R_AIN5_DATA >= 430)
     0043 2101                      1- 1026     	MOVIA	0x01
     0044 04rr                      1- 1027     	SUBAR	(_R_AIN5_DATA + 1),W
     0045 0903                      1- 1028     	BTRSS	STATUS,2
     0046 3rrr                      1- 1029     	LGOTO	_00582_DS_
     0047 21AE                      1- 1030     	MOVIA	0xae
     0048 04rr                      1- 1031     	SUBAR	_R_AIN5_DATA,W
     0049                           1- 1032     _00582_DS_:
     0049 0803                      1- 1033     	BTRSS	STATUS,0
     004A 3rrr                      1- 1034     	LGOTO	_00522_DS_
                                    1- 1035     	.line	690, "main.c"; 	pwStep = 6;
     004B 2106                      1- 1036     	MOVIA	0x06
                                    1- 1037     	BANKSEL	_pwStep
     004C 00rr                      1- 1038     	MOVAR	_pwStep
     004D 3rrr                      1- 1039     	LGOTO	_00003_DS_
                                    1- 1040     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1041     ;;unsigned compare: left >= lit (0x18B=395), size=2
     004E                           1- 1042     _00522_DS_:
                                    1- 1043     	.line	692, "main.c"; 	else if(R_AIN5_DATA > 394)
     004E 2101                      1- 1044     	MOVIA	0x01
                                    1- 1045     	BANKSEL	_R_AIN5_DATA
     004F 04rr                      1- 1046     	SUBAR	(_R_AIN5_DATA + 1),W
     0050 0903                      1- 1047     	BTRSS	STATUS,2
     0051 3rrr                      1- 1048     	LGOTO	_00583_DS_
     0052 218B                      1- 1049     	MOVIA	0x8b
     0053 04rr                      1- 1050     	SUBAR	_R_AIN5_DATA,W
     0054                           1- 1051     _00583_DS_:
     0054 0803                      1- 1052     	BTRSS	STATUS,0
     0055 3rrr                      1- 1053     	LGOTO	_00519_DS_
                                    1- 1054     	.line	695, "main.c"; 	if(pwStep == 6)
                                    1- 1055     	BANKSEL	_pwStep
     0056 01rr                      1- 1056     	MOVR	_pwStep,W
     0057 2406                      1- 1057     	XORIA	0x06
     0058 0903                      1- 1058     	BTRSS	STATUS,2
     0059 3rrr                      1- 1059     	LGOTO	_00491_DS_
                                    1- 1060     ;;unsigned compare: left < lit (0x195=405), size=2
                                    1- 1061     	.line	697, "main.c"; 	if(R_AIN5_DATA < 405)
     005A 2101                      1- 1062     	MOVIA	0x01
                                    1- 1063     	BANKSEL	_R_AIN5_DATA
     005B 04rr                      1- 1064     	SUBAR	(_R_AIN5_DATA + 1),W
     005C 0903                      1- 1065     	BTRSS	STATUS,2
     005D 3rrr                      1- 1066     	LGOTO	_00584_DS_
     005E 2195                      1- 1067     	MOVIA	0x95
     005F 04rr                      1- 1068     	SUBAR	_R_AIN5_DATA,W
     0060                           1- 1069     _00584_DS_:
     0060 0C03                      1- 1070     	BTRSC	STATUS,0
     0061 3rrr                      1- 1071     	LGOTO	_00492_DS_
                                    1- 1072     	.line	698, "main.c"; 	pwStep = 5;
     0062 2105                      1- 1073     	MOVIA	0x05
                                    1- 1074     	BANKSEL	_pwStep
     0063 00rr                      1- 1075     	MOVAR	_pwStep
     0064 3rrr                      1- 1076     	LGOTO	_00492_DS_
     0065                           1- 1077     _00491_DS_:
                                    1- 1078     	.line	702, "main.c"; 	pwStep = 5;
     0065 2105                      1- 1079     	MOVIA	0x05
                                    1- 1080     	BANKSEL	_pwStep
     0066 00rr                      1- 1081     	MOVAR	_pwStep
                                    1- 1082     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1083     ;;unsigned compare: left >= lit (0x19B=411), size=2
     0067                           1- 1084     _00492_DS_:
                                    1- 1085     	.line	705, "main.c"; 	if(R_AIN5_DATA > 410)
     0067 2101                      1- 1086     	MOVIA	0x01
                                    1- 1087     	BANKSEL	_R_AIN5_DATA
     0068 04rr                      1- 1088     	SUBAR	(_R_AIN5_DATA + 1),W
     0069 0903                      1- 1089     	BTRSS	STATUS,2
     006A 3rrr                      1- 1090     	LGOTO	_00585_DS_
     006B 219B                      1- 1091     	MOVIA	0x9b
     006C 04rr                      1- 1092     	SUBAR	_R_AIN5_DATA,W
     006D                           1- 1093     _00585_DS_:
     006D 0803                      1- 1094     	BTRSS	STATUS,0
     006E 3rrr                      1- 1095     	LGOTO	_00003_DS_
                                    1- 1096     	.line	707, "main.c"; 	if(++chrgTime > 1800)
                                    1- 1097     	BANKSEL	_chrgTime
     006F 05rr                      1- 1098     	INCR	_chrgTime,F
     0070 0D03                      1- 1099     	BTRSC	STATUS,2
     0071 05rr                      1- 1100     	INCR	(_chrgTime + 1),F
                                    1- 1101     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1102     ;;unsigned compare: left >= lit (0x709=1801), size=2
     0072 2107                      1- 1103     	MOVIA	0x07
     0073 04rr                      1- 1104     	SUBAR	(_chrgTime + 1),W
     0074 0903                      1- 1105     	BTRSS	STATUS,2
     0075 3rrr                      1- 1106     	LGOTO	_00586_DS_
     0076 2109                      1- 1107     	MOVIA	0x09
     0077 04rr                      1- 1108     	SUBAR	_chrgTime,W
     0078                           1- 1109     _00586_DS_:
     0078 0803                      1- 1110     	BTRSS	STATUS,0
     0079 3rrr                      1- 1111     	LGOTO	_00003_DS_
                                    1- 1112     	.line	709, "main.c"; 	chrgTime = 1800;
     007A 2108                      1- 1113     	MOVIA	0x08
                                    1- 1114     	BANKSEL	_chrgTime
     007B 00rr                      1- 1115     	MOVAR	_chrgTime
     007C 2107                      1- 1116     	MOVIA	0x07
     007D 00rr                      1- 1117     	MOVAR	(_chrgTime + 1)
                                    1- 1118     	.line	710, "main.c"; 	pwStep = 6;
     007E 2106                      1- 1119     	MOVIA	0x06
                                    1- 1120     	BANKSEL	_pwStep
     007F 00rr                      1- 1121     	MOVAR	_pwStep
     0080 3rrr                      1- 1122     	LGOTO	_00003_DS_
                                    1- 1123     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1124     ;;unsigned compare: left >= lit (0xE0=224), size=2
     0081                           1- 1125     _00519_DS_:
                                    1- 1126     	.line	714, "main.c"; 	else if(R_AIN5_DATA > 223)
     0081 2100                      1- 1127     	MOVIA	0x00
                                    1- 1128     	BANKSEL	_R_AIN5_DATA
     0082 04rr                      1- 1129     	SUBAR	(_R_AIN5_DATA + 1),W
     0083 0903                      1- 1130     	BTRSS	STATUS,2
     0084 3rrr                      1- 1131     	LGOTO	_00587_DS_
     0085 21E0                      1- 1132     	MOVIA	0xe0
     0086 04rr                      1- 1133     	SUBAR	_R_AIN5_DATA,W
     0087                           1- 1134     _00587_DS_:
     0087 0803                      1- 1135     	BTRSS	STATUS,0
     0088 3rrr                      1- 1136     	LGOTO	_00516_DS_
                                    1- 1137     	.line	717, "main.c"; 	pwStep = 4;
     0089 2104                      1- 1138     	MOVIA	0x04
                                    1- 1139     	BANKSEL	_pwStep
     008A 00rr                      1- 1140     	MOVAR	_pwStep
                                    1- 1141     	.line	718, "main.c"; 	chrgTime = 0;
                                    1- 1142     	BANKSEL	_chrgTime
     008B 02rr                      1- 1143     	CLRR	_chrgTime
     008C 02rr                      1- 1144     	CLRR	(_chrgTime + 1)
     008D 3rrr                      1- 1145     	LGOTO	_00003_DS_
                                    1- 1146     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1147     ;;unsigned compare: left >= lit (0x96=150), size=2
     008E                           1- 1148     _00516_DS_:
                                    1- 1149     	.line	720, "main.c"; 	else if(R_AIN5_DATA > 149)
     008E 2100                      1- 1150     	MOVIA	0x00
                                    1- 1151     	BANKSEL	_R_AIN5_DATA
     008F 04rr                      1- 1152     	SUBAR	(_R_AIN5_DATA + 1),W
     0090 0903                      1- 1153     	BTRSS	STATUS,2
     0091 3rrr                      1- 1154     	LGOTO	_00588_DS_
     0092 2196                      1- 1155     	MOVIA	0x96
     0093 04rr                      1- 1156     	SUBAR	_R_AIN5_DATA,W
     0094                           1- 1157     _00588_DS_:
     0094 0803                      1- 1158     	BTRSS	STATUS,0
     0095 3rrr                      1- 1159     	LGOTO	_00513_DS_
                                    1- 1160     	.line	723, "main.c"; 	pwStep = 3;
     0096 2103                      1- 1161     	MOVIA	0x03
                                    1- 1162     	BANKSEL	_pwStep
     0097 00rr                      1- 1163     	MOVAR	_pwStep
                                    1- 1164     	.line	724, "main.c"; 	chrgTime = 0;
                                    1- 1165     	BANKSEL	_chrgTime
     0098 02rr                      1- 1166     	CLRR	_chrgTime
     0099 02rr                      1- 1167     	CLRR	(_chrgTime + 1)
     009A 3rrr                      1- 1168     	LGOTO	_00003_DS_
                                    1- 1169     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1170     ;;unsigned compare: left >= lit (0x5E=94), size=2
     009B                           1- 1171     _00513_DS_:
                                    1- 1172     	.line	726, "main.c"; 	else if(R_AIN5_DATA > 93)
     009B 2100                      1- 1173     	MOVIA	0x00
                                    1- 1174     	BANKSEL	_R_AIN5_DATA
     009C 04rr                      1- 1175     	SUBAR	(_R_AIN5_DATA + 1),W
     009D 0903                      1- 1176     	BTRSS	STATUS,2
     009E 3rrr                      1- 1177     	LGOTO	_00589_DS_
     009F 215E                      1- 1178     	MOVIA	0x5e
     00A0 04rr                      1- 1179     	SUBAR	_R_AIN5_DATA,W
     00A1                           1- 1180     _00589_DS_:
     00A1 0803                      1- 1181     	BTRSS	STATUS,0
     00A2 3rrr                      1- 1182     	LGOTO	_00510_DS_
                                    1- 1183     	.line	729, "main.c"; 	pwStep = 2;
     00A3 2102                      1- 1184     	MOVIA	0x02
                                    1- 1185     	BANKSEL	_pwStep
     00A4 00rr                      1- 1186     	MOVAR	_pwStep
                                    1- 1187     	.line	730, "main.c"; 	chrgTime = 0;
                                    1- 1188     	BANKSEL	_chrgTime
     00A5 02rr                      1- 1189     	CLRR	_chrgTime
     00A6 02rr                      1- 1190     	CLRR	(_chrgTime + 1)
                                    1- 1191     	.line	731, "main.c"; 	if(workStartFlag == 4)
                                    1- 1192     	BANKSEL	_workStartFlag
     00A7 01rr                      1- 1193     	MOVR	_workStartFlag,W
     00A8 2404                      1- 1194     	XORIA	0x04
     00A9 0903                      1- 1195     	BTRSS	STATUS,2
     00AA 3rrr                      1- 1196     	LGOTO	_00003_DS_
                                    1- 1197     	.line	733, "main.c"; 	workStartFlag = 0;
     00AB 02rr                      1- 1198     	CLRR	_workStartFlag
                                    1- 1199     	.line	734, "main.c"; 	LEDHOFF();
     00AC 2rrr                      1- 1200     	LCALL	_LEDHOFF
                                    1- 1201     	.line	735, "main.c"; 	LEDLOFF();
     00AD 2rrr                      1- 1202     	LCALL	_LEDLOFF
     00AE 3rrr                      1- 1203     	LGOTO	_00003_DS_
     00AF                           1- 1204     _00510_DS_:
                                    1- 1205     	.line	741, "main.c"; 	if(pwStep == 0 || pwStep == 1 || (++lowBatTime > 10))
                                    1- 1206     	BANKSEL	_pwStep
     00AF 01rr                      1- 1207     	MOVR	_pwStep,W
     00B0 0D03                      1- 1208     	BTRSC	STATUS,2
     00B1 3rrr                      1- 1209     	LGOTO	_00505_DS_
     00B2 01rr                      1- 1210     	MOVR	_pwStep,W
     00B3 2401                      1- 1211     	XORIA	0x01
     00B4 0D03                      1- 1212     	BTRSC	STATUS,2
     00B5 3rrr                      1- 1213     	LGOTO	_00505_DS_
                                    1- 1214     	BANKSEL	_lowBatTime
     00B6 05rr                      1- 1215     	INCR	_lowBatTime,F
     00B7 210B                      1- 1216     	MOVIA	0x0b
     00B8 04rr                      1- 1217     	SUBAR	_lowBatTime,W
     00B9 0803                      1- 1218     	BTRSS	STATUS,0
     00BA 3rrr                      1- 1219     	LGOTO	_00003_DS_
     00BB                           1- 1220     _00505_DS_:
                                    1- 1221     	.line	743, "main.c"; 	lowBatTime = 0;
                                    1- 1222     	BANKSEL	_lowBatTime
     00BB 02rr                      1- 1223     	CLRR	_lowBatTime
                                    1- 1224     	.line	744, "main.c"; 	pwStep = 1;
     00BC 2101                      1- 1225     	MOVIA	0x01
                                    1- 1226     	BANKSEL	_pwStep
     00BD 00rr                      1- 1227     	MOVAR	_pwStep
                                    1- 1228     	.line	745, "main.c"; 	chrgTime = 0;
                                    1- 1229     	BANKSEL	_chrgTime
     00BE 02rr                      1- 1230     	CLRR	_chrgTime
     00BF 02rr                      1- 1231     	CLRR	(_chrgTime + 1)
                                    1- 1232     	.line	746, "main.c"; 	if(workStep > 0 && fgPRD < 100 && workStartFlag == 0)
                                    1- 1233     	BANKSEL	_workStep
     00C0 01rr                      1- 1234     	MOVR	_workStep,W
     00C1 0D03                      1- 1235     	BTRSC	STATUS,2
     00C2 3rrr                      1- 1236     	LGOTO	_00003_DS_
                                    1- 1237     ;;unsigned compare: left < lit (0x64=100), size=2
     00C3 2100                      1- 1238     	MOVIA	0x00
                                    1- 1239     	BANKSEL	_fgPRD
     00C4 04rr                      1- 1240     	SUBAR	(_fgPRD + 1),W
     00C5 0903                      1- 1241     	BTRSS	STATUS,2
     00C6 3rrr                      1- 1242     	LGOTO	_00592_DS_
     00C7 2164                      1- 1243     	MOVIA	0x64
     00C8 04rr                      1- 1244     	SUBAR	_fgPRD,W
     00C9                           1- 1245     _00592_DS_:
     00C9 0C03                      1- 1246     	BTRSC	STATUS,0
     00CA 3rrr                      1- 1247     	LGOTO	_00003_DS_
                                    1- 1248     	BANKSEL	_workStartFlag
     00CB 01rr                      1- 1249     	MOVR	_workStartFlag,W
     00CC 0903                      1- 1250     	BTRSS	STATUS,2
     00CD 3rrr                      1- 1251     	LGOTO	_00003_DS_
                                    1- 1252     	.line	748, "main.c"; 	workStartFlag = 4;
     00CE 2104                      1- 1253     	MOVIA	0x04
     00CF 00rr                      1- 1254     	MOVAR	_workStartFlag
                                    1- 1255     	.line	749, "main.c"; 	if(redLedFlag == 0)
                                    1- 1256     	BANKSEL	_Status
     00D0 0Drr                      1- 1257     	BTRSC	_Status,2
     00D1 3rrr                      1- 1258     	LGOTO	_00003_DS_
                                    1- 1259     	.line	751, "main.c"; 	startStep = 0;
                                    1- 1260     	BANKSEL	_startStep
     00D2 02rr                      1- 1261     	CLRR	_startStep
     00D3                           1- 1262     _00003_DS_:
                                    1- 1263     	.line	758, "main.c"; 	}
                                    1- 1264     	RETURN	
     00D3 0010                      3-   26 m1      ret
                                    1- 1266     ;***
                                    1- 1267     ;  pBlock Stats: dbName = C
                                    1- 1268     ;***
                                    1- 1269     ;has an exit
                                    1- 1270     ;functions called:
                                    1- 1271     ;   _delay
                                    1- 1272     ;   _delay
                                    1- 1273     ;; Starting pCode block
                                    1- 1274     .segment "code"; module=main, function=_initAD
     0000                           1- 1276     _initAD:
                                    1- 1277     ; 2 exit points
                                    1- 1278     	.line	648, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1279     	MOVIA	0x84
     0001 00rr                      1- 1280     	MOVAR	_ADMD
                                    1- 1281     	.line	653, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1282     	CLRR	_ADVREFH
                                    1- 1283     	.line	658, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1284     	MOVIA	0x10
     0004 00rr                      1- 1285     	MOVAR	_ADR
                                    1- 1286     	.line	660, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1287     	MOVIA	0x03
     0006 00rr                      1- 1288     	MOVAR	_ADCR
                                    1- 1289     	.line	663, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1290     	BSR	_ADMDbits,4
                                    1- 1291     	.line	664, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1292     	MOVIA	0x64
     0009 2rrr                      1- 1293     	LCALL	_delay
                                    1- 1294     	.line	667, "main.c"; 	}
                                    1- 1295     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 1296     ; exit point of _initAD
                                    1- 1298     ;***
                                    1- 1299     ;  pBlock Stats: dbName = C
                                    1- 1300     ;***
                                    1- 1301     ;has an exit
                                    1- 1302     ;2 compiler assigned registers:
                                    1- 1303     ;   r0x1020
                                    1- 1304     ;   r0x1021
                                    1- 1305     ;; Starting pCode block
                                    1- 1306     .segment "code"; module=main, function=_delay
                                    1- 1308     ;local variable name mapping:
     0000                           1- 1311     _delay:
                                    1- 1312     ; 2 exit points
                                    1- 1313     	.line	638, "main.c"; 	void delay(u8t time)
                                    1- 1314     	BANKSEL	r0x1020
     0000 00rr                      1- 1315     	MOVAR	r0x1020
                                    1- 1316     	.line	640, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1317     	BANKSEL	r0x1021
     0001 02rr                      1- 1318     	CLRR	r0x1021
     0002                           1- 1319     _00472_DS_:
                                    1- 1320     	BANKSEL	r0x1020
     0002 01rr                      1- 1321     	MOVR	r0x1020,W
                                    1- 1322     	BANKSEL	r0x1021
     0003 04rr                      1- 1323     	SUBAR	r0x1021,W
     0004 0C03                      1- 1324     	BTRSC	STATUS,0
     0005 3rrr                      1- 1325     	LGOTO	_00474_DS_
                                    1- 1326     	.line	641, "main.c"; 	NOP();
     0006 0000                      1- 1327     	nop
                                    1- 1328     	.line	640, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1329     	BANKSEL	r0x1021
     0007 05rr                      1- 1330     	INCR	r0x1021,F
     0008 3rrr                      1- 1331     	LGOTO	_00472_DS_
     0009                           1- 1332     _00474_DS_:
                                    1- 1333     	.line	642, "main.c"; 	}
                                    1- 1334     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1- 1335     ; exit point of _delay
                                    1- 1337     ;***
                                    1- 1338     ;  pBlock Stats: dbName = C
                                    1- 1339     ;***
                                    1- 1340     ;has an exit
                                    1- 1341     ;functions called:
                                    1- 1342     ;   _pwmStop
                                    1- 1343     ;   _LedInput
                                    1- 1344     ;   _LEDLOFF
                                    1- 1345     ;   _LEDHON
                                    1- 1346     ;   _LEDHOFF
                                    1- 1347     ;   _LEDHOFF
                                    1- 1348     ;   _LEDLOFF
                                    1- 1349     ;   _pwmStop
                                    1- 1350     ;   _LedInput
                                    1- 1351     ;   _LEDLOFF
                                    1- 1352     ;   _LEDHON
                                    1- 1353     ;   _LEDHOFF
                                    1- 1354     ;   _LEDHOFF
                                    1- 1355     ;   _LEDLOFF
                                    1- 1356     ;; Starting pCode block
                                    1- 1357     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1359     _chrgCtr:
                                    1- 1360     ; 2 exit points
                                    1- 1361     	.line	598, "main.c"; 	if(PORTA & 0x20)
                                    1- 1362     	BANKSEL	_PORTA
     0000 0Arr                      1- 1363     	BTRSS	_PORTA,5
     0001 3rrr                      1- 1364     	LGOTO	_00463_DS_
                                    1- 1365     	.line	601, "main.c"; 	chrgFlag = 1;
                                    1- 1366     	BANKSEL	_Status
     0002 19rr                      1- 1367     	BSR	_Status,3
                                    1- 1368     	.line	602, "main.c"; 	workStartFlag = 0;
                                    1- 1369     	BANKSEL	_workStartFlag
     0003 02rr                      1- 1370     	CLRR	_workStartFlag
                                    1- 1371     	.line	603, "main.c"; 	workStep = 0;
                                    1- 1372     	BANKSEL	_workStep
     0004 02rr                      1- 1373     	CLRR	_workStep
                                    1- 1374     	.line	604, "main.c"; 	ledStep = 0;
                                    1- 1375     	BANKSEL	_ledStep
     0005 02rr                      1- 1376     	CLRR	_ledStep
                                    1- 1377     	.line	605, "main.c"; 	pwmStop();
     0006 2rrr                      1- 1378     	LCALL	_pwmStop
                                    1- 1379     	.line	606, "main.c"; 	LedInput();
     0007 2rrr                      1- 1380     	LCALL	_LedInput
                                    1- 1381     	.line	607, "main.c"; 	PORTB &= 0xFD;
     0008 1Crr                      1- 1382     	BCR	_PORTB,1
                                    1- 1383     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1384     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 1385     	.line	608, "main.c"; 	if(pwStep > 5)
     0009 2106                      1- 1386     	MOVIA	0x06
                                    1- 1387     	BANKSEL	_pwStep
     000A 04rr                      1- 1388     	SUBAR	_pwStep,W
     000B 0803                      1- 1389     	BTRSS	STATUS,0
     000C 3rrr                      1- 1390     	LGOTO	_00458_DS_
                                    1- 1391     	.line	611, "main.c"; 	LEDLOFF();
     000D 2rrr                      1- 1392     	LCALL	_LEDLOFF
                                    1- 1393     	.line	612, "main.c"; 	LEDHON();
     000E 2rrr                      1- 1394     	LCALL	_LEDHON
     000F 3rrr                      1- 1395     	LGOTO	_00465_DS_
     0010                           1- 1396     _00458_DS_:
                                    1- 1397     	.line	616, "main.c"; 	if(pwStep == 6)
                                    1- 1398     	BANKSEL	_pwStep
     0010 01rr                      1- 1399     	MOVR	_pwStep,W
     0011 2406                      1- 1400     	XORIA	0x06
     0012 0903                      1- 1401     	BTRSS	STATUS,2
     0013 3rrr                      1- 1402     	LGOTO	_00456_DS_
                                    1- 1403     	.line	618, "main.c"; 	pwStep = 5;
     0014 2105                      1- 1404     	MOVIA	0x05
     0015 00rr                      1- 1405     	MOVAR	_pwStep
     0016                           1- 1406     _00456_DS_:
                                    1- 1407     	.line	620, "main.c"; 	LEDHOFF();
     0016 2rrr                      1- 1408     	LCALL	_LEDHOFF
                                    1- 1409     	.line	621, "main.c"; 	PORTA ^= 0x08;
     0017 2108                      1- 1410     	MOVIA	0x08
                                    1- 1411     	BANKSEL	_PORTA
     0018 12rr                      1- 1412     	XORAR	_PORTA,F
     0019 3rrr                      1- 1413     	LGOTO	_00465_DS_
     001A                           1- 1414     _00463_DS_:
                                    1- 1415     	.line	626, "main.c"; 	chrgFlag = 0;
                                    1- 1416     	BANKSEL	_Status
     001A 1Drr                      1- 1417     	BCR	_Status,3
                                    1- 1418     	.line	627, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 1419     	BANKSEL	_chrgTime
     001B 02rr                      1- 1420     	CLRR	_chrgTime
     001C 02rr                      1- 1421     	CLRR	(_chrgTime + 1)
                                    1- 1422     	.line	628, "main.c"; 	if(workStartFlag == 0)
                                    1- 1423     	BANKSEL	_workStartFlag
     001D 01rr                      1- 1424     	MOVR	_workStartFlag,W
     001E 0903                      1- 1425     	BTRSS	STATUS,2
     001F 3rrr                      1- 1426     	LGOTO	_00465_DS_
                                    1- 1427     	.line	630, "main.c"; 	LEDHOFF();
     0020 2rrr                      1- 1428     	LCALL	_LEDHOFF
                                    1- 1429     	.line	631, "main.c"; 	LEDLOFF();	
     0021 2rrr                      1- 1430     	LCALL	_LEDLOFF
     0022                           1- 1431     _00465_DS_:
                                    1- 1432     	.line	635, "main.c"; 	}
                                    1- 1433     	RETURN	
     0022 0010                      3-   26 m1      ret
                                    1- 1434     ; exit point of _chrgCtr
                                    1- 1436     ;***
                                    1- 1437     ;  pBlock Stats: dbName = C
                                    1- 1438     ;***
                                    1- 1439     ;has an exit
                                    1- 1440     ;1 compiler assigned register :
                                    1- 1441     ;   r0x102D
                                    1- 1442     ;; Starting pCode block
                                    1- 1443     .segment "code"; module=main, function=_keyRead
                                    1- 1445     ;local variable name mapping:
     0000                           1- 1447     _keyRead:
                                    1- 1448     ; 2 exit points
                                    1- 1449     	.line	561, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1450     	BANKSEL	r0x102D
     0000 00rr                      1- 1451     	MOVAR	r0x102D
                                    1- 1452     	.line	563, "main.c"; 	if(keyStatus)
     0001 01rr                      1- 1453     	MOVR	r0x102D,W
     0002 0D03                      1- 1454     	BTRSC	STATUS,2
     0003 3rrr                      1- 1455     	LGOTO	_00448_DS_
                                    1- 1456     	.line	565, "main.c"; 	keyCount++;
                                    1- 1457     	BANKSEL	_keyCount
     0004 05rr                      1- 1458     	INCR	_keyCount,F
                                    1- 1459     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 1460     	.line	566, "main.c"; 	if(keyCount >= 100)
     0005 2164                      1- 1461     	MOVIA	0x64
     0006 04rr                      1- 1462     	SUBAR	_keyCount,W
     0007 0803                      1- 1463     	BTRSS	STATUS,0
     0008 3rrr                      1- 1464     	LGOTO	_00449_DS_
                                    1- 1465     	.line	568, "main.c"; 	keyCount = 100;
     0009 2164                      1- 1466     	MOVIA	0x64
     000A 00rr                      1- 1467     	MOVAR	_keyCount
                                    1- 1468     	.line	569, "main.c"; 	if(!longPressFlag)
                                    1- 1469     	BANKSEL	_Status
     000B 0Crr                      1- 1470     	BTRSC	_Status,1
     000C 3rrr                      1- 1471     	LGOTO	_00449_DS_
                                    1- 1472     	.line	571, "main.c"; 	longPressFlag = 1;
     000D 18rr                      1- 1473     	BSR	_Status,1
                                    1- 1474     	.line	572, "main.c"; 	return 2;
     000E 2102                      1- 1475     	MOVIA	0x02
     000F 3rrr                      1- 1476     	LGOTO	_00450_DS_
                                    1- 1477     ;;unsigned compare: left < lit (0x64=100), size=1
     0010                           1- 1478     _00448_DS_:
                                    1- 1479     	.line	578, "main.c"; 	if(keyCount >= 100)
     0010 2164                      1- 1480     	MOVIA	0x64
                                    1- 1481     	BANKSEL	_keyCount
     0011 04rr                      1- 1482     	SUBAR	_keyCount,W
     0012 0803                      1- 1483     	BTRSS	STATUS,0
     0013 3rrr                      1- 1484     	LGOTO	_00445_DS_
                                    1- 1485     	.line	580, "main.c"; 	keyCount = 0;
     0014 02rr                      1- 1486     	CLRR	_keyCount
                                    1- 1487     	.line	581, "main.c"; 	longPressFlag = 0;
                                    1- 1488     	BANKSEL	_Status
     0015 1Crr                      1- 1489     	BCR	_Status,1
                                    1- 1490     	.line	582, "main.c"; 	return	0;
     0016 2100                      1- 1491     	MOVIA	0x00
     0017 3rrr                      1- 1492     	LGOTO	_00450_DS_
                                    1- 1493     ;;unsigned compare: left < lit (0x8=8), size=1
     0018                           1- 1494     _00445_DS_:
                                    1- 1495     	.line	584, "main.c"; 	else if(keyCount >= 8)
     0018 2108                      1- 1496     	MOVIA	0x08
                                    1- 1497     	BANKSEL	_keyCount
     0019 04rr                      1- 1498     	SUBAR	_keyCount,W
     001A 0803                      1- 1499     	BTRSS	STATUS,0
     001B 3rrr                      1- 1500     	LGOTO	_00446_DS_
                                    1- 1501     	.line	586, "main.c"; 	keyCount = 0;
     001C 02rr                      1- 1502     	CLRR	_keyCount
                                    1- 1503     	.line	587, "main.c"; 	return	1;
     001D 2101                      1- 1504     	MOVIA	0x01
     001E 3rrr                      1- 1505     	LGOTO	_00450_DS_
     001F                           1- 1506     _00446_DS_:
                                    1- 1507     	.line	589, "main.c"; 	keyCount = 0;
                                    1- 1508     	BANKSEL	_keyCount
     001F 02rr                      1- 1509     	CLRR	_keyCount
     0020                           1- 1510     _00449_DS_:
                                    1- 1511     	.line	591, "main.c"; 	return 0;
     0020 2100                      1- 1512     	MOVIA	0x00
     0021                           1- 1513     _00450_DS_:
                                    1- 1514     	.line	592, "main.c"; 	}
                                    1- 1515     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1- 1516     ; exit point of _keyRead
                                    1- 1518     ;***
                                    1- 1519     ;  pBlock Stats: dbName = C
                                    1- 1520     ;***
                                    1- 1521     ;has an exit
                                    1- 1522     ;functions called:
                                    1- 1523     ;   _LedInput
                                    1- 1524     ;   _pwmStop
                                    1- 1525     ;   _LedInput
                                    1- 1526     ;   _pwmStop
                                    1- 1527     ;; Starting pCode block
                                    1- 1528     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1530     _gotoSleep:
                                    1- 1531     ; 2 exit points
                                    1- 1532     	.line	537, "main.c"; 	LedInput();
     0000 2rrr                      1- 1533     	LCALL	_LedInput
                                    1- 1534     	.line	538, "main.c"; 	sleepTime = 0;
                                    1- 1535     	BANKSEL	_sleepTime
     0001 02rr                      1- 1536     	CLRR	_sleepTime
     0002 02rr                      1- 1537     	CLRR	(_sleepTime + 1)
                                    1- 1538     	.line	540, "main.c"; 	pwmStop();
     0003 2rrr                      1- 1539     	LCALL	_pwmStop
                                    1- 1540     	.line	541, "main.c"; 	workStep = 0;
                                    1- 1541     	BANKSEL	_workStep
     0004 02rr                      1- 1542     	CLRR	_workStep
                                    1- 1543     	.line	542, "main.c"; 	AWUCON = 0x60;
     0005 2160                      1- 1544     	MOVIA	0x60
     0006 00rr                      1- 1545     	MOVAR	_AWUCON
                                    1- 1546     	.line	543, "main.c"; 	fgPRD = 0;
                                    1- 1547     	BANKSEL	_fgPRD
     0007 02rr                      1- 1548     	CLRR	_fgPRD
     0008 02rr                      1- 1549     	CLRR	(_fgPRD + 1)
                                    1- 1550     	.line	544, "main.c"; 	fgCount = 0;
                                    1- 1551     	BANKSEL	_fgCount
     0009 02rr                      1- 1552     	CLRR	_fgCount
     000A 02rr                      1- 1553     	CLRR	(_fgCount + 1)
                                    1- 1554     	.line	545, "main.c"; 	redLedFlag = 0;
                                    1- 1555     	BANKSEL	_Status
     000B 1Drr                      1- 1556     	BCR	_Status,2
                                    1- 1557     	.line	546, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     000C 210B                      1- 1558     	MOVIA	0x0b
     000D 00rr                      1- 1559     	MOVAR	_INTE
                                    1- 1560     	.line	547, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     000E 2118                      1- 1561     	MOVIA	0x18
     000F 00rr                      1- 1562     	MOVAR	_PCON
                                    1- 1563     	.line	548, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0010 02rr                      1- 1564     	CLRR	_INTF
                                    1- 1565     	.line	549, "main.c"; 	CLRWDT();
     0011 0002                      1- 1566     	clrwdt
                                    1- 1567     	.line	550, "main.c"; 	ENI();
     0012 0004                      1- 1568     	ENI
                                    1- 1569     	.line	551, "main.c"; 	SLEEP();
     0013 0001                      1- 1570     	sleep
                                    1- 1571     	.line	552, "main.c"; 	AWUCON = 0x00;
     0014 02rr                      1- 1572     	CLRR	_AWUCON
                                    1- 1573     	.line	553, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0015 2101                      1- 1574     	MOVIA	0x01
     0016 00rr                      1- 1575     	MOVAR	_INTE
                                    1- 1576     	.line	554, "main.c"; 	INTF = 0;
     0017 02rr                      1- 1577     	CLRR	_INTF
                                    1- 1578     	.line	556, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 21B8                      1- 1579     	MOVIA	0xb8
     0019 00rr                      1- 1580     	MOVAR	_PCON
                                    1- 1581     	.line	558, "main.c"; 	}
                                    1- 1582     	RETURN	
     001A 0010                      3-   26 m1      ret
                                    1- 1583     ; exit point of _gotoSleep
                                    1- 1585     ;***
                                    1- 1586     ;  pBlock Stats: dbName = C
                                    1- 1587     ;***
                                    1- 1588     ;has an exit
                                    1- 1589     ;functions called:
                                    1- 1590     ;   _pwmStop
                                    1- 1591     ;   _LEDHOFF
                                    1- 1592     ;   _LEDLOFF
                                    1- 1593     ;   _pwmStop
                                    1- 1594     ;   _LEDHOFF
                                    1- 1595     ;   _LEDLOFF
                                    1- 1596     ;; Starting pCode block
                                    1- 1597     .segment "code"; module=main, function=_powerOff
     0000                           1- 1599     _powerOff:
                                    1- 1600     ; 2 exit points
                                    1- 1601     	.line	527, "main.c"; 	workStep = 0;
                                    1- 1602     	BANKSEL	_workStep
     0000 02rr                      1- 1603     	CLRR	_workStep
                                    1- 1604     	.line	528, "main.c"; 	pwmStop();
     0001 2rrr                      1- 1605     	LCALL	_pwmStop
                                    1- 1606     	.line	529, "main.c"; 	LEDHOFF();
     0002 2rrr                      1- 1607     	LCALL	_LEDHOFF
                                    1- 1608     	.line	530, "main.c"; 	LEDLOFF();
     0003 2rrr                      1- 1609     	LCALL	_LEDLOFF
                                    1- 1610     	.line	531, "main.c"; 	ledStep = 5;
     0004 2105                      1- 1611     	MOVIA	0x05
                                    1- 1612     	BANKSEL	_ledStep
     0005 00rr                      1- 1613     	MOVAR	_ledStep
                                    1- 1614     	.line	532, "main.c"; 	workStartFlag = 2;
     0006 2102                      1- 1615     	MOVIA	0x02
                                    1- 1616     	BANKSEL	_workStartFlag
     0007 00rr                      1- 1617     	MOVAR	_workStartFlag
                                    1- 1618     	.line	533, "main.c"; 	}
                                    1- 1619     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1- 1620     ; exit point of _powerOff
                                    1- 1622     ;***
                                    1- 1623     ;  pBlock Stats: dbName = C
                                    1- 1624     ;***
                                    1- 1625     ;has an exit
                                    1- 1626     ;functions called:
                                    1- 1627     ;   _keyRead
                                    1- 1628     ;   _pwmInit
                                    1- 1629     ;   _powerOff
                                    1- 1630     ;   _keyRead
                                    1- 1631     ;   _pwmInit
                                    1- 1632     ;   _powerOff
                                    1- 1633     ;1 compiler assigned register :
                                    1- 1634     ;   r0x102F
                                    1- 1635     ;; Starting pCode block
                                    1- 1636     .segment "code"; module=main, function=_keyCtr
                                    1- 1638     ;local variable name mapping:
     0000                           1- 1640     _keyCtr:
                                    1- 1641     ; 2 exit points
                                    1- 1642     	.line	468, "main.c"; 	if(workStep > 0 && ledTime == 0)
                                    1- 1643     	BANKSEL	_workStep
     0000 01rr                      1- 1644     	MOVR	_workStep,W
     0001 0D03                      1- 1645     	BTRSC	STATUS,2
     0002 3rrr                      1- 1646     	LGOTO	_00398_DS_
                                    1- 1647     	BANKSEL	_ledTime
     0003 01rr                      1- 1648     	MOVR	_ledTime,W
     0004 0903                      1- 1649     	BTRSS	STATUS,2
     0005 3rrr                      1- 1650     	LGOTO	_00398_DS_
                                    1- 1651     	.line	470, "main.c"; 	PORTB |= 0x02;
     0006 18rr                      1- 1652     	BSR	_PORTB,1
     0007 3rrr                      1- 1653     	LGOTO	_00399_DS_
     0008                           1- 1654     _00398_DS_:
                                    1- 1655     	.line	474, "main.c"; 	PORTB &= 0xFD;
     0008 1Crr                      1- 1656     	BCR	_PORTB,1
     0009                           1- 1657     _00399_DS_:
                                    1- 1658     	.line	477, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 1659     	BANKSEL	_PORTA
     0009 07rr                      1- 1660     	COMR	_PORTA,W
                                    1- 1661     	BANKSEL	r0x102F
     000A 00rr                      1- 1662     	MOVAR	r0x102F
     000B 2140                      1- 1663     	MOVIA	0x40
     000C 10rr                      1- 1664     	ANDAR	r0x102F,F
     000D 01rr                      1- 1665     	MOVR	r0x102F,W
     000E 2rrr                      1- 1666     	LCALL	_keyRead
                                    1- 1667     	BANKSEL	r0x102F
     000F 00rr                      1- 1668     	MOVAR	r0x102F
                                    1- 1669     	.line	478, "main.c"; 	if(kclick == 1 && workStep > 0)
     0010 2401                      1- 1670     	XORIA	0x01
     0011 0903                      1- 1671     	BTRSS	STATUS,2
     0012 3rrr                      1- 1672     	LGOTO	_00422_DS_
                                    1- 1673     	BANKSEL	_workStep
     0013 01rr                      1- 1674     	MOVR	_workStep,W
     0014 0D03                      1- 1675     	BTRSC	STATUS,2
     0015 3rrr                      1- 1676     	LGOTO	_00422_DS_
                                    1- 1677     	.line	480, "main.c"; 	count500ms = 0;
                                    1- 1678     	BANKSEL	_count500ms
     0016 02rr                      1- 1679     	CLRR	_count500ms
                                    1- 1680     	.line	481, "main.c"; 	if(workStep > 0)
                                    1- 1681     	BANKSEL	_workStep
     0017 01rr                      1- 1682     	MOVR	_workStep,W
     0018 0D03                      1- 1683     	BTRSC	STATUS,2
     0019 3rrr                      1- 1684     	LGOTO	_00404_DS_
                                    1- 1685     	.line	483, "main.c"; 	ledTime = 0;
                                    1- 1686     	BANKSEL	_ledTime
     001A 02rr                      1- 1687     	CLRR	_ledTime
                                    1- 1688     	.line	484, "main.c"; 	if(++workStep > 4)
                                    1- 1689     	BANKSEL	_workStep
     001B 05rr                      1- 1690     	INCR	_workStep,F
                                    1- 1691     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1692     ;;unsigned compare: left >= lit (0x5=5), size=1
     001C 2105                      1- 1693     	MOVIA	0x05
     001D 04rr                      1- 1694     	SUBAR	_workStep,W
     001E 0803                      1- 1695     	BTRSS	STATUS,0
     001F 3rrr                      1- 1696     	LGOTO	_00404_DS_
                                    1- 1697     	.line	485, "main.c"; 	workStep = 1;
     0020 2101                      1- 1698     	MOVIA	0x01
     0021 00rr                      1- 1699     	MOVAR	_workStep
     0022                           1- 1700     _00404_DS_:
                                    1- 1701     	.line	487, "main.c"; 	duty = 1;
     0022 2101                      1- 1702     	MOVIA	0x01
                                    1- 1703     	BANKSEL	_duty
     0023 00rr                      1- 1704     	MOVAR	_duty
     0024 02rr                      1- 1705     	CLRR	(_duty + 1)
                                    1- 1706     	.line	488, "main.c"; 	fgCount = 0;
                                    1- 1707     	BANKSEL	_fgCount
     0025 02rr                      1- 1708     	CLRR	_fgCount
     0026 02rr                      1- 1709     	CLRR	(_fgCount + 1)
                                    1- 1710     	.line	489, "main.c"; 	workStartFlag = 0;
                                    1- 1711     	BANKSEL	_workStartFlag
     0027 02rr                      1- 1712     	CLRR	_workStartFlag
                                    1- 1713     	.line	490, "main.c"; 	if(workStep == 1)
                                    1- 1714     	BANKSEL	_workStep
     0028 01rr                      1- 1715     	MOVR	_workStep,W
     0029 2401                      1- 1716     	XORIA	0x01
     002A 0903                      1- 1717     	BTRSS	STATUS,2
     002B 3rrr                      1- 1718     	LGOTO	_00414_DS_
                                    1- 1719     	.line	491, "main.c"; 	maxDuty = 38;
     002C 2126                      1- 1720     	MOVIA	0x26
                                    1- 1721     	BANKSEL	_maxDuty
     002D 00rr                      1- 1722     	MOVAR	_maxDuty
     002E 3rrr                      1- 1723     	LGOTO	_00415_DS_
     002F                           1- 1724     _00414_DS_:
                                    1- 1725     	.line	492, "main.c"; 	else if(workStep == 2)
                                    1- 1726     	BANKSEL	_workStep
     002F 01rr                      1- 1727     	MOVR	_workStep,W
     0030 2402                      1- 1728     	XORIA	0x02
     0031 0903                      1- 1729     	BTRSS	STATUS,2
     0032 3rrr                      1- 1730     	LGOTO	_00411_DS_
                                    1- 1731     	.line	493, "main.c"; 	maxDuty = 26;
     0033 211A                      1- 1732     	MOVIA	0x1a
                                    1- 1733     	BANKSEL	_maxDuty
     0034 00rr                      1- 1734     	MOVAR	_maxDuty
     0035 3rrr                      1- 1735     	LGOTO	_00415_DS_
     0036                           1- 1736     _00411_DS_:
                                    1- 1737     	.line	494, "main.c"; 	else if(workStep == 3)
                                    1- 1738     	BANKSEL	_workStep
     0036 01rr                      1- 1739     	MOVR	_workStep,W
     0037 2403                      1- 1740     	XORIA	0x03
     0038 0903                      1- 1741     	BTRSS	STATUS,2
     0039 3rrr                      1- 1742     	LGOTO	_00408_DS_
                                    1- 1743     	.line	495, "main.c"; 	maxDuty = 15;
     003A 210F                      1- 1744     	MOVIA	0x0f
                                    1- 1745     	BANKSEL	_maxDuty
     003B 00rr                      1- 1746     	MOVAR	_maxDuty
     003C 3rrr                      1- 1747     	LGOTO	_00415_DS_
     003D                           1- 1748     _00408_DS_:
                                    1- 1749     	.line	496, "main.c"; 	else if(workStep == 4)
                                    1- 1750     	BANKSEL	_workStep
     003D 01rr                      1- 1751     	MOVR	_workStep,W
     003E 2404                      1- 1752     	XORIA	0x04
     003F 0903                      1- 1753     	BTRSS	STATUS,2
     0040 3rrr                      1- 1754     	LGOTO	_00415_DS_
                                    1- 1755     	.line	497, "main.c"; 	maxDuty = 3;
     0041 2103                      1- 1756     	MOVIA	0x03
                                    1- 1757     	BANKSEL	_maxDuty
     0042 00rr                      1- 1758     	MOVAR	_maxDuty
     0043                           1- 1759     _00415_DS_:
                                    1- 1760     	.line	498, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1761     	BANKSEL	_maxDuty
     0043 01rr                      1- 1762     	MOVR	_maxDuty,W
     0044 00rr                      1- 1763     	SFUN	_PWM2DUTY
                                    1- 1764     	.line	499, "main.c"; 	pwmInit();
     0045 2rrr                      1- 1765     	LCALL	_pwmInit
     0046 3rrr                      1- 1766     	LGOTO	_00425_DS_
     0047                           1- 1767     _00422_DS_:
                                    1- 1768     	.line	501, "main.c"; 	else if(kclick == 2)
                                    1- 1769     	BANKSEL	r0x102F
     0047 01rr                      1- 1770     	MOVR	r0x102F,W
     0048 2402                      1- 1771     	XORIA	0x02
     0049 0903                      1- 1772     	BTRSS	STATUS,2
     004A 3rrr                      1- 1773     	LGOTO	_00425_DS_
                                    1- 1774     	.line	503, "main.c"; 	if(workStep > 0)
                                    1- 1775     	BANKSEL	_workStep
     004B 01rr                      1- 1776     	MOVR	_workStep,W
     004C 0D03                      1- 1777     	BTRSC	STATUS,2
     004D 3rrr                      1- 1778     	LGOTO	_00417_DS_
                                    1- 1779     	.line	505, "main.c"; 	powerOff();
     004E 2rrr                      1- 1780     	LCALL	_powerOff
     004F 3rrr                      1- 1781     	LGOTO	_00425_DS_
     0050                           1- 1782     _00417_DS_:
                                    1- 1783     	.line	509, "main.c"; 	startStep = 0;
                                    1- 1784     	BANKSEL	_startStep
     0050 02rr                      1- 1785     	CLRR	_startStep
                                    1- 1786     	.line	510, "main.c"; 	sleepTime = 0;
                                    1- 1787     	BANKSEL	_sleepTime
     0051 02rr                      1- 1788     	CLRR	_sleepTime
     0052 02rr                      1- 1789     	CLRR	(_sleepTime + 1)
                                    1- 1790     	.line	511, "main.c"; 	ledTime = 4;
     0053 2104                      1- 1791     	MOVIA	0x04
                                    1- 1792     	BANKSEL	_ledTime
     0054 00rr                      1- 1793     	MOVAR	_ledTime
                                    1- 1794     	.line	512, "main.c"; 	count200ms = 0;
                                    1- 1795     	BANKSEL	_count200ms
     0055 02rr                      1- 1796     	CLRR	_count200ms
                                    1- 1797     	.line	513, "main.c"; 	workStartFlag = 1;
     0056 2101                      1- 1798     	MOVIA	0x01
                                    1- 1799     	BANKSEL	_workStartFlag
     0057 00rr                      1- 1800     	MOVAR	_workStartFlag
                                    1- 1801     	.line	514, "main.c"; 	maxDuty = 37;
     0058 2125                      1- 1802     	MOVIA	0x25
                                    1- 1803     	BANKSEL	_maxDuty
     0059 00rr                      1- 1804     	MOVAR	_maxDuty
                                    1- 1805     	.line	515, "main.c"; 	workStep = 1;
     005A 2101                      1- 1806     	MOVIA	0x01
                                    1- 1807     	BANKSEL	_workStep
     005B 00rr                      1- 1808     	MOVAR	_workStep
                                    1- 1809     	.line	516, "main.c"; 	ledStep = 0;
                                    1- 1810     	BANKSEL	_ledStep
     005C 02rr                      1- 1811     	CLRR	_ledStep
                                    1- 1812     	.line	517, "main.c"; 	count500ms = 0;
                                    1- 1813     	BANKSEL	_count500ms
     005D 02rr                      1- 1814     	CLRR	_count500ms
                                    1- 1815     	.line	518, "main.c"; 	duty = 1;
     005E 2101                      1- 1816     	MOVIA	0x01
                                    1- 1817     	BANKSEL	_duty
     005F 00rr                      1- 1818     	MOVAR	_duty
     0060 02rr                      1- 1819     	CLRR	(_duty + 1)
                                    1- 1820     	.line	519, "main.c"; 	fgCount = 0;
                                    1- 1821     	BANKSEL	_fgCount
     0061 02rr                      1- 1822     	CLRR	_fgCount
     0062 02rr                      1- 1823     	CLRR	(_fgCount + 1)
     0063                           1- 1824     _00425_DS_:
                                    1- 1825     	.line	523, "main.c"; 	}
                                    1- 1826     	RETURN	
     0063 0010                      3-   26 m1      ret
                                    1- 1827     ; exit point of _keyCtr
                                    1- 1829     ;***
                                    1- 1830     ;  pBlock Stats: dbName = C
                                    1- 1831     ;***
                                    1- 1832     ;functions called:
                                    1- 1833     ;   _pwmInit
                                    1- 1834     ;   _pwmInit
                                    1- 1835     ;   _pwmInit
                                    1- 1836     ;   _pwmInit
                                    1- 1837     ;; Starting pCode block
                                    1- 1838     .segment "code"; module=main, function=_ledCtr
     0000                           1- 1840     _ledCtr:
                                    1- 1841     ; 0 exit points
                                    1- 1842     	.line	432, "main.c"; 	if(ledTime > 0)
                                    1- 1843     	BANKSEL	_ledTime
     0000 01rr                      1- 1844     	MOVR	_ledTime,W
     0001 0903                      1- 1845     	BTRSS	STATUS,2
                                    1- 1846     	.line	433, "main.c"; 	--ledTime;
     0002 06rr                      1- 1847     	DECR	_ledTime,F
                                    1- 1848     	.line	434, "main.c"; 	if(workStartFlag == 1)
                                    1- 1849     	BANKSEL	_workStartFlag
     0003 01rr                      1- 1850     	MOVR	_workStartFlag,W
     0004 2401                      1- 1851     	XORIA	0x01
     0005 0903                      1- 1852     	BTRSS	STATUS,2
     0006 3rrr                      1- 1853     	LGOTO	_00390_DS_
                                    1- 1854     	.line	436, "main.c"; 	if(++ledStep > 4)
                                    1- 1855     	BANKSEL	_ledStep
     0007 05rr                      1- 1856     	INCR	_ledStep,F
                                    1- 1857     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1858     ;;unsigned compare: left >= lit (0x5=5), size=1
     0008 2105                      1- 1859     	MOVIA	0x05
     0009 04rr                      1- 1860     	SUBAR	_ledStep,W
     000A 0803                      1- 1861     	BTRSS	STATUS,0
     000B 3rrr                      1- 1862     	LGOTO	_00392_DS_
                                    1- 1863     	.line	438, "main.c"; 	ledStep = workStep;
                                    1- 1864     	BANKSEL	_workStep
     000C 01rr                      1- 1865     	MOVR	_workStep,W
                                    1- 1866     	BANKSEL	_ledStep
     000D 00rr                      1- 1867     	MOVAR	_ledStep
                                    1- 1868     	.line	439, "main.c"; 	workStartFlag = 3;
     000E 2103                      1- 1869     	MOVIA	0x03
                                    1- 1870     	BANKSEL	_workStartFlag
     000F 00rr                      1- 1871     	MOVAR	_workStartFlag
                                    1- 1872     	.line	440, "main.c"; 	pwmInit();
     0010 2rrr                      1- 1873     	LCALL	_pwmInit
     0011 3rrr                      1- 1874     	LGOTO	_00392_DS_
     0012                           1- 1875     _00390_DS_:
                                    1- 1876     	.line	444, "main.c"; 	else if(workStartFlag == 2)
                                    1- 1877     	BANKSEL	_workStartFlag
     0012 01rr                      1- 1878     	MOVR	_workStartFlag,W
     0013 2402                      1- 1879     	XORIA	0x02
     0014 0903                      1- 1880     	BTRSS	STATUS,2
     0015 3rrr                      1- 1881     	LGOTO	_00387_DS_
                                    1- 1882     	.line	446, "main.c"; 	if(ledStep > 0)
                                    1- 1883     	BANKSEL	_ledStep
     0016 01rr                      1- 1884     	MOVR	_ledStep,W
     0017 0D03                      1- 1885     	BTRSC	STATUS,2
     0018 3rrr                      1- 1886     	LGOTO	_00392_DS_
                                    1- 1887     	.line	448, "main.c"; 	ledStep--;
     0019 17rr                      1- 1888     	DECRSZ	_ledStep,F
                                    1- 1889     	.line	449, "main.c"; 	if(ledStep == 0)
     001A 3rrr                      1- 1890     	LGOTO	_00392_DS_
                                    1- 1891     	.line	450, "main.c"; 	workStartFlag = 0;
                                    1- 1892     	BANKSEL	_workStartFlag
     001B 02rr                      1- 1893     	CLRR	_workStartFlag
     001C 3rrr                      1- 1894     	LGOTO	_00392_DS_
     001D                           1- 1895     _00387_DS_:
                                    1- 1896     	.line	455, "main.c"; 	ledStep = workStep;
                                    1- 1897     	BANKSEL	_workStep
     001D 01rr                      1- 1898     	MOVR	_workStep,W
                                    1- 1899     	BANKSEL	_ledStep
     001E 00rr                      1- 1900     	MOVAR	_ledStep
                                    1- 1901     	.line	456, "main.c"; 	if(workStep && ledTime == 0)
                                    1- 1902     	BANKSEL	_workStep
     001F 01rr                      1- 1903     	MOVR	_workStep,W
     0020 0D03                      1- 1904     	BTRSC	STATUS,2
     0021 3rrr                      1- 1905     	LGOTO	_00392_DS_
                                    1- 1906     	BANKSEL	_ledTime
     0022 01rr                      1- 1907     	MOVR	_ledTime,W
     0023 0D03                      1- 1908     	BTRSC	STATUS,2
                                    1- 1909     	.line	458, "main.c"; 	pwmInit();
     0024 2rrr                      1- 1910     	LCALL	_pwmInit
     0025                           1- 1911     _00392_DS_:
                                    1- 1912     	.line	463, "main.c"; 	}
                                    1- 1913     	RETURN	
     0025 0010                      3-   26 m1      ret
                                    1- 1915     ;***
                                    1- 1916     ;  pBlock Stats: dbName = C
                                    1- 1917     ;***
                                    1- 1918     ;has an exit
                                    1- 1919     ;functions called:
                                    1- 1920     ;   _LEDLON
                                    1- 1921     ;   _LEDHON
                                    1- 1922     ;   _LEDHOFF
                                    1- 1923     ;   _LEDLOFF
                                    1- 1924     ;   _LEDHON
                                    1- 1925     ;   _LEDHOFF
                                    1- 1926     ;   _LEDLOFF
                                    1- 1927     ;   _LEDHON
                                    1- 1928     ;   _LEDLOFF
                                    1- 1929     ;   _LEDHOFF
                                    1- 1930     ;   _LEDLON
                                    1- 1931     ;   _LEDHON
                                    1- 1932     ;   _LEDHOFF
                                    1- 1933     ;   _LEDLOFF
                                    1- 1934     ;   _LEDHON
                                    1- 1935     ;   _LEDHOFF
                                    1- 1936     ;   _LEDLOFF
                                    1- 1937     ;   _LEDHON
                                    1- 1938     ;   _LEDLOFF
                                    1- 1939     ;   _LEDHOFF
                                    1- 1940     ;; Starting pCode block
                                    1- 1941     .segment "code"; module=main, function=_LedCtr2
     0000                           1- 1943     _LedCtr2:
                                    1- 1944     ; 2 exit points
                                    1- 1945     	.line	383, "main.c"; 	if(++startStep > 6)
                                    1- 1946     	BANKSEL	_startStep
     0000 05rr                      1- 1947     	INCR	_startStep,F
                                    1- 1948     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1949     ;;unsigned compare: left >= lit (0x7=7), size=1
     0001 2107                      1- 1950     	MOVIA	0x07
     0002 04rr                      1- 1951     	SUBAR	_startStep,W
     0003 0803                      1- 1952     	BTRSS	STATUS,0
     0004 3rrr                      1- 1953     	LGOTO	_00344_DS_
                                    1- 1954     	.line	385, "main.c"; 	workStartFlag = 0;
                                    1- 1955     	BANKSEL	_workStartFlag
     0005 02rr                      1- 1956     	CLRR	_workStartFlag
                                    1- 1957     	.line	386, "main.c"; 	startStep = 0;
                                    1- 1958     	BANKSEL	_startStep
     0006 02rr                      1- 1959     	CLRR	_startStep
                                    1- 1960     	.line	387, "main.c"; 	ledStep = workStep;
                                    1- 1961     	BANKSEL	_workStep
     0007 01rr                      1- 1962     	MOVR	_workStep,W
                                    1- 1963     	BANKSEL	_ledStep
     0008 00rr                      1- 1964     	MOVAR	_ledStep
                                    1- 1965     	.line	388, "main.c"; 	redLedFlag = 0;
                                    1- 1966     	BANKSEL	_Status
     0009 1Drr                      1- 1967     	BCR	_Status,2
     000A                           1- 1968     _00344_DS_:
                                    1- 1969     	.line	390, "main.c"; 	if(redLedFlag && startStep > 2)
                                    1- 1970     	BANKSEL	_Status
     000A 09rr                      1- 1971     	BTRSS	_Status,2
     000B 3rrr                      1- 1972     	LGOTO	_00346_DS_
                                    1- 1973     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1974     ;;unsigned compare: left >= lit (0x3=3), size=1
     000C 2103                      1- 1975     	MOVIA	0x03
                                    1- 1976     	BANKSEL	_startStep
     000D 04rr                      1- 1977     	SUBAR	_startStep,W
     000E 0C03                      1- 1978     	BTRSC	STATUS,0
                                    1- 1979     	.line	391, "main.c"; 	return;
     000F 3rrr                      1- 1980     	LGOTO	_00370_DS_
     0010                           1- 1981     _00346_DS_:
                                    1- 1982     	.line	393, "main.c"; 	if(startStep == 1)
                                    1- 1983     	BANKSEL	_startStep
     0010 01rr                      1- 1984     	MOVR	_startStep,W
     0011 2401                      1- 1985     	XORIA	0x01
     0012 0903                      1- 1986     	BTRSS	STATUS,2
     0013 3rrr                      1- 1987     	LGOTO	_00368_DS_
                                    1- 1988     	.line	395, "main.c"; 	if(pwStep == 1)
                                    1- 1989     	BANKSEL	_pwStep
     0014 01rr                      1- 1990     	MOVR	_pwStep,W
     0015 2401                      1- 1991     	XORIA	0x01
     0016 0903                      1- 1992     	BTRSS	STATUS,2
     0017 3rrr                      1- 1993     	LGOTO	_00351_DS_
                                    1- 1994     	.line	397, "main.c"; 	LEDLON();
     0018 2rrr                      1- 1995     	LCALL	_LEDLON
                                    1- 1996     	.line	398, "main.c"; 	redLedFlag = 1;
                                    1- 1997     	BANKSEL	_Status
     0019 19rr                      1- 1998     	BSR	_Status,2
     001A 3rrr                      1- 1999     	LGOTO	_00370_DS_
                                    1- 2000     ;;unsigned compare: left < lit (0x2=2), size=1
     001B                           1- 2001     _00351_DS_:
                                    1- 2002     	.line	400, "main.c"; 	else if(pwStep >= 2)
     001B 2102                      1- 2003     	MOVIA	0x02
                                    1- 2004     	BANKSEL	_pwStep
     001C 04rr                      1- 2005     	SUBAR	_pwStep,W
     001D 0803                      1- 2006     	BTRSS	STATUS,0
     001E 3rrr                      1- 2007     	LGOTO	_00370_DS_
                                    1- 2008     	.line	402, "main.c"; 	LEDHON();
     001F 2rrr                      1- 2009     	LCALL	_LEDHON
     0020 3rrr                      1- 2010     	LGOTO	_00370_DS_
     0021                           1- 2011     _00368_DS_:
                                    1- 2012     	.line	405, "main.c"; 	else if(startStep == 2)
                                    1- 2013     	BANKSEL	_startStep
     0021 01rr                      1- 2014     	MOVR	_startStep,W
     0022 2402                      1- 2015     	XORIA	0x02
     0023 0903                      1- 2016     	BTRSS	STATUS,2
     0024 3rrr                      1- 2017     	LGOTO	_00365_DS_
                                    1- 2018     	.line	407, "main.c"; 	LEDHOFF();
     0025 2rrr                      1- 2019     	LCALL	_LEDHOFF
                                    1- 2020     	.line	408, "main.c"; 	LEDLOFF();
     0026 2rrr                      1- 2021     	LCALL	_LEDLOFF
     0027 3rrr                      1- 2022     	LGOTO	_00370_DS_
     0028                           1- 2023     _00365_DS_:
                                    1- 2024     	.line	410, "main.c"; 	else if(startStep == 3 && pwStep >= 3)
                                    1- 2025     	BANKSEL	_startStep
     0028 01rr                      1- 2026     	MOVR	_startStep,W
     0029 2403                      1- 2027     	XORIA	0x03
     002A 0903                      1- 2028     	BTRSS	STATUS,2
     002B 3rrr                      1- 2029     	LGOTO	_00361_DS_
                                    1- 2030     ;;unsigned compare: left < lit (0x3=3), size=1
     002C 2103                      1- 2031     	MOVIA	0x03
                                    1- 2032     	BANKSEL	_pwStep
     002D 04rr                      1- 2033     	SUBAR	_pwStep,W
     002E 0803                      1- 2034     	BTRSS	STATUS,0
     002F 3rrr                      1- 2035     	LGOTO	_00361_DS_
                                    1- 2036     	.line	412, "main.c"; 	LEDHON();
     0030 2rrr                      1- 2037     	LCALL	_LEDHON
     0031 3rrr                      1- 2038     	LGOTO	_00370_DS_
     0032                           1- 2039     _00361_DS_:
                                    1- 2040     	.line	414, "main.c"; 	else if(startStep == 4)
                                    1- 2041     	BANKSEL	_startStep
     0032 01rr                      1- 2042     	MOVR	_startStep,W
     0033 2404                      1- 2043     	XORIA	0x04
     0034 0903                      1- 2044     	BTRSS	STATUS,2
     0035 3rrr                      1- 2045     	LGOTO	_00358_DS_
                                    1- 2046     	.line	416, "main.c"; 	LEDHOFF();
     0036 2rrr                      1- 2047     	LCALL	_LEDHOFF
                                    1- 2048     	.line	417, "main.c"; 	LEDLOFF();
     0037 2rrr                      1- 2049     	LCALL	_LEDLOFF
     0038 3rrr                      1- 2050     	LGOTO	_00370_DS_
     0039                           1- 2051     _00358_DS_:
                                    1- 2052     	.line	419, "main.c"; 	else if(startStep == 5 && pwStep >= 4)
                                    1- 2053     	BANKSEL	_startStep
     0039 01rr                      1- 2054     	MOVR	_startStep,W
     003A 2405                      1- 2055     	XORIA	0x05
     003B 0903                      1- 2056     	BTRSS	STATUS,2
     003C 3rrr                      1- 2057     	LGOTO	_00354_DS_
                                    1- 2058     ;;unsigned compare: left < lit (0x4=4), size=1
     003D 2104                      1- 2059     	MOVIA	0x04
                                    1- 2060     	BANKSEL	_pwStep
     003E 04rr                      1- 2061     	SUBAR	_pwStep,W
     003F 0803                      1- 2062     	BTRSS	STATUS,0
     0040 3rrr                      1- 2063     	LGOTO	_00354_DS_
                                    1- 2064     	.line	421, "main.c"; 	LEDHON();
     0041 2rrr                      1- 2065     	LCALL	_LEDHON
     0042 3rrr                      1- 2066     	LGOTO	_00370_DS_
     0043                           1- 2067     _00354_DS_:
                                    1- 2068     	.line	425, "main.c"; 	LEDLOFF();
     0043 2rrr                      1- 2069     	LCALL	_LEDLOFF
                                    1- 2070     	.line	426, "main.c"; 	LEDHOFF();
     0044 2rrr                      1- 2071     	LCALL	_LEDHOFF
     0045                           1- 2072     _00370_DS_:
                                    1- 2073     	.line	428, "main.c"; 	}
                                    1- 2074     	RETURN	
     0045 0010                      3-   26 m1      ret
                                    1- 2075     ; exit point of _LedCtr2
                                    1- 2077     ;***
                                    1- 2078     ;  pBlock Stats: dbName = C
                                    1- 2079     ;***
                                    1- 2080     ;has an exit
                                    1- 2081     ;1 compiler assigned register :
                                    1- 2082     ;   r0x1030
                                    1- 2083     ;; Starting pCode block
                                    1- 2084     .segment "code"; module=main, function=_workCtr
                                    1- 2086     ;local variable name mapping:
     0000                           1- 2088     _workCtr:
                                    1- 2089     ; 2 exit points
                                    1- 2090     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2091     ;;unsigned compare: left >= lit (0x47=71), size=2
                                    1- 2092     	.line	351, "main.c"; 	if(fgPRD > 70)
     0000 2100                      1- 2093     	MOVIA	0x00
                                    1- 2094     	BANKSEL	_fgPRD
     0001 04rr                      1- 2095     	SUBAR	(_fgPRD + 1),W
     0002 0903                      1- 2096     	BTRSS	STATUS,2
     0003 3rrr                      1- 2097     	LGOTO	_00338_DS_
     0004 2147                      1- 2098     	MOVIA	0x47
     0005 04rr                      1- 2099     	SUBAR	_fgPRD,W
     0006                           1- 2100     _00338_DS_:
     0006 0803                      1- 2101     	BTRSS	STATUS,0
     0007 3rrr                      1- 2102     	LGOTO	_00319_DS_
                                    1- 2103     	.line	354, "main.c"; 	u8t minDuty = 38;
     0008 2126                      1- 2104     	MOVIA	0x26
                                    1- 2105     	BANKSEL	r0x1030
     0009 00rr                      1- 2106     	MOVAR	r0x1030
                                    1- 2107     	.line	355, "main.c"; 	if(workStep == 1)
                                    1- 2108     	BANKSEL	_workStep
     000A 01rr                      1- 2109     	MOVR	_workStep,W
     000B 2401                      1- 2110     	XORIA	0x01
     000C 0903                      1- 2111     	BTRSS	STATUS,2
     000D 3rrr                      1- 2112     	LGOTO	_00316_DS_
                                    1- 2113     	.line	356, "main.c"; 	minDuty = 38;
     000E 2126                      1- 2114     	MOVIA	0x26
                                    1- 2115     	BANKSEL	r0x1030
     000F 00rr                      1- 2116     	MOVAR	r0x1030
     0010 3rrr                      1- 2117     	LGOTO	_00317_DS_
     0011                           1- 2118     _00316_DS_:
                                    1- 2119     	.line	357, "main.c"; 	else if(workStep == 2)
                                    1- 2120     	BANKSEL	_workStep
     0011 01rr                      1- 2121     	MOVR	_workStep,W
     0012 2402                      1- 2122     	XORIA	0x02
     0013 0903                      1- 2123     	BTRSS	STATUS,2
     0014 3rrr                      1- 2124     	LGOTO	_00313_DS_
                                    1- 2125     	.line	358, "main.c"; 	minDuty = 15;
     0015 210F                      1- 2126     	MOVIA	0x0f
                                    1- 2127     	BANKSEL	r0x1030
     0016 00rr                      1- 2128     	MOVAR	r0x1030
     0017 3rrr                      1- 2129     	LGOTO	_00317_DS_
     0018                           1- 2130     _00313_DS_:
                                    1- 2131     	.line	359, "main.c"; 	else if(workStep == 3)
                                    1- 2132     	BANKSEL	_workStep
     0018 01rr                      1- 2133     	MOVR	_workStep,W
     0019 2403                      1- 2134     	XORIA	0x03
     001A 0903                      1- 2135     	BTRSS	STATUS,2
     001B 3rrr                      1- 2136     	LGOTO	_00310_DS_
                                    1- 2137     	.line	360, "main.c"; 	minDuty = 11;
     001C 210B                      1- 2138     	MOVIA	0x0b
                                    1- 2139     	BANKSEL	r0x1030
     001D 00rr                      1- 2140     	MOVAR	r0x1030
     001E 3rrr                      1- 2141     	LGOTO	_00317_DS_
     001F                           1- 2142     _00310_DS_:
                                    1- 2143     	.line	361, "main.c"; 	else if(workStep == 4)
                                    1- 2144     	BANKSEL	_workStep
     001F 01rr                      1- 2145     	MOVR	_workStep,W
     0020 2404                      1- 2146     	XORIA	0x04
     0021 0903                      1- 2147     	BTRSS	STATUS,2
     0022 3rrr                      1- 2148     	LGOTO	_00317_DS_
                                    1- 2149     	.line	362, "main.c"; 	minDuty = 3;
     0023 2103                      1- 2150     	MOVIA	0x03
                                    1- 2151     	BANKSEL	r0x1030
     0024 00rr                      1- 2152     	MOVAR	r0x1030
     0025                           1- 2153     _00317_DS_:
                                    1- 2154     	.line	363, "main.c"; 	PWM2DUTY = minDuty;
                                    1- 2155     	BANKSEL	r0x1030
     0025 01rr                      1- 2156     	MOVR	r0x1030,W
     0026 00rr                      1- 2157     	SFUN	_PWM2DUTY
     0027 3rrr                      1- 2158     	LGOTO	_00321_DS_
     0028                           1- 2159     _00319_DS_:
                                    1- 2160     	.line	376, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2161     	BANKSEL	_maxDuty
     0028 01rr                      1- 2162     	MOVR	_maxDuty,W
     0029 00rr                      1- 2163     	SFUN	_PWM2DUTY
     002A                           1- 2164     _00321_DS_:
                                    1- 2165     	.line	378, "main.c"; 	}
                                    1- 2166     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1- 2167     ; exit point of _workCtr
                                    1- 2169     ;***
                                    1- 2170     ;  pBlock Stats: dbName = C
                                    1- 2171     ;***
                                    1- 2172     ;has an exit
                                    1- 2173     ;; Starting pCode block
                                    1- 2174     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2176     _pwmStop:
                                    1- 2177     ; 2 exit points
                                    1- 2178     	.line	345, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2179     	CLRA	
     0001 00rr                      1- 2180     	SFUN	_T2CR1
                                    1- 2181     	.line	346, "main.c"; 	}
                                    1- 2182     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2183     ; exit point of _pwmStop
                                    1- 2185     ;***
                                    1- 2186     ;  pBlock Stats: dbName = C
                                    1- 2187     ;***
                                    1- 2188     ;has an exit
                                    1- 2189     ;1 compiler assigned register :
                                    1- 2190     ;   r0x102E
                                    1- 2191     ;; Starting pCode block
                                    1- 2192     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2194     _pwmInit:
                                    1- 2195     ; 2 exit points
                                    1- 2196     	.line	333, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2197     	SFUNR	_T2CR1
                                    1- 2198     	BANKSEL	r0x102E
     0001 00rr                      1- 2199     	MOVAR	r0x102E
     0002 0Frr                      1- 2200     	BTRSC	r0x102E,7
                                    1- 2201     	.line	334, "main.c"; 	return;
     0003 3rrr                      1- 2202     	LGOTO	_00298_DS_
                                    1- 2203     	.line	335, "main.c"; 	TMRH = 0x00;
     0004 02rr                      1- 2204     	CLRR	_TMRH
                                    1- 2205     	.line	336, "main.c"; 	TMR2 = 128;							//频率为110K
     0005 2180                      1- 2206     	MOVIA	0x80
     0006 00rr                      1- 2207     	SFUN	_TMR2
                                    1- 2208     	.line	339, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0007 0200                      1- 2209     	CLRA	
     0008 00rr                      1- 2210     	SFUN	_T2CR2
                                    1- 2211     	.line	340, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     0009 2183                      1- 2212     	MOVIA	0x83
     000A 00rr                      1- 2213     	SFUN	_T2CR1
     000B                           1- 2214     _00298_DS_:
                                    1- 2215     	.line	341, "main.c"; 	}
                                    1- 2216     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 2217     ; exit point of _pwmInit
                                    1- 2219     ;***
                                    1- 2220     ;  pBlock Stats: dbName = C
                                    1- 2221     ;***
                                    1- 2222     ;has an exit
                                    1- 2223     ;functions called:
                                    1- 2224     ;   _delay
                                    1- 2225     ;   _LedInput
                                    1- 2226     ;   _delay
                                    1- 2227     ;   _LedInput
                                    1- 2228     ;1 compiler assigned register :
                                    1- 2229     ;   r0x1031
                                    1- 2230     ;; Starting pCode block
                                    1- 2231     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2233     _LED4ON:
                                    1- 2234     ; 2 exit points
                                    1- 2235     	.line	324, "main.c"; 	IOSTB &= 0xF7;
     0000 001r                      1- 2236     	IOSTR	_IOSTB
                                    1- 2237     	BANKSEL	r0x1031
     0001 00rr                      1- 2238     	MOVAR	r0x1031
     0002 1Drr                      1- 2239     	BCR	r0x1031,3
     0003 01rr                      1- 2240     	MOVR	r0x1031,W
     0004 000r                      1- 2241     	IOST	_IOSTB
                                    1- 2242     	.line	325, "main.c"; 	PORTB |= 0x08;
     0005 19rr                      1- 2243     	BSR	_PORTB,3
                                    1- 2244     	.line	326, "main.c"; 	delay(100);
     0006 2164                      1- 2245     	MOVIA	0x64
     0007 2rrr                      1- 2246     	LCALL	_delay
                                    1- 2247     	.line	327, "main.c"; 	LedInput();
     0008 2rrr                      1- 2248     	LCALL	_LedInput
                                    1- 2249     	.line	328, "main.c"; 	}
                                    1- 2250     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1- 2251     ; exit point of _LED4ON
                                    1- 2253     ;***
                                    1- 2254     ;  pBlock Stats: dbName = C
                                    1- 2255     ;***
                                    1- 2256     ;has an exit
                                    1- 2257     ;functions called:
                                    1- 2258     ;   _delay
                                    1- 2259     ;   _LedInput
                                    1- 2260     ;   _delay
                                    1- 2261     ;   _LedInput
                                    1- 2262     ;1 compiler assigned register :
                                    1- 2263     ;   r0x1032
                                    1- 2264     ;; Starting pCode block
                                    1- 2265     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2267     _LED3ON:
                                    1- 2268     ; 2 exit points
                                    1- 2269     	.line	316, "main.c"; 	IOSTA &= 0X7F;
     0000 001r                      1- 2270     	IOSTR	_IOSTA
                                    1- 2271     	BANKSEL	r0x1032
     0001 00rr                      1- 2272     	MOVAR	r0x1032
     0002 1Frr                      1- 2273     	BCR	r0x1032,7
     0003 01rr                      1- 2274     	MOVR	r0x1032,W
     0004 000r                      1- 2275     	IOST	_IOSTA
                                    1- 2276     	.line	317, "main.c"; 	PORTA |= 0X80;
                                    1- 2277     	BANKSEL	_PORTA
     0005 1Brr                      1- 2278     	BSR	_PORTA,7
                                    1- 2279     	.line	318, "main.c"; 	delay(100);
     0006 2164                      1- 2280     	MOVIA	0x64
     0007 2rrr                      1- 2281     	LCALL	_delay
                                    1- 2282     	.line	319, "main.c"; 	LedInput();
     0008 2rrr                      1- 2283     	LCALL	_LedInput
                                    1- 2284     	.line	320, "main.c"; 	}
                                    1- 2285     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1- 2286     ; exit point of _LED3ON
                                    1- 2288     ;***
                                    1- 2289     ;  pBlock Stats: dbName = C
                                    1- 2290     ;***
                                    1- 2291     ;has an exit
                                    1- 2292     ;functions called:
                                    1- 2293     ;   _delay
                                    1- 2294     ;   _LedInput
                                    1- 2295     ;   _delay
                                    1- 2296     ;   _LedInput
                                    1- 2297     ;1 compiler assigned register :
                                    1- 2298     ;   r0x1033
                                    1- 2299     ;; Starting pCode block
                                    1- 2300     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2302     _LED2ON:
                                    1- 2303     ; 2 exit points
                                    1- 2304     	.line	308, "main.c"; 	IOSTA &= 0XFD;
     0000 001r                      1- 2305     	IOSTR	_IOSTA
                                    1- 2306     	BANKSEL	r0x1033
     0001 00rr                      1- 2307     	MOVAR	r0x1033
     0002 1Crr                      1- 2308     	BCR	r0x1033,1
     0003 01rr                      1- 2309     	MOVR	r0x1033,W
     0004 000r                      1- 2310     	IOST	_IOSTA
                                    1- 2311     	.line	309, "main.c"; 	PORTA |= 0X02;
                                    1- 2312     	BANKSEL	_PORTA
     0005 18rr                      1- 2313     	BSR	_PORTA,1
                                    1- 2314     	.line	310, "main.c"; 	delay(100);
     0006 2164                      1- 2315     	MOVIA	0x64
     0007 2rrr                      1- 2316     	LCALL	_delay
                                    1- 2317     	.line	311, "main.c"; 	LedInput();
     0008 2rrr                      1- 2318     	LCALL	_LedInput
                                    1- 2319     	.line	312, "main.c"; 	}
                                    1- 2320     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1- 2321     ; exit point of _LED2ON
                                    1- 2323     ;***
                                    1- 2324     ;  pBlock Stats: dbName = C
                                    1- 2325     ;***
                                    1- 2326     ;has an exit
                                    1- 2327     ;functions called:
                                    1- 2328     ;   _delay
                                    1- 2329     ;   _LedInput
                                    1- 2330     ;   _delay
                                    1- 2331     ;   _LedInput
                                    1- 2332     ;1 compiler assigned register :
                                    1- 2333     ;   r0x1034
                                    1- 2334     ;; Starting pCode block
                                    1- 2335     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2337     _LED1ON:
                                    1- 2338     ; 2 exit points
                                    1- 2339     	.line	300, "main.c"; 	IOSTA &= 0XFE;
     0000 001r                      1- 2340     	IOSTR	_IOSTA
                                    1- 2341     	BANKSEL	r0x1034
     0001 00rr                      1- 2342     	MOVAR	r0x1034
     0002 1Crr                      1- 2343     	BCR	r0x1034,0
     0003 01rr                      1- 2344     	MOVR	r0x1034,W
     0004 000r                      1- 2345     	IOST	_IOSTA
                                    1- 2346     	.line	301, "main.c"; 	PORTA |= 0X01;
                                    1- 2347     	BANKSEL	_PORTA
     0005 18rr                      1- 2348     	BSR	_PORTA,0
                                    1- 2349     	.line	302, "main.c"; 	delay(100);
     0006 2164                      1- 2350     	MOVIA	0x64
     0007 2rrr                      1- 2351     	LCALL	_delay
                                    1- 2352     	.line	303, "main.c"; 	LedInput();
     0008 2rrr                      1- 2353     	LCALL	_LedInput
                                    1- 2354     	.line	304, "main.c"; 	}
                                    1- 2355     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1- 2356     ; exit point of _LED1ON
                                    1- 2358     ;***
                                    1- 2359     ;  pBlock Stats: dbName = C
                                    1- 2360     ;***
                                    1- 2361     ;has an exit
                                    1- 2362     ;1 compiler assigned register :
                                    1- 2363     ;   r0x102C
                                    1- 2364     ;; Starting pCode block
                                    1- 2365     .segment "code"; module=main, function=_LedInput
     0000                           1- 2367     _LedInput:
                                    1- 2368     ; 2 exit points
                                    1- 2369     	.line	292, "main.c"; 	IOSTA |= 0x83;
     0000 001r                      1- 2370     	IOSTR	_IOSTA
                                    1- 2371     	BANKSEL	r0x102C
     0001 00rr                      1- 2372     	MOVAR	r0x102C
     0002 2183                      1- 2373     	MOVIA	0x83
     0003 11rr                      1- 2374     	IORAR	r0x102C,F
     0004 01rr                      1- 2375     	MOVR	r0x102C,W
     0005 000r                      1- 2376     	IOST	_IOSTA
                                    1- 2377     	.line	293, "main.c"; 	IOSTB |= 0x08;
     0006 001r                      1- 2378     	IOSTR	_IOSTB
     0007 00rr                      1- 2379     	MOVAR	r0x102C
     0008 19rr                      1- 2380     	BSR	r0x102C,3
     0009 01rr                      1- 2381     	MOVR	r0x102C,W
     000A 000r                      1- 2382     	IOST	_IOSTB
                                    1- 2383     	.line	294, "main.c"; 	PORTA &= 0x7C;
     000B 217C                      1- 2384     	MOVIA	0x7c
                                    1- 2385     	BANKSEL	_PORTA
     000C 10rr                      1- 2386     	ANDAR	_PORTA,F
                                    1- 2387     	.line	295, "main.c"; 	PORTB &= 0xF7;
     000D 1Drr                      1- 2388     	BCR	_PORTB,3
                                    1- 2389     	.line	296, "main.c"; 	}
                                    1- 2390     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 2391     ; exit point of _LedInput
                                    1- 2393     ;***
                                    1- 2394     ;  pBlock Stats: dbName = C
                                    1- 2395     ;***
                                    1- 2396     ;has an exit
                                    1- 2397     ;functions called:
                                    1- 2398     ;   _LedInput
                                    1- 2399     ;   _LedInput
                                    1- 2400     ;   _LED4ON
                                    1- 2401     ;   _LED1ON
                                    1- 2402     ;   _LED3ON
                                    1- 2403     ;   _LED2ON
                                    1- 2404     ;   _LedInput
                                    1- 2405     ;   _LedInput
                                    1- 2406     ;   _LED4ON
                                    1- 2407     ;   _LED1ON
                                    1- 2408     ;   _LED3ON
                                    1- 2409     ;   _LED2ON
                                    1- 2410     ;; Starting pCode block
                                    1- 2411     .segment "code"; module=main, function=_ledShow
     0000                           1- 2413     _ledShow:
                                    1- 2414     ; 2 exit points
                                    1- 2415     	.line	270, "main.c"; 	LedInput();
     0000 2rrr                      1- 2416     	LCALL	_LedInput
                                    1- 2417     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2418     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2419     	.line	271, "main.c"; 	switch(ledStep)
     0001 2105                      1- 2420     	MOVIA	0x05
                                    1- 2421     	BANKSEL	_ledStep
     0002 04rr                      1- 2422     	SUBAR	_ledStep,W
     0003 0C03                      1- 2423     	BTRSC	STATUS,0
     0004 3rrr                      1- 2424     	LGOTO	_00265_DS_
     0005 21rr                      1- 2425     	MOVIA	((_00271_DS_ >> 8) & 0xff)
     0006 008A                      1- 2426     	MOVAR	PCHBUF
     0007 01rr                      1- 2427     	MOVR	_ledStep,W
     0008 25rr                      1- 2428     	ADDIA	_00271_DS_
     0009 0C03                      1- 2429     	BTRSC	STATUS,0
     000A 058A                      1- 2430     	INCR	PCHBUF,F
     000B 0082                      1- 2431     	MOVAR	PCL
     000C                           1- 2432     _00271_DS_:
     000C 3rrr                      1- 2433     	LGOTO	_00259_DS_
     000D 3rrr                      1- 2434     	LGOTO	_00263_DS_
     000E 3rrr                      1- 2435     	LGOTO	_00262_DS_
     000F 3rrr                      1- 2436     	LGOTO	_00261_DS_
     0010 3rrr                      1- 2437     	LGOTO	_00260_DS_
     0011                           1- 2438     _00259_DS_:
                                    1- 2439     	.line	274, "main.c"; 	LedInput();
     0011 2rrr                      1- 2440     	LCALL	_LedInput
                                    1- 2441     	.line	275, "main.c"; 	break;
     0012 3rrr                      1- 2442     	LGOTO	_00265_DS_
     0013                           1- 2443     _00260_DS_:
                                    1- 2444     	.line	277, "main.c"; 	LED4ON();
     0013 2rrr                      1- 2445     	LCALL	_LED4ON
     0014                           1- 2446     _00261_DS_:
                                    1- 2447     	.line	279, "main.c"; 	LED1ON();
     0014 2rrr                      1- 2448     	LCALL	_LED1ON
     0015                           1- 2449     _00262_DS_:
                                    1- 2450     	.line	281, "main.c"; 	LED3ON();
     0015 2rrr                      1- 2451     	LCALL	_LED3ON
     0016                           1- 2452     _00263_DS_:
                                    1- 2453     	.line	283, "main.c"; 	LED2ON();
     0016 2rrr                      1- 2454     	LCALL	_LED2ON
     0017                           1- 2455     _00265_DS_:
                                    1- 2456     	.line	286, "main.c"; 	}
                                    1- 2457     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 2458     ; exit point of _ledShow
                                    1- 2460     ;***
                                    1- 2461     ;  pBlock Stats: dbName = C
                                    1- 2462     ;***
                                    1- 2463     ;has an exit
                                    1- 2464     ;; Starting pCode block
                                    1- 2465     .segment "code"; module=main, function=_initSys
     0000                           1- 2467     _initSys:
                                    1- 2468     ; 2 exit points
                                    1- 2469     	.line	243, "main.c"; 	DISI();
     0000 0013                      1- 2470     	DISI
                                    1- 2471     	.line	244, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input;
     0001 2170                      1- 2472     	MOVIA	0x70
     0002 000r                      1- 2473     	IOST	_IOSTA
                                    1- 2474     	.line	245, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1- 2475     	MOVIA	0x01
     0004 000r                      1- 2476     	IOST	_IOSTB
                                    1- 2477     	.line	246, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2478     	CLRR	_PORTB
                                    1- 2479     	.line	247, "main.c"; 	PORTA = 0x00;
                                    1- 2480     	BANKSEL	_PORTA
     0006 02rr                      1- 2481     	CLRR	_PORTA
                                    1- 2482     	.line	248, "main.c"; 	APHCON = 0x9F;
     0007 219F                      1- 2483     	MOVIA	0x9f
     0008 000r                      1- 2484     	IOST	_APHCON
                                    1- 2485     	.line	249, "main.c"; 	BPHCON = 0xFF;
     0009 21FF                      1- 2486     	MOVIA	0xff
     000A 00rr                      1- 2487     	MOVAR	_BPHCON
                                    1- 2488     	.line	251, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000B 2101                      1- 2489     	MOVIA	0x01
     000C 00rr                      1- 2490     	MOVAR	_INTE
                                    1- 2491     	.line	253, "main.c"; 	PCON1 = C_TMR0_Dis;
     000D 0200                      1- 2492     	CLRA	
     000E 000r                      1- 2493     	IOST	_PCON1
                                    1- 2494     	.line	255, "main.c"; 	TMR0 = 55;
     000F 2137                      1- 2495     	MOVIA	0x37
     0010 00rr                      1- 2496     	MOVAR	_TMR0
                                    1- 2497     	.line	256, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0011 0200                      1- 2498     	CLRA	
     0012 0003                      1- 2499     	T0MD	
                                    1- 2500     	.line	258, "main.c"; 	PCON1 = C_TMR0_En;
     0013 2101                      1- 2501     	MOVIA	0x01
     0014 000r                      1- 2502     	IOST	_PCON1
                                    1- 2503     	.line	261, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0015 2198                      1- 2504     	MOVIA	0x98
     0016 00rr                      1- 2505     	MOVAR	_PCON
                                    1- 2506     	.line	264, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 2507     	MOVIA	0x01
     0018 000r                      1- 2508     	IOST	_PCON1
                                    1- 2509     	.line	265, "main.c"; 	ENI();
     0019 0004                      1- 2510     	ENI
                                    1- 2511     	.line	266, "main.c"; 	}
                                    1- 2512     	RETURN	
     001A 0010                      3-   26 m1      ret
                                    1- 2513     ; exit point of _initSys
                                    1- 2515     ;***
                                    1- 2516     ;  pBlock Stats: dbName = C
                                    1- 2517     ;***
                                    1- 2518     ;has an exit
                                    1- 2519     ;; Starting pCode block
                                    1- 2520     .segment "code"; module=main, function=_fgCtr
     0000                           1- 2522     _fgCtr:
                                    1- 2523     ; 2 exit points
                                    1- 2524     	.line	226, "main.c"; 	if(PORTB & 0x01)
     0000 08rr                      1- 2525     	BTRSS	_PORTB,0
     0001 3rrr                      1- 2526     	LGOTO	_00248_DS_
                                    1- 2527     	.line	228, "main.c"; 	if(preFG == 0)
                                    1- 2528     	BANKSEL	_preFG
     0002 01rr                      1- 2529     	MOVR	_preFG,W
     0003 0903                      1- 2530     	BTRSS	STATUS,2
     0004 3rrr                      1- 2531     	LGOTO	_00246_DS_
                                    1- 2532     	.line	230, "main.c"; 	fgPRD = fgCount;
                                    1- 2533     	BANKSEL	_fgCount
     0005 01rr                      1- 2534     	MOVR	_fgCount,W
                                    1- 2535     	BANKSEL	_fgPRD
     0006 00rr                      1- 2536     	MOVAR	_fgPRD
                                    1- 2537     	BANKSEL	_fgCount
     0007 01rr                      1- 2538     	MOVR	(_fgCount + 1),W
                                    1- 2539     	BANKSEL	_fgPRD
     0008 00rr                      1- 2540     	MOVAR	(_fgPRD + 1)
                                    1- 2541     	.line	231, "main.c"; 	fgCount = 0;
                                    1- 2542     	BANKSEL	_fgCount
     0009 02rr                      1- 2543     	CLRR	_fgCount
     000A 02rr                      1- 2544     	CLRR	(_fgCount + 1)
     000B                           1- 2545     _00246_DS_:
                                    1- 2546     	.line	233, "main.c"; 	preFG = 1;
     000B 2101                      1- 2547     	MOVIA	0x01
                                    1- 2548     	BANKSEL	_preFG
     000C 00rr                      1- 2549     	MOVAR	_preFG
     000D 3rrr                      1- 2550     	LGOTO	_00250_DS_
     000E                           1- 2551     _00248_DS_:
                                    1- 2552     	.line	237, "main.c"; 	preFG = 0;
                                    1- 2553     	BANKSEL	_preFG
     000E 02rr                      1- 2554     	CLRR	_preFG
     000F                           1- 2555     _00250_DS_:
                                    1- 2556     	.line	239, "main.c"; 	}
                                    1- 2557     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2558     ; exit point of _fgCtr
                                    1- 2560     ;***
                                    1- 2561     ;  pBlock Stats: dbName = C
                                    1- 2562     ;***
                                    1- 2563     ;has an exit
                                    1- 2564     ;; Starting pCode block
                                    1- 2565     .segment "code"; module=main, function=_LEDLOFF
     0000                           1- 2567     _LEDLOFF:
                                    1- 2568     ; 2 exit points
                                    1- 2569     	.line	220, "main.c"; 	PORTA &= 0xF7;
                                    1- 2570     	BANKSEL	_PORTA
     0000 1Drr                      1- 2571     	BCR	_PORTA,3
                                    1- 2572     	.line	222, "main.c"; 	}
                                    1- 2573     	RETURN	
     0001 0010                      3-   26 m1      ret
                                    1- 2574     ; exit point of _LEDLOFF
                                    1- 2576     ;***
                                    1- 2577     ;  pBlock Stats: dbName = C
                                    1- 2578     ;***
                                    1- 2579     ;has an exit
                                    1- 2580     ;; Starting pCode block
                                    1- 2581     .segment "code"; module=main, function=_LEDHOFF
     0000                           1- 2583     _LEDHOFF:
                                    1- 2584     ; 2 exit points
                                    1- 2585     	.line	215, "main.c"; 	PORTA &= 0xFB;
                                    1- 2586     	BANKSEL	_PORTA
     0000 1Drr                      1- 2587     	BCR	_PORTA,2
                                    1- 2588     	.line	217, "main.c"; 	}
                                    1- 2589     	RETURN	
     0001 0010                      3-   26 m1      ret
                                    1- 2590     ; exit point of _LEDHOFF
                                    1- 2592     ;***
                                    1- 2593     ;  pBlock Stats: dbName = C
                                    1- 2594     ;***
                                    1- 2595     ;has an exit
                                    1- 2596     ;; Starting pCode block
                                    1- 2597     .segment "code"; module=main, function=_LEDLON
     0000                           1- 2599     _LEDLON:
                                    1- 2600     ; 2 exit points
                                    1- 2601     	.line	210, "main.c"; 	PORTA |= 0x08;
                                    1- 2602     	BANKSEL	_PORTA
     0000 19rr                      1- 2603     	BSR	_PORTA,3
                                    1- 2604     	.line	212, "main.c"; 	}
                                    1- 2605     	RETURN	
     0001 0010                      3-   26 m1      ret
                                    1- 2606     ; exit point of _LEDLON
                                    1- 2608     ;***
                                    1- 2609     ;  pBlock Stats: dbName = C
                                    1- 2610     ;***
                                    1- 2611     ;has an exit
                                    1- 2612     ;; Starting pCode block
                                    1- 2613     .segment "code"; module=main, function=_LEDHON
     0000                           1- 2615     _LEDHON:
                                    1- 2616     ; 2 exit points
                                    1- 2617     	.line	205, "main.c"; 	PORTA |= 0x04;
                                    1- 2618     	BANKSEL	_PORTA
     0000 19rr                      1- 2619     	BSR	_PORTA,2
                                    1- 2620     	.line	207, "main.c"; 	}
                                    1- 2621     	RETURN	
     0001 0010                      3-   26 m1      ret
                                    1- 2622     ; exit point of _LEDHON
                                    1- 2625     ;	code size estimation:
                                    1- 2626     ;	  970+  230 =  1200 instructions ( 2860 byte)
                                    1- 2628     	end
                                    1- 2628     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810613
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001F
_00002_DS_              Label    0000001B
_00003_DS_              Label    000000D3
_00106_DS_              Label    0000001E
_00112_DS_              Label    00000035
_00119_DS_              Label    00000037
_00121_DS_              Label    0000003B
_00131_DS_              Label    0000000F
_00134_DS_              Label    0000001F
_00139_DS_              Label    00000021
_00145_DS_              Label    0000003B
_00150_DS_              Label    00000044
_00152_DS_              Label    00000064
_00155_DS_              Label    00000054
_00159_DS_              Label    00000002
_00219_DS_              Label    00000038
_00220_DS_              Label    00000041
_00221_DS_              Label    0000004A
_00222_DS_              Label    00000052
_00223_DS_              Label    0000005A
_00224_DS_              Label    0000006D
_00246_DS_              Label    0000000B
_00248_DS_              Label    0000000E
_00250_DS_              Label    0000000F
_00259_DS_              Label    00000011
_00260_DS_              Label    00000013
_00261_DS_              Label    00000014
_00262_DS_              Label    00000015
_00263_DS_              Label    00000016
_00265_DS_              Label    00000017
_00271_DS_              Label    0000000C
_00298_DS_              Label    0000000B
_00310_DS_              Label    0000001F
_00313_DS_              Label    00000018
_00316_DS_              Label    00000011
_00317_DS_              Label    00000025
_00319_DS_              Label    00000028
_00321_DS_              Label    0000002A
_00338_DS_              Label    00000006
_00344_DS_              Label    0000000A
_00346_DS_              Label    00000010
_00351_DS_              Label    0000001B
_00354_DS_              Label    00000043
_00358_DS_              Label    00000039
_00361_DS_              Label    00000032
_00365_DS_              Label    00000028
_00368_DS_              Label    00000021
_00370_DS_              Label    00000045
_00387_DS_              Label    0000001D
_00390_DS_              Label    00000012
_00392_DS_              Label    00000025
_00398_DS_              Label    00000008
_00399_DS_              Label    00000009
_00404_DS_              Label    00000022
_00408_DS_              Label    0000003D
_00411_DS_              Label    00000036
_00414_DS_              Label    0000002F
_00415_DS_              Label    00000043
_00417_DS_              Label    00000050
_00422_DS_              Label    00000047
_00425_DS_              Label    00000063
_00445_DS_              Label    00000018
_00446_DS_              Label    0000001F
_00448_DS_              Label    00000010
_00449_DS_              Label    00000020
_00450_DS_              Label    00000021
_00456_DS_              Label    00000016
_00458_DS_              Label    00000010
_00463_DS_              Label    0000001A
_00465_DS_              Label    00000022
_00472_DS_              Label    00000002
_00474_DS_              Label    00000009
_00486_DS_              Label    00000031
_00487_DS_              Label    0000003D
_00491_DS_              Label    00000065
_00492_DS_              Label    00000067
_00505_DS_              Label    000000BB
_00510_DS_              Label    000000AF
_00513_DS_              Label    0000009B
_00516_DS_              Label    0000008E
_00519_DS_              Label    00000081
_00522_DS_              Label    0000004E
_00580_DS_              Label    0000002A
_00581_DS_              Label    00000037
_00582_DS_              Label    00000049
_00583_DS_              Label    00000054
_00584_DS_              Label    00000060
_00585_DS_              Label    0000006D
_00586_DS_              Label    00000078
_00587_DS_              Label    00000087
_00588_DS_              Label    00000094
_00589_DS_              Label    000000A1
_00592_DS_              Label    000000C9
_00599_DS_              Label    0000000A
_00601_DS_              Label    00000021
_00606_DS_              Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBatAD             Label    00000000
_chrgCtr                Label    00000000
_chrgTime               Label    00000000
_count1s                Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_count900s              Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_F_AIN5_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_fgCount                Label    00000000
_fgCtr                  Label    00000000
_fgPRD                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IO_Init                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_LEDHOFF                Label    00000000
_LEDHON                 Label    00000000
_LedInput               Label    00000000
_LEDLOFF                Label    00000000
_LEDLON                 Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_ledTime                Label    00000000
_lowBatTime             Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_powerOff               Label    00000000
_preFG                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN5_DATA            Label    00000000
_R_AIN5_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepTime              Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStartFlag          Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    00000049
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1027                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b061d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B061D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000005FF
DATA ROM     = 0x00000000 - 0x000005FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
