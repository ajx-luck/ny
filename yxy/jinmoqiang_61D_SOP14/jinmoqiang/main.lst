
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B061D,c=on
                                    1-    9     	#include "ny8b061d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_ADMDbits
                                    1-   24     	extern	_ADRbits
                                    1-   25     	extern	_ADVREFHbits
                                    1-   26     	extern	_ADCRbits
                                    1-   27     	extern	_AWUCONbits
                                    1-   28     	extern	_PACONbits
                                    1-   29     	extern	_INTEDGbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_RFC
                                    1-   56     	extern	_TM3RH
                                    1-   57     	extern	_INTE2
                                    1-   58     	extern	_TMR1
                                    1-   59     	extern	_T1CR1
                                    1-   60     	extern	_T1CR2
                                    1-   61     	extern	_PWM1DUTY
                                    1-   62     	extern	_PS1CV
                                    1-   63     	extern	_BZ1CR
                                    1-   64     	extern	_IRCR
                                    1-   65     	extern	_TBHP
                                    1-   66     	extern	_TBHD
                                    1-   67     	extern	_TMR2
                                    1-   68     	extern	_T2CR1
                                    1-   69     	extern	_T2CR2
                                    1-   70     	extern	_PWM2DUTY
                                    1-   71     	extern	_PS2CV
                                    1-   72     	extern	_BZ2CR
                                    1-   73     	extern	_OSCCR
                                    1-   74     	extern	_TMR3
                                    1-   75     	extern	_T3CR1
                                    1-   76     	extern	_T3CR2
                                    1-   77     	extern	_PWM3DUTY
                                    1-   78     	extern	_PS3CV
                                    1-   79     	extern	_BZ3CR
                                    1-   80     	extern	_IOSTA
                                    1-   81     	extern	_IOSTB
                                    1-   82     	extern	_APHCON
                                    1-   83     	extern	_PS0CV
                                    1-   84     	extern	_BODCON
                                    1-   85     	extern	_PCON1
                                    1-   86     	extern	_T0MD
                                    1-   87     	extern	___sdcc_saved_fsr
                                    1-   88     	extern	___sdcc_saved_stk00
                                    1-   89     	extern	___sdcc_saved_stk01
                                    1-   90     	extern	__nyc_ny8_startup
                                    1-   91     ;--------------------------------------------------------
                                    1-   92     ; global declarations
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     	extern	_F_wait_eoc
                                    1-   95     	extern	_F_AIN5_Convert
                                    1-   96     	extern	_checkBatAD
                                    1-   97     	extern	_initAD
                                    1-   98     	extern	_delay
                                    1-   99     	extern	_chrgCtr
                                    1-  100     	extern	_keyRead
                                    1-  101     	extern	_gotoSleep
                                    1-  102     	extern	_powerOff
                                    1-  103     	extern	_keyCtr
                                    1-  104     	extern	_ledCtr
                                    1-  105     	extern	_LedCtr2
                                    1-  106     	extern	_workCtr
                                    1-  107     	extern	_pwmStop
                                    1-  108     	extern	_pwmInit
                                    1-  109     	extern	_LED4ON
                                    1-  110     	extern	_LED3ON
                                    1-  111     	extern	_LED2ON
                                    1-  112     	extern	_LED1ON
                                    1-  113     	extern	_LedInput
                                    1-  114     	extern	_ledShow
                                    1-  115     	extern	_initSys
                                    1-  116     	extern	_fgCtr
                                    1-  117     	extern	_isr
                                    1-  118     	extern	_main
                                    1-  119     	extern	_LEDHON
                                    1-  120     	extern	_LEDLON
                                    1-  121     	extern	_LEDHOFF
                                    1-  122     	extern	_LEDLOFF
                                    1-  123     	extern	_Status
                                    1-  124     	extern	_duty
                                    1-  125     	extern	_intCount
                                    1-  126     	extern	_count500ms
                                    1-  127     	extern	_keyCount
                                    1-  128     	extern	_workStep
                                    1-  129     	extern	_ledStep
                                    1-  130     	extern	_fgCount
                                    1-  131     	extern	_fgPRD
                                    1-  132     	extern	_preFG
                                    1-  133     	extern	_maxDuty
                                    1-  134     	extern	_pwStep
                                    1-  135     	extern	_R_AIN5_DATA
                                    1-  136     	extern	_R_AIN5_DATA_LB
                                    1-  137     	extern	_chrgTime
                                    1-  138     	extern	_startStep
                                    1-  139     	extern	_sleepTime
                                    1-  140     	extern	_count200ms
                                    1-  141     	extern	_count1s
                                    1-  142     	extern	_count900s
                                    1-  143     	extern	_lowBatTime
                                    1-  144     	extern	_workStartFlag
                                    1-  146     	extern PSAVE
                                    1-  147     	extern SSAVE
                                    1-  148     	extern WSAVE
                                    1-  149     	extern STK02
                                    1-  150     	extern STK01
                                    1-  151     	extern STK00
                                    1-  153     .segment "uninit", 0x20000040
 20000040                           1-  154     PSAVE:
                                    1-  155     	.res 1
 20000041                           1-  156     SSAVE:
                                    1-  157     	.res 1
 20000042                           1-  158     WSAVE:
                                    1-  159     	.res 1
 20000043                           1-  160     STK02:
                                    1-  161     	.res 1
 20000044                           1-  162     STK01:
                                    1-  163     	.res 1
 20000045                           1-  164     STK00:
                                    1-  165     	.res 1
                                    1-  167     ;--------------------------------------------------------
                                    1-  168     ; global definitions
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     .segment "uninit"
     0000                           1-  171     _R_AIN5_DATA:
                                    1-  172     	.res	2
                                    1-  175     .segment "uninit"
     0000                           1-  176     _R_AIN5_DATA_LB:
                                    1-  177     	.res	1
                                    1-  180     ;--------------------------------------------------------
                                    1-  181     ; absolute symbol definitions
                                    1-  182     ;--------------------------------------------------------
                                    1-  183     ;--------------------------------------------------------
                                    1-  184     ; compiler-defined variables
                                    1-  185     ;--------------------------------------------------------
                                    1-  186     .segment "uninit"
     0000                           1-  187     r0x102B:
                                    1-  188     	.res	1
                                    1-  189     .segment "uninit"
     0000                           1-  190     r0x1033:
                                    1-  191     	.res	1
                                    1-  192     .segment "uninit"
     0000                           1-  193     r0x1032:
                                    1-  194     	.res	1
                                    1-  195     .segment "uninit"
     0000                           1-  196     r0x1031:
                                    1-  197     	.res	1
                                    1-  198     .segment "uninit"
     0000                           1-  199     r0x1030:
                                    1-  200     	.res	1
                                    1-  201     .segment "uninit"
     0000                           1-  202     r0x102D:
                                    1-  203     	.res	1
                                    1-  204     .segment "uninit"
     0000                           1-  205     r0x102F:
                                    1-  206     	.res	1
                                    1-  207     .segment "uninit"
     0000                           1-  208     r0x102E:
                                    1-  209     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     r0x102C:
                                    1-  212     	.res	1
                                    1-  213     .segment "uninit"
     0000                           1-  214     r0x101F:
                                    1-  215     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     r0x1020:
                                    1-  218     	.res	1
                                    1-  219     .segment "uninit"
     0000                           1-  220     r0x1029:
                                    1-  221     	.res	1
                                    1-  222     .segment "uninit"
     0000                           1-  223     r0x102A:
                                    1-  224     	.res	1
                                    1-  225     .segment "uninit"
     0000                           1-  226     r0x1021:
                                    1-  227     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     r0x1022:
                                    1-  230     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     r0x1023:
                                    1-  233     	.res	1
                                    1-  234     .segment "uninit"
     0000                           1-  235     r0x1026:
                                    1-  236     	.res	1
                                    1-  237     ;--------------------------------------------------------
                                    1-  238     ; initialized data
                                    1-  239     ;--------------------------------------------------------
                                    1-  241     .segment "idata"
     0000                           1-  242     _Status:
     0000 0000                      1-  243     	dw	0x00
                                    1-  247     .segment "idata"
     0000                           1-  248     _duty:
     0000 0000 0000                 1-  249     	dw	0x00, 0x00
                                    1-  253     .segment "idata"
     0000                           1-  254     _intCount:
     0000 0000                      1-  255     	dw	0x00
                                    1-  259     .segment "idata"
     0000                           1-  260     _count500ms:
     0000 0000                      1-  261     	dw	0x00
                                    1-  265     .segment "idata"
     0000                           1-  266     _keyCount:
     0000 0000                      1-  267     	dw	0x00
                                    1-  271     .segment "idata"
     0000                           1-  272     _workStep:
     0000 0000                      1-  273     	dw	0x00
                                    1-  277     .segment "idata"
     0000                           1-  278     _ledStep:
     0000 0000                      1-  279     	dw	0x00
                                    1-  283     .segment "idata"
     0000                           1-  284     _fgCount:
     0000 0000 0000                 1-  285     	dw	0x00, 0x00
                                    1-  289     .segment "idata"
     0000                           1-  290     _fgPRD:
     0000 0000 0000                 1-  291     	dw	0x00, 0x00
                                    1-  295     .segment "idata"
     0000                           1-  296     _preFG:
     0000 0000                      1-  297     	dw	0x00
                                    1-  301     .segment "idata"
     0000                           1-  302     _maxDuty:
     0000 0000                      1-  303     	dw	0x00
                                    1-  307     .segment "idata"
     0000                           1-  308     _pwStep:
     0000 0000                      1-  309     	dw	0x00
                                    1-  313     .segment "idata"
     0000                           1-  314     _chrgTime:
     0000 0000 0000                 1-  315     	dw	0x00, 0x00
                                    1-  319     .segment "idata"
     0000                           1-  320     _startStep:
     0000 0000                      1-  321     	dw	0x00
                                    1-  325     .segment "idata"
     0000                           1-  326     _sleepTime:
     0000 0000 0000                 1-  327     	dw	0x00, 0x00
                                    1-  331     .segment "idata"
     0000                           1-  332     _count200ms:
     0000 0000                      1-  333     	dw	0x00
                                    1-  337     .segment "idata"
     0000                           1-  338     _count1s:
     0000 0000                      1-  339     	dw	0x00
                                    1-  343     .segment "idata"
     0000                           1-  344     _count900s:
     0000 0000 0000                 1-  345     	dw	0x00, 0x00
                                    1-  349     .segment "idata"
     0000                           1-  350     _lowBatTime:
     0000 0000                      1-  351     	dw	0x00
                                    1-  355     .segment "idata"
     0000                           1-  356     _workStartFlag:
     0000 0000                      1-  357     	dw	0x00
                                    1-  360     ;--------------------------------------------------------
                                    1-  361     ; overlayable items in internal ram 
                                    1-  362     ;--------------------------------------------------------
                                    1-  363     ;	udata_ovr
                                    1-  364     ;--------------------------------------------------------
                                    1-  365     ; reset vector 
                                    1-  366     ;--------------------------------------------------------
                                    1-  367     ORG	0x0000
     0000 3rrr                      1-  368     	LGOTO	__nyc_ny8_startup
                                    1-  369     ;--------------------------------------------------------
                                    1-  370     ; interrupt and initialization code
                                    1-  371     ;--------------------------------------------------------
                                    1-  372     ORG 0x0008
     0008 3rrr                      1-  373     	lgoto	__sdcc_interrupt
                                    1-  375     .segment "code"
     0000                           1-  376     __sdcc_interrupt:
                                    1-  377     ;***
                                    1-  378     ;  pBlock Stats: dbName = I
                                    1-  379     ;***
                                    1-  380     ;2 compiler assigned registers:
                                    1-  381     ;   STK00
                                    1-  382     ;   STK01
                                    1-  383     ;; Starting pCode block
     0000                           1-  384     _isr:
                                    1-  385     ; 0 exit points
                                    1-  386     	.line	80, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  387     	MOVAR	WSAVE
     0001 1503                      1-  388     	SWAPR	STATUS,W
     0002 0283                      1-  389     	CLRR	STATUS
     0003 00rr                      1-  390     	MOVAR	SSAVE
     0004 010A                      1-  391     	MOVR	PCHBUF,W
     0005 028A                      1-  392     	CLRR	PCHBUF
     0006 00rr                      1-  393     	MOVAR	PSAVE
     0007 0104                      1-  394     	MOVR	FSR,W
                                    1-  395     	BANKSEL	___sdcc_saved_fsr
     0008 00rr                      1-  396     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  397     	MOVR	STK00,W
                                    1-  398     	BANKSEL	___sdcc_saved_stk00
     000A 00rr                      1-  399     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  400     	MOVR	STK01,W
                                    1-  401     	BANKSEL	___sdcc_saved_stk01
     000C 00rr                      1-  402     	MOVAR	___sdcc_saved_stk01
                                    1-  403     	.line	82, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  404     	BTRSS	_INTFbits,0
     000E 3rrr                      1-  405     	LGOTO	_00119_DS_
                                    1-  406     	.line	84, "main.c"; 	TMR0 += 55;
     000F 2137                      1-  407     	MOVIA	0x37
     0010 03rr                      1-  408     	ADDAR	_TMR0,F
                                    1-  409     	.line	86, "main.c"; 	if(++intCount >= 100)
                                    1-  410     	BANKSEL	_intCount
     0011 05rr                      1-  411     	INCR	_intCount,F
                                    1-  412     ;;unsigned compare: left < lit (0x64=100), size=1
     0012 2164                      1-  413     	MOVIA	0x64
     0013 04rr                      1-  414     	SUBAR	_intCount,W
     0014 0803                      1-  415     	BTRSS	STATUS,0
     0015 3rrr                      1-  416     	LGOTO	_00119_DS_
                                    1-  417     	.line	88, "main.c"; 	IntFlag = 1;
                                    1-  418     	BANKSEL	_Status
     0016 18rr                      1-  419     	BSR	_Status,0
                                    1-  420     	.line	89, "main.c"; 	intCount = 0;
                                    1-  421     	BANKSEL	_intCount
     0017 02rr                      1-  422     	CLRR	_intCount
                                    1-  423     	.line	90, "main.c"; 	if(workStep)
                                    1-  424     	BANKSEL	_workStep
     0018 01rr                      1-  425     	MOVR	_workStep,W
     0019 0D03                      1-  426     	BTRSC	STATUS,2
     001A 3rrr                      1-  427     	LGOTO	_00106_DS_
                                    1-  428     	.line	91, "main.c"; 	++fgCount;
                                    1-  429     	BANKSEL	_fgCount
     001B 05rr                      1-  430     	INCR	_fgCount,F
     001C 0D03                      1-  431     	BTRSC	STATUS,2
     001D 05rr                      1-  432     	INCR	(_fgCount + 1),F
     001E                           1-  433     _00106_DS_:
                                    1-  434     	.line	92, "main.c"; 	if(++count500ms >= 40)
                                    1-  435     	BANKSEL	_count500ms
     001E 05rr                      1-  436     	INCR	_count500ms,F
                                    1-  437     ;;unsigned compare: left < lit (0x28=40), size=1
     001F 2128                      1-  438     	MOVIA	0x28
     0020 04rr                      1-  439     	SUBAR	_count500ms,W
     0021 0C03                      1-  440     	BTRSC	STATUS,0
                                    1-  441     	.line	93, "main.c"; 	count500ms = 0;
     0022 02rr                      1-  442     	CLRR	_count500ms
                                    1-  443     	.line	94, "main.c"; 	if(++count200ms >= 20)
                                    1-  444     	BANKSEL	_count200ms
     0023 05rr                      1-  445     	INCR	_count200ms,F
     0024 2114                      1-  446     	MOVIA	0x14
     0025 04rr                      1-  447     	SUBAR	_count200ms,W
     0026 0C03                      1-  448     	BTRSC	STATUS,0
                                    1-  449     	.line	95, "main.c"; 	count200ms = 0;
     0027 02rr                      1-  450     	CLRR	_count200ms
                                    1-  451     	.line	96, "main.c"; 	if(++count1s >= 100)
                                    1-  452     	BANKSEL	_count1s
     0028 05rr                      1-  453     	INCR	_count1s,F
     0029 2164                      1-  454     	MOVIA	0x64
     002A 04rr                      1-  455     	SUBAR	_count1s,W
     002B 0803                      1-  456     	BTRSS	STATUS,0
     002C 3rrr                      1-  457     	LGOTO	_00119_DS_
                                    1-  458     	.line	98, "main.c"; 	count1s = 0;
     002D 02rr                      1-  459     	CLRR	_count1s
                                    1-  460     	.line	99, "main.c"; 	if(workStep)
                                    1-  461     	BANKSEL	_workStep
     002E 01rr                      1-  462     	MOVR	_workStep,W
     002F 0D03                      1-  463     	BTRSC	STATUS,2
     0030 3rrr                      1-  464     	LGOTO	_00112_DS_
                                    1-  465     	.line	101, "main.c"; 	++count900s;
                                    1-  466     	BANKSEL	_count900s
     0031 05rr                      1-  467     	INCR	_count900s,F
     0032 0D03                      1-  468     	BTRSC	STATUS,2
     0033 05rr                      1-  469     	INCR	(_count900s + 1),F
     0034 3rrr                      1-  470     	LGOTO	_00119_DS_
     0035                           1-  471     _00112_DS_:
                                    1-  472     	.line	105, "main.c"; 	count900s = 0;
                                    1-  473     	BANKSEL	_count900s
     0035 02rr                      1-  474     	CLRR	_count900s
     0036 02rr                      1-  475     	CLRR	(_count900s + 1)
     0037                           1-  476     _00119_DS_:
                                    1-  477     	.line	114, "main.c"; 	if(INTFbits.PABIF)
     0037 08rr                      1-  478     	BTRSS	_INTFbits,1
     0038 3rrr                      1-  479     	LGOTO	_00121_DS_
                                    1-  480     	.line	116, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0039 21FD                      1-  481     	MOVIA	0xfd
     003A 00rr                      1-  482     	MOVAR	_INTF
     003B                           1-  483     _00121_DS_:
                                    1-  484     	.line	119, "main.c"; 	INTF = 0;
     003B 02rr                      1-  485     	CLRR	_INTF
                                    1-  486     	.line	121, "main.c"; 	}
                                    1-  487     	BANKSEL	___sdcc_saved_stk01
     003C 01rr                      1-  488     	MOVR	___sdcc_saved_stk01,W
     003D 00rr                      1-  489     	MOVAR	STK01
                                    1-  490     	BANKSEL	___sdcc_saved_stk00
     003E 01rr                      1-  491     	MOVR	___sdcc_saved_stk00,W
     003F 00rr                      1-  492     	MOVAR	STK00
                                    1-  493     	BANKSEL	___sdcc_saved_fsr
     0040 01rr                      1-  494     	MOVR	___sdcc_saved_fsr,W
     0041 0084                      1-  495     	MOVAR	FSR
     0042 01rr                      1-  496     	MOVR	PSAVE,W
     0043 008A                      1-  497     	MOVAR	PCHBUF
     0044 0283                      1-  498     	CLRR	STATUS
     0045 15rr                      1-  499     	SWAPR	SSAVE,W
     0046 0083                      1-  500     	MOVAR	STATUS
     0047 15rr                      1-  501     	SWAPR	WSAVE,F
     0048 15rr                      1-  502     	SWAPR	WSAVE,W
     0049                           1-  503     END_OF_INTERRUPT:
     0049 0011                      1-  504     	RETIE	
                                    1-  506     ;--------------------------------------------------------
                                    1-  507     ; code
                                    1-  508     ;--------------------------------------------------------
                                    1-  509     ;***
                                    1-  510     ;  pBlock Stats: dbName = M
                                    1-  511     ;***
                                    1-  512     ;has an exit
                                    1-  513     ;functions called:
                                    1-  514     ;   _initSys
                                    1-  515     ;   _initAD
                                    1-  516     ;   _ledShow
                                    1-  517     ;   _fgCtr
                                    1-  518     ;   _keyCtr
                                    1-  519     ;   _checkBatAD
                                    1-  520     ;   _ledCtr
                                    1-  521     ;   _chrgCtr
                                    1-  522     ;   _LedCtr2
                                    1-  523     ;   _workCtr
                                    1-  524     ;   _gotoSleep
                                    1-  525     ;   _powerOff
                                    1-  526     ;   _pwmStop
                                    1-  527     ;   _delay
                                    1-  528     ;   _pwmStop
                                    1-  529     ;   _initSys
                                    1-  530     ;   _initAD
                                    1-  531     ;   _ledShow
                                    1-  532     ;   _fgCtr
                                    1-  533     ;   _keyCtr
                                    1-  534     ;   _checkBatAD
                                    1-  535     ;   _ledCtr
                                    1-  536     ;   _chrgCtr
                                    1-  537     ;   _LedCtr2
                                    1-  538     ;   _workCtr
                                    1-  539     ;   _gotoSleep
                                    1-  540     ;   _powerOff
                                    1-  541     ;   _pwmStop
                                    1-  542     ;   _delay
                                    1-  543     ;   _pwmStop
                                    1-  544     ;; Starting pCode block
                                    1-  545     .segment "code"; module=main, function=_main
     0000                           1-  547     _main:
                                    1-  548     ; 2 exit points
                                    1-  549     	.line	125, "main.c"; 	initSys();
     0000 2rrr                      1-  550     	LCALL	_initSys
                                    1-  551     	.line	126, "main.c"; 	initAD();
     0001 2rrr                      1-  552     	LCALL	_initAD
     0002                           1-  553     _00159_DS_:
                                    1-  554     	.line	129, "main.c"; 	ledShow();
     0002 2rrr                      1-  555     	LCALL	_ledShow
                                    1-  556     	.line	130, "main.c"; 	CLRWDT();
     0003 0002                      1-  557     	clrwdt
                                    1-  558     	.line	131, "main.c"; 	fgCtr();
     0004 2rrr                      1-  559     	LCALL	_fgCtr
                                    1-  560     	.line	132, "main.c"; 	if(!IntFlag)
                                    1-  561     	BANKSEL	_Status
     0005 08rr                      1-  562     	BTRSS	_Status,0
     0006 3rrr                      1-  563     	LGOTO	_00159_DS_
                                    1-  564     	.line	134, "main.c"; 	IntFlag = 0;
     0007 1Crr                      1-  565     	BCR	_Status,0
                                    1-  566     	.line	135, "main.c"; 	if((PORTA & 0x20) == 0)
                                    1-  567     	BANKSEL	_PORTA
     0008 0Arr                      1-  568     	BTRSS	_PORTA,5
                                    1-  569     	.line	136, "main.c"; 	keyCtr();
     0009 2rrr                      1-  570     	LCALL	_keyCtr
                                    1-  571     	.line	137, "main.c"; 	if(count200ms == 0)
                                    1-  572     	BANKSEL	_count200ms
     000A 01rr                      1-  573     	MOVR	_count200ms,W
     000B 0903                      1-  574     	BTRSS	STATUS,2
     000C 3rrr                      1-  575     	LGOTO	_00131_DS_
                                    1-  576     	.line	139, "main.c"; 	checkBatAD();
     000D 2rrr                      1-  577     	LCALL	_checkBatAD
                                    1-  578     	.line	140, "main.c"; 	ledCtr();
     000E 2rrr                      1-  579     	LCALL	_ledCtr
     000F                           1-  580     _00131_DS_:
                                    1-  581     	.line	142, "main.c"; 	if(count500ms == 0)
                                    1-  582     	BANKSEL	_count500ms
     000F 01rr                      1-  583     	MOVR	_count500ms,W
     0010 0903                      1-  584     	BTRSS	STATUS,2
     0011 3rrr                      1-  585     	LGOTO	_00139_DS_
                                    1-  586     	.line	144, "main.c"; 	chrgCtr();
     0012 2rrr                      1-  587     	LCALL	_chrgCtr
                                    1-  588     	.line	145, "main.c"; 	if(workStartFlag == 1 || workStartFlag == 3 || workStartFlag == 4)
                                    1-  589     	BANKSEL	_workStartFlag
     0013 01rr                      1-  590     	MOVR	_workStartFlag,W
     0014 2401                      1-  591     	XORIA	0x01
     0015 0D03                      1-  592     	BTRSC	STATUS,2
     0016 3rrr                      1-  593     	LGOTO	_00134_DS_
     0017 01rr                      1-  594     	MOVR	_workStartFlag,W
     0018 2403                      1-  595     	XORIA	0x03
     0019 0D03                      1-  596     	BTRSC	STATUS,2
     001A 3rrr                      1-  597     	LGOTO	_00134_DS_
     001B 01rr                      1-  598     	MOVR	_workStartFlag,W
     001C 2404                      1-  599     	XORIA	0x04
     001D 0903                      1-  600     	BTRSS	STATUS,2
     001E 3rrr                      1-  601     	LGOTO	_00139_DS_
     001F                           1-  602     _00134_DS_:
                                    1-  603     	.line	147, "main.c"; 	if(chrgFlag == 0)
                                    1-  604     	BANKSEL	_Status
     001F 09rr                      1-  605     	BTRSS	_Status,3
                                    1-  606     	.line	148, "main.c"; 	LedCtr2();
     0020 2rrr                      1-  607     	LCALL	_LedCtr2
     0021                           1-  608     _00139_DS_:
                                    1-  609     	.line	152, "main.c"; 	if(workStep)
                                    1-  610     	BANKSEL	_workStep
     0021 01rr                      1-  611     	MOVR	_workStep,W
     0022 0903                      1-  612     	BTRSS	STATUS,2
                                    1-  613     	.line	153, "main.c"; 	workCtr();
     0023 2rrr                      1-  614     	LCALL	_workCtr
                                    1-  615     	.line	154, "main.c"; 	if(workStep == 0 && keyCount == 0 && workStartFlag == 0 && ((PORTA & 0x20) == 0))
                                    1-  616     	BANKSEL	_workStep
     0024 01rr                      1-  617     	MOVR	_workStep,W
     0025 0903                      1-  618     	BTRSS	STATUS,2
     0026 3rrr                      1-  619     	LGOTO	_00145_DS_
                                    1-  620     	BANKSEL	_keyCount
     0027 01rr                      1-  621     	MOVR	_keyCount,W
     0028 0903                      1-  622     	BTRSS	STATUS,2
     0029 3rrr                      1-  623     	LGOTO	_00145_DS_
                                    1-  624     	BANKSEL	_workStartFlag
     002A 01rr                      1-  625     	MOVR	_workStartFlag,W
     002B 0903                      1-  626     	BTRSS	STATUS,2
     002C 3rrr                      1-  627     	LGOTO	_00145_DS_
                                    1-  628     	BANKSEL	_PORTA
     002D 0Err                      1-  629     	BTRSC	_PORTA,5
     002E 3rrr                      1-  630     	LGOTO	_00145_DS_
                                    1-  631     	.line	156, "main.c"; 	if(++sleepTime > 2000)
                                    1-  632     	BANKSEL	_sleepTime
     002F 05rr                      1-  633     	INCR	_sleepTime,F
     0030 0D03                      1-  634     	BTRSC	STATUS,2
     0031 05rr                      1-  635     	INCR	(_sleepTime + 1),F
                                    1-  636     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  637     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0032 2107                      1-  638     	MOVIA	0x07
     0033 04rr                      1-  639     	SUBAR	(_sleepTime + 1),W
     0034 0903                      1-  640     	BTRSS	STATUS,2
     0035 3rrr                      1-  641     	LGOTO	_00219_DS_
     0036 21D1                      1-  642     	MOVIA	0xd1
     0037 04rr                      1-  643     	SUBAR	_sleepTime,W
     0038                           1-  644     _00219_DS_:
     0038 0803                      1-  645     	BTRSS	STATUS,0
     0039 3rrr                      1-  646     	LGOTO	_00145_DS_
                                    1-  647     	.line	158, "main.c"; 	gotoSleep();
     003A 2rrr                      1-  648     	LCALL	_gotoSleep
                                    1-  649     ;;unsigned compare: left < lit (0x384=900), size=2
     003B                           1-  650     _00145_DS_:
                                    1-  651     	.line	162, "main.c"; 	if(count900s >= 900)
     003B 2103                      1-  652     	MOVIA	0x03
                                    1-  653     	BANKSEL	_count900s
     003C 04rr                      1-  654     	SUBAR	(_count900s + 1),W
     003D 0903                      1-  655     	BTRSS	STATUS,2
     003E 3rrr                      1-  656     	LGOTO	_00220_DS_
     003F 2184                      1-  657     	MOVIA	0x84
     0040 04rr                      1-  658     	SUBAR	_count900s,W
     0041                           1-  659     _00220_DS_:
     0041 0803                      1-  660     	BTRSS	STATUS,0
     0042 3rrr                      1-  661     	LGOTO	_00150_DS_
                                    1-  662     	.line	164, "main.c"; 	powerOff();
     0043 2rrr                      1-  663     	LCALL	_powerOff
                                    1-  664     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  665     ;;unsigned compare: left >= lit (0x65=101), size=2
     0044                           1-  666     _00150_DS_:
                                    1-  667     	.line	167, "main.c"; 	if(fgPRD > 100 || fgCount > 100)
     0044 2100                      1-  668     	MOVIA	0x00
                                    1-  669     	BANKSEL	_fgPRD
     0045 04rr                      1-  670     	SUBAR	(_fgPRD + 1),W
     0046 0903                      1-  671     	BTRSS	STATUS,2
     0047 3rrr                      1-  672     	LGOTO	_00221_DS_
     0048 2165                      1-  673     	MOVIA	0x65
     0049 04rr                      1-  674     	SUBAR	_fgPRD,W
     004A                           1-  675     _00221_DS_:
     004A 0C03                      1-  676     	BTRSC	STATUS,0
     004B 3rrr                      1-  677     	LGOTO	_00155_DS_
                                    1-  678     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  679     ;;unsigned compare: left >= lit (0x65=101), size=2
     004C 2100                      1-  680     	MOVIA	0x00
                                    1-  681     	BANKSEL	_fgCount
     004D 04rr                      1-  682     	SUBAR	(_fgCount + 1),W
     004E 0903                      1-  683     	BTRSS	STATUS,2
     004F 3rrr                      1-  684     	LGOTO	_00222_DS_
     0050 2165                      1-  685     	MOVIA	0x65
     0051 04rr                      1-  686     	SUBAR	_fgCount,W
     0052                           1-  687     _00222_DS_:
     0052 0803                      1-  688     	BTRSS	STATUS,0
     0053 3rrr                      1-  689     	LGOTO	_00159_DS_
                                    1-  690     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  691     ;;unsigned compare: left >= lit (0x97=151), size=2
     0054                           1-  692     _00155_DS_:
                                    1-  693     	.line	169, "main.c"; 	if(fgCount > 150)
     0054 2100                      1-  694     	MOVIA	0x00
                                    1-  695     	BANKSEL	_fgCount
     0055 04rr                      1-  696     	SUBAR	(_fgCount + 1),W
     0056 0903                      1-  697     	BTRSS	STATUS,2
     0057 3rrr                      1-  698     	LGOTO	_00223_DS_
     0058 2197                      1-  699     	MOVIA	0x97
     0059 04rr                      1-  700     	SUBAR	_fgCount,W
     005A                           1-  701     _00223_DS_:
     005A 0803                      1-  702     	BTRSS	STATUS,0
     005B 3rrr                      1-  703     	LGOTO	_00152_DS_
                                    1-  704     	.line	171, "main.c"; 	pwmStop();
     005C 2rrr                      1-  705     	LCALL	_pwmStop
                                    1-  706     	.line	172, "main.c"; 	PORTB &= 0xFD;
     005D 1Crr                      1-  707     	BCR	_PORTB,1
                                    1-  708     	.line	173, "main.c"; 	fgPRD = 0;
                                    1-  709     	BANKSEL	_fgPRD
     005E 02rr                      1-  710     	CLRR	_fgPRD
     005F 02rr                      1-  711     	CLRR	(_fgPRD + 1)
                                    1-  712     	.line	174, "main.c"; 	fgCount = 0;
                                    1-  713     	BANKSEL	_fgCount
     0060 02rr                      1-  714     	CLRR	_fgCount
     0061 02rr                      1-  715     	CLRR	(_fgCount + 1)
                                    1-  716     	.line	175, "main.c"; 	delay(100);
     0062 2164                      1-  717     	MOVIA	0x64
     0063 2rrr                      1-  718     	LCALL	_delay
     0064                           1-  719     _00152_DS_:
                                    1-  720     	.line	177, "main.c"; 	if(++sleepTime > 2000)
                                    1-  721     	BANKSEL	_sleepTime
     0064 05rr                      1-  722     	INCR	_sleepTime,F
     0065 0D03                      1-  723     	BTRSC	STATUS,2
     0066 05rr                      1-  724     	INCR	(_sleepTime + 1),F
                                    1-  725     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  726     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0067 2107                      1-  727     	MOVIA	0x07
     0068 04rr                      1-  728     	SUBAR	(_sleepTime + 1),W
     0069 0903                      1-  729     	BTRSS	STATUS,2
     006A 3rrr                      1-  730     	LGOTO	_00224_DS_
     006B 21D1                      1-  731     	MOVIA	0xd1
     006C 04rr                      1-  732     	SUBAR	_sleepTime,W
     006D                           1-  733     _00224_DS_:
     006D 0803                      1-  734     	BTRSS	STATUS,0
     006E 3rrr                      1-  735     	LGOTO	_00159_DS_
                                    1-  736     	.line	180, "main.c"; 	pwmStop();
     006F 2rrr                      1-  737     	LCALL	_pwmStop
                                    1-  738     	.line	181, "main.c"; 	PORTB &= 0xFD;
     0070 1Crr                      1-  739     	BCR	_PORTB,1
                                    1-  740     	.line	183, "main.c"; 	AWUCON = 0x60;
     0071 2160                      1-  741     	MOVIA	0x60
     0072 00rr                      1-  742     	MOVAR	_AWUCON
                                    1-  743     	.line	184, "main.c"; 	fgPRD = 0;
                                    1-  744     	BANKSEL	_fgPRD
     0073 02rr                      1-  745     	CLRR	_fgPRD
     0074 02rr                      1-  746     	CLRR	(_fgPRD + 1)
                                    1-  747     	.line	185, "main.c"; 	fgCount = 0;
                                    1-  748     	BANKSEL	_fgCount
     0075 02rr                      1-  749     	CLRR	_fgCount
     0076 02rr                      1-  750     	CLRR	(_fgCount + 1)
                                    1-  751     	.line	186, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0077 210B                      1-  752     	MOVIA	0x0b
     0078 00rr                      1-  753     	MOVAR	_INTE
                                    1-  754     	.line	187, "main.c"; 	PCON =  C_LVR_En ;	
     0079 2108                      1-  755     	MOVIA	0x08
     007A 00rr                      1-  756     	MOVAR	_PCON
                                    1-  757     	.line	188, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     007B 02rr                      1-  758     	CLRR	_INTF
                                    1-  759     	.line	189, "main.c"; 	CLRWDT();
     007C 0002                      1-  760     	clrwdt
                                    1-  761     	.line	190, "main.c"; 	ENI();
     007D 0004                      1-  762     	ENI
                                    1-  763     	.line	191, "main.c"; 	SLEEP();
     007E 0001                      1-  764     	sleep
                                    1-  765     	.line	192, "main.c"; 	AWUCON = 0x00;
     007F 02rr                      1-  766     	CLRR	_AWUCON
                                    1-  767     	.line	193, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0080 2101                      1-  768     	MOVIA	0x01
     0081 00rr                      1-  769     	MOVAR	_INTE
                                    1-  770     	.line	194, "main.c"; 	INTF = 0;
     0082 02rr                      1-  771     	CLRR	_INTF
                                    1-  772     	.line	196, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0083 21A8                      1-  773     	MOVIA	0xa8
     0084 00rr                      1-  774     	MOVAR	_PCON
     0085 3rrr                      1-  775     	LGOTO	_00159_DS_
                                    1-  776     	.line	200, "main.c"; 	}
                                    1-  777     	RETURN	
     0086 0010                      3-   26 m1      ret
                                    1-  778     ; exit point of _main
                                    1-  780     ;***
                                    1-  781     ;  pBlock Stats: dbName = C
                                    1-  782     ;***
                                    1-  783     ;has an exit
                                    1-  784     ;; Starting pCode block
                                    1-  785     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  787     _F_wait_eoc:
                                    1-  788     ; 2 exit points
     0000                           1-  789     _00602_DS_:
                                    1-  790     	.line	770, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  791     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  792     	LGOTO	_00602_DS_
                                    1-  793     	.line	772, "main.c"; 	}
                                    1-  794     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  795     ; exit point of _F_wait_eoc
                                    1-  797     ;***
                                    1-  798     ;  pBlock Stats: dbName = C
                                    1-  799     ;***
                                    1-  800     ;has an exit
                                    1-  801     ;functions called:
                                    1-  802     ;   _delay
                                    1-  803     ;   _F_wait_eoc
                                    1-  804     ;   _delay
                                    1-  805     ;   _F_wait_eoc
                                    1-  806     ;6 compiler assigned registers:
                                    1-  807     ;   r0x1021
                                    1-  808     ;   r0x1022
                                    1-  809     ;   r0x1023
                                    1-  810     ;   r0x1024
                                    1-  811     ;   r0x1025
                                    1-  812     ;   r0x1026
                                    1-  813     ;; Starting pCode block
                                    1-  814     .segment "code"; module=main, function=_F_AIN5_Convert
                                    1-  816     ;local variable name mapping:
     0000                           1-  819     _F_AIN5_Convert:
                                    1-  820     ; 2 exit points
                                    1-  821     	.line	753, "main.c"; 	void F_AIN5_Convert(char count)
                                    1-  822     	BANKSEL	r0x1021
     0000 00rr                      1-  823     	MOVAR	r0x1021
                                    1-  824     	.line	755, "main.c"; 	R_AIN5_DATA=R_AIN5_DATA_LB=0x00;   
                                    1-  825     	BANKSEL	_R_AIN5_DATA_LB
     0001 02rr                      1-  826     	CLRR	_R_AIN5_DATA_LB
                                    1-  827     	BANKSEL	_R_AIN5_DATA
     0002 02rr                      1-  828     	CLRR	_R_AIN5_DATA
     0003 02rr                      1-  829     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  830     	.line	757, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0004 2194                      1-  831     	MOVIA	0x94
     0005 00rr                      1-  832     	MOVAR	_ADMD
                                    1-  833     	.line	758, "main.c"; 	delay(200);	
     0006 21C8                      1-  834     	MOVIA	0xc8
     0007 2rrr                      1-  835     	LCALL	_delay
                                    1-  836     	.line	759, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  837     	MOVIA	0x01
                                    1-  838     	BANKSEL	r0x1022
     0009 00rr                      1-  839     	MOVAR	r0x1022
     000A                           1-  840     _00595_DS_:
                                    1-  841     	BANKSEL	r0x1022
     000A 01rr                      1-  842     	MOVR	r0x1022,W
                                    1-  843     	BANKSEL	r0x1021
     000B 04rr                      1-  844     	SUBAR	r0x1021,W
     000C 0803                      1-  845     	BTRSS	STATUS,0
     000D 3rrr                      1-  846     	LGOTO	_00597_DS_
                                    1-  847     	.line	761, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1-  848     	BSR	_ADMDbits,6
                                    1-  849     	.line	762, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     000F 2rrr                      1-  850     	LCALL	_F_wait_eoc
                                    1-  851     	.line	763, "main.c"; 	R_AIN5_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1-  852     	MOVIA	0x0f
     0011 10rr                      1-  853     	ANDAR	_ADR,W
                                    1-  854     ;;3	MOVAR	r0x1023
                                    1-  855     	BANKSEL	_R_AIN5_DATA_LB
     0012 03rr                      1-  856     	ADDAR	_R_AIN5_DATA_LB,F
                                    1-  857     	.line	764, "main.c"; 	R_AIN5_DATA    += ADD; 
     0013 01rr                      1-  858     	MOVR	_ADD,W
                                    1-  859     	BANKSEL	r0x1023
     0014 00rr                      1-  860     	MOVAR	r0x1023
                                    1-  861     ;;1	CLRR	r0x1024
                                    1-  862     ;;102	MOVR	r0x1023,W
                                    1-  863     ;;100	MOVAR	r0x1025
     0015 2100                      1-  864     	MOVIA	0x00
                                    1-  865     	BANKSEL	r0x1026
     0016 00rr                      1-  866     	MOVAR	r0x1026
                                    1-  867     ;;101	MOVR	r0x1025,W
                                    1-  868     	BANKSEL	r0x1023
     0017 01rr                      1-  869     	MOVR	r0x1023,W
                                    1-  870     	BANKSEL	_R_AIN5_DATA
     0018 03rr                      1-  871     	ADDAR	_R_AIN5_DATA,F
                                    1-  872     	BANKSEL	r0x1026
     0019 01rr                      1-  873     	MOVR	r0x1026,W
     001A 0C03                      1-  874     	BTRSC	STATUS,0
     001B 05rr                      1-  875     	INCR	r0x1026,W
     001C 0D03                      1-  876     	BTRSC	STATUS,2
     001D 3rrr                      1-  877     	LGOTO	_00001_DS_
                                    1-  878     	BANKSEL	_R_AIN5_DATA
     001E 03rr                      1-  879     	ADDAR	(_R_AIN5_DATA + 1),F
     001F                           1-  880     _00001_DS_:
                                    1-  881     	.line	759, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  882     	BANKSEL	r0x1022
     001F 05rr                      1-  883     	INCR	r0x1022,F
     0020 3rrr                      1-  884     	LGOTO	_00595_DS_
     0021                           1-  885     _00597_DS_:
                                    1-  886     	.line	766, "main.c"; 	}
                                    1-  887     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1-  888     ; exit point of _F_AIN5_Convert
                                    1-  890     ;***
                                    1-  891     ;  pBlock Stats: dbName = C
                                    1-  892     ;***
                                    1-  893     ;functions called:
                                    1-  894     ;   _F_AIN5_Convert
                                    1-  895     ;   _LEDHOFF
                                    1-  896     ;   _LEDLOFF
                                    1-  897     ;   _F_AIN5_Convert
                                    1-  898     ;   _LEDHOFF
                                    1-  899     ;   _LEDLOFF
                                    1-  900     ;4 compiler assigned registers:
                                    1-  901     ;   r0x1027
                                    1-  902     ;   r0x1028
                                    1-  903     ;   r0x1029
                                    1-  904     ;   r0x102A
                                    1-  905     ;; Starting pCode block
                                    1-  906     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  908     _checkBatAD:
                                    1-  909     ; 0 exit points
                                    1-  910     	.line	662, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA_LB = 0x00;
                                    1-  911     	BANKSEL	_R_AIN5_DATA_LB
     0000 02rr                      1-  912     	CLRR	_R_AIN5_DATA_LB
                                    1-  913     	BANKSEL	_R_AIN5_DATA
     0001 02rr                      1-  914     	CLRR	_R_AIN5_DATA
     0002 02rr                      1-  915     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  916     	.line	663, "main.c"; 	F_AIN5_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1-  917     	MOVIA	0x08
     0004 2rrr                      1-  918     	LCALL	_F_AIN5_Convert
                                    1-  919     	.line	664, "main.c"; 	R_AIN5_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  920     	BANKSEL	_R_AIN5_DATA
     0005 15rr                      1-  921     	SWAPR	(_R_AIN5_DATA + 1),W
     0006 22F0                      1-  922     	ANDIA	0xf0
     0007 00rr                      1-  923     	MOVAR	(_R_AIN5_DATA + 1)
     0008 15rr                      1-  924     	SWAPR	_R_AIN5_DATA,W
     0009 00rr                      1-  925     	MOVAR	_R_AIN5_DATA
     000A 220F                      1-  926     	ANDIA	0x0f
     000B 11rr                      1-  927     	IORAR	(_R_AIN5_DATA + 1),F
     000C 12rr                      1-  928     	XORAR	_R_AIN5_DATA,F
                                    1-  929     	.line	665, "main.c"; 	R_AIN5_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1-  930     	MOVIA	0xf0
                                    1-  931     	BANKSEL	_R_AIN5_DATA_LB
     000E 10rr                      1-  932     	ANDAR	_R_AIN5_DATA_LB,F
                                    1-  933     	.line	666, "main.c"; 	R_AIN5_DATA += R_AIN5_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1-  934     	MOVR	_R_AIN5_DATA_LB,W
                                    1-  935     	BANKSEL	r0x1029
     0010 00rr                      1-  936     	MOVAR	r0x1029
                                    1-  937     ;;1	MOVAR	r0x1027
                                    1-  938     ;;1	CLRR	r0x1028
                                    1-  939     ;;99	MOVR	r0x1027,W
     0011 2100                      1-  940     	MOVIA	0x00
                                    1-  941     	BANKSEL	r0x102A
     0012 00rr                      1-  942     	MOVAR	r0x102A
                                    1-  943     	BANKSEL	r0x1029
     0013 01rr                      1-  944     	MOVR	r0x1029,W
                                    1-  945     	BANKSEL	_R_AIN5_DATA
     0014 03rr                      1-  946     	ADDAR	_R_AIN5_DATA,F
                                    1-  947     	BANKSEL	r0x102A
     0015 01rr                      1-  948     	MOVR	r0x102A,W
     0016 0C03                      1-  949     	BTRSC	STATUS,0
     0017 05rr                      1-  950     	INCR	r0x102A,W
     0018 0D03                      1-  951     	BTRSC	STATUS,2
     0019 3rrr                      1-  952     	LGOTO	_00002_DS_
                                    1-  953     	BANKSEL	_R_AIN5_DATA
     001A 03rr                      1-  954     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1-  955     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001B                           1-  956     _00002_DS_:
                                    1-  957     	.line	667, "main.c"; 	R_AIN5_DATA >>=3;					// R_AIN0_DATA divided 8
     001B 1C03                      1-  958     	BCR	STATUS,0
                                    1-  959     	BANKSEL	_R_AIN5_DATA
     001C 13rr                      1-  960     	RRR	(_R_AIN5_DATA + 1),F
     001D 13rr                      1-  961     	RRR	_R_AIN5_DATA,F
                                    1-  962     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     001E 1C03                      1-  963     	BCR	STATUS,0
     001F 13rr                      1-  964     	RRR	(_R_AIN5_DATA + 1),F
     0020 13rr                      1-  965     	RRR	_R_AIN5_DATA,F
                                    1-  966     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0021 1C03                      1-  967     	BCR	STATUS,0
     0022 13rr                      1-  968     	RRR	(_R_AIN5_DATA + 1),F
     0023 13rr                      1-  969     	RRR	_R_AIN5_DATA,F
                                    1-  970     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  971     ;;unsigned compare: left >= lit (0x614=1556), size=2
                                    1-  972     	.line	668, "main.c"; 	if(R_AIN5_DATA > 1555)
     0024 2106                      1-  973     	MOVIA	0x06
     0025 04rr                      1-  974     	SUBAR	(_R_AIN5_DATA + 1),W
     0026 0903                      1-  975     	BTRSS	STATUS,2
     0027 3rrr                      1-  976     	LGOTO	_00576_DS_
     0028 2114                      1-  977     	MOVIA	0x14
     0029 04rr                      1-  978     	SUBAR	_R_AIN5_DATA,W
     002A                           1-  979     _00576_DS_:
     002A 0803                      1-  980     	BTRSS	STATUS,0
     002B 3rrr                      1-  981     	LGOTO	_00482_DS_
                                    1-  982     	.line	670, "main.c"; 	R_AIN5_DATA = 1555;
     002C 2113                      1-  983     	MOVIA	0x13
                                    1-  984     	BANKSEL	_R_AIN5_DATA
     002D 00rr                      1-  985     	MOVAR	_R_AIN5_DATA
     002E 2106                      1-  986     	MOVIA	0x06
     002F 00rr                      1-  987     	MOVAR	(_R_AIN5_DATA + 1)
     0030 3rrr                      1-  988     	LGOTO	_00483_DS_
                                    1-  989     ;;unsigned compare: left < lit (0x45D=1117), size=2
     0031                           1-  990     _00482_DS_:
                                    1-  991     	.line	672, "main.c"; 	else if(R_AIN5_DATA < 1117)
     0031 2104                      1-  992     	MOVIA	0x04
                                    1-  993     	BANKSEL	_R_AIN5_DATA
     0032 04rr                      1-  994     	SUBAR	(_R_AIN5_DATA + 1),W
     0033 0903                      1-  995     	BTRSS	STATUS,2
     0034 3rrr                      1-  996     	LGOTO	_00577_DS_
     0035 215D                      1-  997     	MOVIA	0x5d
     0036 04rr                      1-  998     	SUBAR	_R_AIN5_DATA,W
     0037                           1-  999     _00577_DS_:
     0037 0C03                      1- 1000     	BTRSC	STATUS,0
     0038 3rrr                      1- 1001     	LGOTO	_00483_DS_
                                    1- 1002     	.line	674, "main.c"; 	R_AIN5_DATA = 1117;
     0039 215D                      1- 1003     	MOVIA	0x5d
                                    1- 1004     	BANKSEL	_R_AIN5_DATA
     003A 00rr                      1- 1005     	MOVAR	_R_AIN5_DATA
     003B 2104                      1- 1006     	MOVIA	0x04
     003C 00rr                      1- 1007     	MOVAR	(_R_AIN5_DATA + 1)
     003D                           1- 1008     _00483_DS_:
                                    1- 1009     	.line	676, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA - 1117;
     003D 21A3                      1- 1010     	MOVIA	0xa3
                                    1- 1011     	BANKSEL	_R_AIN5_DATA
     003E 03rr                      1- 1012     	ADDAR	_R_AIN5_DATA,F
     003F 21FB                      1- 1013     	MOVIA	0xfb
     0040 0C03                      1- 1014     	BTRSC	STATUS,0
     0041 21FC                      1- 1015     	MOVIA	0xfc
     0042 03rr                      1- 1016     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1- 1017     ;;unsigned compare: left < lit (0x1AE=430), size=2
                                    1- 1018     	.line	678, "main.c"; 	if(R_AIN5_DATA >= 430)
     0043 2101                      1- 1019     	MOVIA	0x01
     0044 04rr                      1- 1020     	SUBAR	(_R_AIN5_DATA + 1),W
     0045 0903                      1- 1021     	BTRSS	STATUS,2
     0046 3rrr                      1- 1022     	LGOTO	_00578_DS_
     0047 21AE                      1- 1023     	MOVIA	0xae
     0048 04rr                      1- 1024     	SUBAR	_R_AIN5_DATA,W
     0049                           1- 1025     _00578_DS_:
     0049 0803                      1- 1026     	BTRSS	STATUS,0
     004A 3rrr                      1- 1027     	LGOTO	_00518_DS_
                                    1- 1028     	.line	680, "main.c"; 	pwStep = 6;
     004B 2106                      1- 1029     	MOVIA	0x06
                                    1- 1030     	BANKSEL	_pwStep
     004C 00rr                      1- 1031     	MOVAR	_pwStep
     004D 3rrr                      1- 1032     	LGOTO	_00003_DS_
                                    1- 1033     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1034     ;;unsigned compare: left >= lit (0x18B=395), size=2
     004E                           1- 1035     _00518_DS_:
                                    1- 1036     	.line	682, "main.c"; 	else if(R_AIN5_DATA > 394)
     004E 2101                      1- 1037     	MOVIA	0x01
                                    1- 1038     	BANKSEL	_R_AIN5_DATA
     004F 04rr                      1- 1039     	SUBAR	(_R_AIN5_DATA + 1),W
     0050 0903                      1- 1040     	BTRSS	STATUS,2
     0051 3rrr                      1- 1041     	LGOTO	_00579_DS_
     0052 218B                      1- 1042     	MOVIA	0x8b
     0053 04rr                      1- 1043     	SUBAR	_R_AIN5_DATA,W
     0054                           1- 1044     _00579_DS_:
     0054 0803                      1- 1045     	BTRSS	STATUS,0
     0055 3rrr                      1- 1046     	LGOTO	_00515_DS_
                                    1- 1047     	.line	685, "main.c"; 	if(pwStep == 6)
                                    1- 1048     	BANKSEL	_pwStep
     0056 01rr                      1- 1049     	MOVR	_pwStep,W
     0057 2406                      1- 1050     	XORIA	0x06
     0058 0903                      1- 1051     	BTRSS	STATUS,2
     0059 3rrr                      1- 1052     	LGOTO	_00487_DS_
                                    1- 1053     ;;unsigned compare: left < lit (0x195=405), size=2
                                    1- 1054     	.line	687, "main.c"; 	if(R_AIN5_DATA < 405)
     005A 2101                      1- 1055     	MOVIA	0x01
                                    1- 1056     	BANKSEL	_R_AIN5_DATA
     005B 04rr                      1- 1057     	SUBAR	(_R_AIN5_DATA + 1),W
     005C 0903                      1- 1058     	BTRSS	STATUS,2
     005D 3rrr                      1- 1059     	LGOTO	_00580_DS_
     005E 2195                      1- 1060     	MOVIA	0x95
     005F 04rr                      1- 1061     	SUBAR	_R_AIN5_DATA,W
     0060                           1- 1062     _00580_DS_:
     0060 0C03                      1- 1063     	BTRSC	STATUS,0
     0061 3rrr                      1- 1064     	LGOTO	_00488_DS_
                                    1- 1065     	.line	688, "main.c"; 	pwStep = 5;
     0062 2105                      1- 1066     	MOVIA	0x05
                                    1- 1067     	BANKSEL	_pwStep
     0063 00rr                      1- 1068     	MOVAR	_pwStep
     0064 3rrr                      1- 1069     	LGOTO	_00488_DS_
     0065                           1- 1070     _00487_DS_:
                                    1- 1071     	.line	692, "main.c"; 	pwStep = 5;
     0065 2105                      1- 1072     	MOVIA	0x05
                                    1- 1073     	BANKSEL	_pwStep
     0066 00rr                      1- 1074     	MOVAR	_pwStep
                                    1- 1075     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1076     ;;unsigned compare: left >= lit (0x19B=411), size=2
     0067                           1- 1077     _00488_DS_:
                                    1- 1078     	.line	695, "main.c"; 	if(R_AIN5_DATA > 410)
     0067 2101                      1- 1079     	MOVIA	0x01
                                    1- 1080     	BANKSEL	_R_AIN5_DATA
     0068 04rr                      1- 1081     	SUBAR	(_R_AIN5_DATA + 1),W
     0069 0903                      1- 1082     	BTRSS	STATUS,2
     006A 3rrr                      1- 1083     	LGOTO	_00581_DS_
     006B 219B                      1- 1084     	MOVIA	0x9b
     006C 04rr                      1- 1085     	SUBAR	_R_AIN5_DATA,W
     006D                           1- 1086     _00581_DS_:
     006D 0803                      1- 1087     	BTRSS	STATUS,0
     006E 3rrr                      1- 1088     	LGOTO	_00003_DS_
                                    1- 1089     	.line	697, "main.c"; 	if(++chrgTime > 1800)
                                    1- 1090     	BANKSEL	_chrgTime
     006F 05rr                      1- 1091     	INCR	_chrgTime,F
     0070 0D03                      1- 1092     	BTRSC	STATUS,2
     0071 05rr                      1- 1093     	INCR	(_chrgTime + 1),F
                                    1- 1094     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1095     ;;unsigned compare: left >= lit (0x709=1801), size=2
     0072 2107                      1- 1096     	MOVIA	0x07
     0073 04rr                      1- 1097     	SUBAR	(_chrgTime + 1),W
     0074 0903                      1- 1098     	BTRSS	STATUS,2
     0075 3rrr                      1- 1099     	LGOTO	_00582_DS_
     0076 2109                      1- 1100     	MOVIA	0x09
     0077 04rr                      1- 1101     	SUBAR	_chrgTime,W
     0078                           1- 1102     _00582_DS_:
     0078 0803                      1- 1103     	BTRSS	STATUS,0
     0079 3rrr                      1- 1104     	LGOTO	_00003_DS_
                                    1- 1105     	.line	699, "main.c"; 	chrgTime = 1800;
     007A 2108                      1- 1106     	MOVIA	0x08
                                    1- 1107     	BANKSEL	_chrgTime
     007B 00rr                      1- 1108     	MOVAR	_chrgTime
     007C 2107                      1- 1109     	MOVIA	0x07
     007D 00rr                      1- 1110     	MOVAR	(_chrgTime + 1)
                                    1- 1111     	.line	700, "main.c"; 	pwStep = 6;
     007E 2106                      1- 1112     	MOVIA	0x06
                                    1- 1113     	BANKSEL	_pwStep
     007F 00rr                      1- 1114     	MOVAR	_pwStep
     0080 3rrr                      1- 1115     	LGOTO	_00003_DS_
                                    1- 1116     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1117     ;;unsigned compare: left >= lit (0xE0=224), size=2
     0081                           1- 1118     _00515_DS_:
                                    1- 1119     	.line	704, "main.c"; 	else if(R_AIN5_DATA > 223)
     0081 2100                      1- 1120     	MOVIA	0x00
                                    1- 1121     	BANKSEL	_R_AIN5_DATA
     0082 04rr                      1- 1122     	SUBAR	(_R_AIN5_DATA + 1),W
     0083 0903                      1- 1123     	BTRSS	STATUS,2
     0084 3rrr                      1- 1124     	LGOTO	_00583_DS_
     0085 21E0                      1- 1125     	MOVIA	0xe0
     0086 04rr                      1- 1126     	SUBAR	_R_AIN5_DATA,W
     0087                           1- 1127     _00583_DS_:
     0087 0803                      1- 1128     	BTRSS	STATUS,0
     0088 3rrr                      1- 1129     	LGOTO	_00512_DS_
                                    1- 1130     	.line	707, "main.c"; 	pwStep = 4;
     0089 2104                      1- 1131     	MOVIA	0x04
                                    1- 1132     	BANKSEL	_pwStep
     008A 00rr                      1- 1133     	MOVAR	_pwStep
                                    1- 1134     	.line	708, "main.c"; 	chrgTime = 0;
                                    1- 1135     	BANKSEL	_chrgTime
     008B 02rr                      1- 1136     	CLRR	_chrgTime
     008C 02rr                      1- 1137     	CLRR	(_chrgTime + 1)
     008D 3rrr                      1- 1138     	LGOTO	_00003_DS_
                                    1- 1139     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1140     ;;unsigned compare: left >= lit (0x96=150), size=2
     008E                           1- 1141     _00512_DS_:
                                    1- 1142     	.line	710, "main.c"; 	else if(R_AIN5_DATA > 149)
     008E 2100                      1- 1143     	MOVIA	0x00
                                    1- 1144     	BANKSEL	_R_AIN5_DATA
     008F 04rr                      1- 1145     	SUBAR	(_R_AIN5_DATA + 1),W
     0090 0903                      1- 1146     	BTRSS	STATUS,2
     0091 3rrr                      1- 1147     	LGOTO	_00584_DS_
     0092 2196                      1- 1148     	MOVIA	0x96
     0093 04rr                      1- 1149     	SUBAR	_R_AIN5_DATA,W
     0094                           1- 1150     _00584_DS_:
     0094 0803                      1- 1151     	BTRSS	STATUS,0
     0095 3rrr                      1- 1152     	LGOTO	_00509_DS_
                                    1- 1153     	.line	713, "main.c"; 	pwStep = 3;
     0096 2103                      1- 1154     	MOVIA	0x03
                                    1- 1155     	BANKSEL	_pwStep
     0097 00rr                      1- 1156     	MOVAR	_pwStep
                                    1- 1157     	.line	714, "main.c"; 	chrgTime = 0;
                                    1- 1158     	BANKSEL	_chrgTime
     0098 02rr                      1- 1159     	CLRR	_chrgTime
     0099 02rr                      1- 1160     	CLRR	(_chrgTime + 1)
     009A 3rrr                      1- 1161     	LGOTO	_00003_DS_
                                    1- 1162     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1163     ;;unsigned compare: left >= lit (0x5E=94), size=2
     009B                           1- 1164     _00509_DS_:
                                    1- 1165     	.line	716, "main.c"; 	else if(R_AIN5_DATA > 93)
     009B 2100                      1- 1166     	MOVIA	0x00
                                    1- 1167     	BANKSEL	_R_AIN5_DATA
     009C 04rr                      1- 1168     	SUBAR	(_R_AIN5_DATA + 1),W
     009D 0903                      1- 1169     	BTRSS	STATUS,2
     009E 3rrr                      1- 1170     	LGOTO	_00585_DS_
     009F 215E                      1- 1171     	MOVIA	0x5e
     00A0 04rr                      1- 1172     	SUBAR	_R_AIN5_DATA,W
     00A1                           1- 1173     _00585_DS_:
     00A1 0803                      1- 1174     	BTRSS	STATUS,0
     00A2 3rrr                      1- 1175     	LGOTO	_00506_DS_
                                    1- 1176     	.line	719, "main.c"; 	pwStep = 2;
     00A3 2102                      1- 1177     	MOVIA	0x02
                                    1- 1178     	BANKSEL	_pwStep
     00A4 00rr                      1- 1179     	MOVAR	_pwStep
                                    1- 1180     	.line	720, "main.c"; 	chrgTime = 0;
                                    1- 1181     	BANKSEL	_chrgTime
     00A5 02rr                      1- 1182     	CLRR	_chrgTime
     00A6 02rr                      1- 1183     	CLRR	(_chrgTime + 1)
                                    1- 1184     	.line	721, "main.c"; 	if(workStartFlag == 4)
                                    1- 1185     	BANKSEL	_workStartFlag
     00A7 01rr                      1- 1186     	MOVR	_workStartFlag,W
     00A8 2404                      1- 1187     	XORIA	0x04
     00A9 0903                      1- 1188     	BTRSS	STATUS,2
     00AA 3rrr                      1- 1189     	LGOTO	_00003_DS_
                                    1- 1190     	.line	723, "main.c"; 	workStartFlag = 0;
     00AB 02rr                      1- 1191     	CLRR	_workStartFlag
                                    1- 1192     	.line	724, "main.c"; 	LEDHOFF();
     00AC 2rrr                      1- 1193     	LCALL	_LEDHOFF
                                    1- 1194     	.line	725, "main.c"; 	LEDLOFF();
     00AD 2rrr                      1- 1195     	LCALL	_LEDLOFF
     00AE 3rrr                      1- 1196     	LGOTO	_00003_DS_
     00AF                           1- 1197     _00506_DS_:
                                    1- 1198     	.line	731, "main.c"; 	if(pwStep == 0 || pwStep == 1 || (++lowBatTime > 10))
                                    1- 1199     	BANKSEL	_pwStep
     00AF 01rr                      1- 1200     	MOVR	_pwStep,W
     00B0 0D03                      1- 1201     	BTRSC	STATUS,2
     00B1 3rrr                      1- 1202     	LGOTO	_00501_DS_
     00B2 01rr                      1- 1203     	MOVR	_pwStep,W
     00B3 2401                      1- 1204     	XORIA	0x01
     00B4 0D03                      1- 1205     	BTRSC	STATUS,2
     00B5 3rrr                      1- 1206     	LGOTO	_00501_DS_
                                    1- 1207     	BANKSEL	_lowBatTime
     00B6 05rr                      1- 1208     	INCR	_lowBatTime,F
     00B7 210B                      1- 1209     	MOVIA	0x0b
     00B8 04rr                      1- 1210     	SUBAR	_lowBatTime,W
     00B9 0803                      1- 1211     	BTRSS	STATUS,0
     00BA 3rrr                      1- 1212     	LGOTO	_00003_DS_
     00BB                           1- 1213     _00501_DS_:
                                    1- 1214     	.line	733, "main.c"; 	lowBatTime = 0;
                                    1- 1215     	BANKSEL	_lowBatTime
     00BB 02rr                      1- 1216     	CLRR	_lowBatTime
                                    1- 1217     	.line	734, "main.c"; 	pwStep = 1;
     00BC 2101                      1- 1218     	MOVIA	0x01
                                    1- 1219     	BANKSEL	_pwStep
     00BD 00rr                      1- 1220     	MOVAR	_pwStep
                                    1- 1221     	.line	735, "main.c"; 	chrgTime = 0;
                                    1- 1222     	BANKSEL	_chrgTime
     00BE 02rr                      1- 1223     	CLRR	_chrgTime
     00BF 02rr                      1- 1224     	CLRR	(_chrgTime + 1)
                                    1- 1225     	.line	736, "main.c"; 	if(workStep > 0 && fgPRD < 100 && workStartFlag == 0)
                                    1- 1226     	BANKSEL	_workStep
     00C0 01rr                      1- 1227     	MOVR	_workStep,W
     00C1 0D03                      1- 1228     	BTRSC	STATUS,2
     00C2 3rrr                      1- 1229     	LGOTO	_00003_DS_
                                    1- 1230     ;;unsigned compare: left < lit (0x64=100), size=2
     00C3 2100                      1- 1231     	MOVIA	0x00
                                    1- 1232     	BANKSEL	_fgPRD
     00C4 04rr                      1- 1233     	SUBAR	(_fgPRD + 1),W
     00C5 0903                      1- 1234     	BTRSS	STATUS,2
     00C6 3rrr                      1- 1235     	LGOTO	_00588_DS_
     00C7 2164                      1- 1236     	MOVIA	0x64
     00C8 04rr                      1- 1237     	SUBAR	_fgPRD,W
     00C9                           1- 1238     _00588_DS_:
     00C9 0C03                      1- 1239     	BTRSC	STATUS,0
     00CA 3rrr                      1- 1240     	LGOTO	_00003_DS_
                                    1- 1241     	BANKSEL	_workStartFlag
     00CB 01rr                      1- 1242     	MOVR	_workStartFlag,W
     00CC 0903                      1- 1243     	BTRSS	STATUS,2
     00CD 3rrr                      1- 1244     	LGOTO	_00003_DS_
                                    1- 1245     	.line	738, "main.c"; 	workStartFlag = 4;
     00CE 2104                      1- 1246     	MOVIA	0x04
     00CF 00rr                      1- 1247     	MOVAR	_workStartFlag
                                    1- 1248     	.line	739, "main.c"; 	if(redLedFlag == 0)
                                    1- 1249     	BANKSEL	_Status
     00D0 0Drr                      1- 1250     	BTRSC	_Status,2
     00D1 3rrr                      1- 1251     	LGOTO	_00003_DS_
                                    1- 1252     	.line	741, "main.c"; 	startStep = 0;
                                    1- 1253     	BANKSEL	_startStep
     00D2 02rr                      1- 1254     	CLRR	_startStep
     00D3                           1- 1255     _00003_DS_:
                                    1- 1256     	.line	748, "main.c"; 	}
                                    1- 1257     	RETURN	
     00D3 0010                      3-   26 m1      ret
                                    1- 1259     ;***
                                    1- 1260     ;  pBlock Stats: dbName = C
                                    1- 1261     ;***
                                    1- 1262     ;has an exit
                                    1- 1263     ;functions called:
                                    1- 1264     ;   _delay
                                    1- 1265     ;   _delay
                                    1- 1266     ;; Starting pCode block
                                    1- 1267     .segment "code"; module=main, function=_initAD
     0000                           1- 1269     _initAD:
                                    1- 1270     ; 2 exit points
                                    1- 1271     	.line	638, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1272     	MOVIA	0x84
     0001 00rr                      1- 1273     	MOVAR	_ADMD
                                    1- 1274     	.line	643, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1275     	CLRR	_ADVREFH
                                    1- 1276     	.line	648, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1277     	MOVIA	0x10
     0004 00rr                      1- 1278     	MOVAR	_ADR
                                    1- 1279     	.line	650, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1280     	MOVIA	0x03
     0006 00rr                      1- 1281     	MOVAR	_ADCR
                                    1- 1282     	.line	653, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1283     	BSR	_ADMDbits,4
                                    1- 1284     	.line	654, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1285     	MOVIA	0x64
     0009 2rrr                      1- 1286     	LCALL	_delay
                                    1- 1287     	.line	657, "main.c"; 	}
                                    1- 1288     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 1289     ; exit point of _initAD
                                    1- 1291     ;***
                                    1- 1292     ;  pBlock Stats: dbName = C
                                    1- 1293     ;***
                                    1- 1294     ;has an exit
                                    1- 1295     ;2 compiler assigned registers:
                                    1- 1296     ;   r0x101F
                                    1- 1297     ;   r0x1020
                                    1- 1298     ;; Starting pCode block
                                    1- 1299     .segment "code"; module=main, function=_delay
                                    1- 1301     ;local variable name mapping:
     0000                           1- 1304     _delay:
                                    1- 1305     ; 2 exit points
                                    1- 1306     	.line	628, "main.c"; 	void delay(u8t time)
                                    1- 1307     	BANKSEL	r0x101F
     0000 00rr                      1- 1308     	MOVAR	r0x101F
                                    1- 1309     	.line	630, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1310     	BANKSEL	r0x1020
     0001 02rr                      1- 1311     	CLRR	r0x1020
     0002                           1- 1312     _00468_DS_:
                                    1- 1313     	BANKSEL	r0x101F
     0002 01rr                      1- 1314     	MOVR	r0x101F,W
                                    1- 1315     	BANKSEL	r0x1020
     0003 04rr                      1- 1316     	SUBAR	r0x1020,W
     0004 0C03                      1- 1317     	BTRSC	STATUS,0
     0005 3rrr                      1- 1318     	LGOTO	_00470_DS_
                                    1- 1319     	.line	631, "main.c"; 	NOP();
     0006 0000                      1- 1320     	nop
                                    1- 1321     	.line	630, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1322     	BANKSEL	r0x1020
     0007 05rr                      1- 1323     	INCR	r0x1020,F
     0008 3rrr                      1- 1324     	LGOTO	_00468_DS_
     0009                           1- 1325     _00470_DS_:
                                    1- 1326     	.line	632, "main.c"; 	}
                                    1- 1327     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1- 1328     ; exit point of _delay
                                    1- 1330     ;***
                                    1- 1331     ;  pBlock Stats: dbName = C
                                    1- 1332     ;***
                                    1- 1333     ;has an exit
                                    1- 1334     ;functions called:
                                    1- 1335     ;   _pwmStop
                                    1- 1336     ;   _LedInput
                                    1- 1337     ;   _LEDLOFF
                                    1- 1338     ;   _LEDHON
                                    1- 1339     ;   _LEDHOFF
                                    1- 1340     ;   _LEDHOFF
                                    1- 1341     ;   _LEDLOFF
                                    1- 1342     ;   _pwmStop
                                    1- 1343     ;   _LedInput
                                    1- 1344     ;   _LEDLOFF
                                    1- 1345     ;   _LEDHON
                                    1- 1346     ;   _LEDHOFF
                                    1- 1347     ;   _LEDHOFF
                                    1- 1348     ;   _LEDLOFF
                                    1- 1349     ;; Starting pCode block
                                    1- 1350     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1352     _chrgCtr:
                                    1- 1353     ; 2 exit points
                                    1- 1354     	.line	588, "main.c"; 	if(PORTA & 0x20)
                                    1- 1355     	BANKSEL	_PORTA
     0000 0Arr                      1- 1356     	BTRSS	_PORTA,5
     0001 3rrr                      1- 1357     	LGOTO	_00459_DS_
                                    1- 1358     	.line	591, "main.c"; 	chrgFlag = 1;
                                    1- 1359     	BANKSEL	_Status
     0002 19rr                      1- 1360     	BSR	_Status,3
                                    1- 1361     	.line	592, "main.c"; 	workStartFlag = 0;
                                    1- 1362     	BANKSEL	_workStartFlag
     0003 02rr                      1- 1363     	CLRR	_workStartFlag
                                    1- 1364     	.line	593, "main.c"; 	workStep = 0;
                                    1- 1365     	BANKSEL	_workStep
     0004 02rr                      1- 1366     	CLRR	_workStep
                                    1- 1367     	.line	594, "main.c"; 	ledStep = 0;
                                    1- 1368     	BANKSEL	_ledStep
     0005 02rr                      1- 1369     	CLRR	_ledStep
                                    1- 1370     	.line	595, "main.c"; 	pwmStop();
     0006 2rrr                      1- 1371     	LCALL	_pwmStop
                                    1- 1372     	.line	596, "main.c"; 	LedInput();
     0007 2rrr                      1- 1373     	LCALL	_LedInput
                                    1- 1374     	.line	597, "main.c"; 	PORTB &= 0xFD;
     0008 1Crr                      1- 1375     	BCR	_PORTB,1
                                    1- 1376     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1377     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 1378     	.line	598, "main.c"; 	if(pwStep > 5)
     0009 2106                      1- 1379     	MOVIA	0x06
                                    1- 1380     	BANKSEL	_pwStep
     000A 04rr                      1- 1381     	SUBAR	_pwStep,W
     000B 0803                      1- 1382     	BTRSS	STATUS,0
     000C 3rrr                      1- 1383     	LGOTO	_00454_DS_
                                    1- 1384     	.line	601, "main.c"; 	LEDLOFF();
     000D 2rrr                      1- 1385     	LCALL	_LEDLOFF
                                    1- 1386     	.line	602, "main.c"; 	LEDHON();
     000E 2rrr                      1- 1387     	LCALL	_LEDHON
     000F 3rrr                      1- 1388     	LGOTO	_00461_DS_
     0010                           1- 1389     _00454_DS_:
                                    1- 1390     	.line	606, "main.c"; 	if(pwStep == 6)
                                    1- 1391     	BANKSEL	_pwStep
     0010 01rr                      1- 1392     	MOVR	_pwStep,W
     0011 2406                      1- 1393     	XORIA	0x06
     0012 0903                      1- 1394     	BTRSS	STATUS,2
     0013 3rrr                      1- 1395     	LGOTO	_00452_DS_
                                    1- 1396     	.line	608, "main.c"; 	pwStep = 5;
     0014 2105                      1- 1397     	MOVIA	0x05
     0015 00rr                      1- 1398     	MOVAR	_pwStep
     0016                           1- 1399     _00452_DS_:
                                    1- 1400     	.line	610, "main.c"; 	LEDHOFF();
     0016 2rrr                      1- 1401     	LCALL	_LEDHOFF
                                    1- 1402     	.line	611, "main.c"; 	PORTA ^= 0x08;
     0017 2108                      1- 1403     	MOVIA	0x08
                                    1- 1404     	BANKSEL	_PORTA
     0018 12rr                      1- 1405     	XORAR	_PORTA,F
     0019 3rrr                      1- 1406     	LGOTO	_00461_DS_
     001A                           1- 1407     _00459_DS_:
                                    1- 1408     	.line	616, "main.c"; 	chrgFlag = 0;
                                    1- 1409     	BANKSEL	_Status
     001A 1Drr                      1- 1410     	BCR	_Status,3
                                    1- 1411     	.line	617, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 1412     	BANKSEL	_chrgTime
     001B 02rr                      1- 1413     	CLRR	_chrgTime
     001C 02rr                      1- 1414     	CLRR	(_chrgTime + 1)
                                    1- 1415     	.line	618, "main.c"; 	if(workStartFlag == 0)
                                    1- 1416     	BANKSEL	_workStartFlag
     001D 01rr                      1- 1417     	MOVR	_workStartFlag,W
     001E 0903                      1- 1418     	BTRSS	STATUS,2
     001F 3rrr                      1- 1419     	LGOTO	_00461_DS_
                                    1- 1420     	.line	620, "main.c"; 	LEDHOFF();
     0020 2rrr                      1- 1421     	LCALL	_LEDHOFF
                                    1- 1422     	.line	621, "main.c"; 	LEDLOFF();	
     0021 2rrr                      1- 1423     	LCALL	_LEDLOFF
     0022                           1- 1424     _00461_DS_:
                                    1- 1425     	.line	625, "main.c"; 	}
                                    1- 1426     	RETURN	
     0022 0010                      3-   26 m1      ret
                                    1- 1427     ; exit point of _chrgCtr
                                    1- 1429     ;***
                                    1- 1430     ;  pBlock Stats: dbName = C
                                    1- 1431     ;***
                                    1- 1432     ;has an exit
                                    1- 1433     ;1 compiler assigned register :
                                    1- 1434     ;   r0x102C
                                    1- 1435     ;; Starting pCode block
                                    1- 1436     .segment "code"; module=main, function=_keyRead
                                    1- 1438     ;local variable name mapping:
     0000                           1- 1440     _keyRead:
                                    1- 1441     ; 2 exit points
                                    1- 1442     	.line	551, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1443     	BANKSEL	r0x102C
     0000 00rr                      1- 1444     	MOVAR	r0x102C
                                    1- 1445     	.line	553, "main.c"; 	if(keyStatus)
     0001 01rr                      1- 1446     	MOVR	r0x102C,W
     0002 0D03                      1- 1447     	BTRSC	STATUS,2
     0003 3rrr                      1- 1448     	LGOTO	_00444_DS_
                                    1- 1449     	.line	555, "main.c"; 	keyCount++;
                                    1- 1450     	BANKSEL	_keyCount
     0004 05rr                      1- 1451     	INCR	_keyCount,F
                                    1- 1452     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1453     	.line	556, "main.c"; 	if(keyCount >= 200)
     0005 21C8                      1- 1454     	MOVIA	0xc8
     0006 04rr                      1- 1455     	SUBAR	_keyCount,W
     0007 0803                      1- 1456     	BTRSS	STATUS,0
     0008 3rrr                      1- 1457     	LGOTO	_00445_DS_
                                    1- 1458     	.line	558, "main.c"; 	keyCount = 200;
     0009 21C8                      1- 1459     	MOVIA	0xc8
     000A 00rr                      1- 1460     	MOVAR	_keyCount
                                    1- 1461     	.line	559, "main.c"; 	if(!longPressFlag)
                                    1- 1462     	BANKSEL	_Status
     000B 0Crr                      1- 1463     	BTRSC	_Status,1
     000C 3rrr                      1- 1464     	LGOTO	_00445_DS_
                                    1- 1465     	.line	561, "main.c"; 	longPressFlag = 1;
     000D 18rr                      1- 1466     	BSR	_Status,1
                                    1- 1467     	.line	562, "main.c"; 	return 2;
     000E 2102                      1- 1468     	MOVIA	0x02
     000F 3rrr                      1- 1469     	LGOTO	_00446_DS_
                                    1- 1470     ;;unsigned compare: left < lit (0xC8=200), size=1
     0010                           1- 1471     _00444_DS_:
                                    1- 1472     	.line	568, "main.c"; 	if(keyCount >= 200)
     0010 21C8                      1- 1473     	MOVIA	0xc8
                                    1- 1474     	BANKSEL	_keyCount
     0011 04rr                      1- 1475     	SUBAR	_keyCount,W
     0012 0803                      1- 1476     	BTRSS	STATUS,0
     0013 3rrr                      1- 1477     	LGOTO	_00441_DS_
                                    1- 1478     	.line	570, "main.c"; 	keyCount = 0;
     0014 02rr                      1- 1479     	CLRR	_keyCount
                                    1- 1480     	.line	571, "main.c"; 	longPressFlag = 0;
                                    1- 1481     	BANKSEL	_Status
     0015 1Crr                      1- 1482     	BCR	_Status,1
                                    1- 1483     	.line	572, "main.c"; 	return	0;
     0016 2100                      1- 1484     	MOVIA	0x00
     0017 3rrr                      1- 1485     	LGOTO	_00446_DS_
                                    1- 1486     ;;unsigned compare: left < lit (0x8=8), size=1
     0018                           1- 1487     _00441_DS_:
                                    1- 1488     	.line	574, "main.c"; 	else if(keyCount >= 8)
     0018 2108                      1- 1489     	MOVIA	0x08
                                    1- 1490     	BANKSEL	_keyCount
     0019 04rr                      1- 1491     	SUBAR	_keyCount,W
     001A 0803                      1- 1492     	BTRSS	STATUS,0
     001B 3rrr                      1- 1493     	LGOTO	_00442_DS_
                                    1- 1494     	.line	576, "main.c"; 	keyCount = 0;
     001C 02rr                      1- 1495     	CLRR	_keyCount
                                    1- 1496     	.line	577, "main.c"; 	return	1;
     001D 2101                      1- 1497     	MOVIA	0x01
     001E 3rrr                      1- 1498     	LGOTO	_00446_DS_
     001F                           1- 1499     _00442_DS_:
                                    1- 1500     	.line	579, "main.c"; 	keyCount = 0;
                                    1- 1501     	BANKSEL	_keyCount
     001F 02rr                      1- 1502     	CLRR	_keyCount
     0020                           1- 1503     _00445_DS_:
                                    1- 1504     	.line	581, "main.c"; 	return 0;
     0020 2100                      1- 1505     	MOVIA	0x00
     0021                           1- 1506     _00446_DS_:
                                    1- 1507     	.line	582, "main.c"; 	}
                                    1- 1508     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1- 1509     ; exit point of _keyRead
                                    1- 1511     ;***
                                    1- 1512     ;  pBlock Stats: dbName = C
                                    1- 1513     ;***
                                    1- 1514     ;has an exit
                                    1- 1515     ;functions called:
                                    1- 1516     ;   _LedInput
                                    1- 1517     ;   _pwmStop
                                    1- 1518     ;   _LedInput
                                    1- 1519     ;   _pwmStop
                                    1- 1520     ;; Starting pCode block
                                    1- 1521     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1523     _gotoSleep:
                                    1- 1524     ; 2 exit points
                                    1- 1525     	.line	527, "main.c"; 	LedInput();
     0000 2rrr                      1- 1526     	LCALL	_LedInput
                                    1- 1527     	.line	528, "main.c"; 	sleepTime = 0;
                                    1- 1528     	BANKSEL	_sleepTime
     0001 02rr                      1- 1529     	CLRR	_sleepTime
     0002 02rr                      1- 1530     	CLRR	(_sleepTime + 1)
                                    1- 1531     	.line	530, "main.c"; 	pwmStop();
     0003 2rrr                      1- 1532     	LCALL	_pwmStop
                                    1- 1533     	.line	531, "main.c"; 	workStep = 0;
                                    1- 1534     	BANKSEL	_workStep
     0004 02rr                      1- 1535     	CLRR	_workStep
                                    1- 1536     	.line	532, "main.c"; 	AWUCON = 0x60;
     0005 2160                      1- 1537     	MOVIA	0x60
     0006 00rr                      1- 1538     	MOVAR	_AWUCON
                                    1- 1539     	.line	533, "main.c"; 	fgPRD = 0;
                                    1- 1540     	BANKSEL	_fgPRD
     0007 02rr                      1- 1541     	CLRR	_fgPRD
     0008 02rr                      1- 1542     	CLRR	(_fgPRD + 1)
                                    1- 1543     	.line	534, "main.c"; 	fgCount = 0;
                                    1- 1544     	BANKSEL	_fgCount
     0009 02rr                      1- 1545     	CLRR	_fgCount
     000A 02rr                      1- 1546     	CLRR	(_fgCount + 1)
                                    1- 1547     	.line	535, "main.c"; 	redLedFlag = 0;
                                    1- 1548     	BANKSEL	_Status
     000B 1Drr                      1- 1549     	BCR	_Status,2
                                    1- 1550     	.line	536, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     000C 210B                      1- 1551     	MOVIA	0x0b
     000D 00rr                      1- 1552     	MOVAR	_INTE
                                    1- 1553     	.line	537, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     000E 2118                      1- 1554     	MOVIA	0x18
     000F 00rr                      1- 1555     	MOVAR	_PCON
                                    1- 1556     	.line	538, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0010 02rr                      1- 1557     	CLRR	_INTF
                                    1- 1558     	.line	539, "main.c"; 	CLRWDT();
     0011 0002                      1- 1559     	clrwdt
                                    1- 1560     	.line	540, "main.c"; 	ENI();
     0012 0004                      1- 1561     	ENI
                                    1- 1562     	.line	541, "main.c"; 	SLEEP();
     0013 0001                      1- 1563     	sleep
                                    1- 1564     	.line	542, "main.c"; 	AWUCON = 0x00;
     0014 02rr                      1- 1565     	CLRR	_AWUCON
                                    1- 1566     	.line	543, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0015 2101                      1- 1567     	MOVIA	0x01
     0016 00rr                      1- 1568     	MOVAR	_INTE
                                    1- 1569     	.line	544, "main.c"; 	INTF = 0;
     0017 02rr                      1- 1570     	CLRR	_INTF
                                    1- 1571     	.line	546, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 21B8                      1- 1572     	MOVIA	0xb8
     0019 00rr                      1- 1573     	MOVAR	_PCON
                                    1- 1574     	.line	548, "main.c"; 	}
                                    1- 1575     	RETURN	
     001A 0010                      3-   26 m1      ret
                                    1- 1576     ; exit point of _gotoSleep
                                    1- 1578     ;***
                                    1- 1579     ;  pBlock Stats: dbName = C
                                    1- 1580     ;***
                                    1- 1581     ;has an exit
                                    1- 1582     ;functions called:
                                    1- 1583     ;   _pwmStop
                                    1- 1584     ;   _LEDHOFF
                                    1- 1585     ;   _LEDLOFF
                                    1- 1586     ;   _pwmStop
                                    1- 1587     ;   _LEDHOFF
                                    1- 1588     ;   _LEDLOFF
                                    1- 1589     ;; Starting pCode block
                                    1- 1590     .segment "code"; module=main, function=_powerOff
     0000                           1- 1592     _powerOff:
                                    1- 1593     ; 2 exit points
                                    1- 1594     	.line	517, "main.c"; 	workStep = 0;
                                    1- 1595     	BANKSEL	_workStep
     0000 02rr                      1- 1596     	CLRR	_workStep
                                    1- 1597     	.line	518, "main.c"; 	pwmStop();
     0001 2rrr                      1- 1598     	LCALL	_pwmStop
                                    1- 1599     	.line	519, "main.c"; 	LEDHOFF();
     0002 2rrr                      1- 1600     	LCALL	_LEDHOFF
                                    1- 1601     	.line	520, "main.c"; 	LEDLOFF();
     0003 2rrr                      1- 1602     	LCALL	_LEDLOFF
                                    1- 1603     	.line	521, "main.c"; 	ledStep = 5;
     0004 2105                      1- 1604     	MOVIA	0x05
                                    1- 1605     	BANKSEL	_ledStep
     0005 00rr                      1- 1606     	MOVAR	_ledStep
                                    1- 1607     	.line	522, "main.c"; 	workStartFlag = 2;
     0006 2102                      1- 1608     	MOVIA	0x02
                                    1- 1609     	BANKSEL	_workStartFlag
     0007 00rr                      1- 1610     	MOVAR	_workStartFlag
                                    1- 1611     	.line	523, "main.c"; 	}
                                    1- 1612     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1- 1613     ; exit point of _powerOff
                                    1- 1615     ;***
                                    1- 1616     ;  pBlock Stats: dbName = C
                                    1- 1617     ;***
                                    1- 1618     ;has an exit
                                    1- 1619     ;functions called:
                                    1- 1620     ;   _keyRead
                                    1- 1621     ;   _pwmInit
                                    1- 1622     ;   _powerOff
                                    1- 1623     ;   _pwmInit
                                    1- 1624     ;   _keyRead
                                    1- 1625     ;   _pwmInit
                                    1- 1626     ;   _powerOff
                                    1- 1627     ;   _pwmInit
                                    1- 1628     ;1 compiler assigned register :
                                    1- 1629     ;   r0x102E
                                    1- 1630     ;; Starting pCode block
                                    1- 1631     .segment "code"; module=main, function=_keyCtr
                                    1- 1633     ;local variable name mapping:
     0000                           1- 1635     _keyCtr:
                                    1- 1636     ; 2 exit points
                                    1- 1637     	.line	462, "main.c"; 	if(workStep > 0)
                                    1- 1638     	BANKSEL	_workStep
     0000 01rr                      1- 1639     	MOVR	_workStep,W
     0001 0D03                      1- 1640     	BTRSC	STATUS,2
     0002 3rrr                      1- 1641     	LGOTO	_00395_DS_
                                    1- 1642     	.line	464, "main.c"; 	PORTB |= 0x02;
     0003 18rr                      1- 1643     	BSR	_PORTB,1
     0004 3rrr                      1- 1644     	LGOTO	_00396_DS_
     0005                           1- 1645     _00395_DS_:
                                    1- 1646     	.line	468, "main.c"; 	PORTB &= 0xFD;
     0005 1Crr                      1- 1647     	BCR	_PORTB,1
     0006                           1- 1648     _00396_DS_:
                                    1- 1649     	.line	471, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 1650     	BANKSEL	_PORTA
     0006 07rr                      1- 1651     	COMR	_PORTA,W
                                    1- 1652     	BANKSEL	r0x102E
     0007 00rr                      1- 1653     	MOVAR	r0x102E
     0008 2140                      1- 1654     	MOVIA	0x40
     0009 10rr                      1- 1655     	ANDAR	r0x102E,F
     000A 01rr                      1- 1656     	MOVR	r0x102E,W
     000B 2rrr                      1- 1657     	LCALL	_keyRead
                                    1- 1658     	BANKSEL	r0x102E
     000C 00rr                      1- 1659     	MOVAR	r0x102E
                                    1- 1660     	.line	472, "main.c"; 	if(kclick == 1 && workStep > 0)
     000D 2401                      1- 1661     	XORIA	0x01
     000E 0903                      1- 1662     	BTRSS	STATUS,2
     000F 3rrr                      1- 1663     	LGOTO	_00418_DS_
                                    1- 1664     	BANKSEL	_workStep
     0010 01rr                      1- 1665     	MOVR	_workStep,W
     0011 0D03                      1- 1666     	BTRSC	STATUS,2
     0012 3rrr                      1- 1667     	LGOTO	_00418_DS_
                                    1- 1668     	.line	474, "main.c"; 	count500ms = 0;
                                    1- 1669     	BANKSEL	_count500ms
     0013 02rr                      1- 1670     	CLRR	_count500ms
                                    1- 1671     	.line	475, "main.c"; 	if(workStep > 0)
                                    1- 1672     	BANKSEL	_workStep
     0014 01rr                      1- 1673     	MOVR	_workStep,W
     0015 0D03                      1- 1674     	BTRSC	STATUS,2
     0016 3rrr                      1- 1675     	LGOTO	_00400_DS_
                                    1- 1676     	.line	477, "main.c"; 	if(++workStep > 4)
     0017 05rr                      1- 1677     	INCR	_workStep,F
                                    1- 1678     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1679     ;;unsigned compare: left >= lit (0x5=5), size=1
     0018 2105                      1- 1680     	MOVIA	0x05
     0019 04rr                      1- 1681     	SUBAR	_workStep,W
     001A 0803                      1- 1682     	BTRSS	STATUS,0
     001B 3rrr                      1- 1683     	LGOTO	_00400_DS_
                                    1- 1684     	.line	478, "main.c"; 	workStep = 1;
     001C 2101                      1- 1685     	MOVIA	0x01
     001D 00rr                      1- 1686     	MOVAR	_workStep
     001E                           1- 1687     _00400_DS_:
                                    1- 1688     	.line	480, "main.c"; 	duty = 1;
     001E 2101                      1- 1689     	MOVIA	0x01
                                    1- 1690     	BANKSEL	_duty
     001F 00rr                      1- 1691     	MOVAR	_duty
     0020 02rr                      1- 1692     	CLRR	(_duty + 1)
                                    1- 1693     	.line	481, "main.c"; 	fgCount = 0;
                                    1- 1694     	BANKSEL	_fgCount
     0021 02rr                      1- 1695     	CLRR	_fgCount
     0022 02rr                      1- 1696     	CLRR	(_fgCount + 1)
                                    1- 1697     	.line	482, "main.c"; 	workStartFlag = 0;
                                    1- 1698     	BANKSEL	_workStartFlag
     0023 02rr                      1- 1699     	CLRR	_workStartFlag
                                    1- 1700     	.line	483, "main.c"; 	if(workStep == 1)
                                    1- 1701     	BANKSEL	_workStep
     0024 01rr                      1- 1702     	MOVR	_workStep,W
     0025 2401                      1- 1703     	XORIA	0x01
     0026 0903                      1- 1704     	BTRSS	STATUS,2
     0027 3rrr                      1- 1705     	LGOTO	_00410_DS_
                                    1- 1706     	.line	484, "main.c"; 	maxDuty = 37;
     0028 2125                      1- 1707     	MOVIA	0x25
                                    1- 1708     	BANKSEL	_maxDuty
     0029 00rr                      1- 1709     	MOVAR	_maxDuty
     002A 3rrr                      1- 1710     	LGOTO	_00411_DS_
     002B                           1- 1711     _00410_DS_:
                                    1- 1712     	.line	485, "main.c"; 	else if(workStep == 2)
                                    1- 1713     	BANKSEL	_workStep
     002B 01rr                      1- 1714     	MOVR	_workStep,W
     002C 2402                      1- 1715     	XORIA	0x02
     002D 0903                      1- 1716     	BTRSS	STATUS,2
     002E 3rrr                      1- 1717     	LGOTO	_00407_DS_
                                    1- 1718     	.line	486, "main.c"; 	maxDuty = 18;
     002F 2112                      1- 1719     	MOVIA	0x12
                                    1- 1720     	BANKSEL	_maxDuty
     0030 00rr                      1- 1721     	MOVAR	_maxDuty
     0031 3rrr                      1- 1722     	LGOTO	_00411_DS_
     0032                           1- 1723     _00407_DS_:
                                    1- 1724     	.line	487, "main.c"; 	else if(workStep == 3)
                                    1- 1725     	BANKSEL	_workStep
     0032 01rr                      1- 1726     	MOVR	_workStep,W
     0033 2403                      1- 1727     	XORIA	0x03
     0034 0903                      1- 1728     	BTRSS	STATUS,2
     0035 3rrr                      1- 1729     	LGOTO	_00404_DS_
                                    1- 1730     	.line	488, "main.c"; 	maxDuty = 13;
     0036 210D                      1- 1731     	MOVIA	0x0d
                                    1- 1732     	BANKSEL	_maxDuty
     0037 00rr                      1- 1733     	MOVAR	_maxDuty
     0038 3rrr                      1- 1734     	LGOTO	_00411_DS_
     0039                           1- 1735     _00404_DS_:
                                    1- 1736     	.line	489, "main.c"; 	else if(workStep == 4)
                                    1- 1737     	BANKSEL	_workStep
     0039 01rr                      1- 1738     	MOVR	_workStep,W
     003A 2404                      1- 1739     	XORIA	0x04
     003B 0903                      1- 1740     	BTRSS	STATUS,2
     003C 3rrr                      1- 1741     	LGOTO	_00411_DS_
                                    1- 1742     	.line	490, "main.c"; 	maxDuty = 1;
     003D 2101                      1- 1743     	MOVIA	0x01
                                    1- 1744     	BANKSEL	_maxDuty
     003E 00rr                      1- 1745     	MOVAR	_maxDuty
     003F                           1- 1746     _00411_DS_:
                                    1- 1747     	.line	491, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1748     	BANKSEL	_maxDuty
     003F 01rr                      1- 1749     	MOVR	_maxDuty,W
     0040 00rr                      1- 1750     	SFUN	_PWM2DUTY
                                    1- 1751     	.line	492, "main.c"; 	pwmInit();
     0041 2rrr                      1- 1752     	LCALL	_pwmInit
     0042 3rrr                      1- 1753     	LGOTO	_00421_DS_
     0043                           1- 1754     _00418_DS_:
                                    1- 1755     	.line	494, "main.c"; 	else if(kclick == 2)
                                    1- 1756     	BANKSEL	r0x102E
     0043 01rr                      1- 1757     	MOVR	r0x102E,W
     0044 2402                      1- 1758     	XORIA	0x02
     0045 0903                      1- 1759     	BTRSS	STATUS,2
     0046 3rrr                      1- 1760     	LGOTO	_00421_DS_
                                    1- 1761     	.line	496, "main.c"; 	if(workStep > 0)
                                    1- 1762     	BANKSEL	_workStep
     0047 01rr                      1- 1763     	MOVR	_workStep,W
     0048 0D03                      1- 1764     	BTRSC	STATUS,2
     0049 3rrr                      1- 1765     	LGOTO	_00413_DS_
                                    1- 1766     	.line	498, "main.c"; 	powerOff();
     004A 2rrr                      1- 1767     	LCALL	_powerOff
     004B 3rrr                      1- 1768     	LGOTO	_00421_DS_
     004C                           1- 1769     _00413_DS_:
                                    1- 1770     	.line	502, "main.c"; 	workStartFlag = 1;
     004C 2101                      1- 1771     	MOVIA	0x01
                                    1- 1772     	BANKSEL	_workStartFlag
     004D 00rr                      1- 1773     	MOVAR	_workStartFlag
                                    1- 1774     	.line	503, "main.c"; 	maxDuty = 37;
     004E 2125                      1- 1775     	MOVIA	0x25
                                    1- 1776     	BANKSEL	_maxDuty
     004F 00rr                      1- 1777     	MOVAR	_maxDuty
                                    1- 1778     	.line	504, "main.c"; 	workStep = 1;
     0050 2101                      1- 1779     	MOVIA	0x01
                                    1- 1780     	BANKSEL	_workStep
     0051 00rr                      1- 1781     	MOVAR	_workStep
                                    1- 1782     	.line	505, "main.c"; 	ledStep = 0;
                                    1- 1783     	BANKSEL	_ledStep
     0052 02rr                      1- 1784     	CLRR	_ledStep
                                    1- 1785     	.line	506, "main.c"; 	count500ms = 0;
                                    1- 1786     	BANKSEL	_count500ms
     0053 02rr                      1- 1787     	CLRR	_count500ms
                                    1- 1788     	.line	507, "main.c"; 	pwmInit();
     0054 2rrr                      1- 1789     	LCALL	_pwmInit
                                    1- 1790     	.line	508, "main.c"; 	duty = 1;
     0055 2101                      1- 1791     	MOVIA	0x01
                                    1- 1792     	BANKSEL	_duty
     0056 00rr                      1- 1793     	MOVAR	_duty
     0057 02rr                      1- 1794     	CLRR	(_duty + 1)
                                    1- 1795     	.line	509, "main.c"; 	fgCount = 0;
                                    1- 1796     	BANKSEL	_fgCount
     0058 02rr                      1- 1797     	CLRR	_fgCount
     0059 02rr                      1- 1798     	CLRR	(_fgCount + 1)
     005A                           1- 1799     _00421_DS_:
                                    1- 1800     	.line	513, "main.c"; 	}
                                    1- 1801     	RETURN	
     005A 0010                      3-   26 m1      ret
                                    1- 1802     ; exit point of _keyCtr
                                    1- 1804     ;***
                                    1- 1805     ;  pBlock Stats: dbName = C
                                    1- 1806     ;***
                                    1- 1807     ;functions called:
                                    1- 1808     ;   _pwmInit
                                    1- 1809     ;   _pwmInit
                                    1- 1810     ;; Starting pCode block
                                    1- 1811     .segment "code"; module=main, function=_ledCtr
     0000                           1- 1813     _ledCtr:
                                    1- 1814     ; 0 exit points
                                    1- 1815     	.line	431, "main.c"; 	if(workStartFlag == 1)
                                    1- 1816     	BANKSEL	_workStartFlag
     0000 01rr                      1- 1817     	MOVR	_workStartFlag,W
     0001 2401                      1- 1818     	XORIA	0x01
     0002 0903                      1- 1819     	BTRSS	STATUS,2
     0003 3rrr                      1- 1820     	LGOTO	_00387_DS_
                                    1- 1821     	.line	434, "main.c"; 	if(++ledStep > 4)
                                    1- 1822     	BANKSEL	_ledStep
     0004 05rr                      1- 1823     	INCR	_ledStep,F
                                    1- 1824     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1825     ;;unsigned compare: left >= lit (0x5=5), size=1
     0005 2105                      1- 1826     	MOVIA	0x05
     0006 04rr                      1- 1827     	SUBAR	_ledStep,W
     0007 0803                      1- 1828     	BTRSS	STATUS,0
     0008 3rrr                      1- 1829     	LGOTO	_00389_DS_
                                    1- 1830     	.line	436, "main.c"; 	ledStep = workStep;
                                    1- 1831     	BANKSEL	_workStep
     0009 01rr                      1- 1832     	MOVR	_workStep,W
                                    1- 1833     	BANKSEL	_ledStep
     000A 00rr                      1- 1834     	MOVAR	_ledStep
                                    1- 1835     	.line	437, "main.c"; 	workStartFlag = 3;
     000B 2103                      1- 1836     	MOVIA	0x03
                                    1- 1837     	BANKSEL	_workStartFlag
     000C 00rr                      1- 1838     	MOVAR	_workStartFlag
     000D 3rrr                      1- 1839     	LGOTO	_00389_DS_
     000E                           1- 1840     _00387_DS_:
                                    1- 1841     	.line	441, "main.c"; 	else if(workStartFlag == 2)
                                    1- 1842     	BANKSEL	_workStartFlag
     000E 01rr                      1- 1843     	MOVR	_workStartFlag,W
     000F 2402                      1- 1844     	XORIA	0x02
     0010 0903                      1- 1845     	BTRSS	STATUS,2
     0011 3rrr                      1- 1846     	LGOTO	_00384_DS_
                                    1- 1847     	.line	443, "main.c"; 	if(ledStep > 0)
                                    1- 1848     	BANKSEL	_ledStep
     0012 01rr                      1- 1849     	MOVR	_ledStep,W
     0013 0D03                      1- 1850     	BTRSC	STATUS,2
     0014 3rrr                      1- 1851     	LGOTO	_00389_DS_
                                    1- 1852     	.line	445, "main.c"; 	ledStep--;
     0015 17rr                      1- 1853     	DECRSZ	_ledStep,F
                                    1- 1854     	.line	446, "main.c"; 	if(ledStep == 0)
     0016 3rrr                      1- 1855     	LGOTO	_00389_DS_
                                    1- 1856     	.line	447, "main.c"; 	workStartFlag = 0;
                                    1- 1857     	BANKSEL	_workStartFlag
     0017 02rr                      1- 1858     	CLRR	_workStartFlag
     0018 3rrr                      1- 1859     	LGOTO	_00389_DS_
     0019                           1- 1860     _00384_DS_:
                                    1- 1861     	.line	452, "main.c"; 	ledStep = workStep;
                                    1- 1862     	BANKSEL	_workStep
     0019 01rr                      1- 1863     	MOVR	_workStep,W
                                    1- 1864     	BANKSEL	_ledStep
     001A 00rr                      1- 1865     	MOVAR	_ledStep
                                    1- 1866     	.line	453, "main.c"; 	if(workStep)
                                    1- 1867     	BANKSEL	_workStep
     001B 01rr                      1- 1868     	MOVR	_workStep,W
     001C 0903                      1- 1869     	BTRSS	STATUS,2
                                    1- 1870     	.line	454, "main.c"; 	pwmInit();
     001D 2rrr                      1- 1871     	LCALL	_pwmInit
     001E                           1- 1872     _00389_DS_:
                                    1- 1873     	.line	457, "main.c"; 	}
                                    1- 1874     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1- 1876     ;***
                                    1- 1877     ;  pBlock Stats: dbName = C
                                    1- 1878     ;***
                                    1- 1879     ;has an exit
                                    1- 1880     ;functions called:
                                    1- 1881     ;   _LEDLON
                                    1- 1882     ;   _LEDHON
                                    1- 1883     ;   _LEDHOFF
                                    1- 1884     ;   _LEDLOFF
                                    1- 1885     ;   _LEDHON
                                    1- 1886     ;   _LEDHOFF
                                    1- 1887     ;   _LEDLOFF
                                    1- 1888     ;   _LEDHON
                                    1- 1889     ;   _LEDLOFF
                                    1- 1890     ;   _LEDHOFF
                                    1- 1891     ;   _LEDLON
                                    1- 1892     ;   _LEDHON
                                    1- 1893     ;   _LEDHOFF
                                    1- 1894     ;   _LEDLOFF
                                    1- 1895     ;   _LEDHON
                                    1- 1896     ;   _LEDHOFF
                                    1- 1897     ;   _LEDLOFF
                                    1- 1898     ;   _LEDHON
                                    1- 1899     ;   _LEDLOFF
                                    1- 1900     ;   _LEDHOFF
                                    1- 1901     ;; Starting pCode block
                                    1- 1902     .segment "code"; module=main, function=_LedCtr2
     0000                           1- 1904     _LedCtr2:
                                    1- 1905     ; 2 exit points
                                    1- 1906     	.line	382, "main.c"; 	if(++startStep > 6)
                                    1- 1907     	BANKSEL	_startStep
     0000 05rr                      1- 1908     	INCR	_startStep,F
                                    1- 1909     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1910     ;;unsigned compare: left >= lit (0x7=7), size=1
     0001 2107                      1- 1911     	MOVIA	0x07
     0002 04rr                      1- 1912     	SUBAR	_startStep,W
     0003 0803                      1- 1913     	BTRSS	STATUS,0
     0004 3rrr                      1- 1914     	LGOTO	_00344_DS_
                                    1- 1915     	.line	384, "main.c"; 	workStartFlag = 0;
                                    1- 1916     	BANKSEL	_workStartFlag
     0005 02rr                      1- 1917     	CLRR	_workStartFlag
                                    1- 1918     	.line	385, "main.c"; 	startStep = 0;
                                    1- 1919     	BANKSEL	_startStep
     0006 02rr                      1- 1920     	CLRR	_startStep
                                    1- 1921     	.line	386, "main.c"; 	ledStep = workStep;
                                    1- 1922     	BANKSEL	_workStep
     0007 01rr                      1- 1923     	MOVR	_workStep,W
                                    1- 1924     	BANKSEL	_ledStep
     0008 00rr                      1- 1925     	MOVAR	_ledStep
                                    1- 1926     	.line	387, "main.c"; 	redLedFlag = 0;
                                    1- 1927     	BANKSEL	_Status
     0009 1Drr                      1- 1928     	BCR	_Status,2
     000A                           1- 1929     _00344_DS_:
                                    1- 1930     	.line	389, "main.c"; 	if(redLedFlag && startStep > 2)
                                    1- 1931     	BANKSEL	_Status
     000A 09rr                      1- 1932     	BTRSS	_Status,2
     000B 3rrr                      1- 1933     	LGOTO	_00346_DS_
                                    1- 1934     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1935     ;;unsigned compare: left >= lit (0x3=3), size=1
     000C 2103                      1- 1936     	MOVIA	0x03
                                    1- 1937     	BANKSEL	_startStep
     000D 04rr                      1- 1938     	SUBAR	_startStep,W
     000E 0C03                      1- 1939     	BTRSC	STATUS,0
                                    1- 1940     	.line	390, "main.c"; 	return;
     000F 3rrr                      1- 1941     	LGOTO	_00370_DS_
     0010                           1- 1942     _00346_DS_:
                                    1- 1943     	.line	392, "main.c"; 	if(startStep == 1)
                                    1- 1944     	BANKSEL	_startStep
     0010 01rr                      1- 1945     	MOVR	_startStep,W
     0011 2401                      1- 1946     	XORIA	0x01
     0012 0903                      1- 1947     	BTRSS	STATUS,2
     0013 3rrr                      1- 1948     	LGOTO	_00368_DS_
                                    1- 1949     	.line	394, "main.c"; 	if(pwStep == 1)
                                    1- 1950     	BANKSEL	_pwStep
     0014 01rr                      1- 1951     	MOVR	_pwStep,W
     0015 2401                      1- 1952     	XORIA	0x01
     0016 0903                      1- 1953     	BTRSS	STATUS,2
     0017 3rrr                      1- 1954     	LGOTO	_00351_DS_
                                    1- 1955     	.line	396, "main.c"; 	LEDLON();
     0018 2rrr                      1- 1956     	LCALL	_LEDLON
                                    1- 1957     	.line	397, "main.c"; 	redLedFlag = 1;
                                    1- 1958     	BANKSEL	_Status
     0019 19rr                      1- 1959     	BSR	_Status,2
     001A 3rrr                      1- 1960     	LGOTO	_00370_DS_
                                    1- 1961     ;;unsigned compare: left < lit (0x2=2), size=1
     001B                           1- 1962     _00351_DS_:
                                    1- 1963     	.line	399, "main.c"; 	else if(pwStep >= 2)
     001B 2102                      1- 1964     	MOVIA	0x02
                                    1- 1965     	BANKSEL	_pwStep
     001C 04rr                      1- 1966     	SUBAR	_pwStep,W
     001D 0803                      1- 1967     	BTRSS	STATUS,0
     001E 3rrr                      1- 1968     	LGOTO	_00370_DS_
                                    1- 1969     	.line	401, "main.c"; 	LEDHON();
     001F 2rrr                      1- 1970     	LCALL	_LEDHON
     0020 3rrr                      1- 1971     	LGOTO	_00370_DS_
     0021                           1- 1972     _00368_DS_:
                                    1- 1973     	.line	404, "main.c"; 	else if(startStep == 2)
                                    1- 1974     	BANKSEL	_startStep
     0021 01rr                      1- 1975     	MOVR	_startStep,W
     0022 2402                      1- 1976     	XORIA	0x02
     0023 0903                      1- 1977     	BTRSS	STATUS,2
     0024 3rrr                      1- 1978     	LGOTO	_00365_DS_
                                    1- 1979     	.line	406, "main.c"; 	LEDHOFF();
     0025 2rrr                      1- 1980     	LCALL	_LEDHOFF
                                    1- 1981     	.line	407, "main.c"; 	LEDLOFF();
     0026 2rrr                      1- 1982     	LCALL	_LEDLOFF
     0027 3rrr                      1- 1983     	LGOTO	_00370_DS_
     0028                           1- 1984     _00365_DS_:
                                    1- 1985     	.line	409, "main.c"; 	else if(startStep == 3 && pwStep >= 3)
                                    1- 1986     	BANKSEL	_startStep
     0028 01rr                      1- 1987     	MOVR	_startStep,W
     0029 2403                      1- 1988     	XORIA	0x03
     002A 0903                      1- 1989     	BTRSS	STATUS,2
     002B 3rrr                      1- 1990     	LGOTO	_00361_DS_
                                    1- 1991     ;;unsigned compare: left < lit (0x3=3), size=1
     002C 2103                      1- 1992     	MOVIA	0x03
                                    1- 1993     	BANKSEL	_pwStep
     002D 04rr                      1- 1994     	SUBAR	_pwStep,W
     002E 0803                      1- 1995     	BTRSS	STATUS,0
     002F 3rrr                      1- 1996     	LGOTO	_00361_DS_
                                    1- 1997     	.line	411, "main.c"; 	LEDHON();
     0030 2rrr                      1- 1998     	LCALL	_LEDHON
     0031 3rrr                      1- 1999     	LGOTO	_00370_DS_
     0032                           1- 2000     _00361_DS_:
                                    1- 2001     	.line	413, "main.c"; 	else if(startStep == 4)
                                    1- 2002     	BANKSEL	_startStep
     0032 01rr                      1- 2003     	MOVR	_startStep,W
     0033 2404                      1- 2004     	XORIA	0x04
     0034 0903                      1- 2005     	BTRSS	STATUS,2
     0035 3rrr                      1- 2006     	LGOTO	_00358_DS_
                                    1- 2007     	.line	415, "main.c"; 	LEDHOFF();
     0036 2rrr                      1- 2008     	LCALL	_LEDHOFF
                                    1- 2009     	.line	416, "main.c"; 	LEDLOFF();
     0037 2rrr                      1- 2010     	LCALL	_LEDLOFF
     0038 3rrr                      1- 2011     	LGOTO	_00370_DS_
     0039                           1- 2012     _00358_DS_:
                                    1- 2013     	.line	418, "main.c"; 	else if(startStep == 5 && pwStep >= 4)
                                    1- 2014     	BANKSEL	_startStep
     0039 01rr                      1- 2015     	MOVR	_startStep,W
     003A 2405                      1- 2016     	XORIA	0x05
     003B 0903                      1- 2017     	BTRSS	STATUS,2
     003C 3rrr                      1- 2018     	LGOTO	_00354_DS_
                                    1- 2019     ;;unsigned compare: left < lit (0x4=4), size=1
     003D 2104                      1- 2020     	MOVIA	0x04
                                    1- 2021     	BANKSEL	_pwStep
     003E 04rr                      1- 2022     	SUBAR	_pwStep,W
     003F 0803                      1- 2023     	BTRSS	STATUS,0
     0040 3rrr                      1- 2024     	LGOTO	_00354_DS_
                                    1- 2025     	.line	420, "main.c"; 	LEDHON();
     0041 2rrr                      1- 2026     	LCALL	_LEDHON
     0042 3rrr                      1- 2027     	LGOTO	_00370_DS_
     0043                           1- 2028     _00354_DS_:
                                    1- 2029     	.line	424, "main.c"; 	LEDLOFF();
     0043 2rrr                      1- 2030     	LCALL	_LEDLOFF
                                    1- 2031     	.line	425, "main.c"; 	LEDHOFF();
     0044 2rrr                      1- 2032     	LCALL	_LEDHOFF
     0045                           1- 2033     _00370_DS_:
                                    1- 2034     	.line	427, "main.c"; 	}
                                    1- 2035     	RETURN	
     0045 0010                      3-   26 m1      ret
                                    1- 2036     ; exit point of _LedCtr2
                                    1- 2038     ;***
                                    1- 2039     ;  pBlock Stats: dbName = C
                                    1- 2040     ;***
                                    1- 2041     ;has an exit
                                    1- 2042     ;1 compiler assigned register :
                                    1- 2043     ;   r0x102F
                                    1- 2044     ;; Starting pCode block
                                    1- 2045     .segment "code"; module=main, function=_workCtr
                                    1- 2047     ;local variable name mapping:
     0000                           1- 2049     _workCtr:
                                    1- 2050     ; 2 exit points
                                    1- 2051     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2052     ;;unsigned compare: left >= lit (0x47=71), size=2
                                    1- 2053     	.line	350, "main.c"; 	if(fgPRD > 70)
     0000 2100                      1- 2054     	MOVIA	0x00
                                    1- 2055     	BANKSEL	_fgPRD
     0001 04rr                      1- 2056     	SUBAR	(_fgPRD + 1),W
     0002 0903                      1- 2057     	BTRSS	STATUS,2
     0003 3rrr                      1- 2058     	LGOTO	_00338_DS_
     0004 2147                      1- 2059     	MOVIA	0x47
     0005 04rr                      1- 2060     	SUBAR	_fgPRD,W
     0006                           1- 2061     _00338_DS_:
     0006 0803                      1- 2062     	BTRSS	STATUS,0
     0007 3rrr                      1- 2063     	LGOTO	_00319_DS_
                                    1- 2064     	.line	353, "main.c"; 	u8t minDuty = 36;
     0008 2124                      1- 2065     	MOVIA	0x24
                                    1- 2066     	BANKSEL	r0x102F
     0009 00rr                      1- 2067     	MOVAR	r0x102F
                                    1- 2068     	.line	354, "main.c"; 	if(workStep == 1)
                                    1- 2069     	BANKSEL	_workStep
     000A 01rr                      1- 2070     	MOVR	_workStep,W
     000B 2401                      1- 2071     	XORIA	0x01
     000C 0903                      1- 2072     	BTRSS	STATUS,2
     000D 3rrr                      1- 2073     	LGOTO	_00316_DS_
                                    1- 2074     	.line	355, "main.c"; 	minDuty = 36;
     000E 2124                      1- 2075     	MOVIA	0x24
                                    1- 2076     	BANKSEL	r0x102F
     000F 00rr                      1- 2077     	MOVAR	r0x102F
     0010 3rrr                      1- 2078     	LGOTO	_00317_DS_
     0011                           1- 2079     _00316_DS_:
                                    1- 2080     	.line	356, "main.c"; 	else if(workStep == 2)
                                    1- 2081     	BANKSEL	_workStep
     0011 01rr                      1- 2082     	MOVR	_workStep,W
     0012 2402                      1- 2083     	XORIA	0x02
     0013 0903                      1- 2084     	BTRSS	STATUS,2
     0014 3rrr                      1- 2085     	LGOTO	_00313_DS_
                                    1- 2086     	.line	357, "main.c"; 	minDuty = 15;
     0015 210F                      1- 2087     	MOVIA	0x0f
                                    1- 2088     	BANKSEL	r0x102F
     0016 00rr                      1- 2089     	MOVAR	r0x102F
     0017 3rrr                      1- 2090     	LGOTO	_00317_DS_
     0018                           1- 2091     _00313_DS_:
                                    1- 2092     	.line	358, "main.c"; 	else if(workStep == 3)
                                    1- 2093     	BANKSEL	_workStep
     0018 01rr                      1- 2094     	MOVR	_workStep,W
     0019 2403                      1- 2095     	XORIA	0x03
     001A 0903                      1- 2096     	BTRSS	STATUS,2
     001B 3rrr                      1- 2097     	LGOTO	_00310_DS_
                                    1- 2098     	.line	359, "main.c"; 	minDuty = 11;
     001C 210B                      1- 2099     	MOVIA	0x0b
                                    1- 2100     	BANKSEL	r0x102F
     001D 00rr                      1- 2101     	MOVAR	r0x102F
     001E 3rrr                      1- 2102     	LGOTO	_00317_DS_
     001F                           1- 2103     _00310_DS_:
                                    1- 2104     	.line	360, "main.c"; 	else if(workStep == 4)
                                    1- 2105     	BANKSEL	_workStep
     001F 01rr                      1- 2106     	MOVR	_workStep,W
     0020 2404                      1- 2107     	XORIA	0x04
     0021 0903                      1- 2108     	BTRSS	STATUS,2
     0022 3rrr                      1- 2109     	LGOTO	_00317_DS_
                                    1- 2110     	.line	361, "main.c"; 	minDuty = 1;
     0023 2101                      1- 2111     	MOVIA	0x01
                                    1- 2112     	BANKSEL	r0x102F
     0024 00rr                      1- 2113     	MOVAR	r0x102F
     0025                           1- 2114     _00317_DS_:
                                    1- 2115     	.line	362, "main.c"; 	PWM2DUTY = minDuty;
                                    1- 2116     	BANKSEL	r0x102F
     0025 01rr                      1- 2117     	MOVR	r0x102F,W
     0026 00rr                      1- 2118     	SFUN	_PWM2DUTY
     0027 3rrr                      1- 2119     	LGOTO	_00321_DS_
     0028                           1- 2120     _00319_DS_:
                                    1- 2121     	.line	375, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2122     	BANKSEL	_maxDuty
     0028 01rr                      1- 2123     	MOVR	_maxDuty,W
     0029 00rr                      1- 2124     	SFUN	_PWM2DUTY
     002A                           1- 2125     _00321_DS_:
                                    1- 2126     	.line	377, "main.c"; 	}
                                    1- 2127     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1- 2128     ; exit point of _workCtr
                                    1- 2130     ;***
                                    1- 2131     ;  pBlock Stats: dbName = C
                                    1- 2132     ;***
                                    1- 2133     ;has an exit
                                    1- 2134     ;; Starting pCode block
                                    1- 2135     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2137     _pwmStop:
                                    1- 2138     ; 2 exit points
                                    1- 2139     	.line	344, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2140     	CLRA	
     0001 00rr                      1- 2141     	SFUN	_T2CR1
                                    1- 2142     	.line	345, "main.c"; 	}
                                    1- 2143     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2144     ; exit point of _pwmStop
                                    1- 2146     ;***
                                    1- 2147     ;  pBlock Stats: dbName = C
                                    1- 2148     ;***
                                    1- 2149     ;has an exit
                                    1- 2150     ;1 compiler assigned register :
                                    1- 2151     ;   r0x102D
                                    1- 2152     ;; Starting pCode block
                                    1- 2153     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2155     _pwmInit:
                                    1- 2156     ; 2 exit points
                                    1- 2157     	.line	332, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2158     	SFUNR	_T2CR1
                                    1- 2159     	BANKSEL	r0x102D
     0001 00rr                      1- 2160     	MOVAR	r0x102D
     0002 0Frr                      1- 2161     	BTRSC	r0x102D,7
                                    1- 2162     	.line	333, "main.c"; 	return;
     0003 3rrr                      1- 2163     	LGOTO	_00298_DS_
                                    1- 2164     	.line	334, "main.c"; 	TMRH = 0x00;
     0004 02rr                      1- 2165     	CLRR	_TMRH
                                    1- 2166     	.line	335, "main.c"; 	TMR2 = 128;							//频率为110K
     0005 2180                      1- 2167     	MOVIA	0x80
     0006 00rr                      1- 2168     	SFUN	_TMR2
                                    1- 2169     	.line	338, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0007 0200                      1- 2170     	CLRA	
     0008 00rr                      1- 2171     	SFUN	_T2CR2
                                    1- 2172     	.line	339, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     0009 2183                      1- 2173     	MOVIA	0x83
     000A 00rr                      1- 2174     	SFUN	_T2CR1
     000B                           1- 2175     _00298_DS_:
                                    1- 2176     	.line	340, "main.c"; 	}
                                    1- 2177     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 2178     ; exit point of _pwmInit
                                    1- 2180     ;***
                                    1- 2181     ;  pBlock Stats: dbName = C
                                    1- 2182     ;***
                                    1- 2183     ;has an exit
                                    1- 2184     ;functions called:
                                    1- 2185     ;   _delay
                                    1- 2186     ;   _LedInput
                                    1- 2187     ;   _delay
                                    1- 2188     ;   _LedInput
                                    1- 2189     ;1 compiler assigned register :
                                    1- 2190     ;   r0x1030
                                    1- 2191     ;; Starting pCode block
                                    1- 2192     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2194     _LED4ON:
                                    1- 2195     ; 2 exit points
                                    1- 2196     	.line	323, "main.c"; 	IOSTB &= 0xF7;
     0000 001r                      1- 2197     	IOSTR	_IOSTB
                                    1- 2198     	BANKSEL	r0x1030
     0001 00rr                      1- 2199     	MOVAR	r0x1030
     0002 1Drr                      1- 2200     	BCR	r0x1030,3
     0003 01rr                      1- 2201     	MOVR	r0x1030,W
     0004 000r                      1- 2202     	IOST	_IOSTB
                                    1- 2203     	.line	324, "main.c"; 	PORTB |= 0x08;
     0005 19rr                      1- 2204     	BSR	_PORTB,3
                                    1- 2205     	.line	325, "main.c"; 	delay(100);
     0006 2164                      1- 2206     	MOVIA	0x64
     0007 2rrr                      1- 2207     	LCALL	_delay
                                    1- 2208     	.line	326, "main.c"; 	LedInput();
     0008 2rrr                      1- 2209     	LCALL	_LedInput
                                    1- 2210     	.line	327, "main.c"; 	}
                                    1- 2211     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1- 2212     ; exit point of _LED4ON
                                    1- 2214     ;***
                                    1- 2215     ;  pBlock Stats: dbName = C
                                    1- 2216     ;***
                                    1- 2217     ;has an exit
                                    1- 2218     ;functions called:
                                    1- 2219     ;   _delay
                                    1- 2220     ;   _LedInput
                                    1- 2221     ;   _delay
                                    1- 2222     ;   _LedInput
                                    1- 2223     ;1 compiler assigned register :
                                    1- 2224     ;   r0x1031
                                    1- 2225     ;; Starting pCode block
                                    1- 2226     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2228     _LED3ON:
                                    1- 2229     ; 2 exit points
                                    1- 2230     	.line	315, "main.c"; 	IOSTA &= 0X7F;
     0000 001r                      1- 2231     	IOSTR	_IOSTA
                                    1- 2232     	BANKSEL	r0x1031
     0001 00rr                      1- 2233     	MOVAR	r0x1031
     0002 1Frr                      1- 2234     	BCR	r0x1031,7
     0003 01rr                      1- 2235     	MOVR	r0x1031,W
     0004 000r                      1- 2236     	IOST	_IOSTA
                                    1- 2237     	.line	316, "main.c"; 	PORTA |= 0X80;
                                    1- 2238     	BANKSEL	_PORTA
     0005 1Brr                      1- 2239     	BSR	_PORTA,7
                                    1- 2240     	.line	317, "main.c"; 	delay(100);
     0006 2164                      1- 2241     	MOVIA	0x64
     0007 2rrr                      1- 2242     	LCALL	_delay
                                    1- 2243     	.line	318, "main.c"; 	LedInput();
     0008 2rrr                      1- 2244     	LCALL	_LedInput
                                    1- 2245     	.line	319, "main.c"; 	}
                                    1- 2246     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1- 2247     ; exit point of _LED3ON
                                    1- 2249     ;***
                                    1- 2250     ;  pBlock Stats: dbName = C
                                    1- 2251     ;***
                                    1- 2252     ;has an exit
                                    1- 2253     ;functions called:
                                    1- 2254     ;   _delay
                                    1- 2255     ;   _LedInput
                                    1- 2256     ;   _delay
                                    1- 2257     ;   _LedInput
                                    1- 2258     ;1 compiler assigned register :
                                    1- 2259     ;   r0x1032
                                    1- 2260     ;; Starting pCode block
                                    1- 2261     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2263     _LED2ON:
                                    1- 2264     ; 2 exit points
                                    1- 2265     	.line	307, "main.c"; 	IOSTA &= 0XFD;
     0000 001r                      1- 2266     	IOSTR	_IOSTA
                                    1- 2267     	BANKSEL	r0x1032
     0001 00rr                      1- 2268     	MOVAR	r0x1032
     0002 1Crr                      1- 2269     	BCR	r0x1032,1
     0003 01rr                      1- 2270     	MOVR	r0x1032,W
     0004 000r                      1- 2271     	IOST	_IOSTA
                                    1- 2272     	.line	308, "main.c"; 	PORTA |= 0X02;
                                    1- 2273     	BANKSEL	_PORTA
     0005 18rr                      1- 2274     	BSR	_PORTA,1
                                    1- 2275     	.line	309, "main.c"; 	delay(100);
     0006 2164                      1- 2276     	MOVIA	0x64
     0007 2rrr                      1- 2277     	LCALL	_delay
                                    1- 2278     	.line	310, "main.c"; 	LedInput();
     0008 2rrr                      1- 2279     	LCALL	_LedInput
                                    1- 2280     	.line	311, "main.c"; 	}
                                    1- 2281     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1- 2282     ; exit point of _LED2ON
                                    1- 2284     ;***
                                    1- 2285     ;  pBlock Stats: dbName = C
                                    1- 2286     ;***
                                    1- 2287     ;has an exit
                                    1- 2288     ;functions called:
                                    1- 2289     ;   _delay
                                    1- 2290     ;   _LedInput
                                    1- 2291     ;   _delay
                                    1- 2292     ;   _LedInput
                                    1- 2293     ;1 compiler assigned register :
                                    1- 2294     ;   r0x1033
                                    1- 2295     ;; Starting pCode block
                                    1- 2296     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2298     _LED1ON:
                                    1- 2299     ; 2 exit points
                                    1- 2300     	.line	299, "main.c"; 	IOSTA &= 0XFE;
     0000 001r                      1- 2301     	IOSTR	_IOSTA
                                    1- 2302     	BANKSEL	r0x1033
     0001 00rr                      1- 2303     	MOVAR	r0x1033
     0002 1Crr                      1- 2304     	BCR	r0x1033,0
     0003 01rr                      1- 2305     	MOVR	r0x1033,W
     0004 000r                      1- 2306     	IOST	_IOSTA
                                    1- 2307     	.line	300, "main.c"; 	PORTA |= 0X01;
                                    1- 2308     	BANKSEL	_PORTA
     0005 18rr                      1- 2309     	BSR	_PORTA,0
                                    1- 2310     	.line	301, "main.c"; 	delay(100);
     0006 2164                      1- 2311     	MOVIA	0x64
     0007 2rrr                      1- 2312     	LCALL	_delay
                                    1- 2313     	.line	302, "main.c"; 	LedInput();
     0008 2rrr                      1- 2314     	LCALL	_LedInput
                                    1- 2315     	.line	303, "main.c"; 	}
                                    1- 2316     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1- 2317     ; exit point of _LED1ON
                                    1- 2319     ;***
                                    1- 2320     ;  pBlock Stats: dbName = C
                                    1- 2321     ;***
                                    1- 2322     ;has an exit
                                    1- 2323     ;1 compiler assigned register :
                                    1- 2324     ;   r0x102B
                                    1- 2325     ;; Starting pCode block
                                    1- 2326     .segment "code"; module=main, function=_LedInput
     0000                           1- 2328     _LedInput:
                                    1- 2329     ; 2 exit points
                                    1- 2330     	.line	291, "main.c"; 	IOSTA |= 0x83;
     0000 001r                      1- 2331     	IOSTR	_IOSTA
                                    1- 2332     	BANKSEL	r0x102B
     0001 00rr                      1- 2333     	MOVAR	r0x102B
     0002 2183                      1- 2334     	MOVIA	0x83
     0003 11rr                      1- 2335     	IORAR	r0x102B,F
     0004 01rr                      1- 2336     	MOVR	r0x102B,W
     0005 000r                      1- 2337     	IOST	_IOSTA
                                    1- 2338     	.line	292, "main.c"; 	IOSTB |= 0x08;
     0006 001r                      1- 2339     	IOSTR	_IOSTB
     0007 00rr                      1- 2340     	MOVAR	r0x102B
     0008 19rr                      1- 2341     	BSR	r0x102B,3
     0009 01rr                      1- 2342     	MOVR	r0x102B,W
     000A 000r                      1- 2343     	IOST	_IOSTB
                                    1- 2344     	.line	293, "main.c"; 	PORTA &= 0x7C;
     000B 217C                      1- 2345     	MOVIA	0x7c
                                    1- 2346     	BANKSEL	_PORTA
     000C 10rr                      1- 2347     	ANDAR	_PORTA,F
                                    1- 2348     	.line	294, "main.c"; 	PORTB &= 0xF7;
     000D 1Drr                      1- 2349     	BCR	_PORTB,3
                                    1- 2350     	.line	295, "main.c"; 	}
                                    1- 2351     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 2352     ; exit point of _LedInput
                                    1- 2354     ;***
                                    1- 2355     ;  pBlock Stats: dbName = C
                                    1- 2356     ;***
                                    1- 2357     ;has an exit
                                    1- 2358     ;functions called:
                                    1- 2359     ;   _LedInput
                                    1- 2360     ;   _LedInput
                                    1- 2361     ;   _LED4ON
                                    1- 2362     ;   _LED1ON
                                    1- 2363     ;   _LED3ON
                                    1- 2364     ;   _LED2ON
                                    1- 2365     ;   _LedInput
                                    1- 2366     ;   _LedInput
                                    1- 2367     ;   _LED4ON
                                    1- 2368     ;   _LED1ON
                                    1- 2369     ;   _LED3ON
                                    1- 2370     ;   _LED2ON
                                    1- 2371     ;; Starting pCode block
                                    1- 2372     .segment "code"; module=main, function=_ledShow
     0000                           1- 2374     _ledShow:
                                    1- 2375     ; 2 exit points
                                    1- 2376     	.line	269, "main.c"; 	LedInput();
     0000 2rrr                      1- 2377     	LCALL	_LedInput
                                    1- 2378     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2379     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2380     	.line	270, "main.c"; 	switch(ledStep)
     0001 2105                      1- 2381     	MOVIA	0x05
                                    1- 2382     	BANKSEL	_ledStep
     0002 04rr                      1- 2383     	SUBAR	_ledStep,W
     0003 0C03                      1- 2384     	BTRSC	STATUS,0
     0004 3rrr                      1- 2385     	LGOTO	_00265_DS_
     0005 21rr                      1- 2386     	MOVIA	((_00271_DS_ >> 8) & 0xff)
     0006 008A                      1- 2387     	MOVAR	PCHBUF
     0007 01rr                      1- 2388     	MOVR	_ledStep,W
     0008 25rr                      1- 2389     	ADDIA	_00271_DS_
     0009 0C03                      1- 2390     	BTRSC	STATUS,0
     000A 058A                      1- 2391     	INCR	PCHBUF,F
     000B 0082                      1- 2392     	MOVAR	PCL
     000C                           1- 2393     _00271_DS_:
     000C 3rrr                      1- 2394     	LGOTO	_00259_DS_
     000D 3rrr                      1- 2395     	LGOTO	_00263_DS_
     000E 3rrr                      1- 2396     	LGOTO	_00262_DS_
     000F 3rrr                      1- 2397     	LGOTO	_00261_DS_
     0010 3rrr                      1- 2398     	LGOTO	_00260_DS_
     0011                           1- 2399     _00259_DS_:
                                    1- 2400     	.line	273, "main.c"; 	LedInput();
     0011 2rrr                      1- 2401     	LCALL	_LedInput
                                    1- 2402     	.line	274, "main.c"; 	break;
     0012 3rrr                      1- 2403     	LGOTO	_00265_DS_
     0013                           1- 2404     _00260_DS_:
                                    1- 2405     	.line	276, "main.c"; 	LED4ON();
     0013 2rrr                      1- 2406     	LCALL	_LED4ON
     0014                           1- 2407     _00261_DS_:
                                    1- 2408     	.line	278, "main.c"; 	LED1ON();
     0014 2rrr                      1- 2409     	LCALL	_LED1ON
     0015                           1- 2410     _00262_DS_:
                                    1- 2411     	.line	280, "main.c"; 	LED3ON();
     0015 2rrr                      1- 2412     	LCALL	_LED3ON
     0016                           1- 2413     _00263_DS_:
                                    1- 2414     	.line	282, "main.c"; 	LED2ON();
     0016 2rrr                      1- 2415     	LCALL	_LED2ON
     0017                           1- 2416     _00265_DS_:
                                    1- 2417     	.line	285, "main.c"; 	}
                                    1- 2418     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 2419     ; exit point of _ledShow
                                    1- 2421     ;***
                                    1- 2422     ;  pBlock Stats: dbName = C
                                    1- 2423     ;***
                                    1- 2424     ;has an exit
                                    1- 2425     ;; Starting pCode block
                                    1- 2426     .segment "code"; module=main, function=_initSys
     0000                           1- 2428     _initSys:
                                    1- 2429     ; 2 exit points
                                    1- 2430     	.line	242, "main.c"; 	DISI();
     0000 0013                      1- 2431     	DISI
                                    1- 2432     	.line	243, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input;
     0001 2170                      1- 2433     	MOVIA	0x70
     0002 000r                      1- 2434     	IOST	_IOSTA
                                    1- 2435     	.line	244, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1- 2436     	MOVIA	0x01
     0004 000r                      1- 2437     	IOST	_IOSTB
                                    1- 2438     	.line	245, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2439     	CLRR	_PORTB
                                    1- 2440     	.line	246, "main.c"; 	PORTA = 0x00;
                                    1- 2441     	BANKSEL	_PORTA
     0006 02rr                      1- 2442     	CLRR	_PORTA
                                    1- 2443     	.line	247, "main.c"; 	APHCON = 0x9F;
     0007 219F                      1- 2444     	MOVIA	0x9f
     0008 000r                      1- 2445     	IOST	_APHCON
                                    1- 2446     	.line	248, "main.c"; 	BPHCON = 0xFF;
     0009 21FF                      1- 2447     	MOVIA	0xff
     000A 00rr                      1- 2448     	MOVAR	_BPHCON
                                    1- 2449     	.line	250, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000B 2101                      1- 2450     	MOVIA	0x01
     000C 00rr                      1- 2451     	MOVAR	_INTE
                                    1- 2452     	.line	252, "main.c"; 	PCON1 = C_TMR0_Dis;
     000D 0200                      1- 2453     	CLRA	
     000E 000r                      1- 2454     	IOST	_PCON1
                                    1- 2455     	.line	254, "main.c"; 	TMR0 = 55;
     000F 2137                      1- 2456     	MOVIA	0x37
     0010 00rr                      1- 2457     	MOVAR	_TMR0
                                    1- 2458     	.line	255, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0011 0200                      1- 2459     	CLRA	
     0012 0003                      1- 2460     	T0MD	
                                    1- 2461     	.line	257, "main.c"; 	PCON1 = C_TMR0_En;
     0013 2101                      1- 2462     	MOVIA	0x01
     0014 000r                      1- 2463     	IOST	_PCON1
                                    1- 2464     	.line	260, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0015 2198                      1- 2465     	MOVIA	0x98
     0016 00rr                      1- 2466     	MOVAR	_PCON
                                    1- 2467     	.line	263, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 2468     	MOVIA	0x01
     0018 000r                      1- 2469     	IOST	_PCON1
                                    1- 2470     	.line	264, "main.c"; 	ENI();
     0019 0004                      1- 2471     	ENI
                                    1- 2472     	.line	265, "main.c"; 	}
                                    1- 2473     	RETURN	
     001A 0010                      3-   26 m1      ret
                                    1- 2474     ; exit point of _initSys
                                    1- 2476     ;***
                                    1- 2477     ;  pBlock Stats: dbName = C
                                    1- 2478     ;***
                                    1- 2479     ;has an exit
                                    1- 2480     ;; Starting pCode block
                                    1- 2481     .segment "code"; module=main, function=_fgCtr
     0000                           1- 2483     _fgCtr:
                                    1- 2484     ; 2 exit points
                                    1- 2485     	.line	225, "main.c"; 	if(PORTB & 0x01)
     0000 08rr                      1- 2486     	BTRSS	_PORTB,0
     0001 3rrr                      1- 2487     	LGOTO	_00248_DS_
                                    1- 2488     	.line	227, "main.c"; 	if(preFG == 0)
                                    1- 2489     	BANKSEL	_preFG
     0002 01rr                      1- 2490     	MOVR	_preFG,W
     0003 0903                      1- 2491     	BTRSS	STATUS,2
     0004 3rrr                      1- 2492     	LGOTO	_00246_DS_
                                    1- 2493     	.line	229, "main.c"; 	fgPRD = fgCount;
                                    1- 2494     	BANKSEL	_fgCount
     0005 01rr                      1- 2495     	MOVR	_fgCount,W
                                    1- 2496     	BANKSEL	_fgPRD
     0006 00rr                      1- 2497     	MOVAR	_fgPRD
                                    1- 2498     	BANKSEL	_fgCount
     0007 01rr                      1- 2499     	MOVR	(_fgCount + 1),W
                                    1- 2500     	BANKSEL	_fgPRD
     0008 00rr                      1- 2501     	MOVAR	(_fgPRD + 1)
                                    1- 2502     	.line	230, "main.c"; 	fgCount = 0;
                                    1- 2503     	BANKSEL	_fgCount
     0009 02rr                      1- 2504     	CLRR	_fgCount
     000A 02rr                      1- 2505     	CLRR	(_fgCount + 1)
     000B                           1- 2506     _00246_DS_:
                                    1- 2507     	.line	232, "main.c"; 	preFG = 1;
     000B 2101                      1- 2508     	MOVIA	0x01
                                    1- 2509     	BANKSEL	_preFG
     000C 00rr                      1- 2510     	MOVAR	_preFG
     000D 3rrr                      1- 2511     	LGOTO	_00250_DS_
     000E                           1- 2512     _00248_DS_:
                                    1- 2513     	.line	236, "main.c"; 	preFG = 0;
                                    1- 2514     	BANKSEL	_preFG
     000E 02rr                      1- 2515     	CLRR	_preFG
     000F                           1- 2516     _00250_DS_:
                                    1- 2517     	.line	238, "main.c"; 	}
                                    1- 2518     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2519     ; exit point of _fgCtr
                                    1- 2521     ;***
                                    1- 2522     ;  pBlock Stats: dbName = C
                                    1- 2523     ;***
                                    1- 2524     ;has an exit
                                    1- 2525     ;; Starting pCode block
                                    1- 2526     .segment "code"; module=main, function=_LEDLOFF
     0000                           1- 2528     _LEDLOFF:
                                    1- 2529     ; 2 exit points
                                    1- 2530     	.line	219, "main.c"; 	PORTA &= 0xF7;
                                    1- 2531     	BANKSEL	_PORTA
     0000 1Drr                      1- 2532     	BCR	_PORTA,3
                                    1- 2533     	.line	221, "main.c"; 	}
                                    1- 2534     	RETURN	
     0001 0010                      3-   26 m1      ret
                                    1- 2535     ; exit point of _LEDLOFF
                                    1- 2537     ;***
                                    1- 2538     ;  pBlock Stats: dbName = C
                                    1- 2539     ;***
                                    1- 2540     ;has an exit
                                    1- 2541     ;; Starting pCode block
                                    1- 2542     .segment "code"; module=main, function=_LEDHOFF
     0000                           1- 2544     _LEDHOFF:
                                    1- 2545     ; 2 exit points
                                    1- 2546     	.line	214, "main.c"; 	PORTA &= 0xFB;
                                    1- 2547     	BANKSEL	_PORTA
     0000 1Drr                      1- 2548     	BCR	_PORTA,2
                                    1- 2549     	.line	216, "main.c"; 	}
                                    1- 2550     	RETURN	
     0001 0010                      3-   26 m1      ret
                                    1- 2551     ; exit point of _LEDHOFF
                                    1- 2553     ;***
                                    1- 2554     ;  pBlock Stats: dbName = C
                                    1- 2555     ;***
                                    1- 2556     ;has an exit
                                    1- 2557     ;; Starting pCode block
                                    1- 2558     .segment "code"; module=main, function=_LEDLON
     0000                           1- 2560     _LEDLON:
                                    1- 2561     ; 2 exit points
                                    1- 2562     	.line	209, "main.c"; 	PORTA |= 0x08;
                                    1- 2563     	BANKSEL	_PORTA
     0000 19rr                      1- 2564     	BSR	_PORTA,3
                                    1- 2565     	.line	211, "main.c"; 	}
                                    1- 2566     	RETURN	
     0001 0010                      3-   26 m1      ret
                                    1- 2567     ; exit point of _LEDLON
                                    1- 2569     ;***
                                    1- 2570     ;  pBlock Stats: dbName = C
                                    1- 2571     ;***
                                    1- 2572     ;has an exit
                                    1- 2573     ;; Starting pCode block
                                    1- 2574     .segment "code"; module=main, function=_LEDHON
     0000                           1- 2576     _LEDHON:
                                    1- 2577     ; 2 exit points
                                    1- 2578     	.line	204, "main.c"; 	PORTA |= 0x04;
                                    1- 2579     	BANKSEL	_PORTA
     0000 19rr                      1- 2580     	BSR	_PORTA,2
                                    1- 2581     	.line	206, "main.c"; 	}
                                    1- 2582     	RETURN	
     0001 0010                      3-   26 m1      ret
                                    1- 2583     ; exit point of _LEDHON
                                    1- 2586     ;	code size estimation:
                                    1- 2587     ;	  954+  221 =  1175 instructions ( 2792 byte)
                                    1- 2589     	end
                                    1- 2589     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810613
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001F
_00002_DS_              Label    0000001B
_00003_DS_              Label    000000D3
_00106_DS_              Label    0000001E
_00112_DS_              Label    00000035
_00119_DS_              Label    00000037
_00121_DS_              Label    0000003B
_00131_DS_              Label    0000000F
_00134_DS_              Label    0000001F
_00139_DS_              Label    00000021
_00145_DS_              Label    0000003B
_00150_DS_              Label    00000044
_00152_DS_              Label    00000064
_00155_DS_              Label    00000054
_00159_DS_              Label    00000002
_00219_DS_              Label    00000038
_00220_DS_              Label    00000041
_00221_DS_              Label    0000004A
_00222_DS_              Label    00000052
_00223_DS_              Label    0000005A
_00224_DS_              Label    0000006D
_00246_DS_              Label    0000000B
_00248_DS_              Label    0000000E
_00250_DS_              Label    0000000F
_00259_DS_              Label    00000011
_00260_DS_              Label    00000013
_00261_DS_              Label    00000014
_00262_DS_              Label    00000015
_00263_DS_              Label    00000016
_00265_DS_              Label    00000017
_00271_DS_              Label    0000000C
_00298_DS_              Label    0000000B
_00310_DS_              Label    0000001F
_00313_DS_              Label    00000018
_00316_DS_              Label    00000011
_00317_DS_              Label    00000025
_00319_DS_              Label    00000028
_00321_DS_              Label    0000002A
_00338_DS_              Label    00000006
_00344_DS_              Label    0000000A
_00346_DS_              Label    00000010
_00351_DS_              Label    0000001B
_00354_DS_              Label    00000043
_00358_DS_              Label    00000039
_00361_DS_              Label    00000032
_00365_DS_              Label    00000028
_00368_DS_              Label    00000021
_00370_DS_              Label    00000045
_00384_DS_              Label    00000019
_00387_DS_              Label    0000000E
_00389_DS_              Label    0000001E
_00395_DS_              Label    00000005
_00396_DS_              Label    00000006
_00400_DS_              Label    0000001E
_00404_DS_              Label    00000039
_00407_DS_              Label    00000032
_00410_DS_              Label    0000002B
_00411_DS_              Label    0000003F
_00413_DS_              Label    0000004C
_00418_DS_              Label    00000043
_00421_DS_              Label    0000005A
_00441_DS_              Label    00000018
_00442_DS_              Label    0000001F
_00444_DS_              Label    00000010
_00445_DS_              Label    00000020
_00446_DS_              Label    00000021
_00452_DS_              Label    00000016
_00454_DS_              Label    00000010
_00459_DS_              Label    0000001A
_00461_DS_              Label    00000022
_00468_DS_              Label    00000002
_00470_DS_              Label    00000009
_00482_DS_              Label    00000031
_00483_DS_              Label    0000003D
_00487_DS_              Label    00000065
_00488_DS_              Label    00000067
_00501_DS_              Label    000000BB
_00506_DS_              Label    000000AF
_00509_DS_              Label    0000009B
_00512_DS_              Label    0000008E
_00515_DS_              Label    00000081
_00518_DS_              Label    0000004E
_00576_DS_              Label    0000002A
_00577_DS_              Label    00000037
_00578_DS_              Label    00000049
_00579_DS_              Label    00000054
_00580_DS_              Label    00000060
_00581_DS_              Label    0000006D
_00582_DS_              Label    00000078
_00583_DS_              Label    00000087
_00584_DS_              Label    00000094
_00585_DS_              Label    000000A1
_00588_DS_              Label    000000C9
_00595_DS_              Label    0000000A
_00597_DS_              Label    00000021
_00602_DS_              Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBatAD             Label    00000000
_chrgCtr                Label    00000000
_chrgTime               Label    00000000
_count1s                Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_count900s              Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_F_AIN5_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_fgCount                Label    00000000
_fgCtr                  Label    00000000
_fgPRD                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IO_Init                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_LEDHOFF                Label    00000000
_LEDHON                 Label    00000000
_LedInput               Label    00000000
_LEDLOFF                Label    00000000
_LEDLON                 Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_lowBatTime             Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_powerOff               Label    00000000
_preFG                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN5_DATA            Label    00000000
_R_AIN5_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepTime              Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStartFlag          Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    00000049
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1026                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b061d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B061D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000005FF
DATA ROM     = 0x00000000 - 0x000005FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
