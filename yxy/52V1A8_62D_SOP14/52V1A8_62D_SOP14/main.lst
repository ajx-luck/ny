
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_closeStatus
                                    1-   97     	extern	_keyRead
                                    1-   98     	extern	_delay
                                    1-   99     	extern	_F_wait_eoc
                                    1-  100     	extern	_gotoSleep
                                    1-  101     	extern	_F_AIN4_Convert
                                    1-  102     	extern	_F_AIN2_Convert
                                    1-  103     	extern	_F_AIN1_Convert
                                    1-  104     	extern	_checkOutA
                                    1-  105     	extern	_checkBat
                                    1-  106     	extern	_checkInV
                                    1-  107     	extern	_initAD
                                    1-  108     	extern	_keyCtr
                                    1-  109     	extern	_workCtr
                                    1-  110     	extern	_chrgWork
                                    1-  111     	extern	_isr
                                    1-  112     	extern	_main
                                    1-  113     	extern	_debug
                                    1-  114     	extern	_intCount
                                    1-  115     	extern	_IntFlag
                                    1-  116     	extern	_sleepDelay
                                    1-  117     	extern	_workStep
                                    1-  118     	extern	_longPressFlag
                                    1-  119     	extern	_keyCount
                                    1-  120     	extern	_keyClick
                                    1-  121     	extern	_chrgStatus
                                    1-  122     	extern	_overFlag
                                    1-  123     	extern	_batStatus
                                    1-  124     	extern	_workStatus
                                    1-  125     	extern	_inLowTime
                                    1-  126     	extern	_R_AIN1_DATA
                                    1-  127     	extern	_R_AIN1_DATA_LB
                                    1-  128     	extern	_R_AIN2_DATA
                                    1-  129     	extern	_R_AIN2_DATA_LB
                                    1-  130     	extern	_R_AIN4_DATA
                                    1-  131     	extern	_R_AIN4_DATA_LB
                                    1-  132     	extern	_overTime
                                    1-  133     	extern	_shandeng
                                    1-  134     	extern	_count500ms
                                    1-  135     	extern	_firstLow
                                    1-  136     	extern	_firstLowTime
                                    1-  137     	extern	_batLowTime
                                    1-  139     	extern PSAVE
                                    1-  140     	extern SSAVE
                                    1-  141     	extern WSAVE
                                    1-  142     	extern STK02
                                    1-  143     	extern STK01
                                    1-  144     	extern STK00
                                    1-  146     .segment "uninit", 0x20000040
 20000040                           1-  147     PSAVE:
                                    1-  148     	.res 1
 20000041                           1-  149     SSAVE:
                                    1-  150     	.res 1
 20000042                           1-  151     WSAVE:
                                    1-  152     	.res 1
 20000043                           1-  153     STK02:
                                    1-  154     	.res 1
 20000044                           1-  155     STK01:
                                    1-  156     	.res 1
 20000045                           1-  157     STK00:
                                    1-  158     	.res 1
                                    1-  160     ;--------------------------------------------------------
                                    1-  161     ; global definitions
                                    1-  162     ;--------------------------------------------------------
                                    1-  163     ;--------------------------------------------------------
                                    1-  164     ; absolute symbol definitions
                                    1-  165     ;--------------------------------------------------------
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ; compiler-defined variables
                                    1-  168     ;--------------------------------------------------------
                                    1-  169     .segment "uninit"
     0000                           1-  170     r0x1042:
                                    1-  171     	.res	1
                                    1-  172     .segment "uninit"
     0000                           1-  173     r0x1041:
                                    1-  174     	.res	1
                                    1-  175     .segment "uninit"
     0000                           1-  176     r0x103F:
                                    1-  177     	.res	1
                                    1-  178     .segment "uninit"
     0000                           1-  179     r0x1040:
                                    1-  180     	.res	1
                                    1-  181     .segment "uninit"
     0000                           1-  182     r0x103B:
                                    1-  183     	.res	1
                                    1-  184     .segment "uninit"
     0000                           1-  185     r0x103C:
                                    1-  186     	.res	1
                                    1-  187     .segment "uninit"
     0000                           1-  188     r0x1037:
                                    1-  189     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     r0x1038:
                                    1-  192     	.res	1
                                    1-  193     .segment "uninit"
     0000                           1-  194     r0x102F:
                                    1-  195     	.res	1
                                    1-  196     .segment "uninit"
     0000                           1-  197     r0x1030:
                                    1-  198     	.res	1
                                    1-  199     .segment "uninit"
     0000                           1-  200     r0x1031:
                                    1-  201     	.res	1
                                    1-  202     .segment "uninit"
     0000                           1-  203     r0x1034:
                                    1-  204     	.res	1
                                    1-  205     .segment "uninit"
     0000                           1-  206     r0x1029:
                                    1-  207     	.res	1
                                    1-  208     .segment "uninit"
     0000                           1-  209     r0x102A:
                                    1-  210     	.res	1
                                    1-  211     .segment "uninit"
     0000                           1-  212     r0x102B:
                                    1-  213     	.res	1
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x102E:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x1023:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x1024:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x1025:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x1028:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x1020:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x101F:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x1021:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x1022:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x101E:
                                    1-  243     	.res	1
                                    1-  244     ;--------------------------------------------------------
                                    1-  245     ; initialized data
                                    1-  246     ;--------------------------------------------------------
                                    1-  248     .segment "idata"
     0000                           1-  249     _debug:
     0000 0000                      1-  250     	dw	0x00
                                    1-  254     .segment "idata"
     0000                           1-  255     _intCount:
     0000 0000                      1-  256     	dw	0x00
                                    1-  260     .segment "idata"
     0000                           1-  261     _IntFlag:
     0000 0000                      1-  262     	dw	0x00
                                    1-  266     .segment "idata"
     0000                           1-  267     _sleepDelay:
     0000 0000                      1-  268     	dw	0x00
                                    1-  272     .segment "idata"
     0000                           1-  273     _workStep:
     0000 0000                      1-  274     	dw	0x00
                                    1-  278     .segment "idata"
     0000                           1-  279     _longPressFlag:
     0000 0000                      1-  280     	dw	0x00
                                    1-  284     .segment "idata"
     0000                           1-  285     _keyCount:
     0000 0000                      1-  286     	dw	0x00
                                    1-  290     .segment "idata"
     0000                           1-  291     _keyClick:
     0000 0000                      1-  292     	dw	0x00
                                    1-  296     .segment "idata"
     0000                           1-  297     _chrgStatus:
     0000 0000                      1-  298     	dw	0x00
                                    1-  302     .segment "idata"
     0000                           1-  303     _overFlag:
     0000 0000                      1-  304     	dw	0x00
                                    1-  308     .segment "idata"
     0000                           1-  309     _batStatus:
     0000 0000                      1-  310     	dw	0x00
                                    1-  314     .segment "idata"
     0000                           1-  315     _workStatus:
     0000 0000                      1-  316     	dw	0x00
                                    1-  320     .segment "idata"
     0000                           1-  321     _inLowTime:
     0000 0000                      1-  322     	dw	0x00
                                    1-  326     .segment "idata"
     0000                           1-  327     _R_AIN1_DATA:
     0000 0000 0000                 1-  328     	dw	0x00, 0x00
                                    1-  332     .segment "idata"
     0000                           1-  333     _R_AIN1_DATA_LB:
     0000 0000                      1-  334     	dw	0x00
                                    1-  338     .segment "idata"
     0000                           1-  339     _R_AIN2_DATA:
     0000 0000 0000                 1-  340     	dw	0x00, 0x00
                                    1-  344     .segment "idata"
     0000                           1-  345     _R_AIN2_DATA_LB:
     0000 0000                      1-  346     	dw	0x00
                                    1-  350     .segment "idata"
     0000                           1-  351     _R_AIN4_DATA:
     0000 0000 0000                 1-  352     	dw	0x00, 0x00
                                    1-  356     .segment "idata"
     0000                           1-  357     _R_AIN4_DATA_LB:
     0000 0000                      1-  358     	dw	0x00
                                    1-  362     .segment "idata"
     0000                           1-  363     _overTime:
     0000 0000                      1-  364     	dw	0x00
                                    1-  368     .segment "idata"
     0000                           1-  369     _shandeng:
     0000 0000                      1-  370     	dw	0x00
                                    1-  374     .segment "idata"
     0000                           1-  375     _count500ms:
     0000 0000                      1-  376     	dw	0x00
                                    1-  380     .segment "idata"
     0000                           1-  381     _firstLow:
     0000 0000                      1-  382     	dw	0x00
                                    1-  386     .segment "idata"
     0000                           1-  387     _firstLowTime:
     0000 0000                      1-  388     	dw	0x00
                                    1-  392     .segment "idata"
     0000                           1-  393     _batLowTime:
     0000 0000                      1-  394     	dw	0x00
                                    1-  397     ;--------------------------------------------------------
                                    1-  398     ; overlayable items in internal ram 
                                    1-  399     ;--------------------------------------------------------
                                    1-  400     ;	udata_ovr
                                    1-  401     ;--------------------------------------------------------
                                    1-  402     ; reset vector 
                                    1-  403     ;--------------------------------------------------------
                                    1-  404     ORG	0x0000
     0000 3rrr                      1-  405     	LGOTO	__nyc_ny8_startup
                                    1-  406     ;--------------------------------------------------------
                                    1-  407     ; interrupt and initialization code
                                    1-  408     ;--------------------------------------------------------
                                    1-  409     ORG 0x0008
     0008 3rrr                      1-  410     	lgoto	__sdcc_interrupt
                                    1-  412     .segment "code"
     0000                           1-  413     __sdcc_interrupt:
                                    1-  414     ;***
                                    1-  415     ;  pBlock Stats: dbName = I
                                    1-  416     ;***
                                    1-  417     ;functions called:
                                    1-  418     ;   _closeStatus
                                    1-  419     ;   _gotoSleep
                                    1-  420     ;   _closeStatus
                                    1-  421     ;   _gotoSleep
                                    1-  422     ;2 compiler assigned registers:
                                    1-  423     ;   STK00
                                    1-  424     ;   STK01
                                    1-  425     ;; Starting pCode block
     0000                           1-  426     _isr:
                                    1-  427     ; 0 exit points
                                    1-  428     	.line	72, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  429     	MOVAR	WSAVE
     0001 1503                      1-  430     	SWAPR	STATUS,W
     0002 0283                      1-  431     	CLRR	STATUS
     0003 00rr                      1-  432     	MOVAR	SSAVE
     0004 010A                      1-  433     	MOVR	PCHBUF,W
     0005 028A                      1-  434     	CLRR	PCHBUF
     0006 00rr                      1-  435     	MOVAR	PSAVE
     0007 0104                      1-  436     	MOVR	FSR,W
                                    1-  437     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  438     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  439     	MOVR	STK00,W
                                    1-  440     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  441     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  442     	MOVR	STK01,W
                                    1-  443     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  444     	MOVAR	___sdcc_saved_stk01
                                    1-  445     	.line	74, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  446     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  447     	LGOTO	_00117_DS_
                                    1-  448     	.line	76, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  449     	MOVIA	0x37
     0013 03rr                      1-  450     	ADDAR	_TMR0,F
                                    1-  451     	.line	77, "main.c"; 	intCount++;
                                    1-  452     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  453     	INCR	_intCount,F
                                    1-  454     	.line	79, "main.c"; 	if(++intCount >= 100)
     0016 05rr                      1-  455     	INCR	_intCount,F
                                    1-  456     ;;unsigned compare: left < lit (0x64=100), size=1
     0017 2164                      1-  457     	MOVIA	0x64
     0018 04rr                      1-  458     	SUBAR	_intCount,W
     0019 0803                      1-  459     	BTRSS	STATUS,0
     001A 3rrr                      1-  460     	LGOTO	_00117_DS_
                                    1-  461     	.line	81, "main.c"; 	intCount = 0;
     001B 02rr                      1-  462     	CLRR	_intCount
                                    1-  463     	.line	82, "main.c"; 	IntFlag = 1;
     001C 2101                      1-  464     	MOVIA	0x01
                                    1-  465     	BANKSEL	_IntFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  466     	MOVAR	_IntFlag
                                    1-  467     	.line	83, "main.c"; 	if(++count500ms >= 50)
                                    1-  468     	BANKSEL	_count500ms
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 05rr                      1-  469     	INCR	_count500ms,F
                                    1-  470     ;;unsigned compare: left < lit (0x32=50), size=1
     0021 2132                      1-  471     	MOVIA	0x32
     0022 04rr                      1-  472     	SUBAR	_count500ms,W
     0023 0803                      1-  473     	BTRSS	STATUS,0
     0024 3rrr                      1-  474     	LGOTO	_00117_DS_
                                    1-  475     	.line	85, "main.c"; 	count500ms = 0;
     0025 02rr                      1-  476     	CLRR	_count500ms
                                    1-  477     	.line	86, "main.c"; 	if(shandeng > 0)
                                    1-  478     	BANKSEL	_shandeng
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  479     	MOVR	_shandeng,W
     0028 0D03                      1-  480     	BTRSC	STATUS,2
     0029 3rrr                      1-  481     	LGOTO	_00117_DS_
                                    1-  482     	.line	88, "main.c"; 	if(shandeng % 2 == 0)
     002A 0Crr                      1-  483     	BTRSC	_shandeng,0
     002B 3rrr                      1-  484     	LGOTO	_00106_DS_
                                    1-  485     	.line	89, "main.c"; 	LED4ON();
     002C 1Crr                      1-  486     	BCR	_PORTB,1
     002D 3rrr                      1-  487     	LGOTO	_00107_DS_
     002E                           1-  488     _00106_DS_:
                                    1-  489     	.line	91, "main.c"; 	LED4OFF();
     002E 18rr                      1-  490     	BSR	_PORTB,1
     002F                           1-  491     _00107_DS_:
                                    1-  492     	.line	92, "main.c"; 	shandeng--;
                                    1-  493     	BANKSEL	_shandeng
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 17rr                      1-  494     	DECRSZ	_shandeng,F
                                    1-  495     	.line	93, "main.c"; 	if(shandeng == 0)
     0031 3rrr                      1-  496     	LGOTO	_00117_DS_
                                    1-  497     	.line	95, "main.c"; 	closeStatus();
     0032 2rrr                      1-  498     	LCALL	_closeStatus
                                    1-  499     	.line	96, "main.c"; 	gotoSleep();
     0033 2rrr                      1-  500     	LCALL	_gotoSleep
     0034                           1-  501     _00117_DS_:
                                    1-  502     	.line	104, "main.c"; 	if(INTFbits.PABIF)
     0034 08rr                      1-  503     	BTRSS	_INTFbits,1
     0035 3rrr                      1-  504     	LGOTO	_00119_DS_
                                    1-  505     	.line	106, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0036 21FD                      1-  506     	MOVIA	0xfd
     0037 00rr                      1-  507     	MOVAR	_INTF
     0038                           1-  508     _00119_DS_:
                                    1-  509     	.line	109, "main.c"; 	INTF = 0;
     0038 02rr                      1-  510     	CLRR	_INTF
                                    1-  511     	.line	111, "main.c"; 	}
                                    1-  512     	BANKSEL	___sdcc_saved_stk01
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  513     	MOVR	___sdcc_saved_stk01,W
     003B 00rr                      1-  514     	MOVAR	STK01
                                    1-  515     	BANKSEL	___sdcc_saved_stk00
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1-  516     	MOVR	___sdcc_saved_stk00,W
     003E 00rr                      1-  517     	MOVAR	STK00
                                    1-  518     	BANKSEL	___sdcc_saved_fsr
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1-  519     	MOVR	___sdcc_saved_fsr,W
     0041 0084                      1-  520     	MOVAR	FSR
     0042 01rr                      1-  521     	MOVR	PSAVE,W
     0043 008A                      1-  522     	MOVAR	PCHBUF
     0044 0283                      1-  523     	CLRR	STATUS
     0045 15rr                      1-  524     	SWAPR	SSAVE,W
     0046 0083                      1-  525     	MOVAR	STATUS
     0047 15rr                      1-  526     	SWAPR	WSAVE,F
     0048 15rr                      1-  527     	SWAPR	WSAVE,W
     0049                           1-  528     END_OF_INTERRUPT:
     0049 0011                      1-  529     	RETIE	
                                    1-  531     ;--------------------------------------------------------
                                    1-  532     ; code
                                    1-  533     ;--------------------------------------------------------
                                    1-  534     ;***
                                    1-  535     ;  pBlock Stats: dbName = M
                                    1-  536     ;***
                                    1-  537     ;has an exit
                                    1-  538     ;functions called:
                                    1-  539     ;   _closeStatus
                                    1-  540     ;   _initAD
                                    1-  541     ;   _keyCtr
                                    1-  542     ;   _chrgWork
                                    1-  543     ;   _workCtr
                                    1-  544     ;   _closeStatus
                                    1-  545     ;   _gotoSleep
                                    1-  546     ;   _closeStatus
                                    1-  547     ;   _initAD
                                    1-  548     ;   _keyCtr
                                    1-  549     ;   _chrgWork
                                    1-  550     ;   _workCtr
                                    1-  551     ;   _closeStatus
                                    1-  552     ;   _gotoSleep
                                    1-  553     ;1 compiler assigned register :
                                    1-  554     ;   r0x1042
                                    1-  555     ;; Starting pCode block
                                    1-  556     .segment "code"; module=main, function=_main
     0000                           1-  558     _main:
                                    1-  559     ; 2 exit points
                                    1-  560     	.line	115, "main.c"; 	DISI();
     0000 0013                      1-  561     	DISI
                                    1-  562     	.line	116, "main.c"; 	IOSTA = C_PA1_Input | C_PA2_Input | C_PA3_Input | C_PA4_Input | C_PA5_Input;
     0001 213E                      1-  563     	MOVIA	0x3e
     0002 000r                      1-  564     	IOST	_IOSTA
                                    1-  565     	.line	117, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1-  566     	MOVIA	0x01
     0004 000r                      1-  567     	IOST	_IOSTB
                                    1-  568     	.line	118, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1-  569     	CLRR	_PORTB
                                    1-  570     	.line	119, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1-  571     	CLRR	_PORTA
                                    1-  572     	.line	120, "main.c"; 	APHCON = 0xFF;
     0007 21FF                      1-  573     	MOVIA	0xff
     0008 000r                      1-  574     	IOST	_APHCON
                                    1-  575     	.line	121, "main.c"; 	BPHCON = 0xFE;
     0009 21FE                      1-  576     	MOVIA	0xfe
     000A 00rr                      1-  577     	MOVAR	_BPHCON
                                    1-  578     	.line	122, "main.c"; 	ABPLCON = 0xFF;
     000B 21FF                      1-  579     	MOVIA	0xff
     000C 00rr                      1-  580     	MOVAR	_ABPLCON
                                    1-  581     	.line	124, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000D 2101                      1-  582     	MOVIA	0x01
     000E 00rr                      1-  583     	MOVAR	_INTE
                                    1-  584     	.line	126, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1-  585     	CLRA	
     0010 000r                      1-  586     	IOST	_PCON1
                                    1-  587     	.line	128, "main.c"; 	TMR0 = 55;
     0011 2137                      1-  588     	MOVIA	0x37
     0012 00rr                      1-  589     	MOVAR	_TMR0
                                    1-  590     	.line	129, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0013 0200                      1-  591     	CLRA	
     0014 0003                      1-  592     	T0MD	
                                    1-  593     	.line	131, "main.c"; 	PCON1 = C_TMR0_En;
     0015 2101                      1-  594     	MOVIA	0x01
     0016 000r                      1-  595     	IOST	_PCON1
                                    1-  596     	.line	133, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR,PA5关闭上拉
     0017 2198                      1-  597     	MOVIA	0x98
     0018 00rr                      1-  598     	MOVAR	_PCON
                                    1-  599     	.line	135, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1-  600     	MOVIA	0x01
     001A 000r                      1-  601     	IOST	_PCON1
                                    1-  602     	.line	136, "main.c"; 	ENI();
     001B 0004                      1-  603     	ENI
                                    1-  604     	.line	137, "main.c"; 	closeStatus();
     001C 2rrr                      1-  605     	LCALL	_closeStatus
                                    1-  606     	.line	138, "main.c"; 	initAD();
     001D 2rrr                      1-  607     	LCALL	_initAD
     001E                           1-  608     _00163_DS_:
                                    1-  609     	.line	143, "main.c"; 	CLRWDT();
     001E 0002                      1-  610     	clrwdt
                                    1-  611     	.line	144, "main.c"; 	if(PORTA & 0x20)
     001F 0Arr                      1-  612     	BTRSS	_PORTA,5
     0020 3rrr                      1-  613     	LGOTO	_00149_DS_
                                    1-  614     ;;unsigned compare: left < lit (0x2=2), size=1
                                    1-  615     	.line	147, "main.c"; 	if(chrgStatus < 2)
     0021 2102                      1-  616     	MOVIA	0x02
                                    1-  617     	BANKSEL	_chrgStatus
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 04rr                      1-  618     	SUBAR	_chrgStatus,W
                                    1-  619     	BANKSEL	r0x1042
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1-  620     	CLRR	r0x1042
     0026 0803                      1-  621     	BTRSS	STATUS,0
     0027 18rr                      1-  622     	BSR	r0x1042,0
     0028 01rr                      1-  623     	MOVR	r0x1042,W
     0029 0D03                      1-  624     	BTRSC	STATUS,2
     002A 3rrr                      1-  625     	LGOTO	_00134_DS_
                                    1-  626     	.line	149, "main.c"; 	LED2OFF();
     002B 1Frr                      1-  627     	BCR	_PORTA,6
                                    1-  628     	.line	150, "main.c"; 	if(chrgStatus == 1)
                                    1-  629     	BANKSEL	_chrgStatus
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1-  630     	MOVR	_chrgStatus,W
     002E 2401                      1-  631     	XORIA	0x01
     002F 0D03                      1-  632     	BTRSC	STATUS,2
                                    1-  633     	.line	151, "main.c"; 	LED4OFF();
     0030 18rr                      1-  634     	BSR	_PORTB,1
                                    1-  635     	.line	152, "main.c"; 	if(batStatus == 0 || batStatus == 2 || (batStatus == 3 && shandeng == 0))
                                    1-  636     	BANKSEL	_batStatus
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1-  637     	MOVR	_batStatus,W
     0033 0D03                      1-  638     	BTRSC	STATUS,2
     0034 3rrr                      1-  639     	LGOTO	_00126_DS_
     0035 01rr                      1-  640     	MOVR	_batStatus,W
     0036 2402                      1-  641     	XORIA	0x02
     0037 0D03                      1-  642     	BTRSC	STATUS,2
     0038 3rrr                      1-  643     	LGOTO	_00126_DS_
     0039 01rr                      1-  644     	MOVR	_batStatus,W
     003A 2403                      1-  645     	XORIA	0x03
     003B 0903                      1-  646     	BTRSS	STATUS,2
     003C 3rrr                      1-  647     	LGOTO	_00135_DS_
                                    1-  648     	BANKSEL	_shandeng
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1-  649     	MOVR	_shandeng,W
     003F 0903                      1-  650     	BTRSS	STATUS,2
     0040 3rrr                      1-  651     	LGOTO	_00135_DS_
     0041                           1-  652     _00126_DS_:
                                    1-  653     	.line	153, "main.c"; 	LED4OFF();
     0041 18rr                      1-  654     	BSR	_PORTB,1
     0042 3rrr                      1-  655     	LGOTO	_00135_DS_
     0043                           1-  656     _00134_DS_:
                                    1-  657     	.line	157, "main.c"; 	LED3OFF();
     0043 1Frr                      1-  658     	BCR	_PORTA,7
                                    1-  659     	.line	158, "main.c"; 	if(batStatus == 3)
                                    1-  660     	BANKSEL	_batStatus
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  661     	MOVR	_batStatus,W
     0046 2403                      1-  662     	XORIA	0x03
     0047 0D03                      1-  663     	BTRSC	STATUS,2
                                    1-  664     	.line	159, "main.c"; 	LED2OFF();
     0048 1Frr                      1-  665     	BCR	_PORTA,6
     0049                           1-  666     _00135_DS_:
                                    1-  667     	.line	161, "main.c"; 	if(chrgStatus == 0)
                                    1-  668     	BANKSEL	_chrgStatus
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 01rr                      1-  669     	MOVR	_chrgStatus,W
     004B 0D03                      1-  670     	BTRSC	STATUS,2
                                    1-  671     	.line	163, "main.c"; 	CHRGON();
     004C 19rr                      1-  672     	BSR	_PORTB,2
                                    1-  673     	.line	165, "main.c"; 	if(workStatus == 1 && overFlag == 0 && chrgStatus < 2)
                                    1-  674     	BANKSEL	_workStatus
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1-  675     	MOVR	_workStatus,W
     004F 2401                      1-  676     	XORIA	0x01
     0050 0903                      1-  677     	BTRSS	STATUS,2
     0051 3rrr                      1-  678     	LGOTO	_00150_DS_
                                    1-  679     	BANKSEL	_overFlag
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1-  680     	MOVR	_overFlag,W
     0054 0903                      1-  681     	BTRSS	STATUS,2
     0055 3rrr                      1-  682     	LGOTO	_00150_DS_
                                    1-  683     	BANKSEL	r0x1042
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 01rr                      1-  684     	MOVR	r0x1042,W
     0058 0D03                      1-  685     	BTRSC	STATUS,2
     0059 3rrr                      1-  686     	LGOTO	_00150_DS_
                                    1-  687     	.line	167, "main.c"; 	POWERON();
     005A 18rr                      1-  688     	BSR	_PORTA,0
                                    1-  689     	.line	168, "main.c"; 	LED3ON();
     005B 1Brr                      1-  690     	BSR	_PORTA,7
     005C 3rrr                      1-  691     	LGOTO	_00150_DS_
     005D                           1-  692     _00149_DS_:
                                    1-  693     	.line	175, "main.c"; 	if(workStatus == 1)
                                    1-  694     	BANKSEL	r0x1042
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 02rr                      1-  695     	CLRR	r0x1042
                                    1-  696     	BANKSEL	_workStatus
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 01rr                      1-  697     	MOVR	_workStatus,W
     0061 2401                      1-  698     	XORIA	0x01
     0062 0903                      1-  699     	BTRSS	STATUS,2
     0063 3rrr                      1-  700     	LGOTO	_00008_DS_
                                    1-  701     	BANKSEL	r0x1042
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 05rr                      1-  702     	INCR	r0x1042,F
     0066                           1-  703     _00008_DS_:
                                    1-  704     	BANKSEL	r0x1042
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 01rr                      1-  705     	MOVR	r0x1042,W
     0068 0903                      1-  706     	BTRSS	STATUS,2
                                    1-  707     	.line	176, "main.c"; 	CHRGOFF();
     0069 1Drr                      1-  708     	BCR	_PORTB,2
                                    1-  709     	.line	177, "main.c"; 	LED3OFF();
     006A 1Frr                      1-  710     	BCR	_PORTA,7
                                    1-  711     	.line	178, "main.c"; 	chrgStatus = 0;
                                    1-  712     	BANKSEL	_chrgStatus
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 02rr                      1-  713     	CLRR	_chrgStatus
                                    1-  714     	.line	179, "main.c"; 	if(overFlag == 0 && batStatus < 3 && workStatus == 1)
                                    1-  715     	BANKSEL	_overFlag
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1-  716     	MOVR	_overFlag,W
     006F 0903                      1-  717     	BTRSS	STATUS,2
     0070 3rrr                      1-  718     	LGOTO	_00150_DS_
                                    1-  719     ;;unsigned compare: left < lit (0x3=3), size=1
     0071 2103                      1-  720     	MOVIA	0x03
                                    1-  721     	BANKSEL	_batStatus
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 04rr                      1-  722     	SUBAR	_batStatus,W
     0074 0C03                      1-  723     	BTRSC	STATUS,0
     0075 3rrr                      1-  724     	LGOTO	_00150_DS_
                                    1-  725     	BANKSEL	r0x1042
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 01rr                      1-  726     	MOVR	r0x1042,W
     0078 0903                      1-  727     	BTRSS	STATUS,2
                                    1-  728     	.line	181, "main.c"; 	POWERON();
     0079 18rr                      1-  729     	BSR	_PORTA,0
     007A                           1-  730     _00150_DS_:
                                    1-  731     	.line	184, "main.c"; 	if(!IntFlag)
                                    1-  732     	BANKSEL	_IntFlag
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 01rr                      1-  733     	MOVR	_IntFlag,W
     007C 0D03                      1-  734     	BTRSC	STATUS,2
     007D 3rrr                      1-  735     	LGOTO	_00163_DS_
                                    1-  736     	.line	186, "main.c"; 	IntFlag = 0;
     007E 02rr                      1-  737     	CLRR	_IntFlag
                                    1-  738     	.line	187, "main.c"; 	keyCtr();
     007F 2rrr                      1-  739     	LCALL	_keyCtr
                                    1-  740     	.line	188, "main.c"; 	chrgWork();
     0080 2rrr                      1-  741     	LCALL	_chrgWork
                                    1-  742     	.line	189, "main.c"; 	if(workStatus == 1)
                                    1-  743     	BANKSEL	_workStatus
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 01rr                      1-  744     	MOVR	_workStatus,W
     0083 2401                      1-  745     	XORIA	0x01
     0084 0D03                      1-  746     	BTRSC	STATUS,2
                                    1-  747     	.line	190, "main.c"; 	workCtr();
     0085 2rrr                      1-  748     	LCALL	_workCtr
                                    1-  749     	.line	191, "main.c"; 	if(((PORTA & 0x20) == 0 || chrgStatus == 2) && workStatus == 0 && keyCount == 0)
     0086 0Arr                      1-  750     	BTRSS	_PORTA,5
     0087 3rrr                      1-  751     	LGOTO	_00160_DS_
                                    1-  752     	BANKSEL	_chrgStatus
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 01rr                      1-  753     	MOVR	_chrgStatus,W
     008A 2402                      1-  754     	XORIA	0x02
     008B 0903                      1-  755     	BTRSS	STATUS,2
     008C 3rrr                      1-  756     	LGOTO	_00163_DS_
     008D                           1-  757     _00160_DS_:
                                    1-  758     	BANKSEL	_workStatus
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 01rr                      1-  759     	MOVR	_workStatus,W
     008F 0903                      1-  760     	BTRSS	STATUS,2
     0090 3rrr                      1-  761     	LGOTO	_00163_DS_
                                    1-  762     	BANKSEL	_keyCount
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 01rr                      1-  763     	MOVR	_keyCount,W
     0093 0903                      1-  764     	BTRSS	STATUS,2
     0094 3rrr                      1-  765     	LGOTO	_00163_DS_
                                    1-  766     	.line	193, "main.c"; 	closeStatus();
     0095 2rrr                      1-  767     	LCALL	_closeStatus
                                    1-  768     	.line	194, "main.c"; 	if(++sleepDelay > 50)
                                    1-  769     	BANKSEL	_sleepDelay
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 05rr                      1-  770     	INCR	_sleepDelay,F
                                    1-  771     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  772     ;;unsigned compare: left >= lit (0x33=51), size=1
     0098 2133                      1-  773     	MOVIA	0x33
     0099 04rr                      1-  774     	SUBAR	_sleepDelay,W
     009A 0803                      1-  775     	BTRSS	STATUS,0
     009B 3rrr                      1-  776     	LGOTO	_00163_DS_
                                    1-  777     	.line	195, "main.c"; 	gotoSleep();
     009C 2rrr                      1-  778     	LCALL	_gotoSleep
     009D 3rrr                      1-  779     	LGOTO	_00163_DS_
                                    1-  780     	.line	198, "main.c"; 	}
                                    1-  781     	RETURN	
     009E 0010                      3-   26 m1      ret
                                    1-  782     ; exit point of _main
                                    1-  784     ;***
                                    1-  785     ;  pBlock Stats: dbName = C
                                    1-  786     ;***
                                    1-  787     ;has an exit
                                    1-  788     ;; Starting pCode block
                                    1-  789     .segment "code"; module=main, function=_closeStatus
     0000                           1-  791     _closeStatus:
                                    1-  792     ; 2 exit points
                                    1-  793     	.line	607, "main.c"; 	LED1OFF();
     0000 19rr                      1-  794     	BSR	_PORTB,3
                                    1-  795     	.line	608, "main.c"; 	LED2OFF();
     0001 1Frr                      1-  796     	BCR	_PORTA,6
                                    1-  797     	.line	609, "main.c"; 	LED3OFF();
     0002 1Frr                      1-  798     	BCR	_PORTA,7
                                    1-  799     	.line	610, "main.c"; 	LED4OFF();
     0003 18rr                      1-  800     	BSR	_PORTB,1
                                    1-  801     	.line	611, "main.c"; 	CHRGON();
     0004 19rr                      1-  802     	BSR	_PORTB,2
                                    1-  803     	.line	612, "main.c"; 	POWEROFF();
     0005 1Crr                      1-  804     	BCR	_PORTA,0
                                    1-  805     	.line	613, "main.c"; 	}
                                    1-  806     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  807     ; exit point of _closeStatus
                                    1-  809     ;***
                                    1-  810     ;  pBlock Stats: dbName = C
                                    1-  811     ;***
                                    1-  812     ;has an exit
                                    1-  813     ;1 compiler assigned register :
                                    1-  814     ;   r0x101E
                                    1-  815     ;; Starting pCode block
                                    1-  816     .segment "code"; module=main, function=_keyRead
                                    1-  818     ;local variable name mapping:
     0000                           1-  820     _keyRead:
                                    1-  821     ; 2 exit points
                                    1-  822     	.line	572, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  823     	BANKSEL	r0x101E
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  824     	MOVAR	r0x101E
                                    1-  825     	.line	574, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  826     	MOVR	r0x101E,W
     0003 0D03                      1-  827     	BTRSC	STATUS,2
     0004 3rrr                      1-  828     	LGOTO	_00557_DS_
                                    1-  829     	.line	576, "main.c"; 	keyCount++;
                                    1-  830     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  831     	INCR	_keyCount,F
                                    1-  832     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  833     	.line	577, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  834     	MOVIA	0xc8
     0008 04rr                      1-  835     	SUBAR	_keyCount,W
     0009 0803                      1-  836     	BTRSS	STATUS,0
     000A 3rrr                      1-  837     	LGOTO	_00558_DS_
                                    1-  838     	.line	579, "main.c"; 	keyCount = 200;
     000B 21C8                      1-  839     	MOVIA	0xc8
     000C 00rr                      1-  840     	MOVAR	_keyCount
                                    1-  841     	.line	580, "main.c"; 	if(!longPressFlag)
                                    1-  842     	BANKSEL	_longPressFlag
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  843     	MOVR	_longPressFlag,W
     000F 0903                      1-  844     	BTRSS	STATUS,2
     0010 3rrr                      1-  845     	LGOTO	_00558_DS_
                                    1-  846     	.line	582, "main.c"; 	longPressFlag = 1;
     0011 2101                      1-  847     	MOVIA	0x01
     0012 00rr                      1-  848     	MOVAR	_longPressFlag
                                    1-  849     	.line	583, "main.c"; 	return 2;
     0013 2102                      1-  850     	MOVIA	0x02
     0014 3rrr                      1-  851     	LGOTO	_00559_DS_
                                    1-  852     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1-  853     _00557_DS_:
                                    1-  854     	.line	589, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1-  855     	MOVIA	0xc8
                                    1-  856     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 04rr                      1-  857     	SUBAR	_keyCount,W
     0018 0803                      1-  858     	BTRSS	STATUS,0
     0019 3rrr                      1-  859     	LGOTO	_00554_DS_
                                    1-  860     	.line	591, "main.c"; 	keyCount = 0;
     001A 02rr                      1-  861     	CLRR	_keyCount
                                    1-  862     	.line	592, "main.c"; 	longPressFlag = 0;
                                    1-  863     	BANKSEL	_longPressFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1-  864     	CLRR	_longPressFlag
                                    1-  865     	.line	593, "main.c"; 	return	0;
     001D 2100                      1-  866     	MOVIA	0x00
     001E 3rrr                      1-  867     	LGOTO	_00559_DS_
                                    1-  868     ;;unsigned compare: left < lit (0x8=8), size=1
     001F                           1-  869     _00554_DS_:
                                    1-  870     	.line	595, "main.c"; 	else if(keyCount >= 8)
     001F 2108                      1-  871     	MOVIA	0x08
                                    1-  872     	BANKSEL	_keyCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1-  873     	SUBAR	_keyCount,W
     0022 0803                      1-  874     	BTRSS	STATUS,0
     0023 3rrr                      1-  875     	LGOTO	_00555_DS_
                                    1-  876     	.line	597, "main.c"; 	keyCount = 0;
     0024 02rr                      1-  877     	CLRR	_keyCount
                                    1-  878     	.line	598, "main.c"; 	return	1;
     0025 2101                      1-  879     	MOVIA	0x01
     0026 3rrr                      1-  880     	LGOTO	_00559_DS_
     0027                           1-  881     _00555_DS_:
                                    1-  882     	.line	600, "main.c"; 	keyCount = 0;
                                    1-  883     	BANKSEL	_keyCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1-  884     	CLRR	_keyCount
     0029                           1-  885     _00558_DS_:
                                    1-  886     	.line	602, "main.c"; 	return 0;
     0029 2100                      1-  887     	MOVIA	0x00
     002A                           1-  888     _00559_DS_:
                                    1-  889     	.line	603, "main.c"; 	}
                                    1-  890     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1-  891     ; exit point of _keyRead
                                    1-  893     ;***
                                    1-  894     ;  pBlock Stats: dbName = C
                                    1-  895     ;***
                                    1-  896     ;has an exit
                                    1-  897     ;5 compiler assigned registers:
                                    1-  898     ;   r0x101F
                                    1-  899     ;   STK00
                                    1-  900     ;   r0x1020
                                    1-  901     ;   r0x1021
                                    1-  902     ;   r0x1022
                                    1-  903     ;; Starting pCode block
                                    1-  904     .segment "code"; module=main, function=_delay
                                    1-  906     ;local variable name mapping:
     0000                           1-  911     _delay:
                                    1-  912     ; 2 exit points
                                    1-  913     	.line	566, "main.c"; 	void delay(u16t time)
                                    1-  914     	BANKSEL	r0x101F
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  915     	MOVAR	r0x101F
     0002 01rr                      1-  916     	MOVR	STK00,W
                                    1-  917     	BANKSEL	r0x1020
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  918     	MOVAR	r0x1020
                                    1-  919     	.line	568, "main.c"; 	for(u16t i=0;i<time;i++);
                                    1-  920     	BANKSEL	r0x1021
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  921     	CLRR	r0x1021
                                    1-  922     	BANKSEL	r0x1022
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  923     	CLRR	r0x1022
     0009                           1-  924     _00531_DS_:
                                    1-  925     	BANKSEL	r0x101F
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  926     	MOVR	r0x101F,W
                                    1-  927     	BANKSEL	r0x1022
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  928     	SUBAR	r0x1022,W
     000D 0903                      1-  929     	BTRSS	STATUS,2
     000E 3rrr                      1-  930     	LGOTO	_00542_DS_
                                    1-  931     	BANKSEL	r0x1020
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  932     	MOVR	r0x1020,W
                                    1-  933     	BANKSEL	r0x1021
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  934     	SUBAR	r0x1021,W
     0013                           1-  935     _00542_DS_:
     0013 0C03                      1-  936     	BTRSC	STATUS,0
     0014 3rrr                      1-  937     	LGOTO	_00533_DS_
                                    1-  938     	BANKSEL	r0x1021
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  939     	INCR	r0x1021,F
     0017 0903                      1-  940     	BTRSS	STATUS,2
     0018 3rrr                      1-  941     	LGOTO	_00001_DS_
                                    1-  942     	BANKSEL	r0x1022
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  943     	INCR	r0x1022,F
     001B                           1-  944     _00001_DS_:
     001B 3rrr                      1-  945     	LGOTO	_00531_DS_
     001C                           1-  946     _00533_DS_:
                                    1-  947     	.line	569, "main.c"; 	}
                                    1-  948     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  949     ; exit point of _delay
                                    1-  951     ;***
                                    1-  952     ;  pBlock Stats: dbName = C
                                    1-  953     ;***
                                    1-  954     ;has an exit
                                    1-  955     ;; Starting pCode block
                                    1-  956     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  958     _F_wait_eoc:
                                    1-  959     ; 2 exit points
     0000                           1-  960     _00524_DS_:
                                    1-  961     	.line	560, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  962     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  963     	LGOTO	_00524_DS_
                                    1-  964     	.line	562, "main.c"; 	}
                                    1-  965     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  966     ; exit point of _F_wait_eoc
                                    1-  968     ;***
                                    1-  969     ;  pBlock Stats: dbName = C
                                    1-  970     ;***
                                    1-  971     ;has an exit
                                    1-  972     ;; Starting pCode block
                                    1-  973     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  975     _gotoSleep:
                                    1-  976     ; 2 exit points
                                    1-  977     	.line	534, "main.c"; 	workStatus = 0;
                                    1-  978     	BANKSEL	_workStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  979     	CLRR	_workStatus
                                    1-  980     	.line	536, "main.c"; 	chrgStatus = 0;
                                    1-  981     	BANKSEL	_chrgStatus
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  982     	CLRR	_chrgStatus
                                    1-  983     	.line	537, "main.c"; 	firstLow = 0;
                                    1-  984     	BANKSEL	_firstLow
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  985     	CLRR	_firstLow
                                    1-  986     	.line	538, "main.c"; 	overFlag = 0;
                                    1-  987     	BANKSEL	_overFlag
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  988     	CLRR	_overFlag
                                    1-  989     	.line	539, "main.c"; 	sleepDelay = 0;
                                    1-  990     	BANKSEL	_sleepDelay
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1-  991     	CLRR	_sleepDelay
                                    1-  992     	.line	540, "main.c"; 	workStep = 0;
                                    1-  993     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1-  994     	CLRR	_workStep
                                    1-  995     	.line	541, "main.c"; 	AWUCON = 0x28;
     000C 2128                      1-  996     	MOVIA	0x28
     000D 00rr                      1-  997     	MOVAR	_AWUCON
                                    1-  998     	.line	542, "main.c"; 	BWUCON = 0x01;
     000E 2101                      1-  999     	MOVIA	0x01
     000F 00rr                      1- 1000     	MOVAR	_BWUCON
                                    1- 1001     	.line	543, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0010 210B                      1- 1002     	MOVIA	0x0b
     0011 00rr                      1- 1003     	MOVAR	_INTE
                                    1- 1004     	.line	544, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0012 2118                      1- 1005     	MOVIA	0x18
     0013 00rr                      1- 1006     	MOVAR	_PCON
                                    1- 1007     	.line	545, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0014 02rr                      1- 1008     	CLRR	_INTF
                                    1- 1009     	.line	546, "main.c"; 	CLRWDT();
     0015 0002                      1- 1010     	clrwdt
                                    1- 1011     	.line	547, "main.c"; 	ENI();
     0016 0004                      1- 1012     	ENI
                                    1- 1013     	.line	548, "main.c"; 	SLEEP();
     0017 0001                      1- 1014     	sleep
                                    1- 1015     	.line	549, "main.c"; 	AWUCON = 0x00;
     0018 02rr                      1- 1016     	CLRR	_AWUCON
                                    1- 1017     	.line	550, "main.c"; 	BWUCON = 0x00;
     0019 02rr                      1- 1018     	CLRR	_BWUCON
                                    1- 1019     	.line	551, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     001A 2101                      1- 1020     	MOVIA	0x01
     001B 00rr                      1- 1021     	MOVAR	_INTE
                                    1- 1022     	.line	552, "main.c"; 	INTF = 0;
     001C 02rr                      1- 1023     	CLRR	_INTF
                                    1- 1024     	.line	554, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     001D 21B8                      1- 1025     	MOVIA	0xb8
     001E 00rr                      1- 1026     	MOVAR	_PCON
                                    1- 1027     	.line	556, "main.c"; 	}
                                    1- 1028     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1- 1029     ; exit point of _gotoSleep
                                    1- 1031     ;***
                                    1- 1032     ;  pBlock Stats: dbName = C
                                    1- 1033     ;***
                                    1- 1034     ;has an exit
                                    1- 1035     ;functions called:
                                    1- 1036     ;   _delay
                                    1- 1037     ;   _F_wait_eoc
                                    1- 1038     ;   _delay
                                    1- 1039     ;   _F_wait_eoc
                                    1- 1040     ;7 compiler assigned registers:
                                    1- 1041     ;   r0x1023
                                    1- 1042     ;   STK00
                                    1- 1043     ;   r0x1024
                                    1- 1044     ;   r0x1025
                                    1- 1045     ;   r0x1026
                                    1- 1046     ;   r0x1027
                                    1- 1047     ;   r0x1028
                                    1- 1048     ;; Starting pCode block
                                    1- 1049     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1051     ;local variable name mapping:
     0000                           1- 1054     _F_AIN4_Convert:
                                    1- 1055     ; 2 exit points
                                    1- 1056     	.line	516, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1057     	BANKSEL	r0x1023
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1058     	MOVAR	r0x1023
                                    1- 1059     	.line	518, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1060     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1061     	CLRR	_R_AIN4_DATA_LB
                                    1- 1062     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1063     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1064     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1065     	.line	520, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1066     	MOVIA	0x94
     0008 00rr                      1- 1067     	MOVAR	_ADMD
                                    1- 1068     	.line	521, "main.c"; 	delay(200);	
     0009 21C8                      1- 1069     	MOVIA	0xc8
     000A 00rr                      1- 1070     	MOVAR	STK00
     000B 2100                      1- 1071     	MOVIA	0x00
     000C 2rrr                      1- 1072     	LCALL	_delay
                                    1- 1073     	.line	522, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1074     	MOVIA	0x01
                                    1- 1075     	BANKSEL	r0x1024
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1076     	MOVAR	r0x1024
     0010                           1- 1077     _00513_DS_:
                                    1- 1078     	BANKSEL	r0x1024
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1079     	MOVR	r0x1024,W
                                    1- 1080     	BANKSEL	r0x1023
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1081     	SUBAR	r0x1023,W
     0014 0803                      1- 1082     	BTRSS	STATUS,0
     0015 3rrr                      1- 1083     	LGOTO	_00515_DS_
                                    1- 1084     	.line	524, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1085     	BSR	_ADMDbits,6
                                    1- 1086     	.line	525, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1087     	LCALL	_F_wait_eoc
                                    1- 1088     	.line	526, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1089     	MOVIA	0x0f
     0019 10rr                      1- 1090     	ANDAR	_ADR,W
                                    1- 1091     ;;3	MOVAR	r0x1025
                                    1- 1092     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1093     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1094     	.line	527, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1- 1095     	MOVR	_ADD,W
                                    1- 1096     	BANKSEL	r0x1025
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1097     	MOVAR	r0x1025
                                    1- 1098     ;;1	CLRR	r0x1026
                                    1- 1099     ;;110	MOVR	r0x1025,W
                                    1- 1100     ;;108	MOVAR	r0x1027
     001F 2100                      1- 1101     	MOVIA	0x00
                                    1- 1102     	BANKSEL	r0x1028
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1103     	MOVAR	r0x1028
                                    1- 1104     ;;109	MOVR	r0x1027,W
                                    1- 1105     	BANKSEL	r0x1025
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1106     	MOVR	r0x1025,W
                                    1- 1107     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1108     	ADDAR	_R_AIN4_DATA,F
                                    1- 1109     	BANKSEL	r0x1028
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1110     	MOVR	r0x1028,W
     0028 0C03                      1- 1111     	BTRSC	STATUS,0
     0029 05rr                      1- 1112     	INCR	r0x1028,W
     002A 0D03                      1- 1113     	BTRSC	STATUS,2
     002B 3rrr                      1- 1114     	LGOTO	_00002_DS_
                                    1- 1115     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1116     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1- 1117     _00002_DS_:
                                    1- 1118     	.line	522, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1119     	BANKSEL	r0x1024
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1120     	INCR	r0x1024,F
     0030 3rrr                      1- 1121     	LGOTO	_00513_DS_
     0031                           1- 1122     _00515_DS_:
                                    1- 1123     	.line	529, "main.c"; 	}
                                    1- 1124     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1125     ; exit point of _F_AIN4_Convert
                                    1- 1127     ;***
                                    1- 1128     ;  pBlock Stats: dbName = C
                                    1- 1129     ;***
                                    1- 1130     ;has an exit
                                    1- 1131     ;functions called:
                                    1- 1132     ;   _delay
                                    1- 1133     ;   _F_wait_eoc
                                    1- 1134     ;   _delay
                                    1- 1135     ;   _F_wait_eoc
                                    1- 1136     ;7 compiler assigned registers:
                                    1- 1137     ;   r0x1029
                                    1- 1138     ;   STK00
                                    1- 1139     ;   r0x102A
                                    1- 1140     ;   r0x102B
                                    1- 1141     ;   r0x102C
                                    1- 1142     ;   r0x102D
                                    1- 1143     ;   r0x102E
                                    1- 1144     ;; Starting pCode block
                                    1- 1145     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1147     ;local variable name mapping:
     0000                           1- 1150     _F_AIN2_Convert:
                                    1- 1151     ; 2 exit points
                                    1- 1152     	.line	500, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1153     	BANKSEL	r0x1029
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1154     	MOVAR	r0x1029
                                    1- 1155     	.line	502, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1156     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1157     	CLRR	_R_AIN2_DATA_LB
                                    1- 1158     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1159     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1160     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1161     	.line	504, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1162     	MOVIA	0x92
     0008 00rr                      1- 1163     	MOVAR	_ADMD
                                    1- 1164     	.line	505, "main.c"; 	delay(200);	
     0009 21C8                      1- 1165     	MOVIA	0xc8
     000A 00rr                      1- 1166     	MOVAR	STK00
     000B 2100                      1- 1167     	MOVIA	0x00
     000C 2rrr                      1- 1168     	LCALL	_delay
                                    1- 1169     	.line	506, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1170     	MOVIA	0x01
                                    1- 1171     	BANKSEL	r0x102A
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1172     	MOVAR	r0x102A
     0010                           1- 1173     _00504_DS_:
                                    1- 1174     	BANKSEL	r0x102A
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1175     	MOVR	r0x102A,W
                                    1- 1176     	BANKSEL	r0x1029
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1177     	SUBAR	r0x1029,W
     0014 0803                      1- 1178     	BTRSS	STATUS,0
     0015 3rrr                      1- 1179     	LGOTO	_00506_DS_
                                    1- 1180     	.line	508, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1181     	BSR	_ADMDbits,6
                                    1- 1182     	.line	509, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1183     	LCALL	_F_wait_eoc
                                    1- 1184     	.line	510, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1185     	MOVIA	0x0f
     0019 10rr                      1- 1186     	ANDAR	_ADR,W
                                    1- 1187     ;;3	MOVAR	r0x102B
                                    1- 1188     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1189     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1190     	.line	511, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1191     	MOVR	_ADD,W
                                    1- 1192     	BANKSEL	r0x102B
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1193     	MOVAR	r0x102B
                                    1- 1194     ;;1	CLRR	r0x102C
                                    1- 1195     ;;107	MOVR	r0x102B,W
                                    1- 1196     ;;105	MOVAR	r0x102D
     001F 2100                      1- 1197     	MOVIA	0x00
                                    1- 1198     	BANKSEL	r0x102E
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1199     	MOVAR	r0x102E
                                    1- 1200     ;;106	MOVR	r0x102D,W
                                    1- 1201     	BANKSEL	r0x102B
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1202     	MOVR	r0x102B,W
                                    1- 1203     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1204     	ADDAR	_R_AIN2_DATA,F
                                    1- 1205     	BANKSEL	r0x102E
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1206     	MOVR	r0x102E,W
     0028 0C03                      1- 1207     	BTRSC	STATUS,0
     0029 05rr                      1- 1208     	INCR	r0x102E,W
     002A 0D03                      1- 1209     	BTRSC	STATUS,2
     002B 3rrr                      1- 1210     	LGOTO	_00003_DS_
                                    1- 1211     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1212     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1213     _00003_DS_:
                                    1- 1214     	.line	506, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1215     	BANKSEL	r0x102A
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1216     	INCR	r0x102A,F
     0030 3rrr                      1- 1217     	LGOTO	_00504_DS_
     0031                           1- 1218     _00506_DS_:
                                    1- 1219     	.line	513, "main.c"; 	}
                                    1- 1220     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1221     ; exit point of _F_AIN2_Convert
                                    1- 1223     ;***
                                    1- 1224     ;  pBlock Stats: dbName = C
                                    1- 1225     ;***
                                    1- 1226     ;has an exit
                                    1- 1227     ;functions called:
                                    1- 1228     ;   _delay
                                    1- 1229     ;   _F_wait_eoc
                                    1- 1230     ;   _delay
                                    1- 1231     ;   _F_wait_eoc
                                    1- 1232     ;7 compiler assigned registers:
                                    1- 1233     ;   r0x102F
                                    1- 1234     ;   STK00
                                    1- 1235     ;   r0x1030
                                    1- 1236     ;   r0x1031
                                    1- 1237     ;   r0x1032
                                    1- 1238     ;   r0x1033
                                    1- 1239     ;   r0x1034
                                    1- 1240     ;; Starting pCode block
                                    1- 1241     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1- 1243     ;local variable name mapping:
     0000                           1- 1246     _F_AIN1_Convert:
                                    1- 1247     ; 2 exit points
                                    1- 1248     	.line	485, "main.c"; 	void F_AIN1_Convert(char count)
                                    1- 1249     	BANKSEL	r0x102F
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1250     	MOVAR	r0x102F
                                    1- 1251     	.line	487, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
                                    1- 1252     	BANKSEL	_R_AIN1_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1253     	CLRR	_R_AIN1_DATA_LB
                                    1- 1254     	BANKSEL	_R_AIN1_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1255     	CLRR	_R_AIN1_DATA
     0006 02rr                      1- 1256     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1257     	.line	489, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0007 2191                      1- 1258     	MOVIA	0x91
     0008 00rr                      1- 1259     	MOVAR	_ADMD
                                    1- 1260     	.line	490, "main.c"; 	delay(200);	
     0009 21C8                      1- 1261     	MOVIA	0xc8
     000A 00rr                      1- 1262     	MOVAR	STK00
     000B 2100                      1- 1263     	MOVIA	0x00
     000C 2rrr                      1- 1264     	LCALL	_delay
                                    1- 1265     	.line	491, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1266     	MOVIA	0x01
                                    1- 1267     	BANKSEL	r0x1030
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1268     	MOVAR	r0x1030
     0010                           1- 1269     _00495_DS_:
                                    1- 1270     	BANKSEL	r0x1030
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1271     	MOVR	r0x1030,W
                                    1- 1272     	BANKSEL	r0x102F
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1273     	SUBAR	r0x102F,W
     0014 0803                      1- 1274     	BTRSS	STATUS,0
     0015 3rrr                      1- 1275     	LGOTO	_00497_DS_
                                    1- 1276     	.line	493, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1277     	BSR	_ADMDbits,6
                                    1- 1278     	.line	494, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1279     	LCALL	_F_wait_eoc
                                    1- 1280     	.line	495, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1281     	MOVIA	0x0f
     0019 10rr                      1- 1282     	ANDAR	_ADR,W
                                    1- 1283     ;;3	MOVAR	r0x1031
                                    1- 1284     	BANKSEL	_R_AIN1_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1285     	ADDAR	_R_AIN1_DATA_LB,F
                                    1- 1286     	.line	496, "main.c"; 	R_AIN1_DATA    += ADD; 
     001C 01rr                      1- 1287     	MOVR	_ADD,W
                                    1- 1288     	BANKSEL	r0x1031
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1289     	MOVAR	r0x1031
                                    1- 1290     ;;1	CLRR	r0x1032
                                    1- 1291     ;;104	MOVR	r0x1031,W
                                    1- 1292     ;;102	MOVAR	r0x1033
     001F 2100                      1- 1293     	MOVIA	0x00
                                    1- 1294     	BANKSEL	r0x1034
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1295     	MOVAR	r0x1034
                                    1- 1296     ;;103	MOVR	r0x1033,W
                                    1- 1297     	BANKSEL	r0x1031
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1298     	MOVR	r0x1031,W
                                    1- 1299     	BANKSEL	_R_AIN1_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1300     	ADDAR	_R_AIN1_DATA,F
                                    1- 1301     	BANKSEL	r0x1034
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1302     	MOVR	r0x1034,W
     0028 0C03                      1- 1303     	BTRSC	STATUS,0
     0029 05rr                      1- 1304     	INCR	r0x1034,W
     002A 0D03                      1- 1305     	BTRSC	STATUS,2
     002B 3rrr                      1- 1306     	LGOTO	_00004_DS_
                                    1- 1307     	BANKSEL	_R_AIN1_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1308     	ADDAR	(_R_AIN1_DATA + 1),F
     002E                           1- 1309     _00004_DS_:
                                    1- 1310     	.line	491, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1311     	BANKSEL	r0x1030
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1312     	INCR	r0x1030,F
     0030 3rrr                      1- 1313     	LGOTO	_00495_DS_
     0031                           1- 1314     _00497_DS_:
                                    1- 1315     	.line	498, "main.c"; 	}
                                    1- 1316     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1317     ; exit point of _F_AIN1_Convert
                                    1- 1319     ;***
                                    1- 1320     ;  pBlock Stats: dbName = C
                                    1- 1321     ;***
                                    1- 1322     ;has an exit
                                    1- 1323     ;functions called:
                                    1- 1324     ;   _F_AIN4_Convert
                                    1- 1325     ;   _F_AIN4_Convert
                                    1- 1326     ;4 compiler assigned registers:
                                    1- 1327     ;   r0x1035
                                    1- 1328     ;   r0x1036
                                    1- 1329     ;   r0x1037
                                    1- 1330     ;   r0x1038
                                    1- 1331     ;; Starting pCode block
                                    1- 1332     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1334     _checkOutA:
                                    1- 1335     ; 2 exit points
                                    1- 1336     	.line	449, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1337     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1338     	CLRR	_R_AIN4_DATA_LB
                                    1- 1339     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1340     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1341     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1342     	.line	450, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1343     	MOVIA	0x08
     0006 2rrr                      1- 1344     	LCALL	_F_AIN4_Convert
                                    1- 1345     	.line	451, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1346     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1347     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1348     	ANDIA	0xf0
     000A 00rr                      1- 1349     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1350     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1351     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1352     	ANDIA	0x0f
     000E 11rr                      1- 1353     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1354     	XORAR	_R_AIN4_DATA,F
                                    1- 1355     	.line	452, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1356     	MOVIA	0xf0
                                    1- 1357     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1358     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1359     	.line	453, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1360     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1361     	BANKSEL	r0x1037
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1362     	MOVAR	r0x1037
                                    1- 1363     ;;1	MOVAR	r0x1035
                                    1- 1364     ;;1	CLRR	r0x1036
                                    1- 1365     ;;101	MOVR	r0x1035,W
     0016 2100                      1- 1366     	MOVIA	0x00
                                    1- 1367     	BANKSEL	r0x1038
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1368     	MOVAR	r0x1038
                                    1- 1369     	BANKSEL	r0x1037
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1370     	MOVR	r0x1037,W
                                    1- 1371     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1372     	ADDAR	_R_AIN4_DATA,F
                                    1- 1373     	BANKSEL	r0x1038
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1374     	MOVR	r0x1038,W
     001F 0C03                      1- 1375     	BTRSC	STATUS,0
     0020 05rr                      1- 1376     	INCR	r0x1038,W
     0021 0D03                      1- 1377     	BTRSC	STATUS,2
     0022 3rrr                      1- 1378     	LGOTO	_00005_DS_
                                    1- 1379     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1380     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1381     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1382     _00005_DS_:
                                    1- 1383     	.line	454, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1384     	BCR	STATUS,0
                                    1- 1385     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1386     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1387     	RRR	_R_AIN4_DATA,F
                                    1- 1388     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1389     	BCR	STATUS,0
     002A 13rr                      1- 1390     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1391     	RRR	_R_AIN4_DATA,F
                                    1- 1392     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1393     	BCR	STATUS,0
     002D 13rr                      1- 1394     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1395     	RRR	_R_AIN4_DATA,F
                                    1- 1396     	.line	456, "main.c"; 	if(debug)
                                    1- 1397     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1398     	MOVR	_debug,W
     0031 0D03                      1- 1399     	BTRSC	STATUS,2
     0032 3rrr                      1- 1400     	LGOTO	_00471_DS_
                                    1- 1401     	.line	458, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 214C                      1- 1402     	MOVIA	0x4c
                                    1- 1403     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1404     	MOVAR	_R_AIN4_DATA
     0036 02rr                      1- 1405     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1406     ;;unsigned compare: left < lit (0x4E=78), size=2
     0037                           1- 1407     _00471_DS_:
                                    1- 1408     	.line	461, "main.c"; 	if(R_AIN4_DATA < 78)
     0037 2100                      1- 1409     	MOVIA	0x00
                                    1- 1410     	BANKSEL	_R_AIN4_DATA
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 04rr                      1- 1411     	SUBAR	(_R_AIN4_DATA + 1),W
     003A 0903                      1- 1412     	BTRSS	STATUS,2
     003B 3rrr                      1- 1413     	LGOTO	_00488_DS_
     003C 214E                      1- 1414     	MOVIA	0x4e
     003D 04rr                      1- 1415     	SUBAR	_R_AIN4_DATA,W
     003E                           1- 1416     _00488_DS_:
     003E 0C03                      1- 1417     	BTRSC	STATUS,0
     003F 3rrr                      1- 1418     	LGOTO	_00473_DS_
                                    1- 1419     	.line	463, "main.c"; 	overFlag = 0;
                                    1- 1420     	BANKSEL	_overFlag
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 02rr                      1- 1421     	CLRR	_overFlag
                                    1- 1422     	.line	464, "main.c"; 	overTime = 0;
                                    1- 1423     	BANKSEL	_overTime
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 02rr                      1- 1424     	CLRR	_overTime
     0044 3rrr                      1- 1425     	LGOTO	_00474_DS_
     0045                           1- 1426     _00473_DS_:
                                    1- 1427     	.line	468, "main.c"; 	overTime++;
                                    1- 1428     	BANKSEL	_overTime
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 05rr                      1- 1429     	INCR	_overTime,F
     0047                           1- 1430     _00474_DS_:
                                    1- 1431     	.line	470, "main.c"; 	if(++overTime >= 10)
                                    1- 1432     	BANKSEL	_overTime
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 05rr                      1- 1433     	INCR	_overTime,F
                                    1- 1434     ;;unsigned compare: left < lit (0xA=10), size=1
     0049 210A                      1- 1435     	MOVIA	0x0a
     004A 04rr                      1- 1436     	SUBAR	_overTime,W
     004B 0803                      1- 1437     	BTRSS	STATUS,0
     004C 3rrr                      1- 1438     	LGOTO	_00477_DS_
                                    1- 1439     	.line	472, "main.c"; 	overTime = 10;
     004D 210A                      1- 1440     	MOVIA	0x0a
     004E 00rr                      1- 1441     	MOVAR	_overTime
                                    1- 1442     	.line	473, "main.c"; 	overFlag = 1;
     004F 2101                      1- 1443     	MOVIA	0x01
                                    1- 1444     	BANKSEL	_overFlag
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1- 1445     	MOVAR	_overFlag
                                    1- 1446     	.line	476, "main.c"; 	POWEROFF();
     0052 1Crr                      1- 1447     	BCR	_PORTA,0
                                    1- 1448     	.line	477, "main.c"; 	LED2OFF();
     0053 1Frr                      1- 1449     	BCR	_PORTA,6
                                    1- 1450     	.line	478, "main.c"; 	LED3OFF();
     0054 1Frr                      1- 1451     	BCR	_PORTA,7
     0055                           1- 1452     _00477_DS_:
                                    1- 1453     	.line	482, "main.c"; 	}
                                    1- 1454     	RETURN	
     0055 0010                      3-   26 m1      ret
                                    1- 1455     ; exit point of _checkOutA
                                    1- 1457     ;***
                                    1- 1458     ;  pBlock Stats: dbName = C
                                    1- 1459     ;***
                                    1- 1460     ;has an exit
                                    1- 1461     ;functions called:
                                    1- 1462     ;   _F_AIN2_Convert
                                    1- 1463     ;   _F_AIN2_Convert
                                    1- 1464     ;4 compiler assigned registers:
                                    1- 1465     ;   r0x1039
                                    1- 1466     ;   r0x103A
                                    1- 1467     ;   r0x103B
                                    1- 1468     ;   r0x103C
                                    1- 1469     ;; Starting pCode block
                                    1- 1470     .segment "code"; module=main, function=_checkBat
     0000                           1- 1472     _checkBat:
                                    1- 1473     ; 2 exit points
                                    1- 1474     	.line	399, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1475     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1476     	CLRR	_R_AIN2_DATA_LB
                                    1- 1477     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1478     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1479     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1480     	.line	400, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1481     	MOVIA	0x08
     0006 2rrr                      1- 1482     	LCALL	_F_AIN2_Convert
                                    1- 1483     	.line	401, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1484     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1485     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1486     	ANDIA	0xf0
     000A 00rr                      1- 1487     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1488     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1489     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1490     	ANDIA	0x0f
     000E 11rr                      1- 1491     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1492     	XORAR	_R_AIN2_DATA,F
                                    1- 1493     	.line	402, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1494     	MOVIA	0xf0
                                    1- 1495     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1496     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1497     	.line	403, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1498     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1499     	BANKSEL	r0x103B
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1500     	MOVAR	r0x103B
                                    1- 1501     ;;1	MOVAR	r0x1039
                                    1- 1502     ;;1	CLRR	r0x103A
                                    1- 1503     ;;100	MOVR	r0x1039,W
     0016 2100                      1- 1504     	MOVIA	0x00
                                    1- 1505     	BANKSEL	r0x103C
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1506     	MOVAR	r0x103C
                                    1- 1507     	BANKSEL	r0x103B
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1508     	MOVR	r0x103B,W
                                    1- 1509     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1510     	ADDAR	_R_AIN2_DATA,F
                                    1- 1511     	BANKSEL	r0x103C
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1512     	MOVR	r0x103C,W
     001F 0C03                      1- 1513     	BTRSC	STATUS,0
     0020 05rr                      1- 1514     	INCR	r0x103C,W
     0021 0D03                      1- 1515     	BTRSC	STATUS,2
     0022 3rrr                      1- 1516     	LGOTO	_00006_DS_
                                    1- 1517     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1518     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1519     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1520     _00006_DS_:
                                    1- 1521     	.line	404, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1522     	BCR	STATUS,0
                                    1- 1523     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1524     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1525     	RRR	_R_AIN2_DATA,F
                                    1- 1526     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1527     	BCR	STATUS,0
     002A 13rr                      1- 1528     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1529     	RRR	_R_AIN2_DATA,F
                                    1- 1530     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1531     	BCR	STATUS,0
     002D 13rr                      1- 1532     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1533     	RRR	_R_AIN2_DATA,F
                                    1- 1534     	.line	405, "main.c"; 	if(debug)
                                    1- 1535     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1536     	MOVR	_debug,W
     0031 0D03                      1- 1537     	BTRSC	STATUS,2
     0032 3rrr                      1- 1538     	LGOTO	_00410_DS_
                                    1- 1539     	.line	407, "main.c"; 	R_AIN2_DATA = BAT;
     0033 21D9                      1- 1540     	MOVIA	0xd9
                                    1- 1541     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1542     	MOVAR	_R_AIN2_DATA
     0036 210E                      1- 1543     	MOVIA	0x0e
     0037 00rr                      1- 1544     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1545     ;;unsigned compare: left < lit (0x9A6=2470), size=2
     0038                           1- 1546     _00410_DS_:
                                    1- 1547     	.line	410, "main.c"; 	if(R_AIN2_DATA < 2470)
     0038 2109                      1- 1548     	MOVIA	0x09
                                    1- 1549     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1550     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1551     	BTRSS	STATUS,2
     003C 3rrr                      1- 1552     	LGOTO	_00460_DS_
     003D 21A6                      1- 1553     	MOVIA	0xa6
     003E 04rr                      1- 1554     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1555     _00460_DS_:
     003F 0C03                      1- 1556     	BTRSC	STATUS,0
     0040 3rrr                      1- 1557     	LGOTO	_00429_DS_
                                    1- 1558     	.line	412, "main.c"; 	if(++batLowTime > 50)
                                    1- 1559     	BANKSEL	_batLowTime
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 05rr                      1- 1560     	INCR	_batLowTime,F
                                    1- 1561     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1562     ;;unsigned compare: left >= lit (0x33=51), size=1
     0043 2133                      1- 1563     	MOVIA	0x33
     0044 04rr                      1- 1564     	SUBAR	_batLowTime,W
     0045 0803                      1- 1565     	BTRSS	STATUS,0
     0046 3rrr                      1- 1566     	LGOTO	_00431_DS_
                                    1- 1567     	.line	413, "main.c"; 	batStatus = 3;//缺电状态
     0047 2103                      1- 1568     	MOVIA	0x03
                                    1- 1569     	BANKSEL	_batStatus
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 00rr                      1- 1570     	MOVAR	_batStatus
     004A 3rrr                      1- 1571     	LGOTO	_00431_DS_
                                    1- 1572     ;;unsigned compare: left < lit (0xAAB=2731), size=2
     004B                           1- 1573     _00429_DS_:
                                    1- 1574     	.line	415, "main.c"; 	else if(R_AIN2_DATA < 2731)
     004B 210A                      1- 1575     	MOVIA	0x0a
                                    1- 1576     	BANKSEL	_R_AIN2_DATA
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 04rr                      1- 1577     	SUBAR	(_R_AIN2_DATA + 1),W
     004E 0903                      1- 1578     	BTRSS	STATUS,2
     004F 3rrr                      1- 1579     	LGOTO	_00462_DS_
     0050 21AB                      1- 1580     	MOVIA	0xab
     0051 04rr                      1- 1581     	SUBAR	_R_AIN2_DATA,W
     0052                           1- 1582     _00462_DS_:
     0052 0C03                      1- 1583     	BTRSC	STATUS,0
     0053 3rrr                      1- 1584     	LGOTO	_00426_DS_
                                    1- 1585     	.line	417, "main.c"; 	batStatus = 1;//低电状态
     0054 2101                      1- 1586     	MOVIA	0x01
                                    1- 1587     	BANKSEL	_batStatus
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 00rr                      1- 1588     	MOVAR	_batStatus
                                    1- 1589     	.line	418, "main.c"; 	batLowTime = 0;
                                    1- 1590     	BANKSEL	_batLowTime
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 02rr                      1- 1591     	CLRR	_batLowTime
                                    1- 1592     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1593     ;;unsigned compare: left >= lit (0x9C5=2501), size=2
                                    1- 1594     	.line	419, "main.c"; 	if(R_AIN2_DATA > 2500)
     0059 2109                      1- 1595     	MOVIA	0x09
                                    1- 1596     	BANKSEL	_R_AIN2_DATA
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 04rr                      1- 1597     	SUBAR	(_R_AIN2_DATA + 1),W
     005C 0903                      1- 1598     	BTRSS	STATUS,2
     005D 3rrr                      1- 1599     	LGOTO	_00463_DS_
     005E 21C5                      1- 1600     	MOVIA	0xc5
     005F 04rr                      1- 1601     	SUBAR	_R_AIN2_DATA,W
     0060                           1- 1602     _00463_DS_:
     0060 0803                      1- 1603     	BTRSS	STATUS,0
     0061 3rrr                      1- 1604     	LGOTO	_00431_DS_
                                    1- 1605     	.line	420, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1606     	BANKSEL	_firstLow
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 02rr                      1- 1607     	CLRR	_firstLow
     0064 3rrr                      1- 1608     	LGOTO	_00431_DS_
                                    1- 1609     ;;unsigned compare: left < lit (0xC9C=3228), size=2
     0065                           1- 1610     _00426_DS_:
                                    1- 1611     	.line	422, "main.c"; 	else if(R_AIN2_DATA < 3228)  //16V
     0065 210C                      1- 1612     	MOVIA	0x0c
                                    1- 1613     	BANKSEL	_R_AIN2_DATA
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 04rr                      1- 1614     	SUBAR	(_R_AIN2_DATA + 1),W
     0068 0903                      1- 1615     	BTRSS	STATUS,2
     0069 3rrr                      1- 1616     	LGOTO	_00464_DS_
     006A 219C                      1- 1617     	MOVIA	0x9c
     006B 04rr                      1- 1618     	SUBAR	_R_AIN2_DATA,W
     006C                           1- 1619     _00464_DS_:
     006C 0C03                      1- 1620     	BTRSC	STATUS,0
     006D 3rrr                      1- 1621     	LGOTO	_00423_DS_
                                    1- 1622     	.line	424, "main.c"; 	if(batStatus == 2)
                                    1- 1623     	BANKSEL	_batStatus
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 01rr                      1- 1624     	MOVR	_batStatus,W
     0070 2402                      1- 1625     	XORIA	0x02
     0071 0903                      1- 1626     	BTRSS	STATUS,2
     0072 3rrr                      1- 1627     	LGOTO	_00420_DS_
                                    1- 1628     ;;unsigned compare: left < lit (0xC8A=3210), size=2
                                    1- 1629     	.line	426, "main.c"; 	if(R_AIN2_DATA < 3210)
     0073 210C                      1- 1630     	MOVIA	0x0c
                                    1- 1631     	BANKSEL	_R_AIN2_DATA
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 04rr                      1- 1632     	SUBAR	(_R_AIN2_DATA + 1),W
     0076 0903                      1- 1633     	BTRSS	STATUS,2
     0077 3rrr                      1- 1634     	LGOTO	_00465_DS_
     0078 218A                      1- 1635     	MOVIA	0x8a
     0079 04rr                      1- 1636     	SUBAR	_R_AIN2_DATA,W
     007A                           1- 1637     _00465_DS_:
     007A 0C03                      1- 1638     	BTRSC	STATUS,0
     007B 3rrr                      1- 1639     	LGOTO	_00431_DS_
                                    1- 1640     	.line	428, "main.c"; 	batStatus = 0;//正常状态
                                    1- 1641     	BANKSEL	_batStatus
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 02rr                      1- 1642     	CLRR	_batStatus
                                    1- 1643     	.line	429, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1644     	BANKSEL	_firstLow
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 02rr                      1- 1645     	CLRR	_firstLow
     0080 3rrr                      1- 1646     	LGOTO	_00431_DS_
     0081                           1- 1647     _00420_DS_:
                                    1- 1648     	.line	432, "main.c"; 	else if(++batLowTime > 50)
                                    1- 1649     	BANKSEL	_batLowTime
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 05rr                      1- 1650     	INCR	_batLowTime,F
                                    1- 1651     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1652     ;;unsigned compare: left >= lit (0x33=51), size=1
     0083 2133                      1- 1653     	MOVIA	0x33
     0084 04rr                      1- 1654     	SUBAR	_batLowTime,W
     0085 0803                      1- 1655     	BTRSS	STATUS,0
     0086 3rrr                      1- 1656     	LGOTO	_00431_DS_
                                    1- 1657     	.line	434, "main.c"; 	batStatus = 0;//正常状态
                                    1- 1658     	BANKSEL	_batStatus
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 02rr                      1- 1659     	CLRR	_batStatus
                                    1- 1660     	.line	435, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1661     	BANKSEL	_firstLow
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 02rr                      1- 1662     	CLRR	_firstLow
     008B 3rrr                      1- 1663     	LGOTO	_00431_DS_
     008C                           1- 1664     _00423_DS_:
                                    1- 1665     	.line	440, "main.c"; 	batLowTime = 0;
                                    1- 1666     	BANKSEL	_batLowTime
     008C rrrr                      3-   71 m1      .banksel ram_address
     008D 02rr                      1- 1667     	CLRR	_batLowTime
                                    1- 1668     	.line	441, "main.c"; 	batStatus = 2;//满电状态
     008E 2102                      1- 1669     	MOVIA	0x02
                                    1- 1670     	BANKSEL	_batStatus
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 00rr                      1- 1671     	MOVAR	_batStatus
                                    1- 1672     	.line	442, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1673     	BANKSEL	_firstLow
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 02rr                      1- 1674     	CLRR	_firstLow
     0093                           1- 1675     _00431_DS_:
                                    1- 1676     	.line	445, "main.c"; 	}
                                    1- 1677     	RETURN	
     0093 0010                      3-   26 m1      ret
                                    1- 1678     ; exit point of _checkBat
                                    1- 1680     ;***
                                    1- 1681     ;  pBlock Stats: dbName = C
                                    1- 1682     ;***
                                    1- 1683     ;has an exit
                                    1- 1684     ;functions called:
                                    1- 1685     ;   _F_AIN1_Convert
                                    1- 1686     ;   _F_AIN1_Convert
                                    1- 1687     ;4 compiler assigned registers:
                                    1- 1688     ;   r0x103D
                                    1- 1689     ;   r0x103E
                                    1- 1690     ;   r0x103F
                                    1- 1691     ;   r0x1040
                                    1- 1692     ;; Starting pCode block
                                    1- 1693     .segment "code"; module=main, function=_checkInV
     0000                           1- 1695     _checkInV:
                                    1- 1696     ; 2 exit points
                                    1- 1697     	.line	369, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA_LB = 0x00;
                                    1- 1698     	BANKSEL	_R_AIN1_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1699     	CLRR	_R_AIN1_DATA_LB
                                    1- 1700     	BANKSEL	_R_AIN1_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1701     	CLRR	_R_AIN1_DATA
     0004 02rr                      1- 1702     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1703     	.line	370, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1704     	MOVIA	0x08
     0006 2rrr                      1- 1705     	LCALL	_F_AIN1_Convert
                                    1- 1706     	.line	371, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1707     	BANKSEL	_R_AIN1_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1708     	SWAPR	(_R_AIN1_DATA + 1),W
     0009 22F0                      1- 1709     	ANDIA	0xf0
     000A 00rr                      1- 1710     	MOVAR	(_R_AIN1_DATA + 1)
     000B 15rr                      1- 1711     	SWAPR	_R_AIN1_DATA,W
     000C 00rr                      1- 1712     	MOVAR	_R_AIN1_DATA
     000D 220F                      1- 1713     	ANDIA	0x0f
     000E 11rr                      1- 1714     	IORAR	(_R_AIN1_DATA + 1),F
     000F 12rr                      1- 1715     	XORAR	_R_AIN1_DATA,F
                                    1- 1716     	.line	372, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1717     	MOVIA	0xf0
                                    1- 1718     	BANKSEL	_R_AIN1_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1719     	ANDAR	_R_AIN1_DATA_LB,F
                                    1- 1720     	.line	373, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1721     	MOVR	_R_AIN1_DATA_LB,W
                                    1- 1722     	BANKSEL	r0x103F
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1723     	MOVAR	r0x103F
                                    1- 1724     ;;1	MOVAR	r0x103D
                                    1- 1725     ;;1	CLRR	r0x103E
                                    1- 1726     ;;99	MOVR	r0x103D,W
     0016 2100                      1- 1727     	MOVIA	0x00
                                    1- 1728     	BANKSEL	r0x1040
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1729     	MOVAR	r0x1040
                                    1- 1730     	BANKSEL	r0x103F
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1731     	MOVR	r0x103F,W
                                    1- 1732     	BANKSEL	_R_AIN1_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1733     	ADDAR	_R_AIN1_DATA,F
                                    1- 1734     	BANKSEL	r0x1040
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1735     	MOVR	r0x1040,W
     001F 0C03                      1- 1736     	BTRSC	STATUS,0
     0020 05rr                      1- 1737     	INCR	r0x1040,W
     0021 0D03                      1- 1738     	BTRSC	STATUS,2
     0022 3rrr                      1- 1739     	LGOTO	_00007_DS_
                                    1- 1740     	BANKSEL	_R_AIN1_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1741     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1- 1742     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1743     _00007_DS_:
                                    1- 1744     	.line	374, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1745     	BCR	STATUS,0
                                    1- 1746     	BANKSEL	_R_AIN1_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1747     	RRR	(_R_AIN1_DATA + 1),F
     0028 13rr                      1- 1748     	RRR	_R_AIN1_DATA,F
                                    1- 1749     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1750     	BCR	STATUS,0
     002A 13rr                      1- 1751     	RRR	(_R_AIN1_DATA + 1),F
     002B 13rr                      1- 1752     	RRR	_R_AIN1_DATA,F
                                    1- 1753     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1754     	BCR	STATUS,0
     002D 13rr                      1- 1755     	RRR	(_R_AIN1_DATA + 1),F
     002E 13rr                      1- 1756     	RRR	_R_AIN1_DATA,F
                                    1- 1757     	.line	375, "main.c"; 	if(debug)
                                    1- 1758     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1759     	MOVR	_debug,W
     0031 0D03                      1- 1760     	BTRSC	STATUS,2
     0032 3rrr                      1- 1761     	LGOTO	_00387_DS_
                                    1- 1762     	.line	377, "main.c"; 	R_AIN1_DATA = INV;
     0033 2110                      1- 1763     	MOVIA	0x10
                                    1- 1764     	BANKSEL	_R_AIN1_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1765     	MOVAR	_R_AIN1_DATA
     0036 210B                      1- 1766     	MOVIA	0x0b
     0037 00rr                      1- 1767     	MOVAR	(_R_AIN1_DATA + 1)
                                    1- 1768     ;;unsigned compare: left < lit (0xB0F=2831), size=2
     0038                           1- 1769     _00387_DS_:
                                    1- 1770     	.line	379, "main.c"; 	if(R_AIN1_DATA < 2831)
     0038 210B                      1- 1771     	MOVIA	0x0b
                                    1- 1772     	BANKSEL	_R_AIN1_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1773     	SUBAR	(_R_AIN1_DATA + 1),W
     003B 0903                      1- 1774     	BTRSS	STATUS,2
     003C 3rrr                      1- 1775     	LGOTO	_00404_DS_
     003D 210F                      1- 1776     	MOVIA	0x0f
     003E 04rr                      1- 1777     	SUBAR	_R_AIN1_DATA,W
     003F                           1- 1778     _00404_DS_:
     003F 0C03                      1- 1779     	BTRSC	STATUS,0
     0040 3rrr                      1- 1780     	LGOTO	_00389_DS_
                                    1- 1781     	.line	381, "main.c"; 	inLowTime++;
                                    1- 1782     	BANKSEL	_inLowTime
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 05rr                      1- 1783     	INCR	_inLowTime,F
     0043 3rrr                      1- 1784     	LGOTO	_00390_DS_
     0044                           1- 1785     _00389_DS_:
                                    1- 1786     	.line	385, "main.c"; 	inLowTime = 0;
                                    1- 1787     	BANKSEL	_inLowTime
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 02rr                      1- 1788     	CLRR	_inLowTime
                                    1- 1789     	.line	386, "main.c"; 	chrgStatus = 1;
     0046 2101                      1- 1790     	MOVIA	0x01
                                    1- 1791     	BANKSEL	_chrgStatus
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 1792     	MOVAR	_chrgStatus
                                    1- 1793     ;;unsigned compare: left < lit (0xA=10), size=1
     0049                           1- 1794     _00390_DS_:
                                    1- 1795     	.line	389, "main.c"; 	if(inLowTime >= 10)
     0049 210A                      1- 1796     	MOVIA	0x0a
                                    1- 1797     	BANKSEL	_inLowTime
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 04rr                      1- 1798     	SUBAR	_inLowTime,W
     004C 0803                      1- 1799     	BTRSS	STATUS,0
     004D 3rrr                      1- 1800     	LGOTO	_00393_DS_
                                    1- 1801     	.line	391, "main.c"; 	inLowTime = 10;
     004E 210A                      1- 1802     	MOVIA	0x0a
     004F 00rr                      1- 1803     	MOVAR	_inLowTime
                                    1- 1804     	.line	392, "main.c"; 	chrgStatus = 2;
     0050 2102                      1- 1805     	MOVIA	0x02
                                    1- 1806     	BANKSEL	_chrgStatus
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 1807     	MOVAR	_chrgStatus
     0053                           1- 1808     _00393_DS_:
                                    1- 1809     	.line	395, "main.c"; 	}
                                    1- 1810     	RETURN	
     0053 0010                      3-   26 m1      ret
                                    1- 1811     ; exit point of _checkInV
                                    1- 1813     ;***
                                    1- 1814     ;  pBlock Stats: dbName = C
                                    1- 1815     ;***
                                    1- 1816     ;has an exit
                                    1- 1817     ;functions called:
                                    1- 1818     ;   _delay
                                    1- 1819     ;   _delay
                                    1- 1820     ;1 compiler assigned register :
                                    1- 1821     ;   STK00
                                    1- 1822     ;; Starting pCode block
                                    1- 1823     .segment "code"; module=main, function=_initAD
     0000                           1- 1825     _initAD:
                                    1- 1826     ; 2 exit points
                                    1- 1827     	.line	344, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_Quarter_VDD ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 218B                      1- 1828     	MOVIA	0x8b
     0001 00rr                      1- 1829     	MOVAR	_ADMD
                                    1- 1830     	.line	349, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1831     	CLRR	_ADVREFH
                                    1- 1832     	.line	354, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1833     	MOVIA	0x10
     0004 00rr                      1- 1834     	MOVAR	_ADR
                                    1- 1835     	.line	356, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1836     	MOVIA	0x03
     0006 00rr                      1- 1837     	MOVAR	_ADCR
                                    1- 1838     	.line	359, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1839     	BSR	_ADMDbits,4
                                    1- 1840     	.line	360, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1841     	MOVIA	0x64
     0009 00rr                      1- 1842     	MOVAR	STK00
     000A 2100                      1- 1843     	MOVIA	0x00
     000B 2rrr                      1- 1844     	LCALL	_delay
                                    1- 1845     	.line	363, "main.c"; 	}
                                    1- 1846     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 1847     ; exit point of _initAD
                                    1- 1849     ;***
                                    1- 1850     ;  pBlock Stats: dbName = C
                                    1- 1851     ;***
                                    1- 1852     ;has an exit
                                    1- 1853     ;functions called:
                                    1- 1854     ;   _keyRead
                                    1- 1855     ;   _closeStatus
                                    1- 1856     ;   _gotoSleep
                                    1- 1857     ;   _keyRead
                                    1- 1858     ;   _closeStatus
                                    1- 1859     ;   _gotoSleep
                                    1- 1860     ;1 compiler assigned register :
                                    1- 1861     ;   r0x1041
                                    1- 1862     ;; Starting pCode block
                                    1- 1863     .segment "code"; module=main, function=_keyCtr
                                    1- 1865     ;local variable name mapping:
     0000                           1- 1867     _keyCtr:
                                    1- 1868     ; 2 exit points
                                    1- 1869     	.line	312, "main.c"; 	if(chrgStatus == 1 && overFlag == 0)
                                    1- 1870     	BANKSEL	_chrgStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1871     	MOVR	_chrgStatus,W
     0002 2401                      1- 1872     	XORIA	0x01
     0003 0903                      1- 1873     	BTRSS	STATUS,2
     0004 3rrr                      1- 1874     	LGOTO	_00345_DS_
                                    1- 1875     	BANKSEL	_overFlag
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1876     	MOVR	_overFlag,W
     0007 0903                      1- 1877     	BTRSS	STATUS,2
     0008 3rrr                      1- 1878     	LGOTO	_00345_DS_
                                    1- 1879     	.line	315, "main.c"; 	workStatus = 1;
     0009 2101                      1- 1880     	MOVIA	0x01
                                    1- 1881     	BANKSEL	_workStatus
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1882     	MOVAR	_workStatus
                                    1- 1883     	.line	317, "main.c"; 	LED3ON();
     000C 1Brr                      1- 1884     	BSR	_PORTA,7
     000D                           1- 1885     _00345_DS_:
                                    1- 1886     	.line	319, "main.c"; 	if(chrgStatus == 0 || chrgStatus == 2 || overFlag == 1)
                                    1- 1887     	BANKSEL	_chrgStatus
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 1888     	MOVR	_chrgStatus,W
     000F 0D03                      1- 1889     	BTRSC	STATUS,2
     0010 3rrr                      1- 1890     	LGOTO	_00353_DS_
     0011 01rr                      1- 1891     	MOVR	_chrgStatus,W
     0012 2402                      1- 1892     	XORIA	0x02
     0013 0D03                      1- 1893     	BTRSC	STATUS,2
     0014 3rrr                      1- 1894     	LGOTO	_00353_DS_
                                    1- 1895     	BANKSEL	_overFlag
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 1896     	MOVR	_overFlag,W
     0017 2401                      1- 1897     	XORIA	0x01
     0018 0903                      1- 1898     	BTRSS	STATUS,2
     0019 3rrr                      1- 1899     	LGOTO	_00357_DS_
     001A                           1- 1900     _00353_DS_:
                                    1- 1901     	.line	321, "main.c"; 	char kClick = keyRead(0x01 & ~PORTB);
     001A 07rr                      1- 1902     	COMR	_PORTB,W
                                    1- 1903     	BANKSEL	r0x1041
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1904     	MOVAR	r0x1041
     001D 2101                      1- 1905     	MOVIA	0x01
     001E 10rr                      1- 1906     	ANDAR	r0x1041,F
     001F 01rr                      1- 1907     	MOVR	r0x1041,W
     0020 2rrr                      1- 1908     	LCALL	_keyRead
                                    1- 1909     	BANKSEL	r0x1041
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 00rr                      1- 1910     	MOVAR	r0x1041
                                    1- 1911     	.line	322, "main.c"; 	if(kClick == 2)
     0023 2402                      1- 1912     	XORIA	0x02
     0024 0903                      1- 1913     	BTRSS	STATUS,2
     0025 3rrr                      1- 1914     	LGOTO	_00357_DS_
                                    1- 1915     	.line	324, "main.c"; 	if(workStatus == 0 || overFlag == 1)
                                    1- 1916     	BANKSEL	_workStatus
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1917     	MOVR	_workStatus,W
     0028 0D03                      1- 1918     	BTRSC	STATUS,2
     0029 3rrr                      1- 1919     	LGOTO	_00347_DS_
                                    1- 1920     	BANKSEL	_overFlag
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1- 1921     	MOVR	_overFlag,W
     002C 2401                      1- 1922     	XORIA	0x01
     002D 0903                      1- 1923     	BTRSS	STATUS,2
     002E 3rrr                      1- 1924     	LGOTO	_00348_DS_
     002F                           1- 1925     _00347_DS_:
                                    1- 1926     	.line	326, "main.c"; 	overFlag = 0;
                                    1- 1927     	BANKSEL	_overFlag
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1- 1928     	CLRR	_overFlag
                                    1- 1929     	.line	327, "main.c"; 	workStatus = 1;
     0031 2101                      1- 1930     	MOVIA	0x01
                                    1- 1931     	BANKSEL	_workStatus
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1- 1932     	MOVAR	_workStatus
     0034 3rrr                      1- 1933     	LGOTO	_00357_DS_
     0035                           1- 1934     _00348_DS_:
                                    1- 1935     	.line	332, "main.c"; 	workStatus = 0;
                                    1- 1936     	BANKSEL	_workStatus
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 02rr                      1- 1937     	CLRR	_workStatus
                                    1- 1938     	.line	333, "main.c"; 	closeStatus();
     0037 2rrr                      1- 1939     	LCALL	_closeStatus
                                    1- 1940     	.line	334, "main.c"; 	gotoSleep();
     0038 2rrr                      1- 1941     	LCALL	_gotoSleep
     0039                           1- 1942     _00357_DS_:
                                    1- 1943     	.line	338, "main.c"; 	}
                                    1- 1944     	RETURN	
     0039 0010                      3-   26 m1      ret
                                    1- 1945     ; exit point of _keyCtr
                                    1- 1947     ;***
                                    1- 1948     ;  pBlock Stats: dbName = C
                                    1- 1949     ;***
                                    1- 1950     ;functions called:
                                    1- 1951     ;   _checkBat
                                    1- 1952     ;   _checkOutA
                                    1- 1953     ;   _checkBat
                                    1- 1954     ;   _checkOutA
                                    1- 1955     ;; Starting pCode block
                                    1- 1956     .segment "code"; module=main, function=_workCtr
     0000                           1- 1958     _workCtr:
                                    1- 1959     ; 0 exit points
                                    1- 1960     	.line	240, "main.c"; 	if(PORTA & 0x08)
     0000 09rr                      1- 1961     	BTRSS	_PORTA,3
     0001 3rrr                      1- 1962     	LGOTO	_00260_DS_
                                    1- 1963     	.line	243, "main.c"; 	overFlag = 0;
                                    1- 1964     	BANKSEL	_overFlag
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1965     	CLRR	_overFlag
     0004                           1- 1966     _00260_DS_:
                                    1- 1967     	.line	249, "main.c"; 	checkBat();
     0004 2rrr                      1- 1968     	LCALL	_checkBat
                                    1- 1969     	.line	250, "main.c"; 	if(PORTA & 0x20)
     0005 0Arr                      1- 1970     	BTRSS	_PORTA,5
     0006 3rrr                      1- 1971     	LGOTO	_00279_DS_
                                    1- 1972     	.line	252, "main.c"; 	if(batStatus == 2 || chrgStatus == 2)
                                    1- 1973     	BANKSEL	_batStatus
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1- 1974     	MOVR	_batStatus,W
     0009 2402                      1- 1975     	XORIA	0x02
     000A 0D03                      1- 1976     	BTRSC	STATUS,2
     000B 3rrr                      1- 1977     	LGOTO	_00261_DS_
                                    1- 1978     	BANKSEL	_chrgStatus
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 1979     	MOVR	_chrgStatus,W
     000E 2402                      1- 1980     	XORIA	0x02
     000F 0903                      1- 1981     	BTRSS	STATUS,2
     0010 3rrr                      1- 1982     	LGOTO	_00262_DS_
     0011                           1- 1983     _00261_DS_:
                                    1- 1984     	.line	254, "main.c"; 	LED1OFF();		//充满了，灭灯
     0011 19rr                      1- 1985     	BSR	_PORTB,3
                                    1- 1986     	.line	255, "main.c"; 	CHRGOFF();
     0012 1Drr                      1- 1987     	BCR	_PORTB,2
     0013 3rrr                      1- 1988     	LGOTO	_00263_DS_
     0014                           1- 1989     _00262_DS_:
                                    1- 1990     	.line	259, "main.c"; 	LED1ON();
     0014 1Drr                      1- 1991     	BCR	_PORTB,3
     0015                           1- 1992     _00263_DS_:
                                    1- 1993     	.line	263, "main.c"; 	if(batStatus == 1 && chrgStatus == 2 && overFlag == 0)
                                    1- 1994     	BANKSEL	_batStatus
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 1995     	MOVR	_batStatus,W
     0017 2401                      1- 1996     	XORIA	0x01
     0018 0903                      1- 1997     	BTRSS	STATUS,2
     0019 3rrr                      1- 1998     	LGOTO	_00280_DS_
                                    1- 1999     	BANKSEL	_chrgStatus
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1- 2000     	MOVR	_chrgStatus,W
     001C 2402                      1- 2001     	XORIA	0x02
     001D 0903                      1- 2002     	BTRSS	STATUS,2
     001E 3rrr                      1- 2003     	LGOTO	_00280_DS_
                                    1- 2004     	BANKSEL	_overFlag
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 2005     	MOVR	_overFlag,W
     0021 0903                      1- 2006     	BTRSS	STATUS,2
     0022 3rrr                      1- 2007     	LGOTO	_00280_DS_
                                    1- 2008     	.line	265, "main.c"; 	LED4ON();
     0023 1Crr                      1- 2009     	BCR	_PORTB,1
     0024 3rrr                      1- 2010     	LGOTO	_00280_DS_
     0025                           1- 2011     _00279_DS_:
                                    1- 2012     	.line	272, "main.c"; 	LED1OFF();		//未充电,电池供电
     0025 19rr                      1- 2013     	BSR	_PORTB,3
                                    1- 2014     	.line	273, "main.c"; 	if(workStatus == 1 && batStatus < 3)
                                    1- 2015     	BANKSEL	_workStatus
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 2016     	MOVR	_workStatus,W
     0028 2401                      1- 2017     	XORIA	0x01
     0029 0903                      1- 2018     	BTRSS	STATUS,2
     002A 3rrr                      1- 2019     	LGOTO	_00270_DS_
                                    1- 2020     ;;unsigned compare: left < lit (0x3=3), size=1
     002B 2103                      1- 2021     	MOVIA	0x03
                                    1- 2022     	BANKSEL	_batStatus
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 04rr                      1- 2023     	SUBAR	_batStatus,W
     002E 0803                      1- 2024     	BTRSS	STATUS,0
                                    1- 2025     	.line	275, "main.c"; 	LED2ON();
     002F 1Brr                      1- 2026     	BSR	_PORTA,6
     0030                           1- 2027     _00270_DS_:
                                    1- 2028     	.line	277, "main.c"; 	if(batStatus == 1)
                                    1- 2029     	BANKSEL	_batStatus
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1- 2030     	MOVR	_batStatus,W
     0032 2401                      1- 2031     	XORIA	0x01
     0033 0903                      1- 2032     	BTRSS	STATUS,2
     0034 3rrr                      1- 2033     	LGOTO	_00276_DS_
                                    1- 2034     	.line	279, "main.c"; 	LED4ON();
     0035 1Crr                      1- 2035     	BCR	_PORTB,1
     0036 3rrr                      1- 2036     	LGOTO	_00280_DS_
     0037                           1- 2037     _00276_DS_:
                                    1- 2038     	.line	281, "main.c"; 	else if(batStatus == 0 || batStatus == 2)
                                    1- 2039     	BANKSEL	_batStatus
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1- 2040     	MOVR	_batStatus,W
     0039 0D03                      1- 2041     	BTRSC	STATUS,2
     003A 3rrr                      1- 2042     	LGOTO	_00272_DS_
     003B 01rr                      1- 2043     	MOVR	_batStatus,W
     003C 2402                      1- 2044     	XORIA	0x02
     003D 0D03                      1- 2045     	BTRSC	STATUS,2
     003E                           1- 2046     _00272_DS_:
                                    1- 2047     	.line	283, "main.c"; 	LED4OFF();
     003E 18rr                      1- 2048     	BSR	_PORTB,1
     003F                           1- 2049     _00280_DS_:
                                    1- 2050     	.line	288, "main.c"; 	if(batStatus == 3 && chrgStatus != 1)
                                    1- 2051     	BANKSEL	_batStatus
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1- 2052     	MOVR	_batStatus,W
     0041 2403                      1- 2053     	XORIA	0x03
     0042 0903                      1- 2054     	BTRSS	STATUS,2
     0043 3rrr                      1- 2055     	LGOTO	_00286_DS_
                                    1- 2056     	BANKSEL	_chrgStatus
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1- 2057     	MOVR	_chrgStatus,W
     0046 2401                      1- 2058     	XORIA	0x01
     0047 0D03                      1- 2059     	BTRSC	STATUS,2
     0048 3rrr                      1- 2060     	LGOTO	_00286_DS_
                                    1- 2061     	.line	290, "main.c"; 	if(++firstLowTime >= 10)
                                    1- 2062     	BANKSEL	_firstLowTime
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 05rr                      1- 2063     	INCR	_firstLowTime,F
     004B 210A                      1- 2064     	MOVIA	0x0a
     004C 04rr                      1- 2065     	SUBAR	_firstLowTime,W
     004D 0803                      1- 2066     	BTRSS	STATUS,0
     004E 3rrr                      1- 2067     	LGOTO	_00286_DS_
                                    1- 2068     	.line	292, "main.c"; 	firstLowTime = 0;
     004F 02rr                      1- 2069     	CLRR	_firstLowTime
                                    1- 2070     	.line	293, "main.c"; 	POWEROFF();			//缺电状态关闭负载
     0050 1Crr                      1- 2071     	BCR	_PORTA,0
                                    1- 2072     	.line	294, "main.c"; 	if(firstLow == 0)
                                    1- 2073     	BANKSEL	_firstLow
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 01rr                      1- 2074     	MOVR	_firstLow,W
     0053 0903                      1- 2075     	BTRSS	STATUS,2
     0054 3rrr                      1- 2076     	LGOTO	_00282_DS_
                                    1- 2077     	.line	295, "main.c"; 	shandeng = 6;
     0055 2106                      1- 2078     	MOVIA	0x06
                                    1- 2079     	BANKSEL	_shandeng
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 00rr                      1- 2080     	MOVAR	_shandeng
     0058                           1- 2081     _00282_DS_:
                                    1- 2082     	.line	296, "main.c"; 	firstLow = 1;
     0058 2101                      1- 2083     	MOVIA	0x01
                                    1- 2084     	BANKSEL	_firstLow
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 00rr                      1- 2085     	MOVAR	_firstLow
     005B                           1- 2086     _00286_DS_:
                                    1- 2087     	.line	301, "main.c"; 	if(overFlag == 0)
                                    1- 2088     	BANKSEL	_overFlag
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 01rr                      1- 2089     	MOVR	_overFlag,W
     005D 0D03                      1- 2090     	BTRSC	STATUS,2
                                    1- 2091     	.line	303, "main.c"; 	checkOutA();
     005E 2rrr                      1- 2092     	LCALL	_checkOutA
                                    1- 2093     	.line	307, "main.c"; 	}
                                    1- 2094     	RETURN	
     005F 0010                      3-   26 m1      ret
                                    1- 2096     ;***
                                    1- 2097     ;  pBlock Stats: dbName = C
                                    1- 2098     ;***
                                    1- 2099     ;functions called:
                                    1- 2100     ;   _checkInV
                                    1- 2101     ;   _checkInV
                                    1- 2102     ;; Starting pCode block
                                    1- 2103     .segment "code"; module=main, function=_chrgWork
     0000                           1- 2105     _chrgWork:
                                    1- 2106     ; 0 exit points
                                    1- 2107     	.line	202, "main.c"; 	if(overFlag == 1)
                                    1- 2108     	BANKSEL	_overFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2109     	MOVR	_overFlag,W
     0002 2401                      1- 2110     	XORIA	0x01
     0003 0903                      1- 2111     	BTRSS	STATUS,2
     0004 3rrr                      1- 2112     	LGOTO	_00241_DS_
                                    1- 2113     	.line	204, "main.c"; 	LED2OFF();
     0005 1Frr                      1- 2114     	BCR	_PORTA,6
                                    1- 2115     	.line	205, "main.c"; 	LED3OFF();
     0006 1Frr                      1- 2116     	BCR	_PORTA,7
                                    1- 2117     	.line	206, "main.c"; 	LED4OFF();
     0007 18rr                      1- 2118     	BSR	_PORTB,1
                                    1- 2119     	.line	207, "main.c"; 	POWEROFF();
     0008 1Crr                      1- 2120     	BCR	_PORTA,0
     0009                           1- 2121     _00241_DS_:
                                    1- 2122     	.line	211, "main.c"; 	if(PORTA & 0x20)
     0009 0Arr                      1- 2123     	BTRSS	_PORTA,5
     000A 3rrr                      1- 2124     	LGOTO	_00254_DS_
                                    1- 2125     	.line	213, "main.c"; 	checkInV();
     000B 2rrr                      1- 2126     	LCALL	_checkInV
                                    1- 2127     	.line	214, "main.c"; 	if(chrgStatus == 2)
                                    1- 2128     	BANKSEL	_chrgStatus
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 2129     	MOVR	_chrgStatus,W
     000E 2402                      1- 2130     	XORIA	0x02
     000F 0903                      1- 2131     	BTRSS	STATUS,2
     0010 3rrr                      1- 2132     	LGOTO	_00250_DS_
                                    1- 2133     	.line	217, "main.c"; 	if(workStatus == 1 && batStatus < 3 && overFlag == 0)
                                    1- 2134     	BANKSEL	_workStatus
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2135     	MOVR	_workStatus,W
     0013 2401                      1- 2136     	XORIA	0x01
     0014 0903                      1- 2137     	BTRSS	STATUS,2
     0015 3rrr                      1- 2138     	LGOTO	_00243_DS_
                                    1- 2139     ;;unsigned compare: left < lit (0x3=3), size=1
     0016 2103                      1- 2140     	MOVIA	0x03
                                    1- 2141     	BANKSEL	_batStatus
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 04rr                      1- 2142     	SUBAR	_batStatus,W
     0019 0C03                      1- 2143     	BTRSC	STATUS,0
     001A 3rrr                      1- 2144     	LGOTO	_00243_DS_
                                    1- 2145     	BANKSEL	_overFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 2146     	MOVR	_overFlag,W
     001D 0903                      1- 2147     	BTRSS	STATUS,2
     001E 3rrr                      1- 2148     	LGOTO	_00243_DS_
                                    1- 2149     	.line	219, "main.c"; 	LED2ON();
     001F 1Brr                      1- 2150     	BSR	_PORTA,6
                                    1- 2151     	.line	220, "main.c"; 	POWERON();
     0020 18rr                      1- 2152     	BSR	_PORTA,0
     0021 3rrr                      1- 2153     	LGOTO	_00254_DS_
     0022                           1- 2154     _00243_DS_:
                                    1- 2155     	.line	224, "main.c"; 	LED2OFF();
     0022 1Frr                      1- 2156     	BCR	_PORTA,6
                                    1- 2157     	.line	225, "main.c"; 	LED3OFF();
     0023 1Frr                      1- 2158     	BCR	_PORTA,7
                                    1- 2159     	.line	226, "main.c"; 	LED4OFF();
     0024 18rr                      1- 2160     	BSR	_PORTB,1
                                    1- 2161     	.line	227, "main.c"; 	POWEROFF();
     0025 1Crr                      1- 2162     	BCR	_PORTA,0
     0026 3rrr                      1- 2163     	LGOTO	_00254_DS_
     0027                           1- 2164     _00250_DS_:
                                    1- 2165     	.line	230, "main.c"; 	else if(overFlag == 0)
                                    1- 2166     	BANKSEL	_overFlag
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 2167     	MOVR	_overFlag,W
     0029 0D03                      1- 2168     	BTRSC	STATUS,2
                                    1- 2169     	.line	232, "main.c"; 	LED3ON();
     002A 1Brr                      1- 2170     	BSR	_PORTA,7
     002B                           1- 2171     _00254_DS_:
                                    1- 2172     	.line	236, "main.c"; 	}
                                    1- 2173     	RETURN	
     002B 0010                      3-   26 m1      ret
                                    1- 2176     ;	code size estimation:
                                    1- 2177     ;	  815+  205 =  1020 instructions ( 2450 byte)
                                    1- 2179     	end
                                    1- 2179     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    0000002E
_00003_DS_              Label    0000002E
_00004_DS_              Label    0000002E
_00005_DS_              Label    00000025
_00006_DS_              Label    00000025
_00007_DS_              Label    00000025
_00008_DS_              Label    00000066
_00106_DS_              Label    0000002E
_00107_DS_              Label    0000002F
_00117_DS_              Label    00000034
_00119_DS_              Label    00000038
_00126_DS_              Label    00000041
_00134_DS_              Label    00000043
_00135_DS_              Label    00000049
_00149_DS_              Label    0000005D
_00150_DS_              Label    0000007A
_00160_DS_              Label    0000008D
_00163_DS_              Label    0000001E
_00241_DS_              Label    00000009
_00243_DS_              Label    00000022
_00250_DS_              Label    00000027
_00254_DS_              Label    0000002B
_00260_DS_              Label    00000004
_00261_DS_              Label    00000011
_00262_DS_              Label    00000014
_00263_DS_              Label    00000015
_00270_DS_              Label    00000030
_00272_DS_              Label    0000003E
_00276_DS_              Label    00000037
_00279_DS_              Label    00000025
_00280_DS_              Label    0000003F
_00282_DS_              Label    00000058
_00286_DS_              Label    0000005B
_00345_DS_              Label    0000000D
_00347_DS_              Label    0000002F
_00348_DS_              Label    00000035
_00353_DS_              Label    0000001A
_00357_DS_              Label    00000039
_00387_DS_              Label    00000038
_00389_DS_              Label    00000044
_00390_DS_              Label    00000049
_00393_DS_              Label    00000053
_00404_DS_              Label    0000003F
_00410_DS_              Label    00000038
_00420_DS_              Label    00000081
_00423_DS_              Label    0000008C
_00426_DS_              Label    00000065
_00429_DS_              Label    0000004B
_00431_DS_              Label    00000093
_00460_DS_              Label    0000003F
_00462_DS_              Label    00000052
_00463_DS_              Label    00000060
_00464_DS_              Label    0000006C
_00465_DS_              Label    0000007A
_00471_DS_              Label    00000037
_00473_DS_              Label    00000045
_00474_DS_              Label    00000047
_00477_DS_              Label    00000055
_00488_DS_              Label    0000003E
_00495_DS_              Label    00000010
_00497_DS_              Label    00000031
_00504_DS_              Label    00000010
_00506_DS_              Label    00000031
_00513_DS_              Label    00000010
_00515_DS_              Label    00000031
_00524_DS_              Label    00000000
_00531_DS_              Label    00000009
_00533_DS_              Label    0000001C
_00542_DS_              Label    00000013
_00554_DS_              Label    0000001F
_00555_DS_              Label    00000027
_00557_DS_              Label    00000015
_00558_DS_              Label    00000029
_00559_DS_              Label    0000002A
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_batLowTime             Label    00000000
_batStatus              Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBat               Label    00000000
_checkInV               Label    00000000
_checkOutA              Label    00000000
_chrgStatus             Label    00000000
_chrgWork               Label    00000000
_closeStatus            Label    00000000
_CMPCR                  Label    00000000
_count500ms             Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_F_AIN1_Convert         Label    00000000
_F_AIN2_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_firstLow               Label    00000000
_firstLowTime           Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_inLowTime              Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_longPressFlag          Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_overFlag               Label    00000000
_overTime               Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN1_DATA            Label    00000000
_R_AIN1_DATA_LB         Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_shandeng               Label    00000000
_sleepDelay             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStatus             Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000049
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1034                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
r0x103F                 Label    00000000
r0x1040                 Label    00000000
r0x1041                 Label    00000000
r0x1042                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
