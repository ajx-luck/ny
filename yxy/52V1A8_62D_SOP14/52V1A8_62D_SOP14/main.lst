
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_closeStatus
                                    1-   97     	extern	_keyRead
                                    1-   98     	extern	_delay
                                    1-   99     	extern	_F_wait_eoc
                                    1-  100     	extern	_gotoSleep
                                    1-  101     	extern	_F_AIN4_Convert
                                    1-  102     	extern	_F_AIN2_Convert
                                    1-  103     	extern	_F_AIN1_Convert
                                    1-  104     	extern	_checkOutA
                                    1-  105     	extern	_checkBat
                                    1-  106     	extern	_checkInV
                                    1-  107     	extern	_initAD
                                    1-  108     	extern	_keyCtr
                                    1-  109     	extern	_workCtr
                                    1-  110     	extern	_chrgWork
                                    1-  111     	extern	_isr
                                    1-  112     	extern	_main
                                    1-  113     	extern	_debug
                                    1-  114     	extern	_intCount
                                    1-  115     	extern	_IntFlag
                                    1-  116     	extern	_sleepDelay
                                    1-  117     	extern	_workStep
                                    1-  118     	extern	_longPressFlag
                                    1-  119     	extern	_keyCount
                                    1-  120     	extern	_keyClick
                                    1-  121     	extern	_chrgStatus
                                    1-  122     	extern	_overFlag
                                    1-  123     	extern	_batStatus
                                    1-  124     	extern	_workStatus
                                    1-  125     	extern	_inLowTime
                                    1-  126     	extern	_R_AIN1_DATA
                                    1-  127     	extern	_R_AIN1_DATA_LB
                                    1-  128     	extern	_R_AIN2_DATA
                                    1-  129     	extern	_R_AIN2_DATA_LB
                                    1-  130     	extern	_R_AIN4_DATA
                                    1-  131     	extern	_R_AIN4_DATA_LB
                                    1-  132     	extern	_overTime
                                    1-  133     	extern	_shandeng
                                    1-  134     	extern	_count500ms
                                    1-  135     	extern	_firstLow
                                    1-  136     	extern	_firstLowTime
                                    1-  137     	extern	_batLowTime
                                    1-  138     	extern	_lowBatLock
                                    1-  140     	extern PSAVE
                                    1-  141     	extern SSAVE
                                    1-  142     	extern WSAVE
                                    1-  143     	extern STK02
                                    1-  144     	extern STK01
                                    1-  145     	extern STK00
                                    1-  147     .segment "uninit", 0x20000040
 20000040                           1-  148     PSAVE:
                                    1-  149     	.res 1
 20000041                           1-  150     SSAVE:
                                    1-  151     	.res 1
 20000042                           1-  152     WSAVE:
                                    1-  153     	.res 1
 20000043                           1-  154     STK02:
                                    1-  155     	.res 1
 20000044                           1-  156     STK01:
                                    1-  157     	.res 1
 20000045                           1-  158     STK00:
                                    1-  159     	.res 1
                                    1-  161     ;--------------------------------------------------------
                                    1-  162     ; global definitions
                                    1-  163     ;--------------------------------------------------------
                                    1-  164     ;--------------------------------------------------------
                                    1-  165     ; absolute symbol definitions
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ;--------------------------------------------------------
                                    1-  168     ; compiler-defined variables
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     .segment "uninit"
     0000                           1-  171     r0x1043:
                                    1-  172     	.res	1
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x1042:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x1040:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x1041:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x103C:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x103D:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x1038:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x1039:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x1030:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x1031:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x1032:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x1035:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x102A:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x102B:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x102C:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x102F:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x1024:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x1025:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1026:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1029:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x1021:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1020:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1022:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1023:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x101F:
                                    1-  244     	.res	1
                                    1-  245     ;--------------------------------------------------------
                                    1-  246     ; initialized data
                                    1-  247     ;--------------------------------------------------------
                                    1-  249     .segment "idata"
     0000                           1-  250     _debug:
     0000 0000                      1-  251     	dw	0x00
                                    1-  255     .segment "idata"
     0000                           1-  256     _intCount:
     0000 0000                      1-  257     	dw	0x00
                                    1-  261     .segment "idata"
     0000                           1-  262     _IntFlag:
     0000 0000                      1-  263     	dw	0x00
                                    1-  267     .segment "idata"
     0000                           1-  268     _sleepDelay:
     0000 0000                      1-  269     	dw	0x00
                                    1-  273     .segment "idata"
     0000                           1-  274     _workStep:
     0000 0000                      1-  275     	dw	0x00
                                    1-  279     .segment "idata"
     0000                           1-  280     _longPressFlag:
     0000 0000                      1-  281     	dw	0x00
                                    1-  285     .segment "idata"
     0000                           1-  286     _keyCount:
     0000 0000                      1-  287     	dw	0x00
                                    1-  291     .segment "idata"
     0000                           1-  292     _keyClick:
     0000 0000                      1-  293     	dw	0x00
                                    1-  297     .segment "idata"
     0000                           1-  298     _chrgStatus:
     0000 0000                      1-  299     	dw	0x00
                                    1-  303     .segment "idata"
     0000                           1-  304     _overFlag:
     0000 0000                      1-  305     	dw	0x00
                                    1-  309     .segment "idata"
     0000                           1-  310     _batStatus:
     0000 0000                      1-  311     	dw	0x00
                                    1-  315     .segment "idata"
     0000                           1-  316     _workStatus:
     0000 0000                      1-  317     	dw	0x00
                                    1-  321     .segment "idata"
     0000                           1-  322     _inLowTime:
     0000 0000                      1-  323     	dw	0x00
                                    1-  327     .segment "idata"
     0000                           1-  328     _R_AIN1_DATA:
     0000 0000 0000                 1-  329     	dw	0x00, 0x00
                                    1-  333     .segment "idata"
     0000                           1-  334     _R_AIN1_DATA_LB:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _R_AIN2_DATA:
     0000 0000 0000                 1-  341     	dw	0x00, 0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _R_AIN2_DATA_LB:
     0000 0000                      1-  347     	dw	0x00
                                    1-  351     .segment "idata"
     0000                           1-  352     _R_AIN4_DATA:
     0000 0000 0000                 1-  353     	dw	0x00, 0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _R_AIN4_DATA_LB:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _overTime:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _shandeng:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _count500ms:
     0000 0000                      1-  377     	dw	0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _firstLow:
     0000 0000                      1-  383     	dw	0x00
                                    1-  387     .segment "idata"
     0000                           1-  388     _firstLowTime:
     0000 0000                      1-  389     	dw	0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _batLowTime:
     0000 0000                      1-  395     	dw	0x00
                                    1-  399     .segment "idata"
     0000                           1-  400     _lowBatLock:
     0000 0000                      1-  401     	dw	0x00
                                    1-  404     ;--------------------------------------------------------
                                    1-  405     ; overlayable items in internal ram 
                                    1-  406     ;--------------------------------------------------------
                                    1-  407     ;	udata_ovr
                                    1-  408     ;--------------------------------------------------------
                                    1-  409     ; reset vector 
                                    1-  410     ;--------------------------------------------------------
                                    1-  411     ORG	0x0000
     0000 3rrr                      1-  412     	LGOTO	__nyc_ny8_startup
                                    1-  413     ;--------------------------------------------------------
                                    1-  414     ; interrupt and initialization code
                                    1-  415     ;--------------------------------------------------------
                                    1-  416     ORG 0x0008
     0008 3rrr                      1-  417     	lgoto	__sdcc_interrupt
                                    1-  419     .segment "code"
     0000                           1-  420     __sdcc_interrupt:
                                    1-  421     ;***
                                    1-  422     ;  pBlock Stats: dbName = I
                                    1-  423     ;***
                                    1-  424     ;functions called:
                                    1-  425     ;   _closeStatus
                                    1-  426     ;   _gotoSleep
                                    1-  427     ;   _closeStatus
                                    1-  428     ;   _gotoSleep
                                    1-  429     ;2 compiler assigned registers:
                                    1-  430     ;   STK00
                                    1-  431     ;   STK01
                                    1-  432     ;; Starting pCode block
     0000                           1-  433     _isr:
                                    1-  434     ; 0 exit points
                                    1-  435     	.line	73, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  436     	MOVAR	WSAVE
     0001 1503                      1-  437     	SWAPR	STATUS,W
     0002 0283                      1-  438     	CLRR	STATUS
     0003 00rr                      1-  439     	MOVAR	SSAVE
     0004 010A                      1-  440     	MOVR	PCHBUF,W
     0005 028A                      1-  441     	CLRR	PCHBUF
     0006 00rr                      1-  442     	MOVAR	PSAVE
     0007 0104                      1-  443     	MOVR	FSR,W
                                    1-  444     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  445     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  446     	MOVR	STK00,W
                                    1-  447     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  448     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  449     	MOVR	STK01,W
                                    1-  450     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  451     	MOVAR	___sdcc_saved_stk01
                                    1-  452     	.line	75, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  453     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  454     	LGOTO	_00117_DS_
                                    1-  455     	.line	77, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  456     	MOVIA	0x37
     0013 03rr                      1-  457     	ADDAR	_TMR0,F
                                    1-  458     	.line	78, "main.c"; 	intCount++;
                                    1-  459     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  460     	INCR	_intCount,F
                                    1-  461     	.line	80, "main.c"; 	if(++intCount >= 100)
     0016 05rr                      1-  462     	INCR	_intCount,F
                                    1-  463     ;;unsigned compare: left < lit (0x64=100), size=1
     0017 2164                      1-  464     	MOVIA	0x64
     0018 04rr                      1-  465     	SUBAR	_intCount,W
     0019 0803                      1-  466     	BTRSS	STATUS,0
     001A 3rrr                      1-  467     	LGOTO	_00117_DS_
                                    1-  468     	.line	82, "main.c"; 	intCount = 0;
     001B 02rr                      1-  469     	CLRR	_intCount
                                    1-  470     	.line	83, "main.c"; 	IntFlag = 1;
     001C 2101                      1-  471     	MOVIA	0x01
                                    1-  472     	BANKSEL	_IntFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  473     	MOVAR	_IntFlag
                                    1-  474     	.line	84, "main.c"; 	if(++count500ms >= 50)
                                    1-  475     	BANKSEL	_count500ms
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 05rr                      1-  476     	INCR	_count500ms,F
                                    1-  477     ;;unsigned compare: left < lit (0x32=50), size=1
     0021 2132                      1-  478     	MOVIA	0x32
     0022 04rr                      1-  479     	SUBAR	_count500ms,W
     0023 0803                      1-  480     	BTRSS	STATUS,0
     0024 3rrr                      1-  481     	LGOTO	_00117_DS_
                                    1-  482     	.line	86, "main.c"; 	count500ms = 0;
     0025 02rr                      1-  483     	CLRR	_count500ms
                                    1-  484     	.line	87, "main.c"; 	if(shandeng > 0)
                                    1-  485     	BANKSEL	_shandeng
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  486     	MOVR	_shandeng,W
     0028 0D03                      1-  487     	BTRSC	STATUS,2
     0029 3rrr                      1-  488     	LGOTO	_00117_DS_
                                    1-  489     	.line	89, "main.c"; 	if(shandeng % 2 == 0)
     002A 0Crr                      1-  490     	BTRSC	_shandeng,0
     002B 3rrr                      1-  491     	LGOTO	_00106_DS_
                                    1-  492     	.line	90, "main.c"; 	LED4ON();
     002C 1Crr                      1-  493     	BCR	_PORTB,1
     002D 3rrr                      1-  494     	LGOTO	_00107_DS_
     002E                           1-  495     _00106_DS_:
                                    1-  496     	.line	92, "main.c"; 	LED4OFF();
     002E 18rr                      1-  497     	BSR	_PORTB,1
     002F                           1-  498     _00107_DS_:
                                    1-  499     	.line	93, "main.c"; 	shandeng--;
                                    1-  500     	BANKSEL	_shandeng
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 17rr                      1-  501     	DECRSZ	_shandeng,F
                                    1-  502     	.line	94, "main.c"; 	if(shandeng == 0)
     0031 3rrr                      1-  503     	LGOTO	_00117_DS_
                                    1-  504     	.line	96, "main.c"; 	closeStatus();
     0032 2rrr                      1-  505     	LCALL	_closeStatus
                                    1-  506     	.line	97, "main.c"; 	gotoSleep();
     0033 2rrr                      1-  507     	LCALL	_gotoSleep
     0034                           1-  508     _00117_DS_:
                                    1-  509     	.line	105, "main.c"; 	if(INTFbits.PABIF)
     0034 08rr                      1-  510     	BTRSS	_INTFbits,1
     0035 3rrr                      1-  511     	LGOTO	_00119_DS_
                                    1-  512     	.line	107, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0036 21FD                      1-  513     	MOVIA	0xfd
     0037 00rr                      1-  514     	MOVAR	_INTF
     0038                           1-  515     _00119_DS_:
                                    1-  516     	.line	110, "main.c"; 	INTF = 0;
     0038 02rr                      1-  517     	CLRR	_INTF
                                    1-  518     	.line	112, "main.c"; 	}
                                    1-  519     	BANKSEL	___sdcc_saved_stk01
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  520     	MOVR	___sdcc_saved_stk01,W
     003B 00rr                      1-  521     	MOVAR	STK01
                                    1-  522     	BANKSEL	___sdcc_saved_stk00
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1-  523     	MOVR	___sdcc_saved_stk00,W
     003E 00rr                      1-  524     	MOVAR	STK00
                                    1-  525     	BANKSEL	___sdcc_saved_fsr
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1-  526     	MOVR	___sdcc_saved_fsr,W
     0041 0084                      1-  527     	MOVAR	FSR
     0042 01rr                      1-  528     	MOVR	PSAVE,W
     0043 008A                      1-  529     	MOVAR	PCHBUF
     0044 0283                      1-  530     	CLRR	STATUS
     0045 15rr                      1-  531     	SWAPR	SSAVE,W
     0046 0083                      1-  532     	MOVAR	STATUS
     0047 15rr                      1-  533     	SWAPR	WSAVE,F
     0048 15rr                      1-  534     	SWAPR	WSAVE,W
     0049                           1-  535     END_OF_INTERRUPT:
     0049 0011                      1-  536     	RETIE	
                                    1-  538     ;--------------------------------------------------------
                                    1-  539     ; code
                                    1-  540     ;--------------------------------------------------------
                                    1-  541     ;***
                                    1-  542     ;  pBlock Stats: dbName = M
                                    1-  543     ;***
                                    1-  544     ;has an exit
                                    1-  545     ;functions called:
                                    1-  546     ;   _closeStatus
                                    1-  547     ;   _initAD
                                    1-  548     ;   _keyCtr
                                    1-  549     ;   _chrgWork
                                    1-  550     ;   _workCtr
                                    1-  551     ;   _closeStatus
                                    1-  552     ;   _gotoSleep
                                    1-  553     ;   _closeStatus
                                    1-  554     ;   _initAD
                                    1-  555     ;   _keyCtr
                                    1-  556     ;   _chrgWork
                                    1-  557     ;   _workCtr
                                    1-  558     ;   _closeStatus
                                    1-  559     ;   _gotoSleep
                                    1-  560     ;1 compiler assigned register :
                                    1-  561     ;   r0x1043
                                    1-  562     ;; Starting pCode block
                                    1-  563     .segment "code"; module=main, function=_main
     0000                           1-  565     _main:
                                    1-  566     ; 2 exit points
                                    1-  567     	.line	116, "main.c"; 	DISI();
     0000 0013                      1-  568     	DISI
                                    1-  569     	.line	117, "main.c"; 	IOSTA = C_PA1_Input | C_PA2_Input | C_PA3_Input | C_PA4_Input | C_PA5_Input;
     0001 213E                      1-  570     	MOVIA	0x3e
     0002 000r                      1-  571     	IOST	_IOSTA
                                    1-  572     	.line	118, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1-  573     	MOVIA	0x01
     0004 000r                      1-  574     	IOST	_IOSTB
                                    1-  575     	.line	119, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1-  576     	CLRR	_PORTB
                                    1-  577     	.line	120, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1-  578     	CLRR	_PORTA
                                    1-  579     	.line	121, "main.c"; 	APHCON = 0xFF;
     0007 21FF                      1-  580     	MOVIA	0xff
     0008 000r                      1-  581     	IOST	_APHCON
                                    1-  582     	.line	122, "main.c"; 	BPHCON = 0xFE;
     0009 21FE                      1-  583     	MOVIA	0xfe
     000A 00rr                      1-  584     	MOVAR	_BPHCON
                                    1-  585     	.line	123, "main.c"; 	ABPLCON = 0xFF;
     000B 21FF                      1-  586     	MOVIA	0xff
     000C 00rr                      1-  587     	MOVAR	_ABPLCON
                                    1-  588     	.line	125, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000D 2101                      1-  589     	MOVIA	0x01
     000E 00rr                      1-  590     	MOVAR	_INTE
                                    1-  591     	.line	127, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1-  592     	CLRA	
     0010 000r                      1-  593     	IOST	_PCON1
                                    1-  594     	.line	129, "main.c"; 	TMR0 = 55;
     0011 2137                      1-  595     	MOVIA	0x37
     0012 00rr                      1-  596     	MOVAR	_TMR0
                                    1-  597     	.line	130, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0013 0200                      1-  598     	CLRA	
     0014 0003                      1-  599     	T0MD	
                                    1-  600     	.line	132, "main.c"; 	PCON1 = C_TMR0_En;
     0015 2101                      1-  601     	MOVIA	0x01
     0016 000r                      1-  602     	IOST	_PCON1
                                    1-  603     	.line	134, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR,PA5关闭上拉
     0017 2198                      1-  604     	MOVIA	0x98
     0018 00rr                      1-  605     	MOVAR	_PCON
                                    1-  606     	.line	136, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1-  607     	MOVIA	0x01
     001A 000r                      1-  608     	IOST	_PCON1
                                    1-  609     	.line	137, "main.c"; 	ENI();
     001B 0004                      1-  610     	ENI
                                    1-  611     	.line	138, "main.c"; 	closeStatus();
     001C 2rrr                      1-  612     	LCALL	_closeStatus
                                    1-  613     	.line	139, "main.c"; 	initAD();
     001D 2rrr                      1-  614     	LCALL	_initAD
     001E                           1-  615     _00164_DS_:
                                    1-  616     	.line	144, "main.c"; 	CLRWDT();
     001E 0002                      1-  617     	clrwdt
                                    1-  618     	.line	145, "main.c"; 	if(PORTA & 0x20)
     001F 0Arr                      1-  619     	BTRSS	_PORTA,5
     0020 3rrr                      1-  620     	LGOTO	_00150_DS_
                                    1-  621     	.line	147, "main.c"; 	lowBatLock = 0;//解锁低电
                                    1-  622     	BANKSEL	_lowBatLock
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 02rr                      1-  623     	CLRR	_lowBatLock
                                    1-  624     ;;unsigned compare: left < lit (0x2=2), size=1
                                    1-  625     	.line	149, "main.c"; 	if(chrgStatus < 2)
     0023 2102                      1-  626     	MOVIA	0x02
                                    1-  627     	BANKSEL	_chrgStatus
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 04rr                      1-  628     	SUBAR	_chrgStatus,W
                                    1-  629     	BANKSEL	r0x1043
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 02rr                      1-  630     	CLRR	r0x1043
     0028 0803                      1-  631     	BTRSS	STATUS,0
     0029 18rr                      1-  632     	BSR	r0x1043,0
     002A 01rr                      1-  633     	MOVR	r0x1043,W
     002B 0D03                      1-  634     	BTRSC	STATUS,2
     002C 3rrr                      1-  635     	LGOTO	_00134_DS_
                                    1-  636     	.line	151, "main.c"; 	LED2OFF();
     002D 1Frr                      1-  637     	BCR	_PORTA,6
                                    1-  638     	.line	152, "main.c"; 	if(chrgStatus == 1)
                                    1-  639     	BANKSEL	_chrgStatus
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1-  640     	MOVR	_chrgStatus,W
     0030 2401                      1-  641     	XORIA	0x01
     0031 0D03                      1-  642     	BTRSC	STATUS,2
                                    1-  643     	.line	153, "main.c"; 	LED4OFF();
     0032 18rr                      1-  644     	BSR	_PORTB,1
                                    1-  645     	.line	154, "main.c"; 	if(batStatus == 0 || batStatus == 2 || (batStatus == 3 && shandeng == 0))
                                    1-  646     	BANKSEL	_batStatus
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  647     	MOVR	_batStatus,W
     0035 0D03                      1-  648     	BTRSC	STATUS,2
     0036 3rrr                      1-  649     	LGOTO	_00126_DS_
     0037 01rr                      1-  650     	MOVR	_batStatus,W
     0038 2402                      1-  651     	XORIA	0x02
     0039 0D03                      1-  652     	BTRSC	STATUS,2
     003A 3rrr                      1-  653     	LGOTO	_00126_DS_
     003B 01rr                      1-  654     	MOVR	_batStatus,W
     003C 2403                      1-  655     	XORIA	0x03
     003D 0903                      1-  656     	BTRSS	STATUS,2
     003E 3rrr                      1-  657     	LGOTO	_00135_DS_
                                    1-  658     	BANKSEL	_shandeng
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1-  659     	MOVR	_shandeng,W
     0041 0903                      1-  660     	BTRSS	STATUS,2
     0042 3rrr                      1-  661     	LGOTO	_00135_DS_
     0043                           1-  662     _00126_DS_:
                                    1-  663     	.line	155, "main.c"; 	LED4OFF();
     0043 18rr                      1-  664     	BSR	_PORTB,1
     0044 3rrr                      1-  665     	LGOTO	_00135_DS_
     0045                           1-  666     _00134_DS_:
                                    1-  667     	.line	159, "main.c"; 	LED3OFF();
     0045 1Frr                      1-  668     	BCR	_PORTA,7
                                    1-  669     	.line	160, "main.c"; 	if(batStatus == 3)
                                    1-  670     	BANKSEL	_batStatus
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1-  671     	MOVR	_batStatus,W
     0048 2403                      1-  672     	XORIA	0x03
     0049 0D03                      1-  673     	BTRSC	STATUS,2
                                    1-  674     	.line	161, "main.c"; 	LED2OFF();
     004A 1Frr                      1-  675     	BCR	_PORTA,6
     004B                           1-  676     _00135_DS_:
                                    1-  677     	.line	163, "main.c"; 	if(chrgStatus == 0)
                                    1-  678     	BANKSEL	_chrgStatus
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1-  679     	MOVR	_chrgStatus,W
     004D 0D03                      1-  680     	BTRSC	STATUS,2
                                    1-  681     	.line	165, "main.c"; 	CHRGON();
     004E 19rr                      1-  682     	BSR	_PORTB,2
                                    1-  683     	.line	167, "main.c"; 	if(workStatus == 1 && overFlag == 0 && chrgStatus < 2)
                                    1-  684     	BANKSEL	_workStatus
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1-  685     	MOVR	_workStatus,W
     0051 2401                      1-  686     	XORIA	0x01
     0052 0903                      1-  687     	BTRSS	STATUS,2
     0053 3rrr                      1-  688     	LGOTO	_00151_DS_
                                    1-  689     	BANKSEL	_overFlag
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 01rr                      1-  690     	MOVR	_overFlag,W
     0056 0903                      1-  691     	BTRSS	STATUS,2
     0057 3rrr                      1-  692     	LGOTO	_00151_DS_
                                    1-  693     	BANKSEL	r0x1043
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 01rr                      1-  694     	MOVR	r0x1043,W
     005A 0D03                      1-  695     	BTRSC	STATUS,2
     005B 3rrr                      1-  696     	LGOTO	_00151_DS_
                                    1-  697     	.line	169, "main.c"; 	POWERON();
     005C 18rr                      1-  698     	BSR	_PORTA,0
                                    1-  699     	.line	170, "main.c"; 	LED3ON();
     005D 1Brr                      1-  700     	BSR	_PORTA,7
     005E 3rrr                      1-  701     	LGOTO	_00151_DS_
     005F                           1-  702     _00150_DS_:
                                    1-  703     	.line	177, "main.c"; 	if(workStatus == 1)
                                    1-  704     	BANKSEL	r0x1043
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 02rr                      1-  705     	CLRR	r0x1043
                                    1-  706     	BANKSEL	_workStatus
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 01rr                      1-  707     	MOVR	_workStatus,W
     0063 2401                      1-  708     	XORIA	0x01
     0064 0903                      1-  709     	BTRSS	STATUS,2
     0065 3rrr                      1-  710     	LGOTO	_00008_DS_
                                    1-  711     	BANKSEL	r0x1043
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 05rr                      1-  712     	INCR	r0x1043,F
     0068                           1-  713     _00008_DS_:
                                    1-  714     	BANKSEL	r0x1043
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 01rr                      1-  715     	MOVR	r0x1043,W
     006A 0903                      1-  716     	BTRSS	STATUS,2
                                    1-  717     	.line	178, "main.c"; 	CHRGOFF();
     006B 1Drr                      1-  718     	BCR	_PORTB,2
                                    1-  719     	.line	179, "main.c"; 	LED3OFF();
     006C 1Frr                      1-  720     	BCR	_PORTA,7
                                    1-  721     	.line	180, "main.c"; 	chrgStatus = 0;
                                    1-  722     	BANKSEL	_chrgStatus
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 02rr                      1-  723     	CLRR	_chrgStatus
                                    1-  724     	.line	181, "main.c"; 	if(overFlag == 0 && batStatus < 3 && workStatus == 1 && lowBatLock == 0)
                                    1-  725     	BANKSEL	_overFlag
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 01rr                      1-  726     	MOVR	_overFlag,W
     0071 0903                      1-  727     	BTRSS	STATUS,2
     0072 3rrr                      1-  728     	LGOTO	_00151_DS_
                                    1-  729     ;;unsigned compare: left < lit (0x3=3), size=1
     0073 2103                      1-  730     	MOVIA	0x03
                                    1-  731     	BANKSEL	_batStatus
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 04rr                      1-  732     	SUBAR	_batStatus,W
     0076 0C03                      1-  733     	BTRSC	STATUS,0
     0077 3rrr                      1-  734     	LGOTO	_00151_DS_
                                    1-  735     	BANKSEL	r0x1043
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 01rr                      1-  736     	MOVR	r0x1043,W
     007A 0D03                      1-  737     	BTRSC	STATUS,2
     007B 3rrr                      1-  738     	LGOTO	_00151_DS_
                                    1-  739     	BANKSEL	_lowBatLock
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 01rr                      1-  740     	MOVR	_lowBatLock,W
     007E 0D03                      1-  741     	BTRSC	STATUS,2
                                    1-  742     	.line	183, "main.c"; 	POWERON();
     007F 18rr                      1-  743     	BSR	_PORTA,0
     0080                           1-  744     _00151_DS_:
                                    1-  745     	.line	186, "main.c"; 	if(!IntFlag)
                                    1-  746     	BANKSEL	_IntFlag
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1-  747     	MOVR	_IntFlag,W
     0082 0D03                      1-  748     	BTRSC	STATUS,2
     0083 3rrr                      1-  749     	LGOTO	_00164_DS_
                                    1-  750     	.line	188, "main.c"; 	IntFlag = 0;
     0084 02rr                      1-  751     	CLRR	_IntFlag
                                    1-  752     	.line	189, "main.c"; 	keyCtr();
     0085 2rrr                      1-  753     	LCALL	_keyCtr
                                    1-  754     	.line	190, "main.c"; 	chrgWork();
     0086 2rrr                      1-  755     	LCALL	_chrgWork
                                    1-  756     	.line	191, "main.c"; 	if(workStatus == 1)
                                    1-  757     	BANKSEL	_workStatus
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 01rr                      1-  758     	MOVR	_workStatus,W
     0089 2401                      1-  759     	XORIA	0x01
     008A 0D03                      1-  760     	BTRSC	STATUS,2
                                    1-  761     	.line	192, "main.c"; 	workCtr();
     008B 2rrr                      1-  762     	LCALL	_workCtr
                                    1-  763     	.line	193, "main.c"; 	if(((PORTA & 0x20) == 0 || chrgStatus == 2) && workStatus == 0 && keyCount == 0)
     008C 0Arr                      1-  764     	BTRSS	_PORTA,5
     008D 3rrr                      1-  765     	LGOTO	_00161_DS_
                                    1-  766     	BANKSEL	_chrgStatus
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 01rr                      1-  767     	MOVR	_chrgStatus,W
     0090 2402                      1-  768     	XORIA	0x02
     0091 0903                      1-  769     	BTRSS	STATUS,2
     0092 3rrr                      1-  770     	LGOTO	_00164_DS_
     0093                           1-  771     _00161_DS_:
                                    1-  772     	BANKSEL	_workStatus
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 01rr                      1-  773     	MOVR	_workStatus,W
     0095 0903                      1-  774     	BTRSS	STATUS,2
     0096 3rrr                      1-  775     	LGOTO	_00164_DS_
                                    1-  776     	BANKSEL	_keyCount
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 01rr                      1-  777     	MOVR	_keyCount,W
     0099 0903                      1-  778     	BTRSS	STATUS,2
     009A 3rrr                      1-  779     	LGOTO	_00164_DS_
                                    1-  780     	.line	195, "main.c"; 	closeStatus();
     009B 2rrr                      1-  781     	LCALL	_closeStatus
                                    1-  782     	.line	196, "main.c"; 	if(++sleepDelay > 50)
                                    1-  783     	BANKSEL	_sleepDelay
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 05rr                      1-  784     	INCR	_sleepDelay,F
                                    1-  785     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  786     ;;unsigned compare: left >= lit (0x33=51), size=1
     009E 2133                      1-  787     	MOVIA	0x33
     009F 04rr                      1-  788     	SUBAR	_sleepDelay,W
     00A0 0803                      1-  789     	BTRSS	STATUS,0
     00A1 3rrr                      1-  790     	LGOTO	_00164_DS_
                                    1-  791     	.line	197, "main.c"; 	gotoSleep();
     00A2 2rrr                      1-  792     	LCALL	_gotoSleep
     00A3 3rrr                      1-  793     	LGOTO	_00164_DS_
                                    1-  794     	.line	200, "main.c"; 	}
                                    1-  795     	RETURN	
     00A4 0010                      3-   26 m1      ret
                                    1-  796     ; exit point of _main
                                    1-  798     ;***
                                    1-  799     ;  pBlock Stats: dbName = C
                                    1-  800     ;***
                                    1-  801     ;has an exit
                                    1-  802     ;; Starting pCode block
                                    1-  803     .segment "code"; module=main, function=_closeStatus
     0000                           1-  805     _closeStatus:
                                    1-  806     ; 2 exit points
                                    1-  807     	.line	670, "main.c"; 	LED1OFF();
     0000 19rr                      1-  808     	BSR	_PORTB,3
                                    1-  809     	.line	671, "main.c"; 	LED2OFF();
     0001 1Frr                      1-  810     	BCR	_PORTA,6
                                    1-  811     	.line	672, "main.c"; 	LED3OFF();
     0002 1Frr                      1-  812     	BCR	_PORTA,7
                                    1-  813     	.line	673, "main.c"; 	LED4OFF();
     0003 18rr                      1-  814     	BSR	_PORTB,1
                                    1-  815     	.line	674, "main.c"; 	CHRGON();
     0004 19rr                      1-  816     	BSR	_PORTB,2
                                    1-  817     	.line	675, "main.c"; 	POWEROFF();
     0005 1Crr                      1-  818     	BCR	_PORTA,0
                                    1-  819     	.line	676, "main.c"; 	}
                                    1-  820     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  821     ; exit point of _closeStatus
                                    1-  823     ;***
                                    1-  824     ;  pBlock Stats: dbName = C
                                    1-  825     ;***
                                    1-  826     ;has an exit
                                    1-  827     ;1 compiler assigned register :
                                    1-  828     ;   r0x101F
                                    1-  829     ;; Starting pCode block
                                    1-  830     .segment "code"; module=main, function=_keyRead
                                    1-  832     ;local variable name mapping:
     0000                           1-  834     _keyRead:
                                    1-  835     ; 2 exit points
                                    1-  836     	.line	635, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  837     	BANKSEL	r0x101F
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  838     	MOVAR	r0x101F
                                    1-  839     	.line	637, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  840     	MOVR	r0x101F,W
     0003 0D03                      1-  841     	BTRSC	STATUS,2
     0004 3rrr                      1-  842     	LGOTO	_00632_DS_
                                    1-  843     	.line	639, "main.c"; 	keyCount++;
                                    1-  844     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  845     	INCR	_keyCount,F
                                    1-  846     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  847     	.line	640, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  848     	MOVIA	0xc8
     0008 04rr                      1-  849     	SUBAR	_keyCount,W
     0009 0803                      1-  850     	BTRSS	STATUS,0
     000A 3rrr                      1-  851     	LGOTO	_00633_DS_
                                    1-  852     	.line	642, "main.c"; 	keyCount = 200;
     000B 21C8                      1-  853     	MOVIA	0xc8
     000C 00rr                      1-  854     	MOVAR	_keyCount
                                    1-  855     	.line	643, "main.c"; 	if(!longPressFlag)
                                    1-  856     	BANKSEL	_longPressFlag
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  857     	MOVR	_longPressFlag,W
     000F 0903                      1-  858     	BTRSS	STATUS,2
     0010 3rrr                      1-  859     	LGOTO	_00633_DS_
                                    1-  860     	.line	645, "main.c"; 	longPressFlag = 1;
     0011 2101                      1-  861     	MOVIA	0x01
     0012 00rr                      1-  862     	MOVAR	_longPressFlag
                                    1-  863     	.line	646, "main.c"; 	return 2;
     0013 2102                      1-  864     	MOVIA	0x02
     0014 3rrr                      1-  865     	LGOTO	_00634_DS_
                                    1-  866     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1-  867     _00632_DS_:
                                    1-  868     	.line	652, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1-  869     	MOVIA	0xc8
                                    1-  870     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 04rr                      1-  871     	SUBAR	_keyCount,W
     0018 0803                      1-  872     	BTRSS	STATUS,0
     0019 3rrr                      1-  873     	LGOTO	_00629_DS_
                                    1-  874     	.line	654, "main.c"; 	keyCount = 0;
     001A 02rr                      1-  875     	CLRR	_keyCount
                                    1-  876     	.line	655, "main.c"; 	longPressFlag = 0;
                                    1-  877     	BANKSEL	_longPressFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1-  878     	CLRR	_longPressFlag
                                    1-  879     	.line	656, "main.c"; 	return	0;
     001D 2100                      1-  880     	MOVIA	0x00
     001E 3rrr                      1-  881     	LGOTO	_00634_DS_
                                    1-  882     ;;unsigned compare: left < lit (0x8=8), size=1
     001F                           1-  883     _00629_DS_:
                                    1-  884     	.line	658, "main.c"; 	else if(keyCount >= 8)
     001F 2108                      1-  885     	MOVIA	0x08
                                    1-  886     	BANKSEL	_keyCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1-  887     	SUBAR	_keyCount,W
     0022 0803                      1-  888     	BTRSS	STATUS,0
     0023 3rrr                      1-  889     	LGOTO	_00630_DS_
                                    1-  890     	.line	660, "main.c"; 	keyCount = 0;
     0024 02rr                      1-  891     	CLRR	_keyCount
                                    1-  892     	.line	661, "main.c"; 	return	1;
     0025 2101                      1-  893     	MOVIA	0x01
     0026 3rrr                      1-  894     	LGOTO	_00634_DS_
     0027                           1-  895     _00630_DS_:
                                    1-  896     	.line	663, "main.c"; 	keyCount = 0;
                                    1-  897     	BANKSEL	_keyCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1-  898     	CLRR	_keyCount
     0029                           1-  899     _00633_DS_:
                                    1-  900     	.line	665, "main.c"; 	return 0;
     0029 2100                      1-  901     	MOVIA	0x00
     002A                           1-  902     _00634_DS_:
                                    1-  903     	.line	666, "main.c"; 	}
                                    1-  904     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1-  905     ; exit point of _keyRead
                                    1-  907     ;***
                                    1-  908     ;  pBlock Stats: dbName = C
                                    1-  909     ;***
                                    1-  910     ;has an exit
                                    1-  911     ;5 compiler assigned registers:
                                    1-  912     ;   r0x1020
                                    1-  913     ;   STK00
                                    1-  914     ;   r0x1021
                                    1-  915     ;   r0x1022
                                    1-  916     ;   r0x1023
                                    1-  917     ;; Starting pCode block
                                    1-  918     .segment "code"; module=main, function=_delay
                                    1-  920     ;local variable name mapping:
     0000                           1-  925     _delay:
                                    1-  926     ; 2 exit points
                                    1-  927     	.line	629, "main.c"; 	void delay(u16t time)
                                    1-  928     	BANKSEL	r0x1020
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  929     	MOVAR	r0x1020
     0002 01rr                      1-  930     	MOVR	STK00,W
                                    1-  931     	BANKSEL	r0x1021
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  932     	MOVAR	r0x1021
                                    1-  933     	.line	631, "main.c"; 	for(u16t i=0;i<time;i++);
                                    1-  934     	BANKSEL	r0x1022
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  935     	CLRR	r0x1022
                                    1-  936     	BANKSEL	r0x1023
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  937     	CLRR	r0x1023
     0009                           1-  938     _00606_DS_:
                                    1-  939     	BANKSEL	r0x1020
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  940     	MOVR	r0x1020,W
                                    1-  941     	BANKSEL	r0x1023
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  942     	SUBAR	r0x1023,W
     000D 0903                      1-  943     	BTRSS	STATUS,2
     000E 3rrr                      1-  944     	LGOTO	_00617_DS_
                                    1-  945     	BANKSEL	r0x1021
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  946     	MOVR	r0x1021,W
                                    1-  947     	BANKSEL	r0x1022
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  948     	SUBAR	r0x1022,W
     0013                           1-  949     _00617_DS_:
     0013 0C03                      1-  950     	BTRSC	STATUS,0
     0014 3rrr                      1-  951     	LGOTO	_00608_DS_
                                    1-  952     	BANKSEL	r0x1022
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  953     	INCR	r0x1022,F
     0017 0903                      1-  954     	BTRSS	STATUS,2
     0018 3rrr                      1-  955     	LGOTO	_00001_DS_
                                    1-  956     	BANKSEL	r0x1023
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  957     	INCR	r0x1023,F
     001B                           1-  958     _00001_DS_:
     001B 3rrr                      1-  959     	LGOTO	_00606_DS_
     001C                           1-  960     _00608_DS_:
                                    1-  961     	.line	632, "main.c"; 	}
                                    1-  962     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  963     ; exit point of _delay
                                    1-  965     ;***
                                    1-  966     ;  pBlock Stats: dbName = C
                                    1-  967     ;***
                                    1-  968     ;has an exit
                                    1-  969     ;; Starting pCode block
                                    1-  970     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  972     _F_wait_eoc:
                                    1-  973     ; 2 exit points
     0000                           1-  974     _00599_DS_:
                                    1-  975     	.line	623, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  976     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  977     	LGOTO	_00599_DS_
                                    1-  978     	.line	625, "main.c"; 	}
                                    1-  979     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  980     ; exit point of _F_wait_eoc
                                    1-  982     ;***
                                    1-  983     ;  pBlock Stats: dbName = C
                                    1-  984     ;***
                                    1-  985     ;has an exit
                                    1-  986     ;; Starting pCode block
                                    1-  987     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  989     _gotoSleep:
                                    1-  990     ; 2 exit points
                                    1-  991     	.line	597, "main.c"; 	workStatus = 0;
                                    1-  992     	BANKSEL	_workStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  993     	CLRR	_workStatus
                                    1-  994     	.line	599, "main.c"; 	chrgStatus = 0;
                                    1-  995     	BANKSEL	_chrgStatus
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  996     	CLRR	_chrgStatus
                                    1-  997     	.line	600, "main.c"; 	firstLow = 0;
                                    1-  998     	BANKSEL	_firstLow
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  999     	CLRR	_firstLow
                                    1- 1000     	.line	601, "main.c"; 	overFlag = 0;
                                    1- 1001     	BANKSEL	_overFlag
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 1002     	CLRR	_overFlag
                                    1- 1003     	.line	602, "main.c"; 	sleepDelay = 0;
                                    1- 1004     	BANKSEL	_sleepDelay
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 1005     	CLRR	_sleepDelay
                                    1- 1006     	.line	603, "main.c"; 	workStep = 0;
                                    1- 1007     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1- 1008     	CLRR	_workStep
                                    1- 1009     	.line	604, "main.c"; 	AWUCON = 0x28;
     000C 2128                      1- 1010     	MOVIA	0x28
     000D 00rr                      1- 1011     	MOVAR	_AWUCON
                                    1- 1012     	.line	605, "main.c"; 	BWUCON = 0x01;
     000E 2101                      1- 1013     	MOVIA	0x01
     000F 00rr                      1- 1014     	MOVAR	_BWUCON
                                    1- 1015     	.line	606, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0010 210B                      1- 1016     	MOVIA	0x0b
     0011 00rr                      1- 1017     	MOVAR	_INTE
                                    1- 1018     	.line	607, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0012 2118                      1- 1019     	MOVIA	0x18
     0013 00rr                      1- 1020     	MOVAR	_PCON
                                    1- 1021     	.line	608, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0014 02rr                      1- 1022     	CLRR	_INTF
                                    1- 1023     	.line	609, "main.c"; 	CLRWDT();
     0015 0002                      1- 1024     	clrwdt
                                    1- 1025     	.line	610, "main.c"; 	ENI();
     0016 0004                      1- 1026     	ENI
                                    1- 1027     	.line	611, "main.c"; 	SLEEP();
     0017 0001                      1- 1028     	sleep
                                    1- 1029     	.line	612, "main.c"; 	AWUCON = 0x00;
     0018 02rr                      1- 1030     	CLRR	_AWUCON
                                    1- 1031     	.line	613, "main.c"; 	BWUCON = 0x00;
     0019 02rr                      1- 1032     	CLRR	_BWUCON
                                    1- 1033     	.line	614, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     001A 2101                      1- 1034     	MOVIA	0x01
     001B 00rr                      1- 1035     	MOVAR	_INTE
                                    1- 1036     	.line	615, "main.c"; 	INTF = 0;
     001C 02rr                      1- 1037     	CLRR	_INTF
                                    1- 1038     	.line	617, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     001D 21B8                      1- 1039     	MOVIA	0xb8
     001E 00rr                      1- 1040     	MOVAR	_PCON
                                    1- 1041     	.line	619, "main.c"; 	}
                                    1- 1042     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1- 1043     ; exit point of _gotoSleep
                                    1- 1045     ;***
                                    1- 1046     ;  pBlock Stats: dbName = C
                                    1- 1047     ;***
                                    1- 1048     ;has an exit
                                    1- 1049     ;functions called:
                                    1- 1050     ;   _delay
                                    1- 1051     ;   _F_wait_eoc
                                    1- 1052     ;   _delay
                                    1- 1053     ;   _F_wait_eoc
                                    1- 1054     ;7 compiler assigned registers:
                                    1- 1055     ;   r0x1024
                                    1- 1056     ;   STK00
                                    1- 1057     ;   r0x1025
                                    1- 1058     ;   r0x1026
                                    1- 1059     ;   r0x1027
                                    1- 1060     ;   r0x1028
                                    1- 1061     ;   r0x1029
                                    1- 1062     ;; Starting pCode block
                                    1- 1063     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1065     ;local variable name mapping:
     0000                           1- 1068     _F_AIN4_Convert:
                                    1- 1069     ; 2 exit points
                                    1- 1070     	.line	579, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1071     	BANKSEL	r0x1024
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1072     	MOVAR	r0x1024
                                    1- 1073     	.line	581, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1074     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1075     	CLRR	_R_AIN4_DATA_LB
                                    1- 1076     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1077     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1078     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1079     	.line	583, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1080     	MOVIA	0x94
     0008 00rr                      1- 1081     	MOVAR	_ADMD
                                    1- 1082     	.line	584, "main.c"; 	delay(200);	
     0009 21C8                      1- 1083     	MOVIA	0xc8
     000A 00rr                      1- 1084     	MOVAR	STK00
     000B 2100                      1- 1085     	MOVIA	0x00
     000C 2rrr                      1- 1086     	LCALL	_delay
                                    1- 1087     	.line	585, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1088     	MOVIA	0x01
                                    1- 1089     	BANKSEL	r0x1025
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1090     	MOVAR	r0x1025
     0010                           1- 1091     _00588_DS_:
                                    1- 1092     	BANKSEL	r0x1025
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1093     	MOVR	r0x1025,W
                                    1- 1094     	BANKSEL	r0x1024
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1095     	SUBAR	r0x1024,W
     0014 0803                      1- 1096     	BTRSS	STATUS,0
     0015 3rrr                      1- 1097     	LGOTO	_00590_DS_
                                    1- 1098     	.line	587, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1099     	BSR	_ADMDbits,6
                                    1- 1100     	.line	588, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1101     	LCALL	_F_wait_eoc
                                    1- 1102     	.line	589, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1103     	MOVIA	0x0f
     0019 10rr                      1- 1104     	ANDAR	_ADR,W
                                    1- 1105     ;;3	MOVAR	r0x1026
                                    1- 1106     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1107     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1108     	.line	590, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1- 1109     	MOVR	_ADD,W
                                    1- 1110     	BANKSEL	r0x1026
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1111     	MOVAR	r0x1026
                                    1- 1112     ;;1	CLRR	r0x1027
                                    1- 1113     ;;110	MOVR	r0x1026,W
                                    1- 1114     ;;108	MOVAR	r0x1028
     001F 2100                      1- 1115     	MOVIA	0x00
                                    1- 1116     	BANKSEL	r0x1029
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1117     	MOVAR	r0x1029
                                    1- 1118     ;;109	MOVR	r0x1028,W
                                    1- 1119     	BANKSEL	r0x1026
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1120     	MOVR	r0x1026,W
                                    1- 1121     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1122     	ADDAR	_R_AIN4_DATA,F
                                    1- 1123     	BANKSEL	r0x1029
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1124     	MOVR	r0x1029,W
     0028 0C03                      1- 1125     	BTRSC	STATUS,0
     0029 05rr                      1- 1126     	INCR	r0x1029,W
     002A 0D03                      1- 1127     	BTRSC	STATUS,2
     002B 3rrr                      1- 1128     	LGOTO	_00002_DS_
                                    1- 1129     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1130     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1- 1131     _00002_DS_:
                                    1- 1132     	.line	585, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1133     	BANKSEL	r0x1025
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1134     	INCR	r0x1025,F
     0030 3rrr                      1- 1135     	LGOTO	_00588_DS_
     0031                           1- 1136     _00590_DS_:
                                    1- 1137     	.line	592, "main.c"; 	}
                                    1- 1138     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1139     ; exit point of _F_AIN4_Convert
                                    1- 1141     ;***
                                    1- 1142     ;  pBlock Stats: dbName = C
                                    1- 1143     ;***
                                    1- 1144     ;has an exit
                                    1- 1145     ;functions called:
                                    1- 1146     ;   _delay
                                    1- 1147     ;   _F_wait_eoc
                                    1- 1148     ;   _delay
                                    1- 1149     ;   _F_wait_eoc
                                    1- 1150     ;7 compiler assigned registers:
                                    1- 1151     ;   r0x102A
                                    1- 1152     ;   STK00
                                    1- 1153     ;   r0x102B
                                    1- 1154     ;   r0x102C
                                    1- 1155     ;   r0x102D
                                    1- 1156     ;   r0x102E
                                    1- 1157     ;   r0x102F
                                    1- 1158     ;; Starting pCode block
                                    1- 1159     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1161     ;local variable name mapping:
     0000                           1- 1164     _F_AIN2_Convert:
                                    1- 1165     ; 2 exit points
                                    1- 1166     	.line	563, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1167     	BANKSEL	r0x102A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1168     	MOVAR	r0x102A
                                    1- 1169     	.line	565, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1170     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1171     	CLRR	_R_AIN2_DATA_LB
                                    1- 1172     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1173     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1174     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1175     	.line	567, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1176     	MOVIA	0x92
     0008 00rr                      1- 1177     	MOVAR	_ADMD
                                    1- 1178     	.line	568, "main.c"; 	delay(200);	
     0009 21C8                      1- 1179     	MOVIA	0xc8
     000A 00rr                      1- 1180     	MOVAR	STK00
     000B 2100                      1- 1181     	MOVIA	0x00
     000C 2rrr                      1- 1182     	LCALL	_delay
                                    1- 1183     	.line	569, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1184     	MOVIA	0x01
                                    1- 1185     	BANKSEL	r0x102B
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1186     	MOVAR	r0x102B
     0010                           1- 1187     _00579_DS_:
                                    1- 1188     	BANKSEL	r0x102B
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1189     	MOVR	r0x102B,W
                                    1- 1190     	BANKSEL	r0x102A
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1191     	SUBAR	r0x102A,W
     0014 0803                      1- 1192     	BTRSS	STATUS,0
     0015 3rrr                      1- 1193     	LGOTO	_00581_DS_
                                    1- 1194     	.line	571, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1195     	BSR	_ADMDbits,6
                                    1- 1196     	.line	572, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1197     	LCALL	_F_wait_eoc
                                    1- 1198     	.line	573, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1199     	MOVIA	0x0f
     0019 10rr                      1- 1200     	ANDAR	_ADR,W
                                    1- 1201     ;;3	MOVAR	r0x102C
                                    1- 1202     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1203     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1204     	.line	574, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1205     	MOVR	_ADD,W
                                    1- 1206     	BANKSEL	r0x102C
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1207     	MOVAR	r0x102C
                                    1- 1208     ;;1	CLRR	r0x102D
                                    1- 1209     ;;107	MOVR	r0x102C,W
                                    1- 1210     ;;105	MOVAR	r0x102E
     001F 2100                      1- 1211     	MOVIA	0x00
                                    1- 1212     	BANKSEL	r0x102F
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1213     	MOVAR	r0x102F
                                    1- 1214     ;;106	MOVR	r0x102E,W
                                    1- 1215     	BANKSEL	r0x102C
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1216     	MOVR	r0x102C,W
                                    1- 1217     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1218     	ADDAR	_R_AIN2_DATA,F
                                    1- 1219     	BANKSEL	r0x102F
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1220     	MOVR	r0x102F,W
     0028 0C03                      1- 1221     	BTRSC	STATUS,0
     0029 05rr                      1- 1222     	INCR	r0x102F,W
     002A 0D03                      1- 1223     	BTRSC	STATUS,2
     002B 3rrr                      1- 1224     	LGOTO	_00003_DS_
                                    1- 1225     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1226     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1227     _00003_DS_:
                                    1- 1228     	.line	569, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1229     	BANKSEL	r0x102B
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1230     	INCR	r0x102B,F
     0030 3rrr                      1- 1231     	LGOTO	_00579_DS_
     0031                           1- 1232     _00581_DS_:
                                    1- 1233     	.line	576, "main.c"; 	}
                                    1- 1234     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1235     ; exit point of _F_AIN2_Convert
                                    1- 1237     ;***
                                    1- 1238     ;  pBlock Stats: dbName = C
                                    1- 1239     ;***
                                    1- 1240     ;has an exit
                                    1- 1241     ;functions called:
                                    1- 1242     ;   _delay
                                    1- 1243     ;   _F_wait_eoc
                                    1- 1244     ;   _delay
                                    1- 1245     ;   _F_wait_eoc
                                    1- 1246     ;7 compiler assigned registers:
                                    1- 1247     ;   r0x1030
                                    1- 1248     ;   STK00
                                    1- 1249     ;   r0x1031
                                    1- 1250     ;   r0x1032
                                    1- 1251     ;   r0x1033
                                    1- 1252     ;   r0x1034
                                    1- 1253     ;   r0x1035
                                    1- 1254     ;; Starting pCode block
                                    1- 1255     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1- 1257     ;local variable name mapping:
     0000                           1- 1260     _F_AIN1_Convert:
                                    1- 1261     ; 2 exit points
                                    1- 1262     	.line	548, "main.c"; 	void F_AIN1_Convert(char count)
                                    1- 1263     	BANKSEL	r0x1030
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1264     	MOVAR	r0x1030
                                    1- 1265     	.line	550, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
                                    1- 1266     	BANKSEL	_R_AIN1_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1267     	CLRR	_R_AIN1_DATA_LB
                                    1- 1268     	BANKSEL	_R_AIN1_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1269     	CLRR	_R_AIN1_DATA
     0006 02rr                      1- 1270     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1271     	.line	552, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0007 2191                      1- 1272     	MOVIA	0x91
     0008 00rr                      1- 1273     	MOVAR	_ADMD
                                    1- 1274     	.line	553, "main.c"; 	delay(200);	
     0009 21C8                      1- 1275     	MOVIA	0xc8
     000A 00rr                      1- 1276     	MOVAR	STK00
     000B 2100                      1- 1277     	MOVIA	0x00
     000C 2rrr                      1- 1278     	LCALL	_delay
                                    1- 1279     	.line	554, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1280     	MOVIA	0x01
                                    1- 1281     	BANKSEL	r0x1031
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1282     	MOVAR	r0x1031
     0010                           1- 1283     _00570_DS_:
                                    1- 1284     	BANKSEL	r0x1031
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1285     	MOVR	r0x1031,W
                                    1- 1286     	BANKSEL	r0x1030
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1287     	SUBAR	r0x1030,W
     0014 0803                      1- 1288     	BTRSS	STATUS,0
     0015 3rrr                      1- 1289     	LGOTO	_00572_DS_
                                    1- 1290     	.line	556, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1291     	BSR	_ADMDbits,6
                                    1- 1292     	.line	557, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1293     	LCALL	_F_wait_eoc
                                    1- 1294     	.line	558, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1295     	MOVIA	0x0f
     0019 10rr                      1- 1296     	ANDAR	_ADR,W
                                    1- 1297     ;;3	MOVAR	r0x1032
                                    1- 1298     	BANKSEL	_R_AIN1_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1299     	ADDAR	_R_AIN1_DATA_LB,F
                                    1- 1300     	.line	559, "main.c"; 	R_AIN1_DATA    += ADD; 
     001C 01rr                      1- 1301     	MOVR	_ADD,W
                                    1- 1302     	BANKSEL	r0x1032
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1303     	MOVAR	r0x1032
                                    1- 1304     ;;1	CLRR	r0x1033
                                    1- 1305     ;;104	MOVR	r0x1032,W
                                    1- 1306     ;;102	MOVAR	r0x1034
     001F 2100                      1- 1307     	MOVIA	0x00
                                    1- 1308     	BANKSEL	r0x1035
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1309     	MOVAR	r0x1035
                                    1- 1310     ;;103	MOVR	r0x1034,W
                                    1- 1311     	BANKSEL	r0x1032
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1312     	MOVR	r0x1032,W
                                    1- 1313     	BANKSEL	_R_AIN1_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1314     	ADDAR	_R_AIN1_DATA,F
                                    1- 1315     	BANKSEL	r0x1035
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1316     	MOVR	r0x1035,W
     0028 0C03                      1- 1317     	BTRSC	STATUS,0
     0029 05rr                      1- 1318     	INCR	r0x1035,W
     002A 0D03                      1- 1319     	BTRSC	STATUS,2
     002B 3rrr                      1- 1320     	LGOTO	_00004_DS_
                                    1- 1321     	BANKSEL	_R_AIN1_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1322     	ADDAR	(_R_AIN1_DATA + 1),F
     002E                           1- 1323     _00004_DS_:
                                    1- 1324     	.line	554, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1325     	BANKSEL	r0x1031
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1326     	INCR	r0x1031,F
     0030 3rrr                      1- 1327     	LGOTO	_00570_DS_
     0031                           1- 1328     _00572_DS_:
                                    1- 1329     	.line	561, "main.c"; 	}
                                    1- 1330     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1331     ; exit point of _F_AIN1_Convert
                                    1- 1333     ;***
                                    1- 1334     ;  pBlock Stats: dbName = C
                                    1- 1335     ;***
                                    1- 1336     ;has an exit
                                    1- 1337     ;functions called:
                                    1- 1338     ;   _F_AIN4_Convert
                                    1- 1339     ;   _F_AIN4_Convert
                                    1- 1340     ;4 compiler assigned registers:
                                    1- 1341     ;   r0x1036
                                    1- 1342     ;   r0x1037
                                    1- 1343     ;   r0x1038
                                    1- 1344     ;   r0x1039
                                    1- 1345     ;; Starting pCode block
                                    1- 1346     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1348     _checkOutA:
                                    1- 1349     ; 2 exit points
                                    1- 1350     	.line	513, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1351     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1352     	CLRR	_R_AIN4_DATA_LB
                                    1- 1353     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1354     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1355     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1356     	.line	514, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1357     	MOVIA	0x08
     0006 2rrr                      1- 1358     	LCALL	_F_AIN4_Convert
                                    1- 1359     	.line	515, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1360     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1361     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1362     	ANDIA	0xf0
     000A 00rr                      1- 1363     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1364     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1365     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1366     	ANDIA	0x0f
     000E 11rr                      1- 1367     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1368     	XORAR	_R_AIN4_DATA,F
                                    1- 1369     	.line	516, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1370     	MOVIA	0xf0
                                    1- 1371     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1372     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1373     	.line	517, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1374     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1375     	BANKSEL	r0x1038
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1376     	MOVAR	r0x1038
                                    1- 1377     ;;1	MOVAR	r0x1036
                                    1- 1378     ;;1	CLRR	r0x1037
                                    1- 1379     ;;101	MOVR	r0x1036,W
     0016 2100                      1- 1380     	MOVIA	0x00
                                    1- 1381     	BANKSEL	r0x1039
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1382     	MOVAR	r0x1039
                                    1- 1383     	BANKSEL	r0x1038
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1384     	MOVR	r0x1038,W
                                    1- 1385     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1386     	ADDAR	_R_AIN4_DATA,F
                                    1- 1387     	BANKSEL	r0x1039
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1388     	MOVR	r0x1039,W
     001F 0C03                      1- 1389     	BTRSC	STATUS,0
     0020 05rr                      1- 1390     	INCR	r0x1039,W
     0021 0D03                      1- 1391     	BTRSC	STATUS,2
     0022 3rrr                      1- 1392     	LGOTO	_00005_DS_
                                    1- 1393     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1394     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1395     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1396     _00005_DS_:
                                    1- 1397     	.line	518, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1398     	BCR	STATUS,0
                                    1- 1399     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1400     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1401     	RRR	_R_AIN4_DATA,F
                                    1- 1402     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1403     	BCR	STATUS,0
     002A 13rr                      1- 1404     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1405     	RRR	_R_AIN4_DATA,F
                                    1- 1406     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1407     	BCR	STATUS,0
     002D 13rr                      1- 1408     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1409     	RRR	_R_AIN4_DATA,F
                                    1- 1410     	.line	520, "main.c"; 	if(debug)
                                    1- 1411     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1412     	MOVR	_debug,W
     0031 0D03                      1- 1413     	BTRSC	STATUS,2
     0032 3rrr                      1- 1414     	LGOTO	_00546_DS_
                                    1- 1415     	.line	522, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 214C                      1- 1416     	MOVIA	0x4c
                                    1- 1417     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1418     	MOVAR	_R_AIN4_DATA
     0036 02rr                      1- 1419     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1420     ;;unsigned compare: left < lit (0x4E=78), size=2
     0037                           1- 1421     _00546_DS_:
                                    1- 1422     	.line	525, "main.c"; 	if(R_AIN4_DATA < 78)
     0037 2100                      1- 1423     	MOVIA	0x00
                                    1- 1424     	BANKSEL	_R_AIN4_DATA
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 04rr                      1- 1425     	SUBAR	(_R_AIN4_DATA + 1),W
     003A 0903                      1- 1426     	BTRSS	STATUS,2
     003B 3rrr                      1- 1427     	LGOTO	_00563_DS_
     003C 214E                      1- 1428     	MOVIA	0x4e
     003D 04rr                      1- 1429     	SUBAR	_R_AIN4_DATA,W
     003E                           1- 1430     _00563_DS_:
     003E 0C03                      1- 1431     	BTRSC	STATUS,0
     003F 3rrr                      1- 1432     	LGOTO	_00548_DS_
                                    1- 1433     	.line	527, "main.c"; 	overTime = 0;
                                    1- 1434     	BANKSEL	_overTime
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 02rr                      1- 1435     	CLRR	_overTime
     0042 3rrr                      1- 1436     	LGOTO	_00549_DS_
     0043                           1- 1437     _00548_DS_:
                                    1- 1438     	.line	531, "main.c"; 	overTime++;
                                    1- 1439     	BANKSEL	_overTime
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 05rr                      1- 1440     	INCR	_overTime,F
     0045                           1- 1441     _00549_DS_:
                                    1- 1442     	.line	533, "main.c"; 	if(++overTime >= 100)
                                    1- 1443     	BANKSEL	_overTime
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 05rr                      1- 1444     	INCR	_overTime,F
                                    1- 1445     ;;unsigned compare: left < lit (0x64=100), size=1
     0047 2164                      1- 1446     	MOVIA	0x64
     0048 04rr                      1- 1447     	SUBAR	_overTime,W
     0049 0803                      1- 1448     	BTRSS	STATUS,0
     004A 3rrr                      1- 1449     	LGOTO	_00552_DS_
                                    1- 1450     	.line	535, "main.c"; 	overTime = 10;
     004B 210A                      1- 1451     	MOVIA	0x0a
     004C 00rr                      1- 1452     	MOVAR	_overTime
                                    1- 1453     	.line	536, "main.c"; 	overFlag = 1;
     004D 2101                      1- 1454     	MOVIA	0x01
                                    1- 1455     	BANKSEL	_overFlag
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 00rr                      1- 1456     	MOVAR	_overFlag
                                    1- 1457     	.line	539, "main.c"; 	POWEROFF();
     0050 1Crr                      1- 1458     	BCR	_PORTA,0
                                    1- 1459     	.line	540, "main.c"; 	LED2OFF();
     0051 1Frr                      1- 1460     	BCR	_PORTA,6
                                    1- 1461     	.line	541, "main.c"; 	LED3OFF();
     0052 1Frr                      1- 1462     	BCR	_PORTA,7
     0053                           1- 1463     _00552_DS_:
                                    1- 1464     	.line	545, "main.c"; 	}
                                    1- 1465     	RETURN	
     0053 0010                      3-   26 m1      ret
                                    1- 1466     ; exit point of _checkOutA
                                    1- 1468     ;***
                                    1- 1469     ;  pBlock Stats: dbName = C
                                    1- 1470     ;***
                                    1- 1471     ;has an exit
                                    1- 1472     ;functions called:
                                    1- 1473     ;   _F_AIN2_Convert
                                    1- 1474     ;   _F_AIN2_Convert
                                    1- 1475     ;4 compiler assigned registers:
                                    1- 1476     ;   r0x103A
                                    1- 1477     ;   r0x103B
                                    1- 1478     ;   r0x103C
                                    1- 1479     ;   r0x103D
                                    1- 1480     ;; Starting pCode block
                                    1- 1481     .segment "code"; module=main, function=_checkBat
     0000                           1- 1483     _checkBat:
                                    1- 1484     ; 2 exit points
                                    1- 1485     	.line	413, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1486     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1487     	CLRR	_R_AIN2_DATA_LB
                                    1- 1488     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1489     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1490     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1491     	.line	414, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1492     	MOVIA	0x08
     0006 2rrr                      1- 1493     	LCALL	_F_AIN2_Convert
                                    1- 1494     	.line	415, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1495     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1496     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1497     	ANDIA	0xf0
     000A 00rr                      1- 1498     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1499     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1500     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1501     	ANDIA	0x0f
     000E 11rr                      1- 1502     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1503     	XORAR	_R_AIN2_DATA,F
                                    1- 1504     	.line	416, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1505     	MOVIA	0xf0
                                    1- 1506     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1507     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1508     	.line	417, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1509     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1510     	BANKSEL	r0x103C
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1511     	MOVAR	r0x103C
                                    1- 1512     ;;1	MOVAR	r0x103A
                                    1- 1513     ;;1	CLRR	r0x103B
                                    1- 1514     ;;100	MOVR	r0x103A,W
     0016 2100                      1- 1515     	MOVIA	0x00
                                    1- 1516     	BANKSEL	r0x103D
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1517     	MOVAR	r0x103D
                                    1- 1518     	BANKSEL	r0x103C
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1519     	MOVR	r0x103C,W
                                    1- 1520     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1521     	ADDAR	_R_AIN2_DATA,F
                                    1- 1522     	BANKSEL	r0x103D
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1523     	MOVR	r0x103D,W
     001F 0C03                      1- 1524     	BTRSC	STATUS,0
     0020 05rr                      1- 1525     	INCR	r0x103D,W
     0021 0D03                      1- 1526     	BTRSC	STATUS,2
     0022 3rrr                      1- 1527     	LGOTO	_00006_DS_
                                    1- 1528     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1529     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1530     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1531     _00006_DS_:
                                    1- 1532     	.line	418, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1533     	BCR	STATUS,0
                                    1- 1534     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1535     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1536     	RRR	_R_AIN2_DATA,F
                                    1- 1537     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1538     	BCR	STATUS,0
     002A 13rr                      1- 1539     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1540     	RRR	_R_AIN2_DATA,F
                                    1- 1541     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1542     	BCR	STATUS,0
     002D 13rr                      1- 1543     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1544     	RRR	_R_AIN2_DATA,F
                                    1- 1545     	.line	419, "main.c"; 	if(debug)
                                    1- 1546     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1547     	MOVR	_debug,W
     0031 0D03                      1- 1548     	BTRSC	STATUS,2
     0032 3rrr                      1- 1549     	LGOTO	_00430_DS_
                                    1- 1550     	.line	421, "main.c"; 	R_AIN2_DATA = BAT;
     0033 21D9                      1- 1551     	MOVIA	0xd9
                                    1- 1552     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1553     	MOVAR	_R_AIN2_DATA
     0036 210E                      1- 1554     	MOVIA	0x0e
     0037 00rr                      1- 1555     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1556     ;;unsigned compare: left < lit (0x9A6=2470), size=2
     0038                           1- 1557     _00430_DS_:
                                    1- 1558     	.line	424, "main.c"; 	if(R_AIN2_DATA < 2470)
     0038 2109                      1- 1559     	MOVIA	0x09
                                    1- 1560     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1561     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1562     	BTRSS	STATUS,2
     003C 3rrr                      1- 1563     	LGOTO	_00530_DS_
     003D 21A6                      1- 1564     	MOVIA	0xa6
     003E 04rr                      1- 1565     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1566     _00530_DS_:
     003F 0C03                      1- 1567     	BTRSC	STATUS,0
     0040 3rrr                      1- 1568     	LGOTO	_00472_DS_
                                    1- 1569     	.line	426, "main.c"; 	if(batStatus == 1)
                                    1- 1570     	BANKSEL	_batStatus
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 1571     	MOVR	_batStatus,W
     0043 2401                      1- 1572     	XORIA	0x01
     0044 0903                      1- 1573     	BTRSS	STATUS,2
     0045 3rrr                      1- 1574     	LGOTO	_00434_DS_
                                    1- 1575     ;;unsigned compare: left < lit (0x99C=2460), size=2
                                    1- 1576     	.line	428, "main.c"; 	if(R_AIN2_DATA < 2460)
     0046 2109                      1- 1577     	MOVIA	0x09
                                    1- 1578     	BANKSEL	_R_AIN2_DATA
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 04rr                      1- 1579     	SUBAR	(_R_AIN2_DATA + 1),W
     0049 0903                      1- 1580     	BTRSS	STATUS,2
     004A 3rrr                      1- 1581     	LGOTO	_00531_DS_
     004B 219C                      1- 1582     	MOVIA	0x9c
     004C 04rr                      1- 1583     	SUBAR	_R_AIN2_DATA,W
     004D                           1- 1584     _00531_DS_:
     004D 0C03                      1- 1585     	BTRSC	STATUS,0
     004E 3rrr                      1- 1586     	LGOTO	_00474_DS_
                                    1- 1587     	.line	430, "main.c"; 	batStatus = 3;//缺电状态
     004F 2103                      1- 1588     	MOVIA	0x03
                                    1- 1589     	BANKSEL	_batStatus
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1- 1590     	MOVAR	_batStatus
                                    1- 1591     	.line	431, "main.c"; 	lowBatLock = 1;
     0052 2101                      1- 1592     	MOVIA	0x01
                                    1- 1593     	BANKSEL	_lowBatLock
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1- 1594     	MOVAR	_lowBatLock
     0055 3rrr                      1- 1595     	LGOTO	_00474_DS_
     0056                           1- 1596     _00434_DS_:
                                    1- 1597     	.line	436, "main.c"; 	batStatus = 3;//缺电状态
     0056 2103                      1- 1598     	MOVIA	0x03
                                    1- 1599     	BANKSEL	_batStatus
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1- 1600     	MOVAR	_batStatus
                                    1- 1601     	.line	437, "main.c"; 	lowBatLock = 1;
     0059 2101                      1- 1602     	MOVIA	0x01
                                    1- 1603     	BANKSEL	_lowBatLock
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1- 1604     	MOVAR	_lowBatLock
     005C 3rrr                      1- 1605     	LGOTO	_00474_DS_
                                    1- 1606     ;;unsigned compare: left < lit (0xAAB=2731), size=2
     005D                           1- 1607     _00472_DS_:
                                    1- 1608     	.line	440, "main.c"; 	else if(R_AIN2_DATA < 2731)
     005D 210A                      1- 1609     	MOVIA	0x0a
                                    1- 1610     	BANKSEL	_R_AIN2_DATA
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 04rr                      1- 1611     	SUBAR	(_R_AIN2_DATA + 1),W
     0060 0903                      1- 1612     	BTRSS	STATUS,2
     0061 3rrr                      1- 1613     	LGOTO	_00532_DS_
     0062 21AB                      1- 1614     	MOVIA	0xab
     0063 04rr                      1- 1615     	SUBAR	_R_AIN2_DATA,W
     0064                           1- 1616     _00532_DS_:
     0064 0C03                      1- 1617     	BTRSC	STATUS,0
     0065 3rrr                      1- 1618     	LGOTO	_00469_DS_
                                    1- 1619     	.line	443, "main.c"; 	if(batStatus == 2)
                                    1- 1620     	BANKSEL	_batStatus
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 01rr                      1- 1621     	MOVR	_batStatus,W
     0068 2402                      1- 1622     	XORIA	0x02
     0069 0903                      1- 1623     	BTRSS	STATUS,2
     006A 3rrr                      1- 1624     	LGOTO	_00444_DS_
                                    1- 1625     ;;unsigned compare: left < lit (0xAA4=2724), size=2
                                    1- 1626     	.line	445, "main.c"; 	if(R_AIN2_DATA < 2724)
     006B 210A                      1- 1627     	MOVIA	0x0a
                                    1- 1628     	BANKSEL	_R_AIN2_DATA
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 04rr                      1- 1629     	SUBAR	(_R_AIN2_DATA + 1),W
     006E 0903                      1- 1630     	BTRSS	STATUS,2
     006F 3rrr                      1- 1631     	LGOTO	_00533_DS_
     0070 21A4                      1- 1632     	MOVIA	0xa4
     0071 04rr                      1- 1633     	SUBAR	_R_AIN2_DATA,W
     0072                           1- 1634     _00533_DS_:
     0072 0C03                      1- 1635     	BTRSC	STATUS,0
     0073 3rrr                      1- 1636     	LGOTO	_00445_DS_
                                    1- 1637     	.line	447, "main.c"; 	batStatus = 1;//低电状态
     0074 2101                      1- 1638     	MOVIA	0x01
                                    1- 1639     	BANKSEL	_batStatus
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 00rr                      1- 1640     	MOVAR	_batStatus
     0077 3rrr                      1- 1641     	LGOTO	_00445_DS_
     0078                           1- 1642     _00444_DS_:
                                    1- 1643     	.line	452, "main.c"; 	if(batStatus == 3)
                                    1- 1644     	BANKSEL	_batStatus
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 01rr                      1- 1645     	MOVR	_batStatus,W
     007A 2403                      1- 1646     	XORIA	0x03
     007B 0903                      1- 1647     	BTRSS	STATUS,2
     007C 3rrr                      1- 1648     	LGOTO	_00441_DS_
                                    1- 1649     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1650     ;;unsigned compare: left >= lit (0x9A7=2471), size=2
                                    1- 1651     	.line	454, "main.c"; 	if(R_AIN2_DATA > 2470)
     007D 2109                      1- 1652     	MOVIA	0x09
                                    1- 1653     	BANKSEL	_R_AIN2_DATA
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 04rr                      1- 1654     	SUBAR	(_R_AIN2_DATA + 1),W
     0080 0903                      1- 1655     	BTRSS	STATUS,2
     0081 3rrr                      1- 1656     	LGOTO	_00534_DS_
     0082 21A7                      1- 1657     	MOVIA	0xa7
     0083 04rr                      1- 1658     	SUBAR	_R_AIN2_DATA,W
     0084                           1- 1659     _00534_DS_:
     0084 0803                      1- 1660     	BTRSS	STATUS,0
     0085 3rrr                      1- 1661     	LGOTO	_00445_DS_
                                    1- 1662     	.line	456, "main.c"; 	batStatus = 1;//低电状态
     0086 2101                      1- 1663     	MOVIA	0x01
                                    1- 1664     	BANKSEL	_batStatus
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 00rr                      1- 1665     	MOVAR	_batStatus
     0089 3rrr                      1- 1666     	LGOTO	_00445_DS_
     008A                           1- 1667     _00441_DS_:
                                    1- 1668     	.line	460, "main.c"; 	batStatus = 1;//低电状态
     008A 2101                      1- 1669     	MOVIA	0x01
                                    1- 1670     	BANKSEL	_batStatus
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 00rr                      1- 1671     	MOVAR	_batStatus
     008D                           1- 1672     _00445_DS_:
                                    1- 1673     	.line	462, "main.c"; 	batLowTime = 0;
                                    1- 1674     	BANKSEL	_batLowTime
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 02rr                      1- 1675     	CLRR	_batLowTime
                                    1- 1676     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1677     ;;unsigned compare: left >= lit (0x9C5=2501), size=2
                                    1- 1678     	.line	463, "main.c"; 	if(R_AIN2_DATA > 2500)
     008F 2109                      1- 1679     	MOVIA	0x09
                                    1- 1680     	BANKSEL	_R_AIN2_DATA
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 04rr                      1- 1681     	SUBAR	(_R_AIN2_DATA + 1),W
     0092 0903                      1- 1682     	BTRSS	STATUS,2
     0093 3rrr                      1- 1683     	LGOTO	_00535_DS_
     0094 21C5                      1- 1684     	MOVIA	0xc5
     0095 04rr                      1- 1685     	SUBAR	_R_AIN2_DATA,W
     0096                           1- 1686     _00535_DS_:
     0096 0803                      1- 1687     	BTRSS	STATUS,0
     0097 3rrr                      1- 1688     	LGOTO	_00474_DS_
                                    1- 1689     	.line	464, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1690     	BANKSEL	_firstLow
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 02rr                      1- 1691     	CLRR	_firstLow
     009A 3rrr                      1- 1692     	LGOTO	_00474_DS_
                                    1- 1693     ;;unsigned compare: left < lit (0xC9C=3228), size=2
     009B                           1- 1694     _00469_DS_:
                                    1- 1695     	.line	466, "main.c"; 	else if(R_AIN2_DATA < 3228)  //16V
     009B 210C                      1- 1696     	MOVIA	0x0c
                                    1- 1697     	BANKSEL	_R_AIN2_DATA
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 04rr                      1- 1698     	SUBAR	(_R_AIN2_DATA + 1),W
     009E 0903                      1- 1699     	BTRSS	STATUS,2
     009F 3rrr                      1- 1700     	LGOTO	_00536_DS_
     00A0 219C                      1- 1701     	MOVIA	0x9c
     00A1 04rr                      1- 1702     	SUBAR	_R_AIN2_DATA,W
     00A2                           1- 1703     _00536_DS_:
     00A2 0C03                      1- 1704     	BTRSC	STATUS,0
     00A3 3rrr                      1- 1705     	LGOTO	_00466_DS_
                                    1- 1706     	.line	468, "main.c"; 	if(batStatus == 2)
                                    1- 1707     	BANKSEL	_batStatus
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 01rr                      1- 1708     	MOVR	_batStatus,W
     00A6 2402                      1- 1709     	XORIA	0x02
     00A7 0903                      1- 1710     	BTRSS	STATUS,2
     00A8 3rrr                      1- 1711     	LGOTO	_00456_DS_
                                    1- 1712     ;;unsigned compare: left < lit (0xC8A=3210), size=2
                                    1- 1713     	.line	470, "main.c"; 	if(R_AIN2_DATA < 3210)
     00A9 210C                      1- 1714     	MOVIA	0x0c
                                    1- 1715     	BANKSEL	_R_AIN2_DATA
     00AA rrrr                      3-   71 m1      .banksel ram_address
     00AB 04rr                      1- 1716     	SUBAR	(_R_AIN2_DATA + 1),W
     00AC 0903                      1- 1717     	BTRSS	STATUS,2
     00AD 3rrr                      1- 1718     	LGOTO	_00537_DS_
     00AE 218A                      1- 1719     	MOVIA	0x8a
     00AF 04rr                      1- 1720     	SUBAR	_R_AIN2_DATA,W
     00B0                           1- 1721     _00537_DS_:
     00B0 0C03                      1- 1722     	BTRSC	STATUS,0
     00B1 3rrr                      1- 1723     	LGOTO	_00474_DS_
                                    1- 1724     	.line	472, "main.c"; 	batStatus = 0;//正常状态
                                    1- 1725     	BANKSEL	_batStatus
     00B2 rrrr                      3-   71 m1      .banksel ram_address
     00B3 02rr                      1- 1726     	CLRR	_batStatus
                                    1- 1727     	.line	473, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1728     	BANKSEL	_firstLow
     00B4 rrrr                      3-   71 m1      .banksel ram_address
     00B5 02rr                      1- 1729     	CLRR	_firstLow
     00B6 3rrr                      1- 1730     	LGOTO	_00474_DS_
     00B7                           1- 1731     _00456_DS_:
                                    1- 1732     	.line	478, "main.c"; 	if(batStatus == 1)
                                    1- 1733     	BANKSEL	_batStatus
     00B7 rrrr                      3-   71 m1      .banksel ram_address
     00B8 01rr                      1- 1734     	MOVR	_batStatus,W
     00B9 2401                      1- 1735     	XORIA	0x01
     00BA 0903                      1- 1736     	BTRSS	STATUS,2
     00BB 3rrr                      1- 1737     	LGOTO	_00453_DS_
                                    1- 1738     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1739     ;;unsigned compare: left >= lit (0xAC4=2756), size=2
                                    1- 1740     	.line	480, "main.c"; 	if(R_AIN2_DATA > 2755)
     00BC 210A                      1- 1741     	MOVIA	0x0a
                                    1- 1742     	BANKSEL	_R_AIN2_DATA
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 04rr                      1- 1743     	SUBAR	(_R_AIN2_DATA + 1),W
     00BF 0903                      1- 1744     	BTRSS	STATUS,2
     00C0 3rrr                      1- 1745     	LGOTO	_00538_DS_
     00C1 21C4                      1- 1746     	MOVIA	0xc4
     00C2 04rr                      1- 1747     	SUBAR	_R_AIN2_DATA,W
     00C3                           1- 1748     _00538_DS_:
     00C3 0803                      1- 1749     	BTRSS	STATUS,0
     00C4 3rrr                      1- 1750     	LGOTO	_00454_DS_
                                    1- 1751     	.line	482, "main.c"; 	batStatus = 0;//正常状态
                                    1- 1752     	BANKSEL	_batStatus
     00C5 rrrr                      3-   71 m1      .banksel ram_address
     00C6 02rr                      1- 1753     	CLRR	_batStatus
     00C7 3rrr                      1- 1754     	LGOTO	_00454_DS_
     00C8                           1- 1755     _00453_DS_:
                                    1- 1756     	.line	487, "main.c"; 	batStatus = 0;//正常状态
                                    1- 1757     	BANKSEL	_batStatus
     00C8 rrrr                      3-   71 m1      .banksel ram_address
     00C9 02rr                      1- 1758     	CLRR	_batStatus
     00CA                           1- 1759     _00454_DS_:
                                    1- 1760     	.line	489, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1761     	BANKSEL	_firstLow
     00CA rrrr                      3-   71 m1      .banksel ram_address
     00CB 02rr                      1- 1762     	CLRR	_firstLow
     00CC 3rrr                      1- 1763     	LGOTO	_00474_DS_
                                    1- 1764     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1765     ;;unsigned compare: left >= lit (0xC9D=3229), size=2
     00CD                           1- 1766     _00466_DS_:
                                    1- 1767     	.line	492, "main.c"; 	else if(R_AIN2_DATA > 3228)
     00CD 210C                      1- 1768     	MOVIA	0x0c
                                    1- 1769     	BANKSEL	_R_AIN2_DATA
     00CE rrrr                      3-   71 m1      .banksel ram_address
     00CF 04rr                      1- 1770     	SUBAR	(_R_AIN2_DATA + 1),W
     00D0 0903                      1- 1771     	BTRSS	STATUS,2
     00D1 3rrr                      1- 1772     	LGOTO	_00539_DS_
     00D2 219D                      1- 1773     	MOVIA	0x9d
     00D3 04rr                      1- 1774     	SUBAR	_R_AIN2_DATA,W
     00D4                           1- 1775     _00539_DS_:
     00D4 0803                      1- 1776     	BTRSS	STATUS,0
     00D5 3rrr                      1- 1777     	LGOTO	_00474_DS_
                                    1- 1778     	.line	494, "main.c"; 	if(batStatus == 0)
                                    1- 1779     	BANKSEL	_batStatus
     00D6 rrrr                      3-   71 m1      .banksel ram_address
     00D7 01rr                      1- 1780     	MOVR	_batStatus,W
     00D8 0903                      1- 1781     	BTRSS	STATUS,2
     00D9 3rrr                      1- 1782     	LGOTO	_00461_DS_
                                    1- 1783     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1784     ;;unsigned compare: left >= lit (0xCA2=3234), size=2
                                    1- 1785     	.line	496, "main.c"; 	if(R_AIN2_DATA > 3233)
     00DA 210C                      1- 1786     	MOVIA	0x0c
                                    1- 1787     	BANKSEL	_R_AIN2_DATA
     00DB rrrr                      3-   71 m1      .banksel ram_address
     00DC 04rr                      1- 1788     	SUBAR	(_R_AIN2_DATA + 1),W
     00DD 0903                      1- 1789     	BTRSS	STATUS,2
     00DE 3rrr                      1- 1790     	LGOTO	_00540_DS_
     00DF 21A2                      1- 1791     	MOVIA	0xa2
     00E0 04rr                      1- 1792     	SUBAR	_R_AIN2_DATA,W
     00E1                           1- 1793     _00540_DS_:
     00E1 0803                      1- 1794     	BTRSS	STATUS,0
     00E2 3rrr                      1- 1795     	LGOTO	_00462_DS_
                                    1- 1796     	.line	498, "main.c"; 	batStatus = 2;//满电状态
     00E3 2102                      1- 1797     	MOVIA	0x02
                                    1- 1798     	BANKSEL	_batStatus
     00E4 rrrr                      3-   71 m1      .banksel ram_address
     00E5 00rr                      1- 1799     	MOVAR	_batStatus
     00E6 3rrr                      1- 1800     	LGOTO	_00462_DS_
     00E7                           1- 1801     _00461_DS_:
                                    1- 1802     	.line	503, "main.c"; 	batStatus = 2;//满电状态
     00E7 2102                      1- 1803     	MOVIA	0x02
                                    1- 1804     	BANKSEL	_batStatus
     00E8 rrrr                      3-   71 m1      .banksel ram_address
     00E9 00rr                      1- 1805     	MOVAR	_batStatus
     00EA                           1- 1806     _00462_DS_:
                                    1- 1807     	.line	505, "main.c"; 	batLowTime = 0;
                                    1- 1808     	BANKSEL	_batLowTime
     00EA rrrr                      3-   71 m1      .banksel ram_address
     00EB 02rr                      1- 1809     	CLRR	_batLowTime
                                    1- 1810     	.line	506, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1811     	BANKSEL	_firstLow
     00EC rrrr                      3-   71 m1      .banksel ram_address
     00ED 02rr                      1- 1812     	CLRR	_firstLow
     00EE                           1- 1813     _00474_DS_:
                                    1- 1814     	.line	509, "main.c"; 	}
                                    1- 1815     	RETURN	
     00EE 0010                      3-   26 m1      ret
                                    1- 1816     ; exit point of _checkBat
                                    1- 1818     ;***
                                    1- 1819     ;  pBlock Stats: dbName = C
                                    1- 1820     ;***
                                    1- 1821     ;has an exit
                                    1- 1822     ;functions called:
                                    1- 1823     ;   _F_AIN1_Convert
                                    1- 1824     ;   _F_AIN1_Convert
                                    1- 1825     ;4 compiler assigned registers:
                                    1- 1826     ;   r0x103E
                                    1- 1827     ;   r0x103F
                                    1- 1828     ;   r0x1040
                                    1- 1829     ;   r0x1041
                                    1- 1830     ;; Starting pCode block
                                    1- 1831     .segment "code"; module=main, function=_checkInV
     0000                           1- 1833     _checkInV:
                                    1- 1834     ; 2 exit points
                                    1- 1835     	.line	366, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA_LB = 0x00;
                                    1- 1836     	BANKSEL	_R_AIN1_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1837     	CLRR	_R_AIN1_DATA_LB
                                    1- 1838     	BANKSEL	_R_AIN1_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1839     	CLRR	_R_AIN1_DATA
     0004 02rr                      1- 1840     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1841     	.line	367, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1842     	MOVIA	0x08
     0006 2rrr                      1- 1843     	LCALL	_F_AIN1_Convert
                                    1- 1844     	.line	368, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1845     	BANKSEL	_R_AIN1_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1846     	SWAPR	(_R_AIN1_DATA + 1),W
     0009 22F0                      1- 1847     	ANDIA	0xf0
     000A 00rr                      1- 1848     	MOVAR	(_R_AIN1_DATA + 1)
     000B 15rr                      1- 1849     	SWAPR	_R_AIN1_DATA,W
     000C 00rr                      1- 1850     	MOVAR	_R_AIN1_DATA
     000D 220F                      1- 1851     	ANDIA	0x0f
     000E 11rr                      1- 1852     	IORAR	(_R_AIN1_DATA + 1),F
     000F 12rr                      1- 1853     	XORAR	_R_AIN1_DATA,F
                                    1- 1854     	.line	369, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1855     	MOVIA	0xf0
                                    1- 1856     	BANKSEL	_R_AIN1_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1857     	ANDAR	_R_AIN1_DATA_LB,F
                                    1- 1858     	.line	370, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1859     	MOVR	_R_AIN1_DATA_LB,W
                                    1- 1860     	BANKSEL	r0x1040
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1861     	MOVAR	r0x1040
                                    1- 1862     ;;1	MOVAR	r0x103E
                                    1- 1863     ;;1	CLRR	r0x103F
                                    1- 1864     ;;99	MOVR	r0x103E,W
     0016 2100                      1- 1865     	MOVIA	0x00
                                    1- 1866     	BANKSEL	r0x1041
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1867     	MOVAR	r0x1041
                                    1- 1868     	BANKSEL	r0x1040
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1869     	MOVR	r0x1040,W
                                    1- 1870     	BANKSEL	_R_AIN1_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1871     	ADDAR	_R_AIN1_DATA,F
                                    1- 1872     	BANKSEL	r0x1041
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1873     	MOVR	r0x1041,W
     001F 0C03                      1- 1874     	BTRSC	STATUS,0
     0020 05rr                      1- 1875     	INCR	r0x1041,W
     0021 0D03                      1- 1876     	BTRSC	STATUS,2
     0022 3rrr                      1- 1877     	LGOTO	_00007_DS_
                                    1- 1878     	BANKSEL	_R_AIN1_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1879     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1- 1880     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1881     _00007_DS_:
                                    1- 1882     	.line	371, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1883     	BCR	STATUS,0
                                    1- 1884     	BANKSEL	_R_AIN1_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1885     	RRR	(_R_AIN1_DATA + 1),F
     0028 13rr                      1- 1886     	RRR	_R_AIN1_DATA,F
                                    1- 1887     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1888     	BCR	STATUS,0
     002A 13rr                      1- 1889     	RRR	(_R_AIN1_DATA + 1),F
     002B 13rr                      1- 1890     	RRR	_R_AIN1_DATA,F
                                    1- 1891     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1892     	BCR	STATUS,0
     002D 13rr                      1- 1893     	RRR	(_R_AIN1_DATA + 1),F
     002E 13rr                      1- 1894     	RRR	_R_AIN1_DATA,F
                                    1- 1895     	.line	372, "main.c"; 	if(debug)
                                    1- 1896     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1897     	MOVR	_debug,W
     0031 0D03                      1- 1898     	BTRSC	STATUS,2
     0032 3rrr                      1- 1899     	LGOTO	_00388_DS_
                                    1- 1900     	.line	374, "main.c"; 	R_AIN1_DATA = INV;
     0033 2110                      1- 1901     	MOVIA	0x10
                                    1- 1902     	BANKSEL	_R_AIN1_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1903     	MOVAR	_R_AIN1_DATA
     0036 210B                      1- 1904     	MOVIA	0x0b
     0037 00rr                      1- 1905     	MOVAR	(_R_AIN1_DATA + 1)
                                    1- 1906     ;;unsigned compare: left < lit (0xB0E=2830), size=2
     0038                           1- 1907     _00388_DS_:
                                    1- 1908     	.line	376, "main.c"; 	if(R_AIN1_DATA < 2830)
     0038 210B                      1- 1909     	MOVIA	0x0b
                                    1- 1910     	BANKSEL	_R_AIN1_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1911     	SUBAR	(_R_AIN1_DATA + 1),W
     003B 0903                      1- 1912     	BTRSS	STATUS,2
     003C 3rrr                      1- 1913     	LGOTO	_00422_DS_
     003D 210E                      1- 1914     	MOVIA	0x0e
     003E 04rr                      1- 1915     	SUBAR	_R_AIN1_DATA,W
     003F                           1- 1916     _00422_DS_:
     003F 0C03                      1- 1917     	BTRSC	STATUS,0
     0040 3rrr                      1- 1918     	LGOTO	_00400_DS_
                                    1- 1919     	.line	378, "main.c"; 	if(R_AIN1_DATA == 1)
                                    1- 1920     	BANKSEL	_R_AIN1_DATA
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 1921     	MOVR	_R_AIN1_DATA,W
     0043 2401                      1- 1922     	XORIA	0x01
     0044 0903                      1- 1923     	BTRSS	STATUS,2
     0045 3rrr                      1- 1924     	LGOTO	_00392_DS_
     0046 01rr                      1- 1925     	MOVR	(_R_AIN1_DATA + 1),W
     0047 2400                      1- 1926     	XORIA	0x00
     0048 0903                      1- 1927     	BTRSS	STATUS,2
     0049 3rrr                      1- 1928     	LGOTO	_00392_DS_
                                    1- 1929     ;;unsigned compare: left < lit (0xB04=2820), size=2
                                    1- 1930     	.line	380, "main.c"; 	if(R_AIN1_DATA < 2820)
     004A 210B                      1- 1931     	MOVIA	0x0b
     004B 04rr                      1- 1932     	SUBAR	(_R_AIN1_DATA + 1),W
     004C 0903                      1- 1933     	BTRSS	STATUS,2
     004D 3rrr                      1- 1934     	LGOTO	_00423_DS_
     004E 2104                      1- 1935     	MOVIA	0x04
     004F 04rr                      1- 1936     	SUBAR	_R_AIN1_DATA,W
     0050                           1- 1937     _00423_DS_:
     0050 0C03                      1- 1938     	BTRSC	STATUS,0
     0051 3rrr                      1- 1939     	LGOTO	_00402_DS_
                                    1- 1940     	.line	382, "main.c"; 	chrgStatus = 2;	//外部电源过低
     0052 2102                      1- 1941     	MOVIA	0x02
                                    1- 1942     	BANKSEL	_chrgStatus
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1- 1943     	MOVAR	_chrgStatus
     0055 3rrr                      1- 1944     	LGOTO	_00402_DS_
     0056                           1- 1945     _00392_DS_:
                                    1- 1946     	.line	388, "main.c"; 	chrgStatus = 2;
     0056 2102                      1- 1947     	MOVIA	0x02
                                    1- 1948     	BANKSEL	_chrgStatus
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1- 1949     	MOVAR	_chrgStatus
     0059 3rrr                      1- 1950     	LGOTO	_00402_DS_
     005A                           1- 1951     _00400_DS_:
                                    1- 1952     	.line	394, "main.c"; 	inLowTime = 0;
                                    1- 1953     	BANKSEL	_inLowTime
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 02rr                      1- 1954     	CLRR	_inLowTime
                                    1- 1955     	.line	395, "main.c"; 	if(chrgStatus == 2)
                                    1- 1956     	BANKSEL	_chrgStatus
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 1957     	MOVR	_chrgStatus,W
     005E 2402                      1- 1958     	XORIA	0x02
     005F 0903                      1- 1959     	BTRSS	STATUS,2
     0060 3rrr                      1- 1960     	LGOTO	_00397_DS_
                                    1- 1961     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1962     ;;unsigned compare: left >= lit (0xB28=2856), size=2
                                    1- 1963     	.line	397, "main.c"; 	if(R_AIN1_DATA > 2855)
     0061 210B                      1- 1964     	MOVIA	0x0b
                                    1- 1965     	BANKSEL	_R_AIN1_DATA
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 04rr                      1- 1966     	SUBAR	(_R_AIN1_DATA + 1),W
     0064 0903                      1- 1967     	BTRSS	STATUS,2
     0065 3rrr                      1- 1968     	LGOTO	_00424_DS_
     0066 2128                      1- 1969     	MOVIA	0x28
     0067 04rr                      1- 1970     	SUBAR	_R_AIN1_DATA,W
     0068                           1- 1971     _00424_DS_:
     0068 0803                      1- 1972     	BTRSS	STATUS,0
     0069 3rrr                      1- 1973     	LGOTO	_00402_DS_
                                    1- 1974     	.line	399, "main.c"; 	chrgStatus = 1;
     006A 2101                      1- 1975     	MOVIA	0x01
                                    1- 1976     	BANKSEL	_chrgStatus
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 00rr                      1- 1977     	MOVAR	_chrgStatus
     006D 3rrr                      1- 1978     	LGOTO	_00402_DS_
     006E                           1- 1979     _00397_DS_:
                                    1- 1980     	.line	403, "main.c"; 	chrgStatus = 1;
     006E 2101                      1- 1981     	MOVIA	0x01
                                    1- 1982     	BANKSEL	_chrgStatus
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 00rr                      1- 1983     	MOVAR	_chrgStatus
     0071                           1- 1984     _00402_DS_:
                                    1- 1985     	.line	409, "main.c"; 	}
                                    1- 1986     	RETURN	
     0071 0010                      3-   26 m1      ret
                                    1- 1987     ; exit point of _checkInV
                                    1- 1989     ;***
                                    1- 1990     ;  pBlock Stats: dbName = C
                                    1- 1991     ;***
                                    1- 1992     ;has an exit
                                    1- 1993     ;functions called:
                                    1- 1994     ;   _delay
                                    1- 1995     ;   _delay
                                    1- 1996     ;1 compiler assigned register :
                                    1- 1997     ;   STK00
                                    1- 1998     ;; Starting pCode block
                                    1- 1999     .segment "code"; module=main, function=_initAD
     0000                           1- 2001     _initAD:
                                    1- 2002     ; 2 exit points
                                    1- 2003     	.line	341, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_Quarter_VDD ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 218B                      1- 2004     	MOVIA	0x8b
     0001 00rr                      1- 2005     	MOVAR	_ADMD
                                    1- 2006     	.line	346, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2007     	CLRR	_ADVREFH
                                    1- 2008     	.line	351, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2009     	MOVIA	0x10
     0004 00rr                      1- 2010     	MOVAR	_ADR
                                    1- 2011     	.line	353, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2012     	MOVIA	0x03
     0006 00rr                      1- 2013     	MOVAR	_ADCR
                                    1- 2014     	.line	356, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2015     	BSR	_ADMDbits,4
                                    1- 2016     	.line	357, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2017     	MOVIA	0x64
     0009 00rr                      1- 2018     	MOVAR	STK00
     000A 2100                      1- 2019     	MOVIA	0x00
     000B 2rrr                      1- 2020     	LCALL	_delay
                                    1- 2021     	.line	360, "main.c"; 	}
                                    1- 2022     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2023     ; exit point of _initAD
                                    1- 2025     ;***
                                    1- 2026     ;  pBlock Stats: dbName = C
                                    1- 2027     ;***
                                    1- 2028     ;has an exit
                                    1- 2029     ;functions called:
                                    1- 2030     ;   _keyRead
                                    1- 2031     ;   _closeStatus
                                    1- 2032     ;   _gotoSleep
                                    1- 2033     ;   _keyRead
                                    1- 2034     ;   _closeStatus
                                    1- 2035     ;   _gotoSleep
                                    1- 2036     ;1 compiler assigned register :
                                    1- 2037     ;   r0x1042
                                    1- 2038     ;; Starting pCode block
                                    1- 2039     .segment "code"; module=main, function=_keyCtr
                                    1- 2041     ;local variable name mapping:
     0000                           1- 2043     _keyCtr:
                                    1- 2044     ; 2 exit points
                                    1- 2045     	.line	308, "main.c"; 	if(chrgStatus == 1 && overFlag == 0)
                                    1- 2046     	BANKSEL	_chrgStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2047     	MOVR	_chrgStatus,W
     0002 2401                      1- 2048     	XORIA	0x01
     0003 0903                      1- 2049     	BTRSS	STATUS,2
     0004 3rrr                      1- 2050     	LGOTO	_00346_DS_
                                    1- 2051     	BANKSEL	_overFlag
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 2052     	MOVR	_overFlag,W
     0007 0903                      1- 2053     	BTRSS	STATUS,2
     0008 3rrr                      1- 2054     	LGOTO	_00346_DS_
                                    1- 2055     	.line	311, "main.c"; 	workStatus = 1;
     0009 2101                      1- 2056     	MOVIA	0x01
                                    1- 2057     	BANKSEL	_workStatus
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 2058     	MOVAR	_workStatus
                                    1- 2059     	.line	313, "main.c"; 	LED3ON();
     000C 1Brr                      1- 2060     	BSR	_PORTA,7
     000D                           1- 2061     _00346_DS_:
                                    1- 2062     	.line	315, "main.c"; 	if(chrgStatus == 0 || chrgStatus == 2 || overFlag == 1)
                                    1- 2063     	BANKSEL	_chrgStatus
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 2064     	MOVR	_chrgStatus,W
     000F 0D03                      1- 2065     	BTRSC	STATUS,2
     0010 3rrr                      1- 2066     	LGOTO	_00354_DS_
     0011 01rr                      1- 2067     	MOVR	_chrgStatus,W
     0012 2402                      1- 2068     	XORIA	0x02
     0013 0D03                      1- 2069     	BTRSC	STATUS,2
     0014 3rrr                      1- 2070     	LGOTO	_00354_DS_
                                    1- 2071     	BANKSEL	_overFlag
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2072     	MOVR	_overFlag,W
     0017 2401                      1- 2073     	XORIA	0x01
     0018 0903                      1- 2074     	BTRSS	STATUS,2
     0019 3rrr                      1- 2075     	LGOTO	_00358_DS_
     001A                           1- 2076     _00354_DS_:
                                    1- 2077     	.line	317, "main.c"; 	char kClick = keyRead(0x01 & ~PORTB);
     001A 07rr                      1- 2078     	COMR	_PORTB,W
                                    1- 2079     	BANKSEL	r0x1042
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 2080     	MOVAR	r0x1042
     001D 2101                      1- 2081     	MOVIA	0x01
     001E 10rr                      1- 2082     	ANDAR	r0x1042,F
     001F 01rr                      1- 2083     	MOVR	r0x1042,W
     0020 2rrr                      1- 2084     	LCALL	_keyRead
                                    1- 2085     	BANKSEL	r0x1042
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 00rr                      1- 2086     	MOVAR	r0x1042
                                    1- 2087     	.line	318, "main.c"; 	if(kClick == 2)
     0023 2402                      1- 2088     	XORIA	0x02
     0024 0903                      1- 2089     	BTRSS	STATUS,2
     0025 3rrr                      1- 2090     	LGOTO	_00358_DS_
                                    1- 2091     	.line	320, "main.c"; 	if(workStatus == 0 || overFlag == 1)
                                    1- 2092     	BANKSEL	_workStatus
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 2093     	MOVR	_workStatus,W
     0028 0D03                      1- 2094     	BTRSC	STATUS,2
     0029 3rrr                      1- 2095     	LGOTO	_00348_DS_
                                    1- 2096     	BANKSEL	_overFlag
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1- 2097     	MOVR	_overFlag,W
     002C 2401                      1- 2098     	XORIA	0x01
     002D 0903                      1- 2099     	BTRSS	STATUS,2
     002E 3rrr                      1- 2100     	LGOTO	_00349_DS_
     002F                           1- 2101     _00348_DS_:
                                    1- 2102     	.line	322, "main.c"; 	overFlag = 0;
                                    1- 2103     	BANKSEL	_overFlag
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1- 2104     	CLRR	_overFlag
                                    1- 2105     	.line	323, "main.c"; 	workStatus = 1;
     0031 2101                      1- 2106     	MOVIA	0x01
                                    1- 2107     	BANKSEL	_workStatus
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1- 2108     	MOVAR	_workStatus
                                    1- 2109     	.line	324, "main.c"; 	lowBatLock = 0;
                                    1- 2110     	BANKSEL	_lowBatLock
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 02rr                      1- 2111     	CLRR	_lowBatLock
     0036 3rrr                      1- 2112     	LGOTO	_00358_DS_
     0037                           1- 2113     _00349_DS_:
                                    1- 2114     	.line	329, "main.c"; 	workStatus = 0;
                                    1- 2115     	BANKSEL	_workStatus
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 02rr                      1- 2116     	CLRR	_workStatus
                                    1- 2117     	.line	330, "main.c"; 	closeStatus();
     0039 2rrr                      1- 2118     	LCALL	_closeStatus
                                    1- 2119     	.line	331, "main.c"; 	gotoSleep();
     003A 2rrr                      1- 2120     	LCALL	_gotoSleep
     003B                           1- 2121     _00358_DS_:
                                    1- 2122     	.line	335, "main.c"; 	}
                                    1- 2123     	RETURN	
     003B 0010                      3-   26 m1      ret
                                    1- 2124     ; exit point of _keyCtr
                                    1- 2126     ;***
                                    1- 2127     ;  pBlock Stats: dbName = C
                                    1- 2128     ;***
                                    1- 2129     ;functions called:
                                    1- 2130     ;   _checkBat
                                    1- 2131     ;   _checkOutA
                                    1- 2132     ;   _checkBat
                                    1- 2133     ;   _checkOutA
                                    1- 2134     ;; Starting pCode block
                                    1- 2135     .segment "code"; module=main, function=_workCtr
     0000                           1- 2137     _workCtr:
                                    1- 2138     ; 0 exit points
                                    1- 2139     	.line	245, "main.c"; 	checkBat();
     0000 2rrr                      1- 2140     	LCALL	_checkBat
                                    1- 2141     	.line	246, "main.c"; 	if(PORTA & 0x20)
     0001 0Arr                      1- 2142     	BTRSS	_PORTA,5
     0002 3rrr                      1- 2143     	LGOTO	_00280_DS_
                                    1- 2144     	.line	248, "main.c"; 	if(batStatus == 2 || chrgStatus == 2)
                                    1- 2145     	BANKSEL	_batStatus
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 01rr                      1- 2146     	MOVR	_batStatus,W
     0005 2402                      1- 2147     	XORIA	0x02
     0006 0D03                      1- 2148     	BTRSC	STATUS,2
     0007 3rrr                      1- 2149     	LGOTO	_00261_DS_
                                    1- 2150     	BANKSEL	_chrgStatus
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1- 2151     	MOVR	_chrgStatus,W
     000A 2402                      1- 2152     	XORIA	0x02
     000B 0903                      1- 2153     	BTRSS	STATUS,2
     000C 3rrr                      1- 2154     	LGOTO	_00262_DS_
     000D                           1- 2155     _00261_DS_:
                                    1- 2156     	.line	250, "main.c"; 	LED1OFF();		//充满了，灭灯
     000D 19rr                      1- 2157     	BSR	_PORTB,3
                                    1- 2158     	.line	251, "main.c"; 	CHRGOFF();
     000E 1Drr                      1- 2159     	BCR	_PORTB,2
     000F 3rrr                      1- 2160     	LGOTO	_00263_DS_
     0010                           1- 2161     _00262_DS_:
                                    1- 2162     	.line	255, "main.c"; 	LED1ON();
     0010 1Drr                      1- 2163     	BCR	_PORTB,3
     0011                           1- 2164     _00263_DS_:
                                    1- 2165     	.line	259, "main.c"; 	if(batStatus == 1 && chrgStatus == 2 && overFlag == 0)
                                    1- 2166     	BANKSEL	_batStatus
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2167     	MOVR	_batStatus,W
     0013 2401                      1- 2168     	XORIA	0x01
     0014 0903                      1- 2169     	BTRSS	STATUS,2
     0015 3rrr                      1- 2170     	LGOTO	_00281_DS_
                                    1- 2171     	BANKSEL	_chrgStatus
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 2172     	MOVR	_chrgStatus,W
     0018 2402                      1- 2173     	XORIA	0x02
     0019 0903                      1- 2174     	BTRSS	STATUS,2
     001A 3rrr                      1- 2175     	LGOTO	_00281_DS_
                                    1- 2176     	BANKSEL	_overFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 2177     	MOVR	_overFlag,W
     001D 0903                      1- 2178     	BTRSS	STATUS,2
     001E 3rrr                      1- 2179     	LGOTO	_00281_DS_
                                    1- 2180     	.line	261, "main.c"; 	LED4ON();
     001F 1Crr                      1- 2181     	BCR	_PORTB,1
     0020 3rrr                      1- 2182     	LGOTO	_00281_DS_
     0021                           1- 2183     _00280_DS_:
                                    1- 2184     	.line	268, "main.c"; 	LED1OFF();		//未充电,电池供电
     0021 19rr                      1- 2185     	BSR	_PORTB,3
                                    1- 2186     	.line	269, "main.c"; 	if(workStatus == 1 && batStatus < 3 && overFlag == 0)
                                    1- 2187     	BANKSEL	_workStatus
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 2188     	MOVR	_workStatus,W
     0024 2401                      1- 2189     	XORIA	0x01
     0025 0903                      1- 2190     	BTRSS	STATUS,2
     0026 3rrr                      1- 2191     	LGOTO	_00270_DS_
                                    1- 2192     ;;unsigned compare: left < lit (0x3=3), size=1
     0027 2103                      1- 2193     	MOVIA	0x03
                                    1- 2194     	BANKSEL	_batStatus
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 04rr                      1- 2195     	SUBAR	_batStatus,W
     002A 0C03                      1- 2196     	BTRSC	STATUS,0
     002B 3rrr                      1- 2197     	LGOTO	_00270_DS_
                                    1- 2198     	BANKSEL	_overFlag
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1- 2199     	MOVR	_overFlag,W
     002E 0D03                      1- 2200     	BTRSC	STATUS,2
                                    1- 2201     	.line	271, "main.c"; 	LED2ON();
     002F 1Brr                      1- 2202     	BSR	_PORTA,6
     0030                           1- 2203     _00270_DS_:
                                    1- 2204     	.line	273, "main.c"; 	if(batStatus == 1)
                                    1- 2205     	BANKSEL	_batStatus
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1- 2206     	MOVR	_batStatus,W
     0032 2401                      1- 2207     	XORIA	0x01
     0033 0903                      1- 2208     	BTRSS	STATUS,2
     0034 3rrr                      1- 2209     	LGOTO	_00277_DS_
                                    1- 2210     	.line	275, "main.c"; 	LED4ON();
     0035 1Crr                      1- 2211     	BCR	_PORTB,1
     0036 3rrr                      1- 2212     	LGOTO	_00281_DS_
     0037                           1- 2213     _00277_DS_:
                                    1- 2214     	.line	277, "main.c"; 	else if(batStatus == 0 || batStatus == 2)
                                    1- 2215     	BANKSEL	_batStatus
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1- 2216     	MOVR	_batStatus,W
     0039 0D03                      1- 2217     	BTRSC	STATUS,2
     003A 3rrr                      1- 2218     	LGOTO	_00273_DS_
     003B 01rr                      1- 2219     	MOVR	_batStatus,W
     003C 2402                      1- 2220     	XORIA	0x02
     003D 0D03                      1- 2221     	BTRSC	STATUS,2
     003E                           1- 2222     _00273_DS_:
                                    1- 2223     	.line	279, "main.c"; 	LED4OFF();
     003E 18rr                      1- 2224     	BSR	_PORTB,1
     003F                           1- 2225     _00281_DS_:
                                    1- 2226     	.line	284, "main.c"; 	if(batStatus == 3 && chrgStatus != 1)
                                    1- 2227     	BANKSEL	_batStatus
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1- 2228     	MOVR	_batStatus,W
     0041 2403                      1- 2229     	XORIA	0x03
     0042 0903                      1- 2230     	BTRSS	STATUS,2
     0043 3rrr                      1- 2231     	LGOTO	_00287_DS_
                                    1- 2232     	BANKSEL	_chrgStatus
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1- 2233     	MOVR	_chrgStatus,W
     0046 2401                      1- 2234     	XORIA	0x01
     0047 0D03                      1- 2235     	BTRSC	STATUS,2
     0048 3rrr                      1- 2236     	LGOTO	_00287_DS_
                                    1- 2237     	.line	286, "main.c"; 	if(++firstLowTime >= 10)
                                    1- 2238     	BANKSEL	_firstLowTime
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 05rr                      1- 2239     	INCR	_firstLowTime,F
     004B 210A                      1- 2240     	MOVIA	0x0a
     004C 04rr                      1- 2241     	SUBAR	_firstLowTime,W
     004D 0803                      1- 2242     	BTRSS	STATUS,0
     004E 3rrr                      1- 2243     	LGOTO	_00287_DS_
                                    1- 2244     	.line	288, "main.c"; 	firstLowTime = 0;
     004F 02rr                      1- 2245     	CLRR	_firstLowTime
                                    1- 2246     	.line	289, "main.c"; 	POWEROFF();			//缺电状态关闭负载
     0050 1Crr                      1- 2247     	BCR	_PORTA,0
                                    1- 2248     	.line	290, "main.c"; 	if(firstLow == 0)
                                    1- 2249     	BANKSEL	_firstLow
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 01rr                      1- 2250     	MOVR	_firstLow,W
     0053 0903                      1- 2251     	BTRSS	STATUS,2
     0054 3rrr                      1- 2252     	LGOTO	_00283_DS_
                                    1- 2253     	.line	291, "main.c"; 	shandeng = 6;
     0055 2106                      1- 2254     	MOVIA	0x06
                                    1- 2255     	BANKSEL	_shandeng
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 00rr                      1- 2256     	MOVAR	_shandeng
     0058                           1- 2257     _00283_DS_:
                                    1- 2258     	.line	292, "main.c"; 	firstLow = 1;
     0058 2101                      1- 2259     	MOVIA	0x01
                                    1- 2260     	BANKSEL	_firstLow
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 00rr                      1- 2261     	MOVAR	_firstLow
     005B                           1- 2262     _00287_DS_:
                                    1- 2263     	.line	297, "main.c"; 	if(overFlag == 0)
                                    1- 2264     	BANKSEL	_overFlag
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 01rr                      1- 2265     	MOVR	_overFlag,W
     005D 0D03                      1- 2266     	BTRSC	STATUS,2
                                    1- 2267     	.line	299, "main.c"; 	checkOutA();
     005E 2rrr                      1- 2268     	LCALL	_checkOutA
                                    1- 2269     	.line	303, "main.c"; 	}
                                    1- 2270     	RETURN	
     005F 0010                      3-   26 m1      ret
                                    1- 2272     ;***
                                    1- 2273     ;  pBlock Stats: dbName = C
                                    1- 2274     ;***
                                    1- 2275     ;has an exit
                                    1- 2276     ;functions called:
                                    1- 2277     ;   _checkInV
                                    1- 2278     ;   _checkInV
                                    1- 2279     ;; Starting pCode block
                                    1- 2280     .segment "code"; module=main, function=_chrgWork
     0000                           1- 2282     _chrgWork:
                                    1- 2283     ; 2 exit points
                                    1- 2284     	.line	204, "main.c"; 	if(overFlag == 1)
                                    1- 2285     	BANKSEL	_overFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2286     	MOVR	_overFlag,W
     0002 2401                      1- 2287     	XORIA	0x01
     0003 0903                      1- 2288     	BTRSS	STATUS,2
     0004 3rrr                      1- 2289     	LGOTO	_00245_DS_
                                    1- 2290     	.line	206, "main.c"; 	LED2OFF();
     0005 1Frr                      1- 2291     	BCR	_PORTA,6
                                    1- 2292     	.line	207, "main.c"; 	LED3OFF();
     0006 1Frr                      1- 2293     	BCR	_PORTA,7
                                    1- 2294     	.line	208, "main.c"; 	LED4OFF();
     0007 18rr                      1- 2295     	BSR	_PORTB,1
                                    1- 2296     	.line	209, "main.c"; 	POWEROFF();
     0008 1Crr                      1- 2297     	BCR	_PORTA,0
     0009                           1- 2298     _00245_DS_:
                                    1- 2299     	.line	213, "main.c"; 	if(PORTA & 0x20)
     0009 0Arr                      1- 2300     	BTRSS	_PORTA,5
     000A 3rrr                      1- 2301     	LGOTO	_00256_DS_
                                    1- 2302     	.line	215, "main.c"; 	checkInV();
     000B 2rrr                      1- 2303     	LCALL	_checkInV
                                    1- 2304     	.line	216, "main.c"; 	overFlag = 0;
                                    1- 2305     	BANKSEL	_overFlag
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1- 2306     	CLRR	_overFlag
                                    1- 2307     	.line	217, "main.c"; 	if(chrgStatus == 2)
                                    1- 2308     	BANKSEL	_chrgStatus
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 2309     	MOVR	_chrgStatus,W
     0010 2402                      1- 2310     	XORIA	0x02
     0011 0903                      1- 2311     	BTRSS	STATUS,2
     0012 3rrr                      1- 2312     	LGOTO	_00252_DS_
                                    1- 2313     	.line	220, "main.c"; 	if(workStatus == 1 && batStatus < 3 &&  lowBatLock == 0)
                                    1- 2314     	BANKSEL	_workStatus
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 2315     	MOVR	_workStatus,W
     0015 2401                      1- 2316     	XORIA	0x01
     0016 0903                      1- 2317     	BTRSS	STATUS,2
     0017 3rrr                      1- 2318     	LGOTO	_00247_DS_
                                    1- 2319     ;;unsigned compare: left < lit (0x3=3), size=1
     0018 2103                      1- 2320     	MOVIA	0x03
                                    1- 2321     	BANKSEL	_batStatus
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 04rr                      1- 2322     	SUBAR	_batStatus,W
     001B 0C03                      1- 2323     	BTRSC	STATUS,0
     001C 3rrr                      1- 2324     	LGOTO	_00247_DS_
                                    1- 2325     	BANKSEL	_lowBatLock
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 2326     	MOVR	_lowBatLock,W
     001F 0903                      1- 2327     	BTRSS	STATUS,2
     0020 3rrr                      1- 2328     	LGOTO	_00247_DS_
                                    1- 2329     	.line	222, "main.c"; 	LED2ON();
     0021 1Brr                      1- 2330     	BSR	_PORTA,6
                                    1- 2331     	.line	223, "main.c"; 	POWERON();
     0022 18rr                      1- 2332     	BSR	_PORTA,0
     0023 3rrr                      1- 2333     	LGOTO	_00256_DS_
     0024                           1- 2334     _00247_DS_:
                                    1- 2335     	.line	227, "main.c"; 	LED2OFF();
     0024 1Frr                      1- 2336     	BCR	_PORTA,6
                                    1- 2337     	.line	228, "main.c"; 	LED3OFF();
     0025 1Frr                      1- 2338     	BCR	_PORTA,7
                                    1- 2339     	.line	229, "main.c"; 	LED4OFF();
     0026 18rr                      1- 2340     	BSR	_PORTB,1
                                    1- 2341     	.line	230, "main.c"; 	POWEROFF();
     0027 1Crr                      1- 2342     	BCR	_PORTA,0
     0028 3rrr                      1- 2343     	LGOTO	_00256_DS_
     0029                           1- 2344     _00252_DS_:
                                    1- 2345     	.line	235, "main.c"; 	LED3ON();
     0029 1Brr                      1- 2346     	BSR	_PORTA,7
     002A                           1- 2347     _00256_DS_:
                                    1- 2348     	.line	239, "main.c"; 	}
                                    1- 2349     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1- 2350     ; exit point of _chrgWork
                                    1- 2353     ;	code size estimation:
                                    1- 2354     ;	  920+  226 =  1146 instructions ( 2744 byte)
                                    1- 2356     	end
                                    1- 2356     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    0000002E
_00003_DS_              Label    0000002E
_00004_DS_              Label    0000002E
_00005_DS_              Label    00000025
_00006_DS_              Label    00000025
_00007_DS_              Label    00000025
_00008_DS_              Label    00000068
_00106_DS_              Label    0000002E
_00107_DS_              Label    0000002F
_00117_DS_              Label    00000034
_00119_DS_              Label    00000038
_00126_DS_              Label    00000043
_00134_DS_              Label    00000045
_00135_DS_              Label    0000004B
_00150_DS_              Label    0000005F
_00151_DS_              Label    00000080
_00161_DS_              Label    00000093
_00164_DS_              Label    0000001E
_00245_DS_              Label    00000009
_00247_DS_              Label    00000024
_00252_DS_              Label    00000029
_00256_DS_              Label    0000002A
_00261_DS_              Label    0000000D
_00262_DS_              Label    00000010
_00263_DS_              Label    00000011
_00270_DS_              Label    00000030
_00273_DS_              Label    0000003E
_00277_DS_              Label    00000037
_00280_DS_              Label    00000021
_00281_DS_              Label    0000003F
_00283_DS_              Label    00000058
_00287_DS_              Label    0000005B
_00346_DS_              Label    0000000D
_00348_DS_              Label    0000002F
_00349_DS_              Label    00000037
_00354_DS_              Label    0000001A
_00358_DS_              Label    0000003B
_00388_DS_              Label    00000038
_00392_DS_              Label    00000056
_00397_DS_              Label    0000006E
_00400_DS_              Label    0000005A
_00402_DS_              Label    00000071
_00422_DS_              Label    0000003F
_00423_DS_              Label    00000050
_00424_DS_              Label    00000068
_00430_DS_              Label    00000038
_00434_DS_              Label    00000056
_00441_DS_              Label    0000008A
_00444_DS_              Label    00000078
_00445_DS_              Label    0000008D
_00453_DS_              Label    000000C8
_00454_DS_              Label    000000CA
_00456_DS_              Label    000000B7
_00461_DS_              Label    000000E7
_00462_DS_              Label    000000EA
_00466_DS_              Label    000000CD
_00469_DS_              Label    0000009B
_00472_DS_              Label    0000005D
_00474_DS_              Label    000000EE
_00530_DS_              Label    0000003F
_00531_DS_              Label    0000004D
_00532_DS_              Label    00000064
_00533_DS_              Label    00000072
_00534_DS_              Label    00000084
_00535_DS_              Label    00000096
_00536_DS_              Label    000000A2
_00537_DS_              Label    000000B0
_00538_DS_              Label    000000C3
_00539_DS_              Label    000000D4
_00540_DS_              Label    000000E1
_00546_DS_              Label    00000037
_00548_DS_              Label    00000043
_00549_DS_              Label    00000045
_00552_DS_              Label    00000053
_00563_DS_              Label    0000003E
_00570_DS_              Label    00000010
_00572_DS_              Label    00000031
_00579_DS_              Label    00000010
_00581_DS_              Label    00000031
_00588_DS_              Label    00000010
_00590_DS_              Label    00000031
_00599_DS_              Label    00000000
_00606_DS_              Label    00000009
_00608_DS_              Label    0000001C
_00617_DS_              Label    00000013
_00629_DS_              Label    0000001F
_00630_DS_              Label    00000027
_00632_DS_              Label    00000015
_00633_DS_              Label    00000029
_00634_DS_              Label    0000002A
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_batLowTime             Label    00000000
_batStatus              Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBat               Label    00000000
_checkInV               Label    00000000
_checkOutA              Label    00000000
_chrgStatus             Label    00000000
_chrgWork               Label    00000000
_closeStatus            Label    00000000
_CMPCR                  Label    00000000
_count500ms             Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_F_AIN1_Convert         Label    00000000
_F_AIN2_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_firstLow               Label    00000000
_firstLowTime           Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_inLowTime              Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_longPressFlag          Label    00000000
_lowBatLock             Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_overFlag               Label    00000000
_overTime               Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN1_DATA            Label    00000000
_R_AIN1_DATA_LB         Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_shandeng               Label    00000000
_sleepDelay             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStatus             Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000049
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1035                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103C                 Label    00000000
r0x103D                 Label    00000000
r0x1040                 Label    00000000
r0x1041                 Label    00000000
r0x1042                 Label    00000000
r0x1043                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
