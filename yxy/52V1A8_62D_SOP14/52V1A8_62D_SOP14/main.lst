
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_closeStatus
                                    1-   97     	extern	_keyRead
                                    1-   98     	extern	_delay
                                    1-   99     	extern	_F_wait_eoc
                                    1-  100     	extern	_gotoSleep
                                    1-  101     	extern	_F_AIN4_Convert
                                    1-  102     	extern	_F_AIN2_Convert
                                    1-  103     	extern	_F_AIN1_Convert
                                    1-  104     	extern	_checkOutA
                                    1-  105     	extern	_checkBat
                                    1-  106     	extern	_checkInV
                                    1-  107     	extern	_initAD
                                    1-  108     	extern	_keyCtr
                                    1-  109     	extern	_workCtr
                                    1-  110     	extern	_chrgWork
                                    1-  111     	extern	_isr
                                    1-  112     	extern	_main
                                    1-  113     	extern	_debug
                                    1-  114     	extern	_intCount
                                    1-  115     	extern	_IntFlag
                                    1-  116     	extern	_sleepDelay
                                    1-  117     	extern	_workStep
                                    1-  118     	extern	_longPressFlag
                                    1-  119     	extern	_keyCount
                                    1-  120     	extern	_keyClick
                                    1-  121     	extern	_chrgStatus
                                    1-  122     	extern	_overFlag
                                    1-  123     	extern	_batStatus
                                    1-  124     	extern	_workStatus
                                    1-  125     	extern	_inLowTime
                                    1-  126     	extern	_R_AIN1_DATA
                                    1-  127     	extern	_R_AIN1_DATA_LB
                                    1-  128     	extern	_R_AIN2_DATA
                                    1-  129     	extern	_R_AIN2_DATA_LB
                                    1-  130     	extern	_R_AIN4_DATA
                                    1-  131     	extern	_R_AIN4_DATA_LB
                                    1-  132     	extern	_overTime
                                    1-  133     	extern	_shandeng
                                    1-  134     	extern	_count500ms
                                    1-  135     	extern	_firstLow
                                    1-  136     	extern	_firstLowTime
                                    1-  138     	extern PSAVE
                                    1-  139     	extern SSAVE
                                    1-  140     	extern WSAVE
                                    1-  141     	extern STK02
                                    1-  142     	extern STK01
                                    1-  143     	extern STK00
                                    1-  145     .segment "uninit", 0x20000040
 20000040                           1-  146     PSAVE:
                                    1-  147     	.res 1
 20000041                           1-  148     SSAVE:
                                    1-  149     	.res 1
 20000042                           1-  150     WSAVE:
                                    1-  151     	.res 1
 20000043                           1-  152     STK02:
                                    1-  153     	.res 1
 20000044                           1-  154     STK01:
                                    1-  155     	.res 1
 20000045                           1-  156     STK00:
                                    1-  157     	.res 1
                                    1-  159     ;--------------------------------------------------------
                                    1-  160     ; global definitions
                                    1-  161     ;--------------------------------------------------------
                                    1-  162     ;--------------------------------------------------------
                                    1-  163     ; absolute symbol definitions
                                    1-  164     ;--------------------------------------------------------
                                    1-  165     ;--------------------------------------------------------
                                    1-  166     ; compiler-defined variables
                                    1-  167     ;--------------------------------------------------------
                                    1-  168     .segment "uninit"
     0000                           1-  169     r0x1041:
                                    1-  170     	.res	1
                                    1-  171     .segment "uninit"
     0000                           1-  172     r0x1040:
                                    1-  173     	.res	1
                                    1-  174     .segment "uninit"
     0000                           1-  175     r0x103E:
                                    1-  176     	.res	1
                                    1-  177     .segment "uninit"
     0000                           1-  178     r0x103F:
                                    1-  179     	.res	1
                                    1-  180     .segment "uninit"
     0000                           1-  181     r0x103A:
                                    1-  182     	.res	1
                                    1-  183     .segment "uninit"
     0000                           1-  184     r0x103B:
                                    1-  185     	.res	1
                                    1-  186     .segment "uninit"
     0000                           1-  187     r0x1036:
                                    1-  188     	.res	1
                                    1-  189     .segment "uninit"
     0000                           1-  190     r0x1037:
                                    1-  191     	.res	1
                                    1-  192     .segment "uninit"
     0000                           1-  193     r0x102E:
                                    1-  194     	.res	1
                                    1-  195     .segment "uninit"
     0000                           1-  196     r0x102F:
                                    1-  197     	.res	1
                                    1-  198     .segment "uninit"
     0000                           1-  199     r0x1030:
                                    1-  200     	.res	1
                                    1-  201     .segment "uninit"
     0000                           1-  202     r0x1033:
                                    1-  203     	.res	1
                                    1-  204     .segment "uninit"
     0000                           1-  205     r0x1028:
                                    1-  206     	.res	1
                                    1-  207     .segment "uninit"
     0000                           1-  208     r0x1029:
                                    1-  209     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     r0x102A:
                                    1-  212     	.res	1
                                    1-  213     .segment "uninit"
     0000                           1-  214     r0x102D:
                                    1-  215     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     r0x1022:
                                    1-  218     	.res	1
                                    1-  219     .segment "uninit"
     0000                           1-  220     r0x1023:
                                    1-  221     	.res	1
                                    1-  222     .segment "uninit"
     0000                           1-  223     r0x1024:
                                    1-  224     	.res	1
                                    1-  225     .segment "uninit"
     0000                           1-  226     r0x1027:
                                    1-  227     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     r0x101F:
                                    1-  230     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     r0x101E:
                                    1-  233     	.res	1
                                    1-  234     .segment "uninit"
     0000                           1-  235     r0x1020:
                                    1-  236     	.res	1
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x1021:
                                    1-  239     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     r0x101D:
                                    1-  242     	.res	1
                                    1-  243     ;--------------------------------------------------------
                                    1-  244     ; initialized data
                                    1-  245     ;--------------------------------------------------------
                                    1-  247     .segment "idata"
     0000                           1-  248     _debug:
     0000 0000                      1-  249     	dw	0x00
                                    1-  253     .segment "idata"
     0000                           1-  254     _intCount:
     0000 0000                      1-  255     	dw	0x00
                                    1-  259     .segment "idata"
     0000                           1-  260     _IntFlag:
     0000 0000                      1-  261     	dw	0x00
                                    1-  265     .segment "idata"
     0000                           1-  266     _sleepDelay:
     0000 0000                      1-  267     	dw	0x00
                                    1-  271     .segment "idata"
     0000                           1-  272     _workStep:
     0000 0000                      1-  273     	dw	0x00
                                    1-  277     .segment "idata"
     0000                           1-  278     _longPressFlag:
     0000 0000                      1-  279     	dw	0x00
                                    1-  283     .segment "idata"
     0000                           1-  284     _keyCount:
     0000 0000                      1-  285     	dw	0x00
                                    1-  289     .segment "idata"
     0000                           1-  290     _keyClick:
     0000 0000                      1-  291     	dw	0x00
                                    1-  295     .segment "idata"
     0000                           1-  296     _chrgStatus:
     0000 0000                      1-  297     	dw	0x00
                                    1-  301     .segment "idata"
     0000                           1-  302     _overFlag:
     0000 0000                      1-  303     	dw	0x00
                                    1-  307     .segment "idata"
     0000                           1-  308     _batStatus:
     0000 0000                      1-  309     	dw	0x00
                                    1-  313     .segment "idata"
     0000                           1-  314     _workStatus:
     0000 0000                      1-  315     	dw	0x00
                                    1-  319     .segment "idata"
     0000                           1-  320     _inLowTime:
     0000 0000                      1-  321     	dw	0x00
                                    1-  325     .segment "idata"
     0000                           1-  326     _R_AIN1_DATA:
     0000 0000 0000                 1-  327     	dw	0x00, 0x00
                                    1-  331     .segment "idata"
     0000                           1-  332     _R_AIN1_DATA_LB:
     0000 0000                      1-  333     	dw	0x00
                                    1-  337     .segment "idata"
     0000                           1-  338     _R_AIN2_DATA:
     0000 0000 0000                 1-  339     	dw	0x00, 0x00
                                    1-  343     .segment "idata"
     0000                           1-  344     _R_AIN2_DATA_LB:
     0000 0000                      1-  345     	dw	0x00
                                    1-  349     .segment "idata"
     0000                           1-  350     _R_AIN4_DATA:
     0000 0000 0000                 1-  351     	dw	0x00, 0x00
                                    1-  355     .segment "idata"
     0000                           1-  356     _R_AIN4_DATA_LB:
     0000 0000                      1-  357     	dw	0x00
                                    1-  361     .segment "idata"
     0000                           1-  362     _overTime:
     0000 0000                      1-  363     	dw	0x00
                                    1-  367     .segment "idata"
     0000                           1-  368     _shandeng:
     0000 0000                      1-  369     	dw	0x00
                                    1-  373     .segment "idata"
     0000                           1-  374     _count500ms:
     0000 0000                      1-  375     	dw	0x00
                                    1-  379     .segment "idata"
     0000                           1-  380     _firstLow:
     0000 0000                      1-  381     	dw	0x00
                                    1-  385     .segment "idata"
     0000                           1-  386     _firstLowTime:
     0000 0000                      1-  387     	dw	0x00
                                    1-  390     ;--------------------------------------------------------
                                    1-  391     ; overlayable items in internal ram 
                                    1-  392     ;--------------------------------------------------------
                                    1-  393     ;	udata_ovr
                                    1-  394     ;--------------------------------------------------------
                                    1-  395     ; reset vector 
                                    1-  396     ;--------------------------------------------------------
                                    1-  397     ORG	0x0000
     0000 3rrr                      1-  398     	LGOTO	__nyc_ny8_startup
                                    1-  399     ;--------------------------------------------------------
                                    1-  400     ; interrupt and initialization code
                                    1-  401     ;--------------------------------------------------------
                                    1-  402     ORG 0x0008
     0008 3rrr                      1-  403     	lgoto	__sdcc_interrupt
                                    1-  405     .segment "code"
     0000                           1-  406     __sdcc_interrupt:
                                    1-  407     ;***
                                    1-  408     ;  pBlock Stats: dbName = I
                                    1-  409     ;***
                                    1-  410     ;2 compiler assigned registers:
                                    1-  411     ;   STK00
                                    1-  412     ;   STK01
                                    1-  413     ;; Starting pCode block
     0000                           1-  414     _isr:
                                    1-  415     ; 0 exit points
                                    1-  416     	.line	71, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  417     	MOVAR	WSAVE
     0001 1503                      1-  418     	SWAPR	STATUS,W
     0002 0283                      1-  419     	CLRR	STATUS
     0003 00rr                      1-  420     	MOVAR	SSAVE
     0004 010A                      1-  421     	MOVR	PCHBUF,W
     0005 028A                      1-  422     	CLRR	PCHBUF
     0006 00rr                      1-  423     	MOVAR	PSAVE
     0007 0104                      1-  424     	MOVR	FSR,W
                                    1-  425     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  426     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  427     	MOVR	STK00,W
                                    1-  428     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  429     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  430     	MOVR	STK01,W
                                    1-  431     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  432     	MOVAR	___sdcc_saved_stk01
                                    1-  433     	.line	73, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  434     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  435     	LGOTO	_00115_DS_
                                    1-  436     	.line	75, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  437     	MOVIA	0x37
     0013 03rr                      1-  438     	ADDAR	_TMR0,F
                                    1-  439     	.line	76, "main.c"; 	intCount++;
                                    1-  440     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  441     	INCR	_intCount,F
                                    1-  442     	.line	78, "main.c"; 	if(++intCount >= 100)
     0016 05rr                      1-  443     	INCR	_intCount,F
                                    1-  444     ;;unsigned compare: left < lit (0x64=100), size=1
     0017 2164                      1-  445     	MOVIA	0x64
     0018 04rr                      1-  446     	SUBAR	_intCount,W
     0019 0803                      1-  447     	BTRSS	STATUS,0
     001A 3rrr                      1-  448     	LGOTO	_00115_DS_
                                    1-  449     	.line	80, "main.c"; 	intCount = 0;
     001B 02rr                      1-  450     	CLRR	_intCount
                                    1-  451     	.line	81, "main.c"; 	IntFlag = 1;
     001C 2101                      1-  452     	MOVIA	0x01
                                    1-  453     	BANKSEL	_IntFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  454     	MOVAR	_IntFlag
                                    1-  455     	.line	82, "main.c"; 	if(++count500ms >= 50)
                                    1-  456     	BANKSEL	_count500ms
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 05rr                      1-  457     	INCR	_count500ms,F
                                    1-  458     ;;unsigned compare: left < lit (0x32=50), size=1
     0021 2132                      1-  459     	MOVIA	0x32
     0022 04rr                      1-  460     	SUBAR	_count500ms,W
     0023 0803                      1-  461     	BTRSS	STATUS,0
     0024 3rrr                      1-  462     	LGOTO	_00115_DS_
                                    1-  463     	.line	84, "main.c"; 	count500ms = 0;
     0025 02rr                      1-  464     	CLRR	_count500ms
                                    1-  465     	.line	85, "main.c"; 	if(shandeng > 0)
                                    1-  466     	BANKSEL	_shandeng
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  467     	MOVR	_shandeng,W
     0028 0D03                      1-  468     	BTRSC	STATUS,2
     0029 3rrr                      1-  469     	LGOTO	_00115_DS_
                                    1-  470     	.line	87, "main.c"; 	if(shandeng % 2 == 0)
     002A 0Crr                      1-  471     	BTRSC	_shandeng,0
     002B 3rrr                      1-  472     	LGOTO	_00106_DS_
                                    1-  473     	.line	88, "main.c"; 	LED4ON();
     002C 1Crr                      1-  474     	BCR	_PORTB,1
     002D 3rrr                      1-  475     	LGOTO	_00107_DS_
     002E                           1-  476     _00106_DS_:
                                    1-  477     	.line	90, "main.c"; 	LED4OFF();
     002E 18rr                      1-  478     	BSR	_PORTB,1
     002F                           1-  479     _00107_DS_:
                                    1-  480     	.line	91, "main.c"; 	shandeng--;
                                    1-  481     	BANKSEL	_shandeng
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 06rr                      1-  482     	DECR	_shandeng,F
     0031                           1-  483     _00115_DS_:
                                    1-  484     	.line	103, "main.c"; 	if(INTFbits.PABIF)
     0031 08rr                      1-  485     	BTRSS	_INTFbits,1
     0032 3rrr                      1-  486     	LGOTO	_00117_DS_
                                    1-  487     	.line	105, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0033 21FD                      1-  488     	MOVIA	0xfd
     0034 00rr                      1-  489     	MOVAR	_INTF
     0035                           1-  490     _00117_DS_:
                                    1-  491     	.line	108, "main.c"; 	INTF = 0;
     0035 02rr                      1-  492     	CLRR	_INTF
                                    1-  493     	.line	110, "main.c"; 	}
                                    1-  494     	BANKSEL	___sdcc_saved_stk01
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1-  495     	MOVR	___sdcc_saved_stk01,W
     0038 00rr                      1-  496     	MOVAR	STK01
                                    1-  497     	BANKSEL	___sdcc_saved_stk00
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  498     	MOVR	___sdcc_saved_stk00,W
     003B 00rr                      1-  499     	MOVAR	STK00
                                    1-  500     	BANKSEL	___sdcc_saved_fsr
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1-  501     	MOVR	___sdcc_saved_fsr,W
     003E 0084                      1-  502     	MOVAR	FSR
     003F 01rr                      1-  503     	MOVR	PSAVE,W
     0040 008A                      1-  504     	MOVAR	PCHBUF
     0041 0283                      1-  505     	CLRR	STATUS
     0042 15rr                      1-  506     	SWAPR	SSAVE,W
     0043 0083                      1-  507     	MOVAR	STATUS
     0044 15rr                      1-  508     	SWAPR	WSAVE,F
     0045 15rr                      1-  509     	SWAPR	WSAVE,W
     0046                           1-  510     END_OF_INTERRUPT:
     0046 0011                      1-  511     	RETIE	
                                    1-  513     ;--------------------------------------------------------
                                    1-  514     ; code
                                    1-  515     ;--------------------------------------------------------
                                    1-  516     ;***
                                    1-  517     ;  pBlock Stats: dbName = M
                                    1-  518     ;***
                                    1-  519     ;has an exit
                                    1-  520     ;functions called:
                                    1-  521     ;   _closeStatus
                                    1-  522     ;   _initAD
                                    1-  523     ;   _keyCtr
                                    1-  524     ;   _chrgWork
                                    1-  525     ;   _workCtr
                                    1-  526     ;   _closeStatus
                                    1-  527     ;   _gotoSleep
                                    1-  528     ;   _closeStatus
                                    1-  529     ;   _initAD
                                    1-  530     ;   _keyCtr
                                    1-  531     ;   _chrgWork
                                    1-  532     ;   _workCtr
                                    1-  533     ;   _closeStatus
                                    1-  534     ;   _gotoSleep
                                    1-  535     ;1 compiler assigned register :
                                    1-  536     ;   r0x1041
                                    1-  537     ;; Starting pCode block
                                    1-  538     .segment "code"; module=main, function=_main
     0000                           1-  540     _main:
                                    1-  541     ; 2 exit points
                                    1-  542     	.line	114, "main.c"; 	DISI();
     0000 0013                      1-  543     	DISI
                                    1-  544     	.line	115, "main.c"; 	IOSTA = C_PA1_Input | C_PA2_Input | C_PA3_Input | C_PA4_Input | C_PA5_Input;
     0001 213E                      1-  545     	MOVIA	0x3e
     0002 000r                      1-  546     	IOST	_IOSTA
                                    1-  547     	.line	116, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1-  548     	MOVIA	0x01
     0004 000r                      1-  549     	IOST	_IOSTB
                                    1-  550     	.line	117, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1-  551     	CLRR	_PORTB
                                    1-  552     	.line	118, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1-  553     	CLRR	_PORTA
                                    1-  554     	.line	119, "main.c"; 	APHCON = 0xDF;
     0007 21DF                      1-  555     	MOVIA	0xdf
     0008 000r                      1-  556     	IOST	_APHCON
                                    1-  557     	.line	120, "main.c"; 	BPHCON = 0xFE;
     0009 21FE                      1-  558     	MOVIA	0xfe
     000A 00rr                      1-  559     	MOVAR	_BPHCON
                                    1-  560     	.line	121, "main.c"; 	ABPLCON = 0xFF;
     000B 21FF                      1-  561     	MOVIA	0xff
     000C 00rr                      1-  562     	MOVAR	_ABPLCON
                                    1-  563     	.line	123, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000D 2101                      1-  564     	MOVIA	0x01
     000E 00rr                      1-  565     	MOVAR	_INTE
                                    1-  566     	.line	125, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1-  567     	CLRA	
     0010 000r                      1-  568     	IOST	_PCON1
                                    1-  569     	.line	127, "main.c"; 	TMR0 = 55;
     0011 2137                      1-  570     	MOVIA	0x37
     0012 00rr                      1-  571     	MOVAR	_TMR0
                                    1-  572     	.line	128, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0013 0200                      1-  573     	CLRA	
     0014 0003                      1-  574     	T0MD	
                                    1-  575     	.line	130, "main.c"; 	PCON1 = C_TMR0_En;
     0015 2101                      1-  576     	MOVIA	0x01
     0016 000r                      1-  577     	IOST	_PCON1
                                    1-  578     	.line	132, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR,PA5关闭上拉
     0017 2198                      1-  579     	MOVIA	0x98
     0018 00rr                      1-  580     	MOVAR	_PCON
                                    1-  581     	.line	134, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1-  582     	MOVIA	0x01
     001A 000r                      1-  583     	IOST	_PCON1
                                    1-  584     	.line	135, "main.c"; 	ENI();
     001B 0004                      1-  585     	ENI
                                    1-  586     	.line	136, "main.c"; 	closeStatus();
     001C 2rrr                      1-  587     	LCALL	_closeStatus
                                    1-  588     	.line	137, "main.c"; 	initAD();
     001D 2rrr                      1-  589     	LCALL	_initAD
     001E                           1-  590     _00161_DS_:
                                    1-  591     	.line	142, "main.c"; 	CLRWDT();
     001E 0002                      1-  592     	clrwdt
                                    1-  593     	.line	143, "main.c"; 	if(PORTA & 0x20)
     001F 0Arr                      1-  594     	BTRSS	_PORTA,5
     0020 3rrr                      1-  595     	LGOTO	_00147_DS_
                                    1-  596     ;;unsigned compare: left < lit (0x2=2), size=1
                                    1-  597     	.line	146, "main.c"; 	if(chrgStatus < 2)
     0021 2102                      1-  598     	MOVIA	0x02
                                    1-  599     	BANKSEL	_chrgStatus
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 04rr                      1-  600     	SUBAR	_chrgStatus,W
                                    1-  601     	BANKSEL	r0x1041
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1-  602     	CLRR	r0x1041
     0026 0803                      1-  603     	BTRSS	STATUS,0
     0027 18rr                      1-  604     	BSR	r0x1041,0
     0028 01rr                      1-  605     	MOVR	r0x1041,W
     0029 0D03                      1-  606     	BTRSC	STATUS,2
     002A 3rrr                      1-  607     	LGOTO	_00132_DS_
                                    1-  608     	.line	148, "main.c"; 	LED2OFF();
     002B 1Frr                      1-  609     	BCR	_PORTA,6
                                    1-  610     	.line	149, "main.c"; 	if(chrgStatus == 1)
                                    1-  611     	BANKSEL	_chrgStatus
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1-  612     	MOVR	_chrgStatus,W
     002E 2401                      1-  613     	XORIA	0x01
     002F 0D03                      1-  614     	BTRSC	STATUS,2
                                    1-  615     	.line	150, "main.c"; 	LED4OFF();
     0030 18rr                      1-  616     	BSR	_PORTB,1
                                    1-  617     	.line	151, "main.c"; 	if(batStatus == 0 || batStatus == 2 || (batStatus == 3 && shandeng == 0))
                                    1-  618     	BANKSEL	_batStatus
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1-  619     	MOVR	_batStatus,W
     0033 0D03                      1-  620     	BTRSC	STATUS,2
     0034 3rrr                      1-  621     	LGOTO	_00124_DS_
     0035 01rr                      1-  622     	MOVR	_batStatus,W
     0036 2402                      1-  623     	XORIA	0x02
     0037 0D03                      1-  624     	BTRSC	STATUS,2
     0038 3rrr                      1-  625     	LGOTO	_00124_DS_
     0039 01rr                      1-  626     	MOVR	_batStatus,W
     003A 2403                      1-  627     	XORIA	0x03
     003B 0903                      1-  628     	BTRSS	STATUS,2
     003C 3rrr                      1-  629     	LGOTO	_00133_DS_
                                    1-  630     	BANKSEL	_shandeng
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1-  631     	MOVR	_shandeng,W
     003F 0903                      1-  632     	BTRSS	STATUS,2
     0040 3rrr                      1-  633     	LGOTO	_00133_DS_
     0041                           1-  634     _00124_DS_:
                                    1-  635     	.line	152, "main.c"; 	LED4OFF();
     0041 18rr                      1-  636     	BSR	_PORTB,1
     0042 3rrr                      1-  637     	LGOTO	_00133_DS_
     0043                           1-  638     _00132_DS_:
                                    1-  639     	.line	156, "main.c"; 	LED3OFF();
     0043 1Frr                      1-  640     	BCR	_PORTA,7
                                    1-  641     	.line	157, "main.c"; 	if(batStatus == 3)
                                    1-  642     	BANKSEL	_batStatus
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1-  643     	MOVR	_batStatus,W
     0046 2403                      1-  644     	XORIA	0x03
     0047 0D03                      1-  645     	BTRSC	STATUS,2
                                    1-  646     	.line	158, "main.c"; 	LED2OFF();
     0048 1Frr                      1-  647     	BCR	_PORTA,6
     0049                           1-  648     _00133_DS_:
                                    1-  649     	.line	160, "main.c"; 	if(chrgStatus == 0)
                                    1-  650     	BANKSEL	_chrgStatus
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 01rr                      1-  651     	MOVR	_chrgStatus,W
     004B 0D03                      1-  652     	BTRSC	STATUS,2
                                    1-  653     	.line	162, "main.c"; 	CHRGON();
     004C 19rr                      1-  654     	BSR	_PORTB,2
                                    1-  655     	.line	164, "main.c"; 	if(workStatus == 1 && overFlag == 0 && chrgStatus < 2)
                                    1-  656     	BANKSEL	_workStatus
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1-  657     	MOVR	_workStatus,W
     004F 2401                      1-  658     	XORIA	0x01
     0050 0903                      1-  659     	BTRSS	STATUS,2
     0051 3rrr                      1-  660     	LGOTO	_00148_DS_
                                    1-  661     	BANKSEL	_overFlag
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1-  662     	MOVR	_overFlag,W
     0054 0903                      1-  663     	BTRSS	STATUS,2
     0055 3rrr                      1-  664     	LGOTO	_00148_DS_
                                    1-  665     	BANKSEL	r0x1041
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 01rr                      1-  666     	MOVR	r0x1041,W
     0058 0D03                      1-  667     	BTRSC	STATUS,2
     0059 3rrr                      1-  668     	LGOTO	_00148_DS_
                                    1-  669     	.line	166, "main.c"; 	POWERON();
     005A 18rr                      1-  670     	BSR	_PORTA,0
                                    1-  671     	.line	167, "main.c"; 	LED3ON();
     005B 1Brr                      1-  672     	BSR	_PORTA,7
     005C 3rrr                      1-  673     	LGOTO	_00148_DS_
     005D                           1-  674     _00147_DS_:
                                    1-  675     	.line	174, "main.c"; 	if(workStatus == 1)
                                    1-  676     	BANKSEL	r0x1041
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 02rr                      1-  677     	CLRR	r0x1041
                                    1-  678     	BANKSEL	_workStatus
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 01rr                      1-  679     	MOVR	_workStatus,W
     0061 2401                      1-  680     	XORIA	0x01
     0062 0903                      1-  681     	BTRSS	STATUS,2
     0063 3rrr                      1-  682     	LGOTO	_00008_DS_
                                    1-  683     	BANKSEL	r0x1041
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 05rr                      1-  684     	INCR	r0x1041,F
     0066                           1-  685     _00008_DS_:
                                    1-  686     	BANKSEL	r0x1041
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 01rr                      1-  687     	MOVR	r0x1041,W
     0068 0903                      1-  688     	BTRSS	STATUS,2
                                    1-  689     	.line	175, "main.c"; 	CHRGOFF();
     0069 1Drr                      1-  690     	BCR	_PORTB,2
                                    1-  691     	.line	176, "main.c"; 	LED3OFF();
     006A 1Frr                      1-  692     	BCR	_PORTA,7
                                    1-  693     	.line	177, "main.c"; 	chrgStatus = 0;
                                    1-  694     	BANKSEL	_chrgStatus
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 02rr                      1-  695     	CLRR	_chrgStatus
                                    1-  696     	.line	178, "main.c"; 	if(overFlag == 0 && batStatus < 3 && workStatus == 1)
                                    1-  697     	BANKSEL	_overFlag
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1-  698     	MOVR	_overFlag,W
     006F 0903                      1-  699     	BTRSS	STATUS,2
     0070 3rrr                      1-  700     	LGOTO	_00148_DS_
                                    1-  701     ;;unsigned compare: left < lit (0x3=3), size=1
     0071 2103                      1-  702     	MOVIA	0x03
                                    1-  703     	BANKSEL	_batStatus
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 04rr                      1-  704     	SUBAR	_batStatus,W
     0074 0C03                      1-  705     	BTRSC	STATUS,0
     0075 3rrr                      1-  706     	LGOTO	_00148_DS_
                                    1-  707     	BANKSEL	r0x1041
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 01rr                      1-  708     	MOVR	r0x1041,W
     0078 0903                      1-  709     	BTRSS	STATUS,2
                                    1-  710     	.line	180, "main.c"; 	POWERON();
     0079 18rr                      1-  711     	BSR	_PORTA,0
     007A                           1-  712     _00148_DS_:
                                    1-  713     	.line	183, "main.c"; 	if(!IntFlag)
                                    1-  714     	BANKSEL	_IntFlag
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 01rr                      1-  715     	MOVR	_IntFlag,W
     007C 0D03                      1-  716     	BTRSC	STATUS,2
     007D 3rrr                      1-  717     	LGOTO	_00161_DS_
                                    1-  718     	.line	185, "main.c"; 	IntFlag = 0;
     007E 02rr                      1-  719     	CLRR	_IntFlag
                                    1-  720     	.line	186, "main.c"; 	keyCtr();
     007F 2rrr                      1-  721     	LCALL	_keyCtr
                                    1-  722     	.line	187, "main.c"; 	chrgWork();
     0080 2rrr                      1-  723     	LCALL	_chrgWork
                                    1-  724     	.line	188, "main.c"; 	if(workStatus == 1)
                                    1-  725     	BANKSEL	_workStatus
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 01rr                      1-  726     	MOVR	_workStatus,W
     0083 2401                      1-  727     	XORIA	0x01
     0084 0D03                      1-  728     	BTRSC	STATUS,2
                                    1-  729     	.line	189, "main.c"; 	workCtr();
     0085 2rrr                      1-  730     	LCALL	_workCtr
                                    1-  731     	.line	190, "main.c"; 	if(((PORTA & 0x20) == 0 || chrgStatus == 2) && workStatus == 0 && keyCount == 0)
     0086 0Arr                      1-  732     	BTRSS	_PORTA,5
     0087 3rrr                      1-  733     	LGOTO	_00158_DS_
                                    1-  734     	BANKSEL	_chrgStatus
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 01rr                      1-  735     	MOVR	_chrgStatus,W
     008A 2402                      1-  736     	XORIA	0x02
     008B 0903                      1-  737     	BTRSS	STATUS,2
     008C 3rrr                      1-  738     	LGOTO	_00161_DS_
     008D                           1-  739     _00158_DS_:
                                    1-  740     	BANKSEL	_workStatus
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 01rr                      1-  741     	MOVR	_workStatus,W
     008F 0903                      1-  742     	BTRSS	STATUS,2
     0090 3rrr                      1-  743     	LGOTO	_00161_DS_
                                    1-  744     	BANKSEL	_keyCount
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 01rr                      1-  745     	MOVR	_keyCount,W
     0093 0903                      1-  746     	BTRSS	STATUS,2
     0094 3rrr                      1-  747     	LGOTO	_00161_DS_
                                    1-  748     	.line	192, "main.c"; 	closeStatus();
     0095 2rrr                      1-  749     	LCALL	_closeStatus
                                    1-  750     	.line	193, "main.c"; 	if(++sleepDelay > 50)
                                    1-  751     	BANKSEL	_sleepDelay
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 05rr                      1-  752     	INCR	_sleepDelay,F
                                    1-  753     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  754     ;;unsigned compare: left >= lit (0x33=51), size=1
     0098 2133                      1-  755     	MOVIA	0x33
     0099 04rr                      1-  756     	SUBAR	_sleepDelay,W
     009A 0803                      1-  757     	BTRSS	STATUS,0
     009B 3rrr                      1-  758     	LGOTO	_00161_DS_
                                    1-  759     	.line	194, "main.c"; 	gotoSleep();
     009C 2rrr                      1-  760     	LCALL	_gotoSleep
     009D 3rrr                      1-  761     	LGOTO	_00161_DS_
                                    1-  762     	.line	197, "main.c"; 	}
                                    1-  763     	RETURN	
     009E 0010                      3-   26 m1      ret
                                    1-  764     ; exit point of _main
                                    1-  766     ;***
                                    1-  767     ;  pBlock Stats: dbName = C
                                    1-  768     ;***
                                    1-  769     ;has an exit
                                    1-  770     ;; Starting pCode block
                                    1-  771     .segment "code"; module=main, function=_closeStatus
     0000                           1-  773     _closeStatus:
                                    1-  774     ; 2 exit points
                                    1-  775     	.line	589, "main.c"; 	LED1OFF();
     0000 19rr                      1-  776     	BSR	_PORTB,3
                                    1-  777     	.line	590, "main.c"; 	LED2OFF();
     0001 1Frr                      1-  778     	BCR	_PORTA,6
                                    1-  779     	.line	591, "main.c"; 	LED3OFF();
     0002 1Frr                      1-  780     	BCR	_PORTA,7
                                    1-  781     	.line	592, "main.c"; 	LED4OFF();
     0003 18rr                      1-  782     	BSR	_PORTB,1
                                    1-  783     	.line	593, "main.c"; 	CHRGON();
     0004 19rr                      1-  784     	BSR	_PORTB,2
                                    1-  785     	.line	594, "main.c"; 	POWEROFF();
     0005 1Crr                      1-  786     	BCR	_PORTA,0
                                    1-  787     	.line	595, "main.c"; 	}
                                    1-  788     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  789     ; exit point of _closeStatus
                                    1-  791     ;***
                                    1-  792     ;  pBlock Stats: dbName = C
                                    1-  793     ;***
                                    1-  794     ;has an exit
                                    1-  795     ;1 compiler assigned register :
                                    1-  796     ;   r0x101D
                                    1-  797     ;; Starting pCode block
                                    1-  798     .segment "code"; module=main, function=_keyRead
                                    1-  800     ;local variable name mapping:
     0000                           1-  802     _keyRead:
                                    1-  803     ; 2 exit points
                                    1-  804     	.line	554, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  805     	BANKSEL	r0x101D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  806     	MOVAR	r0x101D
                                    1-  807     	.line	556, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  808     	MOVR	r0x101D,W
     0003 0D03                      1-  809     	BTRSC	STATUS,2
     0004 3rrr                      1-  810     	LGOTO	_00527_DS_
                                    1-  811     	.line	558, "main.c"; 	keyCount++;
                                    1-  812     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  813     	INCR	_keyCount,F
                                    1-  814     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  815     	.line	559, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  816     	MOVIA	0xc8
     0008 04rr                      1-  817     	SUBAR	_keyCount,W
     0009 0803                      1-  818     	BTRSS	STATUS,0
     000A 3rrr                      1-  819     	LGOTO	_00528_DS_
                                    1-  820     	.line	561, "main.c"; 	keyCount = 200;
     000B 21C8                      1-  821     	MOVIA	0xc8
     000C 00rr                      1-  822     	MOVAR	_keyCount
                                    1-  823     	.line	562, "main.c"; 	if(!longPressFlag)
                                    1-  824     	BANKSEL	_longPressFlag
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  825     	MOVR	_longPressFlag,W
     000F 0903                      1-  826     	BTRSS	STATUS,2
     0010 3rrr                      1-  827     	LGOTO	_00528_DS_
                                    1-  828     	.line	564, "main.c"; 	longPressFlag = 1;
     0011 2101                      1-  829     	MOVIA	0x01
     0012 00rr                      1-  830     	MOVAR	_longPressFlag
                                    1-  831     	.line	565, "main.c"; 	return 2;
     0013 2102                      1-  832     	MOVIA	0x02
     0014 3rrr                      1-  833     	LGOTO	_00529_DS_
                                    1-  834     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1-  835     _00527_DS_:
                                    1-  836     	.line	571, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1-  837     	MOVIA	0xc8
                                    1-  838     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 04rr                      1-  839     	SUBAR	_keyCount,W
     0018 0803                      1-  840     	BTRSS	STATUS,0
     0019 3rrr                      1-  841     	LGOTO	_00524_DS_
                                    1-  842     	.line	573, "main.c"; 	keyCount = 0;
     001A 02rr                      1-  843     	CLRR	_keyCount
                                    1-  844     	.line	574, "main.c"; 	longPressFlag = 0;
                                    1-  845     	BANKSEL	_longPressFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1-  846     	CLRR	_longPressFlag
                                    1-  847     	.line	575, "main.c"; 	return	0;
     001D 2100                      1-  848     	MOVIA	0x00
     001E 3rrr                      1-  849     	LGOTO	_00529_DS_
                                    1-  850     ;;unsigned compare: left < lit (0x8=8), size=1
     001F                           1-  851     _00524_DS_:
                                    1-  852     	.line	577, "main.c"; 	else if(keyCount >= 8)
     001F 2108                      1-  853     	MOVIA	0x08
                                    1-  854     	BANKSEL	_keyCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1-  855     	SUBAR	_keyCount,W
     0022 0803                      1-  856     	BTRSS	STATUS,0
     0023 3rrr                      1-  857     	LGOTO	_00525_DS_
                                    1-  858     	.line	579, "main.c"; 	keyCount = 0;
     0024 02rr                      1-  859     	CLRR	_keyCount
                                    1-  860     	.line	580, "main.c"; 	return	1;
     0025 2101                      1-  861     	MOVIA	0x01
     0026 3rrr                      1-  862     	LGOTO	_00529_DS_
     0027                           1-  863     _00525_DS_:
                                    1-  864     	.line	582, "main.c"; 	keyCount = 0;
                                    1-  865     	BANKSEL	_keyCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1-  866     	CLRR	_keyCount
     0029                           1-  867     _00528_DS_:
                                    1-  868     	.line	584, "main.c"; 	return 0;
     0029 2100                      1-  869     	MOVIA	0x00
     002A                           1-  870     _00529_DS_:
                                    1-  871     	.line	585, "main.c"; 	}
                                    1-  872     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1-  873     ; exit point of _keyRead
                                    1-  875     ;***
                                    1-  876     ;  pBlock Stats: dbName = C
                                    1-  877     ;***
                                    1-  878     ;has an exit
                                    1-  879     ;5 compiler assigned registers:
                                    1-  880     ;   r0x101E
                                    1-  881     ;   STK00
                                    1-  882     ;   r0x101F
                                    1-  883     ;   r0x1020
                                    1-  884     ;   r0x1021
                                    1-  885     ;; Starting pCode block
                                    1-  886     .segment "code"; module=main, function=_delay
                                    1-  888     ;local variable name mapping:
     0000                           1-  893     _delay:
                                    1-  894     ; 2 exit points
                                    1-  895     	.line	548, "main.c"; 	void delay(u16t time)
                                    1-  896     	BANKSEL	r0x101E
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  897     	MOVAR	r0x101E
     0002 01rr                      1-  898     	MOVR	STK00,W
                                    1-  899     	BANKSEL	r0x101F
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  900     	MOVAR	r0x101F
                                    1-  901     	.line	550, "main.c"; 	for(u16t i=0;i<time;i++);
                                    1-  902     	BANKSEL	r0x1020
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  903     	CLRR	r0x1020
                                    1-  904     	BANKSEL	r0x1021
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  905     	CLRR	r0x1021
     0009                           1-  906     _00501_DS_:
                                    1-  907     	BANKSEL	r0x101E
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  908     	MOVR	r0x101E,W
                                    1-  909     	BANKSEL	r0x1021
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  910     	SUBAR	r0x1021,W
     000D 0903                      1-  911     	BTRSS	STATUS,2
     000E 3rrr                      1-  912     	LGOTO	_00512_DS_
                                    1-  913     	BANKSEL	r0x101F
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  914     	MOVR	r0x101F,W
                                    1-  915     	BANKSEL	r0x1020
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  916     	SUBAR	r0x1020,W
     0013                           1-  917     _00512_DS_:
     0013 0C03                      1-  918     	BTRSC	STATUS,0
     0014 3rrr                      1-  919     	LGOTO	_00503_DS_
                                    1-  920     	BANKSEL	r0x1020
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  921     	INCR	r0x1020,F
     0017 0903                      1-  922     	BTRSS	STATUS,2
     0018 3rrr                      1-  923     	LGOTO	_00001_DS_
                                    1-  924     	BANKSEL	r0x1021
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  925     	INCR	r0x1021,F
     001B                           1-  926     _00001_DS_:
     001B 3rrr                      1-  927     	LGOTO	_00501_DS_
     001C                           1-  928     _00503_DS_:
                                    1-  929     	.line	551, "main.c"; 	}
                                    1-  930     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  931     ; exit point of _delay
                                    1-  933     ;***
                                    1-  934     ;  pBlock Stats: dbName = C
                                    1-  935     ;***
                                    1-  936     ;has an exit
                                    1-  937     ;; Starting pCode block
                                    1-  938     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  940     _F_wait_eoc:
                                    1-  941     ; 2 exit points
     0000                           1-  942     _00494_DS_:
                                    1-  943     	.line	542, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  944     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  945     	LGOTO	_00494_DS_
                                    1-  946     	.line	544, "main.c"; 	}
                                    1-  947     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  948     ; exit point of _F_wait_eoc
                                    1-  950     ;***
                                    1-  951     ;  pBlock Stats: dbName = C
                                    1-  952     ;***
                                    1-  953     ;has an exit
                                    1-  954     ;; Starting pCode block
                                    1-  955     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  957     _gotoSleep:
                                    1-  958     ; 2 exit points
                                    1-  959     	.line	516, "main.c"; 	workStatus = 0;
                                    1-  960     	BANKSEL	_workStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  961     	CLRR	_workStatus
                                    1-  962     	.line	517, "main.c"; 	batStatus = 0;
                                    1-  963     	BANKSEL	_batStatus
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  964     	CLRR	_batStatus
                                    1-  965     	.line	518, "main.c"; 	chrgStatus = 0;
                                    1-  966     	BANKSEL	_chrgStatus
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  967     	CLRR	_chrgStatus
                                    1-  968     	.line	519, "main.c"; 	firstLow = 0;
                                    1-  969     	BANKSEL	_firstLow
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  970     	CLRR	_firstLow
                                    1-  971     	.line	520, "main.c"; 	overFlag = 0;
                                    1-  972     	BANKSEL	_overFlag
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1-  973     	CLRR	_overFlag
                                    1-  974     	.line	521, "main.c"; 	sleepDelay = 0;
                                    1-  975     	BANKSEL	_sleepDelay
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1-  976     	CLRR	_sleepDelay
                                    1-  977     	.line	522, "main.c"; 	workStep = 0;
                                    1-  978     	BANKSEL	_workStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1-  979     	CLRR	_workStep
                                    1-  980     	.line	523, "main.c"; 	AWUCON = 0x28;
     000E 2128                      1-  981     	MOVIA	0x28
     000F 00rr                      1-  982     	MOVAR	_AWUCON
                                    1-  983     	.line	524, "main.c"; 	BWUCON = 0x01;
     0010 2101                      1-  984     	MOVIA	0x01
     0011 00rr                      1-  985     	MOVAR	_BWUCON
                                    1-  986     	.line	525, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0012 210B                      1-  987     	MOVIA	0x0b
     0013 00rr                      1-  988     	MOVAR	_INTE
                                    1-  989     	.line	526, "main.c"; 	PCON =  C_LVR_En;	
     0014 2108                      1-  990     	MOVIA	0x08
     0015 00rr                      1-  991     	MOVAR	_PCON
                                    1-  992     	.line	527, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1-  993     	CLRR	_INTF
                                    1-  994     	.line	528, "main.c"; 	CLRWDT();
     0017 0002                      1-  995     	clrwdt
                                    1-  996     	.line	529, "main.c"; 	ENI();
     0018 0004                      1-  997     	ENI
                                    1-  998     	.line	530, "main.c"; 	SLEEP();
     0019 0001                      1-  999     	sleep
                                    1- 1000     	.line	531, "main.c"; 	AWUCON = 0x00;
     001A 02rr                      1- 1001     	CLRR	_AWUCON
                                    1- 1002     	.line	532, "main.c"; 	BWUCON = 0x00;
     001B 02rr                      1- 1003     	CLRR	_BWUCON
                                    1- 1004     	.line	533, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     001C 2101                      1- 1005     	MOVIA	0x01
     001D 00rr                      1- 1006     	MOVAR	_INTE
                                    1- 1007     	.line	534, "main.c"; 	INTF = 0;
     001E 02rr                      1- 1008     	CLRR	_INTF
                                    1- 1009     	.line	536, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     001F 21A8                      1- 1010     	MOVIA	0xa8
     0020 00rr                      1- 1011     	MOVAR	_PCON
                                    1- 1012     	.line	538, "main.c"; 	}
                                    1- 1013     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1- 1014     ; exit point of _gotoSleep
                                    1- 1016     ;***
                                    1- 1017     ;  pBlock Stats: dbName = C
                                    1- 1018     ;***
                                    1- 1019     ;has an exit
                                    1- 1020     ;functions called:
                                    1- 1021     ;   _delay
                                    1- 1022     ;   _F_wait_eoc
                                    1- 1023     ;   _delay
                                    1- 1024     ;   _F_wait_eoc
                                    1- 1025     ;7 compiler assigned registers:
                                    1- 1026     ;   r0x1022
                                    1- 1027     ;   STK00
                                    1- 1028     ;   r0x1023
                                    1- 1029     ;   r0x1024
                                    1- 1030     ;   r0x1025
                                    1- 1031     ;   r0x1026
                                    1- 1032     ;   r0x1027
                                    1- 1033     ;; Starting pCode block
                                    1- 1034     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1036     ;local variable name mapping:
     0000                           1- 1039     _F_AIN4_Convert:
                                    1- 1040     ; 2 exit points
                                    1- 1041     	.line	498, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1042     	BANKSEL	r0x1022
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1043     	MOVAR	r0x1022
                                    1- 1044     	.line	500, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1045     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1046     	CLRR	_R_AIN4_DATA_LB
                                    1- 1047     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1048     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1049     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1050     	.line	502, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1051     	MOVIA	0x94
     0008 00rr                      1- 1052     	MOVAR	_ADMD
                                    1- 1053     	.line	503, "main.c"; 	delay(200);	
     0009 21C8                      1- 1054     	MOVIA	0xc8
     000A 00rr                      1- 1055     	MOVAR	STK00
     000B 2100                      1- 1056     	MOVIA	0x00
     000C 2rrr                      1- 1057     	LCALL	_delay
                                    1- 1058     	.line	504, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1059     	MOVIA	0x01
                                    1- 1060     	BANKSEL	r0x1023
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1061     	MOVAR	r0x1023
     0010                           1- 1062     _00483_DS_:
                                    1- 1063     	BANKSEL	r0x1023
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1064     	MOVR	r0x1023,W
                                    1- 1065     	BANKSEL	r0x1022
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1066     	SUBAR	r0x1022,W
     0014 0803                      1- 1067     	BTRSS	STATUS,0
     0015 3rrr                      1- 1068     	LGOTO	_00485_DS_
                                    1- 1069     	.line	506, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1070     	BSR	_ADMDbits,6
                                    1- 1071     	.line	507, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1072     	LCALL	_F_wait_eoc
                                    1- 1073     	.line	508, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1074     	MOVIA	0x0f
     0019 10rr                      1- 1075     	ANDAR	_ADR,W
                                    1- 1076     ;;3	MOVAR	r0x1024
                                    1- 1077     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1078     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1079     	.line	509, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1- 1080     	MOVR	_ADD,W
                                    1- 1081     	BANKSEL	r0x1024
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1082     	MOVAR	r0x1024
                                    1- 1083     ;;1	CLRR	r0x1025
                                    1- 1084     ;;110	MOVR	r0x1024,W
                                    1- 1085     ;;108	MOVAR	r0x1026
     001F 2100                      1- 1086     	MOVIA	0x00
                                    1- 1087     	BANKSEL	r0x1027
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1088     	MOVAR	r0x1027
                                    1- 1089     ;;109	MOVR	r0x1026,W
                                    1- 1090     	BANKSEL	r0x1024
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1091     	MOVR	r0x1024,W
                                    1- 1092     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1093     	ADDAR	_R_AIN4_DATA,F
                                    1- 1094     	BANKSEL	r0x1027
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1095     	MOVR	r0x1027,W
     0028 0C03                      1- 1096     	BTRSC	STATUS,0
     0029 05rr                      1- 1097     	INCR	r0x1027,W
     002A 0D03                      1- 1098     	BTRSC	STATUS,2
     002B 3rrr                      1- 1099     	LGOTO	_00002_DS_
                                    1- 1100     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1101     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1- 1102     _00002_DS_:
                                    1- 1103     	.line	504, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1104     	BANKSEL	r0x1023
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1105     	INCR	r0x1023,F
     0030 3rrr                      1- 1106     	LGOTO	_00483_DS_
     0031                           1- 1107     _00485_DS_:
                                    1- 1108     	.line	511, "main.c"; 	}
                                    1- 1109     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1110     ; exit point of _F_AIN4_Convert
                                    1- 1112     ;***
                                    1- 1113     ;  pBlock Stats: dbName = C
                                    1- 1114     ;***
                                    1- 1115     ;has an exit
                                    1- 1116     ;functions called:
                                    1- 1117     ;   _delay
                                    1- 1118     ;   _F_wait_eoc
                                    1- 1119     ;   _delay
                                    1- 1120     ;   _F_wait_eoc
                                    1- 1121     ;7 compiler assigned registers:
                                    1- 1122     ;   r0x1028
                                    1- 1123     ;   STK00
                                    1- 1124     ;   r0x1029
                                    1- 1125     ;   r0x102A
                                    1- 1126     ;   r0x102B
                                    1- 1127     ;   r0x102C
                                    1- 1128     ;   r0x102D
                                    1- 1129     ;; Starting pCode block
                                    1- 1130     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1132     ;local variable name mapping:
     0000                           1- 1135     _F_AIN2_Convert:
                                    1- 1136     ; 2 exit points
                                    1- 1137     	.line	482, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1138     	BANKSEL	r0x1028
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1139     	MOVAR	r0x1028
                                    1- 1140     	.line	484, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1141     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1142     	CLRR	_R_AIN2_DATA_LB
                                    1- 1143     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1144     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1145     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1146     	.line	486, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1147     	MOVIA	0x92
     0008 00rr                      1- 1148     	MOVAR	_ADMD
                                    1- 1149     	.line	487, "main.c"; 	delay(200);	
     0009 21C8                      1- 1150     	MOVIA	0xc8
     000A 00rr                      1- 1151     	MOVAR	STK00
     000B 2100                      1- 1152     	MOVIA	0x00
     000C 2rrr                      1- 1153     	LCALL	_delay
                                    1- 1154     	.line	488, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1155     	MOVIA	0x01
                                    1- 1156     	BANKSEL	r0x1029
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1157     	MOVAR	r0x1029
     0010                           1- 1158     _00474_DS_:
                                    1- 1159     	BANKSEL	r0x1029
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1160     	MOVR	r0x1029,W
                                    1- 1161     	BANKSEL	r0x1028
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1162     	SUBAR	r0x1028,W
     0014 0803                      1- 1163     	BTRSS	STATUS,0
     0015 3rrr                      1- 1164     	LGOTO	_00476_DS_
                                    1- 1165     	.line	490, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1166     	BSR	_ADMDbits,6
                                    1- 1167     	.line	491, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1168     	LCALL	_F_wait_eoc
                                    1- 1169     	.line	492, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1170     	MOVIA	0x0f
     0019 10rr                      1- 1171     	ANDAR	_ADR,W
                                    1- 1172     ;;3	MOVAR	r0x102A
                                    1- 1173     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1174     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1175     	.line	493, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1176     	MOVR	_ADD,W
                                    1- 1177     	BANKSEL	r0x102A
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1178     	MOVAR	r0x102A
                                    1- 1179     ;;1	CLRR	r0x102B
                                    1- 1180     ;;107	MOVR	r0x102A,W
                                    1- 1181     ;;105	MOVAR	r0x102C
     001F 2100                      1- 1182     	MOVIA	0x00
                                    1- 1183     	BANKSEL	r0x102D
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1184     	MOVAR	r0x102D
                                    1- 1185     ;;106	MOVR	r0x102C,W
                                    1- 1186     	BANKSEL	r0x102A
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1187     	MOVR	r0x102A,W
                                    1- 1188     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1189     	ADDAR	_R_AIN2_DATA,F
                                    1- 1190     	BANKSEL	r0x102D
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1191     	MOVR	r0x102D,W
     0028 0C03                      1- 1192     	BTRSC	STATUS,0
     0029 05rr                      1- 1193     	INCR	r0x102D,W
     002A 0D03                      1- 1194     	BTRSC	STATUS,2
     002B 3rrr                      1- 1195     	LGOTO	_00003_DS_
                                    1- 1196     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1197     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1198     _00003_DS_:
                                    1- 1199     	.line	488, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1200     	BANKSEL	r0x1029
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1201     	INCR	r0x1029,F
     0030 3rrr                      1- 1202     	LGOTO	_00474_DS_
     0031                           1- 1203     _00476_DS_:
                                    1- 1204     	.line	495, "main.c"; 	}
                                    1- 1205     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1206     ; exit point of _F_AIN2_Convert
                                    1- 1208     ;***
                                    1- 1209     ;  pBlock Stats: dbName = C
                                    1- 1210     ;***
                                    1- 1211     ;has an exit
                                    1- 1212     ;functions called:
                                    1- 1213     ;   _delay
                                    1- 1214     ;   _F_wait_eoc
                                    1- 1215     ;   _delay
                                    1- 1216     ;   _F_wait_eoc
                                    1- 1217     ;7 compiler assigned registers:
                                    1- 1218     ;   r0x102E
                                    1- 1219     ;   STK00
                                    1- 1220     ;   r0x102F
                                    1- 1221     ;   r0x1030
                                    1- 1222     ;   r0x1031
                                    1- 1223     ;   r0x1032
                                    1- 1224     ;   r0x1033
                                    1- 1225     ;; Starting pCode block
                                    1- 1226     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1- 1228     ;local variable name mapping:
     0000                           1- 1231     _F_AIN1_Convert:
                                    1- 1232     ; 2 exit points
                                    1- 1233     	.line	467, "main.c"; 	void F_AIN1_Convert(char count)
                                    1- 1234     	BANKSEL	r0x102E
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1235     	MOVAR	r0x102E
                                    1- 1236     	.line	469, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
                                    1- 1237     	BANKSEL	_R_AIN1_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1238     	CLRR	_R_AIN1_DATA_LB
                                    1- 1239     	BANKSEL	_R_AIN1_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1240     	CLRR	_R_AIN1_DATA
     0006 02rr                      1- 1241     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1242     	.line	471, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0007 2191                      1- 1243     	MOVIA	0x91
     0008 00rr                      1- 1244     	MOVAR	_ADMD
                                    1- 1245     	.line	472, "main.c"; 	delay(200);	
     0009 21C8                      1- 1246     	MOVIA	0xc8
     000A 00rr                      1- 1247     	MOVAR	STK00
     000B 2100                      1- 1248     	MOVIA	0x00
     000C 2rrr                      1- 1249     	LCALL	_delay
                                    1- 1250     	.line	473, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1251     	MOVIA	0x01
                                    1- 1252     	BANKSEL	r0x102F
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1253     	MOVAR	r0x102F
     0010                           1- 1254     _00465_DS_:
                                    1- 1255     	BANKSEL	r0x102F
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1256     	MOVR	r0x102F,W
                                    1- 1257     	BANKSEL	r0x102E
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1258     	SUBAR	r0x102E,W
     0014 0803                      1- 1259     	BTRSS	STATUS,0
     0015 3rrr                      1- 1260     	LGOTO	_00467_DS_
                                    1- 1261     	.line	475, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1262     	BSR	_ADMDbits,6
                                    1- 1263     	.line	476, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1264     	LCALL	_F_wait_eoc
                                    1- 1265     	.line	477, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1266     	MOVIA	0x0f
     0019 10rr                      1- 1267     	ANDAR	_ADR,W
                                    1- 1268     ;;3	MOVAR	r0x1030
                                    1- 1269     	BANKSEL	_R_AIN1_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1270     	ADDAR	_R_AIN1_DATA_LB,F
                                    1- 1271     	.line	478, "main.c"; 	R_AIN1_DATA    += ADD; 
     001C 01rr                      1- 1272     	MOVR	_ADD,W
                                    1- 1273     	BANKSEL	r0x1030
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1274     	MOVAR	r0x1030
                                    1- 1275     ;;1	CLRR	r0x1031
                                    1- 1276     ;;104	MOVR	r0x1030,W
                                    1- 1277     ;;102	MOVAR	r0x1032
     001F 2100                      1- 1278     	MOVIA	0x00
                                    1- 1279     	BANKSEL	r0x1033
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1280     	MOVAR	r0x1033
                                    1- 1281     ;;103	MOVR	r0x1032,W
                                    1- 1282     	BANKSEL	r0x1030
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1283     	MOVR	r0x1030,W
                                    1- 1284     	BANKSEL	_R_AIN1_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1285     	ADDAR	_R_AIN1_DATA,F
                                    1- 1286     	BANKSEL	r0x1033
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1287     	MOVR	r0x1033,W
     0028 0C03                      1- 1288     	BTRSC	STATUS,0
     0029 05rr                      1- 1289     	INCR	r0x1033,W
     002A 0D03                      1- 1290     	BTRSC	STATUS,2
     002B 3rrr                      1- 1291     	LGOTO	_00004_DS_
                                    1- 1292     	BANKSEL	_R_AIN1_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1293     	ADDAR	(_R_AIN1_DATA + 1),F
     002E                           1- 1294     _00004_DS_:
                                    1- 1295     	.line	473, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1296     	BANKSEL	r0x102F
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1297     	INCR	r0x102F,F
     0030 3rrr                      1- 1298     	LGOTO	_00465_DS_
     0031                           1- 1299     _00467_DS_:
                                    1- 1300     	.line	480, "main.c"; 	}
                                    1- 1301     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1302     ; exit point of _F_AIN1_Convert
                                    1- 1304     ;***
                                    1- 1305     ;  pBlock Stats: dbName = C
                                    1- 1306     ;***
                                    1- 1307     ;has an exit
                                    1- 1308     ;functions called:
                                    1- 1309     ;   _F_AIN4_Convert
                                    1- 1310     ;   _F_AIN4_Convert
                                    1- 1311     ;4 compiler assigned registers:
                                    1- 1312     ;   r0x1034
                                    1- 1313     ;   r0x1035
                                    1- 1314     ;   r0x1036
                                    1- 1315     ;   r0x1037
                                    1- 1316     ;; Starting pCode block
                                    1- 1317     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1319     _checkOutA:
                                    1- 1320     ; 2 exit points
                                    1- 1321     	.line	431, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1322     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1323     	CLRR	_R_AIN4_DATA_LB
                                    1- 1324     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1325     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1326     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1327     	.line	432, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1328     	MOVIA	0x08
     0006 2rrr                      1- 1329     	LCALL	_F_AIN4_Convert
                                    1- 1330     	.line	433, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1331     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1332     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1333     	ANDIA	0xf0
     000A 00rr                      1- 1334     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1335     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1336     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1337     	ANDIA	0x0f
     000E 11rr                      1- 1338     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1339     	XORAR	_R_AIN4_DATA,F
                                    1- 1340     	.line	434, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1341     	MOVIA	0xf0
                                    1- 1342     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1343     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1344     	.line	435, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1345     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1346     	BANKSEL	r0x1036
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1347     	MOVAR	r0x1036
                                    1- 1348     ;;1	MOVAR	r0x1034
                                    1- 1349     ;;1	CLRR	r0x1035
                                    1- 1350     ;;101	MOVR	r0x1034,W
     0016 2100                      1- 1351     	MOVIA	0x00
                                    1- 1352     	BANKSEL	r0x1037
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1353     	MOVAR	r0x1037
                                    1- 1354     	BANKSEL	r0x1036
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1355     	MOVR	r0x1036,W
                                    1- 1356     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1357     	ADDAR	_R_AIN4_DATA,F
                                    1- 1358     	BANKSEL	r0x1037
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1359     	MOVR	r0x1037,W
     001F 0C03                      1- 1360     	BTRSC	STATUS,0
     0020 05rr                      1- 1361     	INCR	r0x1037,W
     0021 0D03                      1- 1362     	BTRSC	STATUS,2
     0022 3rrr                      1- 1363     	LGOTO	_00005_DS_
                                    1- 1364     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1365     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1366     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1367     _00005_DS_:
                                    1- 1368     	.line	436, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1369     	BCR	STATUS,0
                                    1- 1370     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1371     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1372     	RRR	_R_AIN4_DATA,F
                                    1- 1373     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1374     	BCR	STATUS,0
     002A 13rr                      1- 1375     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1376     	RRR	_R_AIN4_DATA,F
                                    1- 1377     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1378     	BCR	STATUS,0
     002D 13rr                      1- 1379     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1380     	RRR	_R_AIN4_DATA,F
                                    1- 1381     	.line	438, "main.c"; 	if(debug)
                                    1- 1382     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1383     	MOVR	_debug,W
     0031 0D03                      1- 1384     	BTRSC	STATUS,2
     0032 3rrr                      1- 1385     	LGOTO	_00441_DS_
                                    1- 1386     	.line	440, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 214C                      1- 1387     	MOVIA	0x4c
                                    1- 1388     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1389     	MOVAR	_R_AIN4_DATA
     0036 02rr                      1- 1390     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1391     ;;unsigned compare: left < lit (0x4E=78), size=2
     0037                           1- 1392     _00441_DS_:
                                    1- 1393     	.line	443, "main.c"; 	if(R_AIN4_DATA < 78)
     0037 2100                      1- 1394     	MOVIA	0x00
                                    1- 1395     	BANKSEL	_R_AIN4_DATA
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 04rr                      1- 1396     	SUBAR	(_R_AIN4_DATA + 1),W
     003A 0903                      1- 1397     	BTRSS	STATUS,2
     003B 3rrr                      1- 1398     	LGOTO	_00458_DS_
     003C 214E                      1- 1399     	MOVIA	0x4e
     003D 04rr                      1- 1400     	SUBAR	_R_AIN4_DATA,W
     003E                           1- 1401     _00458_DS_:
     003E 0C03                      1- 1402     	BTRSC	STATUS,0
     003F 3rrr                      1- 1403     	LGOTO	_00443_DS_
                                    1- 1404     	.line	445, "main.c"; 	overFlag = 0;
                                    1- 1405     	BANKSEL	_overFlag
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 02rr                      1- 1406     	CLRR	_overFlag
                                    1- 1407     	.line	446, "main.c"; 	overTime = 0;
                                    1- 1408     	BANKSEL	_overTime
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 02rr                      1- 1409     	CLRR	_overTime
     0044 3rrr                      1- 1410     	LGOTO	_00444_DS_
     0045                           1- 1411     _00443_DS_:
                                    1- 1412     	.line	450, "main.c"; 	overTime++;
                                    1- 1413     	BANKSEL	_overTime
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 05rr                      1- 1414     	INCR	_overTime,F
     0047                           1- 1415     _00444_DS_:
                                    1- 1416     	.line	452, "main.c"; 	if(++overTime >= 10)
                                    1- 1417     	BANKSEL	_overTime
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 05rr                      1- 1418     	INCR	_overTime,F
                                    1- 1419     ;;unsigned compare: left < lit (0xA=10), size=1
     0049 210A                      1- 1420     	MOVIA	0x0a
     004A 04rr                      1- 1421     	SUBAR	_overTime,W
     004B 0803                      1- 1422     	BTRSS	STATUS,0
     004C 3rrr                      1- 1423     	LGOTO	_00447_DS_
                                    1- 1424     	.line	454, "main.c"; 	overTime = 10;
     004D 210A                      1- 1425     	MOVIA	0x0a
     004E 00rr                      1- 1426     	MOVAR	_overTime
                                    1- 1427     	.line	455, "main.c"; 	overFlag = 1;
     004F 2101                      1- 1428     	MOVIA	0x01
                                    1- 1429     	BANKSEL	_overFlag
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1- 1430     	MOVAR	_overFlag
                                    1- 1431     	.line	458, "main.c"; 	POWEROFF();
     0052 1Crr                      1- 1432     	BCR	_PORTA,0
                                    1- 1433     	.line	459, "main.c"; 	LED2OFF();
     0053 1Frr                      1- 1434     	BCR	_PORTA,6
                                    1- 1435     	.line	460, "main.c"; 	LED3OFF();
     0054 1Frr                      1- 1436     	BCR	_PORTA,7
     0055                           1- 1437     _00447_DS_:
                                    1- 1438     	.line	464, "main.c"; 	}
                                    1- 1439     	RETURN	
     0055 0010                      3-   26 m1      ret
                                    1- 1440     ; exit point of _checkOutA
                                    1- 1442     ;***
                                    1- 1443     ;  pBlock Stats: dbName = C
                                    1- 1444     ;***
                                    1- 1445     ;has an exit
                                    1- 1446     ;functions called:
                                    1- 1447     ;   _F_AIN2_Convert
                                    1- 1448     ;   _F_AIN2_Convert
                                    1- 1449     ;4 compiler assigned registers:
                                    1- 1450     ;   r0x1038
                                    1- 1451     ;   r0x1039
                                    1- 1452     ;   r0x103A
                                    1- 1453     ;   r0x103B
                                    1- 1454     ;; Starting pCode block
                                    1- 1455     .segment "code"; module=main, function=_checkBat
     0000                           1- 1457     _checkBat:
                                    1- 1458     ; 2 exit points
                                    1- 1459     	.line	395, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1460     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1461     	CLRR	_R_AIN2_DATA_LB
                                    1- 1462     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1463     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1464     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1465     	.line	396, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1466     	MOVIA	0x08
     0006 2rrr                      1- 1467     	LCALL	_F_AIN2_Convert
                                    1- 1468     	.line	397, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1469     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1470     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1471     	ANDIA	0xf0
     000A 00rr                      1- 1472     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1473     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1474     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1475     	ANDIA	0x0f
     000E 11rr                      1- 1476     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1477     	XORAR	_R_AIN2_DATA,F
                                    1- 1478     	.line	398, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1479     	MOVIA	0xf0
                                    1- 1480     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1481     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1482     	.line	399, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1483     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1484     	BANKSEL	r0x103A
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1485     	MOVAR	r0x103A
                                    1- 1486     ;;1	MOVAR	r0x1038
                                    1- 1487     ;;1	CLRR	r0x1039
                                    1- 1488     ;;100	MOVR	r0x1038,W
     0016 2100                      1- 1489     	MOVIA	0x00
                                    1- 1490     	BANKSEL	r0x103B
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1491     	MOVAR	r0x103B
                                    1- 1492     	BANKSEL	r0x103A
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1493     	MOVR	r0x103A,W
                                    1- 1494     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1495     	ADDAR	_R_AIN2_DATA,F
                                    1- 1496     	BANKSEL	r0x103B
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1497     	MOVR	r0x103B,W
     001F 0C03                      1- 1498     	BTRSC	STATUS,0
     0020 05rr                      1- 1499     	INCR	r0x103B,W
     0021 0D03                      1- 1500     	BTRSC	STATUS,2
     0022 3rrr                      1- 1501     	LGOTO	_00006_DS_
                                    1- 1502     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1503     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1504     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1505     _00006_DS_:
                                    1- 1506     	.line	400, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1507     	BCR	STATUS,0
                                    1- 1508     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1509     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1510     	RRR	_R_AIN2_DATA,F
                                    1- 1511     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1512     	BCR	STATUS,0
     002A 13rr                      1- 1513     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1514     	RRR	_R_AIN2_DATA,F
                                    1- 1515     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1516     	BCR	STATUS,0
     002D 13rr                      1- 1517     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1518     	RRR	_R_AIN2_DATA,F
                                    1- 1519     	.line	401, "main.c"; 	if(debug)
                                    1- 1520     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1521     	MOVR	_debug,W
     0031 0D03                      1- 1522     	BTRSC	STATUS,2
     0032 3rrr                      1- 1523     	LGOTO	_00403_DS_
                                    1- 1524     	.line	403, "main.c"; 	R_AIN2_DATA = BAT;
     0033 21C5                      1- 1525     	MOVIA	0xc5
                                    1- 1526     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1527     	MOVAR	_R_AIN2_DATA
     0036 2109                      1- 1528     	MOVIA	0x09
     0037 00rr                      1- 1529     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1530     ;;unsigned compare: left < lit (0x99C=2460), size=2
     0038                           1- 1531     _00403_DS_:
                                    1- 1532     	.line	406, "main.c"; 	if(R_AIN2_DATA < 2460)
     0038 2109                      1- 1533     	MOVIA	0x09
                                    1- 1534     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1535     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1536     	BTRSS	STATUS,2
     003C 3rrr                      1- 1537     	LGOTO	_00432_DS_
     003D 219C                      1- 1538     	MOVIA	0x9c
     003E 04rr                      1- 1539     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1540     _00432_DS_:
     003F 0C03                      1- 1541     	BTRSC	STATUS,0
     0040 3rrr                      1- 1542     	LGOTO	_00413_DS_
                                    1- 1543     	.line	408, "main.c"; 	batStatus = 3;//缺电状态
     0041 2103                      1- 1544     	MOVIA	0x03
                                    1- 1545     	BANKSEL	_batStatus
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 00rr                      1- 1546     	MOVAR	_batStatus
     0044 3rrr                      1- 1547     	LGOTO	_00415_DS_
                                    1- 1548     ;;unsigned compare: left < lit (0xAAB=2731), size=2
     0045                           1- 1549     _00413_DS_:
                                    1- 1550     	.line	410, "main.c"; 	else if(R_AIN2_DATA < 2731)
     0045 210A                      1- 1551     	MOVIA	0x0a
                                    1- 1552     	BANKSEL	_R_AIN2_DATA
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 04rr                      1- 1553     	SUBAR	(_R_AIN2_DATA + 1),W
     0048 0903                      1- 1554     	BTRSS	STATUS,2
     0049 3rrr                      1- 1555     	LGOTO	_00433_DS_
     004A 21AB                      1- 1556     	MOVIA	0xab
     004B 04rr                      1- 1557     	SUBAR	_R_AIN2_DATA,W
     004C                           1- 1558     _00433_DS_:
     004C 0C03                      1- 1559     	BTRSC	STATUS,0
     004D 3rrr                      1- 1560     	LGOTO	_00410_DS_
                                    1- 1561     	.line	412, "main.c"; 	batStatus = 1;//低电状态
     004E 2101                      1- 1562     	MOVIA	0x01
                                    1- 1563     	BANKSEL	_batStatus
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1- 1564     	MOVAR	_batStatus
                                    1- 1565     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1566     ;;unsigned compare: left >= lit (0x9C5=2501), size=2
                                    1- 1567     	.line	413, "main.c"; 	if(R_AIN2_DATA > 2500)
     0051 2109                      1- 1568     	MOVIA	0x09
                                    1- 1569     	BANKSEL	_R_AIN2_DATA
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 04rr                      1- 1570     	SUBAR	(_R_AIN2_DATA + 1),W
     0054 0903                      1- 1571     	BTRSS	STATUS,2
     0055 3rrr                      1- 1572     	LGOTO	_00434_DS_
     0056 21C5                      1- 1573     	MOVIA	0xc5
     0057 04rr                      1- 1574     	SUBAR	_R_AIN2_DATA,W
     0058                           1- 1575     _00434_DS_:
     0058 0803                      1- 1576     	BTRSS	STATUS,0
     0059 3rrr                      1- 1577     	LGOTO	_00415_DS_
                                    1- 1578     	.line	414, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1579     	BANKSEL	_firstLow
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 02rr                      1- 1580     	CLRR	_firstLow
     005C 3rrr                      1- 1581     	LGOTO	_00415_DS_
                                    1- 1582     ;;unsigned compare: left < lit (0xCA6=3238), size=2
     005D                           1- 1583     _00410_DS_:
                                    1- 1584     	.line	416, "main.c"; 	else if(R_AIN2_DATA < 3238)
     005D 210C                      1- 1585     	MOVIA	0x0c
                                    1- 1586     	BANKSEL	_R_AIN2_DATA
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 04rr                      1- 1587     	SUBAR	(_R_AIN2_DATA + 1),W
     0060 0903                      1- 1588     	BTRSS	STATUS,2
     0061 3rrr                      1- 1589     	LGOTO	_00435_DS_
     0062 21A6                      1- 1590     	MOVIA	0xa6
     0063 04rr                      1- 1591     	SUBAR	_R_AIN2_DATA,W
     0064                           1- 1592     _00435_DS_:
     0064 0C03                      1- 1593     	BTRSC	STATUS,0
     0065 3rrr                      1- 1594     	LGOTO	_00407_DS_
                                    1- 1595     	.line	418, "main.c"; 	batStatus = 0;//正常状态
                                    1- 1596     	BANKSEL	_batStatus
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 02rr                      1- 1597     	CLRR	_batStatus
                                    1- 1598     	.line	419, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1599     	BANKSEL	_firstLow
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 02rr                      1- 1600     	CLRR	_firstLow
     006A 3rrr                      1- 1601     	LGOTO	_00415_DS_
     006B                           1- 1602     _00407_DS_:
                                    1- 1603     	.line	423, "main.c"; 	batStatus = 2;//满电状态
     006B 2102                      1- 1604     	MOVIA	0x02
                                    1- 1605     	BANKSEL	_batStatus
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 00rr                      1- 1606     	MOVAR	_batStatus
                                    1- 1607     	.line	424, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1608     	BANKSEL	_firstLow
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 02rr                      1- 1609     	CLRR	_firstLow
     0070                           1- 1610     _00415_DS_:
                                    1- 1611     	.line	427, "main.c"; 	}
                                    1- 1612     	RETURN	
     0070 0010                      3-   26 m1      ret
                                    1- 1613     ; exit point of _checkBat
                                    1- 1615     ;***
                                    1- 1616     ;  pBlock Stats: dbName = C
                                    1- 1617     ;***
                                    1- 1618     ;has an exit
                                    1- 1619     ;functions called:
                                    1- 1620     ;   _F_AIN1_Convert
                                    1- 1621     ;   _F_AIN1_Convert
                                    1- 1622     ;4 compiler assigned registers:
                                    1- 1623     ;   r0x103C
                                    1- 1624     ;   r0x103D
                                    1- 1625     ;   r0x103E
                                    1- 1626     ;   r0x103F
                                    1- 1627     ;; Starting pCode block
                                    1- 1628     .segment "code"; module=main, function=_checkInV
     0000                           1- 1630     _checkInV:
                                    1- 1631     ; 2 exit points
                                    1- 1632     	.line	365, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA_LB = 0x00;
                                    1- 1633     	BANKSEL	_R_AIN1_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1634     	CLRR	_R_AIN1_DATA_LB
                                    1- 1635     	BANKSEL	_R_AIN1_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1636     	CLRR	_R_AIN1_DATA
     0004 02rr                      1- 1637     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1638     	.line	366, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1639     	MOVIA	0x08
     0006 2rrr                      1- 1640     	LCALL	_F_AIN1_Convert
                                    1- 1641     	.line	367, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1642     	BANKSEL	_R_AIN1_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1643     	SWAPR	(_R_AIN1_DATA + 1),W
     0009 22F0                      1- 1644     	ANDIA	0xf0
     000A 00rr                      1- 1645     	MOVAR	(_R_AIN1_DATA + 1)
     000B 15rr                      1- 1646     	SWAPR	_R_AIN1_DATA,W
     000C 00rr                      1- 1647     	MOVAR	_R_AIN1_DATA
     000D 220F                      1- 1648     	ANDIA	0x0f
     000E 11rr                      1- 1649     	IORAR	(_R_AIN1_DATA + 1),F
     000F 12rr                      1- 1650     	XORAR	_R_AIN1_DATA,F
                                    1- 1651     	.line	368, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1652     	MOVIA	0xf0
                                    1- 1653     	BANKSEL	_R_AIN1_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1654     	ANDAR	_R_AIN1_DATA_LB,F
                                    1- 1655     	.line	369, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1656     	MOVR	_R_AIN1_DATA_LB,W
                                    1- 1657     	BANKSEL	r0x103E
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1658     	MOVAR	r0x103E
                                    1- 1659     ;;1	MOVAR	r0x103C
                                    1- 1660     ;;1	CLRR	r0x103D
                                    1- 1661     ;;99	MOVR	r0x103C,W
     0016 2100                      1- 1662     	MOVIA	0x00
                                    1- 1663     	BANKSEL	r0x103F
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1664     	MOVAR	r0x103F
                                    1- 1665     	BANKSEL	r0x103E
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1666     	MOVR	r0x103E,W
                                    1- 1667     	BANKSEL	_R_AIN1_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1668     	ADDAR	_R_AIN1_DATA,F
                                    1- 1669     	BANKSEL	r0x103F
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1670     	MOVR	r0x103F,W
     001F 0C03                      1- 1671     	BTRSC	STATUS,0
     0020 05rr                      1- 1672     	INCR	r0x103F,W
     0021 0D03                      1- 1673     	BTRSC	STATUS,2
     0022 3rrr                      1- 1674     	LGOTO	_00007_DS_
                                    1- 1675     	BANKSEL	_R_AIN1_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1676     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1- 1677     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1678     _00007_DS_:
                                    1- 1679     	.line	370, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1680     	BCR	STATUS,0
                                    1- 1681     	BANKSEL	_R_AIN1_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1682     	RRR	(_R_AIN1_DATA + 1),F
     0028 13rr                      1- 1683     	RRR	_R_AIN1_DATA,F
                                    1- 1684     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1685     	BCR	STATUS,0
     002A 13rr                      1- 1686     	RRR	(_R_AIN1_DATA + 1),F
     002B 13rr                      1- 1687     	RRR	_R_AIN1_DATA,F
                                    1- 1688     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1689     	BCR	STATUS,0
     002D 13rr                      1- 1690     	RRR	(_R_AIN1_DATA + 1),F
     002E 13rr                      1- 1691     	RRR	_R_AIN1_DATA,F
                                    1- 1692     	.line	371, "main.c"; 	if(debug)
                                    1- 1693     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1694     	MOVR	_debug,W
     0031 0D03                      1- 1695     	BTRSC	STATUS,2
     0032 3rrr                      1- 1696     	LGOTO	_00380_DS_
                                    1- 1697     	.line	373, "main.c"; 	R_AIN1_DATA = INV;
     0033 2110                      1- 1698     	MOVIA	0x10
                                    1- 1699     	BANKSEL	_R_AIN1_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1700     	MOVAR	_R_AIN1_DATA
     0036 210B                      1- 1701     	MOVIA	0x0b
     0037 00rr                      1- 1702     	MOVAR	(_R_AIN1_DATA + 1)
                                    1- 1703     ;;unsigned compare: left < lit (0xB0F=2831), size=2
     0038                           1- 1704     _00380_DS_:
                                    1- 1705     	.line	375, "main.c"; 	if(R_AIN1_DATA < 2831)
     0038 210B                      1- 1706     	MOVIA	0x0b
                                    1- 1707     	BANKSEL	_R_AIN1_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1708     	SUBAR	(_R_AIN1_DATA + 1),W
     003B 0903                      1- 1709     	BTRSS	STATUS,2
     003C 3rrr                      1- 1710     	LGOTO	_00397_DS_
     003D 210F                      1- 1711     	MOVIA	0x0f
     003E 04rr                      1- 1712     	SUBAR	_R_AIN1_DATA,W
     003F                           1- 1713     _00397_DS_:
     003F 0C03                      1- 1714     	BTRSC	STATUS,0
     0040 3rrr                      1- 1715     	LGOTO	_00382_DS_
                                    1- 1716     	.line	377, "main.c"; 	inLowTime++;
                                    1- 1717     	BANKSEL	_inLowTime
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 05rr                      1- 1718     	INCR	_inLowTime,F
     0043 3rrr                      1- 1719     	LGOTO	_00383_DS_
     0044                           1- 1720     _00382_DS_:
                                    1- 1721     	.line	381, "main.c"; 	inLowTime = 0;
                                    1- 1722     	BANKSEL	_inLowTime
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 02rr                      1- 1723     	CLRR	_inLowTime
                                    1- 1724     	.line	382, "main.c"; 	chrgStatus = 1;
     0046 2101                      1- 1725     	MOVIA	0x01
                                    1- 1726     	BANKSEL	_chrgStatus
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 1727     	MOVAR	_chrgStatus
                                    1- 1728     ;;unsigned compare: left < lit (0xA=10), size=1
     0049                           1- 1729     _00383_DS_:
                                    1- 1730     	.line	385, "main.c"; 	if(inLowTime >= 10)
     0049 210A                      1- 1731     	MOVIA	0x0a
                                    1- 1732     	BANKSEL	_inLowTime
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 04rr                      1- 1733     	SUBAR	_inLowTime,W
     004C 0803                      1- 1734     	BTRSS	STATUS,0
     004D 3rrr                      1- 1735     	LGOTO	_00386_DS_
                                    1- 1736     	.line	387, "main.c"; 	inLowTime = 10;
     004E 210A                      1- 1737     	MOVIA	0x0a
     004F 00rr                      1- 1738     	MOVAR	_inLowTime
                                    1- 1739     	.line	388, "main.c"; 	chrgStatus = 2;
     0050 2102                      1- 1740     	MOVIA	0x02
                                    1- 1741     	BANKSEL	_chrgStatus
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 1742     	MOVAR	_chrgStatus
     0053                           1- 1743     _00386_DS_:
                                    1- 1744     	.line	391, "main.c"; 	}
                                    1- 1745     	RETURN	
     0053 0010                      3-   26 m1      ret
                                    1- 1746     ; exit point of _checkInV
                                    1- 1748     ;***
                                    1- 1749     ;  pBlock Stats: dbName = C
                                    1- 1750     ;***
                                    1- 1751     ;has an exit
                                    1- 1752     ;functions called:
                                    1- 1753     ;   _delay
                                    1- 1754     ;   _delay
                                    1- 1755     ;1 compiler assigned register :
                                    1- 1756     ;   STK00
                                    1- 1757     ;; Starting pCode block
                                    1- 1758     .segment "code"; module=main, function=_initAD
     0000                           1- 1760     _initAD:
                                    1- 1761     ; 2 exit points
                                    1- 1762     	.line	340, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_Quarter_VDD ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 218B                      1- 1763     	MOVIA	0x8b
     0001 00rr                      1- 1764     	MOVAR	_ADMD
                                    1- 1765     	.line	345, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1766     	CLRR	_ADVREFH
                                    1- 1767     	.line	350, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1768     	MOVIA	0x10
     0004 00rr                      1- 1769     	MOVAR	_ADR
                                    1- 1770     	.line	352, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1771     	MOVIA	0x03
     0006 00rr                      1- 1772     	MOVAR	_ADCR
                                    1- 1773     	.line	355, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1774     	BSR	_ADMDbits,4
                                    1- 1775     	.line	356, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1776     	MOVIA	0x64
     0009 00rr                      1- 1777     	MOVAR	STK00
     000A 2100                      1- 1778     	MOVIA	0x00
     000B 2rrr                      1- 1779     	LCALL	_delay
                                    1- 1780     	.line	359, "main.c"; 	}
                                    1- 1781     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 1782     ; exit point of _initAD
                                    1- 1784     ;***
                                    1- 1785     ;  pBlock Stats: dbName = C
                                    1- 1786     ;***
                                    1- 1787     ;has an exit
                                    1- 1788     ;functions called:
                                    1- 1789     ;   _keyRead
                                    1- 1790     ;   _closeStatus
                                    1- 1791     ;   _gotoSleep
                                    1- 1792     ;   _keyRead
                                    1- 1793     ;   _closeStatus
                                    1- 1794     ;   _gotoSleep
                                    1- 1795     ;1 compiler assigned register :
                                    1- 1796     ;   r0x1040
                                    1- 1797     ;; Starting pCode block
                                    1- 1798     .segment "code"; module=main, function=_keyCtr
                                    1- 1800     ;local variable name mapping:
     0000                           1- 1802     _keyCtr:
                                    1- 1803     ; 2 exit points
                                    1- 1804     	.line	308, "main.c"; 	if(chrgStatus == 1 && overFlag == 0)
                                    1- 1805     	BANKSEL	_chrgStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1806     	MOVR	_chrgStatus,W
     0002 2401                      1- 1807     	XORIA	0x01
     0003 0903                      1- 1808     	BTRSS	STATUS,2
     0004 3rrr                      1- 1809     	LGOTO	_00338_DS_
                                    1- 1810     	BANKSEL	_overFlag
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1811     	MOVR	_overFlag,W
     0007 0903                      1- 1812     	BTRSS	STATUS,2
     0008 3rrr                      1- 1813     	LGOTO	_00338_DS_
                                    1- 1814     	.line	311, "main.c"; 	workStatus = 1;
     0009 2101                      1- 1815     	MOVIA	0x01
                                    1- 1816     	BANKSEL	_workStatus
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1817     	MOVAR	_workStatus
                                    1- 1818     	.line	312, "main.c"; 	POWERON();
     000C 18rr                      1- 1819     	BSR	_PORTA,0
                                    1- 1820     	.line	313, "main.c"; 	LED3ON();
     000D 1Brr                      1- 1821     	BSR	_PORTA,7
     000E                           1- 1822     _00338_DS_:
                                    1- 1823     	.line	315, "main.c"; 	if(chrgStatus == 0 || chrgStatus == 2 || overFlag == 1)
                                    1- 1824     	BANKSEL	_chrgStatus
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1825     	MOVR	_chrgStatus,W
     0010 0D03                      1- 1826     	BTRSC	STATUS,2
     0011 3rrr                      1- 1827     	LGOTO	_00346_DS_
     0012 01rr                      1- 1828     	MOVR	_chrgStatus,W
     0013 2402                      1- 1829     	XORIA	0x02
     0014 0D03                      1- 1830     	BTRSC	STATUS,2
     0015 3rrr                      1- 1831     	LGOTO	_00346_DS_
                                    1- 1832     	BANKSEL	_overFlag
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1833     	MOVR	_overFlag,W
     0018 2401                      1- 1834     	XORIA	0x01
     0019 0903                      1- 1835     	BTRSS	STATUS,2
     001A 3rrr                      1- 1836     	LGOTO	_00350_DS_
     001B                           1- 1837     _00346_DS_:
                                    1- 1838     	.line	317, "main.c"; 	char kClick = keyRead(0x01 & ~PORTB);
     001B 07rr                      1- 1839     	COMR	_PORTB,W
                                    1- 1840     	BANKSEL	r0x1040
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1- 1841     	MOVAR	r0x1040
     001E 2101                      1- 1842     	MOVIA	0x01
     001F 10rr                      1- 1843     	ANDAR	r0x1040,F
     0020 01rr                      1- 1844     	MOVR	r0x1040,W
     0021 2rrr                      1- 1845     	LCALL	_keyRead
                                    1- 1846     	BANKSEL	r0x1040
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 00rr                      1- 1847     	MOVAR	r0x1040
                                    1- 1848     	.line	318, "main.c"; 	if(kClick == 2)
     0024 2402                      1- 1849     	XORIA	0x02
     0025 0903                      1- 1850     	BTRSS	STATUS,2
     0026 3rrr                      1- 1851     	LGOTO	_00350_DS_
                                    1- 1852     	.line	320, "main.c"; 	if(workStatus == 0 || overFlag == 1)
                                    1- 1853     	BANKSEL	_workStatus
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 1854     	MOVR	_workStatus,W
     0029 0D03                      1- 1855     	BTRSC	STATUS,2
     002A 3rrr                      1- 1856     	LGOTO	_00340_DS_
                                    1- 1857     	BANKSEL	_overFlag
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 1858     	MOVR	_overFlag,W
     002D 2401                      1- 1859     	XORIA	0x01
     002E 0903                      1- 1860     	BTRSS	STATUS,2
     002F 3rrr                      1- 1861     	LGOTO	_00341_DS_
     0030                           1- 1862     _00340_DS_:
                                    1- 1863     	.line	322, "main.c"; 	overFlag = 0;
                                    1- 1864     	BANKSEL	_overFlag
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 02rr                      1- 1865     	CLRR	_overFlag
                                    1- 1866     	.line	323, "main.c"; 	workStatus = 1;
     0032 2101                      1- 1867     	MOVIA	0x01
                                    1- 1868     	BANKSEL	_workStatus
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1- 1869     	MOVAR	_workStatus
                                    1- 1870     	.line	324, "main.c"; 	POWERON();
     0035 18rr                      1- 1871     	BSR	_PORTA,0
     0036 3rrr                      1- 1872     	LGOTO	_00350_DS_
     0037                           1- 1873     _00341_DS_:
                                    1- 1874     	.line	328, "main.c"; 	workStatus = 0;
                                    1- 1875     	BANKSEL	_workStatus
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 02rr                      1- 1876     	CLRR	_workStatus
                                    1- 1877     	.line	329, "main.c"; 	closeStatus();
     0039 2rrr                      1- 1878     	LCALL	_closeStatus
                                    1- 1879     	.line	330, "main.c"; 	gotoSleep();
     003A 2rrr                      1- 1880     	LCALL	_gotoSleep
     003B                           1- 1881     _00350_DS_:
                                    1- 1882     	.line	334, "main.c"; 	}
                                    1- 1883     	RETURN	
     003B 0010                      3-   26 m1      ret
                                    1- 1884     ; exit point of _keyCtr
                                    1- 1886     ;***
                                    1- 1887     ;  pBlock Stats: dbName = C
                                    1- 1888     ;***
                                    1- 1889     ;functions called:
                                    1- 1890     ;   _checkBat
                                    1- 1891     ;   _checkOutA
                                    1- 1892     ;   _checkBat
                                    1- 1893     ;   _checkOutA
                                    1- 1894     ;; Starting pCode block
                                    1- 1895     .segment "code"; module=main, function=_workCtr
     0000                           1- 1897     _workCtr:
                                    1- 1898     ; 0 exit points
                                    1- 1899     	.line	236, "main.c"; 	if(PORTA & 0x08)
     0000 09rr                      1- 1900     	BTRSS	_PORTA,3
     0001 3rrr                      1- 1901     	LGOTO	_00257_DS_
                                    1- 1902     	.line	239, "main.c"; 	overFlag = 0;
                                    1- 1903     	BANKSEL	_overFlag
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1904     	CLRR	_overFlag
     0004                           1- 1905     _00257_DS_:
                                    1- 1906     	.line	245, "main.c"; 	checkBat();
     0004 2rrr                      1- 1907     	LCALL	_checkBat
                                    1- 1908     	.line	246, "main.c"; 	if(PORTA & 0x20)
     0005 0Arr                      1- 1909     	BTRSS	_PORTA,5
     0006 3rrr                      1- 1910     	LGOTO	_00275_DS_
                                    1- 1911     	.line	248, "main.c"; 	if(batStatus == 2 || chrgStatus == 2)
                                    1- 1912     	BANKSEL	_batStatus
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1- 1913     	MOVR	_batStatus,W
     0009 2402                      1- 1914     	XORIA	0x02
     000A 0D03                      1- 1915     	BTRSC	STATUS,2
     000B 3rrr                      1- 1916     	LGOTO	_00258_DS_
                                    1- 1917     	BANKSEL	_chrgStatus
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 1918     	MOVR	_chrgStatus,W
     000E 2402                      1- 1919     	XORIA	0x02
     000F 0903                      1- 1920     	BTRSS	STATUS,2
     0010 3rrr                      1- 1921     	LGOTO	_00259_DS_
     0011                           1- 1922     _00258_DS_:
                                    1- 1923     	.line	250, "main.c"; 	LED1OFF();		//充满了，灭灯
     0011 19rr                      1- 1924     	BSR	_PORTB,3
                                    1- 1925     	.line	251, "main.c"; 	CHRGOFF();
     0012 1Drr                      1- 1926     	BCR	_PORTB,2
     0013 3rrr                      1- 1927     	LGOTO	_00260_DS_
     0014                           1- 1928     _00259_DS_:
                                    1- 1929     	.line	255, "main.c"; 	LED1ON();
     0014 1Drr                      1- 1930     	BCR	_PORTB,3
     0015                           1- 1931     _00260_DS_:
                                    1- 1932     	.line	259, "main.c"; 	if(batStatus == 1 && chrgStatus == 2)
                                    1- 1933     	BANKSEL	_batStatus
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 1934     	MOVR	_batStatus,W
     0017 2401                      1- 1935     	XORIA	0x01
     0018 0903                      1- 1936     	BTRSS	STATUS,2
     0019 3rrr                      1- 1937     	LGOTO	_00276_DS_
                                    1- 1938     	BANKSEL	_chrgStatus
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1- 1939     	MOVR	_chrgStatus,W
     001C 2402                      1- 1940     	XORIA	0x02
     001D 0903                      1- 1941     	BTRSS	STATUS,2
     001E 3rrr                      1- 1942     	LGOTO	_00276_DS_
                                    1- 1943     	.line	261, "main.c"; 	LED4ON();
     001F 1Crr                      1- 1944     	BCR	_PORTB,1
     0020 3rrr                      1- 1945     	LGOTO	_00276_DS_
     0021                           1- 1946     _00275_DS_:
                                    1- 1947     	.line	268, "main.c"; 	LED1OFF();		//未充电,电池供电
     0021 19rr                      1- 1948     	BSR	_PORTB,3
                                    1- 1949     	.line	269, "main.c"; 	if(workStatus == 1 && batStatus < 3)
                                    1- 1950     	BANKSEL	_workStatus
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1951     	MOVR	_workStatus,W
     0024 2401                      1- 1952     	XORIA	0x01
     0025 0903                      1- 1953     	BTRSS	STATUS,2
     0026 3rrr                      1- 1954     	LGOTO	_00266_DS_
                                    1- 1955     ;;unsigned compare: left < lit (0x3=3), size=1
     0027 2103                      1- 1956     	MOVIA	0x03
                                    1- 1957     	BANKSEL	_batStatus
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 04rr                      1- 1958     	SUBAR	_batStatus,W
     002A 0803                      1- 1959     	BTRSS	STATUS,0
                                    1- 1960     	.line	271, "main.c"; 	LED2ON();
     002B 1Brr                      1- 1961     	BSR	_PORTA,6
     002C                           1- 1962     _00266_DS_:
                                    1- 1963     	.line	273, "main.c"; 	if(batStatus == 1)
                                    1- 1964     	BANKSEL	_batStatus
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1- 1965     	MOVR	_batStatus,W
     002E 2401                      1- 1966     	XORIA	0x01
     002F 0903                      1- 1967     	BTRSS	STATUS,2
     0030 3rrr                      1- 1968     	LGOTO	_00272_DS_
                                    1- 1969     	.line	275, "main.c"; 	LED4ON();
     0031 1Crr                      1- 1970     	BCR	_PORTB,1
     0032 3rrr                      1- 1971     	LGOTO	_00276_DS_
     0033                           1- 1972     _00272_DS_:
                                    1- 1973     	.line	277, "main.c"; 	else if(batStatus == 0 || batStatus == 2)
                                    1- 1974     	BANKSEL	_batStatus
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 1975     	MOVR	_batStatus,W
     0035 0D03                      1- 1976     	BTRSC	STATUS,2
     0036 3rrr                      1- 1977     	LGOTO	_00268_DS_
     0037 01rr                      1- 1978     	MOVR	_batStatus,W
     0038 2402                      1- 1979     	XORIA	0x02
     0039 0D03                      1- 1980     	BTRSC	STATUS,2
     003A                           1- 1981     _00268_DS_:
                                    1- 1982     	.line	279, "main.c"; 	LED4OFF();
     003A 18rr                      1- 1983     	BSR	_PORTB,1
     003B                           1- 1984     _00276_DS_:
                                    1- 1985     	.line	284, "main.c"; 	if(batStatus == 3 && chrgStatus != 1)
                                    1- 1986     	BANKSEL	_batStatus
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 01rr                      1- 1987     	MOVR	_batStatus,W
     003D 2403                      1- 1988     	XORIA	0x03
     003E 0903                      1- 1989     	BTRSS	STATUS,2
     003F 3rrr                      1- 1990     	LGOTO	_00282_DS_
                                    1- 1991     	BANKSEL	_chrgStatus
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1- 1992     	MOVR	_chrgStatus,W
     0042 2401                      1- 1993     	XORIA	0x01
     0043 0D03                      1- 1994     	BTRSC	STATUS,2
     0044 3rrr                      1- 1995     	LGOTO	_00282_DS_
                                    1- 1996     	.line	286, "main.c"; 	if(++firstLowTime >= 10)
                                    1- 1997     	BANKSEL	_firstLowTime
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 05rr                      1- 1998     	INCR	_firstLowTime,F
     0047 210A                      1- 1999     	MOVIA	0x0a
     0048 04rr                      1- 2000     	SUBAR	_firstLowTime,W
     0049 0803                      1- 2001     	BTRSS	STATUS,0
     004A 3rrr                      1- 2002     	LGOTO	_00282_DS_
                                    1- 2003     	.line	288, "main.c"; 	firstLowTime = 0;
     004B 02rr                      1- 2004     	CLRR	_firstLowTime
                                    1- 2005     	.line	289, "main.c"; 	POWEROFF();			//缺电状态关闭负载
     004C 1Crr                      1- 2006     	BCR	_PORTA,0
                                    1- 2007     	.line	290, "main.c"; 	if(firstLow == 0)
                                    1- 2008     	BANKSEL	_firstLow
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1- 2009     	MOVR	_firstLow,W
     004F 0903                      1- 2010     	BTRSS	STATUS,2
     0050 3rrr                      1- 2011     	LGOTO	_00278_DS_
                                    1- 2012     	.line	291, "main.c"; 	shandeng = 6;
     0051 2106                      1- 2013     	MOVIA	0x06
                                    1- 2014     	BANKSEL	_shandeng
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 00rr                      1- 2015     	MOVAR	_shandeng
     0054                           1- 2016     _00278_DS_:
                                    1- 2017     	.line	292, "main.c"; 	firstLow = 1;
     0054 2101                      1- 2018     	MOVIA	0x01
                                    1- 2019     	BANKSEL	_firstLow
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 00rr                      1- 2020     	MOVAR	_firstLow
     0057                           1- 2021     _00282_DS_:
                                    1- 2022     	.line	297, "main.c"; 	if(overFlag == 0)
                                    1- 2023     	BANKSEL	_overFlag
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 01rr                      1- 2024     	MOVR	_overFlag,W
     0059 0D03                      1- 2025     	BTRSC	STATUS,2
                                    1- 2026     	.line	299, "main.c"; 	checkOutA();
     005A 2rrr                      1- 2027     	LCALL	_checkOutA
                                    1- 2028     	.line	303, "main.c"; 	}
                                    1- 2029     	RETURN	
     005B 0010                      3-   26 m1      ret
                                    1- 2031     ;***
                                    1- 2032     ;  pBlock Stats: dbName = C
                                    1- 2033     ;***
                                    1- 2034     ;functions called:
                                    1- 2035     ;   _checkInV
                                    1- 2036     ;   _checkInV
                                    1- 2037     ;; Starting pCode block
                                    1- 2038     .segment "code"; module=main, function=_chrgWork
     0000                           1- 2040     _chrgWork:
                                    1- 2041     ; 0 exit points
                                    1- 2042     	.line	201, "main.c"; 	if(overFlag == 1)
                                    1- 2043     	BANKSEL	_overFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2044     	MOVR	_overFlag,W
     0002 2401                      1- 2045     	XORIA	0x01
     0003 0903                      1- 2046     	BTRSS	STATUS,2
     0004 3rrr                      1- 2047     	LGOTO	_00239_DS_
                                    1- 2048     	.line	203, "main.c"; 	LED2OFF();
     0005 1Frr                      1- 2049     	BCR	_PORTA,6
                                    1- 2050     	.line	204, "main.c"; 	LED3OFF();
     0006 1Frr                      1- 2051     	BCR	_PORTA,7
                                    1- 2052     	.line	205, "main.c"; 	POWEROFF();
     0007 1Crr                      1- 2053     	BCR	_PORTA,0
     0008                           1- 2054     _00239_DS_:
                                    1- 2055     	.line	209, "main.c"; 	if(PORTA & 0x20)
     0008 0Arr                      1- 2056     	BTRSS	_PORTA,5
     0009 3rrr                      1- 2057     	LGOTO	_00251_DS_
                                    1- 2058     	.line	211, "main.c"; 	checkInV();
     000A 2rrr                      1- 2059     	LCALL	_checkInV
                                    1- 2060     	.line	212, "main.c"; 	if(chrgStatus == 2)
                                    1- 2061     	BANKSEL	_chrgStatus
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 2062     	MOVR	_chrgStatus,W
     000D 2402                      1- 2063     	XORIA	0x02
     000E 0903                      1- 2064     	BTRSS	STATUS,2
     000F 3rrr                      1- 2065     	LGOTO	_00247_DS_
                                    1- 2066     	.line	215, "main.c"; 	if(workStatus == 1 && batStatus < 3)
                                    1- 2067     	BANKSEL	_workStatus
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 2068     	MOVR	_workStatus,W
     0012 2401                      1- 2069     	XORIA	0x01
     0013 0903                      1- 2070     	BTRSS	STATUS,2
     0014 3rrr                      1- 2071     	LGOTO	_00241_DS_
                                    1- 2072     ;;unsigned compare: left < lit (0x3=3), size=1
     0015 2103                      1- 2073     	MOVIA	0x03
                                    1- 2074     	BANKSEL	_batStatus
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 04rr                      1- 2075     	SUBAR	_batStatus,W
     0018 0C03                      1- 2076     	BTRSC	STATUS,0
     0019 3rrr                      1- 2077     	LGOTO	_00241_DS_
                                    1- 2078     	.line	217, "main.c"; 	LED2ON();
     001A 1Brr                      1- 2079     	BSR	_PORTA,6
                                    1- 2080     	.line	218, "main.c"; 	POWERON();
     001B 18rr                      1- 2081     	BSR	_PORTA,0
     001C 3rrr                      1- 2082     	LGOTO	_00251_DS_
     001D                           1- 2083     _00241_DS_:
                                    1- 2084     	.line	222, "main.c"; 	LED3OFF();
     001D 1Frr                      1- 2085     	BCR	_PORTA,7
                                    1- 2086     	.line	223, "main.c"; 	POWEROFF();
     001E 1Crr                      1- 2087     	BCR	_PORTA,0
     001F 3rrr                      1- 2088     	LGOTO	_00251_DS_
     0020                           1- 2089     _00247_DS_:
                                    1- 2090     	.line	226, "main.c"; 	else if(overFlag == 0)
                                    1- 2091     	BANKSEL	_overFlag
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 2092     	MOVR	_overFlag,W
     0022 0D03                      1- 2093     	BTRSC	STATUS,2
                                    1- 2094     	.line	228, "main.c"; 	LED3ON();
     0023 1Brr                      1- 2095     	BSR	_PORTA,7
     0024                           1- 2096     _00251_DS_:
                                    1- 2097     	.line	232, "main.c"; 	}
                                    1- 2098     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1- 2101     ;	code size estimation:
                                    1- 2102     ;	  779+  196 =   975 instructions ( 2342 byte)
                                    1- 2104     	end
                                    1- 2104     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    0000002E
_00003_DS_              Label    0000002E
_00004_DS_              Label    0000002E
_00005_DS_              Label    00000025
_00006_DS_              Label    00000025
_00007_DS_              Label    00000025
_00008_DS_              Label    00000066
_00106_DS_              Label    0000002E
_00107_DS_              Label    0000002F
_00115_DS_              Label    00000031
_00117_DS_              Label    00000035
_00124_DS_              Label    00000041
_00132_DS_              Label    00000043
_00133_DS_              Label    00000049
_00147_DS_              Label    0000005D
_00148_DS_              Label    0000007A
_00158_DS_              Label    0000008D
_00161_DS_              Label    0000001E
_00239_DS_              Label    00000008
_00241_DS_              Label    0000001D
_00247_DS_              Label    00000020
_00251_DS_              Label    00000024
_00257_DS_              Label    00000004
_00258_DS_              Label    00000011
_00259_DS_              Label    00000014
_00260_DS_              Label    00000015
_00266_DS_              Label    0000002C
_00268_DS_              Label    0000003A
_00272_DS_              Label    00000033
_00275_DS_              Label    00000021
_00276_DS_              Label    0000003B
_00278_DS_              Label    00000054
_00282_DS_              Label    00000057
_00338_DS_              Label    0000000E
_00340_DS_              Label    00000030
_00341_DS_              Label    00000037
_00346_DS_              Label    0000001B
_00350_DS_              Label    0000003B
_00380_DS_              Label    00000038
_00382_DS_              Label    00000044
_00383_DS_              Label    00000049
_00386_DS_              Label    00000053
_00397_DS_              Label    0000003F
_00403_DS_              Label    00000038
_00407_DS_              Label    0000006B
_00410_DS_              Label    0000005D
_00413_DS_              Label    00000045
_00415_DS_              Label    00000070
_00432_DS_              Label    0000003F
_00433_DS_              Label    0000004C
_00434_DS_              Label    00000058
_00435_DS_              Label    00000064
_00441_DS_              Label    00000037
_00443_DS_              Label    00000045
_00444_DS_              Label    00000047
_00447_DS_              Label    00000055
_00458_DS_              Label    0000003E
_00465_DS_              Label    00000010
_00467_DS_              Label    00000031
_00474_DS_              Label    00000010
_00476_DS_              Label    00000031
_00483_DS_              Label    00000010
_00485_DS_              Label    00000031
_00494_DS_              Label    00000000
_00501_DS_              Label    00000009
_00503_DS_              Label    0000001C
_00512_DS_              Label    00000013
_00524_DS_              Label    0000001F
_00525_DS_              Label    00000027
_00527_DS_              Label    00000015
_00528_DS_              Label    00000029
_00529_DS_              Label    0000002A
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_batStatus              Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBat               Label    00000000
_checkInV               Label    00000000
_checkOutA              Label    00000000
_chrgStatus             Label    00000000
_chrgWork               Label    00000000
_closeStatus            Label    00000000
_CMPCR                  Label    00000000
_count500ms             Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_F_AIN1_Convert         Label    00000000
_F_AIN2_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_firstLow               Label    00000000
_firstLowTime           Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_inLowTime              Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_longPressFlag          Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_overFlag               Label    00000000
_overTime               Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN1_DATA            Label    00000000
_R_AIN1_DATA_LB         Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_shandeng               Label    00000000
_sleepDelay             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStatus             Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000046
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101D                 Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1033                 Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103E                 Label    00000000
r0x103F                 Label    00000000
r0x1040                 Label    00000000
r0x1041                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
