
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_closeStatus
                                    1-   97     	extern	_keyRead
                                    1-   98     	extern	_delay
                                    1-   99     	extern	_F_wait_eoc
                                    1-  100     	extern	_gotoSleep
                                    1-  101     	extern	_F_AIN4_Convert
                                    1-  102     	extern	_F_AIN2_Convert
                                    1-  103     	extern	_F_AIN1_Convert
                                    1-  104     	extern	_checkOutA
                                    1-  105     	extern	_checkBat
                                    1-  106     	extern	_checkInV
                                    1-  107     	extern	_initAD
                                    1-  108     	extern	_keyCtr
                                    1-  109     	extern	_workCtr
                                    1-  110     	extern	_chrgWork
                                    1-  111     	extern	_isr
                                    1-  112     	extern	_main
                                    1-  113     	extern	_debug
                                    1-  114     	extern	_intCount
                                    1-  115     	extern	_IntFlag
                                    1-  116     	extern	_sleepDelay
                                    1-  117     	extern	_workStep
                                    1-  118     	extern	_longPressFlag
                                    1-  119     	extern	_keyCount
                                    1-  120     	extern	_keyClick
                                    1-  121     	extern	_chrgStatus
                                    1-  122     	extern	_overFlag
                                    1-  123     	extern	_batStatus
                                    1-  124     	extern	_workStatus
                                    1-  125     	extern	_inLowTime
                                    1-  126     	extern	_R_AIN1_DATA
                                    1-  127     	extern	_R_AIN1_DATA_LB
                                    1-  128     	extern	_R_AIN2_DATA
                                    1-  129     	extern	_R_AIN2_DATA_LB
                                    1-  130     	extern	_R_AIN4_DATA
                                    1-  131     	extern	_R_AIN4_DATA_LB
                                    1-  132     	extern	_overTime
                                    1-  133     	extern	_shandeng
                                    1-  134     	extern	_count500ms
                                    1-  135     	extern	_firstLow
                                    1-  136     	extern	_firstLowTime
                                    1-  137     	extern	_batLowTime
                                    1-  138     	extern	_lowBatLock
                                    1-  139     	extern	_adCheckTime
                                    1-  140     	extern	_overNub
                                    1-  142     	extern PSAVE
                                    1-  143     	extern SSAVE
                                    1-  144     	extern WSAVE
                                    1-  145     	extern STK02
                                    1-  146     	extern STK01
                                    1-  147     	extern STK00
                                    1-  149     .segment "uninit", 0x20000040
 20000040                           1-  150     PSAVE:
                                    1-  151     	.res 1
 20000041                           1-  152     SSAVE:
                                    1-  153     	.res 1
 20000042                           1-  154     WSAVE:
                                    1-  155     	.res 1
 20000043                           1-  156     STK02:
                                    1-  157     	.res 1
 20000044                           1-  158     STK01:
                                    1-  159     	.res 1
 20000045                           1-  160     STK00:
                                    1-  161     	.res 1
                                    1-  163     ;--------------------------------------------------------
                                    1-  164     ; global definitions
                                    1-  165     ;--------------------------------------------------------
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ; absolute symbol definitions
                                    1-  168     ;--------------------------------------------------------
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     ; compiler-defined variables
                                    1-  171     ;--------------------------------------------------------
                                    1-  172     .segment "uninit"
     0000                           1-  173     r0x1045:
                                    1-  174     	.res	1
                                    1-  175     .segment "uninit"
     0000                           1-  176     r0x1044:
                                    1-  177     	.res	1
                                    1-  178     .segment "uninit"
     0000                           1-  179     r0x1042:
                                    1-  180     	.res	1
                                    1-  181     .segment "uninit"
     0000                           1-  182     r0x1043:
                                    1-  183     	.res	1
                                    1-  184     .segment "uninit"
     0000                           1-  185     r0x103E:
                                    1-  186     	.res	1
                                    1-  187     .segment "uninit"
     0000                           1-  188     r0x103F:
                                    1-  189     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     r0x1038:
                                    1-  192     	.res	1
                                    1-  193     .segment "uninit"
     0000                           1-  194     r0x103B:
                                    1-  195     	.res	1
                                    1-  196     .segment "uninit"
     0000                           1-  197     r0x1032:
                                    1-  198     	.res	1
                                    1-  199     .segment "uninit"
     0000                           1-  200     r0x1033:
                                    1-  201     	.res	1
                                    1-  202     .segment "uninit"
     0000                           1-  203     r0x1034:
                                    1-  204     	.res	1
                                    1-  205     .segment "uninit"
     0000                           1-  206     r0x1037:
                                    1-  207     	.res	1
                                    1-  208     .segment "uninit"
     0000                           1-  209     r0x102C:
                                    1-  210     	.res	1
                                    1-  211     .segment "uninit"
     0000                           1-  212     r0x102D:
                                    1-  213     	.res	1
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x102E:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x1031:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x1026:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x1027:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x1028:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x102B:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x1023:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x1022:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x1024:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x1025:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1021:
                                    1-  246     	.res	1
                                    1-  247     ;--------------------------------------------------------
                                    1-  248     ; initialized data
                                    1-  249     ;--------------------------------------------------------
                                    1-  251     .segment "idata"
     0000                           1-  252     _debug:
     0000 0000                      1-  253     	dw	0x00
                                    1-  257     .segment "idata"
     0000                           1-  258     _intCount:
     0000 0000                      1-  259     	dw	0x00
                                    1-  263     .segment "idata"
     0000                           1-  264     _IntFlag:
     0000 0000                      1-  265     	dw	0x00
                                    1-  269     .segment "idata"
     0000                           1-  270     _sleepDelay:
     0000 0000                      1-  271     	dw	0x00
                                    1-  275     .segment "idata"
     0000                           1-  276     _workStep:
     0000 0000                      1-  277     	dw	0x00
                                    1-  281     .segment "idata"
     0000                           1-  282     _longPressFlag:
     0000 0000                      1-  283     	dw	0x00
                                    1-  287     .segment "idata"
     0000                           1-  288     _keyCount:
     0000 0000                      1-  289     	dw	0x00
                                    1-  293     .segment "idata"
     0000                           1-  294     _keyClick:
     0000 0000                      1-  295     	dw	0x00
                                    1-  299     .segment "idata"
     0000                           1-  300     _chrgStatus:
     0000 0000                      1-  301     	dw	0x00
                                    1-  305     .segment "idata"
     0000                           1-  306     _overFlag:
     0000 0000                      1-  307     	dw	0x00
                                    1-  311     .segment "idata"
     0000                           1-  312     _batStatus:
     0000 0000                      1-  313     	dw	0x00
                                    1-  317     .segment "idata"
     0000                           1-  318     _workStatus:
     0000 0000                      1-  319     	dw	0x00
                                    1-  323     .segment "idata"
     0000                           1-  324     _inLowTime:
     0000 0000                      1-  325     	dw	0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _R_AIN1_DATA:
     0000 0000 0000                 1-  331     	dw	0x00, 0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _R_AIN1_DATA_LB:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _R_AIN2_DATA:
     0000 0000 0000                 1-  343     	dw	0x00, 0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _R_AIN2_DATA_LB:
     0000 0000                      1-  349     	dw	0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _R_AIN4_DATA:
     0000 0000 0000                 1-  355     	dw	0x00, 0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _R_AIN4_DATA_LB:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _overTime:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _shandeng:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _count500ms:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _firstLow:
     0000 0000                      1-  385     	dw	0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _firstLowTime:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _batLowTime:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _lowBatLock:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _adCheckTime:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _overNub:
     0000 0000                      1-  415     	dw	0x00
                                    1-  418     ;--------------------------------------------------------
                                    1-  419     ; overlayable items in internal ram 
                                    1-  420     ;--------------------------------------------------------
                                    1-  421     ;	udata_ovr
                                    1-  422     ;--------------------------------------------------------
                                    1-  423     ; reset vector 
                                    1-  424     ;--------------------------------------------------------
                                    1-  425     ORG	0x0000
     0000 3rrr                      1-  426     	LGOTO	__nyc_ny8_startup
                                    1-  427     ;--------------------------------------------------------
                                    1-  428     ; interrupt and initialization code
                                    1-  429     ;--------------------------------------------------------
                                    1-  430     ORG 0x0008
     0008 3rrr                      1-  431     	lgoto	__sdcc_interrupt
                                    1-  433     .segment "code"
     0000                           1-  434     __sdcc_interrupt:
                                    1-  435     ;***
                                    1-  436     ;  pBlock Stats: dbName = I
                                    1-  437     ;***
                                    1-  438     ;functions called:
                                    1-  439     ;   _closeStatus
                                    1-  440     ;   _gotoSleep
                                    1-  441     ;   _closeStatus
                                    1-  442     ;   _gotoSleep
                                    1-  443     ;2 compiler assigned registers:
                                    1-  444     ;   STK00
                                    1-  445     ;   STK01
                                    1-  446     ;; Starting pCode block
     0000                           1-  447     _isr:
                                    1-  448     ; 0 exit points
                                    1-  449     	.line	75, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  450     	MOVAR	WSAVE
     0001 1503                      1-  451     	SWAPR	STATUS,W
     0002 0283                      1-  452     	CLRR	STATUS
     0003 00rr                      1-  453     	MOVAR	SSAVE
     0004 010A                      1-  454     	MOVR	PCHBUF,W
     0005 028A                      1-  455     	CLRR	PCHBUF
     0006 00rr                      1-  456     	MOVAR	PSAVE
     0007 0104                      1-  457     	MOVR	FSR,W
                                    1-  458     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  459     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  460     	MOVR	STK00,W
                                    1-  461     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  462     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  463     	MOVR	STK01,W
                                    1-  464     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  465     	MOVAR	___sdcc_saved_stk01
                                    1-  466     	.line	77, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  467     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  468     	LGOTO	_00117_DS_
                                    1-  469     	.line	79, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  470     	MOVIA	0x37
     0013 03rr                      1-  471     	ADDAR	_TMR0,F
                                    1-  472     	.line	80, "main.c"; 	intCount++;
                                    1-  473     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  474     	INCR	_intCount,F
                                    1-  475     	.line	82, "main.c"; 	if(++intCount >= 100)
     0016 05rr                      1-  476     	INCR	_intCount,F
                                    1-  477     ;;unsigned compare: left < lit (0x64=100), size=1
     0017 2164                      1-  478     	MOVIA	0x64
     0018 04rr                      1-  479     	SUBAR	_intCount,W
     0019 0803                      1-  480     	BTRSS	STATUS,0
     001A 3rrr                      1-  481     	LGOTO	_00117_DS_
                                    1-  482     	.line	84, "main.c"; 	intCount = 0;
     001B 02rr                      1-  483     	CLRR	_intCount
                                    1-  484     	.line	85, "main.c"; 	IntFlag = 1;
     001C 2101                      1-  485     	MOVIA	0x01
                                    1-  486     	BANKSEL	_IntFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  487     	MOVAR	_IntFlag
                                    1-  488     	.line	86, "main.c"; 	if(++count500ms >= 50)
                                    1-  489     	BANKSEL	_count500ms
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 05rr                      1-  490     	INCR	_count500ms,F
                                    1-  491     ;;unsigned compare: left < lit (0x32=50), size=1
     0021 2132                      1-  492     	MOVIA	0x32
     0022 04rr                      1-  493     	SUBAR	_count500ms,W
     0023 0803                      1-  494     	BTRSS	STATUS,0
     0024 3rrr                      1-  495     	LGOTO	_00117_DS_
                                    1-  496     	.line	88, "main.c"; 	count500ms = 0;
     0025 02rr                      1-  497     	CLRR	_count500ms
                                    1-  498     	.line	89, "main.c"; 	if(shandeng > 0)
                                    1-  499     	BANKSEL	_shandeng
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  500     	MOVR	_shandeng,W
     0028 0D03                      1-  501     	BTRSC	STATUS,2
     0029 3rrr                      1-  502     	LGOTO	_00117_DS_
                                    1-  503     	.line	91, "main.c"; 	if(shandeng % 2 == 0)
     002A 0Crr                      1-  504     	BTRSC	_shandeng,0
     002B 3rrr                      1-  505     	LGOTO	_00106_DS_
                                    1-  506     	.line	92, "main.c"; 	LED4ON();
     002C 1Crr                      1-  507     	BCR	_PORTB,1
     002D 3rrr                      1-  508     	LGOTO	_00107_DS_
     002E                           1-  509     _00106_DS_:
                                    1-  510     	.line	94, "main.c"; 	LED4OFF();
     002E 18rr                      1-  511     	BSR	_PORTB,1
     002F                           1-  512     _00107_DS_:
                                    1-  513     	.line	95, "main.c"; 	shandeng--;
                                    1-  514     	BANKSEL	_shandeng
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 17rr                      1-  515     	DECRSZ	_shandeng,F
                                    1-  516     	.line	96, "main.c"; 	if(shandeng == 0)
     0031 3rrr                      1-  517     	LGOTO	_00117_DS_
                                    1-  518     	.line	98, "main.c"; 	closeStatus();
     0032 2rrr                      1-  519     	LCALL	_closeStatus
                                    1-  520     	.line	99, "main.c"; 	gotoSleep();
     0033 2rrr                      1-  521     	LCALL	_gotoSleep
     0034                           1-  522     _00117_DS_:
                                    1-  523     	.line	107, "main.c"; 	if(INTFbits.PABIF)
     0034 08rr                      1-  524     	BTRSS	_INTFbits,1
     0035 3rrr                      1-  525     	LGOTO	_00119_DS_
                                    1-  526     	.line	109, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0036 21FD                      1-  527     	MOVIA	0xfd
     0037 00rr                      1-  528     	MOVAR	_INTF
     0038                           1-  529     _00119_DS_:
                                    1-  530     	.line	112, "main.c"; 	INTF = 0;
     0038 02rr                      1-  531     	CLRR	_INTF
                                    1-  532     	.line	114, "main.c"; 	}
                                    1-  533     	BANKSEL	___sdcc_saved_stk01
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  534     	MOVR	___sdcc_saved_stk01,W
     003B 00rr                      1-  535     	MOVAR	STK01
                                    1-  536     	BANKSEL	___sdcc_saved_stk00
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1-  537     	MOVR	___sdcc_saved_stk00,W
     003E 00rr                      1-  538     	MOVAR	STK00
                                    1-  539     	BANKSEL	___sdcc_saved_fsr
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1-  540     	MOVR	___sdcc_saved_fsr,W
     0041 0084                      1-  541     	MOVAR	FSR
     0042 01rr                      1-  542     	MOVR	PSAVE,W
     0043 008A                      1-  543     	MOVAR	PCHBUF
     0044 0283                      1-  544     	CLRR	STATUS
     0045 15rr                      1-  545     	SWAPR	SSAVE,W
     0046 0083                      1-  546     	MOVAR	STATUS
     0047 15rr                      1-  547     	SWAPR	WSAVE,F
     0048 15rr                      1-  548     	SWAPR	WSAVE,W
     0049                           1-  549     END_OF_INTERRUPT:
     0049 0011                      1-  550     	RETIE	
                                    1-  552     ;--------------------------------------------------------
                                    1-  553     ; code
                                    1-  554     ;--------------------------------------------------------
                                    1-  555     ;***
                                    1-  556     ;  pBlock Stats: dbName = M
                                    1-  557     ;***
                                    1-  558     ;has an exit
                                    1-  559     ;functions called:
                                    1-  560     ;   _closeStatus
                                    1-  561     ;   _initAD
                                    1-  562     ;   _keyCtr
                                    1-  563     ;   _chrgWork
                                    1-  564     ;   _workCtr
                                    1-  565     ;   _closeStatus
                                    1-  566     ;   _gotoSleep
                                    1-  567     ;   _closeStatus
                                    1-  568     ;   _initAD
                                    1-  569     ;   _keyCtr
                                    1-  570     ;   _chrgWork
                                    1-  571     ;   _workCtr
                                    1-  572     ;   _closeStatus
                                    1-  573     ;   _gotoSleep
                                    1-  574     ;1 compiler assigned register :
                                    1-  575     ;   r0x1045
                                    1-  576     ;; Starting pCode block
                                    1-  577     .segment "code"; module=main, function=_main
     0000                           1-  579     _main:
                                    1-  580     ; 2 exit points
                                    1-  581     	.line	118, "main.c"; 	DISI();
     0000 0013                      1-  582     	DISI
                                    1-  583     	.line	119, "main.c"; 	IOSTA = C_PA1_Input | C_PA2_Input | C_PA3_Input | C_PA4_Input | C_PA5_Input;
     0001 213E                      1-  584     	MOVIA	0x3e
     0002 000r                      1-  585     	IOST	_IOSTA
                                    1-  586     	.line	120, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1-  587     	MOVIA	0x01
     0004 000r                      1-  588     	IOST	_IOSTB
                                    1-  589     	.line	121, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1-  590     	CLRR	_PORTB
                                    1-  591     	.line	122, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1-  592     	CLRR	_PORTA
                                    1-  593     	.line	123, "main.c"; 	APHCON = 0xFF;
     0007 21FF                      1-  594     	MOVIA	0xff
     0008 000r                      1-  595     	IOST	_APHCON
                                    1-  596     	.line	124, "main.c"; 	BPHCON = 0xFE;
     0009 21FE                      1-  597     	MOVIA	0xfe
     000A 00rr                      1-  598     	MOVAR	_BPHCON
                                    1-  599     	.line	125, "main.c"; 	ABPLCON = 0xFF;
     000B 21FF                      1-  600     	MOVIA	0xff
     000C 00rr                      1-  601     	MOVAR	_ABPLCON
                                    1-  602     	.line	127, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000D 2101                      1-  603     	MOVIA	0x01
     000E 00rr                      1-  604     	MOVAR	_INTE
                                    1-  605     	.line	129, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1-  606     	CLRA	
     0010 000r                      1-  607     	IOST	_PCON1
                                    1-  608     	.line	131, "main.c"; 	TMR0 = 55;
     0011 2137                      1-  609     	MOVIA	0x37
     0012 00rr                      1-  610     	MOVAR	_TMR0
                                    1-  611     	.line	132, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0013 0200                      1-  612     	CLRA	
     0014 0003                      1-  613     	T0MD	
                                    1-  614     	.line	134, "main.c"; 	PCON1 = C_TMR0_En;
     0015 2101                      1-  615     	MOVIA	0x01
     0016 000r                      1-  616     	IOST	_PCON1
                                    1-  617     	.line	136, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR,PA5关闭上拉
     0017 2198                      1-  618     	MOVIA	0x98
     0018 00rr                      1-  619     	MOVAR	_PCON
                                    1-  620     	.line	138, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1-  621     	MOVIA	0x01
     001A 000r                      1-  622     	IOST	_PCON1
                                    1-  623     	.line	139, "main.c"; 	ENI();
     001B 0004                      1-  624     	ENI
                                    1-  625     	.line	140, "main.c"; 	closeStatus();
     001C 2rrr                      1-  626     	LCALL	_closeStatus
                                    1-  627     	.line	141, "main.c"; 	initAD();
     001D 2rrr                      1-  628     	LCALL	_initAD
     001E                           1-  629     _00164_DS_:
                                    1-  630     	.line	146, "main.c"; 	CLRWDT();
     001E 0002                      1-  631     	clrwdt
                                    1-  632     	.line	147, "main.c"; 	if(PORTA & 0x20)
     001F 0Arr                      1-  633     	BTRSS	_PORTA,5
     0020 3rrr                      1-  634     	LGOTO	_00150_DS_
                                    1-  635     	.line	149, "main.c"; 	lowBatLock = 0;//解锁低电
                                    1-  636     	BANKSEL	_lowBatLock
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 02rr                      1-  637     	CLRR	_lowBatLock
                                    1-  638     ;;unsigned compare: left < lit (0x2=2), size=1
                                    1-  639     	.line	151, "main.c"; 	if(chrgStatus < 2)
     0023 2102                      1-  640     	MOVIA	0x02
                                    1-  641     	BANKSEL	_chrgStatus
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 04rr                      1-  642     	SUBAR	_chrgStatus,W
                                    1-  643     	BANKSEL	r0x1045
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 02rr                      1-  644     	CLRR	r0x1045
     0028 0803                      1-  645     	BTRSS	STATUS,0
     0029 18rr                      1-  646     	BSR	r0x1045,0
     002A 01rr                      1-  647     	MOVR	r0x1045,W
     002B 0D03                      1-  648     	BTRSC	STATUS,2
     002C 3rrr                      1-  649     	LGOTO	_00134_DS_
                                    1-  650     	.line	153, "main.c"; 	LED2OFF();
     002D 1Frr                      1-  651     	BCR	_PORTA,6
                                    1-  652     	.line	154, "main.c"; 	if(chrgStatus == 1)
                                    1-  653     	BANKSEL	_chrgStatus
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1-  654     	MOVR	_chrgStatus,W
     0030 2401                      1-  655     	XORIA	0x01
     0031 0D03                      1-  656     	BTRSC	STATUS,2
                                    1-  657     	.line	155, "main.c"; 	LED4OFF();
     0032 18rr                      1-  658     	BSR	_PORTB,1
                                    1-  659     	.line	156, "main.c"; 	if(batStatus == 0 || batStatus == 2 || (batStatus == 3 && shandeng == 0))
                                    1-  660     	BANKSEL	_batStatus
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  661     	MOVR	_batStatus,W
     0035 0D03                      1-  662     	BTRSC	STATUS,2
     0036 3rrr                      1-  663     	LGOTO	_00126_DS_
     0037 01rr                      1-  664     	MOVR	_batStatus,W
     0038 2402                      1-  665     	XORIA	0x02
     0039 0D03                      1-  666     	BTRSC	STATUS,2
     003A 3rrr                      1-  667     	LGOTO	_00126_DS_
     003B 01rr                      1-  668     	MOVR	_batStatus,W
     003C 2403                      1-  669     	XORIA	0x03
     003D 0903                      1-  670     	BTRSS	STATUS,2
     003E 3rrr                      1-  671     	LGOTO	_00135_DS_
                                    1-  672     	BANKSEL	_shandeng
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1-  673     	MOVR	_shandeng,W
     0041 0903                      1-  674     	BTRSS	STATUS,2
     0042 3rrr                      1-  675     	LGOTO	_00135_DS_
     0043                           1-  676     _00126_DS_:
                                    1-  677     	.line	157, "main.c"; 	LED4OFF();
     0043 18rr                      1-  678     	BSR	_PORTB,1
     0044 3rrr                      1-  679     	LGOTO	_00135_DS_
     0045                           1-  680     _00134_DS_:
                                    1-  681     	.line	161, "main.c"; 	LED3OFF();
     0045 1Frr                      1-  682     	BCR	_PORTA,7
                                    1-  683     	.line	162, "main.c"; 	if(batStatus == 3)
                                    1-  684     	BANKSEL	_batStatus
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1-  685     	MOVR	_batStatus,W
     0048 2403                      1-  686     	XORIA	0x03
     0049 0D03                      1-  687     	BTRSC	STATUS,2
                                    1-  688     	.line	163, "main.c"; 	LED2OFF();
     004A 1Frr                      1-  689     	BCR	_PORTA,6
     004B                           1-  690     _00135_DS_:
                                    1-  691     	.line	165, "main.c"; 	if(chrgStatus == 0)
                                    1-  692     	BANKSEL	_chrgStatus
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1-  693     	MOVR	_chrgStatus,W
     004D 0D03                      1-  694     	BTRSC	STATUS,2
                                    1-  695     	.line	167, "main.c"; 	CHRGON();
     004E 19rr                      1-  696     	BSR	_PORTB,2
                                    1-  697     	.line	169, "main.c"; 	if(workStatus == 1 && overFlag == 0 && chrgStatus < 2)
                                    1-  698     	BANKSEL	_workStatus
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1-  699     	MOVR	_workStatus,W
     0051 2401                      1-  700     	XORIA	0x01
     0052 0903                      1-  701     	BTRSS	STATUS,2
     0053 3rrr                      1-  702     	LGOTO	_00151_DS_
                                    1-  703     	BANKSEL	_overFlag
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 01rr                      1-  704     	MOVR	_overFlag,W
     0056 0903                      1-  705     	BTRSS	STATUS,2
     0057 3rrr                      1-  706     	LGOTO	_00151_DS_
                                    1-  707     	BANKSEL	r0x1045
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 01rr                      1-  708     	MOVR	r0x1045,W
     005A 0D03                      1-  709     	BTRSC	STATUS,2
     005B 3rrr                      1-  710     	LGOTO	_00151_DS_
                                    1-  711     	.line	171, "main.c"; 	POWERON();
     005C 18rr                      1-  712     	BSR	_PORTA,0
                                    1-  713     	.line	172, "main.c"; 	LED3ON();
     005D 1Brr                      1-  714     	BSR	_PORTA,7
     005E 3rrr                      1-  715     	LGOTO	_00151_DS_
     005F                           1-  716     _00150_DS_:
                                    1-  717     	.line	179, "main.c"; 	if(workStatus == 1)
                                    1-  718     	BANKSEL	r0x1045
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 02rr                      1-  719     	CLRR	r0x1045
                                    1-  720     	BANKSEL	_workStatus
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 01rr                      1-  721     	MOVR	_workStatus,W
     0063 2401                      1-  722     	XORIA	0x01
     0064 0903                      1-  723     	BTRSS	STATUS,2
     0065 3rrr                      1-  724     	LGOTO	_00008_DS_
                                    1-  725     	BANKSEL	r0x1045
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 05rr                      1-  726     	INCR	r0x1045,F
     0068                           1-  727     _00008_DS_:
                                    1-  728     	BANKSEL	r0x1045
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 01rr                      1-  729     	MOVR	r0x1045,W
     006A 0903                      1-  730     	BTRSS	STATUS,2
                                    1-  731     	.line	180, "main.c"; 	CHRGOFF();
     006B 1Drr                      1-  732     	BCR	_PORTB,2
                                    1-  733     	.line	181, "main.c"; 	LED3OFF();
     006C 1Frr                      1-  734     	BCR	_PORTA,7
                                    1-  735     	.line	182, "main.c"; 	chrgStatus = 0;
                                    1-  736     	BANKSEL	_chrgStatus
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 02rr                      1-  737     	CLRR	_chrgStatus
                                    1-  738     	.line	183, "main.c"; 	if(overFlag == 0 && batStatus < 3 && workStatus == 1 && lowBatLock == 0)
                                    1-  739     	BANKSEL	_overFlag
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 01rr                      1-  740     	MOVR	_overFlag,W
     0071 0903                      1-  741     	BTRSS	STATUS,2
     0072 3rrr                      1-  742     	LGOTO	_00151_DS_
                                    1-  743     ;;unsigned compare: left < lit (0x3=3), size=1
     0073 2103                      1-  744     	MOVIA	0x03
                                    1-  745     	BANKSEL	_batStatus
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 04rr                      1-  746     	SUBAR	_batStatus,W
     0076 0C03                      1-  747     	BTRSC	STATUS,0
     0077 3rrr                      1-  748     	LGOTO	_00151_DS_
                                    1-  749     	BANKSEL	r0x1045
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 01rr                      1-  750     	MOVR	r0x1045,W
     007A 0D03                      1-  751     	BTRSC	STATUS,2
     007B 3rrr                      1-  752     	LGOTO	_00151_DS_
                                    1-  753     	BANKSEL	_lowBatLock
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 01rr                      1-  754     	MOVR	_lowBatLock,W
     007E 0D03                      1-  755     	BTRSC	STATUS,2
                                    1-  756     	.line	185, "main.c"; 	POWERON();
     007F 18rr                      1-  757     	BSR	_PORTA,0
     0080                           1-  758     _00151_DS_:
                                    1-  759     	.line	188, "main.c"; 	if(!IntFlag)
                                    1-  760     	BANKSEL	_IntFlag
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1-  761     	MOVR	_IntFlag,W
     0082 0D03                      1-  762     	BTRSC	STATUS,2
     0083 3rrr                      1-  763     	LGOTO	_00164_DS_
                                    1-  764     	.line	190, "main.c"; 	IntFlag = 0;
     0084 02rr                      1-  765     	CLRR	_IntFlag
                                    1-  766     	.line	191, "main.c"; 	keyCtr();
     0085 2rrr                      1-  767     	LCALL	_keyCtr
                                    1-  768     	.line	192, "main.c"; 	chrgWork();
     0086 2rrr                      1-  769     	LCALL	_chrgWork
                                    1-  770     	.line	193, "main.c"; 	if(workStatus == 1)
                                    1-  771     	BANKSEL	_workStatus
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 01rr                      1-  772     	MOVR	_workStatus,W
     0089 2401                      1-  773     	XORIA	0x01
     008A 0D03                      1-  774     	BTRSC	STATUS,2
                                    1-  775     	.line	194, "main.c"; 	workCtr();
     008B 2rrr                      1-  776     	LCALL	_workCtr
                                    1-  777     	.line	195, "main.c"; 	if(((PORTA & 0x20) == 0 || chrgStatus == 2) && workStatus == 0 && keyCount == 0)
     008C 0Arr                      1-  778     	BTRSS	_PORTA,5
     008D 3rrr                      1-  779     	LGOTO	_00161_DS_
                                    1-  780     	BANKSEL	_chrgStatus
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 01rr                      1-  781     	MOVR	_chrgStatus,W
     0090 2402                      1-  782     	XORIA	0x02
     0091 0903                      1-  783     	BTRSS	STATUS,2
     0092 3rrr                      1-  784     	LGOTO	_00164_DS_
     0093                           1-  785     _00161_DS_:
                                    1-  786     	BANKSEL	_workStatus
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 01rr                      1-  787     	MOVR	_workStatus,W
     0095 0903                      1-  788     	BTRSS	STATUS,2
     0096 3rrr                      1-  789     	LGOTO	_00164_DS_
                                    1-  790     	BANKSEL	_keyCount
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 01rr                      1-  791     	MOVR	_keyCount,W
     0099 0903                      1-  792     	BTRSS	STATUS,2
     009A 3rrr                      1-  793     	LGOTO	_00164_DS_
                                    1-  794     	.line	197, "main.c"; 	closeStatus();
     009B 2rrr                      1-  795     	LCALL	_closeStatus
                                    1-  796     	.line	198, "main.c"; 	if(++sleepDelay > 50)
                                    1-  797     	BANKSEL	_sleepDelay
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 05rr                      1-  798     	INCR	_sleepDelay,F
                                    1-  799     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  800     ;;unsigned compare: left >= lit (0x33=51), size=1
     009E 2133                      1-  801     	MOVIA	0x33
     009F 04rr                      1-  802     	SUBAR	_sleepDelay,W
     00A0 0803                      1-  803     	BTRSS	STATUS,0
     00A1 3rrr                      1-  804     	LGOTO	_00164_DS_
                                    1-  805     	.line	199, "main.c"; 	gotoSleep();
     00A2 2rrr                      1-  806     	LCALL	_gotoSleep
     00A3 3rrr                      1-  807     	LGOTO	_00164_DS_
                                    1-  808     	.line	202, "main.c"; 	}
                                    1-  809     	RETURN	
     00A4 0010                      3-   26 m1      ret
                                    1-  810     ; exit point of _main
                                    1-  812     ;***
                                    1-  813     ;  pBlock Stats: dbName = C
                                    1-  814     ;***
                                    1-  815     ;has an exit
                                    1-  816     ;; Starting pCode block
                                    1-  817     .segment "code"; module=main, function=_closeStatus
     0000                           1-  819     _closeStatus:
                                    1-  820     ; 2 exit points
                                    1-  821     	.line	685, "main.c"; 	LED1OFF();
     0000 19rr                      1-  822     	BSR	_PORTB,3
                                    1-  823     	.line	686, "main.c"; 	LED2OFF();
     0001 1Frr                      1-  824     	BCR	_PORTA,6
                                    1-  825     	.line	687, "main.c"; 	LED3OFF();
     0002 1Frr                      1-  826     	BCR	_PORTA,7
                                    1-  827     	.line	688, "main.c"; 	LED4OFF();
     0003 18rr                      1-  828     	BSR	_PORTB,1
                                    1-  829     	.line	689, "main.c"; 	CHRGON();
     0004 19rr                      1-  830     	BSR	_PORTB,2
                                    1-  831     	.line	690, "main.c"; 	POWEROFF();
     0005 1Crr                      1-  832     	BCR	_PORTA,0
                                    1-  833     	.line	691, "main.c"; 	}
                                    1-  834     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  835     ; exit point of _closeStatus
                                    1-  837     ;***
                                    1-  838     ;  pBlock Stats: dbName = C
                                    1-  839     ;***
                                    1-  840     ;has an exit
                                    1-  841     ;1 compiler assigned register :
                                    1-  842     ;   r0x1021
                                    1-  843     ;; Starting pCode block
                                    1-  844     .segment "code"; module=main, function=_keyRead
                                    1-  846     ;local variable name mapping:
     0000                           1-  848     _keyRead:
                                    1-  849     ; 2 exit points
                                    1-  850     	.line	650, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  851     	BANKSEL	r0x1021
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  852     	MOVAR	r0x1021
                                    1-  853     	.line	652, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  854     	MOVR	r0x1021,W
     0003 0D03                      1-  855     	BTRSC	STATUS,2
     0004 3rrr                      1-  856     	LGOTO	_00658_DS_
                                    1-  857     	.line	654, "main.c"; 	keyCount++;
                                    1-  858     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  859     	INCR	_keyCount,F
                                    1-  860     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  861     	.line	655, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1-  862     	MOVIA	0xc8
     0008 04rr                      1-  863     	SUBAR	_keyCount,W
     0009 0803                      1-  864     	BTRSS	STATUS,0
     000A 3rrr                      1-  865     	LGOTO	_00659_DS_
                                    1-  866     	.line	657, "main.c"; 	keyCount = 200;
     000B 21C8                      1-  867     	MOVIA	0xc8
     000C 00rr                      1-  868     	MOVAR	_keyCount
                                    1-  869     	.line	658, "main.c"; 	if(!longPressFlag)
                                    1-  870     	BANKSEL	_longPressFlag
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  871     	MOVR	_longPressFlag,W
     000F 0903                      1-  872     	BTRSS	STATUS,2
     0010 3rrr                      1-  873     	LGOTO	_00659_DS_
                                    1-  874     	.line	660, "main.c"; 	longPressFlag = 1;
     0011 2101                      1-  875     	MOVIA	0x01
     0012 00rr                      1-  876     	MOVAR	_longPressFlag
                                    1-  877     	.line	661, "main.c"; 	return 2;
     0013 2102                      1-  878     	MOVIA	0x02
     0014 3rrr                      1-  879     	LGOTO	_00660_DS_
                                    1-  880     ;;unsigned compare: left < lit (0xC8=200), size=1
     0015                           1-  881     _00658_DS_:
                                    1-  882     	.line	667, "main.c"; 	if(keyCount >= 200)
     0015 21C8                      1-  883     	MOVIA	0xc8
                                    1-  884     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 04rr                      1-  885     	SUBAR	_keyCount,W
     0018 0803                      1-  886     	BTRSS	STATUS,0
     0019 3rrr                      1-  887     	LGOTO	_00655_DS_
                                    1-  888     	.line	669, "main.c"; 	keyCount = 0;
     001A 02rr                      1-  889     	CLRR	_keyCount
                                    1-  890     	.line	670, "main.c"; 	longPressFlag = 0;
                                    1-  891     	BANKSEL	_longPressFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1-  892     	CLRR	_longPressFlag
                                    1-  893     	.line	671, "main.c"; 	return	0;
     001D 2100                      1-  894     	MOVIA	0x00
     001E 3rrr                      1-  895     	LGOTO	_00660_DS_
                                    1-  896     ;;unsigned compare: left < lit (0x8=8), size=1
     001F                           1-  897     _00655_DS_:
                                    1-  898     	.line	673, "main.c"; 	else if(keyCount >= 8)
     001F 2108                      1-  899     	MOVIA	0x08
                                    1-  900     	BANKSEL	_keyCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1-  901     	SUBAR	_keyCount,W
     0022 0803                      1-  902     	BTRSS	STATUS,0
     0023 3rrr                      1-  903     	LGOTO	_00656_DS_
                                    1-  904     	.line	675, "main.c"; 	keyCount = 0;
     0024 02rr                      1-  905     	CLRR	_keyCount
                                    1-  906     	.line	676, "main.c"; 	return	1;
     0025 2101                      1-  907     	MOVIA	0x01
     0026 3rrr                      1-  908     	LGOTO	_00660_DS_
     0027                           1-  909     _00656_DS_:
                                    1-  910     	.line	678, "main.c"; 	keyCount = 0;
                                    1-  911     	BANKSEL	_keyCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1-  912     	CLRR	_keyCount
     0029                           1-  913     _00659_DS_:
                                    1-  914     	.line	680, "main.c"; 	return 0;
     0029 2100                      1-  915     	MOVIA	0x00
     002A                           1-  916     _00660_DS_:
                                    1-  917     	.line	681, "main.c"; 	}
                                    1-  918     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1-  919     ; exit point of _keyRead
                                    1-  921     ;***
                                    1-  922     ;  pBlock Stats: dbName = C
                                    1-  923     ;***
                                    1-  924     ;has an exit
                                    1-  925     ;5 compiler assigned registers:
                                    1-  926     ;   r0x1022
                                    1-  927     ;   STK00
                                    1-  928     ;   r0x1023
                                    1-  929     ;   r0x1024
                                    1-  930     ;   r0x1025
                                    1-  931     ;; Starting pCode block
                                    1-  932     .segment "code"; module=main, function=_delay
                                    1-  934     ;local variable name mapping:
     0000                           1-  939     _delay:
                                    1-  940     ; 2 exit points
                                    1-  941     	.line	644, "main.c"; 	void delay(u16t time)
                                    1-  942     	BANKSEL	r0x1022
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  943     	MOVAR	r0x1022
     0002 01rr                      1-  944     	MOVR	STK00,W
                                    1-  945     	BANKSEL	r0x1023
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  946     	MOVAR	r0x1023
                                    1-  947     	.line	646, "main.c"; 	for(u16t i=0;i<time;i++);
                                    1-  948     	BANKSEL	r0x1024
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  949     	CLRR	r0x1024
                                    1-  950     	BANKSEL	r0x1025
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  951     	CLRR	r0x1025
     0009                           1-  952     _00632_DS_:
                                    1-  953     	BANKSEL	r0x1022
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  954     	MOVR	r0x1022,W
                                    1-  955     	BANKSEL	r0x1025
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  956     	SUBAR	r0x1025,W
     000D 0903                      1-  957     	BTRSS	STATUS,2
     000E 3rrr                      1-  958     	LGOTO	_00643_DS_
                                    1-  959     	BANKSEL	r0x1023
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  960     	MOVR	r0x1023,W
                                    1-  961     	BANKSEL	r0x1024
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  962     	SUBAR	r0x1024,W
     0013                           1-  963     _00643_DS_:
     0013 0C03                      1-  964     	BTRSC	STATUS,0
     0014 3rrr                      1-  965     	LGOTO	_00634_DS_
                                    1-  966     	BANKSEL	r0x1024
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  967     	INCR	r0x1024,F
     0017 0903                      1-  968     	BTRSS	STATUS,2
     0018 3rrr                      1-  969     	LGOTO	_00001_DS_
                                    1-  970     	BANKSEL	r0x1025
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  971     	INCR	r0x1025,F
     001B                           1-  972     _00001_DS_:
     001B 3rrr                      1-  973     	LGOTO	_00632_DS_
     001C                           1-  974     _00634_DS_:
                                    1-  975     	.line	647, "main.c"; 	}
                                    1-  976     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  977     ; exit point of _delay
                                    1-  979     ;***
                                    1-  980     ;  pBlock Stats: dbName = C
                                    1-  981     ;***
                                    1-  982     ;has an exit
                                    1-  983     ;; Starting pCode block
                                    1-  984     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  986     _F_wait_eoc:
                                    1-  987     ; 2 exit points
     0000                           1-  988     _00625_DS_:
                                    1-  989     	.line	638, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  990     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  991     	LGOTO	_00625_DS_
                                    1-  992     	.line	640, "main.c"; 	}
                                    1-  993     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  994     ; exit point of _F_wait_eoc
                                    1-  996     ;***
                                    1-  997     ;  pBlock Stats: dbName = C
                                    1-  998     ;***
                                    1-  999     ;has an exit
                                    1- 1000     ;; Starting pCode block
                                    1- 1001     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1003     _gotoSleep:
                                    1- 1004     ; 2 exit points
                                    1- 1005     	.line	612, "main.c"; 	workStatus = 0;
                                    1- 1006     	BANKSEL	_workStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1007     	CLRR	_workStatus
                                    1- 1008     	.line	614, "main.c"; 	chrgStatus = 0;
                                    1- 1009     	BANKSEL	_chrgStatus
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1010     	CLRR	_chrgStatus
                                    1- 1011     	.line	615, "main.c"; 	firstLow = 0;
                                    1- 1012     	BANKSEL	_firstLow
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1013     	CLRR	_firstLow
                                    1- 1014     	.line	616, "main.c"; 	overFlag = 0;
                                    1- 1015     	BANKSEL	_overFlag
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 1016     	CLRR	_overFlag
                                    1- 1017     	.line	617, "main.c"; 	sleepDelay = 0;
                                    1- 1018     	BANKSEL	_sleepDelay
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 1019     	CLRR	_sleepDelay
                                    1- 1020     	.line	618, "main.c"; 	workStep = 0;
                                    1- 1021     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1- 1022     	CLRR	_workStep
                                    1- 1023     	.line	619, "main.c"; 	AWUCON = 0x28;
     000C 2128                      1- 1024     	MOVIA	0x28
     000D 00rr                      1- 1025     	MOVAR	_AWUCON
                                    1- 1026     	.line	620, "main.c"; 	BWUCON = 0x01;
     000E 2101                      1- 1027     	MOVIA	0x01
     000F 00rr                      1- 1028     	MOVAR	_BWUCON
                                    1- 1029     	.line	621, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0010 210B                      1- 1030     	MOVIA	0x0b
     0011 00rr                      1- 1031     	MOVAR	_INTE
                                    1- 1032     	.line	622, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0012 2118                      1- 1033     	MOVIA	0x18
     0013 00rr                      1- 1034     	MOVAR	_PCON
                                    1- 1035     	.line	623, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0014 02rr                      1- 1036     	CLRR	_INTF
                                    1- 1037     	.line	624, "main.c"; 	CLRWDT();
     0015 0002                      1- 1038     	clrwdt
                                    1- 1039     	.line	625, "main.c"; 	ENI();
     0016 0004                      1- 1040     	ENI
                                    1- 1041     	.line	626, "main.c"; 	SLEEP();
     0017 0001                      1- 1042     	sleep
                                    1- 1043     	.line	627, "main.c"; 	AWUCON = 0x00;
     0018 02rr                      1- 1044     	CLRR	_AWUCON
                                    1- 1045     	.line	628, "main.c"; 	BWUCON = 0x00;
     0019 02rr                      1- 1046     	CLRR	_BWUCON
                                    1- 1047     	.line	629, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     001A 2101                      1- 1048     	MOVIA	0x01
     001B 00rr                      1- 1049     	MOVAR	_INTE
                                    1- 1050     	.line	630, "main.c"; 	INTF = 0;
     001C 02rr                      1- 1051     	CLRR	_INTF
                                    1- 1052     	.line	632, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     001D 21B8                      1- 1053     	MOVIA	0xb8
     001E 00rr                      1- 1054     	MOVAR	_PCON
                                    1- 1055     	.line	634, "main.c"; 	}
                                    1- 1056     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1- 1057     ; exit point of _gotoSleep
                                    1- 1059     ;***
                                    1- 1060     ;  pBlock Stats: dbName = C
                                    1- 1061     ;***
                                    1- 1062     ;has an exit
                                    1- 1063     ;functions called:
                                    1- 1064     ;   _delay
                                    1- 1065     ;   _F_wait_eoc
                                    1- 1066     ;   _delay
                                    1- 1067     ;   _F_wait_eoc
                                    1- 1068     ;7 compiler assigned registers:
                                    1- 1069     ;   r0x1026
                                    1- 1070     ;   STK00
                                    1- 1071     ;   r0x1027
                                    1- 1072     ;   r0x1028
                                    1- 1073     ;   r0x1029
                                    1- 1074     ;   r0x102A
                                    1- 1075     ;   r0x102B
                                    1- 1076     ;; Starting pCode block
                                    1- 1077     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1079     ;local variable name mapping:
     0000                           1- 1082     _F_AIN4_Convert:
                                    1- 1083     ; 2 exit points
                                    1- 1084     	.line	594, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1085     	BANKSEL	r0x1026
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1086     	MOVAR	r0x1026
                                    1- 1087     	.line	596, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1088     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1089     	CLRR	_R_AIN4_DATA_LB
                                    1- 1090     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1091     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1092     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1093     	.line	598, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1094     	MOVIA	0x94
     0008 00rr                      1- 1095     	MOVAR	_ADMD
                                    1- 1096     	.line	599, "main.c"; 	delay(200);	
     0009 21C8                      1- 1097     	MOVIA	0xc8
     000A 00rr                      1- 1098     	MOVAR	STK00
     000B 2100                      1- 1099     	MOVIA	0x00
     000C 2rrr                      1- 1100     	LCALL	_delay
                                    1- 1101     	.line	600, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1102     	MOVIA	0x01
                                    1- 1103     	BANKSEL	r0x1027
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1104     	MOVAR	r0x1027
     0010                           1- 1105     _00614_DS_:
                                    1- 1106     	BANKSEL	r0x1027
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1107     	MOVR	r0x1027,W
                                    1- 1108     	BANKSEL	r0x1026
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1109     	SUBAR	r0x1026,W
     0014 0803                      1- 1110     	BTRSS	STATUS,0
     0015 3rrr                      1- 1111     	LGOTO	_00616_DS_
                                    1- 1112     	.line	602, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1113     	BSR	_ADMDbits,6
                                    1- 1114     	.line	603, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1115     	LCALL	_F_wait_eoc
                                    1- 1116     	.line	604, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1117     	MOVIA	0x0f
     0019 10rr                      1- 1118     	ANDAR	_ADR,W
                                    1- 1119     ;;3	MOVAR	r0x1028
                                    1- 1120     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1121     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1122     	.line	605, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1- 1123     	MOVR	_ADD,W
                                    1- 1124     	BANKSEL	r0x1028
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1125     	MOVAR	r0x1028
                                    1- 1126     ;;1	CLRR	r0x1029
                                    1- 1127     ;;112	MOVR	r0x1028,W
                                    1- 1128     ;;110	MOVAR	r0x102A
     001F 2100                      1- 1129     	MOVIA	0x00
                                    1- 1130     	BANKSEL	r0x102B
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1131     	MOVAR	r0x102B
                                    1- 1132     ;;111	MOVR	r0x102A,W
                                    1- 1133     	BANKSEL	r0x1028
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1134     	MOVR	r0x1028,W
                                    1- 1135     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1136     	ADDAR	_R_AIN4_DATA,F
                                    1- 1137     	BANKSEL	r0x102B
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1138     	MOVR	r0x102B,W
     0028 0C03                      1- 1139     	BTRSC	STATUS,0
     0029 05rr                      1- 1140     	INCR	r0x102B,W
     002A 0D03                      1- 1141     	BTRSC	STATUS,2
     002B 3rrr                      1- 1142     	LGOTO	_00002_DS_
                                    1- 1143     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1144     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1- 1145     _00002_DS_:
                                    1- 1146     	.line	600, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1147     	BANKSEL	r0x1027
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1148     	INCR	r0x1027,F
     0030 3rrr                      1- 1149     	LGOTO	_00614_DS_
     0031                           1- 1150     _00616_DS_:
                                    1- 1151     	.line	607, "main.c"; 	}
                                    1- 1152     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1153     ; exit point of _F_AIN4_Convert
                                    1- 1155     ;***
                                    1- 1156     ;  pBlock Stats: dbName = C
                                    1- 1157     ;***
                                    1- 1158     ;has an exit
                                    1- 1159     ;functions called:
                                    1- 1160     ;   _delay
                                    1- 1161     ;   _F_wait_eoc
                                    1- 1162     ;   _delay
                                    1- 1163     ;   _F_wait_eoc
                                    1- 1164     ;7 compiler assigned registers:
                                    1- 1165     ;   r0x102C
                                    1- 1166     ;   STK00
                                    1- 1167     ;   r0x102D
                                    1- 1168     ;   r0x102E
                                    1- 1169     ;   r0x102F
                                    1- 1170     ;   r0x1030
                                    1- 1171     ;   r0x1031
                                    1- 1172     ;; Starting pCode block
                                    1- 1173     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1175     ;local variable name mapping:
     0000                           1- 1178     _F_AIN2_Convert:
                                    1- 1179     ; 2 exit points
                                    1- 1180     	.line	578, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1181     	BANKSEL	r0x102C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1182     	MOVAR	r0x102C
                                    1- 1183     	.line	580, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1184     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1185     	CLRR	_R_AIN2_DATA_LB
                                    1- 1186     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1187     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1188     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1189     	.line	582, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1190     	MOVIA	0x92
     0008 00rr                      1- 1191     	MOVAR	_ADMD
                                    1- 1192     	.line	583, "main.c"; 	delay(200);	
     0009 21C8                      1- 1193     	MOVIA	0xc8
     000A 00rr                      1- 1194     	MOVAR	STK00
     000B 2100                      1- 1195     	MOVIA	0x00
     000C 2rrr                      1- 1196     	LCALL	_delay
                                    1- 1197     	.line	584, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1198     	MOVIA	0x01
                                    1- 1199     	BANKSEL	r0x102D
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1200     	MOVAR	r0x102D
     0010                           1- 1201     _00605_DS_:
                                    1- 1202     	BANKSEL	r0x102D
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1203     	MOVR	r0x102D,W
                                    1- 1204     	BANKSEL	r0x102C
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1205     	SUBAR	r0x102C,W
     0014 0803                      1- 1206     	BTRSS	STATUS,0
     0015 3rrr                      1- 1207     	LGOTO	_00607_DS_
                                    1- 1208     	.line	586, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1209     	BSR	_ADMDbits,6
                                    1- 1210     	.line	587, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1211     	LCALL	_F_wait_eoc
                                    1- 1212     	.line	588, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1213     	MOVIA	0x0f
     0019 10rr                      1- 1214     	ANDAR	_ADR,W
                                    1- 1215     ;;3	MOVAR	r0x102E
                                    1- 1216     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1217     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1218     	.line	589, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1219     	MOVR	_ADD,W
                                    1- 1220     	BANKSEL	r0x102E
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1221     	MOVAR	r0x102E
                                    1- 1222     ;;1	CLRR	r0x102F
                                    1- 1223     ;;109	MOVR	r0x102E,W
                                    1- 1224     ;;107	MOVAR	r0x1030
     001F 2100                      1- 1225     	MOVIA	0x00
                                    1- 1226     	BANKSEL	r0x1031
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1227     	MOVAR	r0x1031
                                    1- 1228     ;;108	MOVR	r0x1030,W
                                    1- 1229     	BANKSEL	r0x102E
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1230     	MOVR	r0x102E,W
                                    1- 1231     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1232     	ADDAR	_R_AIN2_DATA,F
                                    1- 1233     	BANKSEL	r0x1031
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1234     	MOVR	r0x1031,W
     0028 0C03                      1- 1235     	BTRSC	STATUS,0
     0029 05rr                      1- 1236     	INCR	r0x1031,W
     002A 0D03                      1- 1237     	BTRSC	STATUS,2
     002B 3rrr                      1- 1238     	LGOTO	_00003_DS_
                                    1- 1239     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1240     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1241     _00003_DS_:
                                    1- 1242     	.line	584, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1243     	BANKSEL	r0x102D
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1244     	INCR	r0x102D,F
     0030 3rrr                      1- 1245     	LGOTO	_00605_DS_
     0031                           1- 1246     _00607_DS_:
                                    1- 1247     	.line	591, "main.c"; 	}
                                    1- 1248     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1249     ; exit point of _F_AIN2_Convert
                                    1- 1251     ;***
                                    1- 1252     ;  pBlock Stats: dbName = C
                                    1- 1253     ;***
                                    1- 1254     ;has an exit
                                    1- 1255     ;functions called:
                                    1- 1256     ;   _delay
                                    1- 1257     ;   _F_wait_eoc
                                    1- 1258     ;   _delay
                                    1- 1259     ;   _F_wait_eoc
                                    1- 1260     ;7 compiler assigned registers:
                                    1- 1261     ;   r0x1032
                                    1- 1262     ;   STK00
                                    1- 1263     ;   r0x1033
                                    1- 1264     ;   r0x1034
                                    1- 1265     ;   r0x1035
                                    1- 1266     ;   r0x1036
                                    1- 1267     ;   r0x1037
                                    1- 1268     ;; Starting pCode block
                                    1- 1269     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1- 1271     ;local variable name mapping:
     0000                           1- 1274     _F_AIN1_Convert:
                                    1- 1275     ; 2 exit points
                                    1- 1276     	.line	563, "main.c"; 	void F_AIN1_Convert(char count)
                                    1- 1277     	BANKSEL	r0x1032
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1278     	MOVAR	r0x1032
                                    1- 1279     	.line	565, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
                                    1- 1280     	BANKSEL	_R_AIN1_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1281     	CLRR	_R_AIN1_DATA_LB
                                    1- 1282     	BANKSEL	_R_AIN1_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1283     	CLRR	_R_AIN1_DATA
     0006 02rr                      1- 1284     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1285     	.line	567, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0007 2191                      1- 1286     	MOVIA	0x91
     0008 00rr                      1- 1287     	MOVAR	_ADMD
                                    1- 1288     	.line	568, "main.c"; 	delay(200);	
     0009 21C8                      1- 1289     	MOVIA	0xc8
     000A 00rr                      1- 1290     	MOVAR	STK00
     000B 2100                      1- 1291     	MOVIA	0x00
     000C 2rrr                      1- 1292     	LCALL	_delay
                                    1- 1293     	.line	569, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1294     	MOVIA	0x01
                                    1- 1295     	BANKSEL	r0x1033
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1296     	MOVAR	r0x1033
     0010                           1- 1297     _00596_DS_:
                                    1- 1298     	BANKSEL	r0x1033
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1299     	MOVR	r0x1033,W
                                    1- 1300     	BANKSEL	r0x1032
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1301     	SUBAR	r0x1032,W
     0014 0803                      1- 1302     	BTRSS	STATUS,0
     0015 3rrr                      1- 1303     	LGOTO	_00598_DS_
                                    1- 1304     	.line	571, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1305     	BSR	_ADMDbits,6
                                    1- 1306     	.line	572, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1307     	LCALL	_F_wait_eoc
                                    1- 1308     	.line	573, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1309     	MOVIA	0x0f
     0019 10rr                      1- 1310     	ANDAR	_ADR,W
                                    1- 1311     ;;3	MOVAR	r0x1034
                                    1- 1312     	BANKSEL	_R_AIN1_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1313     	ADDAR	_R_AIN1_DATA_LB,F
                                    1- 1314     	.line	574, "main.c"; 	R_AIN1_DATA    += ADD; 
     001C 01rr                      1- 1315     	MOVR	_ADD,W
                                    1- 1316     	BANKSEL	r0x1034
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1317     	MOVAR	r0x1034
                                    1- 1318     ;;1	CLRR	r0x1035
                                    1- 1319     ;;106	MOVR	r0x1034,W
                                    1- 1320     ;;104	MOVAR	r0x1036
     001F 2100                      1- 1321     	MOVIA	0x00
                                    1- 1322     	BANKSEL	r0x1037
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1323     	MOVAR	r0x1037
                                    1- 1324     ;;105	MOVR	r0x1036,W
                                    1- 1325     	BANKSEL	r0x1034
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1326     	MOVR	r0x1034,W
                                    1- 1327     	BANKSEL	_R_AIN1_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1328     	ADDAR	_R_AIN1_DATA,F
                                    1- 1329     	BANKSEL	r0x1037
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1330     	MOVR	r0x1037,W
     0028 0C03                      1- 1331     	BTRSC	STATUS,0
     0029 05rr                      1- 1332     	INCR	r0x1037,W
     002A 0D03                      1- 1333     	BTRSC	STATUS,2
     002B 3rrr                      1- 1334     	LGOTO	_00004_DS_
                                    1- 1335     	BANKSEL	_R_AIN1_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1336     	ADDAR	(_R_AIN1_DATA + 1),F
     002E                           1- 1337     _00004_DS_:
                                    1- 1338     	.line	569, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1339     	BANKSEL	r0x1033
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1340     	INCR	r0x1033,F
     0030 3rrr                      1- 1341     	LGOTO	_00596_DS_
     0031                           1- 1342     _00598_DS_:
                                    1- 1343     	.line	576, "main.c"; 	}
                                    1- 1344     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1345     ; exit point of _F_AIN1_Convert
                                    1- 1347     ;***
                                    1- 1348     ;  pBlock Stats: dbName = C
                                    1- 1349     ;***
                                    1- 1350     ;has an exit
                                    1- 1351     ;functions called:
                                    1- 1352     ;   _F_AIN4_Convert
                                    1- 1353     ;   _F_AIN4_Convert
                                    1- 1354     ;4 compiler assigned registers:
                                    1- 1355     ;   r0x1038
                                    1- 1356     ;   r0x1039
                                    1- 1357     ;   r0x103A
                                    1- 1358     ;   r0x103B
                                    1- 1359     ;; Starting pCode block
                                    1- 1360     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1362     _checkOutA:
                                    1- 1363     ; 2 exit points
                                    1- 1364     	.line	520, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1365     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1366     	CLRR	_R_AIN4_DATA_LB
                                    1- 1367     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1368     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1369     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1370     	.line	521, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1371     	MOVIA	0x08
     0006 2rrr                      1- 1372     	LCALL	_F_AIN4_Convert
                                    1- 1373     	.line	522, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1374     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1375     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1376     	ANDIA	0xf0
     000A 00rr                      1- 1377     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1378     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1379     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1380     	ANDIA	0x0f
     000E 11rr                      1- 1381     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1382     	XORAR	_R_AIN4_DATA,F
                                    1- 1383     	.line	523, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1384     	MOVIA	0xf0
                                    1- 1385     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1386     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1387     	.line	524, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1388     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1389     	BANKSEL	r0x1038
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1390     	MOVAR	r0x1038
                                    1- 1391     ;;114	CLRR	r0x1039
                                    1- 1392     ;;103	MOVR	r0x1038,W
                                    1- 1393     ;;101	MOVAR	r0x103A
     0016 2100                      1- 1394     	MOVIA	0x00
                                    1- 1395     	BANKSEL	r0x103B
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1396     	MOVAR	r0x103B
                                    1- 1397     ;;102	MOVR	r0x103A,W
                                    1- 1398     	BANKSEL	r0x1038
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1399     	MOVR	r0x1038,W
                                    1- 1400     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1401     	ADDAR	_R_AIN4_DATA,F
                                    1- 1402     	BANKSEL	r0x103B
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1403     	MOVR	r0x103B,W
     001F 0C03                      1- 1404     	BTRSC	STATUS,0
     0020 05rr                      1- 1405     	INCR	r0x103B,W
     0021 0D03                      1- 1406     	BTRSC	STATUS,2
     0022 3rrr                      1- 1407     	LGOTO	_00005_DS_
                                    1- 1408     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1409     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1410     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1411     _00005_DS_:
                                    1- 1412     	.line	525, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1413     	BCR	STATUS,0
                                    1- 1414     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1415     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1416     	RRR	_R_AIN4_DATA,F
                                    1- 1417     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1418     	BCR	STATUS,0
     002A 13rr                      1- 1419     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1420     	RRR	_R_AIN4_DATA,F
                                    1- 1421     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1422     	BCR	STATUS,0
     002D 13rr                      1- 1423     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1424     	RRR	_R_AIN4_DATA,F
                                    1- 1425     	.line	527, "main.c"; 	if(debug)
                                    1- 1426     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1427     	MOVR	_debug,W
     0031 0D03                      1- 1428     	BTRSC	STATUS,2
     0032 3rrr                      1- 1429     	LGOTO	_00566_DS_
                                    1- 1430     	.line	529, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 214C                      1- 1431     	MOVIA	0x4c
                                    1- 1432     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1433     	MOVAR	_R_AIN4_DATA
     0036 02rr                      1- 1434     	CLRR	(_R_AIN4_DATA + 1)
     0037                           1- 1435     _00566_DS_:
                                    1- 1436     	.line	532, "main.c"; 	if(chrgStatus == 1)
                                    1- 1437     	BANKSEL	_chrgStatus
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1- 1438     	MOVR	_chrgStatus,W
     0039 2401                      1- 1439     	XORIA	0x01
     003A 0903                      1- 1440     	BTRSS	STATUS,2
     003B 3rrr                      1- 1441     	LGOTO	_00568_DS_
                                    1- 1442     	.line	534, "main.c"; 	overNub = 78;
     003C 214E                      1- 1443     	MOVIA	0x4e
                                    1- 1444     	BANKSEL	_overNub
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 00rr                      1- 1445     	MOVAR	_overNub
     003F 3rrr                      1- 1446     	LGOTO	_00569_DS_
     0040                           1- 1447     _00568_DS_:
                                    1- 1448     	.line	538, "main.c"; 	overNub = 58;
     0040 213A                      1- 1449     	MOVIA	0x3a
                                    1- 1450     	BANKSEL	_overNub
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 00rr                      1- 1451     	MOVAR	_overNub
     0043                           1- 1452     _00569_DS_:
                                    1- 1453     	.line	540, "main.c"; 	if(R_AIN4_DATA < overNub)
                                    1- 1454     	BANKSEL	_overNub
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 01rr                      1- 1455     	MOVR	_overNub,W
                                    1- 1456     	BANKSEL	r0x1038
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 00rr                      1- 1457     	MOVAR	r0x1038
                                    1- 1458     ;;113	CLRR	r0x1039
     0047 2100                      1- 1459     	MOVIA	0x00
                                    1- 1460     	BANKSEL	_R_AIN4_DATA
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 04rr                      1- 1461     	SUBAR	(_R_AIN4_DATA + 1),W
     004A 0903                      1- 1462     	BTRSS	STATUS,2
     004B 3rrr                      1- 1463     	LGOTO	_00589_DS_
                                    1- 1464     	BANKSEL	r0x1038
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 01rr                      1- 1465     	MOVR	r0x1038,W
                                    1- 1466     	BANKSEL	_R_AIN4_DATA
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 04rr                      1- 1467     	SUBAR	_R_AIN4_DATA,W
     0050                           1- 1468     _00589_DS_:
     0050 0C03                      1- 1469     	BTRSC	STATUS,0
     0051 3rrr                      1- 1470     	LGOTO	_00571_DS_
                                    1- 1471     	.line	542, "main.c"; 	overTime = 0;
                                    1- 1472     	BANKSEL	_overTime
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 02rr                      1- 1473     	CLRR	_overTime
     0054 3rrr                      1- 1474     	LGOTO	_00572_DS_
     0055                           1- 1475     _00571_DS_:
                                    1- 1476     	.line	546, "main.c"; 	overTime++;
                                    1- 1477     	BANKSEL	_overTime
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 05rr                      1- 1478     	INCR	_overTime,F
     0057                           1- 1479     _00572_DS_:
                                    1- 1480     	.line	548, "main.c"; 	if(++overTime >= 100)
                                    1- 1481     	BANKSEL	_overTime
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 05rr                      1- 1482     	INCR	_overTime,F
                                    1- 1483     ;;unsigned compare: left < lit (0x64=100), size=1
     0059 2164                      1- 1484     	MOVIA	0x64
     005A 04rr                      1- 1485     	SUBAR	_overTime,W
     005B 0803                      1- 1486     	BTRSS	STATUS,0
     005C 3rrr                      1- 1487     	LGOTO	_00575_DS_
                                    1- 1488     	.line	550, "main.c"; 	overTime = 10;
     005D 210A                      1- 1489     	MOVIA	0x0a
     005E 00rr                      1- 1490     	MOVAR	_overTime
                                    1- 1491     	.line	551, "main.c"; 	overFlag = 1;
     005F 2101                      1- 1492     	MOVIA	0x01
                                    1- 1493     	BANKSEL	_overFlag
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 00rr                      1- 1494     	MOVAR	_overFlag
                                    1- 1495     	.line	554, "main.c"; 	POWEROFF();
     0062 1Crr                      1- 1496     	BCR	_PORTA,0
                                    1- 1497     	.line	555, "main.c"; 	LED2OFF();
     0063 1Frr                      1- 1498     	BCR	_PORTA,6
                                    1- 1499     	.line	556, "main.c"; 	LED3OFF();
     0064 1Frr                      1- 1500     	BCR	_PORTA,7
     0065                           1- 1501     _00575_DS_:
                                    1- 1502     	.line	560, "main.c"; 	}
                                    1- 1503     	RETURN	
     0065 0010                      3-   26 m1      ret
                                    1- 1504     ; exit point of _checkOutA
                                    1- 1506     ;***
                                    1- 1507     ;  pBlock Stats: dbName = C
                                    1- 1508     ;***
                                    1- 1509     ;has an exit
                                    1- 1510     ;functions called:
                                    1- 1511     ;   _F_AIN2_Convert
                                    1- 1512     ;   _F_AIN2_Convert
                                    1- 1513     ;4 compiler assigned registers:
                                    1- 1514     ;   r0x103C
                                    1- 1515     ;   r0x103D
                                    1- 1516     ;   r0x103E
                                    1- 1517     ;   r0x103F
                                    1- 1518     ;; Starting pCode block
                                    1- 1519     .segment "code"; module=main, function=_checkBat
     0000                           1- 1521     _checkBat:
                                    1- 1522     ; 2 exit points
                                    1- 1523     	.line	420, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1524     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1525     	CLRR	_R_AIN2_DATA_LB
                                    1- 1526     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1527     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1528     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1529     	.line	421, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1530     	MOVIA	0x08
     0006 2rrr                      1- 1531     	LCALL	_F_AIN2_Convert
                                    1- 1532     	.line	422, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1533     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1534     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1535     	ANDIA	0xf0
     000A 00rr                      1- 1536     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1537     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1538     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1539     	ANDIA	0x0f
     000E 11rr                      1- 1540     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1541     	XORAR	_R_AIN2_DATA,F
                                    1- 1542     	.line	423, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1543     	MOVIA	0xf0
                                    1- 1544     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1545     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1546     	.line	424, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1547     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1548     	BANKSEL	r0x103E
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1549     	MOVAR	r0x103E
                                    1- 1550     ;;1	MOVAR	r0x103C
                                    1- 1551     ;;1	CLRR	r0x103D
                                    1- 1552     ;;100	MOVR	r0x103C,W
     0016 2100                      1- 1553     	MOVIA	0x00
                                    1- 1554     	BANKSEL	r0x103F
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1555     	MOVAR	r0x103F
                                    1- 1556     	BANKSEL	r0x103E
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1557     	MOVR	r0x103E,W
                                    1- 1558     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1559     	ADDAR	_R_AIN2_DATA,F
                                    1- 1560     	BANKSEL	r0x103F
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1561     	MOVR	r0x103F,W
     001F 0C03                      1- 1562     	BTRSC	STATUS,0
     0020 05rr                      1- 1563     	INCR	r0x103F,W
     0021 0D03                      1- 1564     	BTRSC	STATUS,2
     0022 3rrr                      1- 1565     	LGOTO	_00006_DS_
                                    1- 1566     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1567     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1568     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1569     _00006_DS_:
                                    1- 1570     	.line	425, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1571     	BCR	STATUS,0
                                    1- 1572     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1573     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1574     	RRR	_R_AIN2_DATA,F
                                    1- 1575     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1576     	BCR	STATUS,0
     002A 13rr                      1- 1577     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1578     	RRR	_R_AIN2_DATA,F
                                    1- 1579     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1580     	BCR	STATUS,0
     002D 13rr                      1- 1581     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1582     	RRR	_R_AIN2_DATA,F
                                    1- 1583     	.line	426, "main.c"; 	if(debug)
                                    1- 1584     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1585     	MOVR	_debug,W
     0031 0D03                      1- 1586     	BTRSC	STATUS,2
     0032 3rrr                      1- 1587     	LGOTO	_00450_DS_
                                    1- 1588     	.line	428, "main.c"; 	R_AIN2_DATA = BAT;
     0033 21D9                      1- 1589     	MOVIA	0xd9
                                    1- 1590     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1591     	MOVAR	_R_AIN2_DATA
     0036 210E                      1- 1592     	MOVIA	0x0e
     0037 00rr                      1- 1593     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1594     ;;unsigned compare: left < lit (0x9A6=2470), size=2
     0038                           1- 1595     _00450_DS_:
                                    1- 1596     	.line	431, "main.c"; 	if(R_AIN2_DATA < 2470)
     0038 2109                      1- 1597     	MOVIA	0x09
                                    1- 1598     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1599     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1600     	BTRSS	STATUS,2
     003C 3rrr                      1- 1601     	LGOTO	_00550_DS_
     003D 21A6                      1- 1602     	MOVIA	0xa6
     003E 04rr                      1- 1603     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1604     _00550_DS_:
     003F 0C03                      1- 1605     	BTRSC	STATUS,0
     0040 3rrr                      1- 1606     	LGOTO	_00492_DS_
                                    1- 1607     	.line	433, "main.c"; 	if(batStatus == 1)
                                    1- 1608     	BANKSEL	_batStatus
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 1609     	MOVR	_batStatus,W
     0043 2401                      1- 1610     	XORIA	0x01
     0044 0903                      1- 1611     	BTRSS	STATUS,2
     0045 3rrr                      1- 1612     	LGOTO	_00454_DS_
                                    1- 1613     ;;unsigned compare: left < lit (0x99C=2460), size=2
                                    1- 1614     	.line	435, "main.c"; 	if(R_AIN2_DATA < 2460)
     0046 2109                      1- 1615     	MOVIA	0x09
                                    1- 1616     	BANKSEL	_R_AIN2_DATA
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 04rr                      1- 1617     	SUBAR	(_R_AIN2_DATA + 1),W
     0049 0903                      1- 1618     	BTRSS	STATUS,2
     004A 3rrr                      1- 1619     	LGOTO	_00551_DS_
     004B 219C                      1- 1620     	MOVIA	0x9c
     004C 04rr                      1- 1621     	SUBAR	_R_AIN2_DATA,W
     004D                           1- 1622     _00551_DS_:
     004D 0C03                      1- 1623     	BTRSC	STATUS,0
     004E 3rrr                      1- 1624     	LGOTO	_00494_DS_
                                    1- 1625     	.line	437, "main.c"; 	batStatus = 3;//缺电状态
     004F 2103                      1- 1626     	MOVIA	0x03
                                    1- 1627     	BANKSEL	_batStatus
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1- 1628     	MOVAR	_batStatus
                                    1- 1629     	.line	438, "main.c"; 	lowBatLock = 1;
     0052 2101                      1- 1630     	MOVIA	0x01
                                    1- 1631     	BANKSEL	_lowBatLock
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1- 1632     	MOVAR	_lowBatLock
     0055 3rrr                      1- 1633     	LGOTO	_00494_DS_
     0056                           1- 1634     _00454_DS_:
                                    1- 1635     	.line	443, "main.c"; 	batStatus = 3;//缺电状态
     0056 2103                      1- 1636     	MOVIA	0x03
                                    1- 1637     	BANKSEL	_batStatus
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1- 1638     	MOVAR	_batStatus
                                    1- 1639     	.line	444, "main.c"; 	lowBatLock = 1;
     0059 2101                      1- 1640     	MOVIA	0x01
                                    1- 1641     	BANKSEL	_lowBatLock
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1- 1642     	MOVAR	_lowBatLock
     005C 3rrr                      1- 1643     	LGOTO	_00494_DS_
                                    1- 1644     ;;unsigned compare: left < lit (0xAAB=2731), size=2
     005D                           1- 1645     _00492_DS_:
                                    1- 1646     	.line	447, "main.c"; 	else if(R_AIN2_DATA < 2731)
     005D 210A                      1- 1647     	MOVIA	0x0a
                                    1- 1648     	BANKSEL	_R_AIN2_DATA
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 04rr                      1- 1649     	SUBAR	(_R_AIN2_DATA + 1),W
     0060 0903                      1- 1650     	BTRSS	STATUS,2
     0061 3rrr                      1- 1651     	LGOTO	_00552_DS_
     0062 21AB                      1- 1652     	MOVIA	0xab
     0063 04rr                      1- 1653     	SUBAR	_R_AIN2_DATA,W
     0064                           1- 1654     _00552_DS_:
     0064 0C03                      1- 1655     	BTRSC	STATUS,0
     0065 3rrr                      1- 1656     	LGOTO	_00489_DS_
                                    1- 1657     	.line	450, "main.c"; 	if(batStatus == 2)
                                    1- 1658     	BANKSEL	_batStatus
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 01rr                      1- 1659     	MOVR	_batStatus,W
     0068 2402                      1- 1660     	XORIA	0x02
     0069 0903                      1- 1661     	BTRSS	STATUS,2
     006A 3rrr                      1- 1662     	LGOTO	_00464_DS_
                                    1- 1663     ;;unsigned compare: left < lit (0xAA4=2724), size=2
                                    1- 1664     	.line	452, "main.c"; 	if(R_AIN2_DATA < 2724)
     006B 210A                      1- 1665     	MOVIA	0x0a
                                    1- 1666     	BANKSEL	_R_AIN2_DATA
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 04rr                      1- 1667     	SUBAR	(_R_AIN2_DATA + 1),W
     006E 0903                      1- 1668     	BTRSS	STATUS,2
     006F 3rrr                      1- 1669     	LGOTO	_00553_DS_
     0070 21A4                      1- 1670     	MOVIA	0xa4
     0071 04rr                      1- 1671     	SUBAR	_R_AIN2_DATA,W
     0072                           1- 1672     _00553_DS_:
     0072 0C03                      1- 1673     	BTRSC	STATUS,0
     0073 3rrr                      1- 1674     	LGOTO	_00465_DS_
                                    1- 1675     	.line	454, "main.c"; 	batStatus = 1;//低电状态
     0074 2101                      1- 1676     	MOVIA	0x01
                                    1- 1677     	BANKSEL	_batStatus
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 00rr                      1- 1678     	MOVAR	_batStatus
     0077 3rrr                      1- 1679     	LGOTO	_00465_DS_
     0078                           1- 1680     _00464_DS_:
                                    1- 1681     	.line	459, "main.c"; 	if(batStatus == 3)
                                    1- 1682     	BANKSEL	_batStatus
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 01rr                      1- 1683     	MOVR	_batStatus,W
     007A 2403                      1- 1684     	XORIA	0x03
     007B 0903                      1- 1685     	BTRSS	STATUS,2
     007C 3rrr                      1- 1686     	LGOTO	_00461_DS_
                                    1- 1687     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1688     ;;unsigned compare: left >= lit (0x9B1=2481), size=2
                                    1- 1689     	.line	461, "main.c"; 	if(R_AIN2_DATA > 2480)
     007D 2109                      1- 1690     	MOVIA	0x09
                                    1- 1691     	BANKSEL	_R_AIN2_DATA
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 04rr                      1- 1692     	SUBAR	(_R_AIN2_DATA + 1),W
     0080 0903                      1- 1693     	BTRSS	STATUS,2
     0081 3rrr                      1- 1694     	LGOTO	_00554_DS_
     0082 21B1                      1- 1695     	MOVIA	0xb1
     0083 04rr                      1- 1696     	SUBAR	_R_AIN2_DATA,W
     0084                           1- 1697     _00554_DS_:
     0084 0803                      1- 1698     	BTRSS	STATUS,0
     0085 3rrr                      1- 1699     	LGOTO	_00465_DS_
                                    1- 1700     	.line	463, "main.c"; 	batStatus = 1;//低电状态
     0086 2101                      1- 1701     	MOVIA	0x01
                                    1- 1702     	BANKSEL	_batStatus
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 00rr                      1- 1703     	MOVAR	_batStatus
     0089 3rrr                      1- 1704     	LGOTO	_00465_DS_
     008A                           1- 1705     _00461_DS_:
                                    1- 1706     	.line	467, "main.c"; 	batStatus = 1;//低电状态
     008A 2101                      1- 1707     	MOVIA	0x01
                                    1- 1708     	BANKSEL	_batStatus
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 00rr                      1- 1709     	MOVAR	_batStatus
     008D                           1- 1710     _00465_DS_:
                                    1- 1711     	.line	469, "main.c"; 	batLowTime = 0;
                                    1- 1712     	BANKSEL	_batLowTime
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 02rr                      1- 1713     	CLRR	_batLowTime
                                    1- 1714     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1715     ;;unsigned compare: left >= lit (0x9B1=2481), size=2
                                    1- 1716     	.line	470, "main.c"; 	if(R_AIN2_DATA > 2480)
     008F 2109                      1- 1717     	MOVIA	0x09
                                    1- 1718     	BANKSEL	_R_AIN2_DATA
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 04rr                      1- 1719     	SUBAR	(_R_AIN2_DATA + 1),W
     0092 0903                      1- 1720     	BTRSS	STATUS,2
     0093 3rrr                      1- 1721     	LGOTO	_00555_DS_
     0094 21B1                      1- 1722     	MOVIA	0xb1
     0095 04rr                      1- 1723     	SUBAR	_R_AIN2_DATA,W
     0096                           1- 1724     _00555_DS_:
     0096 0803                      1- 1725     	BTRSS	STATUS,0
     0097 3rrr                      1- 1726     	LGOTO	_00494_DS_
                                    1- 1727     	.line	471, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1728     	BANKSEL	_firstLow
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 02rr                      1- 1729     	CLRR	_firstLow
     009A 3rrr                      1- 1730     	LGOTO	_00494_DS_
                                    1- 1731     ;;unsigned compare: left < lit (0xC9C=3228), size=2
     009B                           1- 1732     _00489_DS_:
                                    1- 1733     	.line	473, "main.c"; 	else if(R_AIN2_DATA < 3228)  //16V
     009B 210C                      1- 1734     	MOVIA	0x0c
                                    1- 1735     	BANKSEL	_R_AIN2_DATA
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 04rr                      1- 1736     	SUBAR	(_R_AIN2_DATA + 1),W
     009E 0903                      1- 1737     	BTRSS	STATUS,2
     009F 3rrr                      1- 1738     	LGOTO	_00556_DS_
     00A0 219C                      1- 1739     	MOVIA	0x9c
     00A1 04rr                      1- 1740     	SUBAR	_R_AIN2_DATA,W
     00A2                           1- 1741     _00556_DS_:
     00A2 0C03                      1- 1742     	BTRSC	STATUS,0
     00A3 3rrr                      1- 1743     	LGOTO	_00486_DS_
                                    1- 1744     	.line	475, "main.c"; 	if(batStatus == 2)
                                    1- 1745     	BANKSEL	_batStatus
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 01rr                      1- 1746     	MOVR	_batStatus,W
     00A6 2402                      1- 1747     	XORIA	0x02
     00A7 0903                      1- 1748     	BTRSS	STATUS,2
     00A8 3rrr                      1- 1749     	LGOTO	_00476_DS_
                                    1- 1750     ;;unsigned compare: left < lit (0xC8A=3210), size=2
                                    1- 1751     	.line	477, "main.c"; 	if(R_AIN2_DATA < 3210)
     00A9 210C                      1- 1752     	MOVIA	0x0c
                                    1- 1753     	BANKSEL	_R_AIN2_DATA
     00AA rrrr                      3-   71 m1      .banksel ram_address
     00AB 04rr                      1- 1754     	SUBAR	(_R_AIN2_DATA + 1),W
     00AC 0903                      1- 1755     	BTRSS	STATUS,2
     00AD 3rrr                      1- 1756     	LGOTO	_00557_DS_
     00AE 218A                      1- 1757     	MOVIA	0x8a
     00AF 04rr                      1- 1758     	SUBAR	_R_AIN2_DATA,W
     00B0                           1- 1759     _00557_DS_:
     00B0 0C03                      1- 1760     	BTRSC	STATUS,0
     00B1 3rrr                      1- 1761     	LGOTO	_00494_DS_
                                    1- 1762     	.line	479, "main.c"; 	batStatus = 0;//正常状态
                                    1- 1763     	BANKSEL	_batStatus
     00B2 rrrr                      3-   71 m1      .banksel ram_address
     00B3 02rr                      1- 1764     	CLRR	_batStatus
                                    1- 1765     	.line	480, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1766     	BANKSEL	_firstLow
     00B4 rrrr                      3-   71 m1      .banksel ram_address
     00B5 02rr                      1- 1767     	CLRR	_firstLow
     00B6 3rrr                      1- 1768     	LGOTO	_00494_DS_
     00B7                           1- 1769     _00476_DS_:
                                    1- 1770     	.line	485, "main.c"; 	if(batStatus == 1)
                                    1- 1771     	BANKSEL	_batStatus
     00B7 rrrr                      3-   71 m1      .banksel ram_address
     00B8 01rr                      1- 1772     	MOVR	_batStatus,W
     00B9 2401                      1- 1773     	XORIA	0x01
     00BA 0903                      1- 1774     	BTRSS	STATUS,2
     00BB 3rrr                      1- 1775     	LGOTO	_00473_DS_
                                    1- 1776     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1777     ;;unsigned compare: left >= lit (0xAC4=2756), size=2
                                    1- 1778     	.line	487, "main.c"; 	if(R_AIN2_DATA > 2755)
     00BC 210A                      1- 1779     	MOVIA	0x0a
                                    1- 1780     	BANKSEL	_R_AIN2_DATA
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 04rr                      1- 1781     	SUBAR	(_R_AIN2_DATA + 1),W
     00BF 0903                      1- 1782     	BTRSS	STATUS,2
     00C0 3rrr                      1- 1783     	LGOTO	_00558_DS_
     00C1 21C4                      1- 1784     	MOVIA	0xc4
     00C2 04rr                      1- 1785     	SUBAR	_R_AIN2_DATA,W
     00C3                           1- 1786     _00558_DS_:
     00C3 0803                      1- 1787     	BTRSS	STATUS,0
     00C4 3rrr                      1- 1788     	LGOTO	_00474_DS_
                                    1- 1789     	.line	489, "main.c"; 	batStatus = 0;//正常状态
                                    1- 1790     	BANKSEL	_batStatus
     00C5 rrrr                      3-   71 m1      .banksel ram_address
     00C6 02rr                      1- 1791     	CLRR	_batStatus
     00C7 3rrr                      1- 1792     	LGOTO	_00474_DS_
     00C8                           1- 1793     _00473_DS_:
                                    1- 1794     	.line	494, "main.c"; 	batStatus = 0;//正常状态
                                    1- 1795     	BANKSEL	_batStatus
     00C8 rrrr                      3-   71 m1      .banksel ram_address
     00C9 02rr                      1- 1796     	CLRR	_batStatus
     00CA                           1- 1797     _00474_DS_:
                                    1- 1798     	.line	496, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1799     	BANKSEL	_firstLow
     00CA rrrr                      3-   71 m1      .banksel ram_address
     00CB 02rr                      1- 1800     	CLRR	_firstLow
     00CC 3rrr                      1- 1801     	LGOTO	_00494_DS_
                                    1- 1802     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1803     ;;unsigned compare: left >= lit (0xC9D=3229), size=2
     00CD                           1- 1804     _00486_DS_:
                                    1- 1805     	.line	499, "main.c"; 	else if(R_AIN2_DATA > 3228)
     00CD 210C                      1- 1806     	MOVIA	0x0c
                                    1- 1807     	BANKSEL	_R_AIN2_DATA
     00CE rrrr                      3-   71 m1      .banksel ram_address
     00CF 04rr                      1- 1808     	SUBAR	(_R_AIN2_DATA + 1),W
     00D0 0903                      1- 1809     	BTRSS	STATUS,2
     00D1 3rrr                      1- 1810     	LGOTO	_00559_DS_
     00D2 219D                      1- 1811     	MOVIA	0x9d
     00D3 04rr                      1- 1812     	SUBAR	_R_AIN2_DATA,W
     00D4                           1- 1813     _00559_DS_:
     00D4 0803                      1- 1814     	BTRSS	STATUS,0
     00D5 3rrr                      1- 1815     	LGOTO	_00494_DS_
                                    1- 1816     	.line	501, "main.c"; 	if(batStatus == 0)
                                    1- 1817     	BANKSEL	_batStatus
     00D6 rrrr                      3-   71 m1      .banksel ram_address
     00D7 01rr                      1- 1818     	MOVR	_batStatus,W
     00D8 0903                      1- 1819     	BTRSS	STATUS,2
     00D9 3rrr                      1- 1820     	LGOTO	_00481_DS_
                                    1- 1821     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1822     ;;unsigned compare: left >= lit (0xCA2=3234), size=2
                                    1- 1823     	.line	503, "main.c"; 	if(R_AIN2_DATA > 3233)
     00DA 210C                      1- 1824     	MOVIA	0x0c
                                    1- 1825     	BANKSEL	_R_AIN2_DATA
     00DB rrrr                      3-   71 m1      .banksel ram_address
     00DC 04rr                      1- 1826     	SUBAR	(_R_AIN2_DATA + 1),W
     00DD 0903                      1- 1827     	BTRSS	STATUS,2
     00DE 3rrr                      1- 1828     	LGOTO	_00560_DS_
     00DF 21A2                      1- 1829     	MOVIA	0xa2
     00E0 04rr                      1- 1830     	SUBAR	_R_AIN2_DATA,W
     00E1                           1- 1831     _00560_DS_:
     00E1 0803                      1- 1832     	BTRSS	STATUS,0
     00E2 3rrr                      1- 1833     	LGOTO	_00482_DS_
                                    1- 1834     	.line	505, "main.c"; 	batStatus = 2;//满电状态
     00E3 2102                      1- 1835     	MOVIA	0x02
                                    1- 1836     	BANKSEL	_batStatus
     00E4 rrrr                      3-   71 m1      .banksel ram_address
     00E5 00rr                      1- 1837     	MOVAR	_batStatus
     00E6 3rrr                      1- 1838     	LGOTO	_00482_DS_
     00E7                           1- 1839     _00481_DS_:
                                    1- 1840     	.line	510, "main.c"; 	batStatus = 2;//满电状态
     00E7 2102                      1- 1841     	MOVIA	0x02
                                    1- 1842     	BANKSEL	_batStatus
     00E8 rrrr                      3-   71 m1      .banksel ram_address
     00E9 00rr                      1- 1843     	MOVAR	_batStatus
     00EA                           1- 1844     _00482_DS_:
                                    1- 1845     	.line	512, "main.c"; 	batLowTime = 0;
                                    1- 1846     	BANKSEL	_batLowTime
     00EA rrrr                      3-   71 m1      .banksel ram_address
     00EB 02rr                      1- 1847     	CLRR	_batLowTime
                                    1- 1848     	.line	513, "main.c"; 	firstLow = 0;	//重置低电压
                                    1- 1849     	BANKSEL	_firstLow
     00EC rrrr                      3-   71 m1      .banksel ram_address
     00ED 02rr                      1- 1850     	CLRR	_firstLow
     00EE                           1- 1851     _00494_DS_:
                                    1- 1852     	.line	516, "main.c"; 	}
                                    1- 1853     	RETURN	
     00EE 0010                      3-   26 m1      ret
                                    1- 1854     ; exit point of _checkBat
                                    1- 1856     ;***
                                    1- 1857     ;  pBlock Stats: dbName = C
                                    1- 1858     ;***
                                    1- 1859     ;has an exit
                                    1- 1860     ;functions called:
                                    1- 1861     ;   _F_AIN1_Convert
                                    1- 1862     ;   _F_AIN1_Convert
                                    1- 1863     ;4 compiler assigned registers:
                                    1- 1864     ;   r0x1040
                                    1- 1865     ;   r0x1041
                                    1- 1866     ;   r0x1042
                                    1- 1867     ;   r0x1043
                                    1- 1868     ;; Starting pCode block
                                    1- 1869     .segment "code"; module=main, function=_checkInV
     0000                           1- 1871     _checkInV:
                                    1- 1872     ; 2 exit points
                                    1- 1873     	.line	373, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA_LB = 0x00;
                                    1- 1874     	BANKSEL	_R_AIN1_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1875     	CLRR	_R_AIN1_DATA_LB
                                    1- 1876     	BANKSEL	_R_AIN1_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1877     	CLRR	_R_AIN1_DATA
     0004 02rr                      1- 1878     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1879     	.line	374, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1880     	MOVIA	0x08
     0006 2rrr                      1- 1881     	LCALL	_F_AIN1_Convert
                                    1- 1882     	.line	375, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1883     	BANKSEL	_R_AIN1_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1884     	SWAPR	(_R_AIN1_DATA + 1),W
     0009 22F0                      1- 1885     	ANDIA	0xf0
     000A 00rr                      1- 1886     	MOVAR	(_R_AIN1_DATA + 1)
     000B 15rr                      1- 1887     	SWAPR	_R_AIN1_DATA,W
     000C 00rr                      1- 1888     	MOVAR	_R_AIN1_DATA
     000D 220F                      1- 1889     	ANDIA	0x0f
     000E 11rr                      1- 1890     	IORAR	(_R_AIN1_DATA + 1),F
     000F 12rr                      1- 1891     	XORAR	_R_AIN1_DATA,F
                                    1- 1892     	.line	376, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1893     	MOVIA	0xf0
                                    1- 1894     	BANKSEL	_R_AIN1_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1895     	ANDAR	_R_AIN1_DATA_LB,F
                                    1- 1896     	.line	377, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1897     	MOVR	_R_AIN1_DATA_LB,W
                                    1- 1898     	BANKSEL	r0x1042
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1899     	MOVAR	r0x1042
                                    1- 1900     ;;1	MOVAR	r0x1040
                                    1- 1901     ;;1	CLRR	r0x1041
                                    1- 1902     ;;99	MOVR	r0x1040,W
     0016 2100                      1- 1903     	MOVIA	0x00
                                    1- 1904     	BANKSEL	r0x1043
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1905     	MOVAR	r0x1043
                                    1- 1906     	BANKSEL	r0x1042
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1907     	MOVR	r0x1042,W
                                    1- 1908     	BANKSEL	_R_AIN1_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1909     	ADDAR	_R_AIN1_DATA,F
                                    1- 1910     	BANKSEL	r0x1043
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1911     	MOVR	r0x1043,W
     001F 0C03                      1- 1912     	BTRSC	STATUS,0
     0020 05rr                      1- 1913     	INCR	r0x1043,W
     0021 0D03                      1- 1914     	BTRSC	STATUS,2
     0022 3rrr                      1- 1915     	LGOTO	_00007_DS_
                                    1- 1916     	BANKSEL	_R_AIN1_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1917     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1- 1918     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1919     _00007_DS_:
                                    1- 1920     	.line	378, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1921     	BCR	STATUS,0
                                    1- 1922     	BANKSEL	_R_AIN1_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1923     	RRR	(_R_AIN1_DATA + 1),F
     0028 13rr                      1- 1924     	RRR	_R_AIN1_DATA,F
                                    1- 1925     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1926     	BCR	STATUS,0
     002A 13rr                      1- 1927     	RRR	(_R_AIN1_DATA + 1),F
     002B 13rr                      1- 1928     	RRR	_R_AIN1_DATA,F
                                    1- 1929     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1930     	BCR	STATUS,0
     002D 13rr                      1- 1931     	RRR	(_R_AIN1_DATA + 1),F
     002E 13rr                      1- 1932     	RRR	_R_AIN1_DATA,F
                                    1- 1933     	.line	379, "main.c"; 	if(debug)
                                    1- 1934     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1935     	MOVR	_debug,W
     0031 0D03                      1- 1936     	BTRSC	STATUS,2
     0032 3rrr                      1- 1937     	LGOTO	_00408_DS_
                                    1- 1938     	.line	381, "main.c"; 	R_AIN1_DATA = INV;
     0033 2110                      1- 1939     	MOVIA	0x10
                                    1- 1940     	BANKSEL	_R_AIN1_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1941     	MOVAR	_R_AIN1_DATA
     0036 210B                      1- 1942     	MOVIA	0x0b
     0037 00rr                      1- 1943     	MOVAR	(_R_AIN1_DATA + 1)
                                    1- 1944     ;;unsigned compare: left < lit (0xB0E=2830), size=2
     0038                           1- 1945     _00408_DS_:
                                    1- 1946     	.line	383, "main.c"; 	if(R_AIN1_DATA < 2830)
     0038 210B                      1- 1947     	MOVIA	0x0b
                                    1- 1948     	BANKSEL	_R_AIN1_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1949     	SUBAR	(_R_AIN1_DATA + 1),W
     003B 0903                      1- 1950     	BTRSS	STATUS,2
     003C 3rrr                      1- 1951     	LGOTO	_00442_DS_
     003D 210E                      1- 1952     	MOVIA	0x0e
     003E 04rr                      1- 1953     	SUBAR	_R_AIN1_DATA,W
     003F                           1- 1954     _00442_DS_:
     003F 0C03                      1- 1955     	BTRSC	STATUS,0
     0040 3rrr                      1- 1956     	LGOTO	_00420_DS_
                                    1- 1957     	.line	385, "main.c"; 	if(R_AIN1_DATA == 1)
                                    1- 1958     	BANKSEL	_R_AIN1_DATA
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 1959     	MOVR	_R_AIN1_DATA,W
     0043 2401                      1- 1960     	XORIA	0x01
     0044 0903                      1- 1961     	BTRSS	STATUS,2
     0045 3rrr                      1- 1962     	LGOTO	_00412_DS_
     0046 01rr                      1- 1963     	MOVR	(_R_AIN1_DATA + 1),W
     0047 2400                      1- 1964     	XORIA	0x00
     0048 0903                      1- 1965     	BTRSS	STATUS,2
     0049 3rrr                      1- 1966     	LGOTO	_00412_DS_
                                    1- 1967     ;;unsigned compare: left < lit (0xB04=2820), size=2
                                    1- 1968     	.line	387, "main.c"; 	if(R_AIN1_DATA < 2820)
     004A 210B                      1- 1969     	MOVIA	0x0b
     004B 04rr                      1- 1970     	SUBAR	(_R_AIN1_DATA + 1),W
     004C 0903                      1- 1971     	BTRSS	STATUS,2
     004D 3rrr                      1- 1972     	LGOTO	_00443_DS_
     004E 2104                      1- 1973     	MOVIA	0x04
     004F 04rr                      1- 1974     	SUBAR	_R_AIN1_DATA,W
     0050                           1- 1975     _00443_DS_:
     0050 0C03                      1- 1976     	BTRSC	STATUS,0
     0051 3rrr                      1- 1977     	LGOTO	_00422_DS_
                                    1- 1978     	.line	389, "main.c"; 	chrgStatus = 2;	//外部电源过低
     0052 2102                      1- 1979     	MOVIA	0x02
                                    1- 1980     	BANKSEL	_chrgStatus
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1- 1981     	MOVAR	_chrgStatus
     0055 3rrr                      1- 1982     	LGOTO	_00422_DS_
     0056                           1- 1983     _00412_DS_:
                                    1- 1984     	.line	395, "main.c"; 	chrgStatus = 2;
     0056 2102                      1- 1985     	MOVIA	0x02
                                    1- 1986     	BANKSEL	_chrgStatus
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1- 1987     	MOVAR	_chrgStatus
     0059 3rrr                      1- 1988     	LGOTO	_00422_DS_
     005A                           1- 1989     _00420_DS_:
                                    1- 1990     	.line	401, "main.c"; 	inLowTime = 0;
                                    1- 1991     	BANKSEL	_inLowTime
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 02rr                      1- 1992     	CLRR	_inLowTime
                                    1- 1993     	.line	402, "main.c"; 	if(chrgStatus == 2)
                                    1- 1994     	BANKSEL	_chrgStatus
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 1995     	MOVR	_chrgStatus,W
     005E 2402                      1- 1996     	XORIA	0x02
     005F 0903                      1- 1997     	BTRSS	STATUS,2
     0060 3rrr                      1- 1998     	LGOTO	_00417_DS_
                                    1- 1999     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2000     ;;unsigned compare: left >= lit (0xB28=2856), size=2
                                    1- 2001     	.line	404, "main.c"; 	if(R_AIN1_DATA > 2855)
     0061 210B                      1- 2002     	MOVIA	0x0b
                                    1- 2003     	BANKSEL	_R_AIN1_DATA
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 04rr                      1- 2004     	SUBAR	(_R_AIN1_DATA + 1),W
     0064 0903                      1- 2005     	BTRSS	STATUS,2
     0065 3rrr                      1- 2006     	LGOTO	_00444_DS_
     0066 2128                      1- 2007     	MOVIA	0x28
     0067 04rr                      1- 2008     	SUBAR	_R_AIN1_DATA,W
     0068                           1- 2009     _00444_DS_:
     0068 0803                      1- 2010     	BTRSS	STATUS,0
     0069 3rrr                      1- 2011     	LGOTO	_00422_DS_
                                    1- 2012     	.line	406, "main.c"; 	chrgStatus = 1;
     006A 2101                      1- 2013     	MOVIA	0x01
                                    1- 2014     	BANKSEL	_chrgStatus
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 00rr                      1- 2015     	MOVAR	_chrgStatus
     006D 3rrr                      1- 2016     	LGOTO	_00422_DS_
     006E                           1- 2017     _00417_DS_:
                                    1- 2018     	.line	410, "main.c"; 	chrgStatus = 1;
     006E 2101                      1- 2019     	MOVIA	0x01
                                    1- 2020     	BANKSEL	_chrgStatus
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 00rr                      1- 2021     	MOVAR	_chrgStatus
     0071                           1- 2022     _00422_DS_:
                                    1- 2023     	.line	416, "main.c"; 	}
                                    1- 2024     	RETURN	
     0071 0010                      3-   26 m1      ret
                                    1- 2025     ; exit point of _checkInV
                                    1- 2027     ;***
                                    1- 2028     ;  pBlock Stats: dbName = C
                                    1- 2029     ;***
                                    1- 2030     ;has an exit
                                    1- 2031     ;functions called:
                                    1- 2032     ;   _delay
                                    1- 2033     ;   _delay
                                    1- 2034     ;1 compiler assigned register :
                                    1- 2035     ;   STK00
                                    1- 2036     ;; Starting pCode block
                                    1- 2037     .segment "code"; module=main, function=_initAD
     0000                           1- 2039     _initAD:
                                    1- 2040     ; 2 exit points
                                    1- 2041     	.line	348, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_Quarter_VDD ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 218B                      1- 2042     	MOVIA	0x8b
     0001 00rr                      1- 2043     	MOVAR	_ADMD
                                    1- 2044     	.line	353, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2045     	CLRR	_ADVREFH
                                    1- 2046     	.line	358, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2047     	MOVIA	0x10
     0004 00rr                      1- 2048     	MOVAR	_ADR
                                    1- 2049     	.line	360, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2050     	MOVIA	0x03
     0006 00rr                      1- 2051     	MOVAR	_ADCR
                                    1- 2052     	.line	363, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2053     	BSR	_ADMDbits,4
                                    1- 2054     	.line	364, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2055     	MOVIA	0x64
     0009 00rr                      1- 2056     	MOVAR	STK00
     000A 2100                      1- 2057     	MOVIA	0x00
     000B 2rrr                      1- 2058     	LCALL	_delay
                                    1- 2059     	.line	367, "main.c"; 	}
                                    1- 2060     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2061     ; exit point of _initAD
                                    1- 2063     ;***
                                    1- 2064     ;  pBlock Stats: dbName = C
                                    1- 2065     ;***
                                    1- 2066     ;has an exit
                                    1- 2067     ;functions called:
                                    1- 2068     ;   _keyRead
                                    1- 2069     ;   _closeStatus
                                    1- 2070     ;   _gotoSleep
                                    1- 2071     ;   _keyRead
                                    1- 2072     ;   _closeStatus
                                    1- 2073     ;   _gotoSleep
                                    1- 2074     ;1 compiler assigned register :
                                    1- 2075     ;   r0x1044
                                    1- 2076     ;; Starting pCode block
                                    1- 2077     .segment "code"; module=main, function=_keyCtr
                                    1- 2079     ;local variable name mapping:
     0000                           1- 2081     _keyCtr:
                                    1- 2082     ; 2 exit points
                                    1- 2083     	.line	315, "main.c"; 	if(chrgStatus == 1 && overFlag == 0)
                                    1- 2084     	BANKSEL	_chrgStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2085     	MOVR	_chrgStatus,W
     0002 2401                      1- 2086     	XORIA	0x01
     0003 0903                      1- 2087     	BTRSS	STATUS,2
     0004 3rrr                      1- 2088     	LGOTO	_00366_DS_
                                    1- 2089     	BANKSEL	_overFlag
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 2090     	MOVR	_overFlag,W
     0007 0903                      1- 2091     	BTRSS	STATUS,2
     0008 3rrr                      1- 2092     	LGOTO	_00366_DS_
                                    1- 2093     	.line	318, "main.c"; 	workStatus = 1;
     0009 2101                      1- 2094     	MOVIA	0x01
                                    1- 2095     	BANKSEL	_workStatus
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 2096     	MOVAR	_workStatus
                                    1- 2097     	.line	320, "main.c"; 	LED3ON();
     000C 1Brr                      1- 2098     	BSR	_PORTA,7
     000D                           1- 2099     _00366_DS_:
                                    1- 2100     	.line	322, "main.c"; 	if(chrgStatus == 0 || chrgStatus == 2 || overFlag == 1)
                                    1- 2101     	BANKSEL	_chrgStatus
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 2102     	MOVR	_chrgStatus,W
     000F 0D03                      1- 2103     	BTRSC	STATUS,2
     0010 3rrr                      1- 2104     	LGOTO	_00374_DS_
     0011 01rr                      1- 2105     	MOVR	_chrgStatus,W
     0012 2402                      1- 2106     	XORIA	0x02
     0013 0D03                      1- 2107     	BTRSC	STATUS,2
     0014 3rrr                      1- 2108     	LGOTO	_00374_DS_
                                    1- 2109     	BANKSEL	_overFlag
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2110     	MOVR	_overFlag,W
     0017 2401                      1- 2111     	XORIA	0x01
     0018 0903                      1- 2112     	BTRSS	STATUS,2
     0019 3rrr                      1- 2113     	LGOTO	_00378_DS_
     001A                           1- 2114     _00374_DS_:
                                    1- 2115     	.line	324, "main.c"; 	char kClick = keyRead(0x01 & ~PORTB);
     001A 07rr                      1- 2116     	COMR	_PORTB,W
                                    1- 2117     	BANKSEL	r0x1044
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 2118     	MOVAR	r0x1044
     001D 2101                      1- 2119     	MOVIA	0x01
     001E 10rr                      1- 2120     	ANDAR	r0x1044,F
     001F 01rr                      1- 2121     	MOVR	r0x1044,W
     0020 2rrr                      1- 2122     	LCALL	_keyRead
                                    1- 2123     	BANKSEL	r0x1044
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 00rr                      1- 2124     	MOVAR	r0x1044
                                    1- 2125     	.line	325, "main.c"; 	if(kClick == 2)
     0023 2402                      1- 2126     	XORIA	0x02
     0024 0903                      1- 2127     	BTRSS	STATUS,2
     0025 3rrr                      1- 2128     	LGOTO	_00378_DS_
                                    1- 2129     	.line	327, "main.c"; 	if(workStatus == 0 || overFlag == 1)
                                    1- 2130     	BANKSEL	_workStatus
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 2131     	MOVR	_workStatus,W
     0028 0D03                      1- 2132     	BTRSC	STATUS,2
     0029 3rrr                      1- 2133     	LGOTO	_00368_DS_
                                    1- 2134     	BANKSEL	_overFlag
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1- 2135     	MOVR	_overFlag,W
     002C 2401                      1- 2136     	XORIA	0x01
     002D 0903                      1- 2137     	BTRSS	STATUS,2
     002E 3rrr                      1- 2138     	LGOTO	_00369_DS_
     002F                           1- 2139     _00368_DS_:
                                    1- 2140     	.line	329, "main.c"; 	overFlag = 0;
                                    1- 2141     	BANKSEL	_overFlag
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1- 2142     	CLRR	_overFlag
                                    1- 2143     	.line	330, "main.c"; 	workStatus = 1;
     0031 2101                      1- 2144     	MOVIA	0x01
                                    1- 2145     	BANKSEL	_workStatus
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1- 2146     	MOVAR	_workStatus
                                    1- 2147     	.line	331, "main.c"; 	lowBatLock = 0;
                                    1- 2148     	BANKSEL	_lowBatLock
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 02rr                      1- 2149     	CLRR	_lowBatLock
     0036 3rrr                      1- 2150     	LGOTO	_00378_DS_
     0037                           1- 2151     _00369_DS_:
                                    1- 2152     	.line	336, "main.c"; 	workStatus = 0;
                                    1- 2153     	BANKSEL	_workStatus
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 02rr                      1- 2154     	CLRR	_workStatus
                                    1- 2155     	.line	337, "main.c"; 	closeStatus();
     0039 2rrr                      1- 2156     	LCALL	_closeStatus
                                    1- 2157     	.line	338, "main.c"; 	gotoSleep();
     003A 2rrr                      1- 2158     	LCALL	_gotoSleep
     003B                           1- 2159     _00378_DS_:
                                    1- 2160     	.line	342, "main.c"; 	}
                                    1- 2161     	RETURN	
     003B 0010                      3-   26 m1      ret
                                    1- 2162     ; exit point of _keyCtr
                                    1- 2164     ;***
                                    1- 2165     ;  pBlock Stats: dbName = C
                                    1- 2166     ;***
                                    1- 2167     ;functions called:
                                    1- 2168     ;   _checkBat
                                    1- 2169     ;   _checkOutA
                                    1- 2170     ;   _checkBat
                                    1- 2171     ;   _checkOutA
                                    1- 2172     ;; Starting pCode block
                                    1- 2173     .segment "code"; module=main, function=_workCtr
     0000                           1- 2175     _workCtr:
                                    1- 2176     ; 0 exit points
                                    1- 2177     	.line	246, "main.c"; 	if(++adCheckTime > 20)
                                    1- 2178     	BANKSEL	_adCheckTime
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 2179     	INCR	_adCheckTime,F
                                    1- 2180     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2181     ;;unsigned compare: left >= lit (0x15=21), size=1
     0002 2115                      1- 2182     	MOVIA	0x15
     0003 04rr                      1- 2183     	SUBAR	_adCheckTime,W
     0004 0C03                      1- 2184     	BTRSC	STATUS,0
                                    1- 2185     	.line	247, "main.c"; 	adCheckTime = 0;
     0005 02rr                      1- 2186     	CLRR	_adCheckTime
                                    1- 2187     	.line	249, "main.c"; 	if(shandeng == 0 && adCheckTime < 5)
                                    1- 2188     	BANKSEL	_shandeng
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1- 2189     	MOVR	_shandeng,W
     0008 0903                      1- 2190     	BTRSS	STATUS,2
     0009 3rrr                      1- 2191     	LGOTO	_00264_DS_
                                    1- 2192     ;;unsigned compare: left < lit (0x5=5), size=1
     000A 2105                      1- 2193     	MOVIA	0x05
                                    1- 2194     	BANKSEL	_adCheckTime
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1- 2195     	SUBAR	_adCheckTime,W
     000D 0803                      1- 2196     	BTRSS	STATUS,0
                                    1- 2197     	.line	250, "main.c"; 	checkBat();
     000E 2rrr                      1- 2198     	LCALL	_checkBat
     000F                           1- 2199     _00264_DS_:
                                    1- 2200     	.line	251, "main.c"; 	if(PORTA & 0x20)
     000F 0Arr                      1- 2201     	BTRSS	_PORTA,5
     0010 3rrr                      1- 2202     	LGOTO	_00285_DS_
                                    1- 2203     	.line	253, "main.c"; 	if(batStatus == 2 || chrgStatus == 2)
                                    1- 2204     	BANKSEL	_batStatus
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2205     	MOVR	_batStatus,W
     0013 2402                      1- 2206     	XORIA	0x02
     0014 0D03                      1- 2207     	BTRSC	STATUS,2
     0015 3rrr                      1- 2208     	LGOTO	_00266_DS_
                                    1- 2209     	BANKSEL	_chrgStatus
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 2210     	MOVR	_chrgStatus,W
     0018 2402                      1- 2211     	XORIA	0x02
     0019 0903                      1- 2212     	BTRSS	STATUS,2
     001A 3rrr                      1- 2213     	LGOTO	_00267_DS_
     001B                           1- 2214     _00266_DS_:
                                    1- 2215     	.line	255, "main.c"; 	LED1OFF();		//充满了，灭灯
     001B 19rr                      1- 2216     	BSR	_PORTB,3
                                    1- 2217     	.line	256, "main.c"; 	CHRGOFF();
     001C 1Drr                      1- 2218     	BCR	_PORTB,2
     001D 3rrr                      1- 2219     	LGOTO	_00268_DS_
     001E                           1- 2220     _00267_DS_:
                                    1- 2221     	.line	260, "main.c"; 	LED1ON();
     001E 1Drr                      1- 2222     	BCR	_PORTB,3
     001F                           1- 2223     _00268_DS_:
                                    1- 2224     	.line	264, "main.c"; 	if(batStatus == 1 && chrgStatus == 2 && overFlag == 0)
                                    1- 2225     	BANKSEL	_batStatus
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 2226     	MOVR	_batStatus,W
     0021 2401                      1- 2227     	XORIA	0x01
     0022 0903                      1- 2228     	BTRSS	STATUS,2
     0023 3rrr                      1- 2229     	LGOTO	_00286_DS_
                                    1- 2230     	BANKSEL	_chrgStatus
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 2231     	MOVR	_chrgStatus,W
     0026 2402                      1- 2232     	XORIA	0x02
     0027 0903                      1- 2233     	BTRSS	STATUS,2
     0028 3rrr                      1- 2234     	LGOTO	_00286_DS_
                                    1- 2235     	BANKSEL	_overFlag
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 2236     	MOVR	_overFlag,W
     002B 0903                      1- 2237     	BTRSS	STATUS,2
     002C 3rrr                      1- 2238     	LGOTO	_00286_DS_
                                    1- 2239     	.line	266, "main.c"; 	LED4ON();
     002D 1Crr                      1- 2240     	BCR	_PORTB,1
     002E 3rrr                      1- 2241     	LGOTO	_00286_DS_
     002F                           1- 2242     _00285_DS_:
                                    1- 2243     	.line	273, "main.c"; 	LED1OFF();		//未充电,电池供电
     002F 19rr                      1- 2244     	BSR	_PORTB,3
                                    1- 2245     	.line	274, "main.c"; 	if(workStatus == 1 && batStatus < 3 && overFlag == 0)
                                    1- 2246     	BANKSEL	_workStatus
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1- 2247     	MOVR	_workStatus,W
     0032 2401                      1- 2248     	XORIA	0x01
     0033 0903                      1- 2249     	BTRSS	STATUS,2
     0034 3rrr                      1- 2250     	LGOTO	_00275_DS_
                                    1- 2251     ;;unsigned compare: left < lit (0x3=3), size=1
     0035 2103                      1- 2252     	MOVIA	0x03
                                    1- 2253     	BANKSEL	_batStatus
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 04rr                      1- 2254     	SUBAR	_batStatus,W
     0038 0C03                      1- 2255     	BTRSC	STATUS,0
     0039 3rrr                      1- 2256     	LGOTO	_00275_DS_
                                    1- 2257     	BANKSEL	_overFlag
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1- 2258     	MOVR	_overFlag,W
     003C 0D03                      1- 2259     	BTRSC	STATUS,2
                                    1- 2260     	.line	276, "main.c"; 	LED2ON();
     003D 1Brr                      1- 2261     	BSR	_PORTA,6
     003E                           1- 2262     _00275_DS_:
                                    1- 2263     	.line	278, "main.c"; 	if(batStatus == 1)
                                    1- 2264     	BANKSEL	_batStatus
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1- 2265     	MOVR	_batStatus,W
     0040 2401                      1- 2266     	XORIA	0x01
     0041 0903                      1- 2267     	BTRSS	STATUS,2
     0042 3rrr                      1- 2268     	LGOTO	_00282_DS_
                                    1- 2269     	.line	280, "main.c"; 	LED4ON();
     0043 1Crr                      1- 2270     	BCR	_PORTB,1
     0044 3rrr                      1- 2271     	LGOTO	_00286_DS_
     0045                           1- 2272     _00282_DS_:
                                    1- 2273     	.line	282, "main.c"; 	else if(batStatus == 0 || batStatus == 2)
                                    1- 2274     	BANKSEL	_batStatus
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1- 2275     	MOVR	_batStatus,W
     0047 0D03                      1- 2276     	BTRSC	STATUS,2
     0048 3rrr                      1- 2277     	LGOTO	_00278_DS_
     0049 01rr                      1- 2278     	MOVR	_batStatus,W
     004A 2402                      1- 2279     	XORIA	0x02
     004B 0D03                      1- 2280     	BTRSC	STATUS,2
     004C                           1- 2281     _00278_DS_:
                                    1- 2282     	.line	284, "main.c"; 	LED4OFF();
     004C 18rr                      1- 2283     	BSR	_PORTB,1
     004D                           1- 2284     _00286_DS_:
                                    1- 2285     	.line	289, "main.c"; 	if(batStatus == 3 && chrgStatus != 1)
                                    1- 2286     	BANKSEL	_batStatus
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1- 2287     	MOVR	_batStatus,W
     004F 2403                      1- 2288     	XORIA	0x03
     0050 0903                      1- 2289     	BTRSS	STATUS,2
     0051 3rrr                      1- 2290     	LGOTO	_00292_DS_
                                    1- 2291     	BANKSEL	_chrgStatus
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1- 2292     	MOVR	_chrgStatus,W
     0054 2401                      1- 2293     	XORIA	0x01
     0055 0D03                      1- 2294     	BTRSC	STATUS,2
     0056 3rrr                      1- 2295     	LGOTO	_00292_DS_
                                    1- 2296     	.line	291, "main.c"; 	if(++firstLowTime >= 10)
                                    1- 2297     	BANKSEL	_firstLowTime
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 05rr                      1- 2298     	INCR	_firstLowTime,F
     0059 210A                      1- 2299     	MOVIA	0x0a
     005A 04rr                      1- 2300     	SUBAR	_firstLowTime,W
     005B 0803                      1- 2301     	BTRSS	STATUS,0
     005C 3rrr                      1- 2302     	LGOTO	_00292_DS_
                                    1- 2303     	.line	293, "main.c"; 	firstLowTime = 0;
     005D 02rr                      1- 2304     	CLRR	_firstLowTime
                                    1- 2305     	.line	294, "main.c"; 	POWEROFF();			//缺电状态关闭负载
     005E 1Crr                      1- 2306     	BCR	_PORTA,0
                                    1- 2307     	.line	295, "main.c"; 	if(firstLow == 0)
                                    1- 2308     	BANKSEL	_firstLow
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 01rr                      1- 2309     	MOVR	_firstLow,W
     0061 0903                      1- 2310     	BTRSS	STATUS,2
     0062 3rrr                      1- 2311     	LGOTO	_00288_DS_
                                    1- 2312     	.line	296, "main.c"; 	shandeng = 6;
     0063 2106                      1- 2313     	MOVIA	0x06
                                    1- 2314     	BANKSEL	_shandeng
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 00rr                      1- 2315     	MOVAR	_shandeng
     0066                           1- 2316     _00288_DS_:
                                    1- 2317     	.line	297, "main.c"; 	firstLow = 1;
     0066 2101                      1- 2318     	MOVIA	0x01
                                    1- 2319     	BANKSEL	_firstLow
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1- 2320     	MOVAR	_firstLow
                                    1- 2321     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2322     ;;unsigned compare: left >= lit (0xB=11), size=1
     0069                           1- 2323     _00292_DS_:
                                    1- 2324     	.line	302, "main.c"; 	if(adCheckTime > 10 && adCheckTime < 15)
     0069 210B                      1- 2325     	MOVIA	0x0b
                                    1- 2326     	BANKSEL	_adCheckTime
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 04rr                      1- 2327     	SUBAR	_adCheckTime,W
     006C 0803                      1- 2328     	BTRSS	STATUS,0
     006D 3rrr                      1- 2329     	LGOTO	_00297_DS_
                                    1- 2330     ;;unsigned compare: left < lit (0xF=15), size=1
     006E 210F                      1- 2331     	MOVIA	0x0f
     006F 04rr                      1- 2332     	SUBAR	_adCheckTime,W
     0070 0803                      1- 2333     	BTRSS	STATUS,0
                                    1- 2334     	.line	303, "main.c"; 	checkOutA();
     0071 2rrr                      1- 2335     	LCALL	_checkOutA
     0072                           1- 2336     _00297_DS_:
                                    1- 2337     	.line	310, "main.c"; 	}
                                    1- 2338     	RETURN	
     0072 0010                      3-   26 m1      ret
                                    1- 2340     ;***
                                    1- 2341     ;  pBlock Stats: dbName = C
                                    1- 2342     ;***
                                    1- 2343     ;has an exit
                                    1- 2344     ;functions called:
                                    1- 2345     ;   _gotoSleep
                                    1- 2346     ;   _checkInV
                                    1- 2347     ;   _gotoSleep
                                    1- 2348     ;   _checkInV
                                    1- 2349     ;; Starting pCode block
                                    1- 2350     .segment "code"; module=main, function=_chrgWork
     0000                           1- 2352     _chrgWork:
                                    1- 2353     ; 2 exit points
                                    1- 2354     	.line	206, "main.c"; 	if(overFlag == 1)
                                    1- 2355     	BANKSEL	_overFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2356     	MOVR	_overFlag,W
     0002 2401                      1- 2357     	XORIA	0x01
     0003 0903                      1- 2358     	BTRSS	STATUS,2
     0004 3rrr                      1- 2359     	LGOTO	_00245_DS_
                                    1- 2360     	.line	208, "main.c"; 	LED2OFF();
     0005 1Frr                      1- 2361     	BCR	_PORTA,6
                                    1- 2362     	.line	209, "main.c"; 	LED3OFF();
     0006 1Frr                      1- 2363     	BCR	_PORTA,7
                                    1- 2364     	.line	210, "main.c"; 	LED4OFF();
     0007 18rr                      1- 2365     	BSR	_PORTB,1
                                    1- 2366     	.line	211, "main.c"; 	POWEROFF();
     0008 1Crr                      1- 2367     	BCR	_PORTA,0
                                    1- 2368     	.line	212, "main.c"; 	gotoSleep();
     0009 2rrr                      1- 2369     	LCALL	_gotoSleep
     000A                           1- 2370     _00245_DS_:
                                    1- 2371     	.line	216, "main.c"; 	if(PORTA & 0x20)
     000A 0Arr                      1- 2372     	BTRSS	_PORTA,5
     000B 3rrr                      1- 2373     	LGOTO	_00256_DS_
                                    1- 2374     	.line	218, "main.c"; 	checkInV();
     000C 2rrr                      1- 2375     	LCALL	_checkInV
                                    1- 2376     	.line	219, "main.c"; 	overFlag = 0;
                                    1- 2377     	BANKSEL	_overFlag
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1- 2378     	CLRR	_overFlag
                                    1- 2379     	.line	220, "main.c"; 	if(chrgStatus == 2)
                                    1- 2380     	BANKSEL	_chrgStatus
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 2381     	MOVR	_chrgStatus,W
     0011 2402                      1- 2382     	XORIA	0x02
     0012 0903                      1- 2383     	BTRSS	STATUS,2
     0013 3rrr                      1- 2384     	LGOTO	_00252_DS_
                                    1- 2385     	.line	223, "main.c"; 	if(workStatus == 1 && batStatus < 3 &&  lowBatLock == 0)
                                    1- 2386     	BANKSEL	_workStatus
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 2387     	MOVR	_workStatus,W
     0016 2401                      1- 2388     	XORIA	0x01
     0017 0903                      1- 2389     	BTRSS	STATUS,2
     0018 3rrr                      1- 2390     	LGOTO	_00247_DS_
                                    1- 2391     ;;unsigned compare: left < lit (0x3=3), size=1
     0019 2103                      1- 2392     	MOVIA	0x03
                                    1- 2393     	BANKSEL	_batStatus
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 04rr                      1- 2394     	SUBAR	_batStatus,W
     001C 0C03                      1- 2395     	BTRSC	STATUS,0
     001D 3rrr                      1- 2396     	LGOTO	_00247_DS_
                                    1- 2397     	BANKSEL	_lowBatLock
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 2398     	MOVR	_lowBatLock,W
     0020 0903                      1- 2399     	BTRSS	STATUS,2
     0021 3rrr                      1- 2400     	LGOTO	_00247_DS_
                                    1- 2401     	.line	225, "main.c"; 	LED2ON();
     0022 1Brr                      1- 2402     	BSR	_PORTA,6
                                    1- 2403     	.line	226, "main.c"; 	POWERON();
     0023 18rr                      1- 2404     	BSR	_PORTA,0
     0024 3rrr                      1- 2405     	LGOTO	_00256_DS_
     0025                           1- 2406     _00247_DS_:
                                    1- 2407     	.line	230, "main.c"; 	LED2OFF();
     0025 1Frr                      1- 2408     	BCR	_PORTA,6
                                    1- 2409     	.line	231, "main.c"; 	LED3OFF();
     0026 1Frr                      1- 2410     	BCR	_PORTA,7
                                    1- 2411     	.line	232, "main.c"; 	LED4OFF();
     0027 18rr                      1- 2412     	BSR	_PORTB,1
                                    1- 2413     	.line	233, "main.c"; 	POWEROFF();
     0028 1Crr                      1- 2414     	BCR	_PORTA,0
     0029 3rrr                      1- 2415     	LGOTO	_00256_DS_
     002A                           1- 2416     _00252_DS_:
                                    1- 2417     	.line	238, "main.c"; 	LED3ON();
     002A 1Brr                      1- 2418     	BSR	_PORTA,7
     002B                           1- 2419     _00256_DS_:
                                    1- 2420     	.line	242, "main.c"; 	}
                                    1- 2421     	RETURN	
     002B 0010                      3-   26 m1      ret
                                    1- 2422     ; exit point of _chrgWork
                                    1- 2425     ;	code size estimation:
                                    1- 2426     ;	  948+  236 =  1184 instructions ( 2840 byte)
                                    1- 2428     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    0000002E
_00003_DS_              Label    0000002E
_00004_DS_              Label    0000002E
_00005_DS_              Label    00000025
_00006_DS_              Label    00000025
_00007_DS_              Label    00000025
_00008_DS_              Label    00000068
_00106_DS_              Label    0000002E
_00107_DS_              Label    0000002F
_00117_DS_              Label    00000034
_00119_DS_              Label    00000038
_00126_DS_              Label    00000043
_00134_DS_              Label    00000045
_00135_DS_              Label    0000004B
_00150_DS_              Label    0000005F
_00151_DS_              Label    00000080
_00161_DS_              Label    00000093
_00164_DS_              Label    0000001E
_00245_DS_              Label    0000000A
_00247_DS_              Label    00000025
_00252_DS_              Label    0000002A
_00256_DS_              Label    0000002B
_00264_DS_              Label    0000000F
_00266_DS_              Label    0000001B
_00267_DS_              Label    0000001E
_00268_DS_              Label    0000001F
_00275_DS_              Label    0000003E
_00278_DS_              Label    0000004C
_00282_DS_              Label    00000045
_00285_DS_              Label    0000002F
_00286_DS_              Label    0000004D
_00288_DS_              Label    00000066
_00292_DS_              Label    00000069
_00297_DS_              Label    00000072
_00366_DS_              Label    0000000D
_00368_DS_              Label    0000002F
_00369_DS_              Label    00000037
_00374_DS_              Label    0000001A
_00378_DS_              Label    0000003B
_00408_DS_              Label    00000038
_00412_DS_              Label    00000056
_00417_DS_              Label    0000006E
_00420_DS_              Label    0000005A
_00422_DS_              Label    00000071
_00442_DS_              Label    0000003F
_00443_DS_              Label    00000050
_00444_DS_              Label    00000068
_00450_DS_              Label    00000038
_00454_DS_              Label    00000056
_00461_DS_              Label    0000008A
_00464_DS_              Label    00000078
_00465_DS_              Label    0000008D
_00473_DS_              Label    000000C8
_00474_DS_              Label    000000CA
_00476_DS_              Label    000000B7
_00481_DS_              Label    000000E7
_00482_DS_              Label    000000EA
_00486_DS_              Label    000000CD
_00489_DS_              Label    0000009B
_00492_DS_              Label    0000005D
_00494_DS_              Label    000000EE
_00550_DS_              Label    0000003F
_00551_DS_              Label    0000004D
_00552_DS_              Label    00000064
_00553_DS_              Label    00000072
_00554_DS_              Label    00000084
_00555_DS_              Label    00000096
_00556_DS_              Label    000000A2
_00557_DS_              Label    000000B0
_00558_DS_              Label    000000C3
_00559_DS_              Label    000000D4
_00560_DS_              Label    000000E1
_00566_DS_              Label    00000037
_00568_DS_              Label    00000040
_00569_DS_              Label    00000043
_00571_DS_              Label    00000055
_00572_DS_              Label    00000057
_00575_DS_              Label    00000065
_00589_DS_              Label    00000050
_00596_DS_              Label    00000010
_00598_DS_              Label    00000031
_00605_DS_              Label    00000010
_00607_DS_              Label    00000031
_00614_DS_              Label    00000010
_00616_DS_              Label    00000031
_00625_DS_              Label    00000000
_00632_DS_              Label    00000009
_00634_DS_              Label    0000001C
_00643_DS_              Label    00000013
_00655_DS_              Label    0000001F
_00656_DS_              Label    00000027
_00658_DS_              Label    00000015
_00659_DS_              Label    00000029
_00660_DS_              Label    0000002A
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_adCheckTime            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_batLowTime             Label    00000000
_batStatus              Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBat               Label    00000000
_checkInV               Label    00000000
_checkOutA              Label    00000000
_chrgStatus             Label    00000000
_chrgWork               Label    00000000
_closeStatus            Label    00000000
_CMPCR                  Label    00000000
_count500ms             Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_F_AIN1_Convert         Label    00000000
_F_AIN2_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_firstLow               Label    00000000
_firstLowTime           Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_inLowTime              Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_longPressFlag          Label    00000000
_lowBatLock             Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_overFlag               Label    00000000
_overNub                Label    00000000
_overTime               Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN1_DATA            Label    00000000
_R_AIN1_DATA_LB         Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_shandeng               Label    00000000
_sleepDelay             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStatus             Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000049
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x103B                 Label    00000000
r0x103E                 Label    00000000
r0x103F                 Label    00000000
r0x1042                 Label    00000000
r0x1043                 Label    00000000
r0x1044                 Label    00000000
r0x1045                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
