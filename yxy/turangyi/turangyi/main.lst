
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_gotoSleep
                                    1-   97     	extern	_initSys
                                    1-   98     	extern	_isr
                                    1-   99     	extern	_main
                                    1-  100     	extern	_sleepTime
                                    1-  101     	extern	_intCount
                                    1-  102     	extern	_IntFlag
                                    1-  104     	extern PSAVE
                                    1-  105     	extern SSAVE
                                    1-  106     	extern WSAVE
                                    1-  107     	extern STK02
                                    1-  108     	extern STK01
                                    1-  109     	extern STK00
                                    1-  111     .segment "uninit", 0x20000040
 20000040                           1-  112     PSAVE:
                                    1-  113     	.res 1
 20000041                           1-  114     SSAVE:
                                    1-  115     	.res 1
 20000042                           1-  116     WSAVE:
                                    1-  117     	.res 1
 20000043                           1-  118     STK02:
                                    1-  119     	.res 1
 20000044                           1-  120     STK01:
                                    1-  121     	.res 1
 20000045                           1-  122     STK00:
                                    1-  123     	.res 1
                                    1-  125     ;--------------------------------------------------------
                                    1-  126     ; global definitions
                                    1-  127     ;--------------------------------------------------------
                                    1-  128     ;--------------------------------------------------------
                                    1-  129     ; absolute symbol definitions
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ; compiler-defined variables
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     ;--------------------------------------------------------
                                    1-  135     ; initialized data
                                    1-  136     ;--------------------------------------------------------
                                    1-  138     .segment "idata"
     0000                           1-  139     _sleepTime:
     0000 0000 0000                 1-  140     	dw	0x00, 0x00
                                    1-  144     .segment "idata"
     0000                           1-  145     _intCount:
     0000 0000                      1-  146     	dw	0x00
                                    1-  150     .segment "idata"
     0000                           1-  151     _IntFlag:
     0000 0000                      1-  152     	dw	0x00
                                    1-  155     ;--------------------------------------------------------
                                    1-  156     ; overlayable items in internal ram 
                                    1-  157     ;--------------------------------------------------------
                                    1-  158     ;	udata_ovr
                                    1-  159     ;--------------------------------------------------------
                                    1-  160     ; reset vector 
                                    1-  161     ;--------------------------------------------------------
                                    1-  162     ORG	0x0000
     0000 3rrr                      1-  163     	LGOTO	__nyc_ny8_startup
                                    1-  164     ;--------------------------------------------------------
                                    1-  165     ; interrupt and initialization code
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ORG 0x0008
     0008 3rrr                      1-  168     	lgoto	__sdcc_interrupt
                                    1-  170     .segment "code"
     0000                           1-  171     __sdcc_interrupt:
                                    1-  172     ;***
                                    1-  173     ;  pBlock Stats: dbName = I
                                    1-  174     ;***
                                    1-  175     ;2 compiler assigned registers:
                                    1-  176     ;   STK00
                                    1-  177     ;   STK01
                                    1-  178     ;; Starting pCode block
     0000                           1-  179     _isr:
                                    1-  180     ; 0 exit points
                                    1-  181     	.line	30, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  182     	MOVAR	WSAVE
     0001 1503                      1-  183     	SWAPR	STATUS,W
     0002 0283                      1-  184     	CLRR	STATUS
     0003 00rr                      1-  185     	MOVAR	SSAVE
     0004 010A                      1-  186     	MOVR	PCHBUF,W
     0005 028A                      1-  187     	CLRR	PCHBUF
     0006 00rr                      1-  188     	MOVAR	PSAVE
     0007 0104                      1-  189     	MOVR	FSR,W
                                    1-  190     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  191     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  192     	MOVR	STK00,W
                                    1-  193     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  194     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  195     	MOVR	STK01,W
                                    1-  196     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  197     	MOVAR	___sdcc_saved_stk01
                                    1-  198     	.line	32, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  199     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  200     	LGOTO	_00108_DS_
                                    1-  201     	.line	34, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  202     	MOVIA	0x37
     0013 03rr                      1-  203     	ADDAR	_TMR0,F
                                    1-  204     	.line	35, "main.c"; 	if(++intCount >= 100)
                                    1-  205     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  206     	INCR	_intCount,F
                                    1-  207     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  208     	MOVIA	0x64
     0017 04rr                      1-  209     	SUBAR	_intCount,W
     0018 0803                      1-  210     	BTRSS	STATUS,0
     0019 3rrr                      1-  211     	LGOTO	_00108_DS_
                                    1-  212     	.line	37, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  213     	MOVIA	0x01
                                    1-  214     	BANKSEL	_IntFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  215     	MOVAR	_IntFlag
                                    1-  216     	.line	38, "main.c"; 	intCount = 0;
                                    1-  217     	BANKSEL	_intCount
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 02rr                      1-  218     	CLRR	_intCount
     001F                           1-  219     _00108_DS_:
                                    1-  220     	.line	44, "main.c"; 	if(INTFbits.PABIF)
     001F 08rr                      1-  221     	BTRSS	_INTFbits,1
     0020 3rrr                      1-  222     	LGOTO	_00110_DS_
                                    1-  223     	.line	46, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0021 21FD                      1-  224     	MOVIA	0xfd
     0022 00rr                      1-  225     	MOVAR	_INTF
     0023                           1-  226     _00110_DS_:
                                    1-  227     	.line	49, "main.c"; 	INTF = 0;
     0023 02rr                      1-  228     	CLRR	_INTF
                                    1-  229     	.line	51, "main.c"; 	}
                                    1-  230     	BANKSEL	___sdcc_saved_stk01
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  231     	MOVR	___sdcc_saved_stk01,W
     0026 00rr                      1-  232     	MOVAR	STK01
                                    1-  233     	BANKSEL	___sdcc_saved_stk00
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  234     	MOVR	___sdcc_saved_stk00,W
     0029 00rr                      1-  235     	MOVAR	STK00
                                    1-  236     	BANKSEL	___sdcc_saved_fsr
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  237     	MOVR	___sdcc_saved_fsr,W
     002C 0084                      1-  238     	MOVAR	FSR
     002D 01rr                      1-  239     	MOVR	PSAVE,W
     002E 008A                      1-  240     	MOVAR	PCHBUF
     002F 0283                      1-  241     	CLRR	STATUS
     0030 15rr                      1-  242     	SWAPR	SSAVE,W
     0031 0083                      1-  243     	MOVAR	STATUS
     0032 15rr                      1-  244     	SWAPR	WSAVE,F
     0033 15rr                      1-  245     	SWAPR	WSAVE,W
     0034                           1-  246     END_OF_INTERRUPT:
     0034 0011                      1-  247     	RETIE	
                                    1-  249     ;--------------------------------------------------------
                                    1-  250     ; code
                                    1-  251     ;--------------------------------------------------------
                                    1-  252     ;***
                                    1-  253     ;  pBlock Stats: dbName = M
                                    1-  254     ;***
                                    1-  255     ;has an exit
                                    1-  256     ;functions called:
                                    1-  257     ;   _initSys
                                    1-  258     ;   _gotoSleep
                                    1-  259     ;   _initSys
                                    1-  260     ;   _gotoSleep
                                    1-  261     ;; Starting pCode block
                                    1-  262     .segment "code"; module=main, function=_main
     0000                           1-  264     _main:
                                    1-  265     ; 2 exit points
                                    1-  266     	.line	56, "main.c"; 	initSys();
     0000 2rrr                      1-  267     	LCALL	_initSys
     0001                           1-  268     _00123_DS_:
                                    1-  269     	.line	59, "main.c"; 	CLRWDT();
     0001 0002                      1-  270     	clrwdt
                                    1-  271     	.line	60, "main.c"; 	if(!IntFlag)
                                    1-  272     	BANKSEL	_IntFlag
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 01rr                      1-  273     	MOVR	_IntFlag,W
     0004 0D03                      1-  274     	BTRSC	STATUS,2
     0005 3rrr                      1-  275     	LGOTO	_00123_DS_
                                    1-  276     	.line	62, "main.c"; 	IntFlag = 0;
     0006 02rr                      1-  277     	CLRR	_IntFlag
                                    1-  278     	.line	63, "main.c"; 	if((PORTA & 0x40) == 0)
                                    1-  279     	BANKSEL	_PORTA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 0Frr                      1-  280     	BTRSC	_PORTA,6
     0009 3rrr                      1-  281     	LGOTO	_00120_DS_
                                    1-  282     	.line	65, "main.c"; 	sleepTime = 0;
                                    1-  283     	BANKSEL	_sleepTime
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1-  284     	CLRR	_sleepTime
     000C 02rr                      1-  285     	CLRR	(_sleepTime + 1)
                                    1-  286     	.line	66, "main.c"; 	PORTB |= 0x02;
     000D 18rr                      1-  287     	BSR	_PORTB,1
     000E 3rrr                      1-  288     	LGOTO	_00123_DS_
     000F                           1-  289     _00120_DS_:
                                    1-  290     	.line	71, "main.c"; 	PORTB &= 0xFD;
     000F 1Crr                      1-  291     	BCR	_PORTB,1
                                    1-  292     	.line	72, "main.c"; 	if(++sleepTime > 200)
                                    1-  293     	BANKSEL	_sleepTime
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 05rr                      1-  294     	INCR	_sleepTime,F
     0012 0D03                      1-  295     	BTRSC	STATUS,2
     0013 05rr                      1-  296     	INCR	(_sleepTime + 1),F
                                    1-  297     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  298     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0014 2100                      1-  299     	MOVIA	0x00
     0015 04rr                      1-  300     	SUBAR	(_sleepTime + 1),W
     0016 0903                      1-  301     	BTRSS	STATUS,2
     0017 3rrr                      1-  302     	LGOTO	_00139_DS_
     0018 21C9                      1-  303     	MOVIA	0xc9
     0019 04rr                      1-  304     	SUBAR	_sleepTime,W
     001A                           1-  305     _00139_DS_:
     001A 0803                      1-  306     	BTRSS	STATUS,0
     001B 3rrr                      1-  307     	LGOTO	_00123_DS_
                                    1-  308     	.line	74, "main.c"; 	sleepTime = 0;
                                    1-  309     	BANKSEL	_sleepTime
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1-  310     	CLRR	_sleepTime
     001E 02rr                      1-  311     	CLRR	(_sleepTime + 1)
                                    1-  312     	.line	75, "main.c"; 	gotoSleep();
     001F 2rrr                      1-  313     	LCALL	_gotoSleep
     0020 3rrr                      1-  314     	LGOTO	_00123_DS_
                                    1-  315     	.line	79, "main.c"; 	}
                                    1-  316     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1-  317     ; exit point of _main
                                    1-  319     ;***
                                    1-  320     ;  pBlock Stats: dbName = C
                                    1-  321     ;***
                                    1-  322     ;has an exit
                                    1-  323     ;; Starting pCode block
                                    1-  324     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  326     _gotoSleep:
                                    1-  327     ; 2 exit points
                                    1-  328     	.line	113, "main.c"; 	sleepTime = 0;
                                    1-  329     	BANKSEL	_sleepTime
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  330     	CLRR	_sleepTime
     0002 02rr                      1-  331     	CLRR	(_sleepTime + 1)
                                    1-  332     	.line	114, "main.c"; 	AWUCON = 0x60;
     0003 2160                      1-  333     	MOVIA	0x60
     0004 00rr                      1-  334     	MOVAR	_AWUCON
                                    1-  335     	.line	115, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0005 210B                      1-  336     	MOVIA	0x0b
     0006 00rr                      1-  337     	MOVAR	_INTE
                                    1-  338     	.line	116, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0007 2118                      1-  339     	MOVIA	0x18
     0008 00rr                      1-  340     	MOVAR	_PCON
                                    1-  341     	.line	117, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0009 02rr                      1-  342     	CLRR	_INTF
                                    1-  343     	.line	118, "main.c"; 	CLRWDT();
     000A 0002                      1-  344     	clrwdt
                                    1-  345     	.line	119, "main.c"; 	ENI();
     000B 0004                      1-  346     	ENI
                                    1-  347     	.line	120, "main.c"; 	SLEEP();
     000C 0001                      1-  348     	sleep
                                    1-  349     	.line	121, "main.c"; 	AWUCON = 0x00;
     000D 02rr                      1-  350     	CLRR	_AWUCON
                                    1-  351     	.line	122, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1-  352     	MOVIA	0x01
     000F 00rr                      1-  353     	MOVAR	_INTE
                                    1-  354     	.line	123, "main.c"; 	INTF = 0;
     0010 02rr                      1-  355     	CLRR	_INTF
                                    1-  356     	.line	125, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0011 21B8                      1-  357     	MOVIA	0xb8
     0012 00rr                      1-  358     	MOVAR	_PCON
                                    1-  359     	.line	127, "main.c"; 	}
                                    1-  360     	RETURN	
     0013 0010                      3-   26 m1      ret
                                    1-  361     ; exit point of _gotoSleep
                                    1-  363     ;***
                                    1-  364     ;  pBlock Stats: dbName = C
                                    1-  365     ;***
                                    1-  366     ;has an exit
                                    1-  367     ;; Starting pCode block
                                    1-  368     .segment "code"; module=main, function=_initSys
     0000                           1-  370     _initSys:
                                    1-  371     ; 2 exit points
                                    1-  372     	.line	83, "main.c"; 	DISI();
     0000 0013                      1-  373     	DISI
                                    1-  374     	.line	84, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input;
     0001 2170                      1-  375     	MOVIA	0x70
     0002 000r                      1-  376     	IOST	_IOSTA
                                    1-  377     	.line	85, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1-  378     	MOVIA	0x01
     0004 000r                      1-  379     	IOST	_IOSTB
                                    1-  380     	.line	86, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1-  381     	CLRR	_PORTB
                                    1-  382     	.line	87, "main.c"; 	PORTA = 0x00;
                                    1-  383     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  384     	CLRR	_PORTA
                                    1-  385     	.line	88, "main.c"; 	APHCON = 0x9F;
     0008 219F                      1-  386     	MOVIA	0x9f
     0009 000r                      1-  387     	IOST	_APHCON
                                    1-  388     	.line	89, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1-  389     	MOVIA	0xff
     000B 00rr                      1-  390     	MOVAR	_BPHCON
                                    1-  391     	.line	91, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1-  392     	MOVIA	0x01
     000D 00rr                      1-  393     	MOVAR	_INTE
                                    1-  394     	.line	93, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1-  395     	CLRA	
     000F 000r                      1-  396     	IOST	_PCON1
                                    1-  397     	.line	95, "main.c"; 	TMR0 = 55;
     0010 2137                      1-  398     	MOVIA	0x37
     0011 00rr                      1-  399     	MOVAR	_TMR0
                                    1-  400     	.line	96, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0012 0200                      1-  401     	CLRA	
     0013 0003                      1-  402     	T0MD	
                                    1-  403     	.line	98, "main.c"; 	PCON1 = C_TMR0_En;
     0014 2101                      1-  404     	MOVIA	0x01
     0015 000r                      1-  405     	IOST	_PCON1
                                    1-  406     	.line	101, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0016 2198                      1-  407     	MOVIA	0x98
     0017 00rr                      1-  408     	MOVAR	_PCON
                                    1-  409     	.line	104, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0018 2101                      1-  410     	MOVIA	0x01
     0019 000r                      1-  411     	IOST	_PCON1
                                    1-  412     	.line	105, "main.c"; 	ENI();
     001A 0004                      1-  413     	ENI
                                    1-  414     	.line	106, "main.c"; 	}
                                    1-  415     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1-  416     ; exit point of _initSys
                                    1-  419     ;	code size estimation:
                                    1-  420     ;	  113+   16 =   129 instructions (  290 byte)
                                    1-  422     	end
                                    1-  422     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00108_DS_              Label    0000001F
_00110_DS_              Label    00000023
_00120_DS_              Label    0000000F
_00123_DS_              Label    00000001
_00139_DS_              Label    0000001A
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_CMPCR                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepTime              Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000034
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
