
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_checkBat
                                    1-   15     	extern	__mulint
                                    1-   16     	extern	__divuint
                                    1-   17     	extern	__moduint
                                    1-   18     	extern	_PORTAbits
                                    1-   19     	extern	_PORTBbits
                                    1-   20     	extern	_PCONbits
                                    1-   21     	extern	_BWUCONbits
                                    1-   22     	extern	_ABPLCONbits
                                    1-   23     	extern	_BPHCONbits
                                    1-   24     	extern	_INTEbits
                                    1-   25     	extern	_INTFbits
                                    1-   26     	extern	_ADMDbits
                                    1-   27     	extern	_ADRbits
                                    1-   28     	extern	_ADVREFHbits
                                    1-   29     	extern	_ADCRbits
                                    1-   30     	extern	_AWUCONbits
                                    1-   31     	extern	_PACONbits
                                    1-   32     	extern	_INTEDGbits
                                    1-   33     	extern	_ANAENbits
                                    1-   34     	extern	_RFCbits
                                    1-   35     	extern	_INTE2bits
                                    1-   36     	extern	_INDF
                                    1-   37     	extern	_TMR0
                                    1-   38     	extern	_PCL
                                    1-   39     	extern	_STATUS
                                    1-   40     	extern	_FSR
                                    1-   41     	extern	_PORTA
                                    1-   42     	extern	_PORTB
                                    1-   43     	extern	_PCON
                                    1-   44     	extern	_BWUCON
                                    1-   45     	extern	_PCHBUF
                                    1-   46     	extern	_ABPLCON
                                    1-   47     	extern	_BPHCON
                                    1-   48     	extern	_INTE
                                    1-   49     	extern	_INTF
                                    1-   50     	extern	_ADMD
                                    1-   51     	extern	_ADR
                                    1-   52     	extern	_ADD
                                    1-   53     	extern	_ADVREFH
                                    1-   54     	extern	_ADCR
                                    1-   55     	extern	_AWUCON
                                    1-   56     	extern	_PACON
                                    1-   57     	extern	_INTEDG
                                    1-   58     	extern	_TMRH
                                    1-   59     	extern	_ANAEN
                                    1-   60     	extern	_RFC
                                    1-   61     	extern	_TM3RH
                                    1-   62     	extern	_INTE2
                                    1-   63     	extern	_TMR1
                                    1-   64     	extern	_T1CR1
                                    1-   65     	extern	_T1CR2
                                    1-   66     	extern	_PWM1DUTY
                                    1-   67     	extern	_PS1CV
                                    1-   68     	extern	_BZ1CR
                                    1-   69     	extern	_IRCR
                                    1-   70     	extern	_TBHP
                                    1-   71     	extern	_TBHD
                                    1-   72     	extern	_TMR2
                                    1-   73     	extern	_T2CR1
                                    1-   74     	extern	_T2CR2
                                    1-   75     	extern	_PWM2DUTY
                                    1-   76     	extern	_PS2CV
                                    1-   77     	extern	_BZ2CR
                                    1-   78     	extern	_OSCCR
                                    1-   79     	extern	_TMR3
                                    1-   80     	extern	_T3CR1
                                    1-   81     	extern	_T3CR2
                                    1-   82     	extern	_PWM3DUTY
                                    1-   83     	extern	_PS3CV
                                    1-   84     	extern	_BZ3CR
                                    1-   85     	extern	_IOSTA
                                    1-   86     	extern	_IOSTB
                                    1-   87     	extern	_APHCON
                                    1-   88     	extern	_PS0CV
                                    1-   89     	extern	_BODCON
                                    1-   90     	extern	_CMPCR
                                    1-   91     	extern	_PCON1
                                    1-   92     	extern	_T0MD
                                    1-   93     	extern	___sdcc_saved_fsr
                                    1-   94     	extern	___sdcc_saved_stk00
                                    1-   95     	extern	___sdcc_saved_stk01
                                    1-   96     	extern	__gptrget1
                                    1-   97     	extern	__nyc_ny8_startup
                                    1-   98     ;--------------------------------------------------------
                                    1-   99     ; global declarations
                                    1-  100     ;--------------------------------------------------------
                                    1-  101     	extern	_delayus
                                    1-  102     	extern	_delay
                                    1-  103     	extern	_display
                                    1-  104     	extern	_write_cmd
                                    1-  105     	extern	_i2c_write
                                    1-  106     	extern	_ack
                                    1-  107     	extern	_i2c_stop
                                    1-  108     	extern	_i2c_start
                                    1-  109     	extern	_F_wait_eoc
                                    1-  110     	extern	_F_AIN4_Convert
                                    1-  111     	extern	_F_AIN3_Convert
                                    1-  112     	extern	_F_AIN1_Convert
                                    1-  113     	extern	_checkOutA
                                    1-  114     	extern	_checkBat16
                                    1-  115     	extern	_checkBat12
                                    1-  116     	extern	_initAD
                                    1-  117     	extern	_initSys
                                    1-  118     	extern	_checkAD
                                    1-  119     	extern	_chrgCtr
                                    1-  120     	extern	_workCtr
                                    1-  121     	extern	_keyRead
                                    1-  122     	extern	_isr
                                    1-  123     	extern	_main
                                    1-  124     	extern	_IntFlag
                                    1-  125     	extern	_intCount
                                    1-  126     	extern	_R_AIN1_DATA
                                    1-  127     	extern	_R_AIN1_DATA_LB
                                    1-  128     	extern	_R_AIN3_DATA
                                    1-  129     	extern	_R_AIN3_DATA_LB
                                    1-  130     	extern	_R_AIN4_DATA
                                    1-  131     	extern	_R_AIN4_DATA_LB
                                    1-  132     	extern	_checkTime
                                    1-  133     	extern	_chrgStep
                                    1-  134     	extern	_bai
                                    1-  135     	extern	_shi
                                    1-  136     	extern	_ge
                                    1-  137     	extern	_dian
                                    1-  138     	extern	_keyCount
                                    1-  139     	extern	_workStep
                                    1-  140     	extern	_count15s
                                    1-  141     	extern	_debug
                                    1-  143     	extern PSAVE
                                    1-  144     	extern SSAVE
                                    1-  145     	extern WSAVE
                                    1-  146     	extern STK02
                                    1-  147     	extern STK01
                                    1-  148     	extern STK00
                                    1-  150     .segment "uninit", 0x20000040
 20000040                           1-  151     PSAVE:
                                    1-  152     	.res 1
 20000041                           1-  153     SSAVE:
                                    1-  154     	.res 1
 20000042                           1-  155     WSAVE:
                                    1-  156     	.res 1
 20000043                           1-  157     STK02:
                                    1-  158     	.res 1
 20000044                           1-  159     STK01:
                                    1-  160     	.res 1
 20000045                           1-  161     STK00:
                                    1-  162     	.res 1
                                    1-  164     ;--------------------------------------------------------
                                    1-  165     ; global definitions
                                    1-  166     ;--------------------------------------------------------
                                    1-  167     ;--------------------------------------------------------
                                    1-  168     ; absolute symbol definitions
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     ;--------------------------------------------------------
                                    1-  171     ; compiler-defined variables
                                    1-  172     ;--------------------------------------------------------
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x1056:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x1057:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x1058:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x105A:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1059:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x105B:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x105C:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x1055:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x1053:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x1054:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x104F:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x1050:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x104B:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x104C:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1043:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x1044:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x1045:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1048:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x103D:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x103E:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x103F:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1042:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1037:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1038:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1039:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x103C:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1027:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1028:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1029:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x102A:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x102C:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x102B:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1030:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1031:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1032:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1033:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1034:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1035:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1036:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1025:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1026:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1023:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x1024:
                                    1-  301     	.res	1
                                    1-  302     ;--------------------------------------------------------
                                    1-  303     ; initialized data
                                    1-  304     ;--------------------------------------------------------
                                    1-  306     .segment "idata"
     0000                           1-  307     _tab:
     0000 003F                      1-  308     	dw	0x3f
     0001 0006                      1-  309     	dw	0x06
     0002 005B                      1-  310     	dw	0x5b
     0003 004F                      1-  311     	dw	0x4f
     0004 0066                      1-  312     	dw	0x66
     0005 006D                      1-  313     	dw	0x6d
     0006 007D                      1-  314     	dw	0x7d
     0007 0007                      1-  315     	dw	0x07
     0008 007F                      1-  316     	dw	0x7f
     0009 006F                      1-  317     	dw	0x6f
     000A 0071                      1-  318     	dw	0x71
     000B 0038                      1-  319     	dw	0x38
                                    1-  323     .segment "idata"
     0000                           1-  324     _IntFlag:
     0000 0000                      1-  325     	dw	0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _intCount:
     0000 0000                      1-  331     	dw	0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _R_AIN1_DATA:
     0000 0000 0000                 1-  337     	dw	0x00, 0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _R_AIN1_DATA_LB:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _R_AIN3_DATA:
     0000 0000 0000                 1-  349     	dw	0x00, 0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _R_AIN3_DATA_LB:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _R_AIN4_DATA:
     0000 0000 0000                 1-  361     	dw	0x00, 0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _R_AIN4_DATA_LB:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _checkTime:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _chrgStep:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _bai:
     0000 0000                      1-  385     	dw	0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _shi:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _ge:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _dian:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _keyCount:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _workStep:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _count15s:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _debug:
     0000 0000                      1-  427     	dw	0x00
                                    1-  430     ;--------------------------------------------------------
                                    1-  431     ; overlayable items in internal ram 
                                    1-  432     ;--------------------------------------------------------
                                    1-  433     ;	udata_ovr
                                    1-  434     ;--------------------------------------------------------
                                    1-  435     ; reset vector 
                                    1-  436     ;--------------------------------------------------------
                                    1-  437     ORG	0x0000
     0000 3rrr                      1-  438     	LGOTO	__nyc_ny8_startup
                                    1-  439     ;--------------------------------------------------------
                                    1-  440     ; interrupt and initialization code
                                    1-  441     ;--------------------------------------------------------
                                    1-  442     ORG 0x0008
     0008 3rrr                      1-  443     	lgoto	__sdcc_interrupt
                                    1-  445     .segment "code"
     0000                           1-  446     __sdcc_interrupt:
                                    1-  447     ;***
                                    1-  448     ;  pBlock Stats: dbName = I
                                    1-  449     ;***
                                    1-  450     ;2 compiler assigned registers:
                                    1-  451     ;   STK00
                                    1-  452     ;   STK01
                                    1-  453     ;; Starting pCode block
     0000                           1-  454     _isr:
                                    1-  455     ; 0 exit points
                                    1-  456     	.line	77, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  457     	MOVAR	WSAVE
     0001 1503                      1-  458     	SWAPR	STATUS,W
     0002 0283                      1-  459     	CLRR	STATUS
     0003 00rr                      1-  460     	MOVAR	SSAVE
     0004 010A                      1-  461     	MOVR	PCHBUF,W
     0005 028A                      1-  462     	CLRR	PCHBUF
     0006 00rr                      1-  463     	MOVAR	PSAVE
     0007 0104                      1-  464     	MOVR	FSR,W
                                    1-  465     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  466     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  467     	MOVR	STK00,W
                                    1-  468     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  469     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  470     	MOVR	STK01,W
                                    1-  471     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  472     	MOVAR	___sdcc_saved_stk01
                                    1-  473     	.line	79, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  474     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  475     	LGOTO	_00108_DS_
                                    1-  476     	.line	81, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  477     	MOVIA	0x37
     0013 03rr                      1-  478     	ADDAR	_TMR0,F
                                    1-  479     	.line	83, "main.c"; 	if(++intCount >= 100)
                                    1-  480     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  481     	INCR	_intCount,F
                                    1-  482     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  483     	MOVIA	0x64
     0017 04rr                      1-  484     	SUBAR	_intCount,W
     0018 0803                      1-  485     	BTRSS	STATUS,0
     0019 3rrr                      1-  486     	LGOTO	_00108_DS_
                                    1-  487     	.line	85, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  488     	MOVIA	0x01
                                    1-  489     	BANKSEL	_IntFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  490     	MOVAR	_IntFlag
                                    1-  491     	.line	86, "main.c"; 	intCount = 0;
                                    1-  492     	BANKSEL	_intCount
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 02rr                      1-  493     	CLRR	_intCount
     001F                           1-  494     _00108_DS_:
                                    1-  495     	.line	92, "main.c"; 	if(INTFbits.PABIF)
     001F 08rr                      1-  496     	BTRSS	_INTFbits,1
     0020 3rrr                      1-  497     	LGOTO	_00110_DS_
                                    1-  498     	.line	94, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0021 21FD                      1-  499     	MOVIA	0xfd
     0022 00rr                      1-  500     	MOVAR	_INTF
     0023                           1-  501     _00110_DS_:
                                    1-  502     	.line	97, "main.c"; 	INTF = 0;
     0023 02rr                      1-  503     	CLRR	_INTF
                                    1-  504     	.line	99, "main.c"; 	}
                                    1-  505     	BANKSEL	___sdcc_saved_stk01
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  506     	MOVR	___sdcc_saved_stk01,W
     0026 00rr                      1-  507     	MOVAR	STK01
                                    1-  508     	BANKSEL	___sdcc_saved_stk00
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  509     	MOVR	___sdcc_saved_stk00,W
     0029 00rr                      1-  510     	MOVAR	STK00
                                    1-  511     	BANKSEL	___sdcc_saved_fsr
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  512     	MOVR	___sdcc_saved_fsr,W
     002C 0084                      1-  513     	MOVAR	FSR
     002D 01rr                      1-  514     	MOVR	PSAVE,W
     002E 008A                      1-  515     	MOVAR	PCHBUF
     002F 0283                      1-  516     	CLRR	STATUS
     0030 15rr                      1-  517     	SWAPR	SSAVE,W
     0031 0083                      1-  518     	MOVAR	STATUS
     0032 15rr                      1-  519     	SWAPR	WSAVE,F
     0033 15rr                      1-  520     	SWAPR	WSAVE,W
     0034                           1-  521     END_OF_INTERRUPT:
     0034 0011                      1-  522     	RETIE	
                                    1-  524     ;--------------------------------------------------------
                                    1-  525     ; code
                                    1-  526     ;--------------------------------------------------------
                                    1-  527     ;***
                                    1-  528     ;  pBlock Stats: dbName = M
                                    1-  529     ;***
                                    1-  530     ;has an exit
                                    1-  531     ;functions called:
                                    1-  532     ;   _initSys
                                    1-  533     ;   _initAD
                                    1-  534     ;   _display
                                    1-  535     ;   _delayus
                                    1-  536     ;   _checkAD
                                    1-  537     ;   _chrgCtr
                                    1-  538     ;   _workCtr
                                    1-  539     ;   _initSys
                                    1-  540     ;   _initAD
                                    1-  541     ;   _display
                                    1-  542     ;   _delayus
                                    1-  543     ;   _checkAD
                                    1-  544     ;   _chrgCtr
                                    1-  545     ;   _workCtr
                                    1-  546     ;4 compiler assigned registers:
                                    1-  547     ;   r0x105D
                                    1-  548     ;   STK02
                                    1-  549     ;   STK01
                                    1-  550     ;   STK00
                                    1-  551     ;; Starting pCode block
                                    1-  552     .segment "code"; module=main, function=_main
     0000                           1-  554     _main:
                                    1-  555     ; 2 exit points
                                    1-  556     	.line	102, "main.c"; 	initSys();
     0000 2rrr                      1-  557     	LCALL	_initSys
                                    1-  558     	.line	103, "main.c"; 	initAD();
     0001 2rrr                      1-  559     	LCALL	_initAD
     0002                           1-  560     _00118_DS_:
                                    1-  561     	.line	106, "main.c"; 	CLRWDT();
     0002 0002                      1-  562     	clrwdt
                                    1-  563     	.line	107, "main.c"; 	display(bai,shi,ge,tab[3]);
                                    1-  564     	BANKSEL	_tab
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 01rr                      1-  565     	MOVR	(_tab + 3),W
                                    1-  566     ;;1	MOVAR	r0x105D
     0005 00rr                      1-  567     	MOVAR	STK02
                                    1-  568     	BANKSEL	_ge
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1-  569     	MOVR	_ge,W
     0008 00rr                      1-  570     	MOVAR	STK01
                                    1-  571     	BANKSEL	_shi
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  572     	MOVR	_shi,W
     000B 00rr                      1-  573     	MOVAR	STK00
                                    1-  574     	BANKSEL	_bai
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  575     	MOVR	_bai,W
     000E 2rrr                      1-  576     	LCALL	_display
                                    1-  577     	.line	108, "main.c"; 	delayus(100);
     000F 2164                      1-  578     	MOVIA	0x64
     0010 2rrr                      1-  579     	LCALL	_delayus
                                    1-  580     	.line	109, "main.c"; 	if(!IntFlag)
                                    1-  581     	BANKSEL	_IntFlag
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1-  582     	MOVR	_IntFlag,W
     0013 0D03                      1-  583     	BTRSC	STATUS,2
     0014 3rrr                      1-  584     	LGOTO	_00118_DS_
                                    1-  585     	.line	111, "main.c"; 	IntFlag = 0; 
     0015 02rr                      1-  586     	CLRR	_IntFlag
                                    1-  587     	.line	112, "main.c"; 	checkAD();
     0016 2rrr                      1-  588     	LCALL	_checkAD
                                    1-  589     	.line	113, "main.c"; 	chrgCtr();
     0017 2rrr                      1-  590     	LCALL	_chrgCtr
                                    1-  591     	.line	114, "main.c"; 	workCtr();
     0018 2rrr                      1-  592     	LCALL	_workCtr
     0019 3rrr                      1-  593     	LGOTO	_00118_DS_
                                    1-  594     	.line	116, "main.c"; 	}
                                    1-  595     	RETURN	
     001A 0010                      3-   26 m1      ret
                                    1-  596     ; exit point of _main
                                    1-  598     ;***
                                    1-  599     ;  pBlock Stats: dbName = C
                                    1-  600     ;***
                                    1-  601     ;has an exit
                                    1-  602     ;2 compiler assigned registers:
                                    1-  603     ;   r0x1023
                                    1-  604     ;   r0x1024
                                    1-  605     ;; Starting pCode block
                                    1-  606     .segment "code"; module=main, function=_delayus
                                    1-  608     ;local variable name mapping:
     0000                           1-  611     _delayus:
                                    1-  612     ; 2 exit points
                                    1-  613     	.line	583, "main.c"; 	void delayus(u8t time)
                                    1-  614     	BANKSEL	r0x1023
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  615     	MOVAR	r0x1023
                                    1-  616     	.line	585, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  617     	BANKSEL	r0x1024
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  618     	CLRR	r0x1024
     0004                           1-  619     _00367_DS_:
                                    1-  620     	BANKSEL	r0x1023
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1-  621     	MOVR	r0x1023,W
                                    1-  622     	BANKSEL	r0x1024
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1-  623     	SUBAR	r0x1024,W
     0008 0C03                      1-  624     	BTRSC	STATUS,0
     0009 3rrr                      1-  625     	LGOTO	_00369_DS_
                                    1-  626     	.line	586, "main.c"; 	NOP();
     000A 0000                      1-  627     	nop
                                    1-  628     	.line	585, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  629     	BANKSEL	r0x1024
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1-  630     	INCR	r0x1024,F
     000D 3rrr                      1-  631     	LGOTO	_00367_DS_
     000E                           1-  632     _00369_DS_:
                                    1-  633     	.line	587, "main.c"; 	}
                                    1-  634     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1-  635     ; exit point of _delayus
                                    1-  637     ;***
                                    1-  638     ;  pBlock Stats: dbName = C
                                    1-  639     ;***
                                    1-  640     ;has an exit
                                    1-  641     ;2 compiler assigned registers:
                                    1-  642     ;   r0x1025
                                    1-  643     ;   r0x1026
                                    1-  644     ;; Starting pCode block
                                    1-  645     .segment "code"; module=main, function=_delay
                                    1-  647     ;local variable name mapping:
     0000                           1-  649     _delay:
                                    1-  650     ; 2 exit points
                                    1-  651     	.line	580, "main.c"; 	for(i=0;i<5;i++);
     0000 2105                      1-  652     	MOVIA	0x05
                                    1-  653     	BANKSEL	r0x1025
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  654     	MOVAR	r0x1025
     0003                           1-  655     _00360_DS_:
                                    1-  656     	BANKSEL	r0x1025
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 06rr                      1-  657     	DECR	r0x1025,W
                                    1-  658     	BANKSEL	r0x1026
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 00rr                      1-  659     	MOVAR	r0x1026
                                    1-  660     	BANKSEL	r0x1025
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1-  661     	MOVAR	r0x1025
                                    1-  662     	BANKSEL	r0x1026
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  663     	MOVR	r0x1026,W
     000B 0903                      1-  664     	BTRSS	STATUS,2
     000C 3rrr                      1-  665     	LGOTO	_00360_DS_
                                    1-  666     	.line	581, "main.c"; 	}
                                    1-  667     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1-  668     ; exit point of _delay
                                    1-  670     ;***
                                    1-  671     ;  pBlock Stats: dbName = C
                                    1-  672     ;***
                                    1-  673     ;has an exit
                                    1-  674     ;functions called:
                                    1-  675     ;   _write_cmd
                                    1-  676     ;   _write_cmd
                                    1-  677     ;   _write_cmd
                                    1-  678     ;   _write_cmd
                                    1-  679     ;   _write_cmd
                                    1-  680     ;   _write_cmd
                                    1-  681     ;   _write_cmd
                                    1-  682     ;   _write_cmd
                                    1-  683     ;   _write_cmd
                                    1-  684     ;   _write_cmd
                                    1-  685     ;10 compiler assigned registers:
                                    1-  686     ;   r0x1030
                                    1-  687     ;   STK00
                                    1-  688     ;   r0x1031
                                    1-  689     ;   STK01
                                    1-  690     ;   r0x1032
                                    1-  691     ;   STK02
                                    1-  692     ;   r0x1033
                                    1-  693     ;   r0x1034
                                    1-  694     ;   r0x1035
                                    1-  695     ;   r0x1036
                                    1-  696     ;; Starting pCode block
                                    1-  697     .segment "code"; module=main, function=_display
                                    1-  699     ;local variable name mapping:
     0000                           1-  704     _display:
                                    1-  705     ; 2 exit points
                                    1-  706     	.line	568, "main.c"; 	void display(uchar tmp1,uchar tmp2,uchar tmp3,uchar tmp4)
                                    1-  707     	BANKSEL	r0x1030
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  708     	MOVAR	r0x1030
     0002 01rr                      1-  709     	MOVR	STK00,W
                                    1-  710     	BANKSEL	r0x1031
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  711     	MOVAR	r0x1031
     0005 01rr                      1-  712     	MOVR	STK01,W
                                    1-  713     	BANKSEL	r0x1032
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  714     	MOVAR	r0x1032
     0008 01rr                      1-  715     	MOVR	STK02,W
                                    1-  716     	BANKSEL	r0x1033
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  717     	MOVAR	r0x1033
                                    1-  718     	.line	570, "main.c"; 	write_cmd(0x4801);				//开显示
     000B 2101                      1-  719     	MOVIA	0x01
     000C 00rr                      1-  720     	MOVAR	STK00
     000D 2148                      1-  721     	MOVIA	0x48
     000E 2rrr                      1-  722     	LCALL	_write_cmd
                                    1-  723     	.line	571, "main.c"; 	write_cmd(0x6800|tmp1);		//COM0显示数据
                                    1-  724     	BANKSEL	r0x1030
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  725     	MOVR	r0x1030,W
                                    1-  726     	BANKSEL	r0x1034
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1-  727     	MOVAR	r0x1034
                                    1-  728     ;;120	CLRR	r0x1035
                                    1-  729     ;;126	MOVR	r0x1034,W
     0013 2168                      1-  730     	MOVIA	0x68
                                    1-  731     ;;121	IORAR	r0x1035,W
                                    1-  732     	BANKSEL	r0x1036
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1-  733     	MOVAR	r0x1036
                                    1-  734     	BANKSEL	r0x1030
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1-  735     	MOVR	r0x1030,W
     0018 00rr                      1-  736     	MOVAR	STK00
                                    1-  737     	BANKSEL	r0x1036
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  738     	MOVR	r0x1036,W
     001B 2rrr                      1-  739     	LCALL	_write_cmd
                                    1-  740     	.line	572, "main.c"; 	write_cmd(0x6A00|tmp2);		//COM1显示数据
                                    1-  741     	BANKSEL	r0x1031
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1-  742     	MOVR	r0x1031,W
     001E 216A                      1-  743     	MOVIA	0x6a
                                    1-  744     ;;119	IORAR	r0x1034,W
                                    1-  745     	BANKSEL	r0x1035
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1-  746     	MOVAR	r0x1035
                                    1-  747     ;;128	MOVR	r0x1031,W
                                    1-  748     ;;131	MOVR	r0x1030,W
                                    1-  749     	BANKSEL	r0x1031
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1-  750     	MOVR	r0x1031,W
                                    1-  751     	BANKSEL	r0x1030
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1-  752     	MOVAR	r0x1030
                                    1-  753     	BANKSEL	r0x1031
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 00rr                      1-  754     	MOVAR	r0x1031
     0027 00rr                      1-  755     	MOVAR	STK00
                                    1-  756     	BANKSEL	r0x1035
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1-  757     	MOVR	r0x1035,W
     002A 2rrr                      1-  758     	LCALL	_write_cmd
                                    1-  759     ;;123	MOVR	r0x1032,W
                                    1-  760     ;;124	CLRR	r0x1031
                                    1-  761     ;;122	MOVR	r0x1030,W
                                    1-  762     	.line	573, "main.c"; 	write_cmd(0X6C00|tmp3);		//COM2显示数据
                                    1-  763     	BANKSEL	r0x1032
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1-  764     	MOVR	r0x1032,W
     002D 216C                      1-  765     	MOVIA	0x6c
                                    1-  766     ;;125	IORAR	r0x1031,W
                                    1-  767     	BANKSEL	r0x1034
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1-  768     	MOVAR	r0x1034
                                    1-  769     ;;117	MOVR	r0x1032,W
                                    1-  770     ;;130	MOVR	r0x1030,W
                                    1-  771     	BANKSEL	r0x1032
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1-  772     	MOVR	r0x1032,W
                                    1-  773     	BANKSEL	r0x1030
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1-  774     	MOVAR	r0x1030
                                    1-  775     ;;3	MOVAR	r0x1032
     0034 00rr                      1-  776     	MOVAR	STK00
                                    1-  777     	BANKSEL	r0x1034
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1-  778     	MOVR	r0x1034,W
     0037 2rrr                      1-  779     	LCALL	_write_cmd
                                    1-  780     	.line	574, "main.c"; 	write_cmd(0X6E00|tmp4);		//COM3显示数据
                                    1-  781     	BANKSEL	r0x1033
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 01rr                      1-  782     	MOVR	r0x1033,W
     003A 216E                      1-  783     	MOVIA	0x6e
                                    1-  784     ;;116	IORAR	r0x1031,W
                                    1-  785     	BANKSEL	r0x1032
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 00rr                      1-  786     	MOVAR	r0x1032
                                    1-  787     	BANKSEL	r0x1033
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1-  788     	MOVR	r0x1033,W
     003F 00rr                      1-  789     	MOVAR	STK00
                                    1-  790     	BANKSEL	r0x1032
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1-  791     	MOVR	r0x1032,W
     0042 2rrr                      1-  792     	LCALL	_write_cmd
                                    1-  793     	.line	575, "main.c"; 	}
                                    1-  794     	RETURN	
     0043 0010                      3-   26 m1      ret
                                    1-  795     ; exit point of _display
                                    1-  797     ;***
                                    1-  798     ;  pBlock Stats: dbName = C
                                    1-  799     ;***
                                    1-  800     ;has an exit
                                    1-  801     ;functions called:
                                    1-  802     ;   _i2c_start
                                    1-  803     ;   _i2c_write
                                    1-  804     ;   _i2c_write
                                    1-  805     ;   _i2c_stop
                                    1-  806     ;   _i2c_start
                                    1-  807     ;   _i2c_write
                                    1-  808     ;   _i2c_write
                                    1-  809     ;   _i2c_stop
                                    1-  810     ;6 compiler assigned registers:
                                    1-  811     ;   r0x102B
                                    1-  812     ;   STK00
                                    1-  813     ;   r0x102C
                                    1-  814     ;   r0x102D
                                    1-  815     ;   r0x102E
                                    1-  816     ;   r0x102F
                                    1-  817     ;; Starting pCode block
                                    1-  818     .segment "code"; module=main, function=_write_cmd
                                    1-  820     ;local variable name mapping:
     0000                           1-  823     _write_cmd:
                                    1-  824     ; 2 exit points
                                    1-  825     	.line	555, "main.c"; 	void write_cmd(uint cmd)		//写16位指令
                                    1-  826     	BANKSEL	r0x102B
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  827     	MOVAR	r0x102B
     0002 01rr                      1-  828     	MOVR	STK00,W
                                    1-  829     	BANKSEL	r0x102C
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  830     	MOVAR	r0x102C
                                    1-  831     	.line	557, "main.c"; 	i2c_start();							//开始
     0005 2rrr                      1-  832     	LCALL	_i2c_start
                                    1-  833     	.line	558, "main.c"; 	i2c_write(cmd >> 8);			//写入命令的高八位
                                    1-  834     	BANKSEL	r0x102B
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1-  835     	MOVR	r0x102B,W
                                    1-  836     ;;113	MOVAR	r0x102D
     0008 2rrr                      1-  837     	LCALL	_i2c_write
                                    1-  838     	.line	559, "main.c"; 	i2c_write(cmd & 0xff);		//写入命令的低八位
                                    1-  839     	BANKSEL	r0x102C
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  840     	MOVR	r0x102C,W
                                    1-  841     ;;112	MOVAR	r0x102D
     000B 2rrr                      1-  842     	LCALL	_i2c_write
                                    1-  843     	.line	560, "main.c"; 	i2c_stop();								//结束
     000C 2rrr                      1-  844     	LCALL	_i2c_stop
                                    1-  845     	.line	561, "main.c"; 	}
                                    1-  846     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1-  847     ; exit point of _write_cmd
                                    1-  849     ;***
                                    1-  850     ;  pBlock Stats: dbName = C
                                    1-  851     ;***
                                    1-  852     ;has an exit
                                    1-  853     ;functions called:
                                    1-  854     ;   _delay
                                    1-  855     ;   _delay
                                    1-  856     ;   _ack
                                    1-  857     ;   _delay
                                    1-  858     ;   _delay
                                    1-  859     ;   _ack
                                    1-  860     ;3 compiler assigned registers:
                                    1-  861     ;   r0x1028
                                    1-  862     ;   r0x1029
                                    1-  863     ;   r0x102A
                                    1-  864     ;; Starting pCode block
                                    1-  865     .segment "code"; module=main, function=_i2c_write
                                    1-  867     ;local variable name mapping:
     0000                           1-  870     _i2c_write:
                                    1-  871     ; 2 exit points
                                    1-  872     	.line	499, "main.c"; 	void i2c_write(uchar dat)	//写8bit数据
                                    1-  873     	BANKSEL	r0x1028
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  874     	MOVAR	r0x1028
                                    1-  875     	.line	502, "main.c"; 	for(i = 0; i < 8; i++)
                                    1-  876     	BANKSEL	r0x1029
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  877     	CLRR	r0x1029
     0004                           1-  878     _00344_DS_:
                                    1-  879     	.line	504, "main.c"; 	CLK = 0;
     0004 1Err                      1-  880     	BCR	_PORTB,4
                                    1-  881     	.line	505, "main.c"; 	DIO = dat & 0x80;
                                    1-  882     	BANKSEL	r0x1028
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1-  883     	MOVR	r0x1028,W
     0007 2280                      1-  884     	ANDIA	0x80
     0008 0903                      1-  885     	BTRSS	STATUS,2
     0009 2101                      1-  886     	MOVIA	0x01
                                    1-  887     	BANKSEL	r0x102A
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1-  888     	MOVAR	r0x102A
     000C 13rr                      1-  889     	RRR	r0x102A,W
     000D 0803                      1-  890     	BTRSS	STATUS,0
     000E 1Drr                      1-  891     	BCR	_PORTB,2
     000F 0C03                      1-  892     	BTRSC	STATUS,0
     0010 19rr                      1-  893     	BSR	_PORTB,2
                                    1-  894     	.line	506, "main.c"; 	delay();
     0011 2rrr                      1-  895     	LCALL	_delay
                                    1-  896     	.line	507, "main.c"; 	CLK = 1;
     0012 1Arr                      1-  897     	BSR	_PORTB,4
                                    1-  898     	.line	508, "main.c"; 	dat <<= 1;
     0013 1C03                      1-  899     	BCR	STATUS,0
                                    1-  900     	BANKSEL	r0x1028
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 14rr                      1-  901     	RLR	r0x1028,F
                                    1-  902     	.line	509, "main.c"; 	delay();	 
     0016 2rrr                      1-  903     	LCALL	_delay
                                    1-  904     	.line	502, "main.c"; 	for(i = 0; i < 8; i++)
                                    1-  905     	BANKSEL	r0x1029
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 05rr                      1-  906     	INCR	r0x1029,F
                                    1-  907     ;;unsigned compare: left < lit (0x8=8), size=1
     0019 2108                      1-  908     	MOVIA	0x08
     001A 04rr                      1-  909     	SUBAR	r0x1029,W
     001B 0803                      1-  910     	BTRSS	STATUS,0
     001C 3rrr                      1-  911     	LGOTO	_00344_DS_
                                    1-  912     	.line	511, "main.c"; 	ack();
     001D 2rrr                      1-  913     	LCALL	_ack
                                    1-  914     	.line	512, "main.c"; 	}
                                    1-  915     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1-  916     ; exit point of _i2c_write
                                    1-  918     ;***
                                    1-  919     ;  pBlock Stats: dbName = C
                                    1-  920     ;***
                                    1-  921     ;has an exit
                                    1-  922     ;functions called:
                                    1-  923     ;   _delay
                                    1-  924     ;   _delay
                                    1-  925     ;   _delay
                                    1-  926     ;   _delay
                                    1-  927     ;   _delay
                                    1-  928     ;   _delay
                                    1-  929     ;   _delay
                                    1-  930     ;   _delay
                                    1-  931     ;1 compiler assigned register :
                                    1-  932     ;   r0x1027
                                    1-  933     ;; Starting pCode block
                                    1-  934     .segment "code"; module=main, function=_ack
     0000                           1-  936     _ack:
                                    1-  937     ; 2 exit points
                                    1-  938     	.line	482, "main.c"; 	CLK = 0;	
     0000 1Err                      1-  939     	BCR	_PORTB,4
                                    1-  940     	.line	483, "main.c"; 	delay();
     0001 2rrr                      1-  941     	LCALL	_delay
                                    1-  942     	.line	484, "main.c"; 	IOSTB |= 0x04;   //DIO设为输入态，建议高阻输入
     0002 001r                      1-  943     	IOSTR	_IOSTB
                                    1-  944     	BANKSEL	r0x1027
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  945     	MOVAR	r0x1027
     0005 19rr                      1-  946     	BSR	r0x1027,2
     0006 01rr                      1-  947     	MOVR	r0x1027,W
     0007 000r                      1-  948     	IOST	_IOSTB
                                    1-  949     	.line	486, "main.c"; 	delay();
     0008 2rrr                      1-  950     	LCALL	_delay
                                    1-  951     	.line	487, "main.c"; 	CLK = 1;
     0009 1Arr                      1-  952     	BSR	_PORTB,4
                                    1-  953     	.line	488, "main.c"; 	delay();
     000A 2rrr                      1-  954     	LCALL	_delay
                                    1-  955     	.line	489, "main.c"; 	CLK = 0;
     000B 1Err                      1-  956     	BCR	_PORTB,4
                                    1-  957     	.line	490, "main.c"; 	IOSTB &= 0xFB;  //DIO设为输出态
     000C 001r                      1-  958     	IOSTR	_IOSTB
                                    1-  959     	BANKSEL	r0x1027
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1-  960     	MOVAR	r0x1027
     000F 1Drr                      1-  961     	BCR	r0x1027,2
     0010 01rr                      1-  962     	MOVR	r0x1027,W
     0011 000r                      1-  963     	IOST	_IOSTB
                                    1-  964     	.line	491, "main.c"; 	delay();
     0012 2rrr                      1-  965     	LCALL	_delay
                                    1-  966     	.line	492, "main.c"; 	}
                                    1-  967     	RETURN	
     0013 0010                      3-   26 m1      ret
                                    1-  968     ; exit point of _ack
                                    1-  970     ;***
                                    1-  971     ;  pBlock Stats: dbName = C
                                    1-  972     ;***
                                    1-  973     ;has an exit
                                    1-  974     ;functions called:
                                    1-  975     ;   _delay
                                    1-  976     ;   _delay
                                    1-  977     ;   _delay
                                    1-  978     ;   _delay
                                    1-  979     ;   _delay
                                    1-  980     ;   _delay
                                    1-  981     ;; Starting pCode block
                                    1-  982     .segment "code"; module=main, function=_i2c_stop
     0000                           1-  984     _i2c_stop:
                                    1-  985     ; 2 exit points
                                    1-  986     	.line	466, "main.c"; 	DIO = 0;
     0000 1Drr                      1-  987     	BCR	_PORTB,2
                                    1-  988     	.line	467, "main.c"; 	delay();
     0001 2rrr                      1-  989     	LCALL	_delay
                                    1-  990     	.line	468, "main.c"; 	CLK = 1;
     0002 1Arr                      1-  991     	BSR	_PORTB,4
                                    1-  992     	.line	469, "main.c"; 	delay();
     0003 2rrr                      1-  993     	LCALL	_delay
                                    1-  994     	.line	470, "main.c"; 	DIO = 1;
     0004 19rr                      1-  995     	BSR	_PORTB,2
                                    1-  996     	.line	471, "main.c"; 	delay();
     0005 2rrr                      1-  997     	LCALL	_delay
                                    1-  998     	.line	472, "main.c"; 	}
                                    1-  999     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1- 1000     ; exit point of _i2c_stop
                                    1- 1002     ;***
                                    1- 1003     ;  pBlock Stats: dbName = C
                                    1- 1004     ;***
                                    1- 1005     ;has an exit
                                    1- 1006     ;functions called:
                                    1- 1007     ;   _delay
                                    1- 1008     ;   _delay
                                    1- 1009     ;   _delay
                                    1- 1010     ;   _delay
                                    1- 1011     ;   _delay
                                    1- 1012     ;   _delay
                                    1- 1013     ;; Starting pCode block
                                    1- 1014     .segment "code"; module=main, function=_i2c_start
     0000                           1- 1016     _i2c_start:
                                    1- 1017     ; 2 exit points
                                    1- 1018     	.line	451, "main.c"; 	DIO = 1;
     0000 19rr                      1- 1019     	BSR	_PORTB,2
                                    1- 1020     	.line	452, "main.c"; 	delay();
     0001 2rrr                      1- 1021     	LCALL	_delay
                                    1- 1022     	.line	453, "main.c"; 	CLK = 1;
     0002 1Arr                      1- 1023     	BSR	_PORTB,4
                                    1- 1024     	.line	454, "main.c"; 	delay();
     0003 2rrr                      1- 1025     	LCALL	_delay
                                    1- 1026     	.line	455, "main.c"; 	DIO = 0;
     0004 1Drr                      1- 1027     	BCR	_PORTB,2
                                    1- 1028     	.line	456, "main.c"; 	delay();	
     0005 2rrr                      1- 1029     	LCALL	_delay
                                    1- 1030     	.line	457, "main.c"; 	}
                                    1- 1031     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1- 1032     ; exit point of _i2c_start
                                    1- 1034     ;***
                                    1- 1035     ;  pBlock Stats: dbName = C
                                    1- 1036     ;***
                                    1- 1037     ;has an exit
                                    1- 1038     ;; Starting pCode block
                                    1- 1039     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1041     _F_wait_eoc:
                                    1- 1042     ; 2 exit points
     0000                           1- 1043     _00326_DS_:
                                    1- 1044     	.line	442, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1045     	BTRSS	_ADMDbits,5
     0001 3rrr                      1- 1046     	LGOTO	_00326_DS_
                                    1- 1047     	.line	444, "main.c"; 	}
                                    1- 1048     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1049     ; exit point of _F_wait_eoc
                                    1- 1051     ;***
                                    1- 1052     ;  pBlock Stats: dbName = C
                                    1- 1053     ;***
                                    1- 1054     ;has an exit
                                    1- 1055     ;functions called:
                                    1- 1056     ;   _delayus
                                    1- 1057     ;   _F_wait_eoc
                                    1- 1058     ;   _delayus
                                    1- 1059     ;   _F_wait_eoc
                                    1- 1060     ;6 compiler assigned registers:
                                    1- 1061     ;   r0x1037
                                    1- 1062     ;   r0x1038
                                    1- 1063     ;   r0x1039
                                    1- 1064     ;   r0x103A
                                    1- 1065     ;   r0x103B
                                    1- 1066     ;   r0x103C
                                    1- 1067     ;; Starting pCode block
                                    1- 1068     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1070     ;local variable name mapping:
     0000                           1- 1073     _F_AIN4_Convert:
                                    1- 1074     ; 2 exit points
                                    1- 1075     	.line	423, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1076     	BANKSEL	r0x1037
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1077     	MOVAR	r0x1037
                                    1- 1078     	.line	425, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1079     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1080     	CLRR	_R_AIN4_DATA_LB
                                    1- 1081     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1082     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1083     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1084     	.line	427, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1085     	MOVIA	0x94
     0008 00rr                      1- 1086     	MOVAR	_ADMD
                                    1- 1087     	.line	428, "main.c"; 	delayus(200);	
     0009 21C8                      1- 1088     	MOVIA	0xc8
     000A 2rrr                      1- 1089     	LCALL	_delayus
                                    1- 1090     	.line	429, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1091     	MOVIA	0x01
                                    1- 1092     	BANKSEL	r0x1038
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1093     	MOVAR	r0x1038
     000E                           1- 1094     _00319_DS_:
                                    1- 1095     	BANKSEL	r0x1038
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1096     	MOVR	r0x1038,W
                                    1- 1097     	BANKSEL	r0x1037
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1098     	SUBAR	r0x1037,W
     0012 0803                      1- 1099     	BTRSS	STATUS,0
     0013 3rrr                      1- 1100     	LGOTO	_00321_DS_
                                    1- 1101     	.line	431, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1102     	BSR	_ADMDbits,6
                                    1- 1103     	.line	432, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1- 1104     	LCALL	_F_wait_eoc
                                    1- 1105     	.line	433, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1106     	MOVIA	0x0f
     0017 10rr                      1- 1107     	ANDAR	_ADR,W
                                    1- 1108     ;;3	MOVAR	r0x1039
                                    1- 1109     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1- 1110     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1111     	.line	434, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1112     	MOVR	_ADD,W
                                    1- 1113     	BANKSEL	r0x1039
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1114     	MOVAR	r0x1039
                                    1- 1115     ;;1	CLRR	r0x103A
                                    1- 1116     ;;110	MOVR	r0x1039,W
                                    1- 1117     ;;108	MOVAR	r0x103B
     001D 2100                      1- 1118     	MOVIA	0x00
                                    1- 1119     	BANKSEL	r0x103C
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1120     	MOVAR	r0x103C
                                    1- 1121     ;;109	MOVR	r0x103B,W
                                    1- 1122     	BANKSEL	r0x1039
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1123     	MOVR	r0x1039,W
                                    1- 1124     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1125     	ADDAR	_R_AIN4_DATA,F
                                    1- 1126     	BANKSEL	r0x103C
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1127     	MOVR	r0x103C,W
     0026 0C03                      1- 1128     	BTRSC	STATUS,0
     0027 05rr                      1- 1129     	INCR	r0x103C,W
     0028 0D03                      1- 1130     	BTRSC	STATUS,2
     0029 3rrr                      1- 1131     	LGOTO	_00001_DS_
                                    1- 1132     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1133     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1134     _00001_DS_:
                                    1- 1135     	.line	429, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1136     	BANKSEL	r0x1038
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1137     	INCR	r0x1038,F
     002E 3rrr                      1- 1138     	LGOTO	_00319_DS_
     002F                           1- 1139     _00321_DS_:
                                    1- 1140     	.line	436, "main.c"; 	}
                                    1- 1141     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1142     ; exit point of _F_AIN4_Convert
                                    1- 1144     ;***
                                    1- 1145     ;  pBlock Stats: dbName = C
                                    1- 1146     ;***
                                    1- 1147     ;has an exit
                                    1- 1148     ;functions called:
                                    1- 1149     ;   _delayus
                                    1- 1150     ;   _F_wait_eoc
                                    1- 1151     ;   _delayus
                                    1- 1152     ;   _F_wait_eoc
                                    1- 1153     ;6 compiler assigned registers:
                                    1- 1154     ;   r0x103D
                                    1- 1155     ;   r0x103E
                                    1- 1156     ;   r0x103F
                                    1- 1157     ;   r0x1040
                                    1- 1158     ;   r0x1041
                                    1- 1159     ;   r0x1042
                                    1- 1160     ;; Starting pCode block
                                    1- 1161     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1163     ;local variable name mapping:
     0000                           1- 1166     _F_AIN3_Convert:
                                    1- 1167     ; 2 exit points
                                    1- 1168     	.line	407, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1169     	BANKSEL	r0x103D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1170     	MOVAR	r0x103D
                                    1- 1171     	.line	409, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1172     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1173     	CLRR	_R_AIN3_DATA_LB
                                    1- 1174     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1175     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1176     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1177     	.line	411, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1178     	MOVIA	0x93
     0008 00rr                      1- 1179     	MOVAR	_ADMD
                                    1- 1180     	.line	412, "main.c"; 	delayus(200);	
     0009 21C8                      1- 1181     	MOVIA	0xc8
     000A 2rrr                      1- 1182     	LCALL	_delayus
                                    1- 1183     	.line	413, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1184     	MOVIA	0x01
                                    1- 1185     	BANKSEL	r0x103E
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1186     	MOVAR	r0x103E
     000E                           1- 1187     _00310_DS_:
                                    1- 1188     	BANKSEL	r0x103E
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1189     	MOVR	r0x103E,W
                                    1- 1190     	BANKSEL	r0x103D
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1191     	SUBAR	r0x103D,W
     0012 0803                      1- 1192     	BTRSS	STATUS,0
     0013 3rrr                      1- 1193     	LGOTO	_00312_DS_
                                    1- 1194     	.line	415, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1195     	BSR	_ADMDbits,6
                                    1- 1196     	.line	416, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1- 1197     	LCALL	_F_wait_eoc
                                    1- 1198     	.line	417, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1199     	MOVIA	0x0f
     0017 10rr                      1- 1200     	ANDAR	_ADR,W
                                    1- 1201     ;;3	MOVAR	r0x103F
                                    1- 1202     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1- 1203     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1204     	.line	418, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1205     	MOVR	_ADD,W
                                    1- 1206     	BANKSEL	r0x103F
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1207     	MOVAR	r0x103F
                                    1- 1208     ;;1	CLRR	r0x1040
                                    1- 1209     ;;107	MOVR	r0x103F,W
                                    1- 1210     ;;105	MOVAR	r0x1041
     001D 2100                      1- 1211     	MOVIA	0x00
                                    1- 1212     	BANKSEL	r0x1042
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1213     	MOVAR	r0x1042
                                    1- 1214     ;;106	MOVR	r0x1041,W
                                    1- 1215     	BANKSEL	r0x103F
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1216     	MOVR	r0x103F,W
                                    1- 1217     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1218     	ADDAR	_R_AIN3_DATA,F
                                    1- 1219     	BANKSEL	r0x1042
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1220     	MOVR	r0x1042,W
     0026 0C03                      1- 1221     	BTRSC	STATUS,0
     0027 05rr                      1- 1222     	INCR	r0x1042,W
     0028 0D03                      1- 1223     	BTRSC	STATUS,2
     0029 3rrr                      1- 1224     	LGOTO	_00002_DS_
                                    1- 1225     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1226     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1227     _00002_DS_:
                                    1- 1228     	.line	413, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1229     	BANKSEL	r0x103E
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1230     	INCR	r0x103E,F
     002E 3rrr                      1- 1231     	LGOTO	_00310_DS_
     002F                           1- 1232     _00312_DS_:
                                    1- 1233     	.line	420, "main.c"; 	}
                                    1- 1234     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1235     ; exit point of _F_AIN3_Convert
                                    1- 1237     ;***
                                    1- 1238     ;  pBlock Stats: dbName = C
                                    1- 1239     ;***
                                    1- 1240     ;has an exit
                                    1- 1241     ;functions called:
                                    1- 1242     ;   _delayus
                                    1- 1243     ;   _F_wait_eoc
                                    1- 1244     ;   _delayus
                                    1- 1245     ;   _F_wait_eoc
                                    1- 1246     ;6 compiler assigned registers:
                                    1- 1247     ;   r0x1043
                                    1- 1248     ;   r0x1044
                                    1- 1249     ;   r0x1045
                                    1- 1250     ;   r0x1046
                                    1- 1251     ;   r0x1047
                                    1- 1252     ;   r0x1048
                                    1- 1253     ;; Starting pCode block
                                    1- 1254     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1- 1256     ;local variable name mapping:
     0000                           1- 1259     _F_AIN1_Convert:
                                    1- 1260     ; 2 exit points
                                    1- 1261     	.line	392, "main.c"; 	void F_AIN1_Convert(char count)
                                    1- 1262     	BANKSEL	r0x1043
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1263     	MOVAR	r0x1043
                                    1- 1264     	.line	394, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
                                    1- 1265     	BANKSEL	_R_AIN1_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1266     	CLRR	_R_AIN1_DATA_LB
                                    1- 1267     	BANKSEL	_R_AIN1_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1268     	CLRR	_R_AIN1_DATA
     0006 02rr                      1- 1269     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1270     	.line	396, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0007 2191                      1- 1271     	MOVIA	0x91
     0008 00rr                      1- 1272     	MOVAR	_ADMD
                                    1- 1273     	.line	397, "main.c"; 	delayus(200);	
     0009 21C8                      1- 1274     	MOVIA	0xc8
     000A 2rrr                      1- 1275     	LCALL	_delayus
                                    1- 1276     	.line	398, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1277     	MOVIA	0x01
                                    1- 1278     	BANKSEL	r0x1044
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1279     	MOVAR	r0x1044
     000E                           1- 1280     _00301_DS_:
                                    1- 1281     	BANKSEL	r0x1044
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1282     	MOVR	r0x1044,W
                                    1- 1283     	BANKSEL	r0x1043
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1284     	SUBAR	r0x1043,W
     0012 0803                      1- 1285     	BTRSS	STATUS,0
     0013 3rrr                      1- 1286     	LGOTO	_00303_DS_
                                    1- 1287     	.line	400, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1288     	BSR	_ADMDbits,6
                                    1- 1289     	.line	401, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1- 1290     	LCALL	_F_wait_eoc
                                    1- 1291     	.line	402, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1292     	MOVIA	0x0f
     0017 10rr                      1- 1293     	ANDAR	_ADR,W
                                    1- 1294     ;;3	MOVAR	r0x1045
                                    1- 1295     	BANKSEL	_R_AIN1_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1- 1296     	ADDAR	_R_AIN1_DATA_LB,F
                                    1- 1297     	.line	403, "main.c"; 	R_AIN1_DATA    += ADD; 
     001A 01rr                      1- 1298     	MOVR	_ADD,W
                                    1- 1299     	BANKSEL	r0x1045
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1300     	MOVAR	r0x1045
                                    1- 1301     ;;1	CLRR	r0x1046
                                    1- 1302     ;;104	MOVR	r0x1045,W
                                    1- 1303     ;;102	MOVAR	r0x1047
     001D 2100                      1- 1304     	MOVIA	0x00
                                    1- 1305     	BANKSEL	r0x1048
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1306     	MOVAR	r0x1048
                                    1- 1307     ;;103	MOVR	r0x1047,W
                                    1- 1308     	BANKSEL	r0x1045
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1309     	MOVR	r0x1045,W
                                    1- 1310     	BANKSEL	_R_AIN1_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1311     	ADDAR	_R_AIN1_DATA,F
                                    1- 1312     	BANKSEL	r0x1048
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1313     	MOVR	r0x1048,W
     0026 0C03                      1- 1314     	BTRSC	STATUS,0
     0027 05rr                      1- 1315     	INCR	r0x1048,W
     0028 0D03                      1- 1316     	BTRSC	STATUS,2
     0029 3rrr                      1- 1317     	LGOTO	_00003_DS_
                                    1- 1318     	BANKSEL	_R_AIN1_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1319     	ADDAR	(_R_AIN1_DATA + 1),F
     002C                           1- 1320     _00003_DS_:
                                    1- 1321     	.line	398, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1322     	BANKSEL	r0x1044
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1323     	INCR	r0x1044,F
     002E 3rrr                      1- 1324     	LGOTO	_00301_DS_
     002F                           1- 1325     _00303_DS_:
                                    1- 1326     	.line	405, "main.c"; 	}
                                    1- 1327     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1328     ; exit point of _F_AIN1_Convert
                                    1- 1330     ;***
                                    1- 1331     ;  pBlock Stats: dbName = C
                                    1- 1332     ;***
                                    1- 1333     ;has an exit
                                    1- 1334     ;functions called:
                                    1- 1335     ;   _F_AIN4_Convert
                                    1- 1336     ;   _F_AIN4_Convert
                                    1- 1337     ;4 compiler assigned registers:
                                    1- 1338     ;   r0x1049
                                    1- 1339     ;   r0x104A
                                    1- 1340     ;   r0x104B
                                    1- 1341     ;   r0x104C
                                    1- 1342     ;; Starting pCode block
                                    1- 1343     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1345     _checkOutA:
                                    1- 1346     ; 2 exit points
                                    1- 1347     	.line	376, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1348     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1349     	CLRR	_R_AIN4_DATA_LB
                                    1- 1350     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1351     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1352     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1353     	.line	377, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1354     	MOVIA	0x08
     0006 2rrr                      1- 1355     	LCALL	_F_AIN4_Convert
                                    1- 1356     	.line	378, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1357     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1358     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1359     	ANDIA	0xf0
     000A 00rr                      1- 1360     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1361     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1362     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1363     	ANDIA	0x0f
     000E 11rr                      1- 1364     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1365     	XORAR	_R_AIN4_DATA,F
                                    1- 1366     	.line	379, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1367     	MOVIA	0xf0
                                    1- 1368     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1369     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1370     	.line	380, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1371     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1372     	BANKSEL	r0x104B
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1373     	MOVAR	r0x104B
                                    1- 1374     ;;1	MOVAR	r0x1049
                                    1- 1375     ;;1	CLRR	r0x104A
                                    1- 1376     ;;101	MOVR	r0x1049,W
     0016 2100                      1- 1377     	MOVIA	0x00
                                    1- 1378     	BANKSEL	r0x104C
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1379     	MOVAR	r0x104C
                                    1- 1380     	BANKSEL	r0x104B
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1381     	MOVR	r0x104B,W
                                    1- 1382     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1383     	ADDAR	_R_AIN4_DATA,F
                                    1- 1384     	BANKSEL	r0x104C
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1385     	MOVR	r0x104C,W
     001F 0C03                      1- 1386     	BTRSC	STATUS,0
     0020 05rr                      1- 1387     	INCR	r0x104C,W
     0021 0D03                      1- 1388     	BTRSC	STATUS,2
     0022 3rrr                      1- 1389     	LGOTO	_00004_DS_
                                    1- 1390     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1391     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1392     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1393     _00004_DS_:
                                    1- 1394     	.line	381, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8	 
     0025 1C03                      1- 1395     	BCR	STATUS,0
                                    1- 1396     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1397     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1398     	RRR	_R_AIN4_DATA,F
                                    1- 1399     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1400     	BCR	STATUS,0
     002A 13rr                      1- 1401     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1402     	RRR	_R_AIN4_DATA,F
                                    1- 1403     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1404     	BCR	STATUS,0
     002D 13rr                      1- 1405     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1406     	RRR	_R_AIN4_DATA,F
                                    1- 1407     	.line	382, "main.c"; 	if(debug)
                                    1- 1408     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1409     	MOVR	_debug,W
     0031 0D03                      1- 1410     	BTRSC	STATUS,2
     0032 3rrr                      1- 1411     	LGOTO	_00294_DS_
                                    1- 1412     	.line	383, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 2164                      1- 1413     	MOVIA	0x64
                                    1- 1414     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1415     	MOVAR	_R_AIN4_DATA
     0036 02rr                      1- 1416     	CLRR	(_R_AIN4_DATA + 1)
     0037                           1- 1417     _00294_DS_:
                                    1- 1418     	.line	385, "main.c"; 	}
                                    1- 1419     	RETURN	
     0037 0010                      3-   26 m1      ret
                                    1- 1420     ; exit point of _checkOutA
                                    1- 1422     ;***
                                    1- 1423     ;  pBlock Stats: dbName = C
                                    1- 1424     ;***
                                    1- 1425     ;has an exit
                                    1- 1426     ;functions called:
                                    1- 1427     ;   _F_AIN3_Convert
                                    1- 1428     ;   _F_AIN3_Convert
                                    1- 1429     ;4 compiler assigned registers:
                                    1- 1430     ;   r0x104D
                                    1- 1431     ;   r0x104E
                                    1- 1432     ;   r0x104F
                                    1- 1433     ;   r0x1050
                                    1- 1434     ;; Starting pCode block
                                    1- 1435     .segment "code"; module=main, function=_checkBat16
     0000                           1- 1437     _checkBat16:
                                    1- 1438     ; 2 exit points
                                    1- 1439     	.line	363, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1440     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1441     	CLRR	_R_AIN3_DATA_LB
                                    1- 1442     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1443     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1444     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1445     	.line	364, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1446     	MOVIA	0x08
     0006 2rrr                      1- 1447     	LCALL	_F_AIN3_Convert
                                    1- 1448     	.line	365, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1449     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1450     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1451     	ANDIA	0xf0
     000A 00rr                      1- 1452     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1453     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1454     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1455     	ANDIA	0x0f
     000E 11rr                      1- 1456     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1457     	XORAR	_R_AIN3_DATA,F
                                    1- 1458     	.line	366, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1459     	MOVIA	0xf0
                                    1- 1460     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1461     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1462     	.line	367, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1463     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1464     	BANKSEL	r0x104F
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1465     	MOVAR	r0x104F
                                    1- 1466     ;;1	MOVAR	r0x104D
                                    1- 1467     ;;1	CLRR	r0x104E
                                    1- 1468     ;;100	MOVR	r0x104D,W
     0016 2100                      1- 1469     	MOVIA	0x00
                                    1- 1470     	BANKSEL	r0x1050
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1471     	MOVAR	r0x1050
                                    1- 1472     	BANKSEL	r0x104F
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1473     	MOVR	r0x104F,W
                                    1- 1474     	BANKSEL	_R_AIN3_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1475     	ADDAR	_R_AIN3_DATA,F
                                    1- 1476     	BANKSEL	r0x1050
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1477     	MOVR	r0x1050,W
     001F 0C03                      1- 1478     	BTRSC	STATUS,0
     0020 05rr                      1- 1479     	INCR	r0x1050,W
     0021 0D03                      1- 1480     	BTRSC	STATUS,2
     0022 3rrr                      1- 1481     	LGOTO	_00005_DS_
                                    1- 1482     	BANKSEL	_R_AIN3_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1483     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1484     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1485     _00005_DS_:
                                    1- 1486     	.line	368, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1487     	BCR	STATUS,0
                                    1- 1488     	BANKSEL	_R_AIN3_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1489     	RRR	(_R_AIN3_DATA + 1),F
     0028 13rr                      1- 1490     	RRR	_R_AIN3_DATA,F
                                    1- 1491     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1492     	BCR	STATUS,0
     002A 13rr                      1- 1493     	RRR	(_R_AIN3_DATA + 1),F
     002B 13rr                      1- 1494     	RRR	_R_AIN3_DATA,F
                                    1- 1495     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1496     	BCR	STATUS,0
     002D 13rr                      1- 1497     	RRR	(_R_AIN3_DATA + 1),F
     002E 13rr                      1- 1498     	RRR	_R_AIN3_DATA,F
                                    1- 1499     	.line	369, "main.c"; 	if(debug)
                                    1- 1500     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1501     	MOVR	_debug,W
     0031 0D03                      1- 1502     	BTRSC	STATUS,2
     0032 3rrr                      1- 1503     	LGOTO	_00287_DS_
                                    1- 1504     	.line	370, "main.c"; 	R_AIN3_DATA = BAT16;
     0033 2148                      1- 1505     	MOVIA	0x48
                                    1- 1506     	BANKSEL	_R_AIN3_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1507     	MOVAR	_R_AIN3_DATA
     0036 210D                      1- 1508     	MOVIA	0x0d
     0037 00rr                      1- 1509     	MOVAR	(_R_AIN3_DATA + 1)
     0038                           1- 1510     _00287_DS_:
                                    1- 1511     	.line	371, "main.c"; 	}
                                    1- 1512     	RETURN	
     0038 0010                      3-   26 m1      ret
                                    1- 1513     ; exit point of _checkBat16
                                    1- 1515     ;***
                                    1- 1516     ;  pBlock Stats: dbName = C
                                    1- 1517     ;***
                                    1- 1518     ;has an exit
                                    1- 1519     ;functions called:
                                    1- 1520     ;   _F_AIN1_Convert
                                    1- 1521     ;   _F_AIN1_Convert
                                    1- 1522     ;4 compiler assigned registers:
                                    1- 1523     ;   r0x1051
                                    1- 1524     ;   r0x1052
                                    1- 1525     ;   r0x1053
                                    1- 1526     ;   r0x1054
                                    1- 1527     ;; Starting pCode block
                                    1- 1528     .segment "code"; module=main, function=_checkBat12
     0000                           1- 1530     _checkBat12:
                                    1- 1531     ; 2 exit points
                                    1- 1532     	.line	349, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA_LB = 0x00;
                                    1- 1533     	BANKSEL	_R_AIN1_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1534     	CLRR	_R_AIN1_DATA_LB
                                    1- 1535     	BANKSEL	_R_AIN1_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1536     	CLRR	_R_AIN1_DATA
     0004 02rr                      1- 1537     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1538     	.line	350, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1539     	MOVIA	0x08
     0006 2rrr                      1- 1540     	LCALL	_F_AIN1_Convert
                                    1- 1541     	.line	351, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1542     	BANKSEL	_R_AIN1_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1543     	SWAPR	(_R_AIN1_DATA + 1),W
     0009 22F0                      1- 1544     	ANDIA	0xf0
     000A 00rr                      1- 1545     	MOVAR	(_R_AIN1_DATA + 1)
     000B 15rr                      1- 1546     	SWAPR	_R_AIN1_DATA,W
     000C 00rr                      1- 1547     	MOVAR	_R_AIN1_DATA
     000D 220F                      1- 1548     	ANDIA	0x0f
     000E 11rr                      1- 1549     	IORAR	(_R_AIN1_DATA + 1),F
     000F 12rr                      1- 1550     	XORAR	_R_AIN1_DATA,F
                                    1- 1551     	.line	352, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1552     	MOVIA	0xf0
                                    1- 1553     	BANKSEL	_R_AIN1_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1554     	ANDAR	_R_AIN1_DATA_LB,F
                                    1- 1555     	.line	353, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1556     	MOVR	_R_AIN1_DATA_LB,W
                                    1- 1557     	BANKSEL	r0x1053
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1558     	MOVAR	r0x1053
                                    1- 1559     ;;1	MOVAR	r0x1051
                                    1- 1560     ;;1	CLRR	r0x1052
                                    1- 1561     ;;99	MOVR	r0x1051,W
     0016 2100                      1- 1562     	MOVIA	0x00
                                    1- 1563     	BANKSEL	r0x1054
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1564     	MOVAR	r0x1054
                                    1- 1565     	BANKSEL	r0x1053
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1566     	MOVR	r0x1053,W
                                    1- 1567     	BANKSEL	_R_AIN1_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1568     	ADDAR	_R_AIN1_DATA,F
                                    1- 1569     	BANKSEL	r0x1054
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1570     	MOVR	r0x1054,W
     001F 0C03                      1- 1571     	BTRSC	STATUS,0
     0020 05rr                      1- 1572     	INCR	r0x1054,W
     0021 0D03                      1- 1573     	BTRSC	STATUS,2
     0022 3rrr                      1- 1574     	LGOTO	_00006_DS_
                                    1- 1575     	BANKSEL	_R_AIN1_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1576     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1- 1577     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1578     _00006_DS_:
                                    1- 1579     	.line	354, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1580     	BCR	STATUS,0
                                    1- 1581     	BANKSEL	_R_AIN1_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1582     	RRR	(_R_AIN1_DATA + 1),F
     0028 13rr                      1- 1583     	RRR	_R_AIN1_DATA,F
                                    1- 1584     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1585     	BCR	STATUS,0
     002A 13rr                      1- 1586     	RRR	(_R_AIN1_DATA + 1),F
     002B 13rr                      1- 1587     	RRR	_R_AIN1_DATA,F
                                    1- 1588     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1589     	BCR	STATUS,0
     002D 13rr                      1- 1590     	RRR	(_R_AIN1_DATA + 1),F
     002E 13rr                      1- 1591     	RRR	_R_AIN1_DATA,F
                                    1- 1592     	.line	355, "main.c"; 	if(debug)
                                    1- 1593     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1594     	MOVR	_debug,W
     0031 0D03                      1- 1595     	BTRSC	STATUS,2
     0032 3rrr                      1- 1596     	LGOTO	_00280_DS_
                                    1- 1597     	.line	356, "main.c"; 	R_AIN1_DATA = BAT12;
     0033 21B4                      1- 1598     	MOVIA	0xb4
                                    1- 1599     	BANKSEL	_R_AIN1_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1600     	MOVAR	_R_AIN1_DATA
     0036 210A                      1- 1601     	MOVIA	0x0a
     0037 00rr                      1- 1602     	MOVAR	(_R_AIN1_DATA + 1)
     0038                           1- 1603     _00280_DS_:
                                    1- 1604     	.line	359, "main.c"; 	}
                                    1- 1605     	RETURN	
     0038 0010                      3-   26 m1      ret
                                    1- 1606     ; exit point of _checkBat12
                                    1- 1608     ;***
                                    1- 1609     ;  pBlock Stats: dbName = C
                                    1- 1610     ;***
                                    1- 1611     ;has an exit
                                    1- 1612     ;functions called:
                                    1- 1613     ;   _delayus
                                    1- 1614     ;   _delayus
                                    1- 1615     ;; Starting pCode block
                                    1- 1616     .segment "code"; module=main, function=_initAD
     0000                           1- 1618     _initAD:
                                    1- 1619     ; 2 exit points
                                    1- 1620     	.line	324, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1621     	MOVIA	0x84
     0001 00rr                      1- 1622     	MOVAR	_ADMD
                                    1- 1623     	.line	327, "main.c"; 	ADVREFH = C_Vrefh_4V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 2102                      1- 1624     	MOVIA	0x02
     0003 00rr                      1- 1625     	MOVAR	_ADVREFH
                                    1- 1626     	.line	334, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0004 2110                      1- 1627     	MOVIA	0x10
     0005 00rr                      1- 1628     	MOVAR	_ADR
                                    1- 1629     	.line	336, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0006 2103                      1- 1630     	MOVIA	0x03
     0007 00rr                      1- 1631     	MOVAR	_ADCR
                                    1- 1632     	.line	339, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0008 1Arr                      1- 1633     	BSR	_ADMDbits,4
                                    1- 1634     	.line	340, "main.c"; 	delayus(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0009 2164                      1- 1635     	MOVIA	0x64
     000A 2rrr                      1- 1636     	LCALL	_delayus
                                    1- 1637     	.line	343, "main.c"; 	}
                                    1- 1638     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 1639     ; exit point of _initAD
                                    1- 1641     ;***
                                    1- 1642     ;  pBlock Stats: dbName = C
                                    1- 1643     ;***
                                    1- 1644     ;has an exit
                                    1- 1645     ;; Starting pCode block
                                    1- 1646     .segment "code"; module=main, function=_initSys
     0000                           1- 1648     _initSys:
                                    1- 1649     ; 2 exit points
                                    1- 1650     	.line	295, "main.c"; 	DISI();
     0000 0013                      1- 1651     	DISI
                                    1- 1652     	.line	296, "main.c"; 	IOSTA = 0x9F;
     0001 219F                      1- 1653     	MOVIA	0x9f
     0002 000r                      1- 1654     	IOST	_IOSTA
                                    1- 1655     	.line	297, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 1656     	CLRA	
     0004 000r                      1- 1657     	IOST	_IOSTB
                                    1- 1658     	.line	298, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 1659     	CLRR	_PORTB
                                    1- 1660     	.line	299, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1- 1661     	CLRR	_PORTA
                                    1- 1662     	.line	300, "main.c"; 	APHCON = 0x7F;
     0007 217F                      1- 1663     	MOVIA	0x7f
     0008 000r                      1- 1664     	IOST	_APHCON
                                    1- 1665     	.line	301, "main.c"; 	BPHCON = 0xFF;
     0009 21FF                      1- 1666     	MOVIA	0xff
     000A 00rr                      1- 1667     	MOVAR	_BPHCON
                                    1- 1668     	.line	303, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000B 2101                      1- 1669     	MOVIA	0x01
     000C 00rr                      1- 1670     	MOVAR	_INTE
                                    1- 1671     	.line	305, "main.c"; 	PCON1 = C_TMR0_Dis;
     000D 0200                      1- 1672     	CLRA	
     000E 000r                      1- 1673     	IOST	_PCON1
                                    1- 1674     	.line	307, "main.c"; 	TMR0 = 55;
     000F 2137                      1- 1675     	MOVIA	0x37
     0010 00rr                      1- 1676     	MOVAR	_TMR0
                                    1- 1677     	.line	308, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0011 0200                      1- 1678     	CLRA	
     0012 0003                      1- 1679     	T0MD	
                                    1- 1680     	.line	310, "main.c"; 	PCON1 = C_TMR0_En;
     0013 2101                      1- 1681     	MOVIA	0x01
     0014 000r                      1- 1682     	IOST	_PCON1
                                    1- 1683     	.line	313, "main.c"; 	PCON = C_WDT_En | C_LVR_En ;				// Enable WDT ,  Enable LVR
     0015 2188                      1- 1684     	MOVIA	0x88
     0016 00rr                      1- 1685     	MOVAR	_PCON
                                    1- 1686     	.line	316, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 1687     	MOVIA	0x01
     0018 000r                      1- 1688     	IOST	_PCON1
                                    1- 1689     	.line	317, "main.c"; 	ENI();
     0019 0004                      1- 1690     	ENI
                                    1- 1691     	.line	318, "main.c"; 	}
                                    1- 1692     	RETURN	
     001A 0010                      3-   26 m1      ret
                                    1- 1693     ; exit point of _initSys
                                    1- 1695     ;***
                                    1- 1696     ;  pBlock Stats: dbName = C
                                    1- 1697     ;***
                                    1- 1698     ;functions called:
                                    1- 1699     ;   _checkBat12
                                    1- 1700     ;   _checkBat16
                                    1- 1701     ;   _checkOutA
                                    1- 1702     ;   _checkBat12
                                    1- 1703     ;   _checkBat16
                                    1- 1704     ;   _checkOutA
                                    1- 1705     ;; Starting pCode block
                                    1- 1706     .segment "code"; module=main, function=_checkAD
     0000                           1- 1708     _checkAD:
                                    1- 1709     ; 0 exit points
                                    1- 1710     	.line	257, "main.c"; 	if(++checkTime > 100)
                                    1- 1711     	BANKSEL	_checkTime
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1712     	INCR	_checkTime,F
                                    1- 1713     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1714     ;;unsigned compare: left >= lit (0x65=101), size=1
     0002 2165                      1- 1715     	MOVIA	0x65
     0003 04rr                      1- 1716     	SUBAR	_checkTime,W
     0004 0803                      1- 1717     	BTRSS	STATUS,0
     0005 3rrr                      1- 1718     	LGOTO	_00252_DS_
                                    1- 1719     	.line	259, "main.c"; 	checkTime = 0;
     0006 02rr                      1- 1720     	CLRR	_checkTime
                                    1- 1721     	.line	260, "main.c"; 	PORTB &= 0xDF;		//第10脚输出低电平
     0007 1Err                      1- 1722     	BCR	_PORTB,5
                                    1- 1723     	.line	261, "main.c"; 	if(workStep > 0)
                                    1- 1724     	BANKSEL	_workStep
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1- 1725     	MOVR	_workStep,W
     000A 0D03                      1- 1726     	BTRSC	STATUS,2
     000B 3rrr                      1- 1727     	LGOTO	_00252_DS_
                                    1- 1728     	.line	263, "main.c"; 	if(++workStep >  2)
     000C 05rr                      1- 1729     	INCR	_workStep,F
                                    1- 1730     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1731     ;;unsigned compare: left >= lit (0x3=3), size=1
     000D 2103                      1- 1732     	MOVIA	0x03
     000E 04rr                      1- 1733     	SUBAR	_workStep,W
     000F 0803                      1- 1734     	BTRSS	STATUS,0
     0010 3rrr                      1- 1735     	LGOTO	_00246_DS_
                                    1- 1736     	.line	264, "main.c"; 	workStep = 1;
     0011 2101                      1- 1737     	MOVIA	0x01
     0012 00rr                      1- 1738     	MOVAR	_workStep
     0013                           1- 1739     _00246_DS_:
                                    1- 1740     	.line	265, "main.c"; 	if(++count15s > 15)
                                    1- 1741     	BANKSEL	_count15s
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 05rr                      1- 1742     	INCR	_count15s,F
                                    1- 1743     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1744     ;;unsigned compare: left >= lit (0x10=16), size=1
     0015 2110                      1- 1745     	MOVIA	0x10
     0016 04rr                      1- 1746     	SUBAR	_count15s,W
     0017 0803                      1- 1747     	BTRSS	STATUS,0
     0018 3rrr                      1- 1748     	LGOTO	_00252_DS_
                                    1- 1749     	.line	267, "main.c"; 	count15s = 0;
     0019 02rr                      1- 1750     	CLRR	_count15s
                                    1- 1751     	.line	268, "main.c"; 	workStep = 0;
                                    1- 1752     	BANKSEL	_workStep
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 02rr                      1- 1753     	CLRR	_workStep
                                    1- 1754     ;;unsigned compare: left < lit (0xA=10), size=1
     001C                           1- 1755     _00252_DS_:
                                    1- 1756     	.line	273, "main.c"; 	if(checkTime < 10)
     001C 210A                      1- 1757     	MOVIA	0x0a
                                    1- 1758     	BANKSEL	_checkTime
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 04rr                      1- 1759     	SUBAR	_checkTime,W
     001F 0C03                      1- 1760     	BTRSC	STATUS,0
     0020 3rrr                      1- 1761     	LGOTO	_00263_DS_
                                    1- 1762     	.line	275, "main.c"; 	checkBat12();
     0021 2rrr                      1- 1763     	LCALL	_checkBat12
     0022 3rrr                      1- 1764     	LGOTO	_00265_DS_
                                    1- 1765     ;;unsigned compare: left < lit (0x1E=30), size=1
     0023                           1- 1766     _00263_DS_:
                                    1- 1767     	.line	277, "main.c"; 	else if(checkTime < 30)
     0023 211E                      1- 1768     	MOVIA	0x1e
                                    1- 1769     	BANKSEL	_checkTime
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 04rr                      1- 1770     	SUBAR	_checkTime,W
     0026 0C03                      1- 1771     	BTRSC	STATUS,0
     0027 3rrr                      1- 1772     	LGOTO	_00260_DS_
                                    1- 1773     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1774     ;;unsigned compare: left >= lit (0x15=21), size=1
                                    1- 1775     	.line	279, "main.c"; 	if(checkTime > 20)
     0028 2115                      1- 1776     	MOVIA	0x15
     0029 04rr                      1- 1777     	SUBAR	_checkTime,W
     002A 0803                      1- 1778     	BTRSS	STATUS,0
     002B 3rrr                      1- 1779     	LGOTO	_00265_DS_
                                    1- 1780     	.line	280, "main.c"; 	checkBat16();
     002C 2rrr                      1- 1781     	LCALL	_checkBat16
     002D 3rrr                      1- 1782     	LGOTO	_00265_DS_
                                    1- 1783     ;;unsigned compare: left < lit (0x5A=90), size=1
     002E                           1- 1784     _00260_DS_:
                                    1- 1785     	.line	282, "main.c"; 	else if(checkTime < 90)
     002E 215A                      1- 1786     	MOVIA	0x5a
                                    1- 1787     	BANKSEL	_checkTime
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 04rr                      1- 1788     	SUBAR	_checkTime,W
     0031 0C03                      1- 1789     	BTRSC	STATUS,0
     0032 3rrr                      1- 1790     	LGOTO	_00265_DS_
                                    1- 1791     	.line	284, "main.c"; 	PORTB |= 0x20;
     0033 1Arr                      1- 1792     	BSR	_PORTB,5
                                    1- 1793     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1794     ;;unsigned compare: left >= lit (0x51=81), size=1
                                    1- 1795     	.line	285, "main.c"; 	if(checkTime > 80)
     0034 2151                      1- 1796     	MOVIA	0x51
     0035 04rr                      1- 1797     	SUBAR	_checkTime,W
     0036 0C03                      1- 1798     	BTRSC	STATUS,0
                                    1- 1799     	.line	286, "main.c"; 	checkOutA();
     0037 2rrr                      1- 1800     	LCALL	_checkOutA
     0038                           1- 1801     _00265_DS_:
                                    1- 1802     	.line	289, "main.c"; 	}
                                    1- 1803     	RETURN	
     0038 0010                      3-   26 m1      ret
                                    1- 1805     ;***
                                    1- 1806     ;  pBlock Stats: dbName = C
                                    1- 1807     ;***
                                    1- 1808     ;has an exit
                                    1- 1809     ;1 compiler assigned register :
                                    1- 1810     ;   r0x1055
                                    1- 1811     ;; Starting pCode block
                                    1- 1812     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1814     _chrgCtr:
                                    1- 1815     ; 2 exit points
                                    1- 1816     ;;unsigned compare: left < lit (0xA=10), size=2
                                    1- 1817     	.line	202, "main.c"; 	if(R_AIN4_DATA < 10)
     0000 2100                      1- 1818     	MOVIA	0x00
                                    1- 1819     	BANKSEL	_R_AIN4_DATA
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1820     	SUBAR	(_R_AIN4_DATA + 1),W
     0003 0903                      1- 1821     	BTRSS	STATUS,2
     0004 3rrr                      1- 1822     	LGOTO	_00235_DS_
     0005 210A                      1- 1823     	MOVIA	0x0a
     0006 04rr                      1- 1824     	SUBAR	_R_AIN4_DATA,W
     0007                           1- 1825     _00235_DS_:
     0007 0C03                      1- 1826     	BTRSC	STATUS,0
     0008 3rrr                      1- 1827     	LGOTO	_00183_DS_
                                    1- 1828     	.line	204, "main.c"; 	PORTA &= 0xBF;
     0009 1Frr                      1- 1829     	BCR	_PORTA,6
     000A 3rrr                      1- 1830     	LGOTO	_00184_DS_
     000B                           1- 1831     _00183_DS_:
                                    1- 1832     	.line	208, "main.c"; 	PORTA |= 0x40;
     000B 1Brr                      1- 1833     	BSR	_PORTA,6
                                    1- 1834     ;;unsigned compare: left < lit (0xE38=3640), size=2
     000C                           1- 1835     _00184_DS_:
                                    1- 1836     	.line	211, "main.c"; 	if(R_AIN3_DATA < 3640)
     000C 210E                      1- 1837     	MOVIA	0x0e
                                    1- 1838     	BANKSEL	_R_AIN3_DATA
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 1839     	SUBAR	(_R_AIN3_DATA + 1),W
     000F 0903                      1- 1840     	BTRSS	STATUS,2
     0010 3rrr                      1- 1841     	LGOTO	_00236_DS_
     0011 2138                      1- 1842     	MOVIA	0x38
     0012 04rr                      1- 1843     	SUBAR	_R_AIN3_DATA,W
     0013                           1- 1844     _00236_DS_:
     0013 0C03                      1- 1845     	BTRSC	STATUS,0
     0014 3rrr                      1- 1846     	LGOTO	_00191_DS_
                                    1- 1847     	.line	213, "main.c"; 	chrgStep = 1;
     0015 2101                      1- 1848     	MOVIA	0x01
                                    1- 1849     	BANKSEL	_chrgStep
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1850     	MOVAR	_chrgStep
     0018 3rrr                      1- 1851     	LGOTO	_00192_DS_
     0019                           1- 1852     _00191_DS_:
                                    1- 1853     	.line	215, "main.c"; 	else if(chrgStep == 1)
                                    1- 1854     	BANKSEL	_chrgStep
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1855     	MOVR	_chrgStep,W
     001B 2401                      1- 1856     	XORIA	0x01
     001C 0903                      1- 1857     	BTRSS	STATUS,2
     001D 3rrr                      1- 1858     	LGOTO	_00188_DS_
                                    1- 1859     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1860     ;;unsigned compare: left >= lit (0xE41=3649), size=2
                                    1- 1861     	.line	217, "main.c"; 	if(R_AIN3_DATA > 3648)
     001E 210E                      1- 1862     	MOVIA	0x0e
                                    1- 1863     	BANKSEL	_R_AIN3_DATA
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1- 1864     	SUBAR	(_R_AIN3_DATA + 1),W
     0021 0903                      1- 1865     	BTRSS	STATUS,2
     0022 3rrr                      1- 1866     	LGOTO	_00237_DS_
     0023 2141                      1- 1867     	MOVIA	0x41
     0024 04rr                      1- 1868     	SUBAR	_R_AIN3_DATA,W
     0025                           1- 1869     _00237_DS_:
     0025 0803                      1- 1870     	BTRSS	STATUS,0
     0026 3rrr                      1- 1871     	LGOTO	_00192_DS_
                                    1- 1872     	.line	218, "main.c"; 	chrgStep = 2;
     0027 2102                      1- 1873     	MOVIA	0x02
                                    1- 1874     	BANKSEL	_chrgStep
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 00rr                      1- 1875     	MOVAR	_chrgStep
     002A 3rrr                      1- 1876     	LGOTO	_00192_DS_
     002B                           1- 1877     _00188_DS_:
                                    1- 1878     	.line	221, "main.c"; 	chrgStep = 2;
     002B 2102                      1- 1879     	MOVIA	0x02
                                    1- 1880     	BANKSEL	_chrgStep
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 1881     	MOVAR	_chrgStep
     002E                           1- 1882     _00192_DS_:
                                    1- 1883     	.line	224, "main.c"; 	if(chrgStep == 2)
                                    1- 1884     	BANKSEL	r0x1055
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 02rr                      1- 1885     	CLRR	r0x1055
                                    1- 1886     	BANKSEL	_chrgStep
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1- 1887     	MOVR	_chrgStep,W
     0032 2402                      1- 1888     	XORIA	0x02
     0033 0903                      1- 1889     	BTRSS	STATUS,2
     0034 3rrr                      1- 1890     	LGOTO	_00007_DS_
                                    1- 1891     	BANKSEL	r0x1055
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 05rr                      1- 1892     	INCR	r0x1055,F
     0037                           1- 1893     _00007_DS_:
                                    1- 1894     	BANKSEL	r0x1055
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1- 1895     	MOVR	r0x1055,W
     0039 0D03                      1- 1896     	BTRSC	STATUS,2
     003A 3rrr                      1- 1897     	LGOTO	_00202_DS_
                                    1- 1898     ;;unsigned compare: left < lit (0xAAA=2730), size=2
                                    1- 1899     	.line	226, "main.c"; 	if(R_AIN1_DATA < 2730)
     003B 210A                      1- 1900     	MOVIA	0x0a
                                    1- 1901     	BANKSEL	_R_AIN1_DATA
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 04rr                      1- 1902     	SUBAR	(_R_AIN1_DATA + 1),W
     003E 0903                      1- 1903     	BTRSS	STATUS,2
     003F 3rrr                      1- 1904     	LGOTO	_00239_DS_
     0040 21AA                      1- 1905     	MOVIA	0xaa
     0041 04rr                      1- 1906     	SUBAR	_R_AIN1_DATA,W
     0042                           1- 1907     _00239_DS_:
     0042 0C03                      1- 1908     	BTRSC	STATUS,0
     0043 3rrr                      1- 1909     	LGOTO	_00199_DS_
                                    1- 1910     	.line	228, "main.c"; 	chrgStep = 2;
     0044 2102                      1- 1911     	MOVIA	0x02
                                    1- 1912     	BANKSEL	_chrgStep
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 00rr                      1- 1913     	MOVAR	_chrgStep
     0047 3rrr                      1- 1914     	LGOTO	_00202_DS_
     0048                           1- 1915     _00199_DS_:
                                    1- 1916     	.line	230, "main.c"; 	else if(chrgStep == 2)
                                    1- 1917     	BANKSEL	r0x1055
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 01rr                      1- 1918     	MOVR	r0x1055,W
     004A 0D03                      1- 1919     	BTRSC	STATUS,2
     004B 3rrr                      1- 1920     	LGOTO	_00196_DS_
                                    1- 1921     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1922     ;;unsigned compare: left >= lit (0xAB1=2737), size=2
                                    1- 1923     	.line	232, "main.c"; 	if(R_AIN1_DATA > 2736)
     004C 210A                      1- 1924     	MOVIA	0x0a
                                    1- 1925     	BANKSEL	_R_AIN1_DATA
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 04rr                      1- 1926     	SUBAR	(_R_AIN1_DATA + 1),W
     004F 0903                      1- 1927     	BTRSS	STATUS,2
     0050 3rrr                      1- 1928     	LGOTO	_00240_DS_
     0051 21B1                      1- 1929     	MOVIA	0xb1
     0052 04rr                      1- 1930     	SUBAR	_R_AIN1_DATA,W
     0053                           1- 1931     _00240_DS_:
     0053 0803                      1- 1932     	BTRSS	STATUS,0
     0054 3rrr                      1- 1933     	LGOTO	_00202_DS_
                                    1- 1934     	.line	234, "main.c"; 	chrgStep = 3;
     0055 2103                      1- 1935     	MOVIA	0x03
                                    1- 1936     	BANKSEL	_chrgStep
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 00rr                      1- 1937     	MOVAR	_chrgStep
     0058 3rrr                      1- 1938     	LGOTO	_00202_DS_
     0059                           1- 1939     _00196_DS_:
                                    1- 1940     	.line	239, "main.c"; 	chrgStep = 3;
     0059 2103                      1- 1941     	MOVIA	0x03
                                    1- 1942     	BANKSEL	_chrgStep
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1- 1943     	MOVAR	_chrgStep
     005C                           1- 1944     _00202_DS_:
                                    1- 1945     	.line	243, "main.c"; 	if(chrgStep == 1)
                                    1- 1946     	BANKSEL	_chrgStep
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 1947     	MOVR	_chrgStep,W
     005E 2401                      1- 1948     	XORIA	0x01
     005F 0903                      1- 1949     	BTRSS	STATUS,2
     0060 3rrr                      1- 1950     	LGOTO	_00204_DS_
                                    1- 1951     	.line	245, "main.c"; 	PORTA |= 0x20;
     0061 1Arr                      1- 1952     	BSR	_PORTA,5
                                    1- 1953     	.line	246, "main.c"; 	PORTB &= 0xF7;
     0062 1Drr                      1- 1954     	BCR	_PORTB,3
     0063 3rrr                      1- 1955     	LGOTO	_00206_DS_
     0064                           1- 1956     _00204_DS_:
                                    1- 1957     	.line	250, "main.c"; 	PORTB |= 0x08;
     0064 19rr                      1- 1958     	BSR	_PORTB,3
                                    1- 1959     	.line	251, "main.c"; 	PORTA &= 0xDF;
     0065 1Err                      1- 1960     	BCR	_PORTA,5
     0066                           1- 1961     _00206_DS_:
                                    1- 1962     	.line	253, "main.c"; 	}
                                    1- 1963     	RETURN	
     0066 0010                      3-   26 m1      ret
                                    1- 1964     ; exit point of _chrgCtr
                                    1- 1966     ;***
                                    1- 1967     ;  pBlock Stats: dbName = C
                                    1- 1968     ;***
                                    1- 1969     ;has an exit
                                    1- 1970     ;functions called:
                                    1- 1971     ;   _keyRead
                                    1- 1972     ;   __mulint
                                    1- 1973     ;   __divuint
                                    1- 1974     ;   __divuint
                                    1- 1975     ;   __gptrget1
                                    1- 1976     ;   __moduint
                                    1- 1977     ;   __divuint
                                    1- 1978     ;   __gptrget1
                                    1- 1979     ;   __moduint
                                    1- 1980     ;   __gptrget1
                                    1- 1981     ;   __mulint
                                    1- 1982     ;   __divuint
                                    1- 1983     ;   __mulint
                                    1- 1984     ;   __divuint
                                    1- 1985     ;   __divuint
                                    1- 1986     ;   __gptrget1
                                    1- 1987     ;   __moduint
                                    1- 1988     ;   __divuint
                                    1- 1989     ;   __gptrget1
                                    1- 1990     ;   __moduint
                                    1- 1991     ;   __gptrget1
                                    1- 1992     ;   _keyRead
                                    1- 1993     ;   __mulint
                                    1- 1994     ;   __divuint
                                    1- 1995     ;   __divuint
                                    1- 1996     ;   __gptrget1
                                    1- 1997     ;   __moduint
                                    1- 1998     ;   __divuint
                                    1- 1999     ;   __gptrget1
                                    1- 2000     ;   __moduint
                                    1- 2001     ;   __gptrget1
                                    1- 2002     ;   __mulint
                                    1- 2003     ;   __divuint
                                    1- 2004     ;   __mulint
                                    1- 2005     ;   __divuint
                                    1- 2006     ;   __divuint
                                    1- 2007     ;   __gptrget1
                                    1- 2008     ;   __moduint
                                    1- 2009     ;   __divuint
                                    1- 2010     ;   __gptrget1
                                    1- 2011     ;   __moduint
                                    1- 2012     ;   __gptrget1
                                    1- 2013     ;9 compiler assigned registers:
                                    1- 2014     ;   r0x1057
                                    1- 2015     ;   r0x1058
                                    1- 2016     ;   STK02
                                    1- 2017     ;   STK01
                                    1- 2018     ;   STK00
                                    1- 2019     ;   r0x1059
                                    1- 2020     ;   r0x105A
                                    1- 2021     ;   r0x105B
                                    1- 2022     ;   r0x105C
                                    1- 2023     ;; Starting pCode block
                                    1- 2024     .segment "code"; module=main, function=_workCtr
                                    1- 2026     ;local variable name mapping:
     0000                           1- 2029     _workCtr:
                                    1- 2030     ; 2 exit points
                                    1- 2031     	.line	144, "main.c"; 	if(keyRead(0x80 & (~PORTA)))
     0000 07rr                      1- 2032     	COMR	_PORTA,W
                                    1- 2033     	BANKSEL	r0x1057
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2034     	MOVAR	r0x1057
     0003 2180                      1- 2035     	MOVIA	0x80
     0004 10rr                      1- 2036     	ANDAR	r0x1057,F
     0005 01rr                      1- 2037     	MOVR	r0x1057,W
     0006 2rrr                      1- 2038     	LCALL	_keyRead
                                    1- 2039     	BANKSEL	r0x1057
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 2040     	MOVAR	r0x1057
     0009 01rr                      1- 2041     	MOVR	r0x1057,W
     000A 0D03                      1- 2042     	BTRSC	STATUS,2
     000B 3rrr                      1- 2043     	LGOTO	_00136_DS_
                                    1- 2044     	.line	147, "main.c"; 	workStep = 1;
     000C 2101                      1- 2045     	MOVIA	0x01
                                    1- 2046     	BANKSEL	_workStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 2047     	MOVAR	_workStep
                                    1- 2048     	.line	148, "main.c"; 	count15s = 0;
                                    1- 2049     	BANKSEL	_count15s
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1- 2050     	CLRR	_count15s
                                    1- 2051     	.line	149, "main.c"; 	checkTime = 0;
                                    1- 2052     	BANKSEL	_checkTime
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 02rr                      1- 2053     	CLRR	_checkTime
     0013                           1- 2054     _00136_DS_:
                                    1- 2055     	.line	152, "main.c"; 	if(checkTime == 50)
                                    1- 2056     	BANKSEL	_checkTime
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 2057     	MOVR	_checkTime,W
     0015 2432                      1- 2058     	XORIA	0x32
     0016 0903                      1- 2059     	BTRSS	STATUS,2
     0017 3rrr                      1- 2060     	LGOTO	_00152_DS_
                                    1- 2061     	.line	155, "main.c"; 	if(workStep == 1)
                                    1- 2062     	BANKSEL	_workStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 2063     	MOVR	_workStep,W
     001A 2401                      1- 2064     	XORIA	0x01
     001B 0903                      1- 2065     	BTRSS	STATUS,2
     001C 3rrr                      1- 2066     	LGOTO	_00148_DS_
                                    1- 2067     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2068     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
                                    1- 2069     	.line	158, "main.c"; 	if(R_AIN3_DATA > 1000)
     001D 2103                      1- 2070     	MOVIA	0x03
                                    1- 2071     	BANKSEL	_R_AIN3_DATA
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 2072     	SUBAR	(_R_AIN3_DATA + 1),W
     0020 0903                      1- 2073     	BTRSS	STATUS,2
     0021 3rrr                      1- 2074     	LGOTO	_00175_DS_
     0022 21E9                      1- 2075     	MOVIA	0xe9
     0023 04rr                      1- 2076     	SUBAR	_R_AIN3_DATA,W
     0024                           1- 2077     _00175_DS_:
     0024 0803                      1- 2078     	BTRSS	STATUS,0
     0025 3rrr                      1- 2079     	LGOTO	_00138_DS_
                                    1- 2080     	.line	160, "main.c"; 	result = ((R_AIN3_DATA-66)*15)/320;
     0026 21BE                      1- 2081     	MOVIA	0xbe
                                    1- 2082     	BANKSEL	_R_AIN3_DATA
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 03rr                      1- 2083     	ADDAR	_R_AIN3_DATA,W
                                    1- 2084     	BANKSEL	r0x1057
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 00rr                      1- 2085     	MOVAR	r0x1057
     002B 21FF                      1- 2086     	MOVIA	0xff
                                    1- 2087     	BANKSEL	r0x1058
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 2088     	MOVAR	r0x1058
                                    1- 2089     	BANKSEL	_R_AIN3_DATA
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1- 2090     	MOVR	(_R_AIN3_DATA + 1),W
     0030 0C03                      1- 2091     	BTRSC	STATUS,0
     0031 05rr                      1- 2092     	INCR	(_R_AIN3_DATA + 1),W
     0032 0D03                      1- 2093     	BTRSC	STATUS,2
     0033 3rrr                      1- 2094     	LGOTO	_00008_DS_
                                    1- 2095     	BANKSEL	r0x1058
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 03rr                      1- 2096     	ADDAR	r0x1058,F
     0036                           1- 2097     _00008_DS_:
                                    1- 2098     	BANKSEL	r0x1057
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1- 2099     	MOVR	r0x1057,W
     0038 00rr                      1- 2100     	MOVAR	STK02
                                    1- 2101     	BANKSEL	r0x1058
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 2102     	MOVR	r0x1058,W
     003B 00rr                      1- 2103     	MOVAR	STK01
     003C 210F                      1- 2104     	MOVIA	0x0f
     003D 00rr                      1- 2105     	MOVAR	STK00
     003E 2100                      1- 2106     	MOVIA	0x00
     003F 2rrr                      1- 2107     	LCALL	__mulint
                                    1- 2108     	BANKSEL	r0x1058
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 00rr                      1- 2109     	MOVAR	r0x1058
     0042 01rr                      1- 2110     	MOVR	STK00,W
                                    1- 2111     	BANKSEL	r0x1057
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 00rr                      1- 2112     	MOVAR	r0x1057
     0045 2140                      1- 2113     	MOVIA	0x40
     0046 00rr                      1- 2114     	MOVAR	STK02
     0047 2101                      1- 2115     	MOVIA	0x01
     0048 00rr                      1- 2116     	MOVAR	STK01
     0049 01rr                      1- 2117     	MOVR	r0x1057,W
     004A 00rr                      1- 2118     	MOVAR	STK00
                                    1- 2119     	BANKSEL	r0x1058
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1- 2120     	MOVR	r0x1058,W
     004D 2rrr                      1- 2121     	LCALL	__divuint
                                    1- 2122     	BANKSEL	r0x1058
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 00rr                      1- 2123     	MOVAR	r0x1058
     0050 01rr                      1- 2124     	MOVR	STK00,W
                                    1- 2125     	BANKSEL	r0x1057
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 2126     	MOVAR	r0x1057
                                    1- 2127     	.line	161, "main.c"; 	bai = tab[result/100];
     0053 2164                      1- 2128     	MOVIA	0x64
     0054 00rr                      1- 2129     	MOVAR	STK02
     0055 2100                      1- 2130     	MOVIA	0x00
     0056 00rr                      1- 2131     	MOVAR	STK01
     0057 01rr                      1- 2132     	MOVR	r0x1057,W
     0058 00rr                      1- 2133     	MOVAR	STK00
                                    1- 2134     	BANKSEL	r0x1058
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 01rr                      1- 2135     	MOVR	r0x1058,W
     005B 2rrr                      1- 2136     	LCALL	__divuint
                                    1- 2137     	BANKSEL	r0x1059
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 00rr                      1- 2138     	MOVAR	r0x1059
     005E 01rr                      1- 2139     	MOVR	STK00,W
                                    1- 2140     ;;3	MOVAR	r0x105A
     005F 25rr                      1- 2141     	ADDIA	(_tab + 0)
                                    1- 2142     	BANKSEL	r0x105A
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 00rr                      1- 2143     	MOVAR	r0x105A
                                    1- 2144     	BANKSEL	r0x1059
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 01rr                      1- 2145     	MOVR	r0x1059,W
     0064 0C03                      1- 2146     	BTRSC	STATUS,0
     0065 16rr                      1- 2147     	INCRSZ	r0x1059,W
     0066 25rr                      1- 2148     	ADDIA	((_tab + 0) >> 8) & 0xff
     0067 00rr                      1- 2149     	MOVAR	r0x1059
                                    1- 2150     	BANKSEL	r0x105A
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 01rr                      1- 2151     	MOVR	r0x105A,W
     006A 00rr                      1- 2152     	MOVAR	STK01
                                    1- 2153     	BANKSEL	r0x1059
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 01rr                      1- 2154     	MOVR	r0x1059,W
     006D 00rr                      1- 2155     	MOVAR	STK00
     006E 2100                      1- 2156     	MOVIA	0x00
     006F 2rrr                      1- 2157     	LCALL	__gptrget1
                                    1- 2158     	BANKSEL	_bai
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 00rr                      1- 2159     	MOVAR	_bai
                                    1- 2160     	.line	162, "main.c"; 	shi = tab[(result%100)/10];
     0072 2164                      1- 2161     	MOVIA	0x64
     0073 00rr                      1- 2162     	MOVAR	STK02
     0074 2100                      1- 2163     	MOVIA	0x00
     0075 00rr                      1- 2164     	MOVAR	STK01
                                    1- 2165     	BANKSEL	r0x1057
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 01rr                      1- 2166     	MOVR	r0x1057,W
     0078 00rr                      1- 2167     	MOVAR	STK00
                                    1- 2168     	BANKSEL	r0x1058
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 01rr                      1- 2169     	MOVR	r0x1058,W
     007B 2rrr                      1- 2170     	LCALL	__moduint
                                    1- 2171     	BANKSEL	r0x1059
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 00rr                      1- 2172     	MOVAR	r0x1059
     007E 01rr                      1- 2173     	MOVR	STK00,W
                                    1- 2174     	BANKSEL	r0x105A
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 00rr                      1- 2175     	MOVAR	r0x105A
     0081 210A                      1- 2176     	MOVIA	0x0a
     0082 00rr                      1- 2177     	MOVAR	STK02
     0083 2100                      1- 2178     	MOVIA	0x00
     0084 00rr                      1- 2179     	MOVAR	STK01
     0085 01rr                      1- 2180     	MOVR	r0x105A,W
     0086 00rr                      1- 2181     	MOVAR	STK00
                                    1- 2182     	BANKSEL	r0x1059
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 01rr                      1- 2183     	MOVR	r0x1059,W
     0089 2rrr                      1- 2184     	LCALL	__divuint
                                    1- 2185     	BANKSEL	r0x1059
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 00rr                      1- 2186     	MOVAR	r0x1059
     008C 01rr                      1- 2187     	MOVR	STK00,W
                                    1- 2188     ;;3	MOVAR	r0x105A
     008D 25rr                      1- 2189     	ADDIA	(_tab + 0)
                                    1- 2190     	BANKSEL	r0x105A
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 00rr                      1- 2191     	MOVAR	r0x105A
                                    1- 2192     	BANKSEL	r0x1059
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 01rr                      1- 2193     	MOVR	r0x1059,W
     0092 0C03                      1- 2194     	BTRSC	STATUS,0
     0093 16rr                      1- 2195     	INCRSZ	r0x1059,W
     0094 25rr                      1- 2196     	ADDIA	((_tab + 0) >> 8) & 0xff
     0095 00rr                      1- 2197     	MOVAR	r0x1059
                                    1- 2198     	BANKSEL	r0x105A
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 01rr                      1- 2199     	MOVR	r0x105A,W
     0098 00rr                      1- 2200     	MOVAR	STK01
                                    1- 2201     	BANKSEL	r0x1059
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 01rr                      1- 2202     	MOVR	r0x1059,W
     009B 00rr                      1- 2203     	MOVAR	STK00
     009C 2100                      1- 2204     	MOVIA	0x00
     009D 2rrr                      1- 2205     	LCALL	__gptrget1
                                    1- 2206     	BANKSEL	_shi
     009E rrrr                      3-   71 m1      .banksel ram_address
     009F 00rr                      1- 2207     	MOVAR	_shi
                                    1- 2208     	.line	163, "main.c"; 	shi |= 0x80;
     00A0 1Brr                      1- 2209     	BSR	_shi,7
                                    1- 2210     	.line	164, "main.c"; 	ge = tab[result%10];
     00A1 210A                      1- 2211     	MOVIA	0x0a
     00A2 00rr                      1- 2212     	MOVAR	STK02
     00A3 2100                      1- 2213     	MOVIA	0x00
     00A4 00rr                      1- 2214     	MOVAR	STK01
                                    1- 2215     	BANKSEL	r0x1057
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 01rr                      1- 2216     	MOVR	r0x1057,W
     00A7 00rr                      1- 2217     	MOVAR	STK00
                                    1- 2218     	BANKSEL	r0x1058
     00A8 rrrr                      3-   71 m1      .banksel ram_address
     00A9 01rr                      1- 2219     	MOVR	r0x1058,W
     00AA 2rrr                      1- 2220     	LCALL	__moduint
                                    1- 2221     	BANKSEL	r0x1059
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 00rr                      1- 2222     	MOVAR	r0x1059
     00AD 01rr                      1- 2223     	MOVR	STK00,W
                                    1- 2224     ;;3	MOVAR	r0x105A
     00AE 25rr                      1- 2225     	ADDIA	(_tab + 0)
                                    1- 2226     	BANKSEL	r0x105A
     00AF rrrr                      3-   71 m1      .banksel ram_address
     00B0 00rr                      1- 2227     	MOVAR	r0x105A
                                    1- 2228     	BANKSEL	r0x1059
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 01rr                      1- 2229     	MOVR	r0x1059,W
     00B3 0C03                      1- 2230     	BTRSC	STATUS,0
     00B4 16rr                      1- 2231     	INCRSZ	r0x1059,W
     00B5 25rr                      1- 2232     	ADDIA	((_tab + 0) >> 8) & 0xff
     00B6 00rr                      1- 2233     	MOVAR	r0x1059
                                    1- 2234     	BANKSEL	r0x105A
     00B7 rrrr                      3-   71 m1      .banksel ram_address
     00B8 01rr                      1- 2235     	MOVR	r0x105A,W
     00B9 00rr                      1- 2236     	MOVAR	STK01
                                    1- 2237     	BANKSEL	r0x1059
     00BA rrrr                      3-   71 m1      .banksel ram_address
     00BB 01rr                      1- 2238     	MOVR	r0x1059,W
     00BC 00rr                      1- 2239     	MOVAR	STK00
     00BD 2100                      1- 2240     	MOVIA	0x00
     00BE 2rrr                      1- 2241     	LCALL	__gptrget1
                                    1- 2242     	BANKSEL	_ge
     00BF rrrr                      3-   71 m1      .banksel ram_address
     00C0 00rr                      1- 2243     	MOVAR	_ge
     00C1 3rrr                      1- 2244     	LGOTO	_00152_DS_
     00C2                           1- 2245     _00138_DS_:
                                    1- 2246     	.line	168, "main.c"; 	bai = shi = ge = tab[0];
                                    1- 2247     	BANKSEL	_tab
     00C2 rrrr                      3-   71 m1      .banksel ram_address
     00C3 01rr                      1- 2248     	MOVR	(_tab + 0),W
                                    1- 2249     	BANKSEL	_shi
     00C4 rrrr                      3-   71 m1      .banksel ram_address
     00C5 00rr                      1- 2250     	MOVAR	_shi
                                    1- 2251     	BANKSEL	_bai
     00C6 rrrr                      3-   71 m1      .banksel ram_address
     00C7 00rr                      1- 2252     	MOVAR	_bai
                                    1- 2253     	BANKSEL	r0x105A
     00C8 rrrr                      3-   71 m1      .banksel ram_address
     00C9 00rr                      1- 2254     	MOVAR	r0x105A
                                    1- 2255     	BANKSEL	_ge
     00CA rrrr                      3-   71 m1      .banksel ram_address
     00CB 00rr                      1- 2256     	MOVAR	_ge
                                    1- 2257     ;;127	MOVR	r0x105A,W
                                    1- 2258     ;;129	MOVR	r0x105A,W
                                    1- 2259     	.line	169, "main.c"; 	shi |= 0x80;
                                    1- 2260     	BANKSEL	_shi
     00CC rrrr                      3-   71 m1      .banksel ram_address
     00CD 1Brr                      1- 2261     	BSR	_shi,7
     00CE 3rrr                      1- 2262     	LGOTO	_00152_DS_
     00CF                           1- 2263     _00148_DS_:
                                    1- 2264     	.line	172, "main.c"; 	else if(workStep == 2)
                                    1- 2265     	BANKSEL	_workStep
     00CF rrrr                      3-   71 m1      .banksel ram_address
     00D0 01rr                      1- 2266     	MOVR	_workStep,W
     00D1 2402                      1- 2267     	XORIA	0x02
     00D2 0903                      1- 2268     	BTRSS	STATUS,2
     00D3 3rrr                      1- 2269     	LGOTO	_00145_DS_
                                    1- 2270     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2271     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
                                    1- 2272     	.line	175, "main.c"; 	if(R_AIN3_DATA > 1000 && R_AIN1_DATA > 500)
     00D4 2103                      1- 2273     	MOVIA	0x03
                                    1- 2274     	BANKSEL	_R_AIN3_DATA
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 04rr                      1- 2275     	SUBAR	(_R_AIN3_DATA + 1),W
     00D7 0903                      1- 2276     	BTRSS	STATUS,2
     00D8 3rrr                      1- 2277     	LGOTO	_00176_DS_
     00D9 21E9                      1- 2278     	MOVIA	0xe9
     00DA 04rr                      1- 2279     	SUBAR	_R_AIN3_DATA,W
     00DB                           1- 2280     _00176_DS_:
     00DB 0803                      1- 2281     	BTRSS	STATUS,0
     00DC 3rrr                      1- 2282     	LGOTO	_00141_DS_
                                    1- 2283     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2284     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     00DD 2101                      1- 2285     	MOVIA	0x01
                                    1- 2286     	BANKSEL	_R_AIN1_DATA
     00DE rrrr                      3-   71 m1      .banksel ram_address
     00DF 04rr                      1- 2287     	SUBAR	(_R_AIN1_DATA + 1),W
     00E0 0903                      1- 2288     	BTRSS	STATUS,2
     00E1 3rrr                      1- 2289     	LGOTO	_00177_DS_
     00E2 21F5                      1- 2290     	MOVIA	0xf5
     00E3 04rr                      1- 2291     	SUBAR	_R_AIN1_DATA,W
     00E4                           1- 2292     _00177_DS_:
     00E4 0803                      1- 2293     	BTRSS	STATUS,0
     00E5 3rrr                      1- 2294     	LGOTO	_00141_DS_
                                    1- 2295     	.line	177, "main.c"; 	result = ((R_AIN3_DATA-66)*15)/320 + ((R_AIN1_DATA-48)*15)/320;
     00E6 21BE                      1- 2296     	MOVIA	0xbe
                                    1- 2297     	BANKSEL	_R_AIN3_DATA
     00E7 rrrr                      3-   71 m1      .banksel ram_address
     00E8 03rr                      1- 2298     	ADDAR	_R_AIN3_DATA,W
                                    1- 2299     	BANKSEL	r0x105A
     00E9 rrrr                      3-   71 m1      .banksel ram_address
     00EA 00rr                      1- 2300     	MOVAR	r0x105A
     00EB 21FF                      1- 2301     	MOVIA	0xff
                                    1- 2302     	BANKSEL	r0x1059
     00EC rrrr                      3-   71 m1      .banksel ram_address
     00ED 00rr                      1- 2303     	MOVAR	r0x1059
                                    1- 2304     	BANKSEL	_R_AIN3_DATA
     00EE rrrr                      3-   71 m1      .banksel ram_address
     00EF 01rr                      1- 2305     	MOVR	(_R_AIN3_DATA + 1),W
     00F0 0C03                      1- 2306     	BTRSC	STATUS,0
     00F1 05rr                      1- 2307     	INCR	(_R_AIN3_DATA + 1),W
     00F2 0D03                      1- 2308     	BTRSC	STATUS,2
     00F3 3rrr                      1- 2309     	LGOTO	_00009_DS_
                                    1- 2310     	BANKSEL	r0x1059
     00F4 rrrr                      3-   71 m1      .banksel ram_address
     00F5 03rr                      1- 2311     	ADDAR	r0x1059,F
     00F6                           1- 2312     _00009_DS_:
                                    1- 2313     	BANKSEL	r0x105A
     00F6 rrrr                      3-   71 m1      .banksel ram_address
     00F7 01rr                      1- 2314     	MOVR	r0x105A,W
     00F8 00rr                      1- 2315     	MOVAR	STK02
                                    1- 2316     	BANKSEL	r0x1059
     00F9 rrrr                      3-   71 m1      .banksel ram_address
     00FA 01rr                      1- 2317     	MOVR	r0x1059,W
     00FB 00rr                      1- 2318     	MOVAR	STK01
     00FC 210F                      1- 2319     	MOVIA	0x0f
     00FD 00rr                      1- 2320     	MOVAR	STK00
     00FE 2100                      1- 2321     	MOVIA	0x00
     00FF 2rrr                      1- 2322     	LCALL	__mulint
                                    1- 2323     	BANKSEL	r0x1059
     0100 rrrr                      3-   71 m1      .banksel ram_address
     0101 00rr                      1- 2324     	MOVAR	r0x1059
     0102 01rr                      1- 2325     	MOVR	STK00,W
                                    1- 2326     	BANKSEL	r0x105A
     0103 rrrr                      3-   71 m1      .banksel ram_address
     0104 00rr                      1- 2327     	MOVAR	r0x105A
     0105 2140                      1- 2328     	MOVIA	0x40
     0106 00rr                      1- 2329     	MOVAR	STK02
     0107 2101                      1- 2330     	MOVIA	0x01
     0108 00rr                      1- 2331     	MOVAR	STK01
     0109 01rr                      1- 2332     	MOVR	r0x105A,W
     010A 00rr                      1- 2333     	MOVAR	STK00
                                    1- 2334     	BANKSEL	r0x1059
     010B rrrr                      3-   71 m1      .banksel ram_address
     010C 01rr                      1- 2335     	MOVR	r0x1059,W
     010D 2rrr                      1- 2336     	LCALL	__divuint
                                    1- 2337     	BANKSEL	r0x1059
     010E rrrr                      3-   71 m1      .banksel ram_address
     010F 00rr                      1- 2338     	MOVAR	r0x1059
     0110 01rr                      1- 2339     	MOVR	STK00,W
                                    1- 2340     	BANKSEL	r0x105A
     0111 rrrr                      3-   71 m1      .banksel ram_address
     0112 00rr                      1- 2341     	MOVAR	r0x105A
     0113 21D0                      1- 2342     	MOVIA	0xd0
                                    1- 2343     	BANKSEL	_R_AIN1_DATA
     0114 rrrr                      3-   71 m1      .banksel ram_address
     0115 03rr                      1- 2344     	ADDAR	_R_AIN1_DATA,W
                                    1- 2345     	BANKSEL	r0x105B
     0116 rrrr                      3-   71 m1      .banksel ram_address
     0117 00rr                      1- 2346     	MOVAR	r0x105B
     0118 21FF                      1- 2347     	MOVIA	0xff
                                    1- 2348     	BANKSEL	r0x105C
     0119 rrrr                      3-   71 m1      .banksel ram_address
     011A 00rr                      1- 2349     	MOVAR	r0x105C
                                    1- 2350     	BANKSEL	_R_AIN1_DATA
     011B rrrr                      3-   71 m1      .banksel ram_address
     011C 01rr                      1- 2351     	MOVR	(_R_AIN1_DATA + 1),W
     011D 0C03                      1- 2352     	BTRSC	STATUS,0
     011E 05rr                      1- 2353     	INCR	(_R_AIN1_DATA + 1),W
     011F 0D03                      1- 2354     	BTRSC	STATUS,2
     0120 3rrr                      1- 2355     	LGOTO	_00010_DS_
                                    1- 2356     	BANKSEL	r0x105C
     0121 rrrr                      3-   71 m1      .banksel ram_address
     0122 03rr                      1- 2357     	ADDAR	r0x105C,F
     0123                           1- 2358     _00010_DS_:
                                    1- 2359     	BANKSEL	r0x105B
     0123 rrrr                      3-   71 m1      .banksel ram_address
     0124 01rr                      1- 2360     	MOVR	r0x105B,W
     0125 00rr                      1- 2361     	MOVAR	STK02
                                    1- 2362     	BANKSEL	r0x105C
     0126 rrrr                      3-   71 m1      .banksel ram_address
     0127 01rr                      1- 2363     	MOVR	r0x105C,W
     0128 00rr                      1- 2364     	MOVAR	STK01
     0129 210F                      1- 2365     	MOVIA	0x0f
     012A 00rr                      1- 2366     	MOVAR	STK00
     012B 2100                      1- 2367     	MOVIA	0x00
     012C 2rrr                      1- 2368     	LCALL	__mulint
                                    1- 2369     	BANKSEL	r0x105C
     012D rrrr                      3-   71 m1      .banksel ram_address
     012E 00rr                      1- 2370     	MOVAR	r0x105C
     012F 01rr                      1- 2371     	MOVR	STK00,W
                                    1- 2372     	BANKSEL	r0x105B
     0130 rrrr                      3-   71 m1      .banksel ram_address
     0131 00rr                      1- 2373     	MOVAR	r0x105B
     0132 2140                      1- 2374     	MOVIA	0x40
     0133 00rr                      1- 2375     	MOVAR	STK02
     0134 2101                      1- 2376     	MOVIA	0x01
     0135 00rr                      1- 2377     	MOVAR	STK01
     0136 01rr                      1- 2378     	MOVR	r0x105B,W
     0137 00rr                      1- 2379     	MOVAR	STK00
                                    1- 2380     	BANKSEL	r0x105C
     0138 rrrr                      3-   71 m1      .banksel ram_address
     0139 01rr                      1- 2381     	MOVR	r0x105C,W
     013A 2rrr                      1- 2382     	LCALL	__divuint
                                    1- 2383     	BANKSEL	r0x105C
     013B rrrr                      3-   71 m1      .banksel ram_address
     013C 00rr                      1- 2384     	MOVAR	r0x105C
     013D 01rr                      1- 2385     	MOVR	STK00,W
                                    1- 2386     	BANKSEL	r0x105B
     013E rrrr                      3-   71 m1      .banksel ram_address
     013F 00rr                      1- 2387     	MOVAR	r0x105B
                                    1- 2388     	BANKSEL	r0x105A
     0140 rrrr                      3-   71 m1      .banksel ram_address
     0141 03rr                      1- 2389     	ADDAR	r0x105A,W
                                    1- 2390     	BANKSEL	r0x1057
     0142 rrrr                      3-   71 m1      .banksel ram_address
     0143 00rr                      1- 2391     	MOVAR	r0x1057
                                    1- 2392     	BANKSEL	r0x1059
     0144 rrrr                      3-   71 m1      .banksel ram_address
     0145 01rr                      1- 2393     	MOVR	r0x1059,W
                                    1- 2394     	BANKSEL	r0x1058
     0146 rrrr                      3-   71 m1      .banksel ram_address
     0147 00rr                      1- 2395     	MOVAR	r0x1058
                                    1- 2396     	BANKSEL	r0x105C
     0148 rrrr                      3-   71 m1      .banksel ram_address
     0149 01rr                      1- 2397     	MOVR	r0x105C,W
     014A 0C03                      1- 2398     	BTRSC	STATUS,0
     014B 05rr                      1- 2399     	INCR	r0x105C,W
     014C 0D03                      1- 2400     	BTRSC	STATUS,2
     014D 3rrr                      1- 2401     	LGOTO	_00011_DS_
                                    1- 2402     	BANKSEL	r0x1058
     014E rrrr                      3-   71 m1      .banksel ram_address
     014F 03rr                      1- 2403     	ADDAR	r0x1058,F
     0150                           1- 2404     _00011_DS_:
                                    1- 2405     	.line	178, "main.c"; 	bai = tab[result/100];
     0150 2164                      1- 2406     	MOVIA	0x64
     0151 00rr                      1- 2407     	MOVAR	STK02
     0152 2100                      1- 2408     	MOVIA	0x00
     0153 00rr                      1- 2409     	MOVAR	STK01
                                    1- 2410     	BANKSEL	r0x1057
     0154 rrrr                      3-   71 m1      .banksel ram_address
     0155 01rr                      1- 2411     	MOVR	r0x1057,W
     0156 00rr                      1- 2412     	MOVAR	STK00
                                    1- 2413     	BANKSEL	r0x1058
     0157 rrrr                      3-   71 m1      .banksel ram_address
     0158 01rr                      1- 2414     	MOVR	r0x1058,W
     0159 2rrr                      1- 2415     	LCALL	__divuint
                                    1- 2416     	BANKSEL	r0x1059
     015A rrrr                      3-   71 m1      .banksel ram_address
     015B 00rr                      1- 2417     	MOVAR	r0x1059
     015C 01rr                      1- 2418     	MOVR	STK00,W
                                    1- 2419     ;;3	MOVAR	r0x105A
     015D 25rr                      1- 2420     	ADDIA	(_tab + 0)
                                    1- 2421     	BANKSEL	r0x105A
     015E rrrr                      3-   71 m1      .banksel ram_address
     015F 00rr                      1- 2422     	MOVAR	r0x105A
                                    1- 2423     	BANKSEL	r0x1059
     0160 rrrr                      3-   71 m1      .banksel ram_address
     0161 01rr                      1- 2424     	MOVR	r0x1059,W
     0162 0C03                      1- 2425     	BTRSC	STATUS,0
     0163 16rr                      1- 2426     	INCRSZ	r0x1059,W
     0164 25rr                      1- 2427     	ADDIA	((_tab + 0) >> 8) & 0xff
     0165 00rr                      1- 2428     	MOVAR	r0x1059
                                    1- 2429     	BANKSEL	r0x105A
     0166 rrrr                      3-   71 m1      .banksel ram_address
     0167 01rr                      1- 2430     	MOVR	r0x105A,W
     0168 00rr                      1- 2431     	MOVAR	STK01
                                    1- 2432     	BANKSEL	r0x1059
     0169 rrrr                      3-   71 m1      .banksel ram_address
     016A 01rr                      1- 2433     	MOVR	r0x1059,W
     016B 00rr                      1- 2434     	MOVAR	STK00
     016C 2100                      1- 2435     	MOVIA	0x00
     016D 2rrr                      1- 2436     	LCALL	__gptrget1
                                    1- 2437     	BANKSEL	_bai
     016E rrrr                      3-   71 m1      .banksel ram_address
     016F 00rr                      1- 2438     	MOVAR	_bai
                                    1- 2439     	.line	179, "main.c"; 	shi = tab[(result%100)/10];
     0170 2164                      1- 2440     	MOVIA	0x64
     0171 00rr                      1- 2441     	MOVAR	STK02
     0172 2100                      1- 2442     	MOVIA	0x00
     0173 00rr                      1- 2443     	MOVAR	STK01
                                    1- 2444     	BANKSEL	r0x1057
     0174 rrrr                      3-   71 m1      .banksel ram_address
     0175 01rr                      1- 2445     	MOVR	r0x1057,W
     0176 00rr                      1- 2446     	MOVAR	STK00
                                    1- 2447     	BANKSEL	r0x1058
     0177 rrrr                      3-   71 m1      .banksel ram_address
     0178 01rr                      1- 2448     	MOVR	r0x1058,W
     0179 2rrr                      1- 2449     	LCALL	__moduint
                                    1- 2450     	BANKSEL	r0x1059
     017A rrrr                      3-   71 m1      .banksel ram_address
     017B 00rr                      1- 2451     	MOVAR	r0x1059
     017C 01rr                      1- 2452     	MOVR	STK00,W
                                    1- 2453     	BANKSEL	r0x105A
     017D rrrr                      3-   71 m1      .banksel ram_address
     017E 00rr                      1- 2454     	MOVAR	r0x105A
     017F 210A                      1- 2455     	MOVIA	0x0a
     0180 00rr                      1- 2456     	MOVAR	STK02
     0181 2100                      1- 2457     	MOVIA	0x00
     0182 00rr                      1- 2458     	MOVAR	STK01
     0183 01rr                      1- 2459     	MOVR	r0x105A,W
     0184 00rr                      1- 2460     	MOVAR	STK00
                                    1- 2461     	BANKSEL	r0x1059
     0185 rrrr                      3-   71 m1      .banksel ram_address
     0186 01rr                      1- 2462     	MOVR	r0x1059,W
     0187 2rrr                      1- 2463     	LCALL	__divuint
                                    1- 2464     	BANKSEL	r0x1059
     0188 rrrr                      3-   71 m1      .banksel ram_address
     0189 00rr                      1- 2465     	MOVAR	r0x1059
     018A 01rr                      1- 2466     	MOVR	STK00,W
                                    1- 2467     ;;3	MOVAR	r0x105A
     018B 25rr                      1- 2468     	ADDIA	(_tab + 0)
                                    1- 2469     	BANKSEL	r0x105A
     018C rrrr                      3-   71 m1      .banksel ram_address
     018D 00rr                      1- 2470     	MOVAR	r0x105A
                                    1- 2471     	BANKSEL	r0x1059
     018E rrrr                      3-   71 m1      .banksel ram_address
     018F 01rr                      1- 2472     	MOVR	r0x1059,W
     0190 0C03                      1- 2473     	BTRSC	STATUS,0
     0191 16rr                      1- 2474     	INCRSZ	r0x1059,W
     0192 25rr                      1- 2475     	ADDIA	((_tab + 0) >> 8) & 0xff
     0193 00rr                      1- 2476     	MOVAR	r0x1059
                                    1- 2477     	BANKSEL	r0x105A
     0194 rrrr                      3-   71 m1      .banksel ram_address
     0195 01rr                      1- 2478     	MOVR	r0x105A,W
     0196 00rr                      1- 2479     	MOVAR	STK01
                                    1- 2480     	BANKSEL	r0x1059
     0197 rrrr                      3-   71 m1      .banksel ram_address
     0198 01rr                      1- 2481     	MOVR	r0x1059,W
     0199 00rr                      1- 2482     	MOVAR	STK00
     019A 2100                      1- 2483     	MOVIA	0x00
     019B 2rrr                      1- 2484     	LCALL	__gptrget1
                                    1- 2485     	BANKSEL	_shi
     019C rrrr                      3-   71 m1      .banksel ram_address
     019D 00rr                      1- 2486     	MOVAR	_shi
                                    1- 2487     	.line	180, "main.c"; 	shi |= 0x80;
     019E 1Brr                      1- 2488     	BSR	_shi,7
                                    1- 2489     	.line	181, "main.c"; 	ge = tab[result%10];
     019F 210A                      1- 2490     	MOVIA	0x0a
     01A0 00rr                      1- 2491     	MOVAR	STK02
     01A1 2100                      1- 2492     	MOVIA	0x00
     01A2 00rr                      1- 2493     	MOVAR	STK01
                                    1- 2494     	BANKSEL	r0x1057
     01A3 rrrr                      3-   71 m1      .banksel ram_address
     01A4 01rr                      1- 2495     	MOVR	r0x1057,W
     01A5 00rr                      1- 2496     	MOVAR	STK00
                                    1- 2497     	BANKSEL	r0x1058
     01A6 rrrr                      3-   71 m1      .banksel ram_address
     01A7 01rr                      1- 2498     	MOVR	r0x1058,W
     01A8 2rrr                      1- 2499     	LCALL	__moduint
                                    1- 2500     	BANKSEL	r0x1058
     01A9 rrrr                      3-   71 m1      .banksel ram_address
     01AA 00rr                      1- 2501     	MOVAR	r0x1058
     01AB 01rr                      1- 2502     	MOVR	STK00,W
                                    1- 2503     ;;3	MOVAR	r0x1057
     01AC 25rr                      1- 2504     	ADDIA	(_tab + 0)
                                    1- 2505     	BANKSEL	r0x1057
     01AD rrrr                      3-   71 m1      .banksel ram_address
     01AE 00rr                      1- 2506     	MOVAR	r0x1057
                                    1- 2507     	BANKSEL	r0x1058
     01AF rrrr                      3-   71 m1      .banksel ram_address
     01B0 01rr                      1- 2508     	MOVR	r0x1058,W
     01B1 0C03                      1- 2509     	BTRSC	STATUS,0
     01B2 16rr                      1- 2510     	INCRSZ	r0x1058,W
     01B3 25rr                      1- 2511     	ADDIA	((_tab + 0) >> 8) & 0xff
     01B4 00rr                      1- 2512     	MOVAR	r0x1058
                                    1- 2513     	BANKSEL	r0x1057
     01B5 rrrr                      3-   71 m1      .banksel ram_address
     01B6 01rr                      1- 2514     	MOVR	r0x1057,W
     01B7 00rr                      1- 2515     	MOVAR	STK01
                                    1- 2516     	BANKSEL	r0x1058
     01B8 rrrr                      3-   71 m1      .banksel ram_address
     01B9 01rr                      1- 2517     	MOVR	r0x1058,W
     01BA 00rr                      1- 2518     	MOVAR	STK00
     01BB 2100                      1- 2519     	MOVIA	0x00
     01BC 2rrr                      1- 2520     	LCALL	__gptrget1
                                    1- 2521     	BANKSEL	_ge
     01BD rrrr                      3-   71 m1      .banksel ram_address
     01BE 00rr                      1- 2522     	MOVAR	_ge
     01BF 3rrr                      1- 2523     	LGOTO	_00152_DS_
     01C0                           1- 2524     _00141_DS_:
                                    1- 2525     	.line	185, "main.c"; 	bai = shi = ge = tab[0];
                                    1- 2526     	BANKSEL	_tab
     01C0 rrrr                      3-   71 m1      .banksel ram_address
     01C1 01rr                      1- 2527     	MOVR	(_tab + 0),W
                                    1- 2528     	BANKSEL	_shi
     01C2 rrrr                      3-   71 m1      .banksel ram_address
     01C3 00rr                      1- 2529     	MOVAR	_shi
                                    1- 2530     	BANKSEL	r0x1057
     01C4 rrrr                      3-   71 m1      .banksel ram_address
     01C5 00rr                      1- 2531     	MOVAR	r0x1057
                                    1- 2532     	BANKSEL	_ge
     01C6 rrrr                      3-   71 m1      .banksel ram_address
     01C7 00rr                      1- 2533     	MOVAR	_ge
                                    1- 2534     ;;111	MOVR	r0x1057,W
                                    1- 2535     	BANKSEL	r0x1057
     01C8 rrrr                      3-   71 m1      .banksel ram_address
     01C9 01rr                      1- 2536     	MOVR	r0x1057,W
                                    1- 2537     	BANKSEL	_bai
     01CA rrrr                      3-   71 m1      .banksel ram_address
     01CB 00rr                      1- 2538     	MOVAR	_bai
                                    1- 2539     	.line	186, "main.c"; 	shi |= 0x80;
                                    1- 2540     	BANKSEL	_shi
     01CC rrrr                      3-   71 m1      .banksel ram_address
     01CD 1Brr                      1- 2541     	BSR	_shi,7
     01CE 3rrr                      1- 2542     	LGOTO	_00152_DS_
     01CF                           1- 2543     _00145_DS_:
                                    1- 2544     	.line	192, "main.c"; 	bai = shi = ge = 0x00;
                                    1- 2545     	BANKSEL	_ge
     01CF rrrr                      3-   71 m1      .banksel ram_address
     01D0 02rr                      1- 2546     	CLRR	_ge
                                    1- 2547     	BANKSEL	_shi
     01D1 rrrr                      3-   71 m1      .banksel ram_address
     01D2 02rr                      1- 2548     	CLRR	_shi
                                    1- 2549     	BANKSEL	_bai
     01D3 rrrr                      3-   71 m1      .banksel ram_address
     01D4 02rr                      1- 2550     	CLRR	_bai
     01D5                           1- 2551     _00152_DS_:
                                    1- 2552     	.line	197, "main.c"; 	}
                                    1- 2553     	RETURN	
     01D5 0010                      3-   26 m1      ret
                                    1- 2554     ; exit point of _workCtr
                                    1- 2556     ;***
                                    1- 2557     ;  pBlock Stats: dbName = C
                                    1- 2558     ;***
                                    1- 2559     ;has an exit
                                    1- 2560     ;1 compiler assigned register :
                                    1- 2561     ;   r0x1056
                                    1- 2562     ;; Starting pCode block
                                    1- 2563     .segment "code"; module=main, function=_keyRead
                                    1- 2565     ;local variable name mapping:
     0000                           1- 2567     _keyRead:
                                    1- 2568     ; 2 exit points
                                    1- 2569     	.line	119, "main.c"; 	char keyRead(char KeyStatus)	
                                    1- 2570     	BANKSEL	r0x1056
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2571     	MOVAR	r0x1056
                                    1- 2572     	.line	121, "main.c"; 	if (KeyStatus)
     0002 01rr                      1- 2573     	MOVR	r0x1056,W
     0003 0D03                      1- 2574     	BTRSC	STATUS,2
     0004 3rrr                      1- 2575     	LGOTO	_00128_DS_
                                    1- 2576     	.line	123, "main.c"; 	keyCount++;
                                    1- 2577     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 2578     	INCR	_keyCount,F
                                    1- 2579     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2580     	.line	124, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 2581     	MOVIA	0xc8
     0008 04rr                      1- 2582     	SUBAR	_keyCount,W
     0009 0803                      1- 2583     	BTRSS	STATUS,0
     000A 3rrr                      1- 2584     	LGOTO	_00129_DS_
                                    1- 2585     	.line	126, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 2586     	MOVIA	0xc8
     000C 00rr                      1- 2587     	MOVAR	_keyCount
     000D 3rrr                      1- 2588     	LGOTO	_00129_DS_
                                    1- 2589     ;;unsigned compare: left < lit (0x8=8), size=1
     000E                           1- 2590     _00128_DS_:
                                    1- 2591     	.line	131, "main.c"; 	if(keyCount >= 8)
     000E 2108                      1- 2592     	MOVIA	0x08
                                    1- 2593     	BANKSEL	_keyCount
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1- 2594     	SUBAR	_keyCount,W
     0011 0803                      1- 2595     	BTRSS	STATUS,0
     0012 3rrr                      1- 2596     	LGOTO	_00126_DS_
                                    1- 2597     	.line	133, "main.c"; 	keyCount = 0;
     0013 02rr                      1- 2598     	CLRR	_keyCount
                                    1- 2599     	.line	134, "main.c"; 	return	1;
     0014 2101                      1- 2600     	MOVIA	0x01
     0015 3rrr                      1- 2601     	LGOTO	_00130_DS_
     0016                           1- 2602     _00126_DS_:
                                    1- 2603     	.line	136, "main.c"; 	keyCount = 0;
                                    1- 2604     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 02rr                      1- 2605     	CLRR	_keyCount
     0018                           1- 2606     _00129_DS_:
                                    1- 2607     	.line	138, "main.c"; 	return 0;
     0018 2100                      1- 2608     	MOVIA	0x00
     0019                           1- 2609     _00130_DS_:
                                    1- 2610     	.line	139, "main.c"; 	}
                                    1- 2611     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1- 2612     ; exit point of _keyRead
                                    1- 2615     ;	code size estimation:
                                    1- 2616     ;	  972+  292 =  1264 instructions ( 3112 byte)
                                    1- 2618     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuint               Label    00000000
__gptrget1              Label    00000000
__moduint               Label    00000000
__mulint                Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002C
_00002_DS_              Label    0000002C
_00003_DS_              Label    0000002C
_00004_DS_              Label    00000025
_00005_DS_              Label    00000025
_00006_DS_              Label    00000025
_00007_DS_              Label    00000037
_00008_DS_              Label    00000036
_00009_DS_              Label    000000F6
_00010_DS_              Label    00000123
_00011_DS_              Label    00000150
_00108_DS_              Label    0000001F
_00110_DS_              Label    00000023
_00118_DS_              Label    00000002
_00126_DS_              Label    00000016
_00128_DS_              Label    0000000E
_00129_DS_              Label    00000018
_00130_DS_              Label    00000019
_00136_DS_              Label    00000013
_00138_DS_              Label    000000C2
_00141_DS_              Label    000001C0
_00145_DS_              Label    000001CF
_00148_DS_              Label    000000CF
_00152_DS_              Label    000001D5
_00175_DS_              Label    00000024
_00176_DS_              Label    000000DB
_00177_DS_              Label    000000E4
_00183_DS_              Label    0000000B
_00184_DS_              Label    0000000C
_00188_DS_              Label    0000002B
_00191_DS_              Label    00000019
_00192_DS_              Label    0000002E
_00196_DS_              Label    00000059
_00199_DS_              Label    00000048
_00202_DS_              Label    0000005C
_00204_DS_              Label    00000064
_00206_DS_              Label    00000066
_00235_DS_              Label    00000007
_00236_DS_              Label    00000013
_00237_DS_              Label    00000025
_00239_DS_              Label    00000042
_00240_DS_              Label    00000053
_00246_DS_              Label    00000013
_00252_DS_              Label    0000001C
_00260_DS_              Label    0000002E
_00263_DS_              Label    00000023
_00265_DS_              Label    00000038
_00280_DS_              Label    00000038
_00287_DS_              Label    00000038
_00294_DS_              Label    00000037
_00301_DS_              Label    0000000E
_00303_DS_              Label    0000002F
_00310_DS_              Label    0000000E
_00312_DS_              Label    0000002F
_00319_DS_              Label    0000000E
_00321_DS_              Label    0000002F
_00326_DS_              Label    00000000
_00344_DS_              Label    00000004
_00360_DS_              Label    00000003
_00367_DS_              Label    00000004
_00369_DS_              Label    0000000E
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ack                    Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_bai                    Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkAD                Label    00000000
_checkBat               Label    00000000
_checkBat12             Label    00000000
_checkBat16             Label    00000000
_checkOutA              Label    00000000
_checkTime              Label    00000000
_chrgCtr                Label    00000000
_chrgStep               Label    00000000
_CMPCR                  Label    00000000
_count15s               Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_delayus                Label    00000000
_dian                   Label    00000000
_display                Label    00000000
_F_AIN1_Convert         Label    00000000
_F_AIN3_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_FSR                    Label    00000000
_ge                     Label    00000000
_i2c_start              Label    00000000
_i2c_stop               Label    00000000
_i2c_write              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN1_DATA            Label    00000000
_R_AIN1_DATA_LB         Label    00000000
_R_AIN3_DATA            Label    00000000
_R_AIN3_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_shi                    Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_tab                    Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
_write_cmd              Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000034
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1035                 Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103C                 Label    00000000
r0x103D                 Label    00000000
r0x103E                 Label    00000000
r0x103F                 Label    00000000
r0x1042                 Label    00000000
r0x1043                 Label    00000000
r0x1044                 Label    00000000
r0x1045                 Label    00000000
r0x1048                 Label    00000000
r0x104B                 Label    00000000
r0x104C                 Label    00000000
r0x104F                 Label    00000000
r0x1050                 Label    00000000
r0x1053                 Label    00000000
r0x1054                 Label    00000000
r0x1055                 Label    00000000
r0x1056                 Label    00000000
r0x1057                 Label    00000000
r0x1058                 Label    00000000
r0x1059                 Label    00000000
r0x105A                 Label    00000000
r0x105B                 Label    00000000
r0x105C                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
