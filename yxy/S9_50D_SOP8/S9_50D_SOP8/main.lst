
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A050D,c=on
                                    1-    9     	#include "ny8a050d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTBbits
                                    1-   15     	extern	_PCONbits
                                    1-   16     	extern	_BWUCONbits
                                    1-   17     	extern	_BPLCONbits
                                    1-   18     	extern	_BPHCONbits
                                    1-   19     	extern	_INTEbits
                                    1-   20     	extern	_INTFbits
                                    1-   21     	extern	_INDF
                                    1-   22     	extern	_TMR0
                                    1-   23     	extern	_PCL
                                    1-   24     	extern	_STATUS
                                    1-   25     	extern	_FSR
                                    1-   26     	extern	_PORTB
                                    1-   27     	extern	_PCON
                                    1-   28     	extern	_BWUCON
                                    1-   29     	extern	_PCHBUF
                                    1-   30     	extern	_BPLCON
                                    1-   31     	extern	_BPHCON
                                    1-   32     	extern	_INTE
                                    1-   33     	extern	_INTF
                                    1-   34     	extern	_TBHP
                                    1-   35     	extern	_TBHD
                                    1-   36     	extern	_OSCCR
                                    1-   37     	extern	_IOSTB
                                    1-   38     	extern	_PS0CV
                                    1-   39     	extern	_BODCON
                                    1-   40     	extern	_PCON1
                                    1-   41     	extern	_T0MD
                                    1-   42     	extern	___sdcc_saved_fsr
                                    1-   43     	extern	___sdcc_saved_stk00
                                    1-   44     	extern	___sdcc_saved_stk01
                                    1-   45     	extern	__nyc_ny8_startup
                                    1-   46     ;--------------------------------------------------------
                                    1-   47     ; global declarations
                                    1-   48     ;--------------------------------------------------------
                                    1-   49     	extern	_setMotorduty
                                    1-   50     	extern	_keyRead
                                    1-   51     	extern	_gotoSleep
                                    1-   52     	extern	_ledCtr
                                    1-   53     	extern	_isr
                                    1-   54     	extern	_main
                                    1-   55     	extern	_intCount
                                    1-   56     	extern	_IntFlag
                                    1-   57     	extern	_ledCount
                                    1-   58     	extern	_motorFlag
                                    1-   59     	extern	_duty
                                    1-   60     	extern	_workStep
                                    1-   61     	extern	_keyCount
                                    1-   62     	extern	_workTime
                                    1-   63     	extern	_stopTime
                                    1-   64     	extern	_ledTime
                                    1-   65     	extern	_startTime
                                    1-   67     	extern PSAVE
                                    1-   68     	extern SSAVE
                                    1-   69     	extern WSAVE
                                    1-   70     	extern STK02
                                    1-   71     	extern STK01
                                    1-   72     	extern STK00
                                    1-   74     .segment "uninit", 0x20000010
 20000010                           1-   75     PSAVE:
                                    1-   76     	.res 1
 20000011                           1-   77     SSAVE:
                                    1-   78     	.res 1
 20000012                           1-   79     WSAVE:
                                    1-   80     	.res 1
 20000013                           1-   81     STK02:
                                    1-   82     	.res 1
 20000014                           1-   83     STK01:
                                    1-   84     	.res 1
 20000015                           1-   85     STK00:
                                    1-   86     	.res 1
                                    1-   88     ;--------------------------------------------------------
                                    1-   89     ; global definitions
                                    1-   90     ;--------------------------------------------------------
                                    1-   91     ;--------------------------------------------------------
                                    1-   92     ; absolute symbol definitions
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     ; compiler-defined variables
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     .segment "uninit"
     0000                           1-   98     r0x1010:
                                    1-   99     	.res	1
                                    1-  100     .segment "uninit"
     0000                           1-  101     r0x100F:
                                    1-  102     	.res	1
                                    1-  103     ;--------------------------------------------------------
                                    1-  104     ; initialized data
                                    1-  105     ;--------------------------------------------------------
                                    1-  107     .segment "idata"
     0000                           1-  108     _intCount:
     0000 0000                      1-  109     	dw	0x00
                                    1-  113     .segment "idata"
     0000                           1-  114     _IntFlag:
     0000 0000                      1-  115     	dw	0x00
                                    1-  119     .segment "idata"
     0000                           1-  120     _ledCount:
     0000 0000                      1-  121     	dw	0x00
                                    1-  125     .segment "idata"
     0000                           1-  126     _motorFlag:
     0000 0000                      1-  127     	dw	0x00
                                    1-  131     .segment "idata"
     0000                           1-  132     _duty:
     0000 0005                      1-  133     	dw	0x05
                                    1-  137     .segment "idata"
     0000                           1-  138     _workStep:
     0000 0000                      1-  139     	dw	0x00
                                    1-  143     .segment "idata"
     0000                           1-  144     _keyCount:
     0000 0000                      1-  145     	dw	0x00
                                    1-  149     .segment "idata"
     0000                           1-  150     _workTime:
     0000 0000                      1-  151     	dw	0x00
                                    1-  155     .segment "idata"
     0000                           1-  156     _stopTime:
     0000 0000                      1-  157     	dw	0x00
                                    1-  161     .segment "idata"
     0000                           1-  162     _ledTime:
     0000 0000 0000                 1-  163     	dw	0x00, 0x00
                                    1-  167     .segment "idata"
     0000                           1-  168     _startTime:
     0000 0000                      1-  169     	dw	0x00
                                    1-  172     ;--------------------------------------------------------
                                    1-  173     ; overlayable items in internal ram 
                                    1-  174     ;--------------------------------------------------------
                                    1-  175     ;	udata_ovr
                                    1-  176     ;--------------------------------------------------------
                                    1-  177     ; reset vector 
                                    1-  178     ;--------------------------------------------------------
                                    1-  179     ORG	0x0000
     0000 3rrr                      1-  180     	LGOTO	__nyc_ny8_startup
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     ; interrupt and initialization code
                                    1-  183     ;--------------------------------------------------------
                                    1-  184     ORG 0x0008
     0008 3rrr                      1-  185     	lgoto	__sdcc_interrupt
                                    1-  187     .segment "code"
     0000                           1-  188     __sdcc_interrupt:
                                    1-  189     ;***
                                    1-  190     ;  pBlock Stats: dbName = I
                                    1-  191     ;***
                                    1-  192     ;2 compiler assigned registers:
                                    1-  193     ;   STK00
                                    1-  194     ;   STK01
                                    1-  195     ;; Starting pCode block
     0000                           1-  196     _isr:
                                    1-  197     ; 0 exit points
                                    1-  198     	.line	29, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  199     	MOVAR	WSAVE
     0001 1503                      1-  200     	SWAPR	STATUS,W
     0002 0283                      1-  201     	CLRR	STATUS
     0003 00rr                      1-  202     	MOVAR	SSAVE
     0004 010A                      1-  203     	MOVR	PCHBUF,W
     0005 028A                      1-  204     	CLRR	PCHBUF
     0006 00rr                      1-  205     	MOVAR	PSAVE
     0007 0104                      1-  206     	MOVR	FSR,W
     0008 00rr                      1-  207     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  208     	MOVR	STK00,W
     000A 00rr                      1-  209     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  210     	MOVR	STK01,W
     000C 00rr                      1-  211     	MOVAR	___sdcc_saved_stk01
                                    1-  212     	.line	31, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  213     	BTRSS	_INTFbits,0
     000E 3rrr                      1-  214     	LGOTO	_00108_DS_
                                    1-  215     	.line	33, "main.c"; 	TMR0 += 56;
     000F 2138                      1-  216     	MOVIA	0x38
     0010 03rr                      1-  217     	ADDAR	_TMR0,F
                                    1-  218     	.line	34, "main.c"; 	if(++intCount >= 10)
     0011 05rr                      1-  219     	INCR	_intCount,F
                                    1-  220     ;;unsigned compare: left < lit (0xA=10), size=1
     0012 210A                      1-  221     	MOVIA	0x0a
     0013 04rr                      1-  222     	SUBAR	_intCount,W
     0014 0803                      1-  223     	BTRSS	STATUS,0
     0015 3rrr                      1-  224     	LGOTO	_00108_DS_
                                    1-  225     	.line	36, "main.c"; 	intCount = 0;
     0016 02rr                      1-  226     	CLRR	_intCount
                                    1-  227     	.line	37, "main.c"; 	IntFlag = 1;
     0017 2101                      1-  228     	MOVIA	0x01
     0018 00rr                      1-  229     	MOVAR	_IntFlag
     0019                           1-  230     _00108_DS_:
                                    1-  231     	.line	40, "main.c"; 	if(INTFbits.PBIF)
     0019 08rr                      1-  232     	BTRSS	_INTFbits,1
     001A 3rrr                      1-  233     	LGOTO	_00110_DS_
                                    1-  234     	.line	42, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     001B 21FD                      1-  235     	MOVIA	0xfd
     001C 00rr                      1-  236     	MOVAR	_INTF
     001D                           1-  237     _00110_DS_:
                                    1-  238     	.line	45, "main.c"; 	INTF = 0;
     001D 02rr                      1-  239     	CLRR	_INTF
                                    1-  240     	.line	47, "main.c"; 	}
     001E 01rr                      1-  241     	MOVR	___sdcc_saved_stk01,W
     001F 00rr                      1-  242     	MOVAR	STK01
     0020 01rr                      1-  243     	MOVR	___sdcc_saved_stk00,W
     0021 00rr                      1-  244     	MOVAR	STK00
     0022 01rr                      1-  245     	MOVR	___sdcc_saved_fsr,W
     0023 0084                      1-  246     	MOVAR	FSR
     0024 01rr                      1-  247     	MOVR	PSAVE,W
     0025 008A                      1-  248     	MOVAR	PCHBUF
     0026 0283                      1-  249     	CLRR	STATUS
     0027 15rr                      1-  250     	SWAPR	SSAVE,W
     0028 0083                      1-  251     	MOVAR	STATUS
     0029 15rr                      1-  252     	SWAPR	WSAVE,F
     002A 15rr                      1-  253     	SWAPR	WSAVE,W
     002B                           1-  254     END_OF_INTERRUPT:
     002B 0011                      1-  255     	RETIE	
                                    1-  257     ;--------------------------------------------------------
                                    1-  258     ; code
                                    1-  259     ;--------------------------------------------------------
                                    1-  260     ;***
                                    1-  261     ;  pBlock Stats: dbName = M
                                    1-  262     ;***
                                    1-  263     ;has an exit
                                    1-  264     ;functions called:
                                    1-  265     ;   _gotoSleep
                                    1-  266     ;   _setMotorduty
                                    1-  267     ;   _gotoSleep
                                    1-  268     ;   _keyRead
                                    1-  269     ;   _ledCtr
                                    1-  270     ;   _gotoSleep
                                    1-  271     ;   _setMotorduty
                                    1-  272     ;   _gotoSleep
                                    1-  273     ;   _keyRead
                                    1-  274     ;   _ledCtr
                                    1-  275     ;1 compiler assigned register :
                                    1-  276     ;   r0x1010
                                    1-  277     ;; Starting pCode block
                                    1-  278     .segment "code"; module=main, function=_main
                                    1-  280     ;local variable name mapping:
     0000                           1-  282     _main:
                                    1-  283     ; 2 exit points
                                    1-  284     	.line	53, "main.c"; 	DISI();
     0000 0013                      1-  285     	DISI
                                    1-  286     	.line	54, "main.c"; 	BPHCON = (unsigned char)~C_PB5_PHB;				// Enable PB4 Pull-High Resistor,others disable
     0001 21DF                      1-  287     	MOVIA	0xdf
     0002 00rr                      1-  288     	MOVAR	_BPHCON
                                    1-  289     	.line	55, "main.c"; 	IOSTB =  C_PB5_Input;	// Set PB4 & PB1 to input mode,others set to output mode
     0003 2120                      1-  290     	MOVIA	0x20
     0004 000r                      1-  291     	IOST	_IOSTB
                                    1-  292     	.line	56, "main.c"; 	PORTB = 0x02;                       // PB2 & PB0 output high
     0005 2102                      1-  293     	MOVIA	0x02
     0006 00rr                      1-  294     	MOVAR	_PORTB
                                    1-  295     	.line	57, "main.c"; 	duty = 5;
     0007 2105                      1-  296     	MOVIA	0x05
     0008 00rr                      1-  297     	MOVAR	_duty
                                    1-  298     	.line	58, "main.c"; 	INTE =  C_INT_TMR0;
     0009 2101                      1-  299     	MOVIA	0x01
     000A 00rr                      1-  300     	MOVAR	_INTE
                                    1-  301     	.line	59, "main.c"; 	TMR0 = 55;
     000B 2137                      1-  302     	MOVIA	0x37
     000C 00rr                      1-  303     	MOVAR	_TMR0
                                    1-  304     	.line	60, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     000D 0200                      1-  305     	CLRA	
     000E 0003                      1-  306     	T0MD	
                                    1-  307     	.line	63, "main.c"; 	PCON = C_WDT_En;				// Enable WDT ,  Enable LVR
     000F 2180                      1-  308     	MOVIA	0x80
     0010 00rr                      1-  309     	MOVAR	_PCON
                                    1-  310     	.line	66, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0011 2101                      1-  311     	MOVIA	0x01
     0012 000r                      1-  312     	IOST	_PCON1
                                    1-  313     	.line	67, "main.c"; 	ENI();
     0013 0004                      1-  314     	ENI
                                    1-  315     	.line	68, "main.c"; 	gotoSleep();
     0014 2rrr                      1-  316     	LCALL	_gotoSleep
     0015                           1-  317     _00169_DS_:
                                    1-  318     	.line	71, "main.c"; 	CLRWDT();
     0015 0002                      1-  319     	clrwdt
                                    1-  320     	.line	72, "main.c"; 	if(motorFlag)
     0016 01rr                      1-  321     	MOVR	_motorFlag,W
     0017 0903                      1-  322     	BTRSS	STATUS,2
                                    1-  323     	.line	73, "main.c"; 	setMotorduty();
     0018 2rrr                      1-  324     	LCALL	_setMotorduty
                                    1-  325     	.line	74, "main.c"; 	if(!IntFlag)
     0019 01rr                      1-  326     	MOVR	_IntFlag,W
     001A 0D03                      1-  327     	BTRSC	STATUS,2
     001B 3rrr                      1-  328     	LGOTO	_00169_DS_
                                    1-  329     	.line	76, "main.c"; 	IntFlag = 0;   
     001C 02rr                      1-  330     	CLRR	_IntFlag
                                    1-  331     	.line	77, "main.c"; 	if(workStep == 0 && keyCount == 0)
     001D 01rr                      1-  332     	MOVR	_workStep,W
     001E 0903                      1-  333     	BTRSS	STATUS,2
     001F 3rrr                      1-  334     	LGOTO	_00120_DS_
     0020 01rr                      1-  335     	MOVR	_keyCount,W
     0021 0D03                      1-  336     	BTRSC	STATUS,2
                                    1-  337     	.line	78, "main.c"; 	gotoSleep();
     0022 2rrr                      1-  338     	LCALL	_gotoSleep
     0023                           1-  339     _00120_DS_:
                                    1-  340     	.line	79, "main.c"; 	char kclick = keyRead(0x20 & (~PORTB));
     0023 07rr                      1-  341     	COMR	_PORTB,W
     0024 00rr                      1-  342     	MOVAR	r0x1010
     0025 2120                      1-  343     	MOVIA	0x20
     0026 10rr                      1-  344     	ANDAR	r0x1010,F
     0027 01rr                      1-  345     	MOVR	r0x1010,W
     0028 2rrr                      1-  346     	LCALL	_keyRead
     0029 00rr                      1-  347     	MOVAR	r0x1010
                                    1-  348     	.line	80, "main.c"; 	if(kclick > 0)
     002A 01rr                      1-  349     	MOVR	r0x1010,W
     002B 0D03                      1-  350     	BTRSC	STATUS,2
     002C 3rrr                      1-  351     	LGOTO	_00139_DS_
                                    1-  352     	.line	82, "main.c"; 	if(++workStep > 5)
     002D 05rr                      1-  353     	INCR	_workStep,F
                                    1-  354     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  355     ;;unsigned compare: left >= lit (0x6=6), size=1
     002E 2106                      1-  356     	MOVIA	0x06
     002F 04rr                      1-  357     	SUBAR	_workStep,W
     0030 0803                      1-  358     	BTRSS	STATUS,0
     0031 3rrr                      1-  359     	LGOTO	_00123_DS_
                                    1-  360     	.line	84, "main.c"; 	workStep = 0;
     0032 02rr                      1-  361     	CLRR	_workStep
                                    1-  362     	.line	85, "main.c"; 	motorFlag = 0;
     0033 02rr                      1-  363     	CLRR	_motorFlag
                                    1-  364     	.line	86, "main.c"; 	PORTB = 0x02;
     0034 2102                      1-  365     	MOVIA	0x02
     0035 00rr                      1-  366     	MOVAR	_PORTB
     0036                           1-  367     _00123_DS_:
                                    1-  368     	.line	89, "main.c"; 	if(workStep == 1)
     0036 01rr                      1-  369     	MOVR	_workStep,W
     0037 2401                      1-  370     	XORIA	0x01
     0038 0903                      1-  371     	BTRSS	STATUS,2
     0039 3rrr                      1-  372     	LGOTO	_00136_DS_
                                    1-  373     	.line	91, "main.c"; 	ledTime = 1000;
     003A 21E8                      1-  374     	MOVIA	0xe8
     003B 00rr                      1-  375     	MOVAR	_ledTime
     003C 2103                      1-  376     	MOVIA	0x03
     003D 00rr                      1-  377     	MOVAR	(_ledTime + 1)
                                    1-  378     	.line	92, "main.c"; 	startTime = 2;
     003E 2102                      1-  379     	MOVIA	0x02
     003F 00rr                      1-  380     	MOVAR	_startTime
     0040 3rrr                      1-  381     	LGOTO	_00139_DS_
     0041                           1-  382     _00136_DS_:
                                    1-  383     	.line	94, "main.c"; 	else if(workStep == 2)
     0041 01rr                      1-  384     	MOVR	_workStep,W
     0042 2402                      1-  385     	XORIA	0x02
     0043 0903                      1-  386     	BTRSS	STATUS,2
     0044 3rrr                      1-  387     	LGOTO	_00133_DS_
                                    1-  388     	.line	96, "main.c"; 	ledTime = 2000;
     0045 21D0                      1-  389     	MOVIA	0xd0
     0046 00rr                      1-  390     	MOVAR	_ledTime
     0047 2107                      1-  391     	MOVIA	0x07
     0048 00rr                      1-  392     	MOVAR	(_ledTime + 1)
     0049 3rrr                      1-  393     	LGOTO	_00139_DS_
     004A                           1-  394     _00133_DS_:
                                    1-  395     	.line	98, "main.c"; 	else if(workStep == 3)
     004A 01rr                      1-  396     	MOVR	_workStep,W
     004B 2403                      1-  397     	XORIA	0x03
     004C 0903                      1-  398     	BTRSS	STATUS,2
     004D 3rrr                      1-  399     	LGOTO	_00130_DS_
                                    1-  400     	.line	100, "main.c"; 	ledTime = 3000;
     004E 21B8                      1-  401     	MOVIA	0xb8
     004F 00rr                      1-  402     	MOVAR	_ledTime
     0050 210B                      1-  403     	MOVIA	0x0b
     0051 00rr                      1-  404     	MOVAR	(_ledTime + 1)
     0052 3rrr                      1-  405     	LGOTO	_00139_DS_
     0053                           1-  406     _00130_DS_:
                                    1-  407     	.line	102, "main.c"; 	else if(workStep == 4)
     0053 01rr                      1-  408     	MOVR	_workStep,W
     0054 2404                      1-  409     	XORIA	0x04
     0055 0903                      1-  410     	BTRSS	STATUS,2
     0056 3rrr                      1-  411     	LGOTO	_00127_DS_
                                    1-  412     	.line	104, "main.c"; 	ledTime = 4000;
     0057 21A0                      1-  413     	MOVIA	0xa0
     0058 00rr                      1-  414     	MOVAR	_ledTime
     0059 210F                      1-  415     	MOVIA	0x0f
     005A 00rr                      1-  416     	MOVAR	(_ledTime + 1)
     005B 3rrr                      1-  417     	LGOTO	_00139_DS_
     005C                           1-  418     _00127_DS_:
                                    1-  419     	.line	106, "main.c"; 	else if(workStep == 5)
     005C 01rr                      1-  420     	MOVR	_workStep,W
     005D 2405                      1-  421     	XORIA	0x05
     005E 0903                      1-  422     	BTRSS	STATUS,2
     005F 3rrr                      1-  423     	LGOTO	_00139_DS_
                                    1-  424     	.line	108, "main.c"; 	ledTime = 5000;
     0060 2188                      1-  425     	MOVIA	0x88
     0061 00rr                      1-  426     	MOVAR	_ledTime
     0062 2113                      1-  427     	MOVIA	0x13
     0063 00rr                      1-  428     	MOVAR	(_ledTime + 1)
     0064                           1-  429     _00139_DS_:
                                    1-  430     	.line	113, "main.c"; 	if(workStep > 0)
     0064 01rr                      1-  431     	MOVR	_workStep,W
     0065 0D03                      1-  432     	BTRSC	STATUS,2
     0066 3rrr                      1-  433     	LGOTO	_00169_DS_
                                    1-  434     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  435     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1-  436     	.line	115, "main.c"; 	if(workStep > 1)
     0067 2102                      1-  437     	MOVIA	0x02
     0068 04rr                      1-  438     	SUBAR	_workStep,W
     0069 0803                      1-  439     	BTRSS	STATUS,0
     006A 3rrr                      1-  440     	LGOTO	_00141_DS_
                                    1-  441     	.line	117, "main.c"; 	ledCtr();
     006B 2rrr                      1-  442     	LCALL	_ledCtr
     006C 3rrr                      1-  443     	LGOTO	_00142_DS_
     006D                           1-  444     _00141_DS_:
                                    1-  445     	.line	121, "main.c"; 	LEDON();
     006D 1Crr                      1-  446     	BCR	_PORTB,1
     006E                           1-  447     _00142_DS_:
                                    1-  448     	.line	125, "main.c"; 	if(++workTime > 16)
     006E 05rr                      1-  449     	INCR	_workTime,F
                                    1-  450     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  451     ;;unsigned compare: left >= lit (0x11=17), size=1
     006F 2111                      1-  452     	MOVIA	0x11
     0070 04rr                      1-  453     	SUBAR	_workTime,W
     0071 0C03                      1-  454     	BTRSC	STATUS,0
                                    1-  455     	.line	126, "main.c"; 	workTime = 0;
     0072 02rr                      1-  456     	CLRR	_workTime
                                    1-  457     	.line	127, "main.c"; 	if(workStep == 1)
     0073 01rr                      1-  458     	MOVR	_workStep,W
     0074 2401                      1-  459     	XORIA	0x01
     0075 0903                      1-  460     	BTRSS	STATUS,2
     0076 3rrr                      1-  461     	LGOTO	_00157_DS_
                                    1-  462     	.line	129, "main.c"; 	stopTime = 9;
     0077 2109                      1-  463     	MOVIA	0x09
     0078 00rr                      1-  464     	MOVAR	_stopTime
     0079 3rrr                      1-  465     	LGOTO	_00158_DS_
     007A                           1-  466     _00157_DS_:
                                    1-  467     	.line	131, "main.c"; 	else if(workStep == 2)
     007A 01rr                      1-  468     	MOVR	_workStep,W
     007B 2402                      1-  469     	XORIA	0x02
     007C 0903                      1-  470     	BTRSS	STATUS,2
     007D 3rrr                      1-  471     	LGOTO	_00154_DS_
                                    1-  472     	.line	133, "main.c"; 	stopTime = 6;
     007E 2106                      1-  473     	MOVIA	0x06
     007F 00rr                      1-  474     	MOVAR	_stopTime
     0080 3rrr                      1-  475     	LGOTO	_00158_DS_
     0081                           1-  476     _00154_DS_:
                                    1-  477     	.line	135, "main.c"; 	else if(workStep == 3)
     0081 01rr                      1-  478     	MOVR	_workStep,W
     0082 2403                      1-  479     	XORIA	0x03
     0083 0903                      1-  480     	BTRSS	STATUS,2
     0084 3rrr                      1-  481     	LGOTO	_00151_DS_
                                    1-  482     	.line	137, "main.c"; 	stopTime = 4;
     0085 2104                      1-  483     	MOVIA	0x04
     0086 00rr                      1-  484     	MOVAR	_stopTime
     0087 3rrr                      1-  485     	LGOTO	_00158_DS_
     0088                           1-  486     _00151_DS_:
                                    1-  487     	.line	139, "main.c"; 	else if(workStep == 4)
     0088 01rr                      1-  488     	MOVR	_workStep,W
     0089 2404                      1-  489     	XORIA	0x04
     008A 0903                      1-  490     	BTRSS	STATUS,2
     008B 3rrr                      1-  491     	LGOTO	_00148_DS_
                                    1-  492     	.line	141, "main.c"; 	stopTime = 2;
     008C 2102                      1-  493     	MOVIA	0x02
     008D 00rr                      1-  494     	MOVAR	_stopTime
     008E 3rrr                      1-  495     	LGOTO	_00158_DS_
     008F                           1-  496     _00148_DS_:
                                    1-  497     	.line	143, "main.c"; 	else if(workStep == 5)
     008F 01rr                      1-  498     	MOVR	_workStep,W
     0090 2405                      1-  499     	XORIA	0x05
     0091 0D03                      1-  500     	BTRSC	STATUS,2
                                    1-  501     	.line	145, "main.c"; 	stopTime = 0;
     0092 02rr                      1-  502     	CLRR	_stopTime
     0093                           1-  503     _00158_DS_:
                                    1-  504     	.line	148, "main.c"; 	if(stopTime > workTime)
     0093 01rr                      1-  505     	MOVR	_stopTime,W
     0094 04rr                      1-  506     	SUBAR	_workTime,W
     0095 0C03                      1-  507     	BTRSC	STATUS,0
     0096 3rrr                      1-  508     	LGOTO	_00163_DS_
                                    1-  509     	.line	150, "main.c"; 	motorFlag = 0;
     0097 02rr                      1-  510     	CLRR	_motorFlag
                                    1-  511     	.line	151, "main.c"; 	PORTB &= 0xFB;
     0098 1Drr                      1-  512     	BCR	_PORTB,2
     0099 3rrr                      1-  513     	LGOTO	_00169_DS_
     009A                           1-  514     _00163_DS_:
                                    1-  515     	.line	156, "main.c"; 	if(startTime > 0)
     009A 01rr                      1-  516     	MOVR	_startTime,W
     009B 0D03                      1-  517     	BTRSC	STATUS,2
     009C 3rrr                      1-  518     	LGOTO	_00160_DS_
                                    1-  519     	.line	157, "main.c"; 	startTime--;
     009D 06rr                      1-  520     	DECR	_startTime,F
     009E 3rrr                      1-  521     	LGOTO	_00161_DS_
     009F                           1-  522     _00160_DS_:
                                    1-  523     	.line	159, "main.c"; 	motorFlag = 1;
     009F 2101                      1-  524     	MOVIA	0x01
     00A0 00rr                      1-  525     	MOVAR	_motorFlag
     00A1                           1-  526     _00161_DS_:
                                    1-  527     	.line	160, "main.c"; 	PORTB |= 0x10;
     00A1 1Arr                      1-  528     	BSR	_PORTB,4
     00A2 3rrr                      1-  529     	LGOTO	_00169_DS_
                                    1-  530     	.line	165, "main.c"; 	}
                                    1-  531     	RETURN	
     00A3 0010                      3-   26 m1      ret
                                    1-  532     ; exit point of _main
                                    1-  534     ;***
                                    1-  535     ;  pBlock Stats: dbName = C
                                    1-  536     ;***
                                    1-  537     ;; Starting pCode block
                                    1-  538     .segment "code"; module=main, function=_setMotorduty
     0000                           1-  540     _setMotorduty:
                                    1-  541     ; 0 exit points
                                    1-  542     	.line	265, "main.c"; 	if(ledCount == 0)
     0000 01rr                      1-  543     	MOVR	_ledCount,W
     0001 0903                      1-  544     	BTRSS	STATUS,2
     0002 3rrr                      1-  545     	LGOTO	_00271_DS_
                                    1-  546     	.line	266, "main.c"; 	PORTB &= 0xFB;
     0003 1Drr                      1-  547     	BCR	_PORTB,2
     0004 3rrr                      1-  548     	LGOTO	_00272_DS_
     0005                           1-  549     _00271_DS_:
                                    1-  550     	.line	268, "main.c"; 	PORTB |= 0x04;
     0005 19rr                      1-  551     	BSR	_PORTB,2
     0006                           1-  552     _00272_DS_:
                                    1-  553     	.line	269, "main.c"; 	if(++ledCount >= 2)
     0006 05rr                      1-  554     	INCR	_ledCount,F
                                    1-  555     ;;unsigned compare: left < lit (0x2=2), size=1
     0007 2102                      1-  556     	MOVIA	0x02
     0008 04rr                      1-  557     	SUBAR	_ledCount,W
     0009 0C03                      1-  558     	BTRSC	STATUS,0
                                    1-  559     	.line	270, "main.c"; 	ledCount = 0;
     000A 02rr                      1-  560     	CLRR	_ledCount
                                    1-  561     	.line	271, "main.c"; 	}
                                    1-  562     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1-  564     ;***
                                    1-  565     ;  pBlock Stats: dbName = C
                                    1-  566     ;***
                                    1-  567     ;has an exit
                                    1-  568     ;1 compiler assigned register :
                                    1-  569     ;   r0x100F
                                    1-  570     ;; Starting pCode block
                                    1-  571     .segment "code"; module=main, function=_keyRead
                                    1-  573     ;local variable name mapping:
     0000                           1-  575     _keyRead:
                                    1-  576     ; 2 exit points
                                    1-  577     	.line	238, "main.c"; 	char keyRead(char keyStatus)	
     0000 00rr                      1-  578     	MOVAR	r0x100F
                                    1-  579     	.line	240, "main.c"; 	if(keyStatus)
     0001 01rr                      1-  580     	MOVR	r0x100F,W
     0002 0D03                      1-  581     	BTRSC	STATUS,2
     0003 3rrr                      1-  582     	LGOTO	_00263_DS_
                                    1-  583     	.line	242, "main.c"; 	keyCount++;
     0004 05rr                      1-  584     	INCR	_keyCount,F
                                    1-  585     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  586     	.line	243, "main.c"; 	if(keyCount >= 200)
     0005 21C8                      1-  587     	MOVIA	0xc8
     0006 04rr                      1-  588     	SUBAR	_keyCount,W
     0007 0803                      1-  589     	BTRSS	STATUS,0
     0008 3rrr                      1-  590     	LGOTO	_00264_DS_
                                    1-  591     	.line	245, "main.c"; 	keyCount = 200;
     0009 21C8                      1-  592     	MOVIA	0xc8
     000A 00rr                      1-  593     	MOVAR	_keyCount
     000B 3rrr                      1-  594     	LGOTO	_00264_DS_
                                    1-  595     ;;unsigned compare: left < lit (0x28=40), size=1
     000C                           1-  596     _00263_DS_:
                                    1-  597     	.line	250, "main.c"; 	if(keyCount >= 40)
     000C 2128                      1-  598     	MOVIA	0x28
     000D 04rr                      1-  599     	SUBAR	_keyCount,W
     000E 0803                      1-  600     	BTRSS	STATUS,0
     000F 3rrr                      1-  601     	LGOTO	_00261_DS_
                                    1-  602     	.line	252, "main.c"; 	keyCount = 0;
     0010 02rr                      1-  603     	CLRR	_keyCount
                                    1-  604     	.line	253, "main.c"; 	return	1;
     0011 2101                      1-  605     	MOVIA	0x01
     0012 3rrr                      1-  606     	LGOTO	_00265_DS_
     0013                           1-  607     _00261_DS_:
                                    1-  608     	.line	255, "main.c"; 	keyCount = 0;
     0013 02rr                      1-  609     	CLRR	_keyCount
     0014                           1-  610     _00264_DS_:
                                    1-  611     	.line	257, "main.c"; 	return 0;
     0014 2100                      1-  612     	MOVIA	0x00
     0015                           1-  613     _00265_DS_:
                                    1-  614     	.line	258, "main.c"; 	}
                                    1-  615     	RETURN	
     0015 0010                      3-   26 m1      ret
                                    1-  616     ; exit point of _keyRead
                                    1-  618     ;***
                                    1-  619     ;  pBlock Stats: dbName = C
                                    1-  620     ;***
                                    1-  621     ;has an exit
                                    1-  622     ;; Starting pCode block
                                    1-  623     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  625     _gotoSleep:
                                    1-  626     ; 2 exit points
                                    1-  627     	.line	220, "main.c"; 	PORTB = 0x02;
     0000 2102                      1-  628     	MOVIA	0x02
     0001 00rr                      1-  629     	MOVAR	_PORTB
                                    1-  630     	.line	221, "main.c"; 	workStep = 0;
     0002 02rr                      1-  631     	CLRR	_workStep
                                    1-  632     	.line	222, "main.c"; 	BWUCON = 0x20;
     0003 2120                      1-  633     	MOVIA	0x20
     0004 00rr                      1-  634     	MOVAR	_BWUCON
                                    1-  635     	.line	223, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PBKey;
     0005 2103                      1-  636     	MOVIA	0x03
     0006 00rr                      1-  637     	MOVAR	_INTE
                                    1-  638     	.line	224, "main.c"; 	PCON =  0;	
     0007 02rr                      1-  639     	CLRR	_PCON
                                    1-  640     	.line	225, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0008 02rr                      1-  641     	CLRR	_INTF
                                    1-  642     	.line	226, "main.c"; 	CLRWDT();
     0009 0002                      1-  643     	clrwdt
                                    1-  644     	.line	227, "main.c"; 	ENI();
     000A 0004                      1-  645     	ENI
                                    1-  646     	.line	228, "main.c"; 	SLEEP();
     000B 0001                      1-  647     	sleep
                                    1-  648     	.line	229, "main.c"; 	BWUCON = 0x00;
     000C 02rr                      1-  649     	CLRR	_BWUCON
                                    1-  650     	.line	230, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000D 2101                      1-  651     	MOVIA	0x01
     000E 00rr                      1-  652     	MOVAR	_INTE
                                    1-  653     	.line	231, "main.c"; 	INTF = 0;
     000F 02rr                      1-  654     	CLRR	_INTF
                                    1-  655     	.line	233, "main.c"; 	PCON = C_WDT_En;				// Enable WDT ,  Enable LVR
     0010 2180                      1-  656     	MOVIA	0x80
     0011 00rr                      1-  657     	MOVAR	_PCON
                                    1-  658     	.line	235, "main.c"; 	}
                                    1-  659     	RETURN	
     0012 0010                      3-   26 m1      ret
                                    1-  660     ; exit point of _gotoSleep
                                    1-  662     ;***
                                    1-  663     ;  pBlock Stats: dbName = C
                                    1-  664     ;***
                                    1-  665     ;has an exit
                                    1-  666     ;; Starting pCode block
                                    1-  667     .segment "code"; module=main, function=_ledCtr
     0000                           1-  669     _ledCtr:
                                    1-  670     ; 2 exit points
                                    1-  671     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  672     ;;unsigned compare: left >= lit (0x1195=4501), size=2
                                    1-  673     	.line	169, "main.c"; 	if(ledTime > 4500)
     0000 2111                      1-  674     	MOVIA	0x11
     0001 04rr                      1-  675     	SUBAR	(_ledTime + 1),W
     0002 0903                      1-  676     	BTRSS	STATUS,2
     0003 3rrr                      1-  677     	LGOTO	_00241_DS_
     0004 2195                      1-  678     	MOVIA	0x95
     0005 04rr                      1-  679     	SUBAR	_ledTime,W
     0006                           1-  680     _00241_DS_:
     0006 0803                      1-  681     	BTRSS	STATUS,0
     0007 3rrr                      1-  682     	LGOTO	_00202_DS_
                                    1-  683     	.line	171, "main.c"; 	LEDON();
     0008 1Crr                      1-  684     	BCR	_PORTB,1
     0009 3rrr                      1-  685     	LGOTO	_00203_DS_
                                    1-  686     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  687     ;;unsigned compare: left >= lit (0xFA1=4001), size=2
     000A                           1-  688     _00202_DS_:
                                    1-  689     	.line	173, "main.c"; 	else if(ledTime > 4000)
     000A 210F                      1-  690     	MOVIA	0x0f
     000B 04rr                      1-  691     	SUBAR	(_ledTime + 1),W
     000C 0903                      1-  692     	BTRSS	STATUS,2
     000D 3rrr                      1-  693     	LGOTO	_00242_DS_
     000E 21A1                      1-  694     	MOVIA	0xa1
     000F 04rr                      1-  695     	SUBAR	_ledTime,W
     0010                           1-  696     _00242_DS_:
     0010 0803                      1-  697     	BTRSS	STATUS,0
     0011 3rrr                      1-  698     	LGOTO	_00199_DS_
                                    1-  699     	.line	175, "main.c"; 	LEDOFF();
     0012 18rr                      1-  700     	BSR	_PORTB,1
     0013 3rrr                      1-  701     	LGOTO	_00203_DS_
                                    1-  702     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  703     ;;unsigned compare: left >= lit (0xDAD=3501), size=2
     0014                           1-  704     _00199_DS_:
                                    1-  705     	.line	177, "main.c"; 	else if(ledTime > 3500)
     0014 210D                      1-  706     	MOVIA	0x0d
     0015 04rr                      1-  707     	SUBAR	(_ledTime + 1),W
     0016 0903                      1-  708     	BTRSS	STATUS,2
     0017 3rrr                      1-  709     	LGOTO	_00243_DS_
     0018 21AD                      1-  710     	MOVIA	0xad
     0019 04rr                      1-  711     	SUBAR	_ledTime,W
     001A                           1-  712     _00243_DS_:
     001A 0803                      1-  713     	BTRSS	STATUS,0
     001B 3rrr                      1-  714     	LGOTO	_00196_DS_
                                    1-  715     	.line	179, "main.c"; 	LEDON();
     001C 1Crr                      1-  716     	BCR	_PORTB,1
     001D 3rrr                      1-  717     	LGOTO	_00203_DS_
                                    1-  718     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  719     ;;unsigned compare: left >= lit (0xBB9=3001), size=2
     001E                           1-  720     _00196_DS_:
                                    1-  721     	.line	181, "main.c"; 	else if(ledTime > 3000)
     001E 210B                      1-  722     	MOVIA	0x0b
     001F 04rr                      1-  723     	SUBAR	(_ledTime + 1),W
     0020 0903                      1-  724     	BTRSS	STATUS,2
     0021 3rrr                      1-  725     	LGOTO	_00244_DS_
     0022 21B9                      1-  726     	MOVIA	0xb9
     0023 04rr                      1-  727     	SUBAR	_ledTime,W
     0024                           1-  728     _00244_DS_:
     0024 0803                      1-  729     	BTRSS	STATUS,0
     0025 3rrr                      1-  730     	LGOTO	_00193_DS_
                                    1-  731     	.line	183, "main.c"; 	LEDOFF();
     0026 18rr                      1-  732     	BSR	_PORTB,1
     0027 3rrr                      1-  733     	LGOTO	_00203_DS_
                                    1-  734     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  735     ;;unsigned compare: left >= lit (0x9C5=2501), size=2
     0028                           1-  736     _00193_DS_:
                                    1-  737     	.line	185, "main.c"; 	else if(ledTime > 2500)
     0028 2109                      1-  738     	MOVIA	0x09
     0029 04rr                      1-  739     	SUBAR	(_ledTime + 1),W
     002A 0903                      1-  740     	BTRSS	STATUS,2
     002B 3rrr                      1-  741     	LGOTO	_00245_DS_
     002C 21C5                      1-  742     	MOVIA	0xc5
     002D 04rr                      1-  743     	SUBAR	_ledTime,W
     002E                           1-  744     _00245_DS_:
     002E 0803                      1-  745     	BTRSS	STATUS,0
     002F 3rrr                      1-  746     	LGOTO	_00190_DS_
                                    1-  747     	.line	187, "main.c"; 	LEDON();
     0030 1Crr                      1-  748     	BCR	_PORTB,1
     0031 3rrr                      1-  749     	LGOTO	_00203_DS_
                                    1-  750     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  751     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0032                           1-  752     _00190_DS_:
                                    1-  753     	.line	189, "main.c"; 	else if(ledTime > 2000)
     0032 2107                      1-  754     	MOVIA	0x07
     0033 04rr                      1-  755     	SUBAR	(_ledTime + 1),W
     0034 0903                      1-  756     	BTRSS	STATUS,2
     0035 3rrr                      1-  757     	LGOTO	_00246_DS_
     0036 21D1                      1-  758     	MOVIA	0xd1
     0037 04rr                      1-  759     	SUBAR	_ledTime,W
     0038                           1-  760     _00246_DS_:
     0038 0803                      1-  761     	BTRSS	STATUS,0
     0039 3rrr                      1-  762     	LGOTO	_00187_DS_
                                    1-  763     	.line	191, "main.c"; 	LEDOFF();
     003A 18rr                      1-  764     	BSR	_PORTB,1
     003B 3rrr                      1-  765     	LGOTO	_00203_DS_
                                    1-  766     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  767     ;;unsigned compare: left >= lit (0x5DD=1501), size=2
     003C                           1-  768     _00187_DS_:
                                    1-  769     	.line	193, "main.c"; 	else if(ledTime > 1500)
     003C 2105                      1-  770     	MOVIA	0x05
     003D 04rr                      1-  771     	SUBAR	(_ledTime + 1),W
     003E 0903                      1-  772     	BTRSS	STATUS,2
     003F 3rrr                      1-  773     	LGOTO	_00247_DS_
     0040 21DD                      1-  774     	MOVIA	0xdd
     0041 04rr                      1-  775     	SUBAR	_ledTime,W
     0042                           1-  776     _00247_DS_:
     0042 0803                      1-  777     	BTRSS	STATUS,0
     0043 3rrr                      1-  778     	LGOTO	_00184_DS_
                                    1-  779     	.line	195, "main.c"; 	LEDON();
     0044 1Crr                      1-  780     	BCR	_PORTB,1
     0045 3rrr                      1-  781     	LGOTO	_00203_DS_
                                    1-  782     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  783     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     0046                           1-  784     _00184_DS_:
                                    1-  785     	.line	197, "main.c"; 	else if(ledTime > 1000)
     0046 2103                      1-  786     	MOVIA	0x03
     0047 04rr                      1-  787     	SUBAR	(_ledTime + 1),W
     0048 0903                      1-  788     	BTRSS	STATUS,2
     0049 3rrr                      1-  789     	LGOTO	_00248_DS_
     004A 21E9                      1-  790     	MOVIA	0xe9
     004B 04rr                      1-  791     	SUBAR	_ledTime,W
     004C                           1-  792     _00248_DS_:
     004C 0803                      1-  793     	BTRSS	STATUS,0
     004D 3rrr                      1-  794     	LGOTO	_00181_DS_
                                    1-  795     	.line	199, "main.c"; 	LEDOFF();
     004E 18rr                      1-  796     	BSR	_PORTB,1
     004F 3rrr                      1-  797     	LGOTO	_00203_DS_
                                    1-  798     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  799     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0050                           1-  800     _00181_DS_:
                                    1-  801     	.line	201, "main.c"; 	else if(ledTime > 500)
     0050 2101                      1-  802     	MOVIA	0x01
     0051 04rr                      1-  803     	SUBAR	(_ledTime + 1),W
     0052 0903                      1-  804     	BTRSS	STATUS,2
     0053 3rrr                      1-  805     	LGOTO	_00249_DS_
     0054 21F5                      1-  806     	MOVIA	0xf5
     0055 04rr                      1-  807     	SUBAR	_ledTime,W
     0056                           1-  808     _00249_DS_:
     0056 0803                      1-  809     	BTRSS	STATUS,0
     0057 3rrr                      1-  810     	LGOTO	_00178_DS_
                                    1-  811     	.line	203, "main.c"; 	LEDON();
     0058 1Crr                      1-  812     	BCR	_PORTB,1
     0059 3rrr                      1-  813     	LGOTO	_00203_DS_
     005A                           1-  814     _00178_DS_:
                                    1-  815     	.line	205, "main.c"; 	else if(ledTime > 0)
     005A 01rr                      1-  816     	MOVR	_ledTime,W
     005B 11rr                      1-  817     	IORAR	(_ledTime + 1),W
     005C 0D03                      1-  818     	BTRSC	STATUS,2
     005D 3rrr                      1-  819     	LGOTO	_00175_DS_
                                    1-  820     	.line	207, "main.c"; 	LEDOFF();
     005E 18rr                      1-  821     	BSR	_PORTB,1
     005F 3rrr                      1-  822     	LGOTO	_00203_DS_
     0060                           1-  823     _00175_DS_:
                                    1-  824     	.line	211, "main.c"; 	LEDON();
     0060 1Crr                      1-  825     	BCR	_PORTB,1
     0061                           1-  826     _00203_DS_:
                                    1-  827     	.line	214, "main.c"; 	if(ledTime > 0)
     0061 01rr                      1-  828     	MOVR	_ledTime,W
     0062 11rr                      1-  829     	IORAR	(_ledTime + 1),W
     0063 0D03                      1-  830     	BTRSC	STATUS,2
     0064 3rrr                      1-  831     	LGOTO	_00206_DS_
                                    1-  832     	.line	215, "main.c"; 	--ledTime;
     0065 21FF                      1-  833     	MOVIA	0xff
     0066 03rr                      1-  834     	ADDAR	_ledTime,F
     0067 0803                      1-  835     	BTRSS	STATUS,0
     0068 06rr                      1-  836     	DECR	(_ledTime + 1),F
     0069                           1-  837     _00206_DS_:
                                    1-  838     	.line	216, "main.c"; 	}
                                    1-  839     	RETURN	
     0069 0010                      3-   26 m1      ret
                                    1-  840     ; exit point of _ledCtr
                                    1-  843     ;	code size estimation:
                                    1-  844     ;	  361+    0 =   361 instructions (  722 byte)
                                    1-  846     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 00000006
__PROCESSOR__           Constant 00800503
__sdcc_interrupt        Label    00000000
_00108_DS_              Label    00000019
_00110_DS_              Label    0000001D
_00120_DS_              Label    00000023
_00123_DS_              Label    00000036
_00127_DS_              Label    0000005C
_00130_DS_              Label    00000053
_00133_DS_              Label    0000004A
_00136_DS_              Label    00000041
_00139_DS_              Label    00000064
_00141_DS_              Label    0000006D
_00142_DS_              Label    0000006E
_00148_DS_              Label    0000008F
_00151_DS_              Label    00000088
_00154_DS_              Label    00000081
_00157_DS_              Label    0000007A
_00158_DS_              Label    00000093
_00160_DS_              Label    0000009F
_00161_DS_              Label    000000A1
_00163_DS_              Label    0000009A
_00169_DS_              Label    00000015
_00175_DS_              Label    00000060
_00178_DS_              Label    0000005A
_00181_DS_              Label    00000050
_00184_DS_              Label    00000046
_00187_DS_              Label    0000003C
_00190_DS_              Label    00000032
_00193_DS_              Label    00000028
_00196_DS_              Label    0000001E
_00199_DS_              Label    00000014
_00202_DS_              Label    0000000A
_00203_DS_              Label    00000061
_00206_DS_              Label    00000069
_00241_DS_              Label    00000006
_00242_DS_              Label    00000010
_00243_DS_              Label    0000001A
_00244_DS_              Label    00000024
_00245_DS_              Label    0000002E
_00246_DS_              Label    00000038
_00247_DS_              Label    00000042
_00248_DS_              Label    0000004C
_00249_DS_              Label    00000056
_00261_DS_              Label    00000013
_00263_DS_              Label    0000000C
_00264_DS_              Label    00000014
_00265_DS_              Label    00000015
_00271_DS_              Label    00000005
_00272_DS_              Label    00000006
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BPLCON                 Label    00000000
_BPLCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_duty                   Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTB                  Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_ledCount               Label    00000000
_ledCtr                 Label    00000000
_ledTime                Label    00000000
_main                   Label    00000000
_motorFlag              Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_setMotorduty           Label    00000000
_startTime              Label    00000000
_STATUS                 Label    00000000
_stopTime               Label    00000000
_T0MD                   Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_workStep               Label    00000000
_workTime               Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    0000002B
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x100F                 Label    00000000
r0x1010                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a050d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A050D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000001FF
DATA ROM     = 0x00000000 - 0x000001FF
RESERVED MEM = 0x00000200 - 0x00000210
SRAM / SFR   = 0x00000000 - 0x00000000
