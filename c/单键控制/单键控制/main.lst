
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A050D,c=on
                                    1-    9     	#include "ny8a050d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduint
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_BPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_INDF
                                    1-   23     	extern	_TMR0
                                    1-   24     	extern	_PCL
                                    1-   25     	extern	_STATUS
                                    1-   26     	extern	_FSR
                                    1-   27     	extern	_PORTB
                                    1-   28     	extern	_PCON
                                    1-   29     	extern	_BWUCON
                                    1-   30     	extern	_PCHBUF
                                    1-   31     	extern	_BPLCON
                                    1-   32     	extern	_BPHCON
                                    1-   33     	extern	_INTE
                                    1-   34     	extern	_INTF
                                    1-   35     	extern	_TBHP
                                    1-   36     	extern	_TBHD
                                    1-   37     	extern	_OSCCR
                                    1-   38     	extern	_IOSTB
                                    1-   39     	extern	_PS0CV
                                    1-   40     	extern	_BODCON
                                    1-   41     	extern	_PCON1
                                    1-   42     	extern	_T0MD
                                    1-   43     	extern	___sdcc_saved_fsr
                                    1-   44     	extern	___sdcc_saved_stk00
                                    1-   45     	extern	___sdcc_saved_stk01
                                    1-   46     	extern	__nyc_ny8_startup
                                    1-   47     ;--------------------------------------------------------
                                    1-   48     ; global declarations
                                    1-   49     ;--------------------------------------------------------
                                    1-   50     	extern	_init
                                    1-   51     	extern	_keyRead
                                    1-   52     	extern	_isr
                                    1-   53     	extern	_main
                                    1-   54     	extern	_intCount
                                    1-   55     	extern	_IntFlag
                                    1-   56     	extern	_keyClick
                                    1-   57     	extern	_keyCount
                                    1-   58     	extern	_count1s
                                    1-   60     	extern PSAVE
                                    1-   61     	extern SSAVE
                                    1-   62     	extern WSAVE
                                    1-   63     	extern STK10
                                    1-   64     	extern STK09
                                    1-   65     	extern STK08
                                    1-   66     	extern STK07
                                    1-   67     	extern STK06
                                    1-   68     	extern STK05
                                    1-   69     	extern STK04
                                    1-   70     	extern STK03
                                    1-   71     	extern STK02
                                    1-   72     	extern STK01
                                    1-   73     	extern STK00
                                    1-   75     .segment "uninit", 0x20000010
 20000010                           1-   76     PSAVE:
                                    1-   77     	.res 1
 20000011                           1-   78     SSAVE:
                                    1-   79     	.res 1
 20000012                           1-   80     WSAVE:
                                    1-   81     	.res 1
 20000013                           1-   82     STK10:
                                    1-   83     	.res 1
 20000014                           1-   84     STK09:
                                    1-   85     	.res 1
 20000015                           1-   86     STK08:
                                    1-   87     	.res 1
 20000016                           1-   88     STK07:
                                    1-   89     	.res 1
 20000017                           1-   90     STK06:
                                    1-   91     	.res 1
 20000018                           1-   92     STK05:
                                    1-   93     	.res 1
 20000019                           1-   94     STK04:
                                    1-   95     	.res 1
 2000001A                           1-   96     STK03:
                                    1-   97     	.res 1
 2000001B                           1-   98     STK02:
                                    1-   99     	.res 1
 2000001C                           1-  100     STK01:
                                    1-  101     	.res 1
 2000001D                           1-  102     STK00:
                                    1-  103     	.res 1
                                    1-  105     ;--------------------------------------------------------
                                    1-  106     ; global definitions
                                    1-  107     ;--------------------------------------------------------
                                    1-  108     ;--------------------------------------------------------
                                    1-  109     ; absolute symbol definitions
                                    1-  110     ;--------------------------------------------------------
                                    1-  111     ;--------------------------------------------------------
                                    1-  112     ; compiler-defined variables
                                    1-  113     ;--------------------------------------------------------
                                    1-  114     .segment "uninit"
     0000                           1-  115     r0x100B:
                                    1-  116     	.res	1
                                    1-  117     .segment "uninit"
     0000                           1-  118     r0x1009:
                                    1-  119     	.res	1
                                    1-  120     .segment "uninit"
     0000                           1-  121     r0x100A:
                                    1-  122     	.res	1
                                    1-  123     ;--------------------------------------------------------
                                    1-  124     ; initialized data
                                    1-  125     ;--------------------------------------------------------
                                    1-  127     .segment "idata"
     0000                           1-  128     _intCount:
     0000 0000                      1-  129     	dw	0x00
                                    1-  133     .segment "idata"
     0000                           1-  134     _IntFlag:
     0000 0000                      1-  135     	dw	0x00
                                    1-  139     .segment "idata"
     0000                           1-  140     _keyClick:
     0000 0000                      1-  141     	dw	0x00
                                    1-  145     .segment "idata"
     0000                           1-  146     _keyCount:
     0000 0000 0000                 1-  147     	dw	0x00, 0x00
                                    1-  151     .segment "idata"
     0000                           1-  152     _count1s:
     0000 0000                      1-  153     	dw	0x00
                                    1-  156     ;--------------------------------------------------------
                                    1-  157     ; overlayable items in internal ram 
                                    1-  158     ;--------------------------------------------------------
                                    1-  159     ;	udata_ovr
                                    1-  160     ;--------------------------------------------------------
                                    1-  161     ; reset vector 
                                    1-  162     ;--------------------------------------------------------
                                    1-  163     ORG	0x0000
     0000 3rrr                      1-  164     	LGOTO	__nyc_ny8_startup
                                    1-  165     ;--------------------------------------------------------
                                    1-  166     ; interrupt and initialization code
                                    1-  167     ;--------------------------------------------------------
                                    1-  168     ORG 0x0008
     0008 3rrr                      1-  169     	lgoto	__sdcc_interrupt
                                    1-  171     .segment "code"
     0000                           1-  172     __sdcc_interrupt:
                                    1-  173     ;***
                                    1-  174     ;  pBlock Stats: dbName = I
                                    1-  175     ;***
                                    1-  176     ;2 compiler assigned registers:
                                    1-  177     ;   STK00
                                    1-  178     ;   STK01
                                    1-  179     ;; Starting pCode block
     0000                           1-  180     _isr:
                                    1-  181     ; 0 exit points
                                    1-  182     	.line	22, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  183     	MOVAR	WSAVE
     0001 1503                      1-  184     	SWAPR	STATUS,W
     0002 0283                      1-  185     	CLRR	STATUS
     0003 00rr                      1-  186     	MOVAR	SSAVE
     0004 010A                      1-  187     	MOVR	PCHBUF,W
     0005 028A                      1-  188     	CLRR	PCHBUF
     0006 00rr                      1-  189     	MOVAR	PSAVE
     0007 0104                      1-  190     	MOVR	FSR,W
     0008 00rr                      1-  191     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  192     	MOVR	STK00,W
     000A 00rr                      1-  193     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  194     	MOVR	STK01,W
     000C 00rr                      1-  195     	MOVAR	___sdcc_saved_stk01
                                    1-  196     	.line	24, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  197     	BTRSS	_INTFbits,0
     000E 3rrr                      1-  198     	LGOTO	_00108_DS_
                                    1-  199     	.line	26, "main.c"; 	TMR0 += 56;
     000F 2138                      1-  200     	MOVIA	0x38
     0010 03rr                      1-  201     	ADDAR	_TMR0,F
                                    1-  202     	.line	27, "main.c"; 	intCount++;
     0011 05rr                      1-  203     	INCR	_intCount,F
                                    1-  204     	.line	28, "main.c"; 	if(intCount == 100)
     0012 01rr                      1-  205     	MOVR	_intCount,W
     0013 2464                      1-  206     	XORIA	0x64
     0014 0903                      1-  207     	BTRSS	STATUS,2
     0015 3rrr                      1-  208     	LGOTO	_00108_DS_
                                    1-  209     	.line	30, "main.c"; 	intCount = 0;
     0016 02rr                      1-  210     	CLRR	_intCount
                                    1-  211     	.line	31, "main.c"; 	IntFlag = 1;
     0017 2101                      1-  212     	MOVIA	0x01
     0018 00rr                      1-  213     	MOVAR	_IntFlag
     0019                           1-  214     _00108_DS_:
                                    1-  215     	.line	34, "main.c"; 	if(INTFbits.PBIF)
     0019 08rr                      1-  216     	BTRSS	_INTFbits,1
     001A 3rrr                      1-  217     	LGOTO	_00110_DS_
                                    1-  218     	.line	36, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     001B 21FD                      1-  219     	MOVIA	0xfd
     001C 00rr                      1-  220     	MOVAR	_INTF
     001D                           1-  221     _00110_DS_:
                                    1-  222     	.line	39, "main.c"; 	INTF = 0;
     001D 02rr                      1-  223     	CLRR	_INTF
                                    1-  224     	.line	41, "main.c"; 	}
     001E 01rr                      1-  225     	MOVR	___sdcc_saved_stk01,W
     001F 00rr                      1-  226     	MOVAR	STK01
     0020 01rr                      1-  227     	MOVR	___sdcc_saved_stk00,W
     0021 00rr                      1-  228     	MOVAR	STK00
     0022 01rr                      1-  229     	MOVR	___sdcc_saved_fsr,W
     0023 0084                      1-  230     	MOVAR	FSR
     0024 01rr                      1-  231     	MOVR	PSAVE,W
     0025 008A                      1-  232     	MOVAR	PCHBUF
     0026 0283                      1-  233     	CLRR	STATUS
     0027 15rr                      1-  234     	SWAPR	SSAVE,W
     0028 0083                      1-  235     	MOVAR	STATUS
     0029 15rr                      1-  236     	SWAPR	WSAVE,F
     002A 15rr                      1-  237     	SWAPR	WSAVE,W
     002B                           1-  238     END_OF_INTERRUPT:
     002B 0011                      1-  239     	RETIE	
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     ; code
                                    1-  243     ;--------------------------------------------------------
                                    1-  244     ;***
                                    1-  245     ;  pBlock Stats: dbName = M
                                    1-  246     ;***
                                    1-  247     ;has an exit
                                    1-  248     ;functions called:
                                    1-  249     ;   _init
                                    1-  250     ;   _keyRead
                                    1-  251     ;   _init
                                    1-  252     ;   _keyRead
                                    1-  253     ;1 compiler assigned register :
                                    1-  254     ;   r0x100B
                                    1-  255     ;; Starting pCode block
                                    1-  256     .segment "code"; module=main, function=_main
     0000                           1-  258     _main:
                                    1-  259     ; 2 exit points
                                    1-  260     	.line	46, "main.c"; 	init();
     0000 2rrr                      1-  261     	LCALL	_init
     0001                           1-  262     _00126_DS_:
                                    1-  263     	.line	50, "main.c"; 	CLRWDT(); 
     0001 0002                      1-  264     	clrwdt
                                    1-  265     	.line	51, "main.c"; 	if(!IntFlag)
     0002 01rr                      1-  266     	MOVR	_IntFlag,W
     0003 0D03                      1-  267     	BTRSC	STATUS,2
     0004 3rrr                      1-  268     	LGOTO	_00126_DS_
                                    1-  269     	.line	53, "main.c"; 	IntFlag = 0;
     0005 02rr                      1-  270     	CLRR	_IntFlag
                                    1-  271     	.line	54, "main.c"; 	if(count1s > 0)
     0006 01rr                      1-  272     	MOVR	_count1s,W
     0007 0D03                      1-  273     	BTRSC	STATUS,2
     0008 3rrr                      1-  274     	LGOTO	_00118_DS_
                                    1-  275     	.line	56, "main.c"; 	--count1s;
     0009 06rr                      1-  276     	DECR	_count1s,F
     000A 3rrr                      1-  277     	LGOTO	_00119_DS_
     000B                           1-  278     _00118_DS_:
                                    1-  279     	.line	60, "main.c"; 	Q1OFF();
     000B 1Drr                      1-  280     	BCR	_PORTB,2
                                    1-  281     	.line	61, "main.c"; 	Q2OFF();
     000C 1Err                      1-  282     	BCR	_PORTB,5
     000D                           1-  283     _00119_DS_:
                                    1-  284     	.line	63, "main.c"; 	keyClick = keyRead((~PORTB) & 0x08);
     000D 07rr                      1-  285     	COMR	_PORTB,W
     000E 00rr                      1-  286     	MOVAR	r0x100B
     000F 2108                      1-  287     	MOVIA	0x08
     0010 10rr                      1-  288     	ANDAR	r0x100B,F
     0011 01rr                      1-  289     	MOVR	r0x100B,W
     0012 2rrr                      1-  290     	LCALL	_keyRead
     0013 00rr                      1-  291     	MOVAR	_keyClick
                                    1-  292     	.line	64, "main.c"; 	if(keyClick == 1)
     0014 2401                      1-  293     	XORIA	0x01
     0015 0903                      1-  294     	BTRSS	STATUS,2
     0016 3rrr                      1-  295     	LGOTO	_00123_DS_
                                    1-  296     	.line	66, "main.c"; 	Q1ON();
     0017 19rr                      1-  297     	BSR	_PORTB,2
                                    1-  298     	.line	67, "main.c"; 	Q2OFF();
     0018 1Err                      1-  299     	BCR	_PORTB,5
                                    1-  300     	.line	68, "main.c"; 	count1s = 100;
     0019 2164                      1-  301     	MOVIA	0x64
     001A 00rr                      1-  302     	MOVAR	_count1s
     001B 3rrr                      1-  303     	LGOTO	_00126_DS_
     001C                           1-  304     _00123_DS_:
                                    1-  305     	.line	70, "main.c"; 	else if(keyClick == 2)
     001C 01rr                      1-  306     	MOVR	_keyClick,W
     001D 2402                      1-  307     	XORIA	0x02
     001E 0903                      1-  308     	BTRSS	STATUS,2
     001F 3rrr                      1-  309     	LGOTO	_00126_DS_
                                    1-  310     	.line	72, "main.c"; 	Q2ON();
     0020 1Arr                      1-  311     	BSR	_PORTB,5
                                    1-  312     	.line	73, "main.c"; 	Q1OFF();
     0021 1Drr                      1-  313     	BCR	_PORTB,2
                                    1-  314     	.line	74, "main.c"; 	count1s = 100;
     0022 2164                      1-  315     	MOVIA	0x64
     0023 00rr                      1-  316     	MOVAR	_count1s
     0024 3rrr                      1-  317     	LGOTO	_00126_DS_
                                    1-  318     	.line	78, "main.c"; 	}
                                    1-  319     	RETURN	
     0025 0010                      3-   26 m1      ret
                                    1-  320     ; exit point of _main
                                    1-  322     ;***
                                    1-  323     ;  pBlock Stats: dbName = C
                                    1-  324     ;***
                                    1-  325     ;has an exit
                                    1-  326     ;; Starting pCode block
                                    1-  327     .segment "code"; module=main, function=_init
     0000                           1-  329     _init:
                                    1-  330     ; 2 exit points
                                    1-  331     	.line	110, "main.c"; 	PORTB = 0x00;         
     0000 02rr                      1-  332     	CLRR	_PORTB
                                    1-  333     	.line	111, "main.c"; 	IOSTB =  C_PB3_Input;								// Set PB to output mode
     0001 2108                      1-  334     	MOVIA	0x08
     0002 000r                      1-  335     	IOST	_IOSTB
                                    1-  336     	.line	112, "main.c"; 	BPHCON = 0xF7;
     0003 21F7                      1-  337     	MOVIA	0xf7
     0004 00rr                      1-  338     	MOVAR	_BPHCON
                                    1-  339     	.line	113, "main.c"; 	BPLCON = 0xFF;
     0005 21FF                      1-  340     	MOVIA	0xff
     0006 00rr                      1-  341     	MOVAR	_BPLCON
                                    1-  342     	.line	114, "main.c"; 	PORTB = 0x00;                           	
     0007 02rr                      1-  343     	CLRR	_PORTB
                                    1-  344     	.line	116, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT & LVR
     0008 2188                      1-  345     	MOVIA	0x88
     0009 00rr                      1-  346     	MOVAR	_PCON
                                    1-  347     	.line	117, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     000A 2101                      1-  348     	MOVIA	0x01
     000B 00rr                      1-  349     	MOVAR	_INTE
                                    1-  350     	.line	118, "main.c"; 	INTF = 0;
     000C 02rr                      1-  351     	CLRR	_INTF
                                    1-  352     	.line	121, "main.c"; 	PCON1 = C_TMR0_Dis;
     000D 0200                      1-  353     	CLRA	
     000E 000r                      1-  354     	IOST	_PCON1
                                    1-  355     	.line	123, "main.c"; 	TMR0 = 56;
     000F 2138                      1-  356     	MOVIA	0x38
     0010 00rr                      1-  357     	MOVAR	_TMR0
                                    1-  358     	.line	124, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0011 0200                      1-  359     	CLRA	
     0012 0003                      1-  360     	T0MD	
                                    1-  361     	.line	126, "main.c"; 	PCON1 = C_TMR0_En;
     0013 2101                      1-  362     	MOVIA	0x01
     0014 000r                      1-  363     	IOST	_PCON1
                                    1-  364     	.line	128, "main.c"; 	ENI();
     0015 0004                      1-  365     	ENI
                                    1-  366     	.line	129, "main.c"; 	}
                                    1-  367     	RETURN	
     0016 0010                      3-   26 m1      ret
                                    1-  368     ; exit point of _init
                                    1-  370     ;***
                                    1-  371     ;  pBlock Stats: dbName = C
                                    1-  372     ;***
                                    1-  373     ;has an exit
                                    1-  374     ;functions called:
                                    1-  375     ;   __moduint
                                    1-  376     ;   __moduint
                                    1-  377     ;5 compiler assigned registers:
                                    1-  378     ;   r0x1009
                                    1-  379     ;   STK02
                                    1-  380     ;   STK01
                                    1-  381     ;   STK00
                                    1-  382     ;   r0x100A
                                    1-  383     ;; Starting pCode block
                                    1-  384     .segment "code"; module=main, function=_keyRead
                                    1-  386     ;local variable name mapping:
     0000                           1-  388     _keyRead:
                                    1-  389     ; 2 exit points
                                    1-  390     	.line	80, "main.c"; 	char keyRead(char KeyStatus)	
     0000 00rr                      1-  391     	MOVAR	r0x1009
                                    1-  392     	.line	82, "main.c"; 	if (KeyStatus)
     0001 01rr                      1-  393     	MOVR	r0x1009,W
     0002 0D03                      1-  394     	BTRSC	STATUS,2
     0003 3rrr                      1-  395     	LGOTO	_00140_DS_
                                    1-  396     	.line	84, "main.c"; 	keyCount++;
     0004 05rr                      1-  397     	INCR	_keyCount,F
     0005 0D03                      1-  398     	BTRSC	STATUS,2
     0006 05rr                      1-  399     	INCR	(_keyCount + 1),F
                                    1-  400     ;;unsigned compare: left < lit (0x12C=300), size=2
                                    1-  401     	.line	85, "main.c"; 	if(keyCount >= 300 && keyCount % 300 == 0)
     0007 2101                      1-  402     	MOVIA	0x01
     0008 04rr                      1-  403     	SUBAR	(_keyCount + 1),W
     0009 0903                      1-  404     	BTRSS	STATUS,2
     000A 3rrr                      1-  405     	LGOTO	_00159_DS_
     000B 212C                      1-  406     	MOVIA	0x2c
     000C 04rr                      1-  407     	SUBAR	_keyCount,W
     000D                           1-  408     _00159_DS_:
     000D 0803                      1-  409     	BTRSS	STATUS,0
     000E 3rrr                      1-  410     	LGOTO	_00141_DS_
     000F 212C                      1-  411     	MOVIA	0x2c
     0010 00rr                      1-  412     	MOVAR	STK02
     0011 2101                      1-  413     	MOVIA	0x01
     0012 00rr                      1-  414     	MOVAR	STK01
     0013 01rr                      1-  415     	MOVR	_keyCount,W
     0014 00rr                      1-  416     	MOVAR	STK00
     0015 01rr                      1-  417     	MOVR	(_keyCount + 1),W
     0016 2rrr                      1-  418     	LCALL	__moduint
     0017 00rr                      1-  419     	MOVAR	r0x100A
     0018 01rr                      1-  420     	MOVR	STK00,W
     0019 00rr                      1-  421     	MOVAR	r0x1009
     001A 11rr                      1-  422     	IORAR	r0x100A,W
     001B 0903                      1-  423     	BTRSS	STATUS,2
     001C 3rrr                      1-  424     	LGOTO	_00141_DS_
                                    1-  425     	.line	87, "main.c"; 	return 2;
     001D 2102                      1-  426     	MOVIA	0x02
     001E 3rrr                      1-  427     	LGOTO	_00142_DS_
                                    1-  428     ;;unsigned compare: left < lit (0x12C=300), size=2
     001F                           1-  429     _00140_DS_:
                                    1-  430     	.line	92, "main.c"; 	if(keyCount >= 300)
     001F 2101                      1-  431     	MOVIA	0x01
     0020 04rr                      1-  432     	SUBAR	(_keyCount + 1),W
     0021 0903                      1-  433     	BTRSS	STATUS,2
     0022 3rrr                      1-  434     	LGOTO	_00160_DS_
     0023 212C                      1-  435     	MOVIA	0x2c
     0024 04rr                      1-  436     	SUBAR	_keyCount,W
     0025                           1-  437     _00160_DS_:
     0025 0803                      1-  438     	BTRSS	STATUS,0
     0026 3rrr                      1-  439     	LGOTO	_00137_DS_
                                    1-  440     	.line	94, "main.c"; 	keyCount = 0;
     0027 02rr                      1-  441     	CLRR	_keyCount
     0028 02rr                      1-  442     	CLRR	(_keyCount + 1)
                                    1-  443     	.line	95, "main.c"; 	return	0;
     0029 2100                      1-  444     	MOVIA	0x00
     002A 3rrr                      1-  445     	LGOTO	_00142_DS_
                                    1-  446     ;;unsigned compare: left < lit (0x8=8), size=2
     002B                           1-  447     _00137_DS_:
                                    1-  448     	.line	97, "main.c"; 	else if(keyCount >= 8)
     002B 2100                      1-  449     	MOVIA	0x00
     002C 04rr                      1-  450     	SUBAR	(_keyCount + 1),W
     002D 0903                      1-  451     	BTRSS	STATUS,2
     002E 3rrr                      1-  452     	LGOTO	_00161_DS_
     002F 2108                      1-  453     	MOVIA	0x08
     0030 04rr                      1-  454     	SUBAR	_keyCount,W
     0031                           1-  455     _00161_DS_:
     0031 0803                      1-  456     	BTRSS	STATUS,0
     0032 3rrr                      1-  457     	LGOTO	_00138_DS_
                                    1-  458     	.line	99, "main.c"; 	keyCount = 0;
     0033 02rr                      1-  459     	CLRR	_keyCount
     0034 02rr                      1-  460     	CLRR	(_keyCount + 1)
                                    1-  461     	.line	100, "main.c"; 	return	1;
     0035 2101                      1-  462     	MOVIA	0x01
     0036 3rrr                      1-  463     	LGOTO	_00142_DS_
     0037                           1-  464     _00138_DS_:
                                    1-  465     	.line	102, "main.c"; 	keyCount = 0;
     0037 02rr                      1-  466     	CLRR	_keyCount
     0038 02rr                      1-  467     	CLRR	(_keyCount + 1)
     0039                           1-  468     _00141_DS_:
                                    1-  469     	.line	104, "main.c"; 	return 0;
     0039 2100                      1-  470     	MOVIA	0x00
     003A                           1-  471     _00142_DS_:
                                    1-  472     	.line	105, "main.c"; 	}
                                    1-  473     	RETURN	
     003A 0010                      3-   26 m1      ret
                                    1-  474     ; exit point of _keyRead
                                    1-  477     ;	code size estimation:
                                    1-  478     ;	  162+    0 =   162 instructions (  324 byte)
                                    1-  480     	end
                                    1-  480     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__moduint               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 00000006
__PROCESSOR__           Constant 00800503
__sdcc_interrupt        Label    00000000
_00108_DS_              Label    00000019
_00110_DS_              Label    0000001D
_00118_DS_              Label    0000000B
_00119_DS_              Label    0000000D
_00123_DS_              Label    0000001C
_00126_DS_              Label    00000001
_00137_DS_              Label    0000002B
_00138_DS_              Label    00000037
_00140_DS_              Label    0000001F
_00141_DS_              Label    00000039
_00142_DS_              Label    0000003A
_00159_DS_              Label    0000000D
_00160_DS_              Label    00000025
_00161_DS_              Label    00000031
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BPLCON                 Label    00000000
_BPLCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_count1s                Label    00000000
_FSR                    Label    00000000
_INDF                   Label    00000000
_init                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTB                  Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    0000002B
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1009                 Label    00000000
r0x100A                 Label    00000000
r0x100B                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000D
STK01                   Label    0000000C
STK02                   Label    0000000B
STK03                   Label    0000000A
STK04                   Label    00000009
STK05                   Label    00000008
STK06                   Label    00000007
STK07                   Label    00000006
STK08                   Label    00000005
STK09                   Label    00000004
STK10                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a050d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A050D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000001FF
DATA ROM     = 0x00000000 - 0x000001FF
RESERVED MEM = 0x00000200 - 0x00000210
SRAM / SFR   = 0x00000000 - 0x00000000
