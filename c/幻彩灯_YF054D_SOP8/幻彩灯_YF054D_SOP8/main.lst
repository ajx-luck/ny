
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_setColor2
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_AWUCONbits
                                    1-   24     	extern	_INTEDGbits
                                    1-   25     	extern	_RFCbits
                                    1-   26     	extern	_INTE2bits
                                    1-   27     	extern	_INDF
                                    1-   28     	extern	_TMR0
                                    1-   29     	extern	_PCL
                                    1-   30     	extern	_STATUS
                                    1-   31     	extern	_FSR
                                    1-   32     	extern	_PORTA
                                    1-   33     	extern	_PORTB
                                    1-   34     	extern	_PCON
                                    1-   35     	extern	_BWUCON
                                    1-   36     	extern	_PCHBUF
                                    1-   37     	extern	_ABPLCON
                                    1-   38     	extern	_BPHCON
                                    1-   39     	extern	_INTE
                                    1-   40     	extern	_INTF
                                    1-   41     	extern	_AWUCON
                                    1-   42     	extern	_INTEDG
                                    1-   43     	extern	_TMRH
                                    1-   44     	extern	_RFC
                                    1-   45     	extern	_TM34RH
                                    1-   46     	extern	_INTE2
                                    1-   47     	extern	_TMR1
                                    1-   48     	extern	_T1CR1
                                    1-   49     	extern	_T1CR2
                                    1-   50     	extern	_PWM1DUTY
                                    1-   51     	extern	_PS1CV
                                    1-   52     	extern	_BZ1CR
                                    1-   53     	extern	_IRCR
                                    1-   54     	extern	_TBHP
                                    1-   55     	extern	_TBHD
                                    1-   56     	extern	_P2CR1
                                    1-   57     	extern	_PWM2DUTY
                                    1-   58     	extern	_OSCCR
                                    1-   59     	extern	_TMR3
                                    1-   60     	extern	_T3CR1
                                    1-   61     	extern	_T3CR2
                                    1-   62     	extern	_PWM3DUTY
                                    1-   63     	extern	_PS3CV
                                    1-   64     	extern	_P4CR1
                                    1-   65     	extern	_PWM4DUTY
                                    1-   66     	extern	_P5CR1
                                    1-   67     	extern	_PWM5DUTY
                                    1-   68     	extern	_PWM5RH
                                    1-   69     	extern	_IOSTA
                                    1-   70     	extern	_IOSTB
                                    1-   71     	extern	_APHCON
                                    1-   72     	extern	_PS0CV
                                    1-   73     	extern	_BODCON
                                    1-   74     	extern	_CMPCR
                                    1-   75     	extern	_PCON1
                                    1-   76     	extern	_T0MD
                                    1-   77     	extern	___sdcc_saved_fsr
                                    1-   78     	extern	___sdcc_saved_stk00
                                    1-   79     	extern	___sdcc_saved_stk01
                                    1-   80     	extern	__nyc_ny8_startup
                                    1-   81     ;--------------------------------------------------------
                                    1-   82     ; global declarations
                                    1-   83     ;--------------------------------------------------------
                                    1-   84     	extern	_Delay10Us
                                    1-   85     	extern	_sendRGB
                                    1-   86     	extern	_sendRGB2
                                    1-   87     	extern	_delay
                                    1-   88     	extern	_sendRGB3
                                    1-   89     	extern	_closeCtr2
                                    1-   90     	extern	_closeCtr
                                    1-   91     	extern	_openCtr2
                                    1-   92     	extern	_openCtr
                                    1-   93     	extern	_setColor
                                    1-   94     	extern	_initTimer0
                                    1-   95     	extern	_xdCtr
                                    1-   96     	extern	_keyCtr
                                    1-   97     	extern	_readKey
                                    1-   98     	extern	_isr
                                    1-   99     	extern	_main
                                    1-  100     	extern	_Delay80us
                                    1-  101     	extern	_Rdata
                                    1-  102     	extern	_Gdata
                                    1-  103     	extern	_Bdata
                                    1-  104     	extern	_intCount
                                    1-  105     	extern	_IntFlag
                                    1-  106     	extern	_ledStep
                                    1-  107     	extern	_count100ms
                                    1-  108     	extern	_redTime
                                    1-  109     	extern	_workStep
                                    1-  110     	extern	_count20s
                                    1-  111     	extern	_breakFlag
                                    1-  112     	extern	_SC
                                    1-  113     	extern	_XD
                                    1-  114     	extern	_DC
                                    1-  116     	extern PSAVE
                                    1-  117     	extern SSAVE
                                    1-  118     	extern WSAVE
                                    1-  119     	extern STK12
                                    1-  120     	extern STK11
                                    1-  121     	extern STK10
                                    1-  122     	extern STK09
                                    1-  123     	extern STK08
                                    1-  124     	extern STK07
                                    1-  125     	extern STK06
                                    1-  126     	extern STK05
                                    1-  127     	extern STK04
                                    1-  128     	extern STK03
                                    1-  129     	extern STK02
                                    1-  130     	extern STK01
                                    1-  131     	extern STK00
                                    1-  133     .segment "uninit", 0x20000040
 20000040                           1-  134     PSAVE:
                                    1-  135     	.res 1
 20000041                           1-  136     SSAVE:
                                    1-  137     	.res 1
 20000042                           1-  138     WSAVE:
                                    1-  139     	.res 1
 20000043                           1-  140     STK12:
                                    1-  141     	.res 1
 20000044                           1-  142     STK11:
                                    1-  143     	.res 1
 20000045                           1-  144     STK10:
                                    1-  145     	.res 1
 20000046                           1-  146     STK09:
                                    1-  147     	.res 1
 20000047                           1-  148     STK08:
                                    1-  149     	.res 1
 20000048                           1-  150     STK07:
                                    1-  151     	.res 1
 20000049                           1-  152     STK06:
                                    1-  153     	.res 1
 2000004A                           1-  154     STK05:
                                    1-  155     	.res 1
 2000004B                           1-  156     STK04:
                                    1-  157     	.res 1
 2000004C                           1-  158     STK03:
                                    1-  159     	.res 1
 2000004D                           1-  160     STK02:
                                    1-  161     	.res 1
 2000004E                           1-  162     STK01:
                                    1-  163     	.res 1
 2000004F                           1-  164     STK00:
                                    1-  165     	.res 1
                                    1-  167     ;--------------------------------------------------------
                                    1-  168     ; global definitions
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     ;--------------------------------------------------------
                                    1-  171     ; absolute symbol definitions
                                    1-  172     ;--------------------------------------------------------
                                    1-  173     ;--------------------------------------------------------
                                    1-  174     ; compiler-defined variables
                                    1-  175     ;--------------------------------------------------------
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x1035:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x1034:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x1030:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1031:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x1032:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x1033:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x102B:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x102C:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x102D:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x102E:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x102F:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x1026:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1027:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1028:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x1029:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x102A:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1021:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1022:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x1023:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1024:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1025:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x101C:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x101D:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x101E:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x101F:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1020:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1018:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1017:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1019:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x101A:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x101B:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1013:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1012:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1014:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1015:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1016:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1011:
                                    1-  286     	.res	1
                                    1-  287     ;--------------------------------------------------------
                                    1-  288     ; initialized data
                                    1-  289     ;--------------------------------------------------------
                                    1-  291     .segment "idata"
     0000                           1-  292     _Rdata:
     0000 0000                      1-  293     	dw	0x00
                                    1-  297     .segment "idata"
     0000                           1-  298     _Gdata:
     0000 0000                      1-  299     	dw	0x00
                                    1-  303     .segment "idata"
     0000                           1-  304     _Bdata:
     0000 0000                      1-  305     	dw	0x00
                                    1-  309     .segment "idata"
     0000                           1-  310     _intCount:
     0000 0000                      1-  311     	dw	0x00
                                    1-  315     .segment "idata"
     0000                           1-  316     _IntFlag:
     0000 0000                      1-  317     	dw	0x00
                                    1-  321     .segment "idata"
     0000                           1-  322     _ledStep:
     0000 0000                      1-  323     	dw	0x00
                                    1-  327     .segment "idata"
     0000                           1-  328     _count100ms:
     0000 0000                      1-  329     	dw	0x00
                                    1-  333     .segment "idata"
     0000                           1-  334     _redTime:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _workStep:
     0000 0000                      1-  341     	dw	0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _count20s:
     0000 0000                      1-  347     	dw	0x00
                                    1-  351     .segment "idata"
     0000                           1-  352     _breakFlag:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _SC:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _XD:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _DC:
     0000 0000                      1-  371     	dw	0x00
                                    1-  374     ;--------------------------------------------------------
                                    1-  375     ; overlayable items in internal ram 
                                    1-  376     ;--------------------------------------------------------
                                    1-  377     ;	udata_ovr
                                    1-  378     ;--------------------------------------------------------
                                    1-  379     ; reset vector 
                                    1-  380     ;--------------------------------------------------------
                                    1-  381     ORG	0x0000
     0000 3rrr                      1-  382     	LGOTO	__nyc_ny8_startup
                                    1-  383     ;--------------------------------------------------------
                                    1-  384     ; interrupt and initialization code
                                    1-  385     ;--------------------------------------------------------
                                    1-  386     ORG 0x0008
     0008 3rrr                      1-  387     	lgoto	__sdcc_interrupt
                                    1-  389     .segment "code"
     0000                           1-  390     __sdcc_interrupt:
                                    1-  391     ;***
                                    1-  392     ;  pBlock Stats: dbName = I
                                    1-  393     ;***
                                    1-  394     ;2 compiler assigned registers:
                                    1-  395     ;   STK00
                                    1-  396     ;   STK01
                                    1-  397     ;; Starting pCode block
     0000                           1-  398     _isr:
                                    1-  399     ; 0 exit points
                                    1-  400     	.line	120, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  401     	MOVAR	WSAVE
     0001 1503                      1-  402     	SWAPR	STATUS,W
     0002 0283                      1-  403     	CLRR	STATUS
     0003 00rr                      1-  404     	MOVAR	SSAVE
     0004 010A                      1-  405     	MOVR	PCHBUF,W
     0005 028A                      1-  406     	CLRR	PCHBUF
     0006 00rr                      1-  407     	MOVAR	PSAVE
     0007 0104                      1-  408     	MOVR	FSR,W
                                    1-  409     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  410     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  411     	MOVR	STK00,W
                                    1-  412     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  413     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  414     	MOVR	STK01,W
                                    1-  415     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  416     	MOVAR	___sdcc_saved_stk01
                                    1-  417     	.line	122, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  418     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  419     	LGOTO	_00110_DS_
                                    1-  420     	.line	124, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  421     	MOVIA	0x37
     0013 03rr                      1-  422     	ADDAR	_TMR0,F
                                    1-  423     	.line	125, "main.c"; 	intCount++;
                                    1-  424     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  425     	INCR	_intCount,F
                                    1-  426     	.line	126, "main.c"; 	if(intCount == 200)
     0016 01rr                      1-  427     	MOVR	_intCount,W
     0017 24C8                      1-  428     	XORIA	0xc8
     0018 0903                      1-  429     	BTRSS	STATUS,2
     0019 3rrr                      1-  430     	LGOTO	_00110_DS_
                                    1-  431     	.line	128, "main.c"; 	intCount = 0;
     001A 02rr                      1-  432     	CLRR	_intCount
                                    1-  433     	.line	129, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  434     	MOVIA	0x01
                                    1-  435     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  436     	MOVAR	_IntFlag
                                    1-  437     	.line	130, "main.c"; 	if(++count100ms >= 10)
                                    1-  438     	BANKSEL	_count100ms
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 05rr                      1-  439     	INCR	_count100ms,F
                                    1-  440     ;;unsigned compare: left < lit (0xA=10), size=1
     0020 210A                      1-  441     	MOVIA	0x0a
     0021 04rr                      1-  442     	SUBAR	_count100ms,W
     0022 0C03                      1-  443     	BTRSC	STATUS,0
                                    1-  444     	.line	132, "main.c"; 	count100ms = 0;
     0023 02rr                      1-  445     	CLRR	_count100ms
     0024                           1-  446     _00110_DS_:
                                    1-  447     	.line	136, "main.c"; 	if(INTFbits.PABIF)
     0024 08rr                      1-  448     	BTRSS	_INTFbits,1
     0025 3rrr                      1-  449     	LGOTO	_00112_DS_
                                    1-  450     	.line	138, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PORTA input change interrupt flag bit)		
     0026 21FD                      1-  451     	MOVIA	0xfd
     0027 00rr                      1-  452     	MOVAR	_INTF
     0028                           1-  453     _00112_DS_:
                                    1-  454     	.line	141, "main.c"; 	INTF = 0;
     0028 02rr                      1-  455     	CLRR	_INTF
                                    1-  456     	.line	143, "main.c"; 	}
                                    1-  457     	BANKSEL	___sdcc_saved_stk01
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  458     	MOVR	___sdcc_saved_stk01,W
     002B 00rr                      1-  459     	MOVAR	STK01
                                    1-  460     	BANKSEL	___sdcc_saved_stk00
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1-  461     	MOVR	___sdcc_saved_stk00,W
     002E 00rr                      1-  462     	MOVAR	STK00
                                    1-  463     	BANKSEL	___sdcc_saved_fsr
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1-  464     	MOVR	___sdcc_saved_fsr,W
     0031 0084                      1-  465     	MOVAR	FSR
     0032 01rr                      1-  466     	MOVR	PSAVE,W
     0033 008A                      1-  467     	MOVAR	PCHBUF
     0034 0283                      1-  468     	CLRR	STATUS
     0035 15rr                      1-  469     	SWAPR	SSAVE,W
     0036 0083                      1-  470     	MOVAR	STATUS
     0037 15rr                      1-  471     	SWAPR	WSAVE,F
     0038 15rr                      1-  472     	SWAPR	WSAVE,W
     0039                           1-  473     END_OF_INTERRUPT:
     0039 0011                      1-  474     	RETIE	
                                    1-  476     ;--------------------------------------------------------
                                    1-  477     ; code
                                    1-  478     ;--------------------------------------------------------
                                    1-  479     ;***
                                    1-  480     ;  pBlock Stats: dbName = M
                                    1-  481     ;***
                                    1-  482     ;has an exit
                                    1-  483     ;functions called:
                                    1-  484     ;   _initTimer0
                                    1-  485     ;   _setColor
                                    1-  486     ;   _readKey
                                    1-  487     ;   _keyCtr
                                    1-  488     ;   _setColor
                                    1-  489     ;   _setColor
                                    1-  490     ;   _setColor
                                    1-  491     ;   _xdCtr
                                    1-  492     ;   _initTimer0
                                    1-  493     ;   _setColor
                                    1-  494     ;   _readKey
                                    1-  495     ;   _keyCtr
                                    1-  496     ;   _setColor
                                    1-  497     ;   _setColor
                                    1-  498     ;   _setColor
                                    1-  499     ;   _xdCtr
                                    1-  500     ;3 compiler assigned registers:
                                    1-  501     ;   STK01
                                    1-  502     ;   STK00
                                    1-  503     ;   r0x1035
                                    1-  504     ;; Starting pCode block
                                    1-  505     .segment "code"; module=main, function=_main
     0000                           1-  507     _main:
                                    1-  508     ; 2 exit points
                                    1-  509     	.line	151, "main.c"; 	initTimer0();
     0000 2rrr                      1-  510     	LCALL	_initTimer0
                                    1-  511     	.line	152, "main.c"; 	setColor(BLACK);
     0001 2100                      1-  512     	MOVIA	0x00
     0002 00rr                      1-  513     	MOVAR	STK01
     0003 00rr                      1-  514     	MOVAR	STK00
     0004 2rrr                      1-  515     	LCALL	_setColor
     0005                           1-  516     _00141_DS_:
                                    1-  517     	.line	155, "main.c"; 	CLRWDT(); 
     0005 0002                      1-  518     	clrwdt
                                    1-  519     	.line	156, "main.c"; 	readKey();
     0006 2rrr                      1-  520     	LCALL	_readKey
                                    1-  521     	.line	157, "main.c"; 	if(!IntFlag)
                                    1-  522     	BANKSEL	_IntFlag
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1-  523     	MOVR	_IntFlag,W
     0009 0D03                      1-  524     	BTRSC	STATUS,2
     000A 3rrr                      1-  525     	LGOTO	_00141_DS_
                                    1-  526     	.line	159, "main.c"; 	IntFlag = 0;
     000B 02rr                      1-  527     	CLRR	_IntFlag
                                    1-  528     	.line	160, "main.c"; 	if(keyCtr())
     000C 2rrr                      1-  529     	LCALL	_keyCtr
                                    1-  530     	BANKSEL	r0x1035
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1-  531     	MOVAR	r0x1035
     000F 01rr                      1-  532     	MOVR	r0x1035,W
     0010 0D03                      1-  533     	BTRSC	STATUS,2
     0011 3rrr                      1-  534     	LGOTO	_00123_DS_
                                    1-  535     	.line	162, "main.c"; 	breakFlag = 1;
     0012 2101                      1-  536     	MOVIA	0x01
                                    1-  537     	BANKSEL	_breakFlag
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1-  538     	MOVAR	_breakFlag
                                    1-  539     	.line	163, "main.c"; 	if(workStep == 2)
                                    1-  540     	BANKSEL	_workStep
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  541     	MOVR	_workStep,W
     0017 2402                      1-  542     	XORIA	0x02
     0018 0903                      1-  543     	BTRSS	STATUS,2
     0019 3rrr                      1-  544     	LGOTO	_00120_DS_
                                    1-  545     	.line	165, "main.c"; 	ledStep = 14;	//如果断开XD就执行关机
     001A 210E                      1-  546     	MOVIA	0x0e
                                    1-  547     	BANKSEL	_ledStep
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  548     	MOVAR	_ledStep
     001D 3rrr                      1-  549     	LGOTO	_00141_DS_
     001E                           1-  550     _00120_DS_:
                                    1-  551     	.line	169, "main.c"; 	ledStep = 1;	//重置led灯状态，如果SC低电平电平就重新开机
     001E 2101                      1-  552     	MOVIA	0x01
                                    1-  553     	BANKSEL	_ledStep
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1-  554     	MOVAR	_ledStep
                                    1-  555     	.line	171, "main.c"; 	continue;
     0021 3rrr                      1-  556     	LGOTO	_00141_DS_
     0022                           1-  557     _00123_DS_:
                                    1-  558     	.line	174, "main.c"; 	if(count100ms == 0)
                                    1-  559     	BANKSEL	_count100ms
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  560     	MOVR	_count100ms,W
     0024 0903                      1-  561     	BTRSS	STATUS,2
     0025 3rrr                      1-  562     	LGOTO	_00141_DS_
                                    1-  563     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  564     ;;unsigned compare: left >= lit (0x33=51), size=1
                                    1-  565     	.line	177, "main.c"; 	if((XD > 50) && workStep == 2)
     0026 2133                      1-  566     	MOVIA	0x33
                                    1-  567     	BANKSEL	_XD
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 04rr                      1-  568     	SUBAR	_XD,W
     0029 0803                      1-  569     	BTRSS	STATUS,0
     002A 3rrr                      1-  570     	LGOTO	_00134_DS_
                                    1-  571     	BANKSEL	_workStep
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1-  572     	MOVR	_workStep,W
     002D 2402                      1-  573     	XORIA	0x02
     002E 0903                      1-  574     	BTRSS	STATUS,2
     002F 3rrr                      1-  575     	LGOTO	_00134_DS_
                                    1-  576     	.line	180, "main.c"; 	if(++count20s >= 200)
                                    1-  577     	BANKSEL	_count20s
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 05rr                      1-  578     	INCR	_count20s,F
                                    1-  579     ;;unsigned compare: left < lit (0xC8=200), size=1
     0032 21C8                      1-  580     	MOVIA	0xc8
     0033 04rr                      1-  581     	SUBAR	_count20s,W
     0034 0803                      1-  582     	BTRSS	STATUS,0
     0035 3rrr                      1-  583     	LGOTO	_00125_DS_
                                    1-  584     	.line	182, "main.c"; 	count20s = 200;
     0036 21C8                      1-  585     	MOVIA	0xc8
     0037 00rr                      1-  586     	MOVAR	_count20s
                                    1-  587     ;;unsigned compare: left < lit (0x64=100), size=1
     0038                           1-  588     _00125_DS_:
                                    1-  589     	.line	184, "main.c"; 	if(count20s < 100)
     0038 2164                      1-  590     	MOVIA	0x64
                                    1-  591     	BANKSEL	_count20s
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1-  592     	SUBAR	_count20s,W
     003B 0C03                      1-  593     	BTRSC	STATUS,0
     003C 3rrr                      1-  594     	LGOTO	_00127_DS_
                                    1-  595     	.line	186, "main.c"; 	setColor(RED4);
     003D 21CC                      1-  596     	MOVIA	0xcc
     003E 00rr                      1-  597     	MOVAR	STK01
     003F 00rr                      1-  598     	MOVAR	STK00
     0040 2rrr                      1-  599     	LCALL	_setColor
     0041 3rrr                      1-  600     	LGOTO	_00141_DS_
     0042                           1-  601     _00127_DS_:
                                    1-  602     	.line	190, "main.c"; 	setColor(RED3);
     0042 214C                      1-  603     	MOVIA	0x4c
     0043 00rr                      1-  604     	MOVAR	STK01
     0044 00rr                      1-  605     	MOVAR	STK00
     0045 2rrr                      1-  606     	LCALL	_setColor
     0046 3rrr                      1-  607     	LGOTO	_00141_DS_
                                    1-  608     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  609     ;;unsigned compare: left >= lit (0x33=51), size=1
     0047                           1-  610     _00134_DS_:
                                    1-  611     	.line	193, "main.c"; 	else if((!(XD > 50)) && workStep == 0)
     0047 2133                      1-  612     	MOVIA	0x33
                                    1-  613     	BANKSEL	_XD
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 04rr                      1-  614     	SUBAR	_XD,W
     004A 0C03                      1-  615     	BTRSC	STATUS,0
     004B 3rrr                      1-  616     	LGOTO	_00130_DS_
                                    1-  617     	BANKSEL	_workStep
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 01rr                      1-  618     	MOVR	_workStep,W
     004E 0903                      1-  619     	BTRSS	STATUS,2
     004F 3rrr                      1-  620     	LGOTO	_00130_DS_
                                    1-  621     	.line	195, "main.c"; 	setColor(BLACK);
     0050 2100                      1-  622     	MOVIA	0x00
     0051 00rr                      1-  623     	MOVAR	STK01
     0052 00rr                      1-  624     	MOVAR	STK00
     0053 2rrr                      1-  625     	LCALL	_setColor
     0054 3rrr                      1-  626     	LGOTO	_00141_DS_
     0055                           1-  627     _00130_DS_:
                                    1-  628     	.line	199, "main.c"; 	count20s = 0;
                                    1-  629     	BANKSEL	_count20s
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 02rr                      1-  630     	CLRR	_count20s
                                    1-  631     	.line	200, "main.c"; 	xdCtr();
     0057 2rrr                      1-  632     	LCALL	_xdCtr
     0058 3rrr                      1-  633     	LGOTO	_00141_DS_
                                    1-  634     	.line	204, "main.c"; 	}
                                    1-  635     	RETURN	
     0059 0010                      3-   26 m1      ret
                                    1-  636     ; exit point of _main
                                    1-  638     ;***
                                    1-  639     ;  pBlock Stats: dbName = C
                                    1-  640     ;***
                                    1-  641     ;has an exit
                                    1-  642     ;; Starting pCode block
                                    1-  643     .segment "code"; module=main, function=_Delay10Us
     0000                           1-  645     _Delay10Us:
                                    1-  646     ; 2 exit points
                                    1-  647     	.line	826, "main.c"; 	NOP();
     0000 0000                      1-  648     	nop
                                    1-  649     	.line	827, "main.c"; 	NOP();
     0001 0000                      1-  650     	nop
                                    1-  651     	.line	828, "main.c"; 	NOP();
     0002 0000                      1-  652     	nop
                                    1-  653     	.line	829, "main.c"; 	NOP();
     0003 0000                      1-  654     	nop
                                    1-  655     	.line	830, "main.c"; 	NOP();
     0004 0000                      1-  656     	nop
                                    1-  657     	.line	831, "main.c"; 	NOP();
     0005 0000                      1-  658     	nop
                                    1-  659     	.line	832, "main.c"; 	}
                                    1-  660     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  661     ; exit point of _Delay10Us
                                    1-  663     ;***
                                    1-  664     ;  pBlock Stats: dbName = C
                                    1-  665     ;***
                                    1-  666     ;has an exit
                                    1-  667     ;1 compiler assigned register :
                                    1-  668     ;   r0x1011
                                    1-  669     ;; Starting pCode block
                                    1-  670     .segment "code"; module=main, function=_Delay80us
                                    1-  672     ;local variable name mapping:
     0000                           1-  674     _Delay80us:
                                    1-  675     ; 2 exit points
                                    1-  676     	.line	816, "main.c"; 	for(unsigned char i=0;i<250;i++)
                                    1-  677     	BANKSEL	r0x1011
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  678     	CLRR	r0x1011
                                    1-  679     ;;unsigned compare: left < lit (0xFA=250), size=1
     0002                           1-  680     _00805_DS_:
     0002 21FA                      1-  681     	MOVIA	0xfa
                                    1-  682     	BANKSEL	r0x1011
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 04rr                      1-  683     	SUBAR	r0x1011,W
     0005 0C03                      1-  684     	BTRSC	STATUS,0
     0006 3rrr                      1-  685     	LGOTO	_00807_DS_
                                    1-  686     	.line	818, "main.c"; 	NOP();
     0007 0000                      1-  687     	nop
                                    1-  688     	.line	819, "main.c"; 	NOP();
     0008 0000                      1-  689     	nop
                                    1-  690     	.line	820, "main.c"; 	NOP();
     0009 0000                      1-  691     	nop
                                    1-  692     	.line	816, "main.c"; 	for(unsigned char i=0;i<250;i++)
                                    1-  693     	BANKSEL	r0x1011
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 05rr                      1-  694     	INCR	r0x1011,F
     000C 3rrr                      1-  695     	LGOTO	_00805_DS_
     000D                           1-  696     _00807_DS_:
                                    1-  697     	.line	822, "main.c"; 	}
                                    1-  698     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1-  699     ; exit point of _Delay80us
                                    1-  701     ;***
                                    1-  702     ;  pBlock Stats: dbName = C
                                    1-  703     ;***
                                    1-  704     ;has an exit
                                    1-  705     ;2 compiler assigned registers:
                                    1-  706     ;   STK00
                                    1-  707     ;   STK01
                                    1-  708     ;; Starting pCode block
                                    1-  709     .segment "code"; module=main, function=_sendRGB
     0000                           1-  711     _sendRGB:
                                    1-  712     ; 2 exit points
                                    1-  713     	.line	700, "main.c"; 	void sendRGB(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1-  714     	BANKSEL	_Rdata
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  715     	MOVAR	_Rdata
     0002 01rr                      1-  716     	MOVR	STK00,W
                                    1-  717     	BANKSEL	_Gdata
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  718     	MOVAR	_Gdata
     0005 01rr                      1-  719     	MOVR	STK01,W
                                    1-  720     	BANKSEL	_Bdata
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  721     	MOVAR	_Bdata
                                    1-  722     	.line	707, "main.c"; 	DISI();	
     0008 0013                      1-  723     	DISI
                                    1-  724     	.line	708, "main.c"; 	if(R7)
                                    1-  725     	BANKSEL	_Rdata
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 0Brr                      1-  726     	BTRSS	_Rdata,7
     000B 3rrr                      1-  727     	LGOTO	_00586_DS_
                                    1-  728     	.line	709, "main.c"; 	NUBA1();
     000C 1Drr                      1-  729     	BCR	_PORTAbits,2
     000D 0000                      1-  730     	nop
     000E 19rr                      1-  731     	BSR	_PORTAbits,2
     000F 3rrr                      1-  732     	LGOTO	_00591_DS_
     0010                           1-  733     _00586_DS_:
                                    1-  734     	.line	711, "main.c"; 	NUBA0();
     0010 1Drr                      1-  735     	BCR	_PORTAbits,2
     0011 0000                      1-  736     	nop
     0012 19rr                      1-  737     	BSR	_PORTAbits,2
     0013 0000                      1-  738     	nop
     0014 1Drr                      1-  739     	BCR	_PORTAbits,2
     0015                           1-  740     _00591_DS_:
                                    1-  741     	.line	712, "main.c"; 	if(R6)
                                    1-  742     	BANKSEL	_Rdata
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 0Brr                      1-  743     	BTRSS	_Rdata,6
     0017 3rrr                      1-  744     	LGOTO	_00595_DS_
                                    1-  745     	.line	713, "main.c"; 	NUBA1();
     0018 1Drr                      1-  746     	BCR	_PORTAbits,2
     0019 0000                      1-  747     	nop
     001A 19rr                      1-  748     	BSR	_PORTAbits,2
     001B 3rrr                      1-  749     	LGOTO	_00600_DS_
     001C                           1-  750     _00595_DS_:
                                    1-  751     	.line	715, "main.c"; 	NUBA0();
     001C 1Drr                      1-  752     	BCR	_PORTAbits,2
     001D 0000                      1-  753     	nop
     001E 19rr                      1-  754     	BSR	_PORTAbits,2
     001F 0000                      1-  755     	nop
     0020 1Drr                      1-  756     	BCR	_PORTAbits,2
     0021                           1-  757     _00600_DS_:
                                    1-  758     	.line	716, "main.c"; 	if(R5)
                                    1-  759     	BANKSEL	_Rdata
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 0Arr                      1-  760     	BTRSS	_Rdata,5
     0023 3rrr                      1-  761     	LGOTO	_00604_DS_
                                    1-  762     	.line	717, "main.c"; 	NUBA1();
     0024 1Drr                      1-  763     	BCR	_PORTAbits,2
     0025 0000                      1-  764     	nop
     0026 19rr                      1-  765     	BSR	_PORTAbits,2
     0027 3rrr                      1-  766     	LGOTO	_00609_DS_
     0028                           1-  767     _00604_DS_:
                                    1-  768     	.line	719, "main.c"; 	NUBA0();
     0028 1Drr                      1-  769     	BCR	_PORTAbits,2
     0029 0000                      1-  770     	nop
     002A 19rr                      1-  771     	BSR	_PORTAbits,2
     002B 0000                      1-  772     	nop
     002C 1Drr                      1-  773     	BCR	_PORTAbits,2
     002D                           1-  774     _00609_DS_:
                                    1-  775     	.line	720, "main.c"; 	if(R4)
                                    1-  776     	BANKSEL	_Rdata
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 0Arr                      1-  777     	BTRSS	_Rdata,4
     002F 3rrr                      1-  778     	LGOTO	_00613_DS_
                                    1-  779     	.line	721, "main.c"; 	NUBA1();
     0030 1Drr                      1-  780     	BCR	_PORTAbits,2
     0031 0000                      1-  781     	nop
     0032 19rr                      1-  782     	BSR	_PORTAbits,2
     0033 3rrr                      1-  783     	LGOTO	_00618_DS_
     0034                           1-  784     _00613_DS_:
                                    1-  785     	.line	723, "main.c"; 	NUBA0();
     0034 1Drr                      1-  786     	BCR	_PORTAbits,2
     0035 0000                      1-  787     	nop
     0036 19rr                      1-  788     	BSR	_PORTAbits,2
     0037 0000                      1-  789     	nop
     0038 1Drr                      1-  790     	BCR	_PORTAbits,2
     0039                           1-  791     _00618_DS_:
                                    1-  792     	.line	724, "main.c"; 	if(R3)
                                    1-  793     	BANKSEL	_Rdata
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 09rr                      1-  794     	BTRSS	_Rdata,3
     003B 3rrr                      1-  795     	LGOTO	_00622_DS_
                                    1-  796     	.line	725, "main.c"; 	NUBA1();
     003C 1Drr                      1-  797     	BCR	_PORTAbits,2
     003D 0000                      1-  798     	nop
     003E 19rr                      1-  799     	BSR	_PORTAbits,2
     003F 3rrr                      1-  800     	LGOTO	_00627_DS_
     0040                           1-  801     _00622_DS_:
                                    1-  802     	.line	727, "main.c"; 	NUBA0();
     0040 1Drr                      1-  803     	BCR	_PORTAbits,2
     0041 0000                      1-  804     	nop
     0042 19rr                      1-  805     	BSR	_PORTAbits,2
     0043 0000                      1-  806     	nop
     0044 1Drr                      1-  807     	BCR	_PORTAbits,2
     0045                           1-  808     _00627_DS_:
                                    1-  809     	.line	728, "main.c"; 	if(R2)
                                    1-  810     	BANKSEL	_Rdata
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 09rr                      1-  811     	BTRSS	_Rdata,2
     0047 3rrr                      1-  812     	LGOTO	_00631_DS_
                                    1-  813     	.line	729, "main.c"; 	NUBA1();
     0048 1Drr                      1-  814     	BCR	_PORTAbits,2
     0049 0000                      1-  815     	nop
     004A 19rr                      1-  816     	BSR	_PORTAbits,2
     004B 3rrr                      1-  817     	LGOTO	_00636_DS_
     004C                           1-  818     _00631_DS_:
                                    1-  819     	.line	731, "main.c"; 	NUBA0();
     004C 1Drr                      1-  820     	BCR	_PORTAbits,2
     004D 0000                      1-  821     	nop
     004E 19rr                      1-  822     	BSR	_PORTAbits,2
     004F 0000                      1-  823     	nop
     0050 1Drr                      1-  824     	BCR	_PORTAbits,2
     0051                           1-  825     _00636_DS_:
                                    1-  826     	.line	732, "main.c"; 	if(R1)
                                    1-  827     	BANKSEL	_Rdata
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 08rr                      1-  828     	BTRSS	_Rdata,1
     0053 3rrr                      1-  829     	LGOTO	_00640_DS_
                                    1-  830     	.line	733, "main.c"; 	NUBA1();
     0054 1Drr                      1-  831     	BCR	_PORTAbits,2
     0055 0000                      1-  832     	nop
     0056 19rr                      1-  833     	BSR	_PORTAbits,2
     0057 3rrr                      1-  834     	LGOTO	_00645_DS_
     0058                           1-  835     _00640_DS_:
                                    1-  836     	.line	735, "main.c"; 	NUBA0();
     0058 1Drr                      1-  837     	BCR	_PORTAbits,2
     0059 0000                      1-  838     	nop
     005A 19rr                      1-  839     	BSR	_PORTAbits,2
     005B 0000                      1-  840     	nop
     005C 1Drr                      1-  841     	BCR	_PORTAbits,2
     005D                           1-  842     _00645_DS_:
                                    1-  843     	.line	736, "main.c"; 	if(R0)
                                    1-  844     	BANKSEL	_Rdata
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 08rr                      1-  845     	BTRSS	_Rdata,0
     005F 3rrr                      1-  846     	LGOTO	_00649_DS_
                                    1-  847     	.line	737, "main.c"; 	NUBA1();
     0060 1Drr                      1-  848     	BCR	_PORTAbits,2
     0061 0000                      1-  849     	nop
     0062 19rr                      1-  850     	BSR	_PORTAbits,2
     0063 3rrr                      1-  851     	LGOTO	_00654_DS_
     0064                           1-  852     _00649_DS_:
                                    1-  853     	.line	739, "main.c"; 	NUBA0();
     0064 1Drr                      1-  854     	BCR	_PORTAbits,2
     0065 0000                      1-  855     	nop
     0066 19rr                      1-  856     	BSR	_PORTAbits,2
     0067 0000                      1-  857     	nop
     0068 1Drr                      1-  858     	BCR	_PORTAbits,2
     0069                           1-  859     _00654_DS_:
                                    1-  860     	.line	741, "main.c"; 	if(G7)
                                    1-  861     	BANKSEL	_Gdata
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 0Brr                      1-  862     	BTRSS	_Gdata,7
     006B 3rrr                      1-  863     	LGOTO	_00658_DS_
                                    1-  864     	.line	742, "main.c"; 	NUBA1();
     006C 1Drr                      1-  865     	BCR	_PORTAbits,2
     006D 0000                      1-  866     	nop
     006E 19rr                      1-  867     	BSR	_PORTAbits,2
     006F 3rrr                      1-  868     	LGOTO	_00663_DS_
     0070                           1-  869     _00658_DS_:
                                    1-  870     	.line	744, "main.c"; 	NUBA0();
     0070 1Drr                      1-  871     	BCR	_PORTAbits,2
     0071 0000                      1-  872     	nop
     0072 19rr                      1-  873     	BSR	_PORTAbits,2
     0073 0000                      1-  874     	nop
     0074 1Drr                      1-  875     	BCR	_PORTAbits,2
     0075                           1-  876     _00663_DS_:
                                    1-  877     	.line	745, "main.c"; 	if(G6)
                                    1-  878     	BANKSEL	_Gdata
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 0Brr                      1-  879     	BTRSS	_Gdata,6
     0077 3rrr                      1-  880     	LGOTO	_00667_DS_
                                    1-  881     	.line	746, "main.c"; 	NUBA1();
     0078 1Drr                      1-  882     	BCR	_PORTAbits,2
     0079 0000                      1-  883     	nop
     007A 19rr                      1-  884     	BSR	_PORTAbits,2
     007B 3rrr                      1-  885     	LGOTO	_00672_DS_
     007C                           1-  886     _00667_DS_:
                                    1-  887     	.line	748, "main.c"; 	NUBA0();
     007C 1Drr                      1-  888     	BCR	_PORTAbits,2
     007D 0000                      1-  889     	nop
     007E 19rr                      1-  890     	BSR	_PORTAbits,2
     007F 0000                      1-  891     	nop
     0080 1Drr                      1-  892     	BCR	_PORTAbits,2
     0081                           1-  893     _00672_DS_:
                                    1-  894     	.line	749, "main.c"; 	if(G5)
                                    1-  895     	BANKSEL	_Gdata
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 0Arr                      1-  896     	BTRSS	_Gdata,5
     0083 3rrr                      1-  897     	LGOTO	_00676_DS_
                                    1-  898     	.line	750, "main.c"; 	NUBA1();
     0084 1Drr                      1-  899     	BCR	_PORTAbits,2
     0085 0000                      1-  900     	nop
     0086 19rr                      1-  901     	BSR	_PORTAbits,2
     0087 3rrr                      1-  902     	LGOTO	_00681_DS_
     0088                           1-  903     _00676_DS_:
                                    1-  904     	.line	752, "main.c"; 	NUBA0();
     0088 1Drr                      1-  905     	BCR	_PORTAbits,2
     0089 0000                      1-  906     	nop
     008A 19rr                      1-  907     	BSR	_PORTAbits,2
     008B 0000                      1-  908     	nop
     008C 1Drr                      1-  909     	BCR	_PORTAbits,2
     008D                           1-  910     _00681_DS_:
                                    1-  911     	.line	753, "main.c"; 	if(G4)
                                    1-  912     	BANKSEL	_Gdata
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 0Arr                      1-  913     	BTRSS	_Gdata,4
     008F 3rrr                      1-  914     	LGOTO	_00685_DS_
                                    1-  915     	.line	754, "main.c"; 	NUBA1();
     0090 1Drr                      1-  916     	BCR	_PORTAbits,2
     0091 0000                      1-  917     	nop
     0092 19rr                      1-  918     	BSR	_PORTAbits,2
     0093 3rrr                      1-  919     	LGOTO	_00690_DS_
     0094                           1-  920     _00685_DS_:
                                    1-  921     	.line	756, "main.c"; 	NUBA0();
     0094 1Drr                      1-  922     	BCR	_PORTAbits,2
     0095 0000                      1-  923     	nop
     0096 19rr                      1-  924     	BSR	_PORTAbits,2
     0097 0000                      1-  925     	nop
     0098 1Drr                      1-  926     	BCR	_PORTAbits,2
     0099                           1-  927     _00690_DS_:
                                    1-  928     	.line	757, "main.c"; 	if(G3)
                                    1-  929     	BANKSEL	_Gdata
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 09rr                      1-  930     	BTRSS	_Gdata,3
     009B 3rrr                      1-  931     	LGOTO	_00694_DS_
                                    1-  932     	.line	758, "main.c"; 	NUBA1();
     009C 1Drr                      1-  933     	BCR	_PORTAbits,2
     009D 0000                      1-  934     	nop
     009E 19rr                      1-  935     	BSR	_PORTAbits,2
     009F 3rrr                      1-  936     	LGOTO	_00699_DS_
     00A0                           1-  937     _00694_DS_:
                                    1-  938     	.line	760, "main.c"; 	NUBA0();
     00A0 1Drr                      1-  939     	BCR	_PORTAbits,2
     00A1 0000                      1-  940     	nop
     00A2 19rr                      1-  941     	BSR	_PORTAbits,2
     00A3 0000                      1-  942     	nop
     00A4 1Drr                      1-  943     	BCR	_PORTAbits,2
     00A5                           1-  944     _00699_DS_:
                                    1-  945     	.line	761, "main.c"; 	if(G2)
                                    1-  946     	BANKSEL	_Gdata
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 09rr                      1-  947     	BTRSS	_Gdata,2
     00A7 3rrr                      1-  948     	LGOTO	_00703_DS_
                                    1-  949     	.line	762, "main.c"; 	NUBA1();
     00A8 1Drr                      1-  950     	BCR	_PORTAbits,2
     00A9 0000                      1-  951     	nop
     00AA 19rr                      1-  952     	BSR	_PORTAbits,2
     00AB 3rrr                      1-  953     	LGOTO	_00708_DS_
     00AC                           1-  954     _00703_DS_:
                                    1-  955     	.line	764, "main.c"; 	NUBA0();
     00AC 1Drr                      1-  956     	BCR	_PORTAbits,2
     00AD 0000                      1-  957     	nop
     00AE 19rr                      1-  958     	BSR	_PORTAbits,2
     00AF 0000                      1-  959     	nop
     00B0 1Drr                      1-  960     	BCR	_PORTAbits,2
     00B1                           1-  961     _00708_DS_:
                                    1-  962     	.line	765, "main.c"; 	if(G1)
                                    1-  963     	BANKSEL	_Gdata
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 08rr                      1-  964     	BTRSS	_Gdata,1
     00B3 3rrr                      1-  965     	LGOTO	_00712_DS_
                                    1-  966     	.line	766, "main.c"; 	NUBA1();
     00B4 1Drr                      1-  967     	BCR	_PORTAbits,2
     00B5 0000                      1-  968     	nop
     00B6 19rr                      1-  969     	BSR	_PORTAbits,2
     00B7 3rrr                      1-  970     	LGOTO	_00717_DS_
     00B8                           1-  971     _00712_DS_:
                                    1-  972     	.line	768, "main.c"; 	NUBA0();
     00B8 1Drr                      1-  973     	BCR	_PORTAbits,2
     00B9 0000                      1-  974     	nop
     00BA 19rr                      1-  975     	BSR	_PORTAbits,2
     00BB 0000                      1-  976     	nop
     00BC 1Drr                      1-  977     	BCR	_PORTAbits,2
     00BD                           1-  978     _00717_DS_:
                                    1-  979     	.line	769, "main.c"; 	if(G0)
                                    1-  980     	BANKSEL	_Gdata
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 08rr                      1-  981     	BTRSS	_Gdata,0
     00BF 3rrr                      1-  982     	LGOTO	_00721_DS_
                                    1-  983     	.line	770, "main.c"; 	NUBA1();
     00C0 1Drr                      1-  984     	BCR	_PORTAbits,2
     00C1 0000                      1-  985     	nop
     00C2 19rr                      1-  986     	BSR	_PORTAbits,2
     00C3 3rrr                      1-  987     	LGOTO	_00726_DS_
     00C4                           1-  988     _00721_DS_:
                                    1-  989     	.line	772, "main.c"; 	NUBA0();
     00C4 1Drr                      1-  990     	BCR	_PORTAbits,2
     00C5 0000                      1-  991     	nop
     00C6 19rr                      1-  992     	BSR	_PORTAbits,2
     00C7 0000                      1-  993     	nop
     00C8 1Drr                      1-  994     	BCR	_PORTAbits,2
     00C9                           1-  995     _00726_DS_:
                                    1-  996     	.line	774, "main.c"; 	if(B7)
                                    1-  997     	BANKSEL	_Bdata
     00C9 rrrr                      3-   71 m1      .banksel ram_address
     00CA 0Brr                      1-  998     	BTRSS	_Bdata,7
     00CB 3rrr                      1-  999     	LGOTO	_00730_DS_
                                    1- 1000     	.line	775, "main.c"; 	NUBA1();
     00CC 1Drr                      1- 1001     	BCR	_PORTAbits,2
     00CD 0000                      1- 1002     	nop
     00CE 19rr                      1- 1003     	BSR	_PORTAbits,2
     00CF 3rrr                      1- 1004     	LGOTO	_00735_DS_
     00D0                           1- 1005     _00730_DS_:
                                    1- 1006     	.line	777, "main.c"; 	NUBA0();
     00D0 1Drr                      1- 1007     	BCR	_PORTAbits,2
     00D1 0000                      1- 1008     	nop
     00D2 19rr                      1- 1009     	BSR	_PORTAbits,2
     00D3 0000                      1- 1010     	nop
     00D4 1Drr                      1- 1011     	BCR	_PORTAbits,2
     00D5                           1- 1012     _00735_DS_:
                                    1- 1013     	.line	778, "main.c"; 	if(B6)
                                    1- 1014     	BANKSEL	_Bdata
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 0Brr                      1- 1015     	BTRSS	_Bdata,6
     00D7 3rrr                      1- 1016     	LGOTO	_00739_DS_
                                    1- 1017     	.line	779, "main.c"; 	NUBA1();
     00D8 1Drr                      1- 1018     	BCR	_PORTAbits,2
     00D9 0000                      1- 1019     	nop
     00DA 19rr                      1- 1020     	BSR	_PORTAbits,2
     00DB 3rrr                      1- 1021     	LGOTO	_00744_DS_
     00DC                           1- 1022     _00739_DS_:
                                    1- 1023     	.line	781, "main.c"; 	NUBA0();
     00DC 1Drr                      1- 1024     	BCR	_PORTAbits,2
     00DD 0000                      1- 1025     	nop
     00DE 19rr                      1- 1026     	BSR	_PORTAbits,2
     00DF 0000                      1- 1027     	nop
     00E0 1Drr                      1- 1028     	BCR	_PORTAbits,2
     00E1                           1- 1029     _00744_DS_:
                                    1- 1030     	.line	782, "main.c"; 	if(B5)
                                    1- 1031     	BANKSEL	_Bdata
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 0Arr                      1- 1032     	BTRSS	_Bdata,5
     00E3 3rrr                      1- 1033     	LGOTO	_00748_DS_
                                    1- 1034     	.line	783, "main.c"; 	NUBA1();
     00E4 1Drr                      1- 1035     	BCR	_PORTAbits,2
     00E5 0000                      1- 1036     	nop
     00E6 19rr                      1- 1037     	BSR	_PORTAbits,2
     00E7 3rrr                      1- 1038     	LGOTO	_00753_DS_
     00E8                           1- 1039     _00748_DS_:
                                    1- 1040     	.line	785, "main.c"; 	NUBA0();
     00E8 1Drr                      1- 1041     	BCR	_PORTAbits,2
     00E9 0000                      1- 1042     	nop
     00EA 19rr                      1- 1043     	BSR	_PORTAbits,2
     00EB 0000                      1- 1044     	nop
     00EC 1Drr                      1- 1045     	BCR	_PORTAbits,2
     00ED                           1- 1046     _00753_DS_:
                                    1- 1047     	.line	786, "main.c"; 	if(B4)
                                    1- 1048     	BANKSEL	_Bdata
     00ED rrrr                      3-   71 m1      .banksel ram_address
     00EE 0Arr                      1- 1049     	BTRSS	_Bdata,4
     00EF 3rrr                      1- 1050     	LGOTO	_00757_DS_
                                    1- 1051     	.line	787, "main.c"; 	NUBA1();
     00F0 1Drr                      1- 1052     	BCR	_PORTAbits,2
     00F1 0000                      1- 1053     	nop
     00F2 19rr                      1- 1054     	BSR	_PORTAbits,2
     00F3 3rrr                      1- 1055     	LGOTO	_00762_DS_
     00F4                           1- 1056     _00757_DS_:
                                    1- 1057     	.line	789, "main.c"; 	NUBA0();
     00F4 1Drr                      1- 1058     	BCR	_PORTAbits,2
     00F5 0000                      1- 1059     	nop
     00F6 19rr                      1- 1060     	BSR	_PORTAbits,2
     00F7 0000                      1- 1061     	nop
     00F8 1Drr                      1- 1062     	BCR	_PORTAbits,2
     00F9                           1- 1063     _00762_DS_:
                                    1- 1064     	.line	790, "main.c"; 	if(B3)
                                    1- 1065     	BANKSEL	_Bdata
     00F9 rrrr                      3-   71 m1      .banksel ram_address
     00FA 09rr                      1- 1066     	BTRSS	_Bdata,3
     00FB 3rrr                      1- 1067     	LGOTO	_00766_DS_
                                    1- 1068     	.line	791, "main.c"; 	NUBA1();
     00FC 1Drr                      1- 1069     	BCR	_PORTAbits,2
     00FD 0000                      1- 1070     	nop
     00FE 19rr                      1- 1071     	BSR	_PORTAbits,2
     00FF 3rrr                      1- 1072     	LGOTO	_00771_DS_
     0100                           1- 1073     _00766_DS_:
                                    1- 1074     	.line	793, "main.c"; 	NUBA0();
     0100 1Drr                      1- 1075     	BCR	_PORTAbits,2
     0101 0000                      1- 1076     	nop
     0102 19rr                      1- 1077     	BSR	_PORTAbits,2
     0103 0000                      1- 1078     	nop
     0104 1Drr                      1- 1079     	BCR	_PORTAbits,2
     0105                           1- 1080     _00771_DS_:
                                    1- 1081     	.line	794, "main.c"; 	if(B2)
                                    1- 1082     	BANKSEL	_Bdata
     0105 rrrr                      3-   71 m1      .banksel ram_address
     0106 09rr                      1- 1083     	BTRSS	_Bdata,2
     0107 3rrr                      1- 1084     	LGOTO	_00775_DS_
                                    1- 1085     	.line	795, "main.c"; 	NUBA1();
     0108 1Drr                      1- 1086     	BCR	_PORTAbits,2
     0109 0000                      1- 1087     	nop
     010A 19rr                      1- 1088     	BSR	_PORTAbits,2
     010B 3rrr                      1- 1089     	LGOTO	_00780_DS_
     010C                           1- 1090     _00775_DS_:
                                    1- 1091     	.line	797, "main.c"; 	NUBA0();
     010C 1Drr                      1- 1092     	BCR	_PORTAbits,2
     010D 0000                      1- 1093     	nop
     010E 19rr                      1- 1094     	BSR	_PORTAbits,2
     010F 0000                      1- 1095     	nop
     0110 1Drr                      1- 1096     	BCR	_PORTAbits,2
     0111                           1- 1097     _00780_DS_:
                                    1- 1098     	.line	798, "main.c"; 	if(B1)
                                    1- 1099     	BANKSEL	_Bdata
     0111 rrrr                      3-   71 m1      .banksel ram_address
     0112 08rr                      1- 1100     	BTRSS	_Bdata,1
     0113 3rrr                      1- 1101     	LGOTO	_00784_DS_
                                    1- 1102     	.line	799, "main.c"; 	NUBA1();
     0114 1Drr                      1- 1103     	BCR	_PORTAbits,2
     0115 0000                      1- 1104     	nop
     0116 19rr                      1- 1105     	BSR	_PORTAbits,2
     0117 3rrr                      1- 1106     	LGOTO	_00789_DS_
     0118                           1- 1107     _00784_DS_:
                                    1- 1108     	.line	801, "main.c"; 	NUBA0();
     0118 1Drr                      1- 1109     	BCR	_PORTAbits,2
     0119 0000                      1- 1110     	nop
     011A 19rr                      1- 1111     	BSR	_PORTAbits,2
     011B 0000                      1- 1112     	nop
     011C 1Drr                      1- 1113     	BCR	_PORTAbits,2
     011D                           1- 1114     _00789_DS_:
                                    1- 1115     	.line	802, "main.c"; 	if(B0)
                                    1- 1116     	BANKSEL	_Bdata
     011D rrrr                      3-   71 m1      .banksel ram_address
     011E 08rr                      1- 1117     	BTRSS	_Bdata,0
     011F 3rrr                      1- 1118     	LGOTO	_00793_DS_
                                    1- 1119     	.line	803, "main.c"; 	NUBA1();
     0120 1Drr                      1- 1120     	BCR	_PORTAbits,2
     0121 0000                      1- 1121     	nop
     0122 19rr                      1- 1122     	BSR	_PORTAbits,2
     0123 3rrr                      1- 1123     	LGOTO	_00798_DS_
     0124                           1- 1124     _00793_DS_:
                                    1- 1125     	.line	805, "main.c"; 	NUBA0();
     0124 1Drr                      1- 1126     	BCR	_PORTAbits,2
     0125 0000                      1- 1127     	nop
     0126 19rr                      1- 1128     	BSR	_PORTAbits,2
     0127 0000                      1- 1129     	nop
     0128 1Drr                      1- 1130     	BCR	_PORTAbits,2
     0129                           1- 1131     _00798_DS_:
                                    1- 1132     	.line	807, "main.c"; 	PORTAbits.PA2 = 0;
     0129 1Drr                      1- 1133     	BCR	_PORTAbits,2
                                    1- 1134     	.line	808, "main.c"; 	ENI();	
     012A 0004                      1- 1135     	ENI
                                    1- 1136     	.line	809, "main.c"; 	}
                                    1- 1137     	RETURN	
     012B 0010                      3-   26 m1      ret
                                    1- 1138     ; exit point of _sendRGB
                                    1- 1140     ;***
                                    1- 1141     ;  pBlock Stats: dbName = C
                                    1- 1142     ;***
                                    1- 1143     ;has an exit
                                    1- 1144     ;2 compiler assigned registers:
                                    1- 1145     ;   STK00
                                    1- 1146     ;   STK01
                                    1- 1147     ;; Starting pCode block
                                    1- 1148     .segment "code"; module=main, function=_sendRGB2
     0000                           1- 1150     _sendRGB2:
                                    1- 1151     ; 2 exit points
                                    1- 1152     	.line	587, "main.c"; 	void sendRGB2(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 1153     	BANKSEL	_Rdata
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1154     	MOVAR	_Rdata
     0002 01rr                      1- 1155     	MOVR	STK00,W
                                    1- 1156     	BANKSEL	_Gdata
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1157     	MOVAR	_Gdata
     0005 01rr                      1- 1158     	MOVR	STK01,W
                                    1- 1159     	BANKSEL	_Bdata
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1160     	MOVAR	_Bdata
                                    1- 1161     	.line	594, "main.c"; 	DISI();	
     0008 0013                      1- 1162     	DISI
                                    1- 1163     	.line	595, "main.c"; 	if(R7)
                                    1- 1164     	BANKSEL	_Rdata
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 0Brr                      1- 1165     	BTRSS	_Rdata,7
     000B 3rrr                      1- 1166     	LGOTO	_00366_DS_
                                    1- 1167     	.line	596, "main.c"; 	NUB1();
     000C 1Frr                      1- 1168     	BCR	_PORTAbits,6
     000D 0000                      1- 1169     	nop
     000E 1Brr                      1- 1170     	BSR	_PORTAbits,6
     000F 3rrr                      1- 1171     	LGOTO	_00371_DS_
     0010                           1- 1172     _00366_DS_:
                                    1- 1173     	.line	598, "main.c"; 	NUB0();
     0010 1Frr                      1- 1174     	BCR	_PORTAbits,6
     0011 0000                      1- 1175     	nop
     0012 1Brr                      1- 1176     	BSR	_PORTAbits,6
     0013 0000                      1- 1177     	nop
     0014 1Frr                      1- 1178     	BCR	_PORTAbits,6
     0015                           1- 1179     _00371_DS_:
                                    1- 1180     	.line	599, "main.c"; 	if(R6)
                                    1- 1181     	BANKSEL	_Rdata
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 0Brr                      1- 1182     	BTRSS	_Rdata,6
     0017 3rrr                      1- 1183     	LGOTO	_00375_DS_
                                    1- 1184     	.line	600, "main.c"; 	NUB1();
     0018 1Frr                      1- 1185     	BCR	_PORTAbits,6
     0019 0000                      1- 1186     	nop
     001A 1Brr                      1- 1187     	BSR	_PORTAbits,6
     001B 3rrr                      1- 1188     	LGOTO	_00380_DS_
     001C                           1- 1189     _00375_DS_:
                                    1- 1190     	.line	602, "main.c"; 	NUB0();
     001C 1Frr                      1- 1191     	BCR	_PORTAbits,6
     001D 0000                      1- 1192     	nop
     001E 1Brr                      1- 1193     	BSR	_PORTAbits,6
     001F 0000                      1- 1194     	nop
     0020 1Frr                      1- 1195     	BCR	_PORTAbits,6
     0021                           1- 1196     _00380_DS_:
                                    1- 1197     	.line	603, "main.c"; 	if(R5)
                                    1- 1198     	BANKSEL	_Rdata
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 0Arr                      1- 1199     	BTRSS	_Rdata,5
     0023 3rrr                      1- 1200     	LGOTO	_00384_DS_
                                    1- 1201     	.line	604, "main.c"; 	NUB1();
     0024 1Frr                      1- 1202     	BCR	_PORTAbits,6
     0025 0000                      1- 1203     	nop
     0026 1Brr                      1- 1204     	BSR	_PORTAbits,6
     0027 3rrr                      1- 1205     	LGOTO	_00389_DS_
     0028                           1- 1206     _00384_DS_:
                                    1- 1207     	.line	606, "main.c"; 	NUB0();
     0028 1Frr                      1- 1208     	BCR	_PORTAbits,6
     0029 0000                      1- 1209     	nop
     002A 1Brr                      1- 1210     	BSR	_PORTAbits,6
     002B 0000                      1- 1211     	nop
     002C 1Frr                      1- 1212     	BCR	_PORTAbits,6
     002D                           1- 1213     _00389_DS_:
                                    1- 1214     	.line	607, "main.c"; 	if(R4)
                                    1- 1215     	BANKSEL	_Rdata
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 0Arr                      1- 1216     	BTRSS	_Rdata,4
     002F 3rrr                      1- 1217     	LGOTO	_00393_DS_
                                    1- 1218     	.line	608, "main.c"; 	NUB1();
     0030 1Frr                      1- 1219     	BCR	_PORTAbits,6
     0031 0000                      1- 1220     	nop
     0032 1Brr                      1- 1221     	BSR	_PORTAbits,6
     0033 3rrr                      1- 1222     	LGOTO	_00398_DS_
     0034                           1- 1223     _00393_DS_:
                                    1- 1224     	.line	610, "main.c"; 	NUB0();
     0034 1Frr                      1- 1225     	BCR	_PORTAbits,6
     0035 0000                      1- 1226     	nop
     0036 1Brr                      1- 1227     	BSR	_PORTAbits,6
     0037 0000                      1- 1228     	nop
     0038 1Frr                      1- 1229     	BCR	_PORTAbits,6
     0039                           1- 1230     _00398_DS_:
                                    1- 1231     	.line	611, "main.c"; 	if(R3)
                                    1- 1232     	BANKSEL	_Rdata
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 09rr                      1- 1233     	BTRSS	_Rdata,3
     003B 3rrr                      1- 1234     	LGOTO	_00402_DS_
                                    1- 1235     	.line	612, "main.c"; 	NUB1();
     003C 1Frr                      1- 1236     	BCR	_PORTAbits,6
     003D 0000                      1- 1237     	nop
     003E 1Brr                      1- 1238     	BSR	_PORTAbits,6
     003F 3rrr                      1- 1239     	LGOTO	_00407_DS_
     0040                           1- 1240     _00402_DS_:
                                    1- 1241     	.line	614, "main.c"; 	NUB0();
     0040 1Frr                      1- 1242     	BCR	_PORTAbits,6
     0041 0000                      1- 1243     	nop
     0042 1Brr                      1- 1244     	BSR	_PORTAbits,6
     0043 0000                      1- 1245     	nop
     0044 1Frr                      1- 1246     	BCR	_PORTAbits,6
     0045                           1- 1247     _00407_DS_:
                                    1- 1248     	.line	615, "main.c"; 	if(R2)
                                    1- 1249     	BANKSEL	_Rdata
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 09rr                      1- 1250     	BTRSS	_Rdata,2
     0047 3rrr                      1- 1251     	LGOTO	_00411_DS_
                                    1- 1252     	.line	616, "main.c"; 	NUB1();
     0048 1Frr                      1- 1253     	BCR	_PORTAbits,6
     0049 0000                      1- 1254     	nop
     004A 1Brr                      1- 1255     	BSR	_PORTAbits,6
     004B 3rrr                      1- 1256     	LGOTO	_00416_DS_
     004C                           1- 1257     _00411_DS_:
                                    1- 1258     	.line	618, "main.c"; 	NUB0();
     004C 1Frr                      1- 1259     	BCR	_PORTAbits,6
     004D 0000                      1- 1260     	nop
     004E 1Brr                      1- 1261     	BSR	_PORTAbits,6
     004F 0000                      1- 1262     	nop
     0050 1Frr                      1- 1263     	BCR	_PORTAbits,6
     0051                           1- 1264     _00416_DS_:
                                    1- 1265     	.line	619, "main.c"; 	if(R1)
                                    1- 1266     	BANKSEL	_Rdata
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 08rr                      1- 1267     	BTRSS	_Rdata,1
     0053 3rrr                      1- 1268     	LGOTO	_00420_DS_
                                    1- 1269     	.line	620, "main.c"; 	NUB1();
     0054 1Frr                      1- 1270     	BCR	_PORTAbits,6
     0055 0000                      1- 1271     	nop
     0056 1Brr                      1- 1272     	BSR	_PORTAbits,6
     0057 3rrr                      1- 1273     	LGOTO	_00425_DS_
     0058                           1- 1274     _00420_DS_:
                                    1- 1275     	.line	622, "main.c"; 	NUB0();
     0058 1Frr                      1- 1276     	BCR	_PORTAbits,6
     0059 0000                      1- 1277     	nop
     005A 1Brr                      1- 1278     	BSR	_PORTAbits,6
     005B 0000                      1- 1279     	nop
     005C 1Frr                      1- 1280     	BCR	_PORTAbits,6
     005D                           1- 1281     _00425_DS_:
                                    1- 1282     	.line	623, "main.c"; 	if(R0)
                                    1- 1283     	BANKSEL	_Rdata
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 08rr                      1- 1284     	BTRSS	_Rdata,0
     005F 3rrr                      1- 1285     	LGOTO	_00429_DS_
                                    1- 1286     	.line	624, "main.c"; 	NUB1();
     0060 1Frr                      1- 1287     	BCR	_PORTAbits,6
     0061 0000                      1- 1288     	nop
     0062 1Brr                      1- 1289     	BSR	_PORTAbits,6
     0063 3rrr                      1- 1290     	LGOTO	_00434_DS_
     0064                           1- 1291     _00429_DS_:
                                    1- 1292     	.line	626, "main.c"; 	NUB0();
     0064 1Frr                      1- 1293     	BCR	_PORTAbits,6
     0065 0000                      1- 1294     	nop
     0066 1Brr                      1- 1295     	BSR	_PORTAbits,6
     0067 0000                      1- 1296     	nop
     0068 1Frr                      1- 1297     	BCR	_PORTAbits,6
     0069                           1- 1298     _00434_DS_:
                                    1- 1299     	.line	628, "main.c"; 	if(G7)
                                    1- 1300     	BANKSEL	_Gdata
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 0Brr                      1- 1301     	BTRSS	_Gdata,7
     006B 3rrr                      1- 1302     	LGOTO	_00438_DS_
                                    1- 1303     	.line	629, "main.c"; 	NUB1();
     006C 1Frr                      1- 1304     	BCR	_PORTAbits,6
     006D 0000                      1- 1305     	nop
     006E 1Brr                      1- 1306     	BSR	_PORTAbits,6
     006F 3rrr                      1- 1307     	LGOTO	_00443_DS_
     0070                           1- 1308     _00438_DS_:
                                    1- 1309     	.line	631, "main.c"; 	NUB0();
     0070 1Frr                      1- 1310     	BCR	_PORTAbits,6
     0071 0000                      1- 1311     	nop
     0072 1Brr                      1- 1312     	BSR	_PORTAbits,6
     0073 0000                      1- 1313     	nop
     0074 1Frr                      1- 1314     	BCR	_PORTAbits,6
     0075                           1- 1315     _00443_DS_:
                                    1- 1316     	.line	632, "main.c"; 	if(G6)
                                    1- 1317     	BANKSEL	_Gdata
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 0Brr                      1- 1318     	BTRSS	_Gdata,6
     0077 3rrr                      1- 1319     	LGOTO	_00447_DS_
                                    1- 1320     	.line	633, "main.c"; 	NUB1();
     0078 1Frr                      1- 1321     	BCR	_PORTAbits,6
     0079 0000                      1- 1322     	nop
     007A 1Brr                      1- 1323     	BSR	_PORTAbits,6
     007B 3rrr                      1- 1324     	LGOTO	_00452_DS_
     007C                           1- 1325     _00447_DS_:
                                    1- 1326     	.line	635, "main.c"; 	NUB0();
     007C 1Frr                      1- 1327     	BCR	_PORTAbits,6
     007D 0000                      1- 1328     	nop
     007E 1Brr                      1- 1329     	BSR	_PORTAbits,6
     007F 0000                      1- 1330     	nop
     0080 1Frr                      1- 1331     	BCR	_PORTAbits,6
     0081                           1- 1332     _00452_DS_:
                                    1- 1333     	.line	636, "main.c"; 	if(G5)
                                    1- 1334     	BANKSEL	_Gdata
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 0Arr                      1- 1335     	BTRSS	_Gdata,5
     0083 3rrr                      1- 1336     	LGOTO	_00456_DS_
                                    1- 1337     	.line	637, "main.c"; 	NUB1();
     0084 1Frr                      1- 1338     	BCR	_PORTAbits,6
     0085 0000                      1- 1339     	nop
     0086 1Brr                      1- 1340     	BSR	_PORTAbits,6
     0087 3rrr                      1- 1341     	LGOTO	_00461_DS_
     0088                           1- 1342     _00456_DS_:
                                    1- 1343     	.line	639, "main.c"; 	NUB0();
     0088 1Frr                      1- 1344     	BCR	_PORTAbits,6
     0089 0000                      1- 1345     	nop
     008A 1Brr                      1- 1346     	BSR	_PORTAbits,6
     008B 0000                      1- 1347     	nop
     008C 1Frr                      1- 1348     	BCR	_PORTAbits,6
     008D                           1- 1349     _00461_DS_:
                                    1- 1350     	.line	640, "main.c"; 	if(G4)
                                    1- 1351     	BANKSEL	_Gdata
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 0Arr                      1- 1352     	BTRSS	_Gdata,4
     008F 3rrr                      1- 1353     	LGOTO	_00465_DS_
                                    1- 1354     	.line	641, "main.c"; 	NUB1();
     0090 1Frr                      1- 1355     	BCR	_PORTAbits,6
     0091 0000                      1- 1356     	nop
     0092 1Brr                      1- 1357     	BSR	_PORTAbits,6
     0093 3rrr                      1- 1358     	LGOTO	_00470_DS_
     0094                           1- 1359     _00465_DS_:
                                    1- 1360     	.line	643, "main.c"; 	NUB0();
     0094 1Frr                      1- 1361     	BCR	_PORTAbits,6
     0095 0000                      1- 1362     	nop
     0096 1Brr                      1- 1363     	BSR	_PORTAbits,6
     0097 0000                      1- 1364     	nop
     0098 1Frr                      1- 1365     	BCR	_PORTAbits,6
     0099                           1- 1366     _00470_DS_:
                                    1- 1367     	.line	644, "main.c"; 	if(G3)
                                    1- 1368     	BANKSEL	_Gdata
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 09rr                      1- 1369     	BTRSS	_Gdata,3
     009B 3rrr                      1- 1370     	LGOTO	_00474_DS_
                                    1- 1371     	.line	645, "main.c"; 	NUB1();
     009C 1Frr                      1- 1372     	BCR	_PORTAbits,6
     009D 0000                      1- 1373     	nop
     009E 1Brr                      1- 1374     	BSR	_PORTAbits,6
     009F 3rrr                      1- 1375     	LGOTO	_00479_DS_
     00A0                           1- 1376     _00474_DS_:
                                    1- 1377     	.line	647, "main.c"; 	NUB0();
     00A0 1Frr                      1- 1378     	BCR	_PORTAbits,6
     00A1 0000                      1- 1379     	nop
     00A2 1Brr                      1- 1380     	BSR	_PORTAbits,6
     00A3 0000                      1- 1381     	nop
     00A4 1Frr                      1- 1382     	BCR	_PORTAbits,6
     00A5                           1- 1383     _00479_DS_:
                                    1- 1384     	.line	648, "main.c"; 	if(G2)
                                    1- 1385     	BANKSEL	_Gdata
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 09rr                      1- 1386     	BTRSS	_Gdata,2
     00A7 3rrr                      1- 1387     	LGOTO	_00483_DS_
                                    1- 1388     	.line	649, "main.c"; 	NUB1();
     00A8 1Frr                      1- 1389     	BCR	_PORTAbits,6
     00A9 0000                      1- 1390     	nop
     00AA 1Brr                      1- 1391     	BSR	_PORTAbits,6
     00AB 3rrr                      1- 1392     	LGOTO	_00488_DS_
     00AC                           1- 1393     _00483_DS_:
                                    1- 1394     	.line	651, "main.c"; 	NUB0();
     00AC 1Frr                      1- 1395     	BCR	_PORTAbits,6
     00AD 0000                      1- 1396     	nop
     00AE 1Brr                      1- 1397     	BSR	_PORTAbits,6
     00AF 0000                      1- 1398     	nop
     00B0 1Frr                      1- 1399     	BCR	_PORTAbits,6
     00B1                           1- 1400     _00488_DS_:
                                    1- 1401     	.line	652, "main.c"; 	if(G1)
                                    1- 1402     	BANKSEL	_Gdata
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 08rr                      1- 1403     	BTRSS	_Gdata,1
     00B3 3rrr                      1- 1404     	LGOTO	_00492_DS_
                                    1- 1405     	.line	653, "main.c"; 	NUB1();
     00B4 1Frr                      1- 1406     	BCR	_PORTAbits,6
     00B5 0000                      1- 1407     	nop
     00B6 1Brr                      1- 1408     	BSR	_PORTAbits,6
     00B7 3rrr                      1- 1409     	LGOTO	_00497_DS_
     00B8                           1- 1410     _00492_DS_:
                                    1- 1411     	.line	655, "main.c"; 	NUB0();
     00B8 1Frr                      1- 1412     	BCR	_PORTAbits,6
     00B9 0000                      1- 1413     	nop
     00BA 1Brr                      1- 1414     	BSR	_PORTAbits,6
     00BB 0000                      1- 1415     	nop
     00BC 1Frr                      1- 1416     	BCR	_PORTAbits,6
     00BD                           1- 1417     _00497_DS_:
                                    1- 1418     	.line	656, "main.c"; 	if(G0)
                                    1- 1419     	BANKSEL	_Gdata
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 08rr                      1- 1420     	BTRSS	_Gdata,0
     00BF 3rrr                      1- 1421     	LGOTO	_00501_DS_
                                    1- 1422     	.line	657, "main.c"; 	NUB1();
     00C0 1Frr                      1- 1423     	BCR	_PORTAbits,6
     00C1 0000                      1- 1424     	nop
     00C2 1Brr                      1- 1425     	BSR	_PORTAbits,6
     00C3 3rrr                      1- 1426     	LGOTO	_00506_DS_
     00C4                           1- 1427     _00501_DS_:
                                    1- 1428     	.line	659, "main.c"; 	NUB0();
     00C4 1Frr                      1- 1429     	BCR	_PORTAbits,6
     00C5 0000                      1- 1430     	nop
     00C6 1Brr                      1- 1431     	BSR	_PORTAbits,6
     00C7 0000                      1- 1432     	nop
     00C8 1Frr                      1- 1433     	BCR	_PORTAbits,6
     00C9                           1- 1434     _00506_DS_:
                                    1- 1435     	.line	661, "main.c"; 	if(B7)
                                    1- 1436     	BANKSEL	_Bdata
     00C9 rrrr                      3-   71 m1      .banksel ram_address
     00CA 0Brr                      1- 1437     	BTRSS	_Bdata,7
     00CB 3rrr                      1- 1438     	LGOTO	_00510_DS_
                                    1- 1439     	.line	662, "main.c"; 	NUB1();
     00CC 1Frr                      1- 1440     	BCR	_PORTAbits,6
     00CD 0000                      1- 1441     	nop
     00CE 1Brr                      1- 1442     	BSR	_PORTAbits,6
     00CF 3rrr                      1- 1443     	LGOTO	_00515_DS_
     00D0                           1- 1444     _00510_DS_:
                                    1- 1445     	.line	664, "main.c"; 	NUB0();
     00D0 1Frr                      1- 1446     	BCR	_PORTAbits,6
     00D1 0000                      1- 1447     	nop
     00D2 1Brr                      1- 1448     	BSR	_PORTAbits,6
     00D3 0000                      1- 1449     	nop
     00D4 1Frr                      1- 1450     	BCR	_PORTAbits,6
     00D5                           1- 1451     _00515_DS_:
                                    1- 1452     	.line	665, "main.c"; 	if(B6)
                                    1- 1453     	BANKSEL	_Bdata
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 0Brr                      1- 1454     	BTRSS	_Bdata,6
     00D7 3rrr                      1- 1455     	LGOTO	_00519_DS_
                                    1- 1456     	.line	666, "main.c"; 	NUB1();
     00D8 1Frr                      1- 1457     	BCR	_PORTAbits,6
     00D9 0000                      1- 1458     	nop
     00DA 1Brr                      1- 1459     	BSR	_PORTAbits,6
     00DB 3rrr                      1- 1460     	LGOTO	_00524_DS_
     00DC                           1- 1461     _00519_DS_:
                                    1- 1462     	.line	668, "main.c"; 	NUB0();
     00DC 1Frr                      1- 1463     	BCR	_PORTAbits,6
     00DD 0000                      1- 1464     	nop
     00DE 1Brr                      1- 1465     	BSR	_PORTAbits,6
     00DF 0000                      1- 1466     	nop
     00E0 1Frr                      1- 1467     	BCR	_PORTAbits,6
     00E1                           1- 1468     _00524_DS_:
                                    1- 1469     	.line	669, "main.c"; 	if(B5)
                                    1- 1470     	BANKSEL	_Bdata
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 0Arr                      1- 1471     	BTRSS	_Bdata,5
     00E3 3rrr                      1- 1472     	LGOTO	_00528_DS_
                                    1- 1473     	.line	670, "main.c"; 	NUB1();
     00E4 1Frr                      1- 1474     	BCR	_PORTAbits,6
     00E5 0000                      1- 1475     	nop
     00E6 1Brr                      1- 1476     	BSR	_PORTAbits,6
     00E7 3rrr                      1- 1477     	LGOTO	_00533_DS_
     00E8                           1- 1478     _00528_DS_:
                                    1- 1479     	.line	672, "main.c"; 	NUB0();
     00E8 1Frr                      1- 1480     	BCR	_PORTAbits,6
     00E9 0000                      1- 1481     	nop
     00EA 1Brr                      1- 1482     	BSR	_PORTAbits,6
     00EB 0000                      1- 1483     	nop
     00EC 1Frr                      1- 1484     	BCR	_PORTAbits,6
     00ED                           1- 1485     _00533_DS_:
                                    1- 1486     	.line	673, "main.c"; 	if(B4)
                                    1- 1487     	BANKSEL	_Bdata
     00ED rrrr                      3-   71 m1      .banksel ram_address
     00EE 0Arr                      1- 1488     	BTRSS	_Bdata,4
     00EF 3rrr                      1- 1489     	LGOTO	_00537_DS_
                                    1- 1490     	.line	674, "main.c"; 	NUB1();
     00F0 1Frr                      1- 1491     	BCR	_PORTAbits,6
     00F1 0000                      1- 1492     	nop
     00F2 1Brr                      1- 1493     	BSR	_PORTAbits,6
     00F3 3rrr                      1- 1494     	LGOTO	_00542_DS_
     00F4                           1- 1495     _00537_DS_:
                                    1- 1496     	.line	676, "main.c"; 	NUB0();
     00F4 1Frr                      1- 1497     	BCR	_PORTAbits,6
     00F5 0000                      1- 1498     	nop
     00F6 1Brr                      1- 1499     	BSR	_PORTAbits,6
     00F7 0000                      1- 1500     	nop
     00F8 1Frr                      1- 1501     	BCR	_PORTAbits,6
     00F9                           1- 1502     _00542_DS_:
                                    1- 1503     	.line	677, "main.c"; 	if(B3)
                                    1- 1504     	BANKSEL	_Bdata
     00F9 rrrr                      3-   71 m1      .banksel ram_address
     00FA 09rr                      1- 1505     	BTRSS	_Bdata,3
     00FB 3rrr                      1- 1506     	LGOTO	_00546_DS_
                                    1- 1507     	.line	678, "main.c"; 	NUB1();
     00FC 1Frr                      1- 1508     	BCR	_PORTAbits,6
     00FD 0000                      1- 1509     	nop
     00FE 1Brr                      1- 1510     	BSR	_PORTAbits,6
     00FF 3rrr                      1- 1511     	LGOTO	_00551_DS_
     0100                           1- 1512     _00546_DS_:
                                    1- 1513     	.line	680, "main.c"; 	NUB0();
     0100 1Frr                      1- 1514     	BCR	_PORTAbits,6
     0101 0000                      1- 1515     	nop
     0102 1Brr                      1- 1516     	BSR	_PORTAbits,6
     0103 0000                      1- 1517     	nop
     0104 1Frr                      1- 1518     	BCR	_PORTAbits,6
     0105                           1- 1519     _00551_DS_:
                                    1- 1520     	.line	681, "main.c"; 	if(B2)
                                    1- 1521     	BANKSEL	_Bdata
     0105 rrrr                      3-   71 m1      .banksel ram_address
     0106 09rr                      1- 1522     	BTRSS	_Bdata,2
     0107 3rrr                      1- 1523     	LGOTO	_00555_DS_
                                    1- 1524     	.line	682, "main.c"; 	NUB1();
     0108 1Frr                      1- 1525     	BCR	_PORTAbits,6
     0109 0000                      1- 1526     	nop
     010A 1Brr                      1- 1527     	BSR	_PORTAbits,6
     010B 3rrr                      1- 1528     	LGOTO	_00560_DS_
     010C                           1- 1529     _00555_DS_:
                                    1- 1530     	.line	684, "main.c"; 	NUB0();
     010C 1Frr                      1- 1531     	BCR	_PORTAbits,6
     010D 0000                      1- 1532     	nop
     010E 1Brr                      1- 1533     	BSR	_PORTAbits,6
     010F 0000                      1- 1534     	nop
     0110 1Frr                      1- 1535     	BCR	_PORTAbits,6
     0111                           1- 1536     _00560_DS_:
                                    1- 1537     	.line	685, "main.c"; 	if(B1)
                                    1- 1538     	BANKSEL	_Bdata
     0111 rrrr                      3-   71 m1      .banksel ram_address
     0112 08rr                      1- 1539     	BTRSS	_Bdata,1
     0113 3rrr                      1- 1540     	LGOTO	_00564_DS_
                                    1- 1541     	.line	686, "main.c"; 	NUB1();
     0114 1Frr                      1- 1542     	BCR	_PORTAbits,6
     0115 0000                      1- 1543     	nop
     0116 1Brr                      1- 1544     	BSR	_PORTAbits,6
     0117 3rrr                      1- 1545     	LGOTO	_00569_DS_
     0118                           1- 1546     _00564_DS_:
                                    1- 1547     	.line	688, "main.c"; 	NUB0();
     0118 1Frr                      1- 1548     	BCR	_PORTAbits,6
     0119 0000                      1- 1549     	nop
     011A 1Brr                      1- 1550     	BSR	_PORTAbits,6
     011B 0000                      1- 1551     	nop
     011C 1Frr                      1- 1552     	BCR	_PORTAbits,6
     011D                           1- 1553     _00569_DS_:
                                    1- 1554     	.line	689, "main.c"; 	if(B0)
                                    1- 1555     	BANKSEL	_Bdata
     011D rrrr                      3-   71 m1      .banksel ram_address
     011E 08rr                      1- 1556     	BTRSS	_Bdata,0
     011F 3rrr                      1- 1557     	LGOTO	_00573_DS_
                                    1- 1558     	.line	690, "main.c"; 	NUB1();
     0120 1Frr                      1- 1559     	BCR	_PORTAbits,6
     0121 0000                      1- 1560     	nop
     0122 1Brr                      1- 1561     	BSR	_PORTAbits,6
     0123 3rrr                      1- 1562     	LGOTO	_00578_DS_
     0124                           1- 1563     _00573_DS_:
                                    1- 1564     	.line	692, "main.c"; 	NUB0();
     0124 1Frr                      1- 1565     	BCR	_PORTAbits,6
     0125 0000                      1- 1566     	nop
     0126 1Brr                      1- 1567     	BSR	_PORTAbits,6
     0127 0000                      1- 1568     	nop
     0128 1Frr                      1- 1569     	BCR	_PORTAbits,6
     0129                           1- 1570     _00578_DS_:
                                    1- 1571     	.line	694, "main.c"; 	PORTAbits.PA6 = 0;
     0129 1Frr                      1- 1572     	BCR	_PORTAbits,6
                                    1- 1573     	.line	695, "main.c"; 	ENI();	
     012A 0004                      1- 1574     	ENI
                                    1- 1575     	.line	696, "main.c"; 	}
                                    1- 1576     	RETURN	
     012B 0010                      3-   26 m1      ret
                                    1- 1577     ; exit point of _sendRGB2
                                    1- 1579     ;***
                                    1- 1580     ;  pBlock Stats: dbName = C
                                    1- 1581     ;***
                                    1- 1582     ;has an exit
                                    1- 1583     ;6 compiler assigned registers:
                                    1- 1584     ;   r0x1012
                                    1- 1585     ;   STK00
                                    1- 1586     ;   r0x1013
                                    1- 1587     ;   r0x1014
                                    1- 1588     ;   r0x1015
                                    1- 1589     ;   r0x1016
                                    1- 1590     ;; Starting pCode block
                                    1- 1591     .segment "code"; module=main, function=_delay
                                    1- 1593     ;local variable name mapping:
     0000                           1- 1598     _delay:
                                    1- 1599     ; 2 exit points
                                    1- 1600     	.line	579, "main.c"; 	void delay(int count)
                                    1- 1601     	BANKSEL	r0x1012
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1602     	MOVAR	r0x1012
     0002 01rr                      1- 1603     	MOVR	STK00,W
                                    1- 1604     	BANKSEL	r0x1013
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1605     	MOVAR	r0x1013
                                    1- 1606     	.line	582, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1- 1607     	MOVIA	0x01
                                    1- 1608     	BANKSEL	r0x1014
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1609     	MOVAR	r0x1014
                                    1- 1610     	BANKSEL	r0x1015
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 1611     	CLRR	r0x1015
     000A                           1- 1612     _00347_DS_:
                                    1- 1613     	BANKSEL	r0x1012
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1614     	MOVR	r0x1012,W
     000C 2580                      1- 1615     	ADDIA	0x80
                                    1- 1616     	BANKSEL	r0x1016
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1617     	MOVAR	r0x1016
                                    1- 1618     	BANKSEL	r0x1015
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1619     	MOVR	r0x1015,W
     0011 2580                      1- 1620     	ADDIA	0x80
                                    1- 1621     	BANKSEL	r0x1016
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1622     	SUBAR	r0x1016,W
     0014 0903                      1- 1623     	BTRSS	STATUS,2
     0015 3rrr                      1- 1624     	LGOTO	_00358_DS_
                                    1- 1625     	BANKSEL	r0x1014
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1626     	MOVR	r0x1014,W
                                    1- 1627     	BANKSEL	r0x1013
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1- 1628     	SUBAR	r0x1013,W
     001A                           1- 1629     _00358_DS_:
     001A 0803                      1- 1630     	BTRSS	STATUS,0
     001B 3rrr                      1- 1631     	LGOTO	_00349_DS_
                                    1- 1632     	BANKSEL	r0x1014
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 05rr                      1- 1633     	INCR	r0x1014,F
     001E 0903                      1- 1634     	BTRSS	STATUS,2
     001F 3rrr                      1- 1635     	LGOTO	_00001_DS_
                                    1- 1636     	BANKSEL	r0x1015
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 05rr                      1- 1637     	INCR	r0x1015,F
     0022                           1- 1638     _00001_DS_:
     0022 3rrr                      1- 1639     	LGOTO	_00347_DS_
     0023                           1- 1640     _00349_DS_:
                                    1- 1641     	.line	584, "main.c"; 	}
                                    1- 1642     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1- 1643     ; exit point of _delay
                                    1- 1645     ;***
                                    1- 1646     ;  pBlock Stats: dbName = C
                                    1- 1647     ;***
                                    1- 1648     ;has an exit
                                    1- 1649     ;functions called:
                                    1- 1650     ;   _sendRGB2
                                    1- 1651     ;   _sendRGB
                                    1- 1652     ;   _sendRGB2
                                    1- 1653     ;   _sendRGB
                                    1- 1654     ;9 compiler assigned registers:
                                    1- 1655     ;   r0x1017
                                    1- 1656     ;   STK00
                                    1- 1657     ;   r0x1018
                                    1- 1658     ;   STK01
                                    1- 1659     ;   r0x1019
                                    1- 1660     ;   STK02
                                    1- 1661     ;   r0x101A
                                    1- 1662     ;   STK03
                                    1- 1663     ;   r0x101B
                                    1- 1664     ;; Starting pCode block
                                    1- 1665     .segment "code"; module=main, function=_sendRGB3
                                    1- 1667     ;local variable name mapping:
     0000                           1- 1673     _sendRGB3:
                                    1- 1674     ; 2 exit points
                                    1- 1675     	.line	565, "main.c"; 	void sendRGB3(unsigned index,unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 1676     	BANKSEL	r0x1017
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1677     	MOVAR	r0x1017
     0002 01rr                      1- 1678     	MOVR	STK00,W
                                    1- 1679     	BANKSEL	r0x1018
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1680     	MOVAR	r0x1018
     0005 01rr                      1- 1681     	MOVR	STK01,W
                                    1- 1682     	BANKSEL	r0x1019
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1683     	MOVAR	r0x1019
     0008 01rr                      1- 1684     	MOVR	STK02,W
                                    1- 1685     	BANKSEL	r0x101A
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1686     	MOVAR	r0x101A
     000B 01rr                      1- 1687     	MOVR	STK03,W
                                    1- 1688     	BANKSEL	r0x101B
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1689     	MOVAR	r0x101B
                                    1- 1690     	.line	567, "main.c"; 	if(index == 0 || index == 13)
                                    1- 1691     	BANKSEL	r0x1018
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1692     	MOVR	r0x1018,W
                                    1- 1693     	BANKSEL	r0x1017
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 11rr                      1- 1694     	IORAR	r0x1017,W
     0012 0D03                      1- 1695     	BTRSC	STATUS,2
     0013 3rrr                      1- 1696     	LGOTO	_00336_DS_
                                    1- 1697     	BANKSEL	r0x1018
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 1698     	MOVR	r0x1018,W
     0016 240D                      1- 1699     	XORIA	0x0d
     0017 0903                      1- 1700     	BTRSS	STATUS,2
     0018 3rrr                      1- 1701     	LGOTO	_00337_DS_
                                    1- 1702     	BANKSEL	r0x1017
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1703     	MOVR	r0x1017,W
     001B 2400                      1- 1704     	XORIA	0x00
     001C 0903                      1- 1705     	BTRSS	STATUS,2
     001D 3rrr                      1- 1706     	LGOTO	_00337_DS_
     001E                           1- 1707     _00336_DS_:
                                    1- 1708     	.line	569, "main.c"; 	sendRGB2(colorR,colorG,colorB);
                                    1- 1709     	BANKSEL	r0x101B
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1710     	MOVR	r0x101B,W
     0020 00rr                      1- 1711     	MOVAR	STK01
                                    1- 1712     	BANKSEL	r0x101A
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1713     	MOVR	r0x101A,W
     0023 00rr                      1- 1714     	MOVAR	STK00
                                    1- 1715     	BANKSEL	r0x1019
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1716     	MOVR	r0x1019,W
     0026 2rrr                      1- 1717     	LCALL	_sendRGB2
     0027 3rrr                      1- 1718     	LGOTO	_00340_DS_
     0028                           1- 1719     _00337_DS_:
                                    1- 1720     	.line	573, "main.c"; 	sendRGB(colorR,colorG,colorB);
                                    1- 1721     	BANKSEL	r0x101B
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1- 1722     	MOVR	r0x101B,W
     002A 00rr                      1- 1723     	MOVAR	STK01
                                    1- 1724     	BANKSEL	r0x101A
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 1725     	MOVR	r0x101A,W
     002D 00rr                      1- 1726     	MOVAR	STK00
                                    1- 1727     	BANKSEL	r0x1019
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1- 1728     	MOVR	r0x1019,W
     0030 2rrr                      1- 1729     	LCALL	_sendRGB
     0031                           1- 1730     _00340_DS_:
                                    1- 1731     	.line	576, "main.c"; 	}
                                    1- 1732     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1733     ; exit point of _sendRGB3
                                    1- 1735     ;***
                                    1- 1736     ;  pBlock Stats: dbName = C
                                    1- 1737     ;***
                                    1- 1738     ;has an exit
                                    1- 1739     ;functions called:
                                    1- 1740     ;   _sendRGB3
                                    1- 1741     ;   _sendRGB3
                                    1- 1742     ;   _sendRGB3
                                    1- 1743     ;   _sendRGB3
                                    1- 1744     ;   _sendRGB3
                                    1- 1745     ;   _sendRGB3
                                    1- 1746     ;   _sendRGB3
                                    1- 1747     ;   _sendRGB3
                                    1- 1748     ;   _sendRGB3
                                    1- 1749     ;   _sendRGB3
                                    1- 1750     ;   _sendRGB3
                                    1- 1751     ;   _sendRGB3
                                    1- 1752     ;9 compiler assigned registers:
                                    1- 1753     ;   r0x101C
                                    1- 1754     ;   r0x101D
                                    1- 1755     ;   r0x101E
                                    1- 1756     ;   r0x101F
                                    1- 1757     ;   r0x1020
                                    1- 1758     ;   STK03
                                    1- 1759     ;   STK02
                                    1- 1760     ;   STK01
                                    1- 1761     ;   STK00
                                    1- 1762     ;; Starting pCode block
                                    1- 1763     .segment "code"; module=main, function=_closeCtr2
                                    1- 1765     ;local variable name mapping:
     0000                           1- 1770     _closeCtr2:
                                    1- 1771     ; 2 exit points
                                    1- 1772     	.line	522, "main.c"; 	void closeCtr2(char redIndex)
                                    1- 1773     	BANKSEL	r0x101C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1774     	MOVAR	r0x101C
                                    1- 1775     	.line	525, "main.c"; 	char min = 7-redIndex;	
     0002 2707                      1- 1776     	SUBIA	0x07
                                    1- 1777     	BANKSEL	r0x101D
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1778     	MOVAR	r0x101D
                                    1- 1779     	.line	526, "main.c"; 	char max = 7+redIndex;	
     0005 2107                      1- 1780     	MOVIA	0x07
                                    1- 1781     	BANKSEL	r0x101C
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 03rr                      1- 1782     	ADDAR	r0x101C,F
                                    1- 1783     	.line	527, "main.c"; 	do
     0008 210E                      1- 1784     	MOVIA	0x0e
                                    1- 1785     	BANKSEL	r0x101E
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1786     	MOVAR	r0x101E
     000B                           1- 1787     _00330_DS_:
                                    1- 1788     	.line	530, "main.c"; 	if(i == min)
                                    1- 1789     	BANKSEL	r0x101D
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1790     	MOVR	r0x101D,W
                                    1- 1791     	BANKSEL	r0x101E
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 12rr                      1- 1792     	XORAR	r0x101E,W
     000F 0903                      1- 1793     	BTRSS	STATUS,2
     0010 3rrr                      1- 1794     	LGOTO	_00328_DS_
                                    1- 1795     	.line	532, "main.c"; 	if(redTime == 0)
                                    1- 1796     	BANKSEL	_redTime
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 1797     	MOVR	_redTime,W
     0013 0903                      1- 1798     	BTRSS	STATUS,2
     0014 3rrr                      1- 1799     	LGOTO	_00313_DS_
                                    1- 1800     	.line	534, "main.c"; 	sendRGB3(i,0x4C,0xB2,0xB2);
                                    1- 1801     	BANKSEL	r0x101E
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 1802     	MOVR	r0x101E,W
                                    1- 1803     	BANKSEL	r0x1020
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 02rr                      1- 1804     	CLRR	r0x1020
     0019 21B2                      1- 1805     	MOVIA	0xb2
     001A 00rr                      1- 1806     	MOVAR	STK03
     001B 00rr                      1- 1807     	MOVAR	STK02
     001C 214C                      1- 1808     	MOVIA	0x4c
     001D 00rr                      1- 1809     	MOVAR	STK01
                                    1- 1810     ;;122	MOVR	r0x101F,W
                                    1- 1811     	BANKSEL	r0x101E
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1812     	MOVR	r0x101E,W
                                    1- 1813     	BANKSEL	r0x101F
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1814     	MOVAR	r0x101F
     0022 00rr                      1- 1815     	MOVAR	STK00
     0023 2100                      1- 1816     	MOVIA	0x00
     0024 2rrr                      1- 1817     	LCALL	_sendRGB3
     0025 3rrr                      1- 1818     	LGOTO	_00331_DS_
     0026                           1- 1819     _00313_DS_:
                                    1- 1820     	.line	536, "main.c"; 	else if(redTime == 1)
                                    1- 1821     	BANKSEL	_redTime
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1822     	MOVR	_redTime,W
     0028 2401                      1- 1823     	XORIA	0x01
     0029 0903                      1- 1824     	BTRSS	STATUS,2
     002A 3rrr                      1- 1825     	LGOTO	_00331_DS_
                                    1- 1826     	.line	538, "main.c"; 	sendRGB3(i,0x4C,0x4C,0xB2);
                                    1- 1827     	BANKSEL	r0x101E
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 1828     	MOVR	r0x101E,W
                                    1- 1829     	BANKSEL	r0x1020
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 02rr                      1- 1830     	CLRR	r0x1020
     002F 21B2                      1- 1831     	MOVIA	0xb2
     0030 00rr                      1- 1832     	MOVAR	STK03
     0031 214C                      1- 1833     	MOVIA	0x4c
     0032 00rr                      1- 1834     	MOVAR	STK02
     0033 00rr                      1- 1835     	MOVAR	STK01
                                    1- 1836     ;;118	MOVR	r0x101F,W
                                    1- 1837     	BANKSEL	r0x101E
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 1838     	MOVR	r0x101E,W
                                    1- 1839     	BANKSEL	r0x101F
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 1840     	MOVAR	r0x101F
     0038 00rr                      1- 1841     	MOVAR	STK00
     0039 2100                      1- 1842     	MOVIA	0x00
     003A 2rrr                      1- 1843     	LCALL	_sendRGB3
     003B 3rrr                      1- 1844     	LGOTO	_00331_DS_
     003C                           1- 1845     _00328_DS_:
                                    1- 1846     	.line	541, "main.c"; 	else if(i == max)
                                    1- 1847     	BANKSEL	r0x101C
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 1848     	MOVR	r0x101C,W
                                    1- 1849     	BANKSEL	r0x101E
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 12rr                      1- 1850     	XORAR	r0x101E,W
     0040 0903                      1- 1851     	BTRSS	STATUS,2
     0041 3rrr                      1- 1852     	LGOTO	_00325_DS_
                                    1- 1853     	.line	543, "main.c"; 	if(redTime == 0)
                                    1- 1854     	BANKSEL	_redTime
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1- 1855     	MOVR	_redTime,W
     0044 0903                      1- 1856     	BTRSS	STATUS,2
     0045 3rrr                      1- 1857     	LGOTO	_00318_DS_
                                    1- 1858     	.line	545, "main.c"; 	sendRGB3(i,0xB2,0xB2,0x4C);
                                    1- 1859     	BANKSEL	r0x101E
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1- 1860     	MOVR	r0x101E,W
                                    1- 1861     	BANKSEL	r0x1020
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 02rr                      1- 1862     	CLRR	r0x1020
     004A 214C                      1- 1863     	MOVIA	0x4c
     004B 00rr                      1- 1864     	MOVAR	STK03
     004C 21B2                      1- 1865     	MOVIA	0xb2
     004D 00rr                      1- 1866     	MOVAR	STK02
     004E 00rr                      1- 1867     	MOVAR	STK01
                                    1- 1868     ;;114	MOVR	r0x101F,W
                                    1- 1869     	BANKSEL	r0x101E
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 1870     	MOVR	r0x101E,W
                                    1- 1871     	BANKSEL	r0x101F
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 1872     	MOVAR	r0x101F
     0053 00rr                      1- 1873     	MOVAR	STK00
     0054 2100                      1- 1874     	MOVIA	0x00
     0055 2rrr                      1- 1875     	LCALL	_sendRGB3
     0056 3rrr                      1- 1876     	LGOTO	_00331_DS_
     0057                           1- 1877     _00318_DS_:
                                    1- 1878     	.line	547, "main.c"; 	else if(redTime == 1)
                                    1- 1879     	BANKSEL	_redTime
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 01rr                      1- 1880     	MOVR	_redTime,W
     0059 2401                      1- 1881     	XORIA	0x01
     005A 0903                      1- 1882     	BTRSS	STATUS,2
     005B 3rrr                      1- 1883     	LGOTO	_00331_DS_
                                    1- 1884     	.line	549, "main.c"; 	sendRGB3(i,0xB2,0x4C,0x4C);
                                    1- 1885     	BANKSEL	r0x101E
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 1886     	MOVR	r0x101E,W
                                    1- 1887     	BANKSEL	r0x1020
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 02rr                      1- 1888     	CLRR	r0x1020
     0060 214C                      1- 1889     	MOVIA	0x4c
     0061 00rr                      1- 1890     	MOVAR	STK03
     0062 00rr                      1- 1891     	MOVAR	STK02
     0063 21B2                      1- 1892     	MOVIA	0xb2
     0064 00rr                      1- 1893     	MOVAR	STK01
                                    1- 1894     ;;110	MOVR	r0x101F,W
                                    1- 1895     	BANKSEL	r0x101E
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 01rr                      1- 1896     	MOVR	r0x101E,W
                                    1- 1897     	BANKSEL	r0x101F
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1- 1898     	MOVAR	r0x101F
     0069 00rr                      1- 1899     	MOVAR	STK00
     006A 2100                      1- 1900     	MOVIA	0x00
     006B 2rrr                      1- 1901     	LCALL	_sendRGB3
     006C 3rrr                      1- 1902     	LGOTO	_00331_DS_
     006D                           1- 1903     _00325_DS_:
                                    1- 1904     	.line	552, "main.c"; 	else if(i< max && i > min)
                                    1- 1905     	BANKSEL	r0x101C
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1- 1906     	MOVR	r0x101C,W
                                    1- 1907     	BANKSEL	r0x101E
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 04rr                      1- 1908     	SUBAR	r0x101E,W
     0071 0C03                      1- 1909     	BTRSC	STATUS,0
     0072 3rrr                      1- 1910     	LGOTO	_00321_DS_
     0073 01rr                      1- 1911     	MOVR	r0x101E,W
                                    1- 1912     	BANKSEL	r0x101D
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 04rr                      1- 1913     	SUBAR	r0x101D,W
     0076 0C03                      1- 1914     	BTRSC	STATUS,0
     0077 3rrr                      1- 1915     	LGOTO	_00321_DS_
                                    1- 1916     	.line	554, "main.c"; 	sendRGB3(i,RED2);
                                    1- 1917     	BANKSEL	r0x101E
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 01rr                      1- 1918     	MOVR	r0x101E,W
                                    1- 1919     	BANKSEL	r0x1020
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1- 1920     	CLRR	r0x1020
     007C 21B2                      1- 1921     	MOVIA	0xb2
     007D 00rr                      1- 1922     	MOVAR	STK03
     007E 00rr                      1- 1923     	MOVAR	STK02
     007F 00rr                      1- 1924     	MOVAR	STK01
                                    1- 1925     ;;106	MOVR	r0x101F,W
                                    1- 1926     	BANKSEL	r0x101E
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1- 1927     	MOVR	r0x101E,W
                                    1- 1928     	BANKSEL	r0x101F
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 00rr                      1- 1929     	MOVAR	r0x101F
     0084 00rr                      1- 1930     	MOVAR	STK00
     0085 2100                      1- 1931     	MOVIA	0x00
     0086 2rrr                      1- 1932     	LCALL	_sendRGB3
     0087 3rrr                      1- 1933     	LGOTO	_00331_DS_
     0088                           1- 1934     _00321_DS_:
                                    1- 1935     	.line	558, "main.c"; 	sendRGB3(i,RED3);
                                    1- 1936     	BANKSEL	r0x101E
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 01rr                      1- 1937     	MOVR	r0x101E,W
                                    1- 1938     	BANKSEL	r0x1020
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 02rr                      1- 1939     	CLRR	r0x1020
     008C 214C                      1- 1940     	MOVIA	0x4c
     008D 00rr                      1- 1941     	MOVAR	STK03
     008E 00rr                      1- 1942     	MOVAR	STK02
     008F 00rr                      1- 1943     	MOVAR	STK01
                                    1- 1944     ;;102	MOVR	r0x101F,W
                                    1- 1945     	BANKSEL	r0x101E
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 01rr                      1- 1946     	MOVR	r0x101E,W
                                    1- 1947     	BANKSEL	r0x101F
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 00rr                      1- 1948     	MOVAR	r0x101F
     0094 00rr                      1- 1949     	MOVAR	STK00
     0095 2100                      1- 1950     	MOVIA	0x00
     0096 2rrr                      1- 1951     	LCALL	_sendRGB3
     0097                           1- 1952     _00331_DS_:
                                    1- 1953     	.line	562, "main.c"; 	while(--i > 0);
                                    1- 1954     	BANKSEL	r0x101E
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 17rr                      1- 1955     	DECRSZ	r0x101E,F
     0099 3rrr                      1- 1956     	LGOTO	_00330_DS_
                                    1- 1957     	.line	563, "main.c"; 	}
                                    1- 1958     	RETURN	
     009A 0010                      3-   26 m1      ret
                                    1- 1959     ; exit point of _closeCtr2
                                    1- 1961     ;***
                                    1- 1962     ;  pBlock Stats: dbName = C
                                    1- 1963     ;***
                                    1- 1964     ;has an exit
                                    1- 1965     ;functions called:
                                    1- 1966     ;   _sendRGB3
                                    1- 1967     ;   _sendRGB3
                                    1- 1968     ;   _sendRGB3
                                    1- 1969     ;   _sendRGB3
                                    1- 1970     ;   _sendRGB3
                                    1- 1971     ;   _sendRGB3
                                    1- 1972     ;   _sendRGB3
                                    1- 1973     ;   _sendRGB3
                                    1- 1974     ;   _sendRGB3
                                    1- 1975     ;   _sendRGB3
                                    1- 1976     ;   _sendRGB3
                                    1- 1977     ;   _sendRGB3
                                    1- 1978     ;9 compiler assigned registers:
                                    1- 1979     ;   r0x1021
                                    1- 1980     ;   r0x1022
                                    1- 1981     ;   r0x1023
                                    1- 1982     ;   r0x1024
                                    1- 1983     ;   r0x1025
                                    1- 1984     ;   STK03
                                    1- 1985     ;   STK02
                                    1- 1986     ;   STK01
                                    1- 1987     ;   STK00
                                    1- 1988     ;; Starting pCode block
                                    1- 1989     .segment "code"; module=main, function=_closeCtr
                                    1- 1991     ;local variable name mapping:
     0000                           1- 1996     _closeCtr:
                                    1- 1997     ; 2 exit points
                                    1- 1998     	.line	479, "main.c"; 	void closeCtr(char redIndex)
                                    1- 1999     	BANKSEL	r0x1021
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2000     	MOVAR	r0x1021
                                    1- 2001     	.line	482, "main.c"; 	char min = 7-redIndex;	
     0002 2707                      1- 2002     	SUBIA	0x07
                                    1- 2003     	BANKSEL	r0x1022
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 2004     	MOVAR	r0x1022
                                    1- 2005     	.line	483, "main.c"; 	char max = 7+redIndex;	
     0005 2107                      1- 2006     	MOVIA	0x07
                                    1- 2007     	BANKSEL	r0x1021
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 03rr                      1- 2008     	ADDAR	r0x1021,F
                                    1- 2009     	.line	484, "main.c"; 	do
     0008 210E                      1- 2010     	MOVIA	0x0e
                                    1- 2011     	BANKSEL	r0x1023
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 2012     	MOVAR	r0x1023
     000B                           1- 2013     _00304_DS_:
                                    1- 2014     	.line	487, "main.c"; 	if(i == min && i > 1)
                                    1- 2015     	BANKSEL	r0x1022
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 2016     	MOVR	r0x1022,W
                                    1- 2017     	BANKSEL	r0x1023
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 12rr                      1- 2018     	XORAR	r0x1023,W
     000F 0903                      1- 2019     	BTRSS	STATUS,2
     0010 3rrr                      1- 2020     	LGOTO	_00301_DS_
                                    1- 2021     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 2022     ;;unsigned compare: left >= lit (0x2=2), size=1
     0011 2102                      1- 2023     	MOVIA	0x02
     0012 04rr                      1- 2024     	SUBAR	r0x1023,W
     0013 0803                      1- 2025     	BTRSS	STATUS,0
     0014 3rrr                      1- 2026     	LGOTO	_00301_DS_
                                    1- 2027     	.line	489, "main.c"; 	if(redTime == 0)
                                    1- 2028     	BANKSEL	_redTime
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2029     	MOVR	_redTime,W
     0017 0903                      1- 2030     	BTRSS	STATUS,2
     0018 3rrr                      1- 2031     	LGOTO	_00285_DS_
                                    1- 2032     	.line	491, "main.c"; 	sendRGB3(i,0x00,0x4C,0x4C);
                                    1- 2033     	BANKSEL	r0x1023
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 2034     	MOVR	r0x1023,W
                                    1- 2035     	BANKSEL	r0x1025
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1- 2036     	CLRR	r0x1025
     001D 214C                      1- 2037     	MOVIA	0x4c
     001E 00rr                      1- 2038     	MOVAR	STK03
     001F 00rr                      1- 2039     	MOVAR	STK02
     0020 2100                      1- 2040     	MOVIA	0x00
     0021 00rr                      1- 2041     	MOVAR	STK01
                                    1- 2042     ;;121	MOVR	r0x1024,W
                                    1- 2043     	BANKSEL	r0x1023
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 2044     	MOVR	r0x1023,W
                                    1- 2045     	BANKSEL	r0x1024
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 2046     	MOVAR	r0x1024
     0026 00rr                      1- 2047     	MOVAR	STK00
     0027 2100                      1- 2048     	MOVIA	0x00
     0028 2rrr                      1- 2049     	LCALL	_sendRGB3
     0029 3rrr                      1- 2050     	LGOTO	_00305_DS_
     002A                           1- 2051     _00285_DS_:
                                    1- 2052     	.line	493, "main.c"; 	else if(redTime == 1)
                                    1- 2053     	BANKSEL	_redTime
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1- 2054     	MOVR	_redTime,W
     002C 2401                      1- 2055     	XORIA	0x01
     002D 0903                      1- 2056     	BTRSS	STATUS,2
     002E 3rrr                      1- 2057     	LGOTO	_00305_DS_
                                    1- 2058     	.line	495, "main.c"; 	sendRGB3(i,0x00,0x00,0x4C);
                                    1- 2059     	BANKSEL	r0x1023
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 2060     	MOVR	r0x1023,W
                                    1- 2061     	BANKSEL	r0x1025
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 02rr                      1- 2062     	CLRR	r0x1025
     0033 214C                      1- 2063     	MOVIA	0x4c
     0034 00rr                      1- 2064     	MOVAR	STK03
     0035 2100                      1- 2065     	MOVIA	0x00
     0036 00rr                      1- 2066     	MOVAR	STK02
     0037 00rr                      1- 2067     	MOVAR	STK01
                                    1- 2068     ;;117	MOVR	r0x1024,W
                                    1- 2069     	BANKSEL	r0x1023
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 01rr                      1- 2070     	MOVR	r0x1023,W
                                    1- 2071     	BANKSEL	r0x1024
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 00rr                      1- 2072     	MOVAR	r0x1024
     003C 00rr                      1- 2073     	MOVAR	STK00
     003D 2100                      1- 2074     	MOVIA	0x00
     003E 2rrr                      1- 2075     	LCALL	_sendRGB3
     003F 3rrr                      1- 2076     	LGOTO	_00305_DS_
     0040                           1- 2077     _00301_DS_:
                                    1- 2078     	.line	498, "main.c"; 	else if(i == max &&  i > 8)
                                    1- 2079     	BANKSEL	r0x1021
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1- 2080     	MOVR	r0x1021,W
                                    1- 2081     	BANKSEL	r0x1023
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 12rr                      1- 2082     	XORAR	r0x1023,W
     0044 0903                      1- 2083     	BTRSS	STATUS,2
     0045 3rrr                      1- 2084     	LGOTO	_00297_DS_
                                    1- 2085     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 2086     ;;unsigned compare: left >= lit (0x9=9), size=1
     0046 2109                      1- 2087     	MOVIA	0x09
     0047 04rr                      1- 2088     	SUBAR	r0x1023,W
     0048 0803                      1- 2089     	BTRSS	STATUS,0
     0049 3rrr                      1- 2090     	LGOTO	_00297_DS_
                                    1- 2091     	.line	500, "main.c"; 	if(redTime == 0)
                                    1- 2092     	BANKSEL	_redTime
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 01rr                      1- 2093     	MOVR	_redTime,W
     004C 0903                      1- 2094     	BTRSS	STATUS,2
     004D 3rrr                      1- 2095     	LGOTO	_00290_DS_
                                    1- 2096     	.line	502, "main.c"; 	sendRGB3(i,0x4C,0x4C,0x00);
                                    1- 2097     	BANKSEL	r0x1023
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1- 2098     	MOVR	r0x1023,W
                                    1- 2099     	BANKSEL	r0x1025
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 02rr                      1- 2100     	CLRR	r0x1025
     0052 2100                      1- 2101     	MOVIA	0x00
     0053 00rr                      1- 2102     	MOVAR	STK03
     0054 214C                      1- 2103     	MOVIA	0x4c
     0055 00rr                      1- 2104     	MOVAR	STK02
     0056 00rr                      1- 2105     	MOVAR	STK01
                                    1- 2106     ;;113	MOVR	r0x1024,W
                                    1- 2107     	BANKSEL	r0x1023
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 01rr                      1- 2108     	MOVR	r0x1023,W
                                    1- 2109     	BANKSEL	r0x1024
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 00rr                      1- 2110     	MOVAR	r0x1024
     005B 00rr                      1- 2111     	MOVAR	STK00
     005C 2100                      1- 2112     	MOVIA	0x00
     005D 2rrr                      1- 2113     	LCALL	_sendRGB3
     005E 3rrr                      1- 2114     	LGOTO	_00305_DS_
     005F                           1- 2115     _00290_DS_:
                                    1- 2116     	.line	504, "main.c"; 	else if(redTime == 1)
                                    1- 2117     	BANKSEL	_redTime
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 01rr                      1- 2118     	MOVR	_redTime,W
     0061 2401                      1- 2119     	XORIA	0x01
     0062 0903                      1- 2120     	BTRSS	STATUS,2
     0063 3rrr                      1- 2121     	LGOTO	_00305_DS_
                                    1- 2122     	.line	506, "main.c"; 	sendRGB3(i,0x4C,0x00,0x00);
                                    1- 2123     	BANKSEL	r0x1023
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 01rr                      1- 2124     	MOVR	r0x1023,W
                                    1- 2125     	BANKSEL	r0x1025
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 02rr                      1- 2126     	CLRR	r0x1025
     0068 2100                      1- 2127     	MOVIA	0x00
     0069 00rr                      1- 2128     	MOVAR	STK03
     006A 00rr                      1- 2129     	MOVAR	STK02
     006B 214C                      1- 2130     	MOVIA	0x4c
     006C 00rr                      1- 2131     	MOVAR	STK01
                                    1- 2132     ;;109	MOVR	r0x1024,W
                                    1- 2133     	BANKSEL	r0x1023
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1- 2134     	MOVR	r0x1023,W
                                    1- 2135     	BANKSEL	r0x1024
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 00rr                      1- 2136     	MOVAR	r0x1024
     0071 00rr                      1- 2137     	MOVAR	STK00
     0072 2100                      1- 2138     	MOVIA	0x00
     0073 2rrr                      1- 2139     	LCALL	_sendRGB3
     0074 3rrr                      1- 2140     	LGOTO	_00305_DS_
     0075                           1- 2141     _00297_DS_:
                                    1- 2142     	.line	509, "main.c"; 	else if(i< max && i > min)
                                    1- 2143     	BANKSEL	r0x1021
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 01rr                      1- 2144     	MOVR	r0x1021,W
                                    1- 2145     	BANKSEL	r0x1023
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 04rr                      1- 2146     	SUBAR	r0x1023,W
     0079 0C03                      1- 2147     	BTRSC	STATUS,0
     007A 3rrr                      1- 2148     	LGOTO	_00293_DS_
     007B 01rr                      1- 2149     	MOVR	r0x1023,W
                                    1- 2150     	BANKSEL	r0x1022
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 04rr                      1- 2151     	SUBAR	r0x1022,W
     007E 0C03                      1- 2152     	BTRSC	STATUS,0
     007F 3rrr                      1- 2153     	LGOTO	_00293_DS_
                                    1- 2154     	.line	511, "main.c"; 	sendRGB3(i,RED3);
                                    1- 2155     	BANKSEL	r0x1023
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1- 2156     	MOVR	r0x1023,W
                                    1- 2157     	BANKSEL	r0x1025
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 02rr                      1- 2158     	CLRR	r0x1025
     0084 214C                      1- 2159     	MOVIA	0x4c
     0085 00rr                      1- 2160     	MOVAR	STK03
     0086 00rr                      1- 2161     	MOVAR	STK02
     0087 00rr                      1- 2162     	MOVAR	STK01
                                    1- 2163     ;;105	MOVR	r0x1024,W
                                    1- 2164     	BANKSEL	r0x1023
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 01rr                      1- 2165     	MOVR	r0x1023,W
                                    1- 2166     	BANKSEL	r0x1024
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 00rr                      1- 2167     	MOVAR	r0x1024
     008C 00rr                      1- 2168     	MOVAR	STK00
     008D 2100                      1- 2169     	MOVIA	0x00
     008E 2rrr                      1- 2170     	LCALL	_sendRGB3
     008F 3rrr                      1- 2171     	LGOTO	_00305_DS_
     0090                           1- 2172     _00293_DS_:
                                    1- 2173     	.line	515, "main.c"; 	sendRGB3(i,BLACK);
                                    1- 2174     	BANKSEL	r0x1023
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 01rr                      1- 2175     	MOVR	r0x1023,W
                                    1- 2176     	BANKSEL	r0x1025
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 02rr                      1- 2177     	CLRR	r0x1025
     0094 2100                      1- 2178     	MOVIA	0x00
     0095 00rr                      1- 2179     	MOVAR	STK03
     0096 00rr                      1- 2180     	MOVAR	STK02
     0097 00rr                      1- 2181     	MOVAR	STK01
                                    1- 2182     ;;101	MOVR	r0x1024,W
                                    1- 2183     	BANKSEL	r0x1023
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 01rr                      1- 2184     	MOVR	r0x1023,W
                                    1- 2185     	BANKSEL	r0x1024
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 00rr                      1- 2186     	MOVAR	r0x1024
     009C 00rr                      1- 2187     	MOVAR	STK00
     009D 2100                      1- 2188     	MOVIA	0x00
     009E 2rrr                      1- 2189     	LCALL	_sendRGB3
     009F                           1- 2190     _00305_DS_:
                                    1- 2191     	.line	519, "main.c"; 	while(--i > 0);
                                    1- 2192     	BANKSEL	r0x1023
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 17rr                      1- 2193     	DECRSZ	r0x1023,F
     00A1 3rrr                      1- 2194     	LGOTO	_00304_DS_
                                    1- 2195     	.line	520, "main.c"; 	}
                                    1- 2196     	RETURN	
     00A2 0010                      3-   26 m1      ret
                                    1- 2197     ; exit point of _closeCtr
                                    1- 2199     ;***
                                    1- 2200     ;  pBlock Stats: dbName = C
                                    1- 2201     ;***
                                    1- 2202     ;has an exit
                                    1- 2203     ;functions called:
                                    1- 2204     ;   _sendRGB3
                                    1- 2205     ;   _sendRGB3
                                    1- 2206     ;   _sendRGB3
                                    1- 2207     ;   _sendRGB3
                                    1- 2208     ;   _sendRGB3
                                    1- 2209     ;   _sendRGB3
                                    1- 2210     ;   _sendRGB3
                                    1- 2211     ;   _sendRGB3
                                    1- 2212     ;   _sendRGB3
                                    1- 2213     ;   _sendRGB3
                                    1- 2214     ;   _sendRGB3
                                    1- 2215     ;   _sendRGB3
                                    1- 2216     ;9 compiler assigned registers:
                                    1- 2217     ;   r0x1026
                                    1- 2218     ;   r0x1027
                                    1- 2219     ;   r0x1028
                                    1- 2220     ;   r0x1029
                                    1- 2221     ;   r0x102A
                                    1- 2222     ;   STK03
                                    1- 2223     ;   STK02
                                    1- 2224     ;   STK01
                                    1- 2225     ;   STK00
                                    1- 2226     ;; Starting pCode block
                                    1- 2227     .segment "code"; module=main, function=_openCtr2
                                    1- 2229     ;local variable name mapping:
     0000                           1- 2234     _openCtr2:
                                    1- 2235     ; 2 exit points
                                    1- 2236     	.line	436, "main.c"; 	void openCtr2(char redIndex)
                                    1- 2237     	BANKSEL	r0x1026
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2238     	MOVAR	r0x1026
                                    1- 2239     	.line	439, "main.c"; 	char min = 7-redIndex;	
     0002 2707                      1- 2240     	SUBIA	0x07
                                    1- 2241     	BANKSEL	r0x1027
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 2242     	MOVAR	r0x1027
                                    1- 2243     	.line	440, "main.c"; 	char max = 7+redIndex;	
     0005 2107                      1- 2244     	MOVIA	0x07
                                    1- 2245     	BANKSEL	r0x1026
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 03rr                      1- 2246     	ADDAR	r0x1026,F
                                    1- 2247     	.line	441, "main.c"; 	do
     0008 210E                      1- 2248     	MOVIA	0x0e
                                    1- 2249     	BANKSEL	r0x1028
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 2250     	MOVAR	r0x1028
     000B                           1- 2251     _00276_DS_:
                                    1- 2252     	.line	444, "main.c"; 	if(i == min)
                                    1- 2253     	BANKSEL	r0x1027
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 2254     	MOVR	r0x1027,W
                                    1- 2255     	BANKSEL	r0x1028
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 12rr                      1- 2256     	XORAR	r0x1028,W
     000F 0903                      1- 2257     	BTRSS	STATUS,2
     0010 3rrr                      1- 2258     	LGOTO	_00274_DS_
                                    1- 2259     	.line	446, "main.c"; 	if(redTime == 0)
                                    1- 2260     	BANKSEL	_redTime
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2261     	MOVR	_redTime,W
     0013 0903                      1- 2262     	BTRSS	STATUS,2
     0014 3rrr                      1- 2263     	LGOTO	_00259_DS_
                                    1- 2264     	.line	448, "main.c"; 	sendRGB3(i,0x4C,0x4C,0xB2);
                                    1- 2265     	BANKSEL	r0x1028
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2266     	MOVR	r0x1028,W
                                    1- 2267     	BANKSEL	r0x102A
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 02rr                      1- 2268     	CLRR	r0x102A
     0019 21B2                      1- 2269     	MOVIA	0xb2
     001A 00rr                      1- 2270     	MOVAR	STK03
     001B 214C                      1- 2271     	MOVIA	0x4c
     001C 00rr                      1- 2272     	MOVAR	STK02
     001D 00rr                      1- 2273     	MOVAR	STK01
                                    1- 2274     ;;120	MOVR	r0x1029,W
                                    1- 2275     	BANKSEL	r0x1028
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 2276     	MOVR	r0x1028,W
                                    1- 2277     	BANKSEL	r0x1029
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 2278     	MOVAR	r0x1029
     0022 00rr                      1- 2279     	MOVAR	STK00
     0023 2100                      1- 2280     	MOVIA	0x00
     0024 2rrr                      1- 2281     	LCALL	_sendRGB3
     0025 3rrr                      1- 2282     	LGOTO	_00277_DS_
     0026                           1- 2283     _00259_DS_:
                                    1- 2284     	.line	450, "main.c"; 	else if(redTime == 1)
                                    1- 2285     	BANKSEL	_redTime
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 2286     	MOVR	_redTime,W
     0028 2401                      1- 2287     	XORIA	0x01
     0029 0903                      1- 2288     	BTRSS	STATUS,2
     002A 3rrr                      1- 2289     	LGOTO	_00277_DS_
                                    1- 2290     	.line	452, "main.c"; 	sendRGB3(i,0x4C,0xB2,0xB2);
                                    1- 2291     	BANKSEL	r0x1028
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 2292     	MOVR	r0x1028,W
                                    1- 2293     	BANKSEL	r0x102A
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 02rr                      1- 2294     	CLRR	r0x102A
     002F 21B2                      1- 2295     	MOVIA	0xb2
     0030 00rr                      1- 2296     	MOVAR	STK03
     0031 00rr                      1- 2297     	MOVAR	STK02
     0032 214C                      1- 2298     	MOVIA	0x4c
     0033 00rr                      1- 2299     	MOVAR	STK01
                                    1- 2300     ;;116	MOVR	r0x1029,W
                                    1- 2301     	BANKSEL	r0x1028
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 2302     	MOVR	r0x1028,W
                                    1- 2303     	BANKSEL	r0x1029
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 2304     	MOVAR	r0x1029
     0038 00rr                      1- 2305     	MOVAR	STK00
     0039 2100                      1- 2306     	MOVIA	0x00
     003A 2rrr                      1- 2307     	LCALL	_sendRGB3
     003B 3rrr                      1- 2308     	LGOTO	_00277_DS_
     003C                           1- 2309     _00274_DS_:
                                    1- 2310     	.line	455, "main.c"; 	else if(i == max)
                                    1- 2311     	BANKSEL	r0x1026
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 2312     	MOVR	r0x1026,W
                                    1- 2313     	BANKSEL	r0x1028
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 12rr                      1- 2314     	XORAR	r0x1028,W
     0040 0903                      1- 2315     	BTRSS	STATUS,2
     0041 3rrr                      1- 2316     	LGOTO	_00271_DS_
                                    1- 2317     	.line	457, "main.c"; 	if(redTime == 0)
                                    1- 2318     	BANKSEL	_redTime
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1- 2319     	MOVR	_redTime,W
     0044 0903                      1- 2320     	BTRSS	STATUS,2
     0045 3rrr                      1- 2321     	LGOTO	_00264_DS_
                                    1- 2322     	.line	459, "main.c"; 	sendRGB3(i,0xB2,0x4C,0x4C);
                                    1- 2323     	BANKSEL	r0x1028
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1- 2324     	MOVR	r0x1028,W
                                    1- 2325     	BANKSEL	r0x102A
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 02rr                      1- 2326     	CLRR	r0x102A
     004A 214C                      1- 2327     	MOVIA	0x4c
     004B 00rr                      1- 2328     	MOVAR	STK03
     004C 00rr                      1- 2329     	MOVAR	STK02
     004D 21B2                      1- 2330     	MOVIA	0xb2
     004E 00rr                      1- 2331     	MOVAR	STK01
                                    1- 2332     ;;112	MOVR	r0x1029,W
                                    1- 2333     	BANKSEL	r0x1028
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 2334     	MOVR	r0x1028,W
                                    1- 2335     	BANKSEL	r0x1029
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 2336     	MOVAR	r0x1029
     0053 00rr                      1- 2337     	MOVAR	STK00
     0054 2100                      1- 2338     	MOVIA	0x00
     0055 2rrr                      1- 2339     	LCALL	_sendRGB3
     0056 3rrr                      1- 2340     	LGOTO	_00277_DS_
     0057                           1- 2341     _00264_DS_:
                                    1- 2342     	.line	461, "main.c"; 	else if(redTime == 1)
                                    1- 2343     	BANKSEL	_redTime
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 01rr                      1- 2344     	MOVR	_redTime,W
     0059 2401                      1- 2345     	XORIA	0x01
     005A 0903                      1- 2346     	BTRSS	STATUS,2
     005B 3rrr                      1- 2347     	LGOTO	_00277_DS_
                                    1- 2348     	.line	463, "main.c"; 	sendRGB3(i,0xB2,0xB2,0x4C);
                                    1- 2349     	BANKSEL	r0x1028
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 2350     	MOVR	r0x1028,W
                                    1- 2351     	BANKSEL	r0x102A
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 02rr                      1- 2352     	CLRR	r0x102A
     0060 214C                      1- 2353     	MOVIA	0x4c
     0061 00rr                      1- 2354     	MOVAR	STK03
     0062 21B2                      1- 2355     	MOVIA	0xb2
     0063 00rr                      1- 2356     	MOVAR	STK02
     0064 00rr                      1- 2357     	MOVAR	STK01
                                    1- 2358     ;;108	MOVR	r0x1029,W
                                    1- 2359     	BANKSEL	r0x1028
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 01rr                      1- 2360     	MOVR	r0x1028,W
                                    1- 2361     	BANKSEL	r0x1029
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1- 2362     	MOVAR	r0x1029
     0069 00rr                      1- 2363     	MOVAR	STK00
     006A 2100                      1- 2364     	MOVIA	0x00
     006B 2rrr                      1- 2365     	LCALL	_sendRGB3
     006C 3rrr                      1- 2366     	LGOTO	_00277_DS_
     006D                           1- 2367     _00271_DS_:
                                    1- 2368     	.line	466, "main.c"; 	else if(i< max && i > min)
                                    1- 2369     	BANKSEL	r0x1026
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1- 2370     	MOVR	r0x1026,W
                                    1- 2371     	BANKSEL	r0x1028
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 04rr                      1- 2372     	SUBAR	r0x1028,W
     0071 0C03                      1- 2373     	BTRSC	STATUS,0
     0072 3rrr                      1- 2374     	LGOTO	_00267_DS_
     0073 01rr                      1- 2375     	MOVR	r0x1028,W
                                    1- 2376     	BANKSEL	r0x1027
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 04rr                      1- 2377     	SUBAR	r0x1027,W
     0076 0C03                      1- 2378     	BTRSC	STATUS,0
     0077 3rrr                      1- 2379     	LGOTO	_00267_DS_
                                    1- 2380     	.line	468, "main.c"; 	sendRGB3(i,RED2);
                                    1- 2381     	BANKSEL	r0x1028
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 01rr                      1- 2382     	MOVR	r0x1028,W
                                    1- 2383     	BANKSEL	r0x102A
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1- 2384     	CLRR	r0x102A
     007C 21B2                      1- 2385     	MOVIA	0xb2
     007D 00rr                      1- 2386     	MOVAR	STK03
     007E 00rr                      1- 2387     	MOVAR	STK02
     007F 00rr                      1- 2388     	MOVAR	STK01
                                    1- 2389     ;;104	MOVR	r0x1029,W
                                    1- 2390     	BANKSEL	r0x1028
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1- 2391     	MOVR	r0x1028,W
                                    1- 2392     	BANKSEL	r0x1029
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 00rr                      1- 2393     	MOVAR	r0x1029
     0084 00rr                      1- 2394     	MOVAR	STK00
     0085 2100                      1- 2395     	MOVIA	0x00
     0086 2rrr                      1- 2396     	LCALL	_sendRGB3
     0087 3rrr                      1- 2397     	LGOTO	_00277_DS_
     0088                           1- 2398     _00267_DS_:
                                    1- 2399     	.line	472, "main.c"; 	sendRGB3(i,RED3);
                                    1- 2400     	BANKSEL	r0x1028
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 01rr                      1- 2401     	MOVR	r0x1028,W
                                    1- 2402     	BANKSEL	r0x102A
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 02rr                      1- 2403     	CLRR	r0x102A
     008C 214C                      1- 2404     	MOVIA	0x4c
     008D 00rr                      1- 2405     	MOVAR	STK03
     008E 00rr                      1- 2406     	MOVAR	STK02
     008F 00rr                      1- 2407     	MOVAR	STK01
                                    1- 2408     ;;100	MOVR	r0x1029,W
                                    1- 2409     	BANKSEL	r0x1028
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 01rr                      1- 2410     	MOVR	r0x1028,W
                                    1- 2411     	BANKSEL	r0x1029
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 00rr                      1- 2412     	MOVAR	r0x1029
     0094 00rr                      1- 2413     	MOVAR	STK00
     0095 2100                      1- 2414     	MOVIA	0x00
     0096 2rrr                      1- 2415     	LCALL	_sendRGB3
     0097                           1- 2416     _00277_DS_:
                                    1- 2417     	.line	476, "main.c"; 	while(--i > 0);
                                    1- 2418     	BANKSEL	r0x1028
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 17rr                      1- 2419     	DECRSZ	r0x1028,F
     0099 3rrr                      1- 2420     	LGOTO	_00276_DS_
                                    1- 2421     	.line	477, "main.c"; 	}
                                    1- 2422     	RETURN	
     009A 0010                      3-   26 m1      ret
                                    1- 2423     ; exit point of _openCtr2
                                    1- 2425     ;***
                                    1- 2426     ;  pBlock Stats: dbName = C
                                    1- 2427     ;***
                                    1- 2428     ;has an exit
                                    1- 2429     ;functions called:
                                    1- 2430     ;   _sendRGB3
                                    1- 2431     ;   _sendRGB3
                                    1- 2432     ;   _sendRGB3
                                    1- 2433     ;   _sendRGB3
                                    1- 2434     ;   _sendRGB3
                                    1- 2435     ;   _sendRGB3
                                    1- 2436     ;   _sendRGB3
                                    1- 2437     ;   _sendRGB3
                                    1- 2438     ;   _sendRGB3
                                    1- 2439     ;   _sendRGB3
                                    1- 2440     ;   _sendRGB3
                                    1- 2441     ;   _sendRGB3
                                    1- 2442     ;9 compiler assigned registers:
                                    1- 2443     ;   r0x102B
                                    1- 2444     ;   r0x102C
                                    1- 2445     ;   r0x102D
                                    1- 2446     ;   r0x102E
                                    1- 2447     ;   r0x102F
                                    1- 2448     ;   STK03
                                    1- 2449     ;   STK02
                                    1- 2450     ;   STK01
                                    1- 2451     ;   STK00
                                    1- 2452     ;; Starting pCode block
                                    1- 2453     .segment "code"; module=main, function=_openCtr
                                    1- 2455     ;local variable name mapping:
     0000                           1- 2460     _openCtr:
                                    1- 2461     ; 2 exit points
                                    1- 2462     	.line	393, "main.c"; 	void openCtr(char redIndex)
                                    1- 2463     	BANKSEL	r0x102B
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2464     	MOVAR	r0x102B
                                    1- 2465     	.line	396, "main.c"; 	char min = 7-redIndex;	
     0002 2707                      1- 2466     	SUBIA	0x07
                                    1- 2467     	BANKSEL	r0x102C
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 2468     	MOVAR	r0x102C
                                    1- 2469     	.line	397, "main.c"; 	char max = 7+redIndex;	
     0005 2107                      1- 2470     	MOVIA	0x07
                                    1- 2471     	BANKSEL	r0x102B
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 03rr                      1- 2472     	ADDAR	r0x102B,F
                                    1- 2473     	.line	398, "main.c"; 	do
     0008 210E                      1- 2474     	MOVIA	0x0e
                                    1- 2475     	BANKSEL	r0x102D
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 2476     	MOVAR	r0x102D
     000B                           1- 2477     _00250_DS_:
                                    1- 2478     	.line	401, "main.c"; 	if(i == min)
                                    1- 2479     	BANKSEL	r0x102C
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 2480     	MOVR	r0x102C,W
                                    1- 2481     	BANKSEL	r0x102D
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 12rr                      1- 2482     	XORAR	r0x102D,W
     000F 0903                      1- 2483     	BTRSS	STATUS,2
     0010 3rrr                      1- 2484     	LGOTO	_00248_DS_
                                    1- 2485     	.line	403, "main.c"; 	if(redTime == 0)
                                    1- 2486     	BANKSEL	_redTime
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2487     	MOVR	_redTime,W
     0013 0903                      1- 2488     	BTRSS	STATUS,2
     0014 3rrr                      1- 2489     	LGOTO	_00233_DS_
                                    1- 2490     	.line	405, "main.c"; 	sendRGB3(i,0x00,0x00,0x4C);
                                    1- 2491     	BANKSEL	r0x102D
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2492     	MOVR	r0x102D,W
                                    1- 2493     	BANKSEL	r0x102F
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 02rr                      1- 2494     	CLRR	r0x102F
     0019 214C                      1- 2495     	MOVIA	0x4c
     001A 00rr                      1- 2496     	MOVAR	STK03
     001B 2100                      1- 2497     	MOVIA	0x00
     001C 00rr                      1- 2498     	MOVAR	STK02
     001D 00rr                      1- 2499     	MOVAR	STK01
                                    1- 2500     ;;119	MOVR	r0x102E,W
                                    1- 2501     	BANKSEL	r0x102D
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 2502     	MOVR	r0x102D,W
                                    1- 2503     	BANKSEL	r0x102E
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 2504     	MOVAR	r0x102E
     0022 00rr                      1- 2505     	MOVAR	STK00
     0023 2100                      1- 2506     	MOVIA	0x00
     0024 2rrr                      1- 2507     	LCALL	_sendRGB3
     0025 3rrr                      1- 2508     	LGOTO	_00251_DS_
     0026                           1- 2509     _00233_DS_:
                                    1- 2510     	.line	407, "main.c"; 	else if(redTime == 1)
                                    1- 2511     	BANKSEL	_redTime
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 2512     	MOVR	_redTime,W
     0028 2401                      1- 2513     	XORIA	0x01
     0029 0903                      1- 2514     	BTRSS	STATUS,2
     002A 3rrr                      1- 2515     	LGOTO	_00251_DS_
                                    1- 2516     	.line	409, "main.c"; 	sendRGB3(i,0x00,0x4C,0x4C);
                                    1- 2517     	BANKSEL	r0x102D
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 2518     	MOVR	r0x102D,W
                                    1- 2519     	BANKSEL	r0x102F
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 02rr                      1- 2520     	CLRR	r0x102F
     002F 214C                      1- 2521     	MOVIA	0x4c
     0030 00rr                      1- 2522     	MOVAR	STK03
     0031 00rr                      1- 2523     	MOVAR	STK02
     0032 2100                      1- 2524     	MOVIA	0x00
     0033 00rr                      1- 2525     	MOVAR	STK01
                                    1- 2526     ;;115	MOVR	r0x102E,W
                                    1- 2527     	BANKSEL	r0x102D
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 2528     	MOVR	r0x102D,W
                                    1- 2529     	BANKSEL	r0x102E
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 2530     	MOVAR	r0x102E
     0038 00rr                      1- 2531     	MOVAR	STK00
     0039 2100                      1- 2532     	MOVIA	0x00
     003A 2rrr                      1- 2533     	LCALL	_sendRGB3
     003B 3rrr                      1- 2534     	LGOTO	_00251_DS_
     003C                           1- 2535     _00248_DS_:
                                    1- 2536     	.line	412, "main.c"; 	else if(i == max)
                                    1- 2537     	BANKSEL	r0x102B
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 2538     	MOVR	r0x102B,W
                                    1- 2539     	BANKSEL	r0x102D
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 12rr                      1- 2540     	XORAR	r0x102D,W
     0040 0903                      1- 2541     	BTRSS	STATUS,2
     0041 3rrr                      1- 2542     	LGOTO	_00245_DS_
                                    1- 2543     	.line	414, "main.c"; 	if(redTime == 0)
                                    1- 2544     	BANKSEL	_redTime
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1- 2545     	MOVR	_redTime,W
     0044 0903                      1- 2546     	BTRSS	STATUS,2
     0045 3rrr                      1- 2547     	LGOTO	_00238_DS_
                                    1- 2548     	.line	416, "main.c"; 	sendRGB3(i,0x4C,0x00,0x00);
                                    1- 2549     	BANKSEL	r0x102D
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1- 2550     	MOVR	r0x102D,W
                                    1- 2551     	BANKSEL	r0x102F
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 02rr                      1- 2552     	CLRR	r0x102F
     004A 2100                      1- 2553     	MOVIA	0x00
     004B 00rr                      1- 2554     	MOVAR	STK03
     004C 00rr                      1- 2555     	MOVAR	STK02
     004D 214C                      1- 2556     	MOVIA	0x4c
     004E 00rr                      1- 2557     	MOVAR	STK01
                                    1- 2558     ;;111	MOVR	r0x102E,W
                                    1- 2559     	BANKSEL	r0x102D
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 2560     	MOVR	r0x102D,W
                                    1- 2561     	BANKSEL	r0x102E
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 2562     	MOVAR	r0x102E
     0053 00rr                      1- 2563     	MOVAR	STK00
     0054 2100                      1- 2564     	MOVIA	0x00
     0055 2rrr                      1- 2565     	LCALL	_sendRGB3
     0056 3rrr                      1- 2566     	LGOTO	_00251_DS_
     0057                           1- 2567     _00238_DS_:
                                    1- 2568     	.line	418, "main.c"; 	else if(redTime == 1)
                                    1- 2569     	BANKSEL	_redTime
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 01rr                      1- 2570     	MOVR	_redTime,W
     0059 2401                      1- 2571     	XORIA	0x01
     005A 0903                      1- 2572     	BTRSS	STATUS,2
     005B 3rrr                      1- 2573     	LGOTO	_00251_DS_
                                    1- 2574     	.line	420, "main.c"; 	sendRGB3(i,0x4C,0x4C,0x00);
                                    1- 2575     	BANKSEL	r0x102D
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 2576     	MOVR	r0x102D,W
                                    1- 2577     	BANKSEL	r0x102F
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 02rr                      1- 2578     	CLRR	r0x102F
     0060 2100                      1- 2579     	MOVIA	0x00
     0061 00rr                      1- 2580     	MOVAR	STK03
     0062 214C                      1- 2581     	MOVIA	0x4c
     0063 00rr                      1- 2582     	MOVAR	STK02
     0064 00rr                      1- 2583     	MOVAR	STK01
                                    1- 2584     ;;107	MOVR	r0x102E,W
                                    1- 2585     	BANKSEL	r0x102D
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 01rr                      1- 2586     	MOVR	r0x102D,W
                                    1- 2587     	BANKSEL	r0x102E
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1- 2588     	MOVAR	r0x102E
     0069 00rr                      1- 2589     	MOVAR	STK00
     006A 2100                      1- 2590     	MOVIA	0x00
     006B 2rrr                      1- 2591     	LCALL	_sendRGB3
     006C 3rrr                      1- 2592     	LGOTO	_00251_DS_
     006D                           1- 2593     _00245_DS_:
                                    1- 2594     	.line	423, "main.c"; 	else if(i< max && i > min)
                                    1- 2595     	BANKSEL	r0x102B
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1- 2596     	MOVR	r0x102B,W
                                    1- 2597     	BANKSEL	r0x102D
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 04rr                      1- 2598     	SUBAR	r0x102D,W
     0071 0C03                      1- 2599     	BTRSC	STATUS,0
     0072 3rrr                      1- 2600     	LGOTO	_00241_DS_
     0073 01rr                      1- 2601     	MOVR	r0x102D,W
                                    1- 2602     	BANKSEL	r0x102C
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 04rr                      1- 2603     	SUBAR	r0x102C,W
     0076 0C03                      1- 2604     	BTRSC	STATUS,0
     0077 3rrr                      1- 2605     	LGOTO	_00241_DS_
                                    1- 2606     	.line	425, "main.c"; 	sendRGB3(i,RED3);
                                    1- 2607     	BANKSEL	r0x102D
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 01rr                      1- 2608     	MOVR	r0x102D,W
                                    1- 2609     	BANKSEL	r0x102F
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1- 2610     	CLRR	r0x102F
     007C 214C                      1- 2611     	MOVIA	0x4c
     007D 00rr                      1- 2612     	MOVAR	STK03
     007E 00rr                      1- 2613     	MOVAR	STK02
     007F 00rr                      1- 2614     	MOVAR	STK01
                                    1- 2615     ;;103	MOVR	r0x102E,W
                                    1- 2616     	BANKSEL	r0x102D
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1- 2617     	MOVR	r0x102D,W
                                    1- 2618     	BANKSEL	r0x102E
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 00rr                      1- 2619     	MOVAR	r0x102E
     0084 00rr                      1- 2620     	MOVAR	STK00
     0085 2100                      1- 2621     	MOVIA	0x00
     0086 2rrr                      1- 2622     	LCALL	_sendRGB3
     0087 3rrr                      1- 2623     	LGOTO	_00251_DS_
     0088                           1- 2624     _00241_DS_:
                                    1- 2625     	.line	429, "main.c"; 	sendRGB3(i,BLACK);
                                    1- 2626     	BANKSEL	r0x102D
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 01rr                      1- 2627     	MOVR	r0x102D,W
                                    1- 2628     	BANKSEL	r0x102F
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 02rr                      1- 2629     	CLRR	r0x102F
     008C 2100                      1- 2630     	MOVIA	0x00
     008D 00rr                      1- 2631     	MOVAR	STK03
     008E 00rr                      1- 2632     	MOVAR	STK02
     008F 00rr                      1- 2633     	MOVAR	STK01
                                    1- 2634     ;;99	MOVR	r0x102E,W
                                    1- 2635     	BANKSEL	r0x102D
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 01rr                      1- 2636     	MOVR	r0x102D,W
                                    1- 2637     	BANKSEL	r0x102E
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 00rr                      1- 2638     	MOVAR	r0x102E
     0094 00rr                      1- 2639     	MOVAR	STK00
     0095 2100                      1- 2640     	MOVIA	0x00
     0096 2rrr                      1- 2641     	LCALL	_sendRGB3
     0097                           1- 2642     _00251_DS_:
                                    1- 2643     	.line	433, "main.c"; 	while(--i > 0);
                                    1- 2644     	BANKSEL	r0x102D
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 17rr                      1- 2645     	DECRSZ	r0x102D,F
     0099 3rrr                      1- 2646     	LGOTO	_00250_DS_
                                    1- 2647     	.line	434, "main.c"; 	}
                                    1- 2648     	RETURN	
     009A 0010                      3-   26 m1      ret
                                    1- 2649     ; exit point of _openCtr
                                    1- 2651     ;***
                                    1- 2652     ;  pBlock Stats: dbName = C
                                    1- 2653     ;***
                                    1- 2654     ;has an exit
                                    1- 2655     ;functions called:
                                    1- 2656     ;   _sendRGB2
                                    1- 2657     ;   _sendRGB
                                    1- 2658     ;   _sendRGB2
                                    1- 2659     ;   _sendRGB2
                                    1- 2660     ;   _sendRGB
                                    1- 2661     ;   _sendRGB2
                                    1- 2662     ;   _sendRGB2
                                    1- 2663     ;   _sendRGB
                                    1- 2664     ;   _sendRGB2
                                    1- 2665     ;   _sendRGB2
                                    1- 2666     ;   _sendRGB
                                    1- 2667     ;   _sendRGB2
                                    1- 2668     ;6 compiler assigned registers:
                                    1- 2669     ;   r0x1030
                                    1- 2670     ;   STK00
                                    1- 2671     ;   r0x1031
                                    1- 2672     ;   STK01
                                    1- 2673     ;   r0x1032
                                    1- 2674     ;   r0x1033
                                    1- 2675     ;; Starting pCode block
                                    1- 2676     .segment "code"; module=main, function=_setColor
                                    1- 2678     ;local variable name mapping:
     0000                           1- 2683     _setColor:
                                    1- 2684     ; 2 exit points
                                    1- 2685     	.line	361, "main.c"; 	void setColor(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 2686     	BANKSEL	r0x1030
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2687     	MOVAR	r0x1030
     0002 01rr                      1- 2688     	MOVR	STK00,W
                                    1- 2689     	BANKSEL	r0x1031
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 2690     	MOVAR	r0x1031
     0005 01rr                      1- 2691     	MOVR	STK01,W
                                    1- 2692     	BANKSEL	r0x1032
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 2693     	MOVAR	r0x1032
                                    1- 2694     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2695     ;;unsigned compare: left >= lit (0x33=51), size=1
                                    1- 2696     	.line	365, "main.c"; 	if((DC > 50) && (colorR > 0 || colorG > 0 || colorB > 0))
     0008 2133                      1- 2697     	MOVIA	0x33
                                    1- 2698     	BANKSEL	_DC
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 04rr                      1- 2699     	SUBAR	_DC,W
     000B 0803                      1- 2700     	BTRSS	STATUS,0
     000C 3rrr                      1- 2701     	LGOTO	_00220_DS_
                                    1- 2702     	BANKSEL	r0x1030
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 2703     	MOVR	r0x1030,W
     000F 0903                      1- 2704     	BTRSS	STATUS,2
     0010 3rrr                      1- 2705     	LGOTO	_00219_DS_
                                    1- 2706     	BANKSEL	r0x1031
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2707     	MOVR	r0x1031,W
     0013 0903                      1- 2708     	BTRSS	STATUS,2
     0014 3rrr                      1- 2709     	LGOTO	_00219_DS_
                                    1- 2710     	BANKSEL	r0x1032
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2711     	MOVR	r0x1032,W
     0017 0D03                      1- 2712     	BTRSC	STATUS,2
     0018 3rrr                      1- 2713     	LGOTO	_00220_DS_
     0019                           1- 2714     _00219_DS_:
                                    1- 2715     	.line	369, "main.c"; 	sendRGB2(colorR,colorG,colorB);	
                                    1- 2716     	BANKSEL	r0x1032
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 2717     	MOVR	r0x1032,W
     001B 00rr                      1- 2718     	MOVAR	STK01
                                    1- 2719     	BANKSEL	r0x1031
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 2720     	MOVR	r0x1031,W
     001E 00rr                      1- 2721     	MOVAR	STK00
                                    1- 2722     	BANKSEL	r0x1030
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 2723     	MOVR	r0x1030,W
     0021 2rrr                      1- 2724     	LCALL	_sendRGB2
                                    1- 2725     	.line	370, "main.c"; 	do
     0022 210C                      1- 2726     	MOVIA	0x0c
                                    1- 2727     	BANKSEL	r0x1033
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 2728     	MOVAR	r0x1033
     0025                           1- 2729     _00213_DS_:
                                    1- 2730     	.line	372, "main.c"; 	sendRGB(BLACK);	
     0025 2100                      1- 2731     	MOVIA	0x00
     0026 00rr                      1- 2732     	MOVAR	STK01
     0027 00rr                      1- 2733     	MOVAR	STK00
     0028 2rrr                      1- 2734     	LCALL	_sendRGB
                                    1- 2735     	.line	374, "main.c"; 	while(--i > 0);
                                    1- 2736     	BANKSEL	r0x1033
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 17rr                      1- 2737     	DECRSZ	r0x1033,F
     002B 3rrr                      1- 2738     	LGOTO	_00213_DS_
                                    1- 2739     	.line	375, "main.c"; 	sendRGB2(colorR,colorG,colorB);	
                                    1- 2740     	BANKSEL	r0x1032
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1- 2741     	MOVR	r0x1032,W
     002E 00rr                      1- 2742     	MOVAR	STK01
                                    1- 2743     	BANKSEL	r0x1031
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 2744     	MOVR	r0x1031,W
     0031 00rr                      1- 2745     	MOVAR	STK00
                                    1- 2746     	BANKSEL	r0x1030
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 01rr                      1- 2747     	MOVR	r0x1030,W
     0034 2rrr                      1- 2748     	LCALL	_sendRGB2
     0035 3rrr                      1- 2749     	LGOTO	_00225_DS_
     0036                           1- 2750     _00220_DS_:
                                    1- 2751     	.line	381, "main.c"; 	sendRGB2(colorR,colorG,colorB);	
                                    1- 2752     	BANKSEL	r0x1032
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1- 2753     	MOVR	r0x1032,W
     0038 00rr                      1- 2754     	MOVAR	STK01
                                    1- 2755     	BANKSEL	r0x1031
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 2756     	MOVR	r0x1031,W
     003B 00rr                      1- 2757     	MOVAR	STK00
                                    1- 2758     	BANKSEL	r0x1030
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 2759     	MOVR	r0x1030,W
     003E 2rrr                      1- 2760     	LCALL	_sendRGB2
                                    1- 2761     	.line	382, "main.c"; 	do
     003F 210C                      1- 2762     	MOVIA	0x0c
                                    1- 2763     	BANKSEL	r0x1033
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 00rr                      1- 2764     	MOVAR	r0x1033
     0042                           1- 2765     _00216_DS_:
                                    1- 2766     	.line	384, "main.c"; 	sendRGB(colorR,colorG,colorB);	
                                    1- 2767     	BANKSEL	r0x1032
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1- 2768     	MOVR	r0x1032,W
     0044 00rr                      1- 2769     	MOVAR	STK01
                                    1- 2770     	BANKSEL	r0x1031
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1- 2771     	MOVR	r0x1031,W
     0047 00rr                      1- 2772     	MOVAR	STK00
                                    1- 2773     	BANKSEL	r0x1030
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 01rr                      1- 2774     	MOVR	r0x1030,W
     004A 2rrr                      1- 2775     	LCALL	_sendRGB
                                    1- 2776     	.line	386, "main.c"; 	while(--i > 0);
                                    1- 2777     	BANKSEL	r0x1033
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 17rr                      1- 2778     	DECRSZ	r0x1033,F
     004D 3rrr                      1- 2779     	LGOTO	_00216_DS_
                                    1- 2780     	.line	387, "main.c"; 	sendRGB2(colorR,colorG,colorB);	
                                    1- 2781     	BANKSEL	r0x1032
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1- 2782     	MOVR	r0x1032,W
     0050 00rr                      1- 2783     	MOVAR	STK01
                                    1- 2784     	BANKSEL	r0x1031
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 01rr                      1- 2785     	MOVR	r0x1031,W
     0053 00rr                      1- 2786     	MOVAR	STK00
                                    1- 2787     	BANKSEL	r0x1030
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 01rr                      1- 2788     	MOVR	r0x1030,W
     0056 2rrr                      1- 2789     	LCALL	_sendRGB2
     0057                           1- 2790     _00225_DS_:
                                    1- 2791     	.line	389, "main.c"; 	}
                                    1- 2792     	RETURN	
     0057 0010                      3-   26 m1      ret
                                    1- 2793     ; exit point of _setColor
                                    1- 2795     ;***
                                    1- 2796     ;  pBlock Stats: dbName = C
                                    1- 2797     ;***
                                    1- 2798     ;has an exit
                                    1- 2799     ;; Starting pCode block
                                    1- 2800     .segment "code"; module=main, function=_initTimer0
     0000                           1- 2802     _initTimer0:
                                    1- 2803     ; 2 exit points
                                    1- 2804     	.line	339, "main.c"; 	PORTA = 0x00;
                                    1- 2805     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 2806     	CLRR	_PORTA
                                    1- 2807     	.line	342, "main.c"; 	IOSTA =  C_PA4_Input | C_PA5_Input | C_PA7_Input;	
     0002 21B0                      1- 2808     	MOVIA	0xb0
     0003 000r                      1- 2809     	IOST	_IOSTA
                                    1- 2810     	.line	343, "main.c"; 	APHCON = 0xDF;						//PA5下拉	
     0004 21DF                      1- 2811     	MOVIA	0xdf
     0005 000r                      1- 2812     	IOST	_APHCON
                                    1- 2813     	.line	344, "main.c"; 	ABPLCON = 0xF7;						//PA3下拉
     0006 21F7                      1- 2814     	MOVIA	0xf7
     0007 00rr                      1- 2815     	MOVAR	_ABPLCON
                                    1- 2816     	.line	345, "main.c"; 	PORTA = 0x00;                        	// PORTA Data Register = 0x00
     0008 02rr                      1- 2817     	CLRR	_PORTA
                                    1- 2818     	.line	346, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT & LVR
     0009 2188                      1- 2819     	MOVIA	0x88
     000A 00rr                      1- 2820     	MOVAR	_PCON
                                    1- 2821     	.line	347, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     000B 2101                      1- 2822     	MOVIA	0x01
     000C 00rr                      1- 2823     	MOVAR	_INTE
                                    1- 2824     	.line	348, "main.c"; 	INTF = 0;
     000D 02rr                      1- 2825     	CLRR	_INTF
                                    1- 2826     	.line	351, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2827     	CLRA	
     000F 000r                      1- 2828     	IOST	_PCON1
                                    1- 2829     	.line	353, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2830     	MOVIA	0x37
     0011 00rr                      1- 2831     	MOVAR	_TMR0
                                    1- 2832     	.line	354, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0012 0200                      1- 2833     	CLRA	
     0013 0003                      1- 2834     	T0MD	
                                    1- 2835     	.line	356, "main.c"; 	PCON1 = C_TMR0_En;	
     0014 2101                      1- 2836     	MOVIA	0x01
     0015 000r                      1- 2837     	IOST	_PCON1
                                    1- 2838     	.line	357, "main.c"; 	ENI();	
     0016 0004                      1- 2839     	ENI
                                    1- 2840     	.line	359, "main.c"; 	}
                                    1- 2841     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 2842     ; exit point of _initTimer0
                                    1- 2844     ;***
                                    1- 2845     ;  pBlock Stats: dbName = C
                                    1- 2846     ;***
                                    1- 2847     ;has an exit
                                    1- 2848     ;functions called:
                                    1- 2849     ;   _openCtr
                                    1- 2850     ;   _openCtr2
                                    1- 2851     ;   _closeCtr2
                                    1- 2852     ;   _closeCtr
                                    1- 2853     ;   _openCtr
                                    1- 2854     ;   _openCtr2
                                    1- 2855     ;   _closeCtr2
                                    1- 2856     ;   _closeCtr
                                    1- 2857     ;1 compiler assigned register :
                                    1- 2858     ;   r0x1034
                                    1- 2859     ;; Starting pCode block
                                    1- 2860     .segment "code"; module=main, function=_xdCtr
     0000                           1- 2862     _xdCtr:
                                    1- 2863     ; 2 exit points
                                    1- 2864     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2865     ;;unsigned compare: left >= lit (0x33=51), size=1
                                    1- 2866     	.line	279, "main.c"; 	if(XD > 50)
     0000 2133                      1- 2867     	MOVIA	0x33
                                    1- 2868     	BANKSEL	_XD
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 2869     	SUBAR	_XD,W
     0003 0803                      1- 2870     	BTRSS	STATUS,0
     0004 3rrr                      1- 2871     	LGOTO	_00202_DS_
                                    1- 2872     	.line	282, "main.c"; 	if(++redTime > 1)
                                    1- 2873     	BANKSEL	_redTime
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 2874     	INCR	_redTime,F
                                    1- 2875     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2876     ;;unsigned compare: left >= lit (0x2=2), size=1
     0007 2102                      1- 2877     	MOVIA	0x02
     0008 04rr                      1- 2878     	SUBAR	_redTime,W
     0009 0803                      1- 2879     	BTRSS	STATUS,0
     000A 3rrr                      1- 2880     	LGOTO	_00187_DS_
                                    1- 2881     	.line	284, "main.c"; 	redTime = 0;
     000B 02rr                      1- 2882     	CLRR	_redTime
                                    1- 2883     ;;unsigned compare: left < lit (0xE=14), size=1
                                    1- 2884     	.line	285, "main.c"; 	if(ledStep < 14)
     000C 210E                      1- 2885     	MOVIA	0x0e
                                    1- 2886     	BANKSEL	_ledStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 2887     	SUBAR	_ledStep,W
     000F 0C03                      1- 2888     	BTRSC	STATUS,0
     0010 3rrr                      1- 2889     	LGOTO	_00184_DS_
                                    1- 2890     	.line	287, "main.c"; 	ledStep++;
     0011 05rr                      1- 2891     	INCR	_ledStep,F
                                    1- 2892     	.line	288, "main.c"; 	workStep = 1;
     0012 2101                      1- 2893     	MOVIA	0x01
                                    1- 2894     	BANKSEL	_workStep
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1- 2895     	MOVAR	_workStep
     0015 3rrr                      1- 2896     	LGOTO	_00187_DS_
     0016                           1- 2897     _00184_DS_:
                                    1- 2898     	.line	292, "main.c"; 	workStep = 2;
     0016 2102                      1- 2899     	MOVIA	0x02
                                    1- 2900     	BANKSEL	_workStep
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 2901     	MOVAR	_workStep
                                    1- 2902     ;;unsigned compare: left < lit (0x7=7), size=1
     0019                           1- 2903     _00187_DS_:
                                    1- 2904     	.line	295, "main.c"; 	if(ledStep < 7)
     0019 2107                      1- 2905     	MOVIA	0x07
                                    1- 2906     	BANKSEL	_ledStep
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 04rr                      1- 2907     	SUBAR	_ledStep,W
     001C 0C03                      1- 2908     	BTRSC	STATUS,0
     001D 3rrr                      1- 2909     	LGOTO	_00189_DS_
                                    1- 2910     	.line	297, "main.c"; 	openCtr(ledStep);
     001E 01rr                      1- 2911     	MOVR	_ledStep,W
     001F 2rrr                      1- 2912     	LCALL	_openCtr
     0020 3rrr                      1- 2913     	LGOTO	_00204_DS_
     0021                           1- 2914     _00189_DS_:
                                    1- 2915     	.line	301, "main.c"; 	openCtr2(ledStep-7);
     0021 21F9                      1- 2916     	MOVIA	0xf9
                                    1- 2917     	BANKSEL	_ledStep
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 2918     	ADDAR	_ledStep,W
                                    1- 2919     	BANKSEL	r0x1034
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 2920     	MOVAR	r0x1034
     0026 2rrr                      1- 2921     	LCALL	_openCtr2
     0027 3rrr                      1- 2922     	LGOTO	_00204_DS_
     0028                           1- 2923     _00202_DS_:
                                    1- 2924     	.line	306, "main.c"; 	if(breakFlag == 1)
                                    1- 2925     	BANKSEL	_breakFlag
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1- 2926     	MOVR	_breakFlag,W
     002A 2401                      1- 2927     	XORIA	0x01
     002B 0903                      1- 2928     	BTRSS	STATUS,2
     002C 3rrr                      1- 2929     	LGOTO	_00192_DS_
                                    1- 2930     	.line	308, "main.c"; 	ledStep = 14;	//如果断开XD就执行关机
     002D 210E                      1- 2931     	MOVIA	0x0e
                                    1- 2932     	BANKSEL	_ledStep
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1- 2933     	MOVAR	_ledStep
                                    1- 2934     	.line	309, "main.c"; 	breakFlag = 0;
                                    1- 2935     	BANKSEL	_breakFlag
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 02rr                      1- 2936     	CLRR	_breakFlag
     0032                           1- 2937     _00192_DS_:
                                    1- 2938     	.line	312, "main.c"; 	if(++redTime > 1)
                                    1- 2939     	BANKSEL	_redTime
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 05rr                      1- 2940     	INCR	_redTime,F
                                    1- 2941     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2942     ;;unsigned compare: left >= lit (0x2=2), size=1
     0034 2102                      1- 2943     	MOVIA	0x02
     0035 04rr                      1- 2944     	SUBAR	_redTime,W
     0036 0803                      1- 2945     	BTRSS	STATUS,0
     0037 3rrr                      1- 2946     	LGOTO	_00197_DS_
                                    1- 2947     	.line	314, "main.c"; 	redTime = 0;
     0038 02rr                      1- 2948     	CLRR	_redTime
                                    1- 2949     	.line	315, "main.c"; 	if(ledStep > 0)
                                    1- 2950     	BANKSEL	_ledStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 2951     	MOVR	_ledStep,W
     003B 0D03                      1- 2952     	BTRSC	STATUS,2
     003C 3rrr                      1- 2953     	LGOTO	_00194_DS_
                                    1- 2954     	.line	317, "main.c"; 	ledStep--;
     003D 06rr                      1- 2955     	DECR	_ledStep,F
                                    1- 2956     	.line	318, "main.c"; 	workStep = 3;
     003E 2103                      1- 2957     	MOVIA	0x03
                                    1- 2958     	BANKSEL	_workStep
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 00rr                      1- 2959     	MOVAR	_workStep
     0041 3rrr                      1- 2960     	LGOTO	_00197_DS_
     0042                           1- 2961     _00194_DS_:
                                    1- 2962     	.line	322, "main.c"; 	workStep = 0;
                                    1- 2963     	BANKSEL	_workStep
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 02rr                      1- 2964     	CLRR	_workStep
                                    1- 2965     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2966     ;;unsigned compare: left >= lit (0x8=8), size=1
     0044                           1- 2967     _00197_DS_:
                                    1- 2968     	.line	325, "main.c"; 	if(ledStep > 7)
     0044 2108                      1- 2969     	MOVIA	0x08
                                    1- 2970     	BANKSEL	_ledStep
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 04rr                      1- 2971     	SUBAR	_ledStep,W
     0047 0803                      1- 2972     	BTRSS	STATUS,0
     0048 3rrr                      1- 2973     	LGOTO	_00199_DS_
                                    1- 2974     	.line	327, "main.c"; 	closeCtr2(ledStep-7);
     0049 21F9                      1- 2975     	MOVIA	0xf9
     004A 03rr                      1- 2976     	ADDAR	_ledStep,W
                                    1- 2977     	BANKSEL	r0x1034
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1- 2978     	MOVAR	r0x1034
     004D 2rrr                      1- 2979     	LCALL	_closeCtr2
     004E 3rrr                      1- 2980     	LGOTO	_00204_DS_
     004F                           1- 2981     _00199_DS_:
                                    1- 2982     	.line	331, "main.c"; 	closeCtr(ledStep);
                                    1- 2983     	BANKSEL	_ledStep
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 2984     	MOVR	_ledStep,W
     0051 2rrr                      1- 2985     	LCALL	_closeCtr
     0052                           1- 2986     _00204_DS_:
                                    1- 2987     	.line	335, "main.c"; 	}
                                    1- 2988     	RETURN	
     0052 0010                      3-   26 m1      ret
                                    1- 2989     ; exit point of _xdCtr
                                    1- 2991     ;***
                                    1- 2992     ;  pBlock Stats: dbName = C
                                    1- 2993     ;***
                                    1- 2994     ;has an exit
                                    1- 2995     ;functions called:
                                    1- 2996     ;   _setColor
                                    1- 2997     ;   _setColor
                                    1- 2998     ;   _setColor
                                    1- 2999     ;   _setColor
                                    1- 3000     ;   _setColor
                                    1- 3001     ;   _setColor
                                    1- 3002     ;2 compiler assigned registers:
                                    1- 3003     ;   STK01
                                    1- 3004     ;   STK00
                                    1- 3005     ;; Starting pCode block
                                    1- 3006     .segment "code"; module=main, function=_keyCtr
     0000                           1- 3008     _keyCtr:
                                    1- 3009     ; 2 exit points
                                    1- 3010     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3011     ;;unsigned compare: left >= lit (0x33=51), size=1
                                    1- 3012     	.line	244, "main.c"; 	if(XD > 50)
     0000 2133                      1- 3013     	MOVIA	0x33
                                    1- 3014     	BANKSEL	_XD
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 3015     	SUBAR	_XD,W
     0003 0803                      1- 3016     	BTRSS	STATUS,0
     0004 3rrr                      1- 3017     	LGOTO	_00177_DS_
                                    1- 3018     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3019     ;;unsigned compare: left >= lit (0x33=51), size=1
                                    1- 3020     	.line	247, "main.c"; 	if(SC > 50)
     0005 2133                      1- 3021     	MOVIA	0x33
                                    1- 3022     	BANKSEL	_SC
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 3023     	SUBAR	_SC,W
     0008 0803                      1- 3024     	BTRSS	STATUS,0
     0009 3rrr                      1- 3025     	LGOTO	_00174_DS_
                                    1- 3026     	.line	251, "main.c"; 	setColor(RED5);	
     000A 217F                      1- 3027     	MOVIA	0x7f
     000B 00rr                      1- 3028     	MOVAR	STK01
     000C 00rr                      1- 3029     	MOVAR	STK00
     000D 2rrr                      1- 3030     	LCALL	_setColor
                                    1- 3031     	.line	252, "main.c"; 	return 1;
     000E 2101                      1- 3032     	MOVIA	0x01
     000F 3rrr                      1- 3033     	LGOTO	_00178_DS_
                                    1- 3034     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3035     ;;unsigned compare: left >= lit (0x33=51), size=1
     0010                           1- 3036     _00174_DS_:
                                    1- 3037     	.line	254, "main.c"; 	else if(DC > 50)
     0010 2133                      1- 3038     	MOVIA	0x33
                                    1- 3039     	BANKSEL	_DC
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1- 3040     	SUBAR	_DC,W
     0013 0803                      1- 3041     	BTRSS	STATUS,0
     0014 3rrr                      1- 3042     	LGOTO	_00177_DS_
                                    1- 3043     	.line	258, "main.c"; 	if(count100ms == 0)
                                    1- 3044     	BANKSEL	_count100ms
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 3045     	MOVR	_count100ms,W
     0017 0903                      1- 3046     	BTRSS	STATUS,2
     0018 3rrr                      1- 3047     	LGOTO	_00169_DS_
                                    1- 3048     	.line	260, "main.c"; 	setColor(RED5);
     0019 217F                      1- 3049     	MOVIA	0x7f
     001A 00rr                      1- 3050     	MOVAR	STK01
     001B 00rr                      1- 3051     	MOVAR	STK00
     001C 2rrr                      1- 3052     	LCALL	_setColor
     001D 3rrr                      1- 3053     	LGOTO	_00170_DS_
     001E                           1- 3054     _00169_DS_:
                                    1- 3055     	.line	262, "main.c"; 	else if(count100ms == 5)
                                    1- 3056     	BANKSEL	_count100ms
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 3057     	MOVR	_count100ms,W
     0020 2405                      1- 3058     	XORIA	0x05
     0021 0903                      1- 3059     	BTRSS	STATUS,2
     0022 3rrr                      1- 3060     	LGOTO	_00170_DS_
                                    1- 3061     	.line	264, "main.c"; 	setColor(BLACK);
     0023 2100                      1- 3062     	MOVIA	0x00
     0024 00rr                      1- 3063     	MOVAR	STK01
     0025 00rr                      1- 3064     	MOVAR	STK00
     0026 2rrr                      1- 3065     	LCALL	_setColor
     0027                           1- 3066     _00170_DS_:
                                    1- 3067     	.line	266, "main.c"; 	return 1;
     0027 2101                      1- 3068     	MOVIA	0x01
     0028 3rrr                      1- 3069     	LGOTO	_00178_DS_
     0029                           1- 3070     _00177_DS_:
                                    1- 3071     	.line	271, "main.c"; 	return 0;
     0029 2100                      1- 3072     	MOVIA	0x00
     002A                           1- 3073     _00178_DS_:
                                    1- 3074     	.line	272, "main.c"; 	}
                                    1- 3075     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1- 3076     ; exit point of _keyCtr
                                    1- 3078     ;***
                                    1- 3079     ;  pBlock Stats: dbName = C
                                    1- 3080     ;***
                                    1- 3081     ;has an exit
                                    1- 3082     ;; Starting pCode block
                                    1- 3083     .segment "code"; module=main, function=_readKey
     0000                           1- 3085     _readKey:
                                    1- 3086     ; 2 exit points
                                    1- 3087     	.line	208, "main.c"; 	if(PORTA & 0x10)
                                    1- 3088     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 0Arr                      1- 3089     	BTRSS	_PORTA,4
     0002 3rrr                      1- 3090     	LGOTO	_00149_DS_
                                    1- 3091     	.line	210, "main.c"; 	if(++XD > 50)
                                    1- 3092     	BANKSEL	_XD
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 05rr                      1- 3093     	INCR	_XD,F
                                    1- 3094     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3095     ;;unsigned compare: left >= lit (0x33=51), size=1
     0005 2133                      1- 3096     	MOVIA	0x33
     0006 04rr                      1- 3097     	SUBAR	_XD,W
     0007 0803                      1- 3098     	BTRSS	STATUS,0
     0008 3rrr                      1- 3099     	LGOTO	_00150_DS_
                                    1- 3100     	.line	212, "main.c"; 	XD = 51;
     0009 2133                      1- 3101     	MOVIA	0x33
     000A 00rr                      1- 3102     	MOVAR	_XD
     000B 3rrr                      1- 3103     	LGOTO	_00150_DS_
     000C                           1- 3104     _00149_DS_:
                                    1- 3105     	.line	216, "main.c"; 	XD = 0;
                                    1- 3106     	BANKSEL	_XD
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1- 3107     	CLRR	_XD
     000E                           1- 3108     _00150_DS_:
                                    1- 3109     	.line	218, "main.c"; 	if(PORTA & 0x20)
                                    1- 3110     	BANKSEL	_PORTA
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 0Arr                      1- 3111     	BTRSS	_PORTA,5
     0010 3rrr                      1- 3112     	LGOTO	_00154_DS_
                                    1- 3113     	.line	220, "main.c"; 	if(++SC > 50)
                                    1- 3114     	BANKSEL	_SC
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 05rr                      1- 3115     	INCR	_SC,F
                                    1- 3116     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3117     ;;unsigned compare: left >= lit (0x33=51), size=1
     0013 2133                      1- 3118     	MOVIA	0x33
     0014 04rr                      1- 3119     	SUBAR	_SC,W
     0015 0803                      1- 3120     	BTRSS	STATUS,0
     0016 3rrr                      1- 3121     	LGOTO	_00155_DS_
                                    1- 3122     	.line	222, "main.c"; 	SC = 51;
     0017 2133                      1- 3123     	MOVIA	0x33
     0018 00rr                      1- 3124     	MOVAR	_SC
     0019 3rrr                      1- 3125     	LGOTO	_00155_DS_
     001A                           1- 3126     _00154_DS_:
                                    1- 3127     	.line	226, "main.c"; 	SC = 0;
                                    1- 3128     	BANKSEL	_SC
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 02rr                      1- 3129     	CLRR	_SC
     001C                           1- 3130     _00155_DS_:
                                    1- 3131     	.line	228, "main.c"; 	if(PORTA & 0x80)
                                    1- 3132     	BANKSEL	_PORTA
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 0Brr                      1- 3133     	BTRSS	_PORTA,7
     001E 3rrr                      1- 3134     	LGOTO	_00159_DS_
                                    1- 3135     	.line	230, "main.c"; 	if(++DC > 50)
                                    1- 3136     	BANKSEL	_DC
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 05rr                      1- 3137     	INCR	_DC,F
                                    1- 3138     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3139     ;;unsigned compare: left >= lit (0x33=51), size=1
     0021 2133                      1- 3140     	MOVIA	0x33
     0022 04rr                      1- 3141     	SUBAR	_DC,W
     0023 0803                      1- 3142     	BTRSS	STATUS,0
     0024 3rrr                      1- 3143     	LGOTO	_00161_DS_
                                    1- 3144     	.line	232, "main.c"; 	DC = 51;
     0025 2133                      1- 3145     	MOVIA	0x33
     0026 00rr                      1- 3146     	MOVAR	_DC
     0027 3rrr                      1- 3147     	LGOTO	_00161_DS_
     0028                           1- 3148     _00159_DS_:
                                    1- 3149     	.line	236, "main.c"; 	DC = 0;
                                    1- 3150     	BANKSEL	_DC
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 3151     	CLRR	_DC
     002A                           1- 3152     _00161_DS_:
                                    1- 3153     	.line	237, "main.c"; 	}
                                    1- 3154     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1- 3155     ; exit point of _readKey
                                    1- 3158     ;	code size estimation:
                                    1- 3159     ;	 1279+  326 =  1605 instructions ( 3862 byte)
                                    1- 3161     	end
                                    1- 3161     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    00000022
_00110_DS_              Label    00000024
_00112_DS_              Label    00000028
_00120_DS_              Label    0000001E
_00123_DS_              Label    00000022
_00125_DS_              Label    00000038
_00127_DS_              Label    00000042
_00130_DS_              Label    00000055
_00134_DS_              Label    00000047
_00141_DS_              Label    00000005
_00149_DS_              Label    0000000C
_00150_DS_              Label    0000000E
_00154_DS_              Label    0000001A
_00155_DS_              Label    0000001C
_00159_DS_              Label    00000028
_00161_DS_              Label    0000002A
_00169_DS_              Label    0000001E
_00170_DS_              Label    00000027
_00174_DS_              Label    00000010
_00177_DS_              Label    00000029
_00178_DS_              Label    0000002A
_00184_DS_              Label    00000016
_00187_DS_              Label    00000019
_00189_DS_              Label    00000021
_00192_DS_              Label    00000032
_00194_DS_              Label    00000042
_00197_DS_              Label    00000044
_00199_DS_              Label    0000004F
_00202_DS_              Label    00000028
_00204_DS_              Label    00000052
_00213_DS_              Label    00000025
_00216_DS_              Label    00000042
_00219_DS_              Label    00000019
_00220_DS_              Label    00000036
_00225_DS_              Label    00000057
_00233_DS_              Label    00000026
_00238_DS_              Label    00000057
_00241_DS_              Label    00000088
_00245_DS_              Label    0000006D
_00248_DS_              Label    0000003C
_00250_DS_              Label    0000000B
_00251_DS_              Label    00000097
_00259_DS_              Label    00000026
_00264_DS_              Label    00000057
_00267_DS_              Label    00000088
_00271_DS_              Label    0000006D
_00274_DS_              Label    0000003C
_00276_DS_              Label    0000000B
_00277_DS_              Label    00000097
_00285_DS_              Label    0000002A
_00290_DS_              Label    0000005F
_00293_DS_              Label    00000090
_00297_DS_              Label    00000075
_00301_DS_              Label    00000040
_00304_DS_              Label    0000000B
_00305_DS_              Label    0000009F
_00313_DS_              Label    00000026
_00318_DS_              Label    00000057
_00321_DS_              Label    00000088
_00325_DS_              Label    0000006D
_00328_DS_              Label    0000003C
_00330_DS_              Label    0000000B
_00331_DS_              Label    00000097
_00336_DS_              Label    0000001E
_00337_DS_              Label    00000028
_00340_DS_              Label    00000031
_00347_DS_              Label    0000000A
_00349_DS_              Label    00000023
_00358_DS_              Label    0000001A
_00366_DS_              Label    00000010
_00371_DS_              Label    00000015
_00375_DS_              Label    0000001C
_00380_DS_              Label    00000021
_00384_DS_              Label    00000028
_00389_DS_              Label    0000002D
_00393_DS_              Label    00000034
_00398_DS_              Label    00000039
_00402_DS_              Label    00000040
_00407_DS_              Label    00000045
_00411_DS_              Label    0000004C
_00416_DS_              Label    00000051
_00420_DS_              Label    00000058
_00425_DS_              Label    0000005D
_00429_DS_              Label    00000064
_00434_DS_              Label    00000069
_00438_DS_              Label    00000070
_00443_DS_              Label    00000075
_00447_DS_              Label    0000007C
_00452_DS_              Label    00000081
_00456_DS_              Label    00000088
_00461_DS_              Label    0000008D
_00465_DS_              Label    00000094
_00470_DS_              Label    00000099
_00474_DS_              Label    000000A0
_00479_DS_              Label    000000A5
_00483_DS_              Label    000000AC
_00488_DS_              Label    000000B1
_00492_DS_              Label    000000B8
_00497_DS_              Label    000000BD
_00501_DS_              Label    000000C4
_00506_DS_              Label    000000C9
_00510_DS_              Label    000000D0
_00515_DS_              Label    000000D5
_00519_DS_              Label    000000DC
_00524_DS_              Label    000000E1
_00528_DS_              Label    000000E8
_00533_DS_              Label    000000ED
_00537_DS_              Label    000000F4
_00542_DS_              Label    000000F9
_00546_DS_              Label    00000100
_00551_DS_              Label    00000105
_00555_DS_              Label    0000010C
_00560_DS_              Label    00000111
_00564_DS_              Label    00000118
_00569_DS_              Label    0000011D
_00573_DS_              Label    00000124
_00578_DS_              Label    00000129
_00586_DS_              Label    00000010
_00591_DS_              Label    00000015
_00595_DS_              Label    0000001C
_00600_DS_              Label    00000021
_00604_DS_              Label    00000028
_00609_DS_              Label    0000002D
_00613_DS_              Label    00000034
_00618_DS_              Label    00000039
_00622_DS_              Label    00000040
_00627_DS_              Label    00000045
_00631_DS_              Label    0000004C
_00636_DS_              Label    00000051
_00640_DS_              Label    00000058
_00645_DS_              Label    0000005D
_00649_DS_              Label    00000064
_00654_DS_              Label    00000069
_00658_DS_              Label    00000070
_00663_DS_              Label    00000075
_00667_DS_              Label    0000007C
_00672_DS_              Label    00000081
_00676_DS_              Label    00000088
_00681_DS_              Label    0000008D
_00685_DS_              Label    00000094
_00690_DS_              Label    00000099
_00694_DS_              Label    000000A0
_00699_DS_              Label    000000A5
_00703_DS_              Label    000000AC
_00708_DS_              Label    000000B1
_00712_DS_              Label    000000B8
_00717_DS_              Label    000000BD
_00721_DS_              Label    000000C4
_00726_DS_              Label    000000C9
_00730_DS_              Label    000000D0
_00735_DS_              Label    000000D5
_00739_DS_              Label    000000DC
_00744_DS_              Label    000000E1
_00748_DS_              Label    000000E8
_00753_DS_              Label    000000ED
_00757_DS_              Label    000000F4
_00762_DS_              Label    000000F9
_00766_DS_              Label    00000100
_00771_DS_              Label    00000105
_00775_DS_              Label    0000010C
_00780_DS_              Label    00000111
_00784_DS_              Label    00000118
_00789_DS_              Label    0000011D
_00793_DS_              Label    00000124
_00798_DS_              Label    00000129
_00805_DS_              Label    00000002
_00807_DS_              Label    0000000D
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_Bdata                  Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_breakFlag              Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_closeCtr               Label    00000000
_closeCtr2              Label    00000000
_CMPCR                  Label    00000000
_count100ms             Label    00000000
_count20s               Label    00000000
_DC                     Label    00000000
_delay                  Label    00000000
_Delay10Us              Label    00000000
_Delay80us              Label    00000000
_FSR                    Label    00000000
_Gdata                  Label    00000000
_INDF                   Label    00000000
_initTimer0             Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCtr                 Label    00000000
_ledStep                Label    00000000
_main                   Label    00000000
_openCtr                Label    00000000
_openCtr2               Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_Rdata                  Label    00000000
_readKey                Label    00000000
_redTime                Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_SC                     Label    00000000
_sendRGB                Label    00000000
_sendRGB2               Label    00000000
_sendRGB3               Label    00000000
_setColor               Label    00000000
_setColor2              Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workStep               Label    00000000
_XD                     Label    00000000
_xdCtr                  Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000039
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1011                 Label    00000000
r0x1012                 Label    00000000
r0x1013                 Label    00000000
r0x1014                 Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
r0x101A                 Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
r0x101D                 Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1035                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a054d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
