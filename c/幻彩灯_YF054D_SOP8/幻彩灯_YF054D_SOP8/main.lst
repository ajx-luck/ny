
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_setColor2
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_AWUCONbits
                                    1-   24     	extern	_INTEDGbits
                                    1-   25     	extern	_RFCbits
                                    1-   26     	extern	_INTE2bits
                                    1-   27     	extern	_INDF
                                    1-   28     	extern	_TMR0
                                    1-   29     	extern	_PCL
                                    1-   30     	extern	_STATUS
                                    1-   31     	extern	_FSR
                                    1-   32     	extern	_PORTA
                                    1-   33     	extern	_PORTB
                                    1-   34     	extern	_PCON
                                    1-   35     	extern	_BWUCON
                                    1-   36     	extern	_PCHBUF
                                    1-   37     	extern	_ABPLCON
                                    1-   38     	extern	_BPHCON
                                    1-   39     	extern	_INTE
                                    1-   40     	extern	_INTF
                                    1-   41     	extern	_AWUCON
                                    1-   42     	extern	_INTEDG
                                    1-   43     	extern	_TMRH
                                    1-   44     	extern	_RFC
                                    1-   45     	extern	_TM34RH
                                    1-   46     	extern	_INTE2
                                    1-   47     	extern	_TMR1
                                    1-   48     	extern	_T1CR1
                                    1-   49     	extern	_T1CR2
                                    1-   50     	extern	_PWM1DUTY
                                    1-   51     	extern	_PS1CV
                                    1-   52     	extern	_BZ1CR
                                    1-   53     	extern	_IRCR
                                    1-   54     	extern	_TBHP
                                    1-   55     	extern	_TBHD
                                    1-   56     	extern	_P2CR1
                                    1-   57     	extern	_PWM2DUTY
                                    1-   58     	extern	_OSCCR
                                    1-   59     	extern	_TMR3
                                    1-   60     	extern	_T3CR1
                                    1-   61     	extern	_T3CR2
                                    1-   62     	extern	_PWM3DUTY
                                    1-   63     	extern	_PS3CV
                                    1-   64     	extern	_P4CR1
                                    1-   65     	extern	_PWM4DUTY
                                    1-   66     	extern	_P5CR1
                                    1-   67     	extern	_PWM5DUTY
                                    1-   68     	extern	_PWM5RH
                                    1-   69     	extern	_IOSTA
                                    1-   70     	extern	_IOSTB
                                    1-   71     	extern	_APHCON
                                    1-   72     	extern	_PS0CV
                                    1-   73     	extern	_BODCON
                                    1-   74     	extern	_CMPCR
                                    1-   75     	extern	_PCON1
                                    1-   76     	extern	_T0MD
                                    1-   77     	extern	___sdcc_saved_fsr
                                    1-   78     	extern	___sdcc_saved_stk00
                                    1-   79     	extern	___sdcc_saved_stk01
                                    1-   80     	extern	__nyc_ny8_startup
                                    1-   81     ;--------------------------------------------------------
                                    1-   82     ; global declarations
                                    1-   83     ;--------------------------------------------------------
                                    1-   84     	extern	_Delay10Us
                                    1-   85     	extern	_sendRGB
                                    1-   86     	extern	_sendRGB2
                                    1-   87     	extern	_delay
                                    1-   88     	extern	_sendRGB3
                                    1-   89     	extern	_closeCtr2
                                    1-   90     	extern	_closeCtr
                                    1-   91     	extern	_openCtr2
                                    1-   92     	extern	_openCtr
                                    1-   93     	extern	_setColor
                                    1-   94     	extern	_initTimer0
                                    1-   95     	extern	_xdCtr
                                    1-   96     	extern	_keyCtr
                                    1-   97     	extern	_readKey
                                    1-   98     	extern	_isr
                                    1-   99     	extern	_main
                                    1-  100     	extern	_Delay80us
                                    1-  101     	extern	_Rdata
                                    1-  102     	extern	_Gdata
                                    1-  103     	extern	_Bdata
                                    1-  104     	extern	_intCount
                                    1-  105     	extern	_IntFlag
                                    1-  106     	extern	_ledStep
                                    1-  107     	extern	_count100ms
                                    1-  108     	extern	_redTime
                                    1-  109     	extern	_workStep
                                    1-  110     	extern	_count20s
                                    1-  111     	extern	_breakFlag
                                    1-  112     	extern	_SC
                                    1-  113     	extern	_XD
                                    1-  114     	extern	_DC
                                    1-  116     	extern PSAVE
                                    1-  117     	extern SSAVE
                                    1-  118     	extern WSAVE
                                    1-  119     	extern STK12
                                    1-  120     	extern STK11
                                    1-  121     	extern STK10
                                    1-  122     	extern STK09
                                    1-  123     	extern STK08
                                    1-  124     	extern STK07
                                    1-  125     	extern STK06
                                    1-  126     	extern STK05
                                    1-  127     	extern STK04
                                    1-  128     	extern STK03
                                    1-  129     	extern STK02
                                    1-  130     	extern STK01
                                    1-  131     	extern STK00
                                    1-  133     .segment "uninit", 0x20000040
 20000040                           1-  134     PSAVE:
                                    1-  135     	.res 1
 20000041                           1-  136     SSAVE:
                                    1-  137     	.res 1
 20000042                           1-  138     WSAVE:
                                    1-  139     	.res 1
 20000043                           1-  140     STK12:
                                    1-  141     	.res 1
 20000044                           1-  142     STK11:
                                    1-  143     	.res 1
 20000045                           1-  144     STK10:
                                    1-  145     	.res 1
 20000046                           1-  146     STK09:
                                    1-  147     	.res 1
 20000047                           1-  148     STK08:
                                    1-  149     	.res 1
 20000048                           1-  150     STK07:
                                    1-  151     	.res 1
 20000049                           1-  152     STK06:
                                    1-  153     	.res 1
 2000004A                           1-  154     STK05:
                                    1-  155     	.res 1
 2000004B                           1-  156     STK04:
                                    1-  157     	.res 1
 2000004C                           1-  158     STK03:
                                    1-  159     	.res 1
 2000004D                           1-  160     STK02:
                                    1-  161     	.res 1
 2000004E                           1-  162     STK01:
                                    1-  163     	.res 1
 2000004F                           1-  164     STK00:
                                    1-  165     	.res 1
                                    1-  167     ;--------------------------------------------------------
                                    1-  168     ; global definitions
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     ;--------------------------------------------------------
                                    1-  171     ; absolute symbol definitions
                                    1-  172     ;--------------------------------------------------------
                                    1-  173     ;--------------------------------------------------------
                                    1-  174     ; compiler-defined variables
                                    1-  175     ;--------------------------------------------------------
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x1036:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x1035:
                                    1-  181     	.res	1
                                    1-  182     .segment "uninit"
     0000                           1-  183     r0x1031:
                                    1-  184     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     r0x1032:
                                    1-  187     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     r0x1033:
                                    1-  190     	.res	1
                                    1-  191     .segment "uninit"
     0000                           1-  192     r0x1034:
                                    1-  193     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     r0x102C:
                                    1-  196     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     r0x102D:
                                    1-  199     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x102E:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x102F:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x1030:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x1027:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1028:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1029:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x102A:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x102B:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1021:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1022:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x1023:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1024:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1025:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1026:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x101C:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x101D:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x101E:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x101F:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1020:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1018:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1017:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1019:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x101A:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x101B:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1013:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1012:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1014:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1015:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1016:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1011:
                                    1-  289     	.res	1
                                    1-  290     ;--------------------------------------------------------
                                    1-  291     ; initialized data
                                    1-  292     ;--------------------------------------------------------
                                    1-  294     .segment "idata"
     0000                           1-  295     _Rdata:
     0000 0000                      1-  296     	dw	0x00
                                    1-  300     .segment "idata"
     0000                           1-  301     _Gdata:
     0000 0000                      1-  302     	dw	0x00
                                    1-  306     .segment "idata"
     0000                           1-  307     _Bdata:
     0000 0000                      1-  308     	dw	0x00
                                    1-  312     .segment "idata"
     0000                           1-  313     _intCount:
     0000 0000                      1-  314     	dw	0x00
                                    1-  318     .segment "idata"
     0000                           1-  319     _IntFlag:
     0000 0000                      1-  320     	dw	0x00
                                    1-  324     .segment "idata"
     0000                           1-  325     _ledStep:
     0000 0000                      1-  326     	dw	0x00
                                    1-  330     .segment "idata"
     0000                           1-  331     _count100ms:
     0000 0000                      1-  332     	dw	0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _redTime:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _workStep:
     0000 0000                      1-  344     	dw	0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _count20s:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _breakFlag:
     0000 0000                      1-  356     	dw	0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _SC:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _XD:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _DC:
     0000 0000                      1-  374     	dw	0x00
                                    1-  377     ;--------------------------------------------------------
                                    1-  378     ; overlayable items in internal ram 
                                    1-  379     ;--------------------------------------------------------
                                    1-  380     ;	udata_ovr
                                    1-  381     ;--------------------------------------------------------
                                    1-  382     ; reset vector 
                                    1-  383     ;--------------------------------------------------------
                                    1-  384     ORG	0x0000
     0000 3rrr                      1-  385     	LGOTO	__nyc_ny8_startup
                                    1-  386     ;--------------------------------------------------------
                                    1-  387     ; interrupt and initialization code
                                    1-  388     ;--------------------------------------------------------
                                    1-  389     ORG 0x0008
     0008 3rrr                      1-  390     	lgoto	__sdcc_interrupt
                                    1-  392     .segment "code"
     0000                           1-  393     __sdcc_interrupt:
                                    1-  394     ;***
                                    1-  395     ;  pBlock Stats: dbName = I
                                    1-  396     ;***
                                    1-  397     ;2 compiler assigned registers:
                                    1-  398     ;   STK00
                                    1-  399     ;   STK01
                                    1-  400     ;; Starting pCode block
     0000                           1-  401     _isr:
                                    1-  402     ; 0 exit points
                                    1-  403     	.line	120, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  404     	MOVAR	WSAVE
     0001 1503                      1-  405     	SWAPR	STATUS,W
     0002 0283                      1-  406     	CLRR	STATUS
     0003 00rr                      1-  407     	MOVAR	SSAVE
     0004 010A                      1-  408     	MOVR	PCHBUF,W
     0005 028A                      1-  409     	CLRR	PCHBUF
     0006 00rr                      1-  410     	MOVAR	PSAVE
     0007 0104                      1-  411     	MOVR	FSR,W
                                    1-  412     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  413     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  414     	MOVR	STK00,W
                                    1-  415     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  416     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  417     	MOVR	STK01,W
                                    1-  418     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  419     	MOVAR	___sdcc_saved_stk01
                                    1-  420     	.line	122, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  421     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  422     	LGOTO	_00110_DS_
                                    1-  423     	.line	124, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  424     	MOVIA	0x37
     0013 03rr                      1-  425     	ADDAR	_TMR0,F
                                    1-  426     	.line	125, "main.c"; 	intCount++;
                                    1-  427     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  428     	INCR	_intCount,F
                                    1-  429     	.line	126, "main.c"; 	if(intCount == 200)
     0016 01rr                      1-  430     	MOVR	_intCount,W
     0017 24C8                      1-  431     	XORIA	0xc8
     0018 0903                      1-  432     	BTRSS	STATUS,2
     0019 3rrr                      1-  433     	LGOTO	_00110_DS_
                                    1-  434     	.line	128, "main.c"; 	intCount = 0;
     001A 02rr                      1-  435     	CLRR	_intCount
                                    1-  436     	.line	129, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  437     	MOVIA	0x01
                                    1-  438     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  439     	MOVAR	_IntFlag
                                    1-  440     	.line	130, "main.c"; 	if(++count100ms >= 10)
                                    1-  441     	BANKSEL	_count100ms
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 05rr                      1-  442     	INCR	_count100ms,F
                                    1-  443     ;;unsigned compare: left < lit (0xA=10), size=1
     0020 210A                      1-  444     	MOVIA	0x0a
     0021 04rr                      1-  445     	SUBAR	_count100ms,W
     0022 0C03                      1-  446     	BTRSC	STATUS,0
                                    1-  447     	.line	132, "main.c"; 	count100ms = 0;
     0023 02rr                      1-  448     	CLRR	_count100ms
     0024                           1-  449     _00110_DS_:
                                    1-  450     	.line	136, "main.c"; 	if(INTFbits.PABIF)
     0024 08rr                      1-  451     	BTRSS	_INTFbits,1
     0025 3rrr                      1-  452     	LGOTO	_00112_DS_
                                    1-  453     	.line	138, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PORTA input change interrupt flag bit)		
     0026 21FD                      1-  454     	MOVIA	0xfd
     0027 00rr                      1-  455     	MOVAR	_INTF
     0028                           1-  456     _00112_DS_:
                                    1-  457     	.line	141, "main.c"; 	INTF = 0;
     0028 02rr                      1-  458     	CLRR	_INTF
                                    1-  459     	.line	143, "main.c"; 	}
                                    1-  460     	BANKSEL	___sdcc_saved_stk01
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  461     	MOVR	___sdcc_saved_stk01,W
     002B 00rr                      1-  462     	MOVAR	STK01
                                    1-  463     	BANKSEL	___sdcc_saved_stk00
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1-  464     	MOVR	___sdcc_saved_stk00,W
     002E 00rr                      1-  465     	MOVAR	STK00
                                    1-  466     	BANKSEL	___sdcc_saved_fsr
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1-  467     	MOVR	___sdcc_saved_fsr,W
     0031 0084                      1-  468     	MOVAR	FSR
     0032 01rr                      1-  469     	MOVR	PSAVE,W
     0033 008A                      1-  470     	MOVAR	PCHBUF
     0034 0283                      1-  471     	CLRR	STATUS
     0035 15rr                      1-  472     	SWAPR	SSAVE,W
     0036 0083                      1-  473     	MOVAR	STATUS
     0037 15rr                      1-  474     	SWAPR	WSAVE,F
     0038 15rr                      1-  475     	SWAPR	WSAVE,W
     0039                           1-  476     END_OF_INTERRUPT:
     0039 0011                      1-  477     	RETIE	
                                    1-  479     ;--------------------------------------------------------
                                    1-  480     ; code
                                    1-  481     ;--------------------------------------------------------
                                    1-  482     ;***
                                    1-  483     ;  pBlock Stats: dbName = M
                                    1-  484     ;***
                                    1-  485     ;has an exit
                                    1-  486     ;functions called:
                                    1-  487     ;   _initTimer0
                                    1-  488     ;   _setColor
                                    1-  489     ;   _readKey
                                    1-  490     ;   _keyCtr
                                    1-  491     ;   _setColor
                                    1-  492     ;   _setColor
                                    1-  493     ;   _setColor
                                    1-  494     ;   _xdCtr
                                    1-  495     ;   _initTimer0
                                    1-  496     ;   _setColor
                                    1-  497     ;   _readKey
                                    1-  498     ;   _keyCtr
                                    1-  499     ;   _setColor
                                    1-  500     ;   _setColor
                                    1-  501     ;   _setColor
                                    1-  502     ;   _xdCtr
                                    1-  503     ;3 compiler assigned registers:
                                    1-  504     ;   STK01
                                    1-  505     ;   STK00
                                    1-  506     ;   r0x1036
                                    1-  507     ;; Starting pCode block
                                    1-  508     .segment "code"; module=main, function=_main
     0000                           1-  510     _main:
                                    1-  511     ; 2 exit points
                                    1-  512     	.line	151, "main.c"; 	initTimer0();
     0000 2rrr                      1-  513     	LCALL	_initTimer0
                                    1-  514     	.line	152, "main.c"; 	setColor(BLACK);
     0001 2100                      1-  515     	MOVIA	0x00
     0002 00rr                      1-  516     	MOVAR	STK01
     0003 00rr                      1-  517     	MOVAR	STK00
     0004 2rrr                      1-  518     	LCALL	_setColor
     0005                           1-  519     _00141_DS_:
                                    1-  520     	.line	155, "main.c"; 	CLRWDT(); 
     0005 0002                      1-  521     	clrwdt
                                    1-  522     	.line	156, "main.c"; 	readKey();
     0006 2rrr                      1-  523     	LCALL	_readKey
                                    1-  524     	.line	157, "main.c"; 	if(!IntFlag)
                                    1-  525     	BANKSEL	_IntFlag
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1-  526     	MOVR	_IntFlag,W
     0009 0D03                      1-  527     	BTRSC	STATUS,2
     000A 3rrr                      1-  528     	LGOTO	_00141_DS_
                                    1-  529     	.line	159, "main.c"; 	IntFlag = 0;
     000B 02rr                      1-  530     	CLRR	_IntFlag
                                    1-  531     	.line	160, "main.c"; 	if(keyCtr())
     000C 2rrr                      1-  532     	LCALL	_keyCtr
                                    1-  533     	BANKSEL	r0x1036
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1-  534     	MOVAR	r0x1036
     000F 01rr                      1-  535     	MOVR	r0x1036,W
     0010 0D03                      1-  536     	BTRSC	STATUS,2
     0011 3rrr                      1-  537     	LGOTO	_00123_DS_
                                    1-  538     	.line	162, "main.c"; 	breakFlag = 1;
     0012 2101                      1-  539     	MOVIA	0x01
                                    1-  540     	BANKSEL	_breakFlag
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1-  541     	MOVAR	_breakFlag
                                    1-  542     	.line	163, "main.c"; 	if(workStep == 2)
                                    1-  543     	BANKSEL	_workStep
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  544     	MOVR	_workStep,W
     0017 2402                      1-  545     	XORIA	0x02
     0018 0903                      1-  546     	BTRSS	STATUS,2
     0019 3rrr                      1-  547     	LGOTO	_00120_DS_
                                    1-  548     	.line	165, "main.c"; 	ledStep = 14;	//如果断开XD就执行关机
     001A 210E                      1-  549     	MOVIA	0x0e
                                    1-  550     	BANKSEL	_ledStep
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  551     	MOVAR	_ledStep
     001D 3rrr                      1-  552     	LGOTO	_00141_DS_
     001E                           1-  553     _00120_DS_:
                                    1-  554     	.line	169, "main.c"; 	ledStep = 1;	//重置led灯状态，如果SC低电平电平就重新开机
     001E 2101                      1-  555     	MOVIA	0x01
                                    1-  556     	BANKSEL	_ledStep
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1-  557     	MOVAR	_ledStep
                                    1-  558     	.line	171, "main.c"; 	continue;
     0021 3rrr                      1-  559     	LGOTO	_00141_DS_
     0022                           1-  560     _00123_DS_:
                                    1-  561     	.line	174, "main.c"; 	if(count100ms == 0)
                                    1-  562     	BANKSEL	_count100ms
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  563     	MOVR	_count100ms,W
     0024 0903                      1-  564     	BTRSS	STATUS,2
     0025 3rrr                      1-  565     	LGOTO	_00141_DS_
                                    1-  566     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  567     ;;unsigned compare: left >= lit (0x33=51), size=1
                                    1-  568     	.line	177, "main.c"; 	if((XD > 50) && workStep == 2)
     0026 2133                      1-  569     	MOVIA	0x33
                                    1-  570     	BANKSEL	_XD
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 04rr                      1-  571     	SUBAR	_XD,W
     0029 0803                      1-  572     	BTRSS	STATUS,0
     002A 3rrr                      1-  573     	LGOTO	_00134_DS_
                                    1-  574     	BANKSEL	_workStep
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1-  575     	MOVR	_workStep,W
     002D 2402                      1-  576     	XORIA	0x02
     002E 0903                      1-  577     	BTRSS	STATUS,2
     002F 3rrr                      1-  578     	LGOTO	_00134_DS_
                                    1-  579     	.line	180, "main.c"; 	if(++count20s >= 200)
                                    1-  580     	BANKSEL	_count20s
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 05rr                      1-  581     	INCR	_count20s,F
                                    1-  582     ;;unsigned compare: left < lit (0xC8=200), size=1
     0032 21C8                      1-  583     	MOVIA	0xc8
     0033 04rr                      1-  584     	SUBAR	_count20s,W
     0034 0803                      1-  585     	BTRSS	STATUS,0
     0035 3rrr                      1-  586     	LGOTO	_00125_DS_
                                    1-  587     	.line	182, "main.c"; 	count20s = 200;
     0036 21C8                      1-  588     	MOVIA	0xc8
     0037 00rr                      1-  589     	MOVAR	_count20s
                                    1-  590     ;;unsigned compare: left < lit (0x64=100), size=1
     0038                           1-  591     _00125_DS_:
                                    1-  592     	.line	184, "main.c"; 	if(count20s < 100)
     0038 2164                      1-  593     	MOVIA	0x64
                                    1-  594     	BANKSEL	_count20s
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1-  595     	SUBAR	_count20s,W
     003B 0C03                      1-  596     	BTRSC	STATUS,0
     003C 3rrr                      1-  597     	LGOTO	_00127_DS_
                                    1-  598     	.line	186, "main.c"; 	setColor(RED4);
     003D 21CC                      1-  599     	MOVIA	0xcc
     003E 00rr                      1-  600     	MOVAR	STK01
     003F 00rr                      1-  601     	MOVAR	STK00
     0040 2rrr                      1-  602     	LCALL	_setColor
     0041 3rrr                      1-  603     	LGOTO	_00141_DS_
     0042                           1-  604     _00127_DS_:
                                    1-  605     	.line	190, "main.c"; 	setColor(RED3);
     0042 214C                      1-  606     	MOVIA	0x4c
     0043 00rr                      1-  607     	MOVAR	STK01
     0044 00rr                      1-  608     	MOVAR	STK00
     0045 2rrr                      1-  609     	LCALL	_setColor
     0046 3rrr                      1-  610     	LGOTO	_00141_DS_
                                    1-  611     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  612     ;;unsigned compare: left >= lit (0x33=51), size=1
     0047                           1-  613     _00134_DS_:
                                    1-  614     	.line	193, "main.c"; 	else if((!(XD > 50)) && workStep == 0)
     0047 2133                      1-  615     	MOVIA	0x33
                                    1-  616     	BANKSEL	_XD
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 04rr                      1-  617     	SUBAR	_XD,W
     004A 0C03                      1-  618     	BTRSC	STATUS,0
     004B 3rrr                      1-  619     	LGOTO	_00130_DS_
                                    1-  620     	BANKSEL	_workStep
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 01rr                      1-  621     	MOVR	_workStep,W
     004E 0903                      1-  622     	BTRSS	STATUS,2
     004F 3rrr                      1-  623     	LGOTO	_00130_DS_
                                    1-  624     	.line	195, "main.c"; 	setColor(BLACK);
     0050 2100                      1-  625     	MOVIA	0x00
     0051 00rr                      1-  626     	MOVAR	STK01
     0052 00rr                      1-  627     	MOVAR	STK00
     0053 2rrr                      1-  628     	LCALL	_setColor
     0054 3rrr                      1-  629     	LGOTO	_00141_DS_
     0055                           1-  630     _00130_DS_:
                                    1-  631     	.line	199, "main.c"; 	count20s = 0;
                                    1-  632     	BANKSEL	_count20s
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 02rr                      1-  633     	CLRR	_count20s
                                    1-  634     	.line	200, "main.c"; 	xdCtr();
     0057 2rrr                      1-  635     	LCALL	_xdCtr
     0058 3rrr                      1-  636     	LGOTO	_00141_DS_
                                    1-  637     	.line	204, "main.c"; 	}
                                    1-  638     	RETURN	
     0059 0010                      3-   26 m1      ret
                                    1-  639     ; exit point of _main
                                    1-  641     ;***
                                    1-  642     ;  pBlock Stats: dbName = C
                                    1-  643     ;***
                                    1-  644     ;has an exit
                                    1-  645     ;; Starting pCode block
                                    1-  646     .segment "code"; module=main, function=_Delay10Us
     0000                           1-  648     _Delay10Us:
                                    1-  649     ; 2 exit points
                                    1-  650     	.line	829, "main.c"; 	NOP();
     0000 0000                      1-  651     	nop
                                    1-  652     	.line	830, "main.c"; 	NOP();
     0001 0000                      1-  653     	nop
                                    1-  654     	.line	831, "main.c"; 	NOP();
     0002 0000                      1-  655     	nop
                                    1-  656     	.line	832, "main.c"; 	NOP();
     0003 0000                      1-  657     	nop
                                    1-  658     	.line	833, "main.c"; 	NOP();
     0004 0000                      1-  659     	nop
                                    1-  660     	.line	834, "main.c"; 	NOP();
     0005 0000                      1-  661     	nop
                                    1-  662     	.line	835, "main.c"; 	}
                                    1-  663     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  664     ; exit point of _Delay10Us
                                    1-  666     ;***
                                    1-  667     ;  pBlock Stats: dbName = C
                                    1-  668     ;***
                                    1-  669     ;has an exit
                                    1-  670     ;1 compiler assigned register :
                                    1-  671     ;   r0x1011
                                    1-  672     ;; Starting pCode block
                                    1-  673     .segment "code"; module=main, function=_Delay80us
                                    1-  675     ;local variable name mapping:
     0000                           1-  677     _Delay80us:
                                    1-  678     ; 2 exit points
                                    1-  679     	.line	819, "main.c"; 	for(unsigned char i=0;i<250;i++)
                                    1-  680     	BANKSEL	r0x1011
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  681     	CLRR	r0x1011
                                    1-  682     ;;unsigned compare: left < lit (0xFA=250), size=1
     0002                           1-  683     _00841_DS_:
     0002 21FA                      1-  684     	MOVIA	0xfa
                                    1-  685     	BANKSEL	r0x1011
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 04rr                      1-  686     	SUBAR	r0x1011,W
     0005 0C03                      1-  687     	BTRSC	STATUS,0
     0006 3rrr                      1-  688     	LGOTO	_00843_DS_
                                    1-  689     	.line	821, "main.c"; 	NOP();
     0007 0000                      1-  690     	nop
                                    1-  691     	.line	822, "main.c"; 	NOP();
     0008 0000                      1-  692     	nop
                                    1-  693     	.line	823, "main.c"; 	NOP();
     0009 0000                      1-  694     	nop
                                    1-  695     	.line	819, "main.c"; 	for(unsigned char i=0;i<250;i++)
                                    1-  696     	BANKSEL	r0x1011
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 05rr                      1-  697     	INCR	r0x1011,F
     000C 3rrr                      1-  698     	LGOTO	_00841_DS_
     000D                           1-  699     _00843_DS_:
                                    1-  700     	.line	825, "main.c"; 	}
                                    1-  701     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1-  702     ; exit point of _Delay80us
                                    1-  704     ;***
                                    1-  705     ;  pBlock Stats: dbName = C
                                    1-  706     ;***
                                    1-  707     ;has an exit
                                    1-  708     ;2 compiler assigned registers:
                                    1-  709     ;   STK00
                                    1-  710     ;   STK01
                                    1-  711     ;; Starting pCode block
                                    1-  712     .segment "code"; module=main, function=_sendRGB
     0000                           1-  714     _sendRGB:
                                    1-  715     ; 2 exit points
                                    1-  716     	.line	703, "main.c"; 	void sendRGB(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1-  717     	BANKSEL	_Rdata
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  718     	MOVAR	_Rdata
     0002 01rr                      1-  719     	MOVR	STK00,W
                                    1-  720     	BANKSEL	_Gdata
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  721     	MOVAR	_Gdata
     0005 01rr                      1-  722     	MOVR	STK01,W
                                    1-  723     	BANKSEL	_Bdata
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  724     	MOVAR	_Bdata
                                    1-  725     	.line	710, "main.c"; 	DISI();	
     0008 0013                      1-  726     	DISI
                                    1-  727     	.line	711, "main.c"; 	if(R7)
                                    1-  728     	BANKSEL	_Rdata
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 0Brr                      1-  729     	BTRSS	_Rdata,7
     000B 3rrr                      1-  730     	LGOTO	_00622_DS_
                                    1-  731     	.line	712, "main.c"; 	NUBA1();
     000C 1Drr                      1-  732     	BCR	_PORTAbits,2
     000D 0000                      1-  733     	nop
     000E 19rr                      1-  734     	BSR	_PORTAbits,2
     000F 3rrr                      1-  735     	LGOTO	_00627_DS_
     0010                           1-  736     _00622_DS_:
                                    1-  737     	.line	714, "main.c"; 	NUBA0();
     0010 1Drr                      1-  738     	BCR	_PORTAbits,2
     0011 0000                      1-  739     	nop
     0012 19rr                      1-  740     	BSR	_PORTAbits,2
     0013 0000                      1-  741     	nop
     0014 1Drr                      1-  742     	BCR	_PORTAbits,2
     0015                           1-  743     _00627_DS_:
                                    1-  744     	.line	715, "main.c"; 	if(R6)
                                    1-  745     	BANKSEL	_Rdata
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 0Brr                      1-  746     	BTRSS	_Rdata,6
     0017 3rrr                      1-  747     	LGOTO	_00631_DS_
                                    1-  748     	.line	716, "main.c"; 	NUBA1();
     0018 1Drr                      1-  749     	BCR	_PORTAbits,2
     0019 0000                      1-  750     	nop
     001A 19rr                      1-  751     	BSR	_PORTAbits,2
     001B 3rrr                      1-  752     	LGOTO	_00636_DS_
     001C                           1-  753     _00631_DS_:
                                    1-  754     	.line	718, "main.c"; 	NUBA0();
     001C 1Drr                      1-  755     	BCR	_PORTAbits,2
     001D 0000                      1-  756     	nop
     001E 19rr                      1-  757     	BSR	_PORTAbits,2
     001F 0000                      1-  758     	nop
     0020 1Drr                      1-  759     	BCR	_PORTAbits,2
     0021                           1-  760     _00636_DS_:
                                    1-  761     	.line	719, "main.c"; 	if(R5)
                                    1-  762     	BANKSEL	_Rdata
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 0Arr                      1-  763     	BTRSS	_Rdata,5
     0023 3rrr                      1-  764     	LGOTO	_00640_DS_
                                    1-  765     	.line	720, "main.c"; 	NUBA1();
     0024 1Drr                      1-  766     	BCR	_PORTAbits,2
     0025 0000                      1-  767     	nop
     0026 19rr                      1-  768     	BSR	_PORTAbits,2
     0027 3rrr                      1-  769     	LGOTO	_00645_DS_
     0028                           1-  770     _00640_DS_:
                                    1-  771     	.line	722, "main.c"; 	NUBA0();
     0028 1Drr                      1-  772     	BCR	_PORTAbits,2
     0029 0000                      1-  773     	nop
     002A 19rr                      1-  774     	BSR	_PORTAbits,2
     002B 0000                      1-  775     	nop
     002C 1Drr                      1-  776     	BCR	_PORTAbits,2
     002D                           1-  777     _00645_DS_:
                                    1-  778     	.line	723, "main.c"; 	if(R4)
                                    1-  779     	BANKSEL	_Rdata
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 0Arr                      1-  780     	BTRSS	_Rdata,4
     002F 3rrr                      1-  781     	LGOTO	_00649_DS_
                                    1-  782     	.line	724, "main.c"; 	NUBA1();
     0030 1Drr                      1-  783     	BCR	_PORTAbits,2
     0031 0000                      1-  784     	nop
     0032 19rr                      1-  785     	BSR	_PORTAbits,2
     0033 3rrr                      1-  786     	LGOTO	_00654_DS_
     0034                           1-  787     _00649_DS_:
                                    1-  788     	.line	726, "main.c"; 	NUBA0();
     0034 1Drr                      1-  789     	BCR	_PORTAbits,2
     0035 0000                      1-  790     	nop
     0036 19rr                      1-  791     	BSR	_PORTAbits,2
     0037 0000                      1-  792     	nop
     0038 1Drr                      1-  793     	BCR	_PORTAbits,2
     0039                           1-  794     _00654_DS_:
                                    1-  795     	.line	727, "main.c"; 	if(R3)
                                    1-  796     	BANKSEL	_Rdata
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 09rr                      1-  797     	BTRSS	_Rdata,3
     003B 3rrr                      1-  798     	LGOTO	_00658_DS_
                                    1-  799     	.line	728, "main.c"; 	NUBA1();
     003C 1Drr                      1-  800     	BCR	_PORTAbits,2
     003D 0000                      1-  801     	nop
     003E 19rr                      1-  802     	BSR	_PORTAbits,2
     003F 3rrr                      1-  803     	LGOTO	_00663_DS_
     0040                           1-  804     _00658_DS_:
                                    1-  805     	.line	730, "main.c"; 	NUBA0();
     0040 1Drr                      1-  806     	BCR	_PORTAbits,2
     0041 0000                      1-  807     	nop
     0042 19rr                      1-  808     	BSR	_PORTAbits,2
     0043 0000                      1-  809     	nop
     0044 1Drr                      1-  810     	BCR	_PORTAbits,2
     0045                           1-  811     _00663_DS_:
                                    1-  812     	.line	731, "main.c"; 	if(R2)
                                    1-  813     	BANKSEL	_Rdata
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 09rr                      1-  814     	BTRSS	_Rdata,2
     0047 3rrr                      1-  815     	LGOTO	_00667_DS_
                                    1-  816     	.line	732, "main.c"; 	NUBA1();
     0048 1Drr                      1-  817     	BCR	_PORTAbits,2
     0049 0000                      1-  818     	nop
     004A 19rr                      1-  819     	BSR	_PORTAbits,2
     004B 3rrr                      1-  820     	LGOTO	_00672_DS_
     004C                           1-  821     _00667_DS_:
                                    1-  822     	.line	734, "main.c"; 	NUBA0();
     004C 1Drr                      1-  823     	BCR	_PORTAbits,2
     004D 0000                      1-  824     	nop
     004E 19rr                      1-  825     	BSR	_PORTAbits,2
     004F 0000                      1-  826     	nop
     0050 1Drr                      1-  827     	BCR	_PORTAbits,2
     0051                           1-  828     _00672_DS_:
                                    1-  829     	.line	735, "main.c"; 	if(R1)
                                    1-  830     	BANKSEL	_Rdata
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 08rr                      1-  831     	BTRSS	_Rdata,1
     0053 3rrr                      1-  832     	LGOTO	_00676_DS_
                                    1-  833     	.line	736, "main.c"; 	NUBA1();
     0054 1Drr                      1-  834     	BCR	_PORTAbits,2
     0055 0000                      1-  835     	nop
     0056 19rr                      1-  836     	BSR	_PORTAbits,2
     0057 3rrr                      1-  837     	LGOTO	_00681_DS_
     0058                           1-  838     _00676_DS_:
                                    1-  839     	.line	738, "main.c"; 	NUBA0();
     0058 1Drr                      1-  840     	BCR	_PORTAbits,2
     0059 0000                      1-  841     	nop
     005A 19rr                      1-  842     	BSR	_PORTAbits,2
     005B 0000                      1-  843     	nop
     005C 1Drr                      1-  844     	BCR	_PORTAbits,2
     005D                           1-  845     _00681_DS_:
                                    1-  846     	.line	739, "main.c"; 	if(R0)
                                    1-  847     	BANKSEL	_Rdata
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 08rr                      1-  848     	BTRSS	_Rdata,0
     005F 3rrr                      1-  849     	LGOTO	_00685_DS_
                                    1-  850     	.line	740, "main.c"; 	NUBA1();
     0060 1Drr                      1-  851     	BCR	_PORTAbits,2
     0061 0000                      1-  852     	nop
     0062 19rr                      1-  853     	BSR	_PORTAbits,2
     0063 3rrr                      1-  854     	LGOTO	_00690_DS_
     0064                           1-  855     _00685_DS_:
                                    1-  856     	.line	742, "main.c"; 	NUBA0();
     0064 1Drr                      1-  857     	BCR	_PORTAbits,2
     0065 0000                      1-  858     	nop
     0066 19rr                      1-  859     	BSR	_PORTAbits,2
     0067 0000                      1-  860     	nop
     0068 1Drr                      1-  861     	BCR	_PORTAbits,2
     0069                           1-  862     _00690_DS_:
                                    1-  863     	.line	744, "main.c"; 	if(G7)
                                    1-  864     	BANKSEL	_Gdata
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 0Brr                      1-  865     	BTRSS	_Gdata,7
     006B 3rrr                      1-  866     	LGOTO	_00694_DS_
                                    1-  867     	.line	745, "main.c"; 	NUBA1();
     006C 1Drr                      1-  868     	BCR	_PORTAbits,2
     006D 0000                      1-  869     	nop
     006E 19rr                      1-  870     	BSR	_PORTAbits,2
     006F 3rrr                      1-  871     	LGOTO	_00699_DS_
     0070                           1-  872     _00694_DS_:
                                    1-  873     	.line	747, "main.c"; 	NUBA0();
     0070 1Drr                      1-  874     	BCR	_PORTAbits,2
     0071 0000                      1-  875     	nop
     0072 19rr                      1-  876     	BSR	_PORTAbits,2
     0073 0000                      1-  877     	nop
     0074 1Drr                      1-  878     	BCR	_PORTAbits,2
     0075                           1-  879     _00699_DS_:
                                    1-  880     	.line	748, "main.c"; 	if(G6)
                                    1-  881     	BANKSEL	_Gdata
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 0Brr                      1-  882     	BTRSS	_Gdata,6
     0077 3rrr                      1-  883     	LGOTO	_00703_DS_
                                    1-  884     	.line	749, "main.c"; 	NUBA1();
     0078 1Drr                      1-  885     	BCR	_PORTAbits,2
     0079 0000                      1-  886     	nop
     007A 19rr                      1-  887     	BSR	_PORTAbits,2
     007B 3rrr                      1-  888     	LGOTO	_00708_DS_
     007C                           1-  889     _00703_DS_:
                                    1-  890     	.line	751, "main.c"; 	NUBA0();
     007C 1Drr                      1-  891     	BCR	_PORTAbits,2
     007D 0000                      1-  892     	nop
     007E 19rr                      1-  893     	BSR	_PORTAbits,2
     007F 0000                      1-  894     	nop
     0080 1Drr                      1-  895     	BCR	_PORTAbits,2
     0081                           1-  896     _00708_DS_:
                                    1-  897     	.line	752, "main.c"; 	if(G5)
                                    1-  898     	BANKSEL	_Gdata
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 0Arr                      1-  899     	BTRSS	_Gdata,5
     0083 3rrr                      1-  900     	LGOTO	_00712_DS_
                                    1-  901     	.line	753, "main.c"; 	NUBA1();
     0084 1Drr                      1-  902     	BCR	_PORTAbits,2
     0085 0000                      1-  903     	nop
     0086 19rr                      1-  904     	BSR	_PORTAbits,2
     0087 3rrr                      1-  905     	LGOTO	_00717_DS_
     0088                           1-  906     _00712_DS_:
                                    1-  907     	.line	755, "main.c"; 	NUBA0();
     0088 1Drr                      1-  908     	BCR	_PORTAbits,2
     0089 0000                      1-  909     	nop
     008A 19rr                      1-  910     	BSR	_PORTAbits,2
     008B 0000                      1-  911     	nop
     008C 1Drr                      1-  912     	BCR	_PORTAbits,2
     008D                           1-  913     _00717_DS_:
                                    1-  914     	.line	756, "main.c"; 	if(G4)
                                    1-  915     	BANKSEL	_Gdata
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 0Arr                      1-  916     	BTRSS	_Gdata,4
     008F 3rrr                      1-  917     	LGOTO	_00721_DS_
                                    1-  918     	.line	757, "main.c"; 	NUBA1();
     0090 1Drr                      1-  919     	BCR	_PORTAbits,2
     0091 0000                      1-  920     	nop
     0092 19rr                      1-  921     	BSR	_PORTAbits,2
     0093 3rrr                      1-  922     	LGOTO	_00726_DS_
     0094                           1-  923     _00721_DS_:
                                    1-  924     	.line	759, "main.c"; 	NUBA0();
     0094 1Drr                      1-  925     	BCR	_PORTAbits,2
     0095 0000                      1-  926     	nop
     0096 19rr                      1-  927     	BSR	_PORTAbits,2
     0097 0000                      1-  928     	nop
     0098 1Drr                      1-  929     	BCR	_PORTAbits,2
     0099                           1-  930     _00726_DS_:
                                    1-  931     	.line	760, "main.c"; 	if(G3)
                                    1-  932     	BANKSEL	_Gdata
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 09rr                      1-  933     	BTRSS	_Gdata,3
     009B 3rrr                      1-  934     	LGOTO	_00730_DS_
                                    1-  935     	.line	761, "main.c"; 	NUBA1();
     009C 1Drr                      1-  936     	BCR	_PORTAbits,2
     009D 0000                      1-  937     	nop
     009E 19rr                      1-  938     	BSR	_PORTAbits,2
     009F 3rrr                      1-  939     	LGOTO	_00735_DS_
     00A0                           1-  940     _00730_DS_:
                                    1-  941     	.line	763, "main.c"; 	NUBA0();
     00A0 1Drr                      1-  942     	BCR	_PORTAbits,2
     00A1 0000                      1-  943     	nop
     00A2 19rr                      1-  944     	BSR	_PORTAbits,2
     00A3 0000                      1-  945     	nop
     00A4 1Drr                      1-  946     	BCR	_PORTAbits,2
     00A5                           1-  947     _00735_DS_:
                                    1-  948     	.line	764, "main.c"; 	if(G2)
                                    1-  949     	BANKSEL	_Gdata
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 09rr                      1-  950     	BTRSS	_Gdata,2
     00A7 3rrr                      1-  951     	LGOTO	_00739_DS_
                                    1-  952     	.line	765, "main.c"; 	NUBA1();
     00A8 1Drr                      1-  953     	BCR	_PORTAbits,2
     00A9 0000                      1-  954     	nop
     00AA 19rr                      1-  955     	BSR	_PORTAbits,2
     00AB 3rrr                      1-  956     	LGOTO	_00744_DS_
     00AC                           1-  957     _00739_DS_:
                                    1-  958     	.line	767, "main.c"; 	NUBA0();
     00AC 1Drr                      1-  959     	BCR	_PORTAbits,2
     00AD 0000                      1-  960     	nop
     00AE 19rr                      1-  961     	BSR	_PORTAbits,2
     00AF 0000                      1-  962     	nop
     00B0 1Drr                      1-  963     	BCR	_PORTAbits,2
     00B1                           1-  964     _00744_DS_:
                                    1-  965     	.line	768, "main.c"; 	if(G1)
                                    1-  966     	BANKSEL	_Gdata
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 08rr                      1-  967     	BTRSS	_Gdata,1
     00B3 3rrr                      1-  968     	LGOTO	_00748_DS_
                                    1-  969     	.line	769, "main.c"; 	NUBA1();
     00B4 1Drr                      1-  970     	BCR	_PORTAbits,2
     00B5 0000                      1-  971     	nop
     00B6 19rr                      1-  972     	BSR	_PORTAbits,2
     00B7 3rrr                      1-  973     	LGOTO	_00753_DS_
     00B8                           1-  974     _00748_DS_:
                                    1-  975     	.line	771, "main.c"; 	NUBA0();
     00B8 1Drr                      1-  976     	BCR	_PORTAbits,2
     00B9 0000                      1-  977     	nop
     00BA 19rr                      1-  978     	BSR	_PORTAbits,2
     00BB 0000                      1-  979     	nop
     00BC 1Drr                      1-  980     	BCR	_PORTAbits,2
     00BD                           1-  981     _00753_DS_:
                                    1-  982     	.line	772, "main.c"; 	if(G0)
                                    1-  983     	BANKSEL	_Gdata
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 08rr                      1-  984     	BTRSS	_Gdata,0
     00BF 3rrr                      1-  985     	LGOTO	_00757_DS_
                                    1-  986     	.line	773, "main.c"; 	NUBA1();
     00C0 1Drr                      1-  987     	BCR	_PORTAbits,2
     00C1 0000                      1-  988     	nop
     00C2 19rr                      1-  989     	BSR	_PORTAbits,2
     00C3 3rrr                      1-  990     	LGOTO	_00762_DS_
     00C4                           1-  991     _00757_DS_:
                                    1-  992     	.line	775, "main.c"; 	NUBA0();
     00C4 1Drr                      1-  993     	BCR	_PORTAbits,2
     00C5 0000                      1-  994     	nop
     00C6 19rr                      1-  995     	BSR	_PORTAbits,2
     00C7 0000                      1-  996     	nop
     00C8 1Drr                      1-  997     	BCR	_PORTAbits,2
     00C9                           1-  998     _00762_DS_:
                                    1-  999     	.line	777, "main.c"; 	if(B7)
                                    1- 1000     	BANKSEL	_Bdata
     00C9 rrrr                      3-   71 m1      .banksel ram_address
     00CA 0Brr                      1- 1001     	BTRSS	_Bdata,7
     00CB 3rrr                      1- 1002     	LGOTO	_00766_DS_
                                    1- 1003     	.line	778, "main.c"; 	NUBA1();
     00CC 1Drr                      1- 1004     	BCR	_PORTAbits,2
     00CD 0000                      1- 1005     	nop
     00CE 19rr                      1- 1006     	BSR	_PORTAbits,2
     00CF 3rrr                      1- 1007     	LGOTO	_00771_DS_
     00D0                           1- 1008     _00766_DS_:
                                    1- 1009     	.line	780, "main.c"; 	NUBA0();
     00D0 1Drr                      1- 1010     	BCR	_PORTAbits,2
     00D1 0000                      1- 1011     	nop
     00D2 19rr                      1- 1012     	BSR	_PORTAbits,2
     00D3 0000                      1- 1013     	nop
     00D4 1Drr                      1- 1014     	BCR	_PORTAbits,2
     00D5                           1- 1015     _00771_DS_:
                                    1- 1016     	.line	781, "main.c"; 	if(B6)
                                    1- 1017     	BANKSEL	_Bdata
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 0Brr                      1- 1018     	BTRSS	_Bdata,6
     00D7 3rrr                      1- 1019     	LGOTO	_00775_DS_
                                    1- 1020     	.line	782, "main.c"; 	NUBA1();
     00D8 1Drr                      1- 1021     	BCR	_PORTAbits,2
     00D9 0000                      1- 1022     	nop
     00DA 19rr                      1- 1023     	BSR	_PORTAbits,2
     00DB 3rrr                      1- 1024     	LGOTO	_00780_DS_
     00DC                           1- 1025     _00775_DS_:
                                    1- 1026     	.line	784, "main.c"; 	NUBA0();
     00DC 1Drr                      1- 1027     	BCR	_PORTAbits,2
     00DD 0000                      1- 1028     	nop
     00DE 19rr                      1- 1029     	BSR	_PORTAbits,2
     00DF 0000                      1- 1030     	nop
     00E0 1Drr                      1- 1031     	BCR	_PORTAbits,2
     00E1                           1- 1032     _00780_DS_:
                                    1- 1033     	.line	785, "main.c"; 	if(B5)
                                    1- 1034     	BANKSEL	_Bdata
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 0Arr                      1- 1035     	BTRSS	_Bdata,5
     00E3 3rrr                      1- 1036     	LGOTO	_00784_DS_
                                    1- 1037     	.line	786, "main.c"; 	NUBA1();
     00E4 1Drr                      1- 1038     	BCR	_PORTAbits,2
     00E5 0000                      1- 1039     	nop
     00E6 19rr                      1- 1040     	BSR	_PORTAbits,2
     00E7 3rrr                      1- 1041     	LGOTO	_00789_DS_
     00E8                           1- 1042     _00784_DS_:
                                    1- 1043     	.line	788, "main.c"; 	NUBA0();
     00E8 1Drr                      1- 1044     	BCR	_PORTAbits,2
     00E9 0000                      1- 1045     	nop
     00EA 19rr                      1- 1046     	BSR	_PORTAbits,2
     00EB 0000                      1- 1047     	nop
     00EC 1Drr                      1- 1048     	BCR	_PORTAbits,2
     00ED                           1- 1049     _00789_DS_:
                                    1- 1050     	.line	789, "main.c"; 	if(B4)
                                    1- 1051     	BANKSEL	_Bdata
     00ED rrrr                      3-   71 m1      .banksel ram_address
     00EE 0Arr                      1- 1052     	BTRSS	_Bdata,4
     00EF 3rrr                      1- 1053     	LGOTO	_00793_DS_
                                    1- 1054     	.line	790, "main.c"; 	NUBA1();
     00F0 1Drr                      1- 1055     	BCR	_PORTAbits,2
     00F1 0000                      1- 1056     	nop
     00F2 19rr                      1- 1057     	BSR	_PORTAbits,2
     00F3 3rrr                      1- 1058     	LGOTO	_00798_DS_
     00F4                           1- 1059     _00793_DS_:
                                    1- 1060     	.line	792, "main.c"; 	NUBA0();
     00F4 1Drr                      1- 1061     	BCR	_PORTAbits,2
     00F5 0000                      1- 1062     	nop
     00F6 19rr                      1- 1063     	BSR	_PORTAbits,2
     00F7 0000                      1- 1064     	nop
     00F8 1Drr                      1- 1065     	BCR	_PORTAbits,2
     00F9                           1- 1066     _00798_DS_:
                                    1- 1067     	.line	793, "main.c"; 	if(B3)
                                    1- 1068     	BANKSEL	_Bdata
     00F9 rrrr                      3-   71 m1      .banksel ram_address
     00FA 09rr                      1- 1069     	BTRSS	_Bdata,3
     00FB 3rrr                      1- 1070     	LGOTO	_00802_DS_
                                    1- 1071     	.line	794, "main.c"; 	NUBA1();
     00FC 1Drr                      1- 1072     	BCR	_PORTAbits,2
     00FD 0000                      1- 1073     	nop
     00FE 19rr                      1- 1074     	BSR	_PORTAbits,2
     00FF 3rrr                      1- 1075     	LGOTO	_00807_DS_
     0100                           1- 1076     _00802_DS_:
                                    1- 1077     	.line	796, "main.c"; 	NUBA0();
     0100 1Drr                      1- 1078     	BCR	_PORTAbits,2
     0101 0000                      1- 1079     	nop
     0102 19rr                      1- 1080     	BSR	_PORTAbits,2
     0103 0000                      1- 1081     	nop
     0104 1Drr                      1- 1082     	BCR	_PORTAbits,2
     0105                           1- 1083     _00807_DS_:
                                    1- 1084     	.line	797, "main.c"; 	if(B2)
                                    1- 1085     	BANKSEL	_Bdata
     0105 rrrr                      3-   71 m1      .banksel ram_address
     0106 09rr                      1- 1086     	BTRSS	_Bdata,2
     0107 3rrr                      1- 1087     	LGOTO	_00811_DS_
                                    1- 1088     	.line	798, "main.c"; 	NUBA1();
     0108 1Drr                      1- 1089     	BCR	_PORTAbits,2
     0109 0000                      1- 1090     	nop
     010A 19rr                      1- 1091     	BSR	_PORTAbits,2
     010B 3rrr                      1- 1092     	LGOTO	_00816_DS_
     010C                           1- 1093     _00811_DS_:
                                    1- 1094     	.line	800, "main.c"; 	NUBA0();
     010C 1Drr                      1- 1095     	BCR	_PORTAbits,2
     010D 0000                      1- 1096     	nop
     010E 19rr                      1- 1097     	BSR	_PORTAbits,2
     010F 0000                      1- 1098     	nop
     0110 1Drr                      1- 1099     	BCR	_PORTAbits,2
     0111                           1- 1100     _00816_DS_:
                                    1- 1101     	.line	801, "main.c"; 	if(B1)
                                    1- 1102     	BANKSEL	_Bdata
     0111 rrrr                      3-   71 m1      .banksel ram_address
     0112 08rr                      1- 1103     	BTRSS	_Bdata,1
     0113 3rrr                      1- 1104     	LGOTO	_00820_DS_
                                    1- 1105     	.line	802, "main.c"; 	NUBA1();
     0114 1Drr                      1- 1106     	BCR	_PORTAbits,2
     0115 0000                      1- 1107     	nop
     0116 19rr                      1- 1108     	BSR	_PORTAbits,2
     0117 3rrr                      1- 1109     	LGOTO	_00825_DS_
     0118                           1- 1110     _00820_DS_:
                                    1- 1111     	.line	804, "main.c"; 	NUBA0();
     0118 1Drr                      1- 1112     	BCR	_PORTAbits,2
     0119 0000                      1- 1113     	nop
     011A 19rr                      1- 1114     	BSR	_PORTAbits,2
     011B 0000                      1- 1115     	nop
     011C 1Drr                      1- 1116     	BCR	_PORTAbits,2
     011D                           1- 1117     _00825_DS_:
                                    1- 1118     	.line	805, "main.c"; 	if(B0)
                                    1- 1119     	BANKSEL	_Bdata
     011D rrrr                      3-   71 m1      .banksel ram_address
     011E 08rr                      1- 1120     	BTRSS	_Bdata,0
     011F 3rrr                      1- 1121     	LGOTO	_00829_DS_
                                    1- 1122     	.line	806, "main.c"; 	NUBA1();
     0120 1Drr                      1- 1123     	BCR	_PORTAbits,2
     0121 0000                      1- 1124     	nop
     0122 19rr                      1- 1125     	BSR	_PORTAbits,2
     0123 3rrr                      1- 1126     	LGOTO	_00834_DS_
     0124                           1- 1127     _00829_DS_:
                                    1- 1128     	.line	808, "main.c"; 	NUBA0();
     0124 1Drr                      1- 1129     	BCR	_PORTAbits,2
     0125 0000                      1- 1130     	nop
     0126 19rr                      1- 1131     	BSR	_PORTAbits,2
     0127 0000                      1- 1132     	nop
     0128 1Drr                      1- 1133     	BCR	_PORTAbits,2
     0129                           1- 1134     _00834_DS_:
                                    1- 1135     	.line	810, "main.c"; 	PORTAbits.PA2 = 0;
     0129 1Drr                      1- 1136     	BCR	_PORTAbits,2
                                    1- 1137     	.line	811, "main.c"; 	ENI();	
     012A 0004                      1- 1138     	ENI
                                    1- 1139     	.line	812, "main.c"; 	}
                                    1- 1140     	RETURN	
     012B 0010                      3-   26 m1      ret
                                    1- 1141     ; exit point of _sendRGB
                                    1- 1143     ;***
                                    1- 1144     ;  pBlock Stats: dbName = C
                                    1- 1145     ;***
                                    1- 1146     ;has an exit
                                    1- 1147     ;2 compiler assigned registers:
                                    1- 1148     ;   STK00
                                    1- 1149     ;   STK01
                                    1- 1150     ;; Starting pCode block
                                    1- 1151     .segment "code"; module=main, function=_sendRGB2
     0000                           1- 1153     _sendRGB2:
                                    1- 1154     ; 2 exit points
                                    1- 1155     	.line	590, "main.c"; 	void sendRGB2(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 1156     	BANKSEL	_Bdata
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1157     	MOVAR	_Bdata
     0002 01rr                      1- 1158     	MOVR	STK00,W
                                    1- 1159     	BANKSEL	_Gdata
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1160     	MOVAR	_Gdata
     0005 01rr                      1- 1161     	MOVR	STK01,W
                                    1- 1162     	BANKSEL	_Rdata
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1163     	MOVAR	_Rdata
                                    1- 1164     	.line	597, "main.c"; 	DISI();	
     0008 0013                      1- 1165     	DISI
                                    1- 1166     	.line	598, "main.c"; 	if(R7)
                                    1- 1167     	BANKSEL	_Rdata
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 0Brr                      1- 1168     	BTRSS	_Rdata,7
     000B 3rrr                      1- 1169     	LGOTO	_00402_DS_
                                    1- 1170     	.line	599, "main.c"; 	NUB1();
     000C 1Frr                      1- 1171     	BCR	_PORTAbits,6
     000D 0000                      1- 1172     	nop
     000E 1Brr                      1- 1173     	BSR	_PORTAbits,6
     000F 3rrr                      1- 1174     	LGOTO	_00407_DS_
     0010                           1- 1175     _00402_DS_:
                                    1- 1176     	.line	601, "main.c"; 	NUB0();
     0010 1Frr                      1- 1177     	BCR	_PORTAbits,6
     0011 0000                      1- 1178     	nop
     0012 1Brr                      1- 1179     	BSR	_PORTAbits,6
     0013 0000                      1- 1180     	nop
     0014 1Frr                      1- 1181     	BCR	_PORTAbits,6
     0015                           1- 1182     _00407_DS_:
                                    1- 1183     	.line	602, "main.c"; 	if(R6)
                                    1- 1184     	BANKSEL	_Rdata
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 0Brr                      1- 1185     	BTRSS	_Rdata,6
     0017 3rrr                      1- 1186     	LGOTO	_00411_DS_
                                    1- 1187     	.line	603, "main.c"; 	NUB1();
     0018 1Frr                      1- 1188     	BCR	_PORTAbits,6
     0019 0000                      1- 1189     	nop
     001A 1Brr                      1- 1190     	BSR	_PORTAbits,6
     001B 3rrr                      1- 1191     	LGOTO	_00416_DS_
     001C                           1- 1192     _00411_DS_:
                                    1- 1193     	.line	605, "main.c"; 	NUB0();
     001C 1Frr                      1- 1194     	BCR	_PORTAbits,6
     001D 0000                      1- 1195     	nop
     001E 1Brr                      1- 1196     	BSR	_PORTAbits,6
     001F 0000                      1- 1197     	nop
     0020 1Frr                      1- 1198     	BCR	_PORTAbits,6
     0021                           1- 1199     _00416_DS_:
                                    1- 1200     	.line	606, "main.c"; 	if(R5)
                                    1- 1201     	BANKSEL	_Rdata
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 0Arr                      1- 1202     	BTRSS	_Rdata,5
     0023 3rrr                      1- 1203     	LGOTO	_00420_DS_
                                    1- 1204     	.line	607, "main.c"; 	NUB1();
     0024 1Frr                      1- 1205     	BCR	_PORTAbits,6
     0025 0000                      1- 1206     	nop
     0026 1Brr                      1- 1207     	BSR	_PORTAbits,6
     0027 3rrr                      1- 1208     	LGOTO	_00425_DS_
     0028                           1- 1209     _00420_DS_:
                                    1- 1210     	.line	609, "main.c"; 	NUB0();
     0028 1Frr                      1- 1211     	BCR	_PORTAbits,6
     0029 0000                      1- 1212     	nop
     002A 1Brr                      1- 1213     	BSR	_PORTAbits,6
     002B 0000                      1- 1214     	nop
     002C 1Frr                      1- 1215     	BCR	_PORTAbits,6
     002D                           1- 1216     _00425_DS_:
                                    1- 1217     	.line	610, "main.c"; 	if(R4)
                                    1- 1218     	BANKSEL	_Rdata
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 0Arr                      1- 1219     	BTRSS	_Rdata,4
     002F 3rrr                      1- 1220     	LGOTO	_00429_DS_
                                    1- 1221     	.line	611, "main.c"; 	NUB1();
     0030 1Frr                      1- 1222     	BCR	_PORTAbits,6
     0031 0000                      1- 1223     	nop
     0032 1Brr                      1- 1224     	BSR	_PORTAbits,6
     0033 3rrr                      1- 1225     	LGOTO	_00434_DS_
     0034                           1- 1226     _00429_DS_:
                                    1- 1227     	.line	613, "main.c"; 	NUB0();
     0034 1Frr                      1- 1228     	BCR	_PORTAbits,6
     0035 0000                      1- 1229     	nop
     0036 1Brr                      1- 1230     	BSR	_PORTAbits,6
     0037 0000                      1- 1231     	nop
     0038 1Frr                      1- 1232     	BCR	_PORTAbits,6
     0039                           1- 1233     _00434_DS_:
                                    1- 1234     	.line	614, "main.c"; 	if(R3)
                                    1- 1235     	BANKSEL	_Rdata
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 09rr                      1- 1236     	BTRSS	_Rdata,3
     003B 3rrr                      1- 1237     	LGOTO	_00438_DS_
                                    1- 1238     	.line	615, "main.c"; 	NUB1();
     003C 1Frr                      1- 1239     	BCR	_PORTAbits,6
     003D 0000                      1- 1240     	nop
     003E 1Brr                      1- 1241     	BSR	_PORTAbits,6
     003F 3rrr                      1- 1242     	LGOTO	_00443_DS_
     0040                           1- 1243     _00438_DS_:
                                    1- 1244     	.line	617, "main.c"; 	NUB0();
     0040 1Frr                      1- 1245     	BCR	_PORTAbits,6
     0041 0000                      1- 1246     	nop
     0042 1Brr                      1- 1247     	BSR	_PORTAbits,6
     0043 0000                      1- 1248     	nop
     0044 1Frr                      1- 1249     	BCR	_PORTAbits,6
     0045                           1- 1250     _00443_DS_:
                                    1- 1251     	.line	618, "main.c"; 	if(R2)
                                    1- 1252     	BANKSEL	_Rdata
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 09rr                      1- 1253     	BTRSS	_Rdata,2
     0047 3rrr                      1- 1254     	LGOTO	_00447_DS_
                                    1- 1255     	.line	619, "main.c"; 	NUB1();
     0048 1Frr                      1- 1256     	BCR	_PORTAbits,6
     0049 0000                      1- 1257     	nop
     004A 1Brr                      1- 1258     	BSR	_PORTAbits,6
     004B 3rrr                      1- 1259     	LGOTO	_00452_DS_
     004C                           1- 1260     _00447_DS_:
                                    1- 1261     	.line	621, "main.c"; 	NUB0();
     004C 1Frr                      1- 1262     	BCR	_PORTAbits,6
     004D 0000                      1- 1263     	nop
     004E 1Brr                      1- 1264     	BSR	_PORTAbits,6
     004F 0000                      1- 1265     	nop
     0050 1Frr                      1- 1266     	BCR	_PORTAbits,6
     0051                           1- 1267     _00452_DS_:
                                    1- 1268     	.line	622, "main.c"; 	if(R1)
                                    1- 1269     	BANKSEL	_Rdata
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 08rr                      1- 1270     	BTRSS	_Rdata,1
     0053 3rrr                      1- 1271     	LGOTO	_00456_DS_
                                    1- 1272     	.line	623, "main.c"; 	NUB1();
     0054 1Frr                      1- 1273     	BCR	_PORTAbits,6
     0055 0000                      1- 1274     	nop
     0056 1Brr                      1- 1275     	BSR	_PORTAbits,6
     0057 3rrr                      1- 1276     	LGOTO	_00461_DS_
     0058                           1- 1277     _00456_DS_:
                                    1- 1278     	.line	625, "main.c"; 	NUB0();
     0058 1Frr                      1- 1279     	BCR	_PORTAbits,6
     0059 0000                      1- 1280     	nop
     005A 1Brr                      1- 1281     	BSR	_PORTAbits,6
     005B 0000                      1- 1282     	nop
     005C 1Frr                      1- 1283     	BCR	_PORTAbits,6
     005D                           1- 1284     _00461_DS_:
                                    1- 1285     	.line	626, "main.c"; 	if(R0)
                                    1- 1286     	BANKSEL	_Rdata
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 08rr                      1- 1287     	BTRSS	_Rdata,0
     005F 3rrr                      1- 1288     	LGOTO	_00465_DS_
                                    1- 1289     	.line	627, "main.c"; 	NUB1();
     0060 1Frr                      1- 1290     	BCR	_PORTAbits,6
     0061 0000                      1- 1291     	nop
     0062 1Brr                      1- 1292     	BSR	_PORTAbits,6
     0063 3rrr                      1- 1293     	LGOTO	_00470_DS_
     0064                           1- 1294     _00465_DS_:
                                    1- 1295     	.line	629, "main.c"; 	NUB0();
     0064 1Frr                      1- 1296     	BCR	_PORTAbits,6
     0065 0000                      1- 1297     	nop
     0066 1Brr                      1- 1298     	BSR	_PORTAbits,6
     0067 0000                      1- 1299     	nop
     0068 1Frr                      1- 1300     	BCR	_PORTAbits,6
     0069                           1- 1301     _00470_DS_:
                                    1- 1302     	.line	631, "main.c"; 	if(G7)
                                    1- 1303     	BANKSEL	_Gdata
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 0Brr                      1- 1304     	BTRSS	_Gdata,7
     006B 3rrr                      1- 1305     	LGOTO	_00474_DS_
                                    1- 1306     	.line	632, "main.c"; 	NUB1();
     006C 1Frr                      1- 1307     	BCR	_PORTAbits,6
     006D 0000                      1- 1308     	nop
     006E 1Brr                      1- 1309     	BSR	_PORTAbits,6
     006F 3rrr                      1- 1310     	LGOTO	_00479_DS_
     0070                           1- 1311     _00474_DS_:
                                    1- 1312     	.line	634, "main.c"; 	NUB0();
     0070 1Frr                      1- 1313     	BCR	_PORTAbits,6
     0071 0000                      1- 1314     	nop
     0072 1Brr                      1- 1315     	BSR	_PORTAbits,6
     0073 0000                      1- 1316     	nop
     0074 1Frr                      1- 1317     	BCR	_PORTAbits,6
     0075                           1- 1318     _00479_DS_:
                                    1- 1319     	.line	635, "main.c"; 	if(G6)
                                    1- 1320     	BANKSEL	_Gdata
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 0Brr                      1- 1321     	BTRSS	_Gdata,6
     0077 3rrr                      1- 1322     	LGOTO	_00483_DS_
                                    1- 1323     	.line	636, "main.c"; 	NUB1();
     0078 1Frr                      1- 1324     	BCR	_PORTAbits,6
     0079 0000                      1- 1325     	nop
     007A 1Brr                      1- 1326     	BSR	_PORTAbits,6
     007B 3rrr                      1- 1327     	LGOTO	_00488_DS_
     007C                           1- 1328     _00483_DS_:
                                    1- 1329     	.line	638, "main.c"; 	NUB0();
     007C 1Frr                      1- 1330     	BCR	_PORTAbits,6
     007D 0000                      1- 1331     	nop
     007E 1Brr                      1- 1332     	BSR	_PORTAbits,6
     007F 0000                      1- 1333     	nop
     0080 1Frr                      1- 1334     	BCR	_PORTAbits,6
     0081                           1- 1335     _00488_DS_:
                                    1- 1336     	.line	639, "main.c"; 	if(G5)
                                    1- 1337     	BANKSEL	_Gdata
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 0Arr                      1- 1338     	BTRSS	_Gdata,5
     0083 3rrr                      1- 1339     	LGOTO	_00492_DS_
                                    1- 1340     	.line	640, "main.c"; 	NUB1();
     0084 1Frr                      1- 1341     	BCR	_PORTAbits,6
     0085 0000                      1- 1342     	nop
     0086 1Brr                      1- 1343     	BSR	_PORTAbits,6
     0087 3rrr                      1- 1344     	LGOTO	_00497_DS_
     0088                           1- 1345     _00492_DS_:
                                    1- 1346     	.line	642, "main.c"; 	NUB0();
     0088 1Frr                      1- 1347     	BCR	_PORTAbits,6
     0089 0000                      1- 1348     	nop
     008A 1Brr                      1- 1349     	BSR	_PORTAbits,6
     008B 0000                      1- 1350     	nop
     008C 1Frr                      1- 1351     	BCR	_PORTAbits,6
     008D                           1- 1352     _00497_DS_:
                                    1- 1353     	.line	643, "main.c"; 	if(G4)
                                    1- 1354     	BANKSEL	_Gdata
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 0Arr                      1- 1355     	BTRSS	_Gdata,4
     008F 3rrr                      1- 1356     	LGOTO	_00501_DS_
                                    1- 1357     	.line	644, "main.c"; 	NUB1();
     0090 1Frr                      1- 1358     	BCR	_PORTAbits,6
     0091 0000                      1- 1359     	nop
     0092 1Brr                      1- 1360     	BSR	_PORTAbits,6
     0093 3rrr                      1- 1361     	LGOTO	_00506_DS_
     0094                           1- 1362     _00501_DS_:
                                    1- 1363     	.line	646, "main.c"; 	NUB0();
     0094 1Frr                      1- 1364     	BCR	_PORTAbits,6
     0095 0000                      1- 1365     	nop
     0096 1Brr                      1- 1366     	BSR	_PORTAbits,6
     0097 0000                      1- 1367     	nop
     0098 1Frr                      1- 1368     	BCR	_PORTAbits,6
     0099                           1- 1369     _00506_DS_:
                                    1- 1370     	.line	647, "main.c"; 	if(G3)
                                    1- 1371     	BANKSEL	_Gdata
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 09rr                      1- 1372     	BTRSS	_Gdata,3
     009B 3rrr                      1- 1373     	LGOTO	_00510_DS_
                                    1- 1374     	.line	648, "main.c"; 	NUB1();
     009C 1Frr                      1- 1375     	BCR	_PORTAbits,6
     009D 0000                      1- 1376     	nop
     009E 1Brr                      1- 1377     	BSR	_PORTAbits,6
     009F 3rrr                      1- 1378     	LGOTO	_00515_DS_
     00A0                           1- 1379     _00510_DS_:
                                    1- 1380     	.line	650, "main.c"; 	NUB0();
     00A0 1Frr                      1- 1381     	BCR	_PORTAbits,6
     00A1 0000                      1- 1382     	nop
     00A2 1Brr                      1- 1383     	BSR	_PORTAbits,6
     00A3 0000                      1- 1384     	nop
     00A4 1Frr                      1- 1385     	BCR	_PORTAbits,6
     00A5                           1- 1386     _00515_DS_:
                                    1- 1387     	.line	651, "main.c"; 	if(G2)
                                    1- 1388     	BANKSEL	_Gdata
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 09rr                      1- 1389     	BTRSS	_Gdata,2
     00A7 3rrr                      1- 1390     	LGOTO	_00519_DS_
                                    1- 1391     	.line	652, "main.c"; 	NUB1();
     00A8 1Frr                      1- 1392     	BCR	_PORTAbits,6
     00A9 0000                      1- 1393     	nop
     00AA 1Brr                      1- 1394     	BSR	_PORTAbits,6
     00AB 3rrr                      1- 1395     	LGOTO	_00524_DS_
     00AC                           1- 1396     _00519_DS_:
                                    1- 1397     	.line	654, "main.c"; 	NUB0();
     00AC 1Frr                      1- 1398     	BCR	_PORTAbits,6
     00AD 0000                      1- 1399     	nop
     00AE 1Brr                      1- 1400     	BSR	_PORTAbits,6
     00AF 0000                      1- 1401     	nop
     00B0 1Frr                      1- 1402     	BCR	_PORTAbits,6
     00B1                           1- 1403     _00524_DS_:
                                    1- 1404     	.line	655, "main.c"; 	if(G1)
                                    1- 1405     	BANKSEL	_Gdata
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 08rr                      1- 1406     	BTRSS	_Gdata,1
     00B3 3rrr                      1- 1407     	LGOTO	_00528_DS_
                                    1- 1408     	.line	656, "main.c"; 	NUB1();
     00B4 1Frr                      1- 1409     	BCR	_PORTAbits,6
     00B5 0000                      1- 1410     	nop
     00B6 1Brr                      1- 1411     	BSR	_PORTAbits,6
     00B7 3rrr                      1- 1412     	LGOTO	_00533_DS_
     00B8                           1- 1413     _00528_DS_:
                                    1- 1414     	.line	658, "main.c"; 	NUB0();
     00B8 1Frr                      1- 1415     	BCR	_PORTAbits,6
     00B9 0000                      1- 1416     	nop
     00BA 1Brr                      1- 1417     	BSR	_PORTAbits,6
     00BB 0000                      1- 1418     	nop
     00BC 1Frr                      1- 1419     	BCR	_PORTAbits,6
     00BD                           1- 1420     _00533_DS_:
                                    1- 1421     	.line	659, "main.c"; 	if(G0)
                                    1- 1422     	BANKSEL	_Gdata
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 08rr                      1- 1423     	BTRSS	_Gdata,0
     00BF 3rrr                      1- 1424     	LGOTO	_00537_DS_
                                    1- 1425     	.line	660, "main.c"; 	NUB1();
     00C0 1Frr                      1- 1426     	BCR	_PORTAbits,6
     00C1 0000                      1- 1427     	nop
     00C2 1Brr                      1- 1428     	BSR	_PORTAbits,6
     00C3 3rrr                      1- 1429     	LGOTO	_00542_DS_
     00C4                           1- 1430     _00537_DS_:
                                    1- 1431     	.line	662, "main.c"; 	NUB0();
     00C4 1Frr                      1- 1432     	BCR	_PORTAbits,6
     00C5 0000                      1- 1433     	nop
     00C6 1Brr                      1- 1434     	BSR	_PORTAbits,6
     00C7 0000                      1- 1435     	nop
     00C8 1Frr                      1- 1436     	BCR	_PORTAbits,6
     00C9                           1- 1437     _00542_DS_:
                                    1- 1438     	.line	664, "main.c"; 	if(B7)
                                    1- 1439     	BANKSEL	_Bdata
     00C9 rrrr                      3-   71 m1      .banksel ram_address
     00CA 0Brr                      1- 1440     	BTRSS	_Bdata,7
     00CB 3rrr                      1- 1441     	LGOTO	_00546_DS_
                                    1- 1442     	.line	665, "main.c"; 	NUB1();
     00CC 1Frr                      1- 1443     	BCR	_PORTAbits,6
     00CD 0000                      1- 1444     	nop
     00CE 1Brr                      1- 1445     	BSR	_PORTAbits,6
     00CF 3rrr                      1- 1446     	LGOTO	_00551_DS_
     00D0                           1- 1447     _00546_DS_:
                                    1- 1448     	.line	667, "main.c"; 	NUB0();
     00D0 1Frr                      1- 1449     	BCR	_PORTAbits,6
     00D1 0000                      1- 1450     	nop
     00D2 1Brr                      1- 1451     	BSR	_PORTAbits,6
     00D3 0000                      1- 1452     	nop
     00D4 1Frr                      1- 1453     	BCR	_PORTAbits,6
     00D5                           1- 1454     _00551_DS_:
                                    1- 1455     	.line	668, "main.c"; 	if(B6)
                                    1- 1456     	BANKSEL	_Bdata
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 0Brr                      1- 1457     	BTRSS	_Bdata,6
     00D7 3rrr                      1- 1458     	LGOTO	_00555_DS_
                                    1- 1459     	.line	669, "main.c"; 	NUB1();
     00D8 1Frr                      1- 1460     	BCR	_PORTAbits,6
     00D9 0000                      1- 1461     	nop
     00DA 1Brr                      1- 1462     	BSR	_PORTAbits,6
     00DB 3rrr                      1- 1463     	LGOTO	_00560_DS_
     00DC                           1- 1464     _00555_DS_:
                                    1- 1465     	.line	671, "main.c"; 	NUB0();
     00DC 1Frr                      1- 1466     	BCR	_PORTAbits,6
     00DD 0000                      1- 1467     	nop
     00DE 1Brr                      1- 1468     	BSR	_PORTAbits,6
     00DF 0000                      1- 1469     	nop
     00E0 1Frr                      1- 1470     	BCR	_PORTAbits,6
     00E1                           1- 1471     _00560_DS_:
                                    1- 1472     	.line	672, "main.c"; 	if(B5)
                                    1- 1473     	BANKSEL	_Bdata
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 0Arr                      1- 1474     	BTRSS	_Bdata,5
     00E3 3rrr                      1- 1475     	LGOTO	_00564_DS_
                                    1- 1476     	.line	673, "main.c"; 	NUB1();
     00E4 1Frr                      1- 1477     	BCR	_PORTAbits,6
     00E5 0000                      1- 1478     	nop
     00E6 1Brr                      1- 1479     	BSR	_PORTAbits,6
     00E7 3rrr                      1- 1480     	LGOTO	_00569_DS_
     00E8                           1- 1481     _00564_DS_:
                                    1- 1482     	.line	675, "main.c"; 	NUB0();
     00E8 1Frr                      1- 1483     	BCR	_PORTAbits,6
     00E9 0000                      1- 1484     	nop
     00EA 1Brr                      1- 1485     	BSR	_PORTAbits,6
     00EB 0000                      1- 1486     	nop
     00EC 1Frr                      1- 1487     	BCR	_PORTAbits,6
     00ED                           1- 1488     _00569_DS_:
                                    1- 1489     	.line	676, "main.c"; 	if(B4)
                                    1- 1490     	BANKSEL	_Bdata
     00ED rrrr                      3-   71 m1      .banksel ram_address
     00EE 0Arr                      1- 1491     	BTRSS	_Bdata,4
     00EF 3rrr                      1- 1492     	LGOTO	_00573_DS_
                                    1- 1493     	.line	677, "main.c"; 	NUB1();
     00F0 1Frr                      1- 1494     	BCR	_PORTAbits,6
     00F1 0000                      1- 1495     	nop
     00F2 1Brr                      1- 1496     	BSR	_PORTAbits,6
     00F3 3rrr                      1- 1497     	LGOTO	_00578_DS_
     00F4                           1- 1498     _00573_DS_:
                                    1- 1499     	.line	679, "main.c"; 	NUB0();
     00F4 1Frr                      1- 1500     	BCR	_PORTAbits,6
     00F5 0000                      1- 1501     	nop
     00F6 1Brr                      1- 1502     	BSR	_PORTAbits,6
     00F7 0000                      1- 1503     	nop
     00F8 1Frr                      1- 1504     	BCR	_PORTAbits,6
     00F9                           1- 1505     _00578_DS_:
                                    1- 1506     	.line	680, "main.c"; 	if(B3)
                                    1- 1507     	BANKSEL	_Bdata
     00F9 rrrr                      3-   71 m1      .banksel ram_address
     00FA 09rr                      1- 1508     	BTRSS	_Bdata,3
     00FB 3rrr                      1- 1509     	LGOTO	_00582_DS_
                                    1- 1510     	.line	681, "main.c"; 	NUB1();
     00FC 1Frr                      1- 1511     	BCR	_PORTAbits,6
     00FD 0000                      1- 1512     	nop
     00FE 1Brr                      1- 1513     	BSR	_PORTAbits,6
     00FF 3rrr                      1- 1514     	LGOTO	_00587_DS_
     0100                           1- 1515     _00582_DS_:
                                    1- 1516     	.line	683, "main.c"; 	NUB0();
     0100 1Frr                      1- 1517     	BCR	_PORTAbits,6
     0101 0000                      1- 1518     	nop
     0102 1Brr                      1- 1519     	BSR	_PORTAbits,6
     0103 0000                      1- 1520     	nop
     0104 1Frr                      1- 1521     	BCR	_PORTAbits,6
     0105                           1- 1522     _00587_DS_:
                                    1- 1523     	.line	684, "main.c"; 	if(B2)
                                    1- 1524     	BANKSEL	_Bdata
     0105 rrrr                      3-   71 m1      .banksel ram_address
     0106 09rr                      1- 1525     	BTRSS	_Bdata,2
     0107 3rrr                      1- 1526     	LGOTO	_00591_DS_
                                    1- 1527     	.line	685, "main.c"; 	NUB1();
     0108 1Frr                      1- 1528     	BCR	_PORTAbits,6
     0109 0000                      1- 1529     	nop
     010A 1Brr                      1- 1530     	BSR	_PORTAbits,6
     010B 3rrr                      1- 1531     	LGOTO	_00596_DS_
     010C                           1- 1532     _00591_DS_:
                                    1- 1533     	.line	687, "main.c"; 	NUB0();
     010C 1Frr                      1- 1534     	BCR	_PORTAbits,6
     010D 0000                      1- 1535     	nop
     010E 1Brr                      1- 1536     	BSR	_PORTAbits,6
     010F 0000                      1- 1537     	nop
     0110 1Frr                      1- 1538     	BCR	_PORTAbits,6
     0111                           1- 1539     _00596_DS_:
                                    1- 1540     	.line	688, "main.c"; 	if(B1)
                                    1- 1541     	BANKSEL	_Bdata
     0111 rrrr                      3-   71 m1      .banksel ram_address
     0112 08rr                      1- 1542     	BTRSS	_Bdata,1
     0113 3rrr                      1- 1543     	LGOTO	_00600_DS_
                                    1- 1544     	.line	689, "main.c"; 	NUB1();
     0114 1Frr                      1- 1545     	BCR	_PORTAbits,6
     0115 0000                      1- 1546     	nop
     0116 1Brr                      1- 1547     	BSR	_PORTAbits,6
     0117 3rrr                      1- 1548     	LGOTO	_00605_DS_
     0118                           1- 1549     _00600_DS_:
                                    1- 1550     	.line	691, "main.c"; 	NUB0();
     0118 1Frr                      1- 1551     	BCR	_PORTAbits,6
     0119 0000                      1- 1552     	nop
     011A 1Brr                      1- 1553     	BSR	_PORTAbits,6
     011B 0000                      1- 1554     	nop
     011C 1Frr                      1- 1555     	BCR	_PORTAbits,6
     011D                           1- 1556     _00605_DS_:
                                    1- 1557     	.line	692, "main.c"; 	if(B0)
                                    1- 1558     	BANKSEL	_Bdata
     011D rrrr                      3-   71 m1      .banksel ram_address
     011E 08rr                      1- 1559     	BTRSS	_Bdata,0
     011F 3rrr                      1- 1560     	LGOTO	_00609_DS_
                                    1- 1561     	.line	693, "main.c"; 	NUB1();
     0120 1Frr                      1- 1562     	BCR	_PORTAbits,6
     0121 0000                      1- 1563     	nop
     0122 1Brr                      1- 1564     	BSR	_PORTAbits,6
     0123 3rrr                      1- 1565     	LGOTO	_00614_DS_
     0124                           1- 1566     _00609_DS_:
                                    1- 1567     	.line	695, "main.c"; 	NUB0();
     0124 1Frr                      1- 1568     	BCR	_PORTAbits,6
     0125 0000                      1- 1569     	nop
     0126 1Brr                      1- 1570     	BSR	_PORTAbits,6
     0127 0000                      1- 1571     	nop
     0128 1Frr                      1- 1572     	BCR	_PORTAbits,6
     0129                           1- 1573     _00614_DS_:
                                    1- 1574     	.line	697, "main.c"; 	PORTAbits.PA6 = 0;
     0129 1Frr                      1- 1575     	BCR	_PORTAbits,6
                                    1- 1576     	.line	698, "main.c"; 	ENI();	
     012A 0004                      1- 1577     	ENI
                                    1- 1578     	.line	699, "main.c"; 	}
                                    1- 1579     	RETURN	
     012B 0010                      3-   26 m1      ret
                                    1- 1580     ; exit point of _sendRGB2
                                    1- 1582     ;***
                                    1- 1583     ;  pBlock Stats: dbName = C
                                    1- 1584     ;***
                                    1- 1585     ;has an exit
                                    1- 1586     ;6 compiler assigned registers:
                                    1- 1587     ;   r0x1012
                                    1- 1588     ;   STK00
                                    1- 1589     ;   r0x1013
                                    1- 1590     ;   r0x1014
                                    1- 1591     ;   r0x1015
                                    1- 1592     ;   r0x1016
                                    1- 1593     ;; Starting pCode block
                                    1- 1594     .segment "code"; module=main, function=_delay
                                    1- 1596     ;local variable name mapping:
     0000                           1- 1601     _delay:
                                    1- 1602     ; 2 exit points
                                    1- 1603     	.line	582, "main.c"; 	void delay(int count)
                                    1- 1604     	BANKSEL	r0x1012
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1605     	MOVAR	r0x1012
     0002 01rr                      1- 1606     	MOVR	STK00,W
                                    1- 1607     	BANKSEL	r0x1013
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1608     	MOVAR	r0x1013
                                    1- 1609     	.line	585, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1- 1610     	MOVIA	0x01
                                    1- 1611     	BANKSEL	r0x1014
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1612     	MOVAR	r0x1014
                                    1- 1613     	BANKSEL	r0x1015
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 1614     	CLRR	r0x1015
     000A                           1- 1615     _00383_DS_:
                                    1- 1616     	BANKSEL	r0x1012
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1617     	MOVR	r0x1012,W
     000C 2580                      1- 1618     	ADDIA	0x80
                                    1- 1619     	BANKSEL	r0x1016
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1620     	MOVAR	r0x1016
                                    1- 1621     	BANKSEL	r0x1015
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1622     	MOVR	r0x1015,W
     0011 2580                      1- 1623     	ADDIA	0x80
                                    1- 1624     	BANKSEL	r0x1016
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1625     	SUBAR	r0x1016,W
     0014 0903                      1- 1626     	BTRSS	STATUS,2
     0015 3rrr                      1- 1627     	LGOTO	_00394_DS_
                                    1- 1628     	BANKSEL	r0x1014
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1629     	MOVR	r0x1014,W
                                    1- 1630     	BANKSEL	r0x1013
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1- 1631     	SUBAR	r0x1013,W
     001A                           1- 1632     _00394_DS_:
     001A 0803                      1- 1633     	BTRSS	STATUS,0
     001B 3rrr                      1- 1634     	LGOTO	_00385_DS_
                                    1- 1635     	BANKSEL	r0x1014
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 05rr                      1- 1636     	INCR	r0x1014,F
     001E 0903                      1- 1637     	BTRSS	STATUS,2
     001F 3rrr                      1- 1638     	LGOTO	_00001_DS_
                                    1- 1639     	BANKSEL	r0x1015
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 05rr                      1- 1640     	INCR	r0x1015,F
     0022                           1- 1641     _00001_DS_:
     0022 3rrr                      1- 1642     	LGOTO	_00383_DS_
     0023                           1- 1643     _00385_DS_:
                                    1- 1644     	.line	587, "main.c"; 	}
                                    1- 1645     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1- 1646     ; exit point of _delay
                                    1- 1648     ;***
                                    1- 1649     ;  pBlock Stats: dbName = C
                                    1- 1650     ;***
                                    1- 1651     ;has an exit
                                    1- 1652     ;functions called:
                                    1- 1653     ;   _sendRGB2
                                    1- 1654     ;   _sendRGB
                                    1- 1655     ;   _sendRGB2
                                    1- 1656     ;   _sendRGB
                                    1- 1657     ;9 compiler assigned registers:
                                    1- 1658     ;   r0x1017
                                    1- 1659     ;   STK00
                                    1- 1660     ;   r0x1018
                                    1- 1661     ;   STK01
                                    1- 1662     ;   r0x1019
                                    1- 1663     ;   STK02
                                    1- 1664     ;   r0x101A
                                    1- 1665     ;   STK03
                                    1- 1666     ;   r0x101B
                                    1- 1667     ;; Starting pCode block
                                    1- 1668     .segment "code"; module=main, function=_sendRGB3
                                    1- 1670     ;local variable name mapping:
     0000                           1- 1676     _sendRGB3:
                                    1- 1677     ; 2 exit points
                                    1- 1678     	.line	568, "main.c"; 	void sendRGB3(unsigned index,unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 1679     	BANKSEL	r0x1017
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1680     	MOVAR	r0x1017
     0002 01rr                      1- 1681     	MOVR	STK00,W
                                    1- 1682     	BANKSEL	r0x1018
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1683     	MOVAR	r0x1018
     0005 01rr                      1- 1684     	MOVR	STK01,W
                                    1- 1685     	BANKSEL	r0x1019
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1686     	MOVAR	r0x1019
     0008 01rr                      1- 1687     	MOVR	STK02,W
                                    1- 1688     	BANKSEL	r0x101A
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1689     	MOVAR	r0x101A
     000B 01rr                      1- 1690     	MOVR	STK03,W
                                    1- 1691     	BANKSEL	r0x101B
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1692     	MOVAR	r0x101B
                                    1- 1693     	.line	570, "main.c"; 	if(index == 0 || index == 13)
                                    1- 1694     	BANKSEL	r0x1018
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1695     	MOVR	r0x1018,W
                                    1- 1696     	BANKSEL	r0x1017
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 11rr                      1- 1697     	IORAR	r0x1017,W
     0012 0D03                      1- 1698     	BTRSC	STATUS,2
     0013 3rrr                      1- 1699     	LGOTO	_00372_DS_
                                    1- 1700     	BANKSEL	r0x1018
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 1701     	MOVR	r0x1018,W
     0016 240D                      1- 1702     	XORIA	0x0d
     0017 0903                      1- 1703     	BTRSS	STATUS,2
     0018 3rrr                      1- 1704     	LGOTO	_00373_DS_
                                    1- 1705     	BANKSEL	r0x1017
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1706     	MOVR	r0x1017,W
     001B 2400                      1- 1707     	XORIA	0x00
     001C 0903                      1- 1708     	BTRSS	STATUS,2
     001D 3rrr                      1- 1709     	LGOTO	_00373_DS_
     001E                           1- 1710     _00372_DS_:
                                    1- 1711     	.line	572, "main.c"; 	sendRGB2(colorR,colorG,colorB);
                                    1- 1712     	BANKSEL	r0x101B
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1713     	MOVR	r0x101B,W
     0020 00rr                      1- 1714     	MOVAR	STK01
                                    1- 1715     	BANKSEL	r0x101A
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1716     	MOVR	r0x101A,W
     0023 00rr                      1- 1717     	MOVAR	STK00
                                    1- 1718     	BANKSEL	r0x1019
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1719     	MOVR	r0x1019,W
     0026 2rrr                      1- 1720     	LCALL	_sendRGB2
     0027 3rrr                      1- 1721     	LGOTO	_00376_DS_
     0028                           1- 1722     _00373_DS_:
                                    1- 1723     	.line	576, "main.c"; 	sendRGB(colorR,colorG,colorB);
                                    1- 1724     	BANKSEL	r0x101B
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1- 1725     	MOVR	r0x101B,W
     002A 00rr                      1- 1726     	MOVAR	STK01
                                    1- 1727     	BANKSEL	r0x101A
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 1728     	MOVR	r0x101A,W
     002D 00rr                      1- 1729     	MOVAR	STK00
                                    1- 1730     	BANKSEL	r0x1019
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1- 1731     	MOVR	r0x1019,W
     0030 2rrr                      1- 1732     	LCALL	_sendRGB
     0031                           1- 1733     _00376_DS_:
                                    1- 1734     	.line	579, "main.c"; 	}
                                    1- 1735     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1736     ; exit point of _sendRGB3
                                    1- 1738     ;***
                                    1- 1739     ;  pBlock Stats: dbName = C
                                    1- 1740     ;***
                                    1- 1741     ;has an exit
                                    1- 1742     ;functions called:
                                    1- 1743     ;   _sendRGB3
                                    1- 1744     ;   _sendRGB3
                                    1- 1745     ;   _sendRGB3
                                    1- 1746     ;   _sendRGB3
                                    1- 1747     ;   _sendRGB3
                                    1- 1748     ;   _sendRGB3
                                    1- 1749     ;   _sendRGB3
                                    1- 1750     ;   _sendRGB3
                                    1- 1751     ;   _sendRGB3
                                    1- 1752     ;   _sendRGB3
                                    1- 1753     ;   _sendRGB3
                                    1- 1754     ;   _sendRGB3
                                    1- 1755     ;9 compiler assigned registers:
                                    1- 1756     ;   r0x101C
                                    1- 1757     ;   r0x101D
                                    1- 1758     ;   r0x101E
                                    1- 1759     ;   r0x101F
                                    1- 1760     ;   r0x1020
                                    1- 1761     ;   STK03
                                    1- 1762     ;   STK02
                                    1- 1763     ;   STK01
                                    1- 1764     ;   STK00
                                    1- 1765     ;; Starting pCode block
                                    1- 1766     .segment "code"; module=main, function=_closeCtr2
                                    1- 1768     ;local variable name mapping:
     0000                           1- 1773     _closeCtr2:
                                    1- 1774     ; 2 exit points
                                    1- 1775     	.line	525, "main.c"; 	void closeCtr2(char redIndex)
                                    1- 1776     	BANKSEL	r0x101C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1777     	MOVAR	r0x101C
                                    1- 1778     	.line	528, "main.c"; 	char min = 7-redIndex;	
     0002 2707                      1- 1779     	SUBIA	0x07
                                    1- 1780     	BANKSEL	r0x101D
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1781     	MOVAR	r0x101D
                                    1- 1782     	.line	529, "main.c"; 	char max = 7+redIndex;	
     0005 2107                      1- 1783     	MOVIA	0x07
                                    1- 1784     	BANKSEL	r0x101C
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 03rr                      1- 1785     	ADDAR	r0x101C,F
                                    1- 1786     	.line	530, "main.c"; 	do
     0008 210E                      1- 1787     	MOVIA	0x0e
                                    1- 1788     	BANKSEL	r0x101E
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1789     	MOVAR	r0x101E
     000B                           1- 1790     _00366_DS_:
                                    1- 1791     	.line	533, "main.c"; 	if(i == min)
                                    1- 1792     	BANKSEL	r0x101D
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1793     	MOVR	r0x101D,W
                                    1- 1794     	BANKSEL	r0x101E
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 12rr                      1- 1795     	XORAR	r0x101E,W
     000F 0903                      1- 1796     	BTRSS	STATUS,2
     0010 3rrr                      1- 1797     	LGOTO	_00364_DS_
                                    1- 1798     	.line	535, "main.c"; 	if(redTime == 0)
                                    1- 1799     	BANKSEL	_redTime
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 1800     	MOVR	_redTime,W
     0013 0903                      1- 1801     	BTRSS	STATUS,2
     0014 3rrr                      1- 1802     	LGOTO	_00349_DS_
                                    1- 1803     	.line	537, "main.c"; 	sendRGB3(i,0x4C,0xB2,0xB2);
                                    1- 1804     	BANKSEL	r0x101E
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 1805     	MOVR	r0x101E,W
                                    1- 1806     	BANKSEL	r0x1020
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 02rr                      1- 1807     	CLRR	r0x1020
     0019 21B2                      1- 1808     	MOVIA	0xb2
     001A 00rr                      1- 1809     	MOVAR	STK03
     001B 00rr                      1- 1810     	MOVAR	STK02
     001C 214C                      1- 1811     	MOVIA	0x4c
     001D 00rr                      1- 1812     	MOVAR	STK01
                                    1- 1813     ;;122	MOVR	r0x101F,W
                                    1- 1814     	BANKSEL	r0x101E
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1815     	MOVR	r0x101E,W
                                    1- 1816     	BANKSEL	r0x101F
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1817     	MOVAR	r0x101F
     0022 00rr                      1- 1818     	MOVAR	STK00
     0023 2100                      1- 1819     	MOVIA	0x00
     0024 2rrr                      1- 1820     	LCALL	_sendRGB3
     0025 3rrr                      1- 1821     	LGOTO	_00367_DS_
     0026                           1- 1822     _00349_DS_:
                                    1- 1823     	.line	539, "main.c"; 	else if(redTime == 1)
                                    1- 1824     	BANKSEL	_redTime
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1825     	MOVR	_redTime,W
     0028 2401                      1- 1826     	XORIA	0x01
     0029 0903                      1- 1827     	BTRSS	STATUS,2
     002A 3rrr                      1- 1828     	LGOTO	_00367_DS_
                                    1- 1829     	.line	541, "main.c"; 	sendRGB3(i,0x4C,0x4C,0xB2);
                                    1- 1830     	BANKSEL	r0x101E
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 1831     	MOVR	r0x101E,W
                                    1- 1832     	BANKSEL	r0x1020
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 02rr                      1- 1833     	CLRR	r0x1020
     002F 21B2                      1- 1834     	MOVIA	0xb2
     0030 00rr                      1- 1835     	MOVAR	STK03
     0031 214C                      1- 1836     	MOVIA	0x4c
     0032 00rr                      1- 1837     	MOVAR	STK02
     0033 00rr                      1- 1838     	MOVAR	STK01
                                    1- 1839     ;;118	MOVR	r0x101F,W
                                    1- 1840     	BANKSEL	r0x101E
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 1841     	MOVR	r0x101E,W
                                    1- 1842     	BANKSEL	r0x101F
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 1843     	MOVAR	r0x101F
     0038 00rr                      1- 1844     	MOVAR	STK00
     0039 2100                      1- 1845     	MOVIA	0x00
     003A 2rrr                      1- 1846     	LCALL	_sendRGB3
     003B 3rrr                      1- 1847     	LGOTO	_00367_DS_
     003C                           1- 1848     _00364_DS_:
                                    1- 1849     	.line	544, "main.c"; 	else if(i == max)
                                    1- 1850     	BANKSEL	r0x101C
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 1851     	MOVR	r0x101C,W
                                    1- 1852     	BANKSEL	r0x101E
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 12rr                      1- 1853     	XORAR	r0x101E,W
     0040 0903                      1- 1854     	BTRSS	STATUS,2
     0041 3rrr                      1- 1855     	LGOTO	_00361_DS_
                                    1- 1856     	.line	546, "main.c"; 	if(redTime == 0)
                                    1- 1857     	BANKSEL	_redTime
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1- 1858     	MOVR	_redTime,W
     0044 0903                      1- 1859     	BTRSS	STATUS,2
     0045 3rrr                      1- 1860     	LGOTO	_00354_DS_
                                    1- 1861     	.line	548, "main.c"; 	sendRGB3(i,0xB2,0xB2,0x4C);
                                    1- 1862     	BANKSEL	r0x101E
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1- 1863     	MOVR	r0x101E,W
                                    1- 1864     	BANKSEL	r0x1020
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 02rr                      1- 1865     	CLRR	r0x1020
     004A 214C                      1- 1866     	MOVIA	0x4c
     004B 00rr                      1- 1867     	MOVAR	STK03
     004C 21B2                      1- 1868     	MOVIA	0xb2
     004D 00rr                      1- 1869     	MOVAR	STK02
     004E 00rr                      1- 1870     	MOVAR	STK01
                                    1- 1871     ;;114	MOVR	r0x101F,W
                                    1- 1872     	BANKSEL	r0x101E
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 1873     	MOVR	r0x101E,W
                                    1- 1874     	BANKSEL	r0x101F
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 1875     	MOVAR	r0x101F
     0053 00rr                      1- 1876     	MOVAR	STK00
     0054 2100                      1- 1877     	MOVIA	0x00
     0055 2rrr                      1- 1878     	LCALL	_sendRGB3
     0056 3rrr                      1- 1879     	LGOTO	_00367_DS_
     0057                           1- 1880     _00354_DS_:
                                    1- 1881     	.line	550, "main.c"; 	else if(redTime == 1)
                                    1- 1882     	BANKSEL	_redTime
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 01rr                      1- 1883     	MOVR	_redTime,W
     0059 2401                      1- 1884     	XORIA	0x01
     005A 0903                      1- 1885     	BTRSS	STATUS,2
     005B 3rrr                      1- 1886     	LGOTO	_00367_DS_
                                    1- 1887     	.line	552, "main.c"; 	sendRGB3(i,0xB2,0x4C,0x4C);
                                    1- 1888     	BANKSEL	r0x101E
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 1889     	MOVR	r0x101E,W
                                    1- 1890     	BANKSEL	r0x1020
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 02rr                      1- 1891     	CLRR	r0x1020
     0060 214C                      1- 1892     	MOVIA	0x4c
     0061 00rr                      1- 1893     	MOVAR	STK03
     0062 00rr                      1- 1894     	MOVAR	STK02
     0063 21B2                      1- 1895     	MOVIA	0xb2
     0064 00rr                      1- 1896     	MOVAR	STK01
                                    1- 1897     ;;110	MOVR	r0x101F,W
                                    1- 1898     	BANKSEL	r0x101E
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 01rr                      1- 1899     	MOVR	r0x101E,W
                                    1- 1900     	BANKSEL	r0x101F
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1- 1901     	MOVAR	r0x101F
     0069 00rr                      1- 1902     	MOVAR	STK00
     006A 2100                      1- 1903     	MOVIA	0x00
     006B 2rrr                      1- 1904     	LCALL	_sendRGB3
     006C 3rrr                      1- 1905     	LGOTO	_00367_DS_
     006D                           1- 1906     _00361_DS_:
                                    1- 1907     	.line	555, "main.c"; 	else if(i< max && i > min)
                                    1- 1908     	BANKSEL	r0x101C
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1- 1909     	MOVR	r0x101C,W
                                    1- 1910     	BANKSEL	r0x101E
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 04rr                      1- 1911     	SUBAR	r0x101E,W
     0071 0C03                      1- 1912     	BTRSC	STATUS,0
     0072 3rrr                      1- 1913     	LGOTO	_00357_DS_
     0073 01rr                      1- 1914     	MOVR	r0x101E,W
                                    1- 1915     	BANKSEL	r0x101D
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 04rr                      1- 1916     	SUBAR	r0x101D,W
     0076 0C03                      1- 1917     	BTRSC	STATUS,0
     0077 3rrr                      1- 1918     	LGOTO	_00357_DS_
                                    1- 1919     	.line	557, "main.c"; 	sendRGB3(i,RED2);
                                    1- 1920     	BANKSEL	r0x101E
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 01rr                      1- 1921     	MOVR	r0x101E,W
                                    1- 1922     	BANKSEL	r0x1020
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1- 1923     	CLRR	r0x1020
     007C 21B2                      1- 1924     	MOVIA	0xb2
     007D 00rr                      1- 1925     	MOVAR	STK03
     007E 00rr                      1- 1926     	MOVAR	STK02
     007F 00rr                      1- 1927     	MOVAR	STK01
                                    1- 1928     ;;106	MOVR	r0x101F,W
                                    1- 1929     	BANKSEL	r0x101E
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1- 1930     	MOVR	r0x101E,W
                                    1- 1931     	BANKSEL	r0x101F
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 00rr                      1- 1932     	MOVAR	r0x101F
     0084 00rr                      1- 1933     	MOVAR	STK00
     0085 2100                      1- 1934     	MOVIA	0x00
     0086 2rrr                      1- 1935     	LCALL	_sendRGB3
     0087 3rrr                      1- 1936     	LGOTO	_00367_DS_
     0088                           1- 1937     _00357_DS_:
                                    1- 1938     	.line	561, "main.c"; 	sendRGB3(i,RED3);
                                    1- 1939     	BANKSEL	r0x101E
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 01rr                      1- 1940     	MOVR	r0x101E,W
                                    1- 1941     	BANKSEL	r0x1020
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 02rr                      1- 1942     	CLRR	r0x1020
     008C 214C                      1- 1943     	MOVIA	0x4c
     008D 00rr                      1- 1944     	MOVAR	STK03
     008E 00rr                      1- 1945     	MOVAR	STK02
     008F 00rr                      1- 1946     	MOVAR	STK01
                                    1- 1947     ;;102	MOVR	r0x101F,W
                                    1- 1948     	BANKSEL	r0x101E
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 01rr                      1- 1949     	MOVR	r0x101E,W
                                    1- 1950     	BANKSEL	r0x101F
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 00rr                      1- 1951     	MOVAR	r0x101F
     0094 00rr                      1- 1952     	MOVAR	STK00
     0095 2100                      1- 1953     	MOVIA	0x00
     0096 2rrr                      1- 1954     	LCALL	_sendRGB3
     0097                           1- 1955     _00367_DS_:
                                    1- 1956     	.line	565, "main.c"; 	while(--i > 0);
                                    1- 1957     	BANKSEL	r0x101E
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 17rr                      1- 1958     	DECRSZ	r0x101E,F
     0099 3rrr                      1- 1959     	LGOTO	_00366_DS_
                                    1- 1960     	.line	566, "main.c"; 	}
                                    1- 1961     	RETURN	
     009A 0010                      3-   26 m1      ret
                                    1- 1962     ; exit point of _closeCtr2
                                    1- 1964     ;***
                                    1- 1965     ;  pBlock Stats: dbName = C
                                    1- 1966     ;***
                                    1- 1967     ;has an exit
                                    1- 1968     ;functions called:
                                    1- 1969     ;   _sendRGB3
                                    1- 1970     ;   _sendRGB3
                                    1- 1971     ;   _sendRGB3
                                    1- 1972     ;   _sendRGB3
                                    1- 1973     ;   _sendRGB3
                                    1- 1974     ;   _sendRGB3
                                    1- 1975     ;   _sendRGB3
                                    1- 1976     ;   _sendRGB3
                                    1- 1977     ;   _sendRGB3
                                    1- 1978     ;   _sendRGB3
                                    1- 1979     ;   _sendRGB3
                                    1- 1980     ;   _sendRGB3
                                    1- 1981     ;   _sendRGB3
                                    1- 1982     ;   _sendRGB3
                                    1- 1983     ;10 compiler assigned registers:
                                    1- 1984     ;   r0x1021
                                    1- 1985     ;   r0x1022
                                    1- 1986     ;   r0x1023
                                    1- 1987     ;   r0x1024
                                    1- 1988     ;   r0x1025
                                    1- 1989     ;   r0x1026
                                    1- 1990     ;   STK03
                                    1- 1991     ;   STK02
                                    1- 1992     ;   STK01
                                    1- 1993     ;   STK00
                                    1- 1994     ;; Starting pCode block
                                    1- 1995     .segment "code"; module=main, function=_closeCtr
                                    1- 1997     ;local variable name mapping:
     0000                           1- 2002     _closeCtr:
                                    1- 2003     ; 2 exit points
                                    1- 2004     	.line	479, "main.c"; 	void closeCtr(char redIndex)
                                    1- 2005     	BANKSEL	r0x1021
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2006     	MOVAR	r0x1021
                                    1- 2007     	.line	482, "main.c"; 	char min = 7-redIndex;	
     0002 2707                      1- 2008     	SUBIA	0x07
                                    1- 2009     	BANKSEL	r0x1022
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 2010     	MOVAR	r0x1022
                                    1- 2011     	.line	483, "main.c"; 	char max = 7+redIndex;	
     0005 2107                      1- 2012     	MOVIA	0x07
                                    1- 2013     	BANKSEL	r0x1021
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 03rr                      1- 2014     	ADDAR	r0x1021,F
                                    1- 2015     	.line	484, "main.c"; 	do
                                    1- 2016     	BANKSEL	r0x1023
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 2017     	CLRR	r0x1023
                                    1- 2018     	BANKSEL	r0x1021
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 2019     	MOVR	r0x1021,W
                                    1- 2020     	BANKSEL	r0x1022
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 12rr                      1- 2021     	XORAR	r0x1022,W
     000E 0903                      1- 2022     	BTRSS	STATUS,2
     000F 3rrr                      1- 2023     	LGOTO	_00002_DS_
                                    1- 2024     	BANKSEL	r0x1023
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 05rr                      1- 2025     	INCR	r0x1023,F
     0012                           1- 2026     _00002_DS_:
     0012 210E                      1- 2027     	MOVIA	0x0e
                                    1- 2028     	BANKSEL	r0x1024
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1- 2029     	MOVAR	r0x1024
     0015                           1- 2030     _00305_DS_:
                                    1- 2031     	.line	486, "main.c"; 	if(min == max)
                                    1- 2032     	BANKSEL	r0x1023
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2033     	MOVR	r0x1023,W
     0017 0D03                      1- 2034     	BTRSC	STATUS,2
     0018 3rrr                      1- 2035     	LGOTO	_00303_DS_
                                    1- 2036     	.line	488, "main.c"; 	sendRGB3(i,0x00,0x00,0x00);
                                    1- 2037     	BANKSEL	r0x1024
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 2038     	MOVR	r0x1024,W
                                    1- 2039     	BANKSEL	r0x1026
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1- 2040     	CLRR	r0x1026
     001D 2100                      1- 2041     	MOVIA	0x00
     001E 00rr                      1- 2042     	MOVAR	STK03
     001F 00rr                      1- 2043     	MOVAR	STK02
     0020 00rr                      1- 2044     	MOVAR	STK01
                                    1- 2045     ;;123	MOVR	r0x1025,W
                                    1- 2046     	BANKSEL	r0x1024
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 2047     	MOVR	r0x1024,W
                                    1- 2048     	BANKSEL	r0x1025
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 2049     	MOVAR	r0x1025
     0025 00rr                      1- 2050     	MOVAR	STK00
     0026 2100                      1- 2051     	MOVIA	0x00
     0027 2rrr                      1- 2052     	LCALL	_sendRGB3
     0028 3rrr                      1- 2053     	LGOTO	_00306_DS_
     0029                           1- 2054     _00303_DS_:
                                    1- 2055     	.line	490, "main.c"; 	else if(i == min)
                                    1- 2056     	BANKSEL	r0x1022
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 2057     	MOVR	r0x1022,W
                                    1- 2058     	BANKSEL	r0x1024
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 12rr                      1- 2059     	XORAR	r0x1024,W
     002D 0903                      1- 2060     	BTRSS	STATUS,2
     002E 3rrr                      1- 2061     	LGOTO	_00300_DS_
                                    1- 2062     	.line	492, "main.c"; 	if(redTime == 0)
                                    1- 2063     	BANKSEL	_redTime
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 2064     	MOVR	_redTime,W
     0031 0903                      1- 2065     	BTRSS	STATUS,2
     0032 3rrr                      1- 2066     	LGOTO	_00285_DS_
                                    1- 2067     	.line	494, "main.c"; 	sendRGB3(i,0x00,0x4C,0x4C);
                                    1- 2068     	BANKSEL	r0x1024
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 2069     	MOVR	r0x1024,W
                                    1- 2070     	BANKSEL	r0x1026
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 02rr                      1- 2071     	CLRR	r0x1026
     0037 214C                      1- 2072     	MOVIA	0x4c
     0038 00rr                      1- 2073     	MOVAR	STK03
     0039 00rr                      1- 2074     	MOVAR	STK02
     003A 2100                      1- 2075     	MOVIA	0x00
     003B 00rr                      1- 2076     	MOVAR	STK01
                                    1- 2077     ;;121	MOVR	r0x1025,W
                                    1- 2078     	BANKSEL	r0x1024
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 2079     	MOVR	r0x1024,W
                                    1- 2080     	BANKSEL	r0x1025
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 00rr                      1- 2081     	MOVAR	r0x1025
     0040 00rr                      1- 2082     	MOVAR	STK00
     0041 2100                      1- 2083     	MOVIA	0x00
     0042 2rrr                      1- 2084     	LCALL	_sendRGB3
     0043 3rrr                      1- 2085     	LGOTO	_00306_DS_
     0044                           1- 2086     _00285_DS_:
                                    1- 2087     	.line	496, "main.c"; 	else if(redTime == 1)
                                    1- 2088     	BANKSEL	_redTime
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 01rr                      1- 2089     	MOVR	_redTime,W
     0046 2401                      1- 2090     	XORIA	0x01
     0047 0903                      1- 2091     	BTRSS	STATUS,2
     0048 3rrr                      1- 2092     	LGOTO	_00306_DS_
                                    1- 2093     	.line	498, "main.c"; 	sendRGB3(i,0x00,0x00,0x4C);
                                    1- 2094     	BANKSEL	r0x1024
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 01rr                      1- 2095     	MOVR	r0x1024,W
                                    1- 2096     	BANKSEL	r0x1026
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 02rr                      1- 2097     	CLRR	r0x1026
     004D 214C                      1- 2098     	MOVIA	0x4c
     004E 00rr                      1- 2099     	MOVAR	STK03
     004F 2100                      1- 2100     	MOVIA	0x00
     0050 00rr                      1- 2101     	MOVAR	STK02
     0051 00rr                      1- 2102     	MOVAR	STK01
                                    1- 2103     ;;117	MOVR	r0x1025,W
                                    1- 2104     	BANKSEL	r0x1024
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1- 2105     	MOVR	r0x1024,W
                                    1- 2106     	BANKSEL	r0x1025
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 00rr                      1- 2107     	MOVAR	r0x1025
     0056 00rr                      1- 2108     	MOVAR	STK00
     0057 2100                      1- 2109     	MOVIA	0x00
     0058 2rrr                      1- 2110     	LCALL	_sendRGB3
     0059 3rrr                      1- 2111     	LGOTO	_00306_DS_
     005A                           1- 2112     _00300_DS_:
                                    1- 2113     	.line	501, "main.c"; 	else if(i == max)
                                    1- 2114     	BANKSEL	r0x1021
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 01rr                      1- 2115     	MOVR	r0x1021,W
                                    1- 2116     	BANKSEL	r0x1024
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 12rr                      1- 2117     	XORAR	r0x1024,W
     005E 0903                      1- 2118     	BTRSS	STATUS,2
     005F 3rrr                      1- 2119     	LGOTO	_00297_DS_
                                    1- 2120     	.line	503, "main.c"; 	if(redTime == 0)
                                    1- 2121     	BANKSEL	_redTime
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1- 2122     	MOVR	_redTime,W
     0062 0903                      1- 2123     	BTRSS	STATUS,2
     0063 3rrr                      1- 2124     	LGOTO	_00290_DS_
                                    1- 2125     	.line	505, "main.c"; 	sendRGB3(i,0x4C,0x4C,0x00);
                                    1- 2126     	BANKSEL	r0x1024
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 01rr                      1- 2127     	MOVR	r0x1024,W
                                    1- 2128     	BANKSEL	r0x1026
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 02rr                      1- 2129     	CLRR	r0x1026
     0068 2100                      1- 2130     	MOVIA	0x00
     0069 00rr                      1- 2131     	MOVAR	STK03
     006A 214C                      1- 2132     	MOVIA	0x4c
     006B 00rr                      1- 2133     	MOVAR	STK02
     006C 00rr                      1- 2134     	MOVAR	STK01
                                    1- 2135     ;;113	MOVR	r0x1025,W
                                    1- 2136     	BANKSEL	r0x1024
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1- 2137     	MOVR	r0x1024,W
                                    1- 2138     	BANKSEL	r0x1025
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 00rr                      1- 2139     	MOVAR	r0x1025
     0071 00rr                      1- 2140     	MOVAR	STK00
     0072 2100                      1- 2141     	MOVIA	0x00
     0073 2rrr                      1- 2142     	LCALL	_sendRGB3
     0074 3rrr                      1- 2143     	LGOTO	_00306_DS_
     0075                           1- 2144     _00290_DS_:
                                    1- 2145     	.line	507, "main.c"; 	else if(redTime == 1)
                                    1- 2146     	BANKSEL	_redTime
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 01rr                      1- 2147     	MOVR	_redTime,W
     0077 2401                      1- 2148     	XORIA	0x01
     0078 0903                      1- 2149     	BTRSS	STATUS,2
     0079 3rrr                      1- 2150     	LGOTO	_00306_DS_
                                    1- 2151     	.line	509, "main.c"; 	sendRGB3(i,0x4C,0x00,0x00);
                                    1- 2152     	BANKSEL	r0x1024
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 01rr                      1- 2153     	MOVR	r0x1024,W
                                    1- 2154     	BANKSEL	r0x1026
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 02rr                      1- 2155     	CLRR	r0x1026
     007E 2100                      1- 2156     	MOVIA	0x00
     007F 00rr                      1- 2157     	MOVAR	STK03
     0080 00rr                      1- 2158     	MOVAR	STK02
     0081 214C                      1- 2159     	MOVIA	0x4c
     0082 00rr                      1- 2160     	MOVAR	STK01
                                    1- 2161     ;;109	MOVR	r0x1025,W
                                    1- 2162     	BANKSEL	r0x1024
     0083 rrrr                      3-   71 m1      .banksel ram_address
     0084 01rr                      1- 2163     	MOVR	r0x1024,W
                                    1- 2164     	BANKSEL	r0x1025
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 00rr                      1- 2165     	MOVAR	r0x1025
     0087 00rr                      1- 2166     	MOVAR	STK00
     0088 2100                      1- 2167     	MOVIA	0x00
     0089 2rrr                      1- 2168     	LCALL	_sendRGB3
     008A 3rrr                      1- 2169     	LGOTO	_00306_DS_
     008B                           1- 2170     _00297_DS_:
                                    1- 2171     	.line	512, "main.c"; 	else if(i< max && i > min)
                                    1- 2172     	BANKSEL	r0x1021
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 01rr                      1- 2173     	MOVR	r0x1021,W
                                    1- 2174     	BANKSEL	r0x1024
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 04rr                      1- 2175     	SUBAR	r0x1024,W
     008F 0C03                      1- 2176     	BTRSC	STATUS,0
     0090 3rrr                      1- 2177     	LGOTO	_00293_DS_
     0091 01rr                      1- 2178     	MOVR	r0x1024,W
                                    1- 2179     	BANKSEL	r0x1022
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 04rr                      1- 2180     	SUBAR	r0x1022,W
     0094 0C03                      1- 2181     	BTRSC	STATUS,0
     0095 3rrr                      1- 2182     	LGOTO	_00293_DS_
                                    1- 2183     	.line	514, "main.c"; 	sendRGB3(i,RED3);
                                    1- 2184     	BANKSEL	r0x1024
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 01rr                      1- 2185     	MOVR	r0x1024,W
                                    1- 2186     	BANKSEL	r0x1026
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 02rr                      1- 2187     	CLRR	r0x1026
     009A 214C                      1- 2188     	MOVIA	0x4c
     009B 00rr                      1- 2189     	MOVAR	STK03
     009C 00rr                      1- 2190     	MOVAR	STK02
     009D 00rr                      1- 2191     	MOVAR	STK01
                                    1- 2192     ;;105	MOVR	r0x1025,W
                                    1- 2193     	BANKSEL	r0x1024
     009E rrrr                      3-   71 m1      .banksel ram_address
     009F 01rr                      1- 2194     	MOVR	r0x1024,W
                                    1- 2195     	BANKSEL	r0x1025
     00A0 rrrr                      3-   71 m1      .banksel ram_address
     00A1 00rr                      1- 2196     	MOVAR	r0x1025
     00A2 00rr                      1- 2197     	MOVAR	STK00
     00A3 2100                      1- 2198     	MOVIA	0x00
     00A4 2rrr                      1- 2199     	LCALL	_sendRGB3
     00A5 3rrr                      1- 2200     	LGOTO	_00306_DS_
     00A6                           1- 2201     _00293_DS_:
                                    1- 2202     	.line	518, "main.c"; 	sendRGB3(i,BLACK);
                                    1- 2203     	BANKSEL	r0x1024
     00A6 rrrr                      3-   71 m1      .banksel ram_address
     00A7 01rr                      1- 2204     	MOVR	r0x1024,W
                                    1- 2205     	BANKSEL	r0x1026
     00A8 rrrr                      3-   71 m1      .banksel ram_address
     00A9 02rr                      1- 2206     	CLRR	r0x1026
     00AA 2100                      1- 2207     	MOVIA	0x00
     00AB 00rr                      1- 2208     	MOVAR	STK03
     00AC 00rr                      1- 2209     	MOVAR	STK02
     00AD 00rr                      1- 2210     	MOVAR	STK01
                                    1- 2211     ;;101	MOVR	r0x1025,W
                                    1- 2212     	BANKSEL	r0x1024
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 01rr                      1- 2213     	MOVR	r0x1024,W
                                    1- 2214     	BANKSEL	r0x1025
     00B0 rrrr                      3-   71 m1      .banksel ram_address
     00B1 00rr                      1- 2215     	MOVAR	r0x1025
     00B2 00rr                      1- 2216     	MOVAR	STK00
     00B3 2100                      1- 2217     	MOVIA	0x00
     00B4 2rrr                      1- 2218     	LCALL	_sendRGB3
     00B5                           1- 2219     _00306_DS_:
                                    1- 2220     	.line	522, "main.c"; 	while(--i > 0);
                                    1- 2221     	BANKSEL	r0x1024
     00B5 rrrr                      3-   71 m1      .banksel ram_address
     00B6 17rr                      1- 2222     	DECRSZ	r0x1024,F
     00B7 3rrr                      1- 2223     	LGOTO	_00305_DS_
                                    1- 2224     	.line	523, "main.c"; 	}
                                    1- 2225     	RETURN	
     00B8 0010                      3-   26 m1      ret
                                    1- 2226     ; exit point of _closeCtr
                                    1- 2228     ;***
                                    1- 2229     ;  pBlock Stats: dbName = C
                                    1- 2230     ;***
                                    1- 2231     ;has an exit
                                    1- 2232     ;functions called:
                                    1- 2233     ;   _sendRGB3
                                    1- 2234     ;   _sendRGB3
                                    1- 2235     ;   _sendRGB3
                                    1- 2236     ;   _sendRGB3
                                    1- 2237     ;   _sendRGB3
                                    1- 2238     ;   _sendRGB3
                                    1- 2239     ;   _sendRGB3
                                    1- 2240     ;   _sendRGB3
                                    1- 2241     ;   _sendRGB3
                                    1- 2242     ;   _sendRGB3
                                    1- 2243     ;   _sendRGB3
                                    1- 2244     ;   _sendRGB3
                                    1- 2245     ;9 compiler assigned registers:
                                    1- 2246     ;   r0x1027
                                    1- 2247     ;   r0x1028
                                    1- 2248     ;   r0x1029
                                    1- 2249     ;   r0x102A
                                    1- 2250     ;   r0x102B
                                    1- 2251     ;   STK03
                                    1- 2252     ;   STK02
                                    1- 2253     ;   STK01
                                    1- 2254     ;   STK00
                                    1- 2255     ;; Starting pCode block
                                    1- 2256     .segment "code"; module=main, function=_openCtr2
                                    1- 2258     ;local variable name mapping:
     0000                           1- 2263     _openCtr2:
                                    1- 2264     ; 2 exit points
                                    1- 2265     	.line	436, "main.c"; 	void openCtr2(char redIndex)
                                    1- 2266     	BANKSEL	r0x1027
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2267     	MOVAR	r0x1027
                                    1- 2268     	.line	439, "main.c"; 	char min = 7-redIndex;	
     0002 2707                      1- 2269     	SUBIA	0x07
                                    1- 2270     	BANKSEL	r0x1028
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 2271     	MOVAR	r0x1028
                                    1- 2272     	.line	440, "main.c"; 	char max = 7+redIndex;	
     0005 2107                      1- 2273     	MOVIA	0x07
                                    1- 2274     	BANKSEL	r0x1027
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 03rr                      1- 2275     	ADDAR	r0x1027,F
                                    1- 2276     	.line	441, "main.c"; 	do
     0008 210E                      1- 2277     	MOVIA	0x0e
                                    1- 2278     	BANKSEL	r0x1029
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 2279     	MOVAR	r0x1029
     000B                           1- 2280     _00276_DS_:
                                    1- 2281     	.line	444, "main.c"; 	if(i == min)
                                    1- 2282     	BANKSEL	r0x1028
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 2283     	MOVR	r0x1028,W
                                    1- 2284     	BANKSEL	r0x1029
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 12rr                      1- 2285     	XORAR	r0x1029,W
     000F 0903                      1- 2286     	BTRSS	STATUS,2
     0010 3rrr                      1- 2287     	LGOTO	_00274_DS_
                                    1- 2288     	.line	446, "main.c"; 	if(redTime == 0)
                                    1- 2289     	BANKSEL	_redTime
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2290     	MOVR	_redTime,W
     0013 0903                      1- 2291     	BTRSS	STATUS,2
     0014 3rrr                      1- 2292     	LGOTO	_00259_DS_
                                    1- 2293     	.line	448, "main.c"; 	sendRGB3(i,0x4C,0x4C,0xB2);
                                    1- 2294     	BANKSEL	r0x1029
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2295     	MOVR	r0x1029,W
                                    1- 2296     	BANKSEL	r0x102B
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 02rr                      1- 2297     	CLRR	r0x102B
     0019 21B2                      1- 2298     	MOVIA	0xb2
     001A 00rr                      1- 2299     	MOVAR	STK03
     001B 214C                      1- 2300     	MOVIA	0x4c
     001C 00rr                      1- 2301     	MOVAR	STK02
     001D 00rr                      1- 2302     	MOVAR	STK01
                                    1- 2303     ;;120	MOVR	r0x102A,W
                                    1- 2304     	BANKSEL	r0x1029
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 2305     	MOVR	r0x1029,W
                                    1- 2306     	BANKSEL	r0x102A
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 2307     	MOVAR	r0x102A
     0022 00rr                      1- 2308     	MOVAR	STK00
     0023 2100                      1- 2309     	MOVIA	0x00
     0024 2rrr                      1- 2310     	LCALL	_sendRGB3
     0025 3rrr                      1- 2311     	LGOTO	_00277_DS_
     0026                           1- 2312     _00259_DS_:
                                    1- 2313     	.line	450, "main.c"; 	else if(redTime == 1)
                                    1- 2314     	BANKSEL	_redTime
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 2315     	MOVR	_redTime,W
     0028 2401                      1- 2316     	XORIA	0x01
     0029 0903                      1- 2317     	BTRSS	STATUS,2
     002A 3rrr                      1- 2318     	LGOTO	_00277_DS_
                                    1- 2319     	.line	452, "main.c"; 	sendRGB3(i,0x4C,0xB2,0xB2);
                                    1- 2320     	BANKSEL	r0x1029
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 2321     	MOVR	r0x1029,W
                                    1- 2322     	BANKSEL	r0x102B
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 02rr                      1- 2323     	CLRR	r0x102B
     002F 21B2                      1- 2324     	MOVIA	0xb2
     0030 00rr                      1- 2325     	MOVAR	STK03
     0031 00rr                      1- 2326     	MOVAR	STK02
     0032 214C                      1- 2327     	MOVIA	0x4c
     0033 00rr                      1- 2328     	MOVAR	STK01
                                    1- 2329     ;;116	MOVR	r0x102A,W
                                    1- 2330     	BANKSEL	r0x1029
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 2331     	MOVR	r0x1029,W
                                    1- 2332     	BANKSEL	r0x102A
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 2333     	MOVAR	r0x102A
     0038 00rr                      1- 2334     	MOVAR	STK00
     0039 2100                      1- 2335     	MOVIA	0x00
     003A 2rrr                      1- 2336     	LCALL	_sendRGB3
     003B 3rrr                      1- 2337     	LGOTO	_00277_DS_
     003C                           1- 2338     _00274_DS_:
                                    1- 2339     	.line	455, "main.c"; 	else if(i == max )
                                    1- 2340     	BANKSEL	r0x1027
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 2341     	MOVR	r0x1027,W
                                    1- 2342     	BANKSEL	r0x1029
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 12rr                      1- 2343     	XORAR	r0x1029,W
     0040 0903                      1- 2344     	BTRSS	STATUS,2
     0041 3rrr                      1- 2345     	LGOTO	_00271_DS_
                                    1- 2346     	.line	457, "main.c"; 	if(redTime == 0)
                                    1- 2347     	BANKSEL	_redTime
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1- 2348     	MOVR	_redTime,W
     0044 0903                      1- 2349     	BTRSS	STATUS,2
     0045 3rrr                      1- 2350     	LGOTO	_00264_DS_
                                    1- 2351     	.line	459, "main.c"; 	sendRGB3(i,0xB2,0x4C,0x4C);
                                    1- 2352     	BANKSEL	r0x1029
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1- 2353     	MOVR	r0x1029,W
                                    1- 2354     	BANKSEL	r0x102B
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 02rr                      1- 2355     	CLRR	r0x102B
     004A 214C                      1- 2356     	MOVIA	0x4c
     004B 00rr                      1- 2357     	MOVAR	STK03
     004C 00rr                      1- 2358     	MOVAR	STK02
     004D 21B2                      1- 2359     	MOVIA	0xb2
     004E 00rr                      1- 2360     	MOVAR	STK01
                                    1- 2361     ;;112	MOVR	r0x102A,W
                                    1- 2362     	BANKSEL	r0x1029
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 2363     	MOVR	r0x1029,W
                                    1- 2364     	BANKSEL	r0x102A
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 2365     	MOVAR	r0x102A
     0053 00rr                      1- 2366     	MOVAR	STK00
     0054 2100                      1- 2367     	MOVIA	0x00
     0055 2rrr                      1- 2368     	LCALL	_sendRGB3
     0056 3rrr                      1- 2369     	LGOTO	_00277_DS_
     0057                           1- 2370     _00264_DS_:
                                    1- 2371     	.line	461, "main.c"; 	else if(redTime == 1)
                                    1- 2372     	BANKSEL	_redTime
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 01rr                      1- 2373     	MOVR	_redTime,W
     0059 2401                      1- 2374     	XORIA	0x01
     005A 0903                      1- 2375     	BTRSS	STATUS,2
     005B 3rrr                      1- 2376     	LGOTO	_00277_DS_
                                    1- 2377     	.line	463, "main.c"; 	sendRGB3(i,0xB2,0xB2,0x4C);
                                    1- 2378     	BANKSEL	r0x1029
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 2379     	MOVR	r0x1029,W
                                    1- 2380     	BANKSEL	r0x102B
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 02rr                      1- 2381     	CLRR	r0x102B
     0060 214C                      1- 2382     	MOVIA	0x4c
     0061 00rr                      1- 2383     	MOVAR	STK03
     0062 21B2                      1- 2384     	MOVIA	0xb2
     0063 00rr                      1- 2385     	MOVAR	STK02
     0064 00rr                      1- 2386     	MOVAR	STK01
                                    1- 2387     ;;108	MOVR	r0x102A,W
                                    1- 2388     	BANKSEL	r0x1029
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 01rr                      1- 2389     	MOVR	r0x1029,W
                                    1- 2390     	BANKSEL	r0x102A
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1- 2391     	MOVAR	r0x102A
     0069 00rr                      1- 2392     	MOVAR	STK00
     006A 2100                      1- 2393     	MOVIA	0x00
     006B 2rrr                      1- 2394     	LCALL	_sendRGB3
     006C 3rrr                      1- 2395     	LGOTO	_00277_DS_
     006D                           1- 2396     _00271_DS_:
                                    1- 2397     	.line	466, "main.c"; 	else if(i< max && i > min)
                                    1- 2398     	BANKSEL	r0x1027
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1- 2399     	MOVR	r0x1027,W
                                    1- 2400     	BANKSEL	r0x1029
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 04rr                      1- 2401     	SUBAR	r0x1029,W
     0071 0C03                      1- 2402     	BTRSC	STATUS,0
     0072 3rrr                      1- 2403     	LGOTO	_00267_DS_
     0073 01rr                      1- 2404     	MOVR	r0x1029,W
                                    1- 2405     	BANKSEL	r0x1028
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 04rr                      1- 2406     	SUBAR	r0x1028,W
     0076 0C03                      1- 2407     	BTRSC	STATUS,0
     0077 3rrr                      1- 2408     	LGOTO	_00267_DS_
                                    1- 2409     	.line	468, "main.c"; 	sendRGB3(i,RED2);
                                    1- 2410     	BANKSEL	r0x1029
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 01rr                      1- 2411     	MOVR	r0x1029,W
                                    1- 2412     	BANKSEL	r0x102B
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1- 2413     	CLRR	r0x102B
     007C 21B2                      1- 2414     	MOVIA	0xb2
     007D 00rr                      1- 2415     	MOVAR	STK03
     007E 00rr                      1- 2416     	MOVAR	STK02
     007F 00rr                      1- 2417     	MOVAR	STK01
                                    1- 2418     ;;104	MOVR	r0x102A,W
                                    1- 2419     	BANKSEL	r0x1029
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1- 2420     	MOVR	r0x1029,W
                                    1- 2421     	BANKSEL	r0x102A
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 00rr                      1- 2422     	MOVAR	r0x102A
     0084 00rr                      1- 2423     	MOVAR	STK00
     0085 2100                      1- 2424     	MOVIA	0x00
     0086 2rrr                      1- 2425     	LCALL	_sendRGB3
     0087 3rrr                      1- 2426     	LGOTO	_00277_DS_
     0088                           1- 2427     _00267_DS_:
                                    1- 2428     	.line	472, "main.c"; 	sendRGB3(i,RED3);
                                    1- 2429     	BANKSEL	r0x1029
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 01rr                      1- 2430     	MOVR	r0x1029,W
                                    1- 2431     	BANKSEL	r0x102B
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 02rr                      1- 2432     	CLRR	r0x102B
     008C 214C                      1- 2433     	MOVIA	0x4c
     008D 00rr                      1- 2434     	MOVAR	STK03
     008E 00rr                      1- 2435     	MOVAR	STK02
     008F 00rr                      1- 2436     	MOVAR	STK01
                                    1- 2437     ;;100	MOVR	r0x102A,W
                                    1- 2438     	BANKSEL	r0x1029
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 01rr                      1- 2439     	MOVR	r0x1029,W
                                    1- 2440     	BANKSEL	r0x102A
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 00rr                      1- 2441     	MOVAR	r0x102A
     0094 00rr                      1- 2442     	MOVAR	STK00
     0095 2100                      1- 2443     	MOVIA	0x00
     0096 2rrr                      1- 2444     	LCALL	_sendRGB3
     0097                           1- 2445     _00277_DS_:
                                    1- 2446     	.line	476, "main.c"; 	while(--i > 0);
                                    1- 2447     	BANKSEL	r0x1029
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 17rr                      1- 2448     	DECRSZ	r0x1029,F
     0099 3rrr                      1- 2449     	LGOTO	_00276_DS_
                                    1- 2450     	.line	477, "main.c"; 	}
                                    1- 2451     	RETURN	
     009A 0010                      3-   26 m1      ret
                                    1- 2452     ; exit point of _openCtr2
                                    1- 2454     ;***
                                    1- 2455     ;  pBlock Stats: dbName = C
                                    1- 2456     ;***
                                    1- 2457     ;has an exit
                                    1- 2458     ;functions called:
                                    1- 2459     ;   _sendRGB3
                                    1- 2460     ;   _sendRGB3
                                    1- 2461     ;   _sendRGB3
                                    1- 2462     ;   _sendRGB3
                                    1- 2463     ;   _sendRGB3
                                    1- 2464     ;   _sendRGB3
                                    1- 2465     ;   _sendRGB3
                                    1- 2466     ;   _sendRGB3
                                    1- 2467     ;   _sendRGB3
                                    1- 2468     ;   _sendRGB3
                                    1- 2469     ;   _sendRGB3
                                    1- 2470     ;   _sendRGB3
                                    1- 2471     ;9 compiler assigned registers:
                                    1- 2472     ;   r0x102C
                                    1- 2473     ;   r0x102D
                                    1- 2474     ;   r0x102E
                                    1- 2475     ;   r0x102F
                                    1- 2476     ;   r0x1030
                                    1- 2477     ;   STK03
                                    1- 2478     ;   STK02
                                    1- 2479     ;   STK01
                                    1- 2480     ;   STK00
                                    1- 2481     ;; Starting pCode block
                                    1- 2482     .segment "code"; module=main, function=_openCtr
                                    1- 2484     ;local variable name mapping:
     0000                           1- 2489     _openCtr:
                                    1- 2490     ; 2 exit points
                                    1- 2491     	.line	393, "main.c"; 	void openCtr(char redIndex)
                                    1- 2492     	BANKSEL	r0x102C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2493     	MOVAR	r0x102C
                                    1- 2494     	.line	396, "main.c"; 	char min = 7-redIndex;	
     0002 2707                      1- 2495     	SUBIA	0x07
                                    1- 2496     	BANKSEL	r0x102D
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 2497     	MOVAR	r0x102D
                                    1- 2498     	.line	397, "main.c"; 	char max = 7+redIndex;	
     0005 2107                      1- 2499     	MOVIA	0x07
                                    1- 2500     	BANKSEL	r0x102C
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 03rr                      1- 2501     	ADDAR	r0x102C,F
                                    1- 2502     	.line	398, "main.c"; 	do
     0008 210E                      1- 2503     	MOVIA	0x0e
                                    1- 2504     	BANKSEL	r0x102E
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 2505     	MOVAR	r0x102E
     000B                           1- 2506     _00250_DS_:
                                    1- 2507     	.line	401, "main.c"; 	if(i == min)
                                    1- 2508     	BANKSEL	r0x102D
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 2509     	MOVR	r0x102D,W
                                    1- 2510     	BANKSEL	r0x102E
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 12rr                      1- 2511     	XORAR	r0x102E,W
     000F 0903                      1- 2512     	BTRSS	STATUS,2
     0010 3rrr                      1- 2513     	LGOTO	_00248_DS_
                                    1- 2514     	.line	403, "main.c"; 	if(redTime == 0)
                                    1- 2515     	BANKSEL	_redTime
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2516     	MOVR	_redTime,W
     0013 0903                      1- 2517     	BTRSS	STATUS,2
     0014 3rrr                      1- 2518     	LGOTO	_00233_DS_
                                    1- 2519     	.line	405, "main.c"; 	sendRGB3(i,0x00,0x00,0x4C);
                                    1- 2520     	BANKSEL	r0x102E
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2521     	MOVR	r0x102E,W
                                    1- 2522     	BANKSEL	r0x1030
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 02rr                      1- 2523     	CLRR	r0x1030
     0019 214C                      1- 2524     	MOVIA	0x4c
     001A 00rr                      1- 2525     	MOVAR	STK03
     001B 2100                      1- 2526     	MOVIA	0x00
     001C 00rr                      1- 2527     	MOVAR	STK02
     001D 00rr                      1- 2528     	MOVAR	STK01
                                    1- 2529     ;;119	MOVR	r0x102F,W
                                    1- 2530     	BANKSEL	r0x102E
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 2531     	MOVR	r0x102E,W
                                    1- 2532     	BANKSEL	r0x102F
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 2533     	MOVAR	r0x102F
     0022 00rr                      1- 2534     	MOVAR	STK00
     0023 2100                      1- 2535     	MOVIA	0x00
     0024 2rrr                      1- 2536     	LCALL	_sendRGB3
     0025 3rrr                      1- 2537     	LGOTO	_00251_DS_
     0026                           1- 2538     _00233_DS_:
                                    1- 2539     	.line	407, "main.c"; 	else if(redTime == 1)
                                    1- 2540     	BANKSEL	_redTime
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 2541     	MOVR	_redTime,W
     0028 2401                      1- 2542     	XORIA	0x01
     0029 0903                      1- 2543     	BTRSS	STATUS,2
     002A 3rrr                      1- 2544     	LGOTO	_00251_DS_
                                    1- 2545     	.line	409, "main.c"; 	sendRGB3(i,0x00,0x4C,0x4C);
                                    1- 2546     	BANKSEL	r0x102E
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 2547     	MOVR	r0x102E,W
                                    1- 2548     	BANKSEL	r0x1030
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 02rr                      1- 2549     	CLRR	r0x1030
     002F 214C                      1- 2550     	MOVIA	0x4c
     0030 00rr                      1- 2551     	MOVAR	STK03
     0031 00rr                      1- 2552     	MOVAR	STK02
     0032 2100                      1- 2553     	MOVIA	0x00
     0033 00rr                      1- 2554     	MOVAR	STK01
                                    1- 2555     ;;115	MOVR	r0x102F,W
                                    1- 2556     	BANKSEL	r0x102E
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 2557     	MOVR	r0x102E,W
                                    1- 2558     	BANKSEL	r0x102F
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 2559     	MOVAR	r0x102F
     0038 00rr                      1- 2560     	MOVAR	STK00
     0039 2100                      1- 2561     	MOVIA	0x00
     003A 2rrr                      1- 2562     	LCALL	_sendRGB3
     003B 3rrr                      1- 2563     	LGOTO	_00251_DS_
     003C                           1- 2564     _00248_DS_:
                                    1- 2565     	.line	412, "main.c"; 	else if(i == max)
                                    1- 2566     	BANKSEL	r0x102C
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 2567     	MOVR	r0x102C,W
                                    1- 2568     	BANKSEL	r0x102E
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 12rr                      1- 2569     	XORAR	r0x102E,W
     0040 0903                      1- 2570     	BTRSS	STATUS,2
     0041 3rrr                      1- 2571     	LGOTO	_00245_DS_
                                    1- 2572     	.line	414, "main.c"; 	if(redTime == 0)
                                    1- 2573     	BANKSEL	_redTime
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1- 2574     	MOVR	_redTime,W
     0044 0903                      1- 2575     	BTRSS	STATUS,2
     0045 3rrr                      1- 2576     	LGOTO	_00238_DS_
                                    1- 2577     	.line	416, "main.c"; 	sendRGB3(i,0x4C,0x00,0x00);
                                    1- 2578     	BANKSEL	r0x102E
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1- 2579     	MOVR	r0x102E,W
                                    1- 2580     	BANKSEL	r0x1030
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 02rr                      1- 2581     	CLRR	r0x1030
     004A 2100                      1- 2582     	MOVIA	0x00
     004B 00rr                      1- 2583     	MOVAR	STK03
     004C 00rr                      1- 2584     	MOVAR	STK02
     004D 214C                      1- 2585     	MOVIA	0x4c
     004E 00rr                      1- 2586     	MOVAR	STK01
                                    1- 2587     ;;111	MOVR	r0x102F,W
                                    1- 2588     	BANKSEL	r0x102E
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 2589     	MOVR	r0x102E,W
                                    1- 2590     	BANKSEL	r0x102F
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 2591     	MOVAR	r0x102F
     0053 00rr                      1- 2592     	MOVAR	STK00
     0054 2100                      1- 2593     	MOVIA	0x00
     0055 2rrr                      1- 2594     	LCALL	_sendRGB3
     0056 3rrr                      1- 2595     	LGOTO	_00251_DS_
     0057                           1- 2596     _00238_DS_:
                                    1- 2597     	.line	418, "main.c"; 	else if(redTime == 1)
                                    1- 2598     	BANKSEL	_redTime
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 01rr                      1- 2599     	MOVR	_redTime,W
     0059 2401                      1- 2600     	XORIA	0x01
     005A 0903                      1- 2601     	BTRSS	STATUS,2
     005B 3rrr                      1- 2602     	LGOTO	_00251_DS_
                                    1- 2603     	.line	420, "main.c"; 	sendRGB3(i,0x4C,0x4C,0x00);
                                    1- 2604     	BANKSEL	r0x102E
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 2605     	MOVR	r0x102E,W
                                    1- 2606     	BANKSEL	r0x1030
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 02rr                      1- 2607     	CLRR	r0x1030
     0060 2100                      1- 2608     	MOVIA	0x00
     0061 00rr                      1- 2609     	MOVAR	STK03
     0062 214C                      1- 2610     	MOVIA	0x4c
     0063 00rr                      1- 2611     	MOVAR	STK02
     0064 00rr                      1- 2612     	MOVAR	STK01
                                    1- 2613     ;;107	MOVR	r0x102F,W
                                    1- 2614     	BANKSEL	r0x102E
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 01rr                      1- 2615     	MOVR	r0x102E,W
                                    1- 2616     	BANKSEL	r0x102F
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1- 2617     	MOVAR	r0x102F
     0069 00rr                      1- 2618     	MOVAR	STK00
     006A 2100                      1- 2619     	MOVIA	0x00
     006B 2rrr                      1- 2620     	LCALL	_sendRGB3
     006C 3rrr                      1- 2621     	LGOTO	_00251_DS_
     006D                           1- 2622     _00245_DS_:
                                    1- 2623     	.line	423, "main.c"; 	else if(i< max && i > min)
                                    1- 2624     	BANKSEL	r0x102C
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1- 2625     	MOVR	r0x102C,W
                                    1- 2626     	BANKSEL	r0x102E
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 04rr                      1- 2627     	SUBAR	r0x102E,W
     0071 0C03                      1- 2628     	BTRSC	STATUS,0
     0072 3rrr                      1- 2629     	LGOTO	_00241_DS_
     0073 01rr                      1- 2630     	MOVR	r0x102E,W
                                    1- 2631     	BANKSEL	r0x102D
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 04rr                      1- 2632     	SUBAR	r0x102D,W
     0076 0C03                      1- 2633     	BTRSC	STATUS,0
     0077 3rrr                      1- 2634     	LGOTO	_00241_DS_
                                    1- 2635     	.line	425, "main.c"; 	sendRGB3(i,RED3);
                                    1- 2636     	BANKSEL	r0x102E
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 01rr                      1- 2637     	MOVR	r0x102E,W
                                    1- 2638     	BANKSEL	r0x1030
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1- 2639     	CLRR	r0x1030
     007C 214C                      1- 2640     	MOVIA	0x4c
     007D 00rr                      1- 2641     	MOVAR	STK03
     007E 00rr                      1- 2642     	MOVAR	STK02
     007F 00rr                      1- 2643     	MOVAR	STK01
                                    1- 2644     ;;103	MOVR	r0x102F,W
                                    1- 2645     	BANKSEL	r0x102E
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1- 2646     	MOVR	r0x102E,W
                                    1- 2647     	BANKSEL	r0x102F
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 00rr                      1- 2648     	MOVAR	r0x102F
     0084 00rr                      1- 2649     	MOVAR	STK00
     0085 2100                      1- 2650     	MOVIA	0x00
     0086 2rrr                      1- 2651     	LCALL	_sendRGB3
     0087 3rrr                      1- 2652     	LGOTO	_00251_DS_
     0088                           1- 2653     _00241_DS_:
                                    1- 2654     	.line	429, "main.c"; 	sendRGB3(i,BLACK);
                                    1- 2655     	BANKSEL	r0x102E
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 01rr                      1- 2656     	MOVR	r0x102E,W
                                    1- 2657     	BANKSEL	r0x1030
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 02rr                      1- 2658     	CLRR	r0x1030
     008C 2100                      1- 2659     	MOVIA	0x00
     008D 00rr                      1- 2660     	MOVAR	STK03
     008E 00rr                      1- 2661     	MOVAR	STK02
     008F 00rr                      1- 2662     	MOVAR	STK01
                                    1- 2663     ;;99	MOVR	r0x102F,W
                                    1- 2664     	BANKSEL	r0x102E
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 01rr                      1- 2665     	MOVR	r0x102E,W
                                    1- 2666     	BANKSEL	r0x102F
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 00rr                      1- 2667     	MOVAR	r0x102F
     0094 00rr                      1- 2668     	MOVAR	STK00
     0095 2100                      1- 2669     	MOVIA	0x00
     0096 2rrr                      1- 2670     	LCALL	_sendRGB3
     0097                           1- 2671     _00251_DS_:
                                    1- 2672     	.line	433, "main.c"; 	while(--i > 0);
                                    1- 2673     	BANKSEL	r0x102E
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 17rr                      1- 2674     	DECRSZ	r0x102E,F
     0099 3rrr                      1- 2675     	LGOTO	_00250_DS_
                                    1- 2676     	.line	434, "main.c"; 	}
                                    1- 2677     	RETURN	
     009A 0010                      3-   26 m1      ret
                                    1- 2678     ; exit point of _openCtr
                                    1- 2680     ;***
                                    1- 2681     ;  pBlock Stats: dbName = C
                                    1- 2682     ;***
                                    1- 2683     ;has an exit
                                    1- 2684     ;functions called:
                                    1- 2685     ;   _sendRGB2
                                    1- 2686     ;   _sendRGB
                                    1- 2687     ;   _sendRGB2
                                    1- 2688     ;   _sendRGB2
                                    1- 2689     ;   _sendRGB
                                    1- 2690     ;   _sendRGB2
                                    1- 2691     ;   _sendRGB2
                                    1- 2692     ;   _sendRGB
                                    1- 2693     ;   _sendRGB2
                                    1- 2694     ;   _sendRGB2
                                    1- 2695     ;   _sendRGB
                                    1- 2696     ;   _sendRGB2
                                    1- 2697     ;6 compiler assigned registers:
                                    1- 2698     ;   r0x1031
                                    1- 2699     ;   STK00
                                    1- 2700     ;   r0x1032
                                    1- 2701     ;   STK01
                                    1- 2702     ;   r0x1033
                                    1- 2703     ;   r0x1034
                                    1- 2704     ;; Starting pCode block
                                    1- 2705     .segment "code"; module=main, function=_setColor
                                    1- 2707     ;local variable name mapping:
     0000                           1- 2712     _setColor:
                                    1- 2713     ; 2 exit points
                                    1- 2714     	.line	361, "main.c"; 	void setColor(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 2715     	BANKSEL	r0x1031
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2716     	MOVAR	r0x1031
     0002 01rr                      1- 2717     	MOVR	STK00,W
                                    1- 2718     	BANKSEL	r0x1032
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 2719     	MOVAR	r0x1032
     0005 01rr                      1- 2720     	MOVR	STK01,W
                                    1- 2721     	BANKSEL	r0x1033
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 2722     	MOVAR	r0x1033
                                    1- 2723     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2724     ;;unsigned compare: left >= lit (0x33=51), size=1
                                    1- 2725     	.line	365, "main.c"; 	if((DC > 50) && (colorR > 0 || colorG > 0 || colorB > 0))
     0008 2133                      1- 2726     	MOVIA	0x33
                                    1- 2727     	BANKSEL	_DC
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 04rr                      1- 2728     	SUBAR	_DC,W
     000B 0803                      1- 2729     	BTRSS	STATUS,0
     000C 3rrr                      1- 2730     	LGOTO	_00220_DS_
                                    1- 2731     	BANKSEL	r0x1031
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 2732     	MOVR	r0x1031,W
     000F 0903                      1- 2733     	BTRSS	STATUS,2
     0010 3rrr                      1- 2734     	LGOTO	_00219_DS_
                                    1- 2735     	BANKSEL	r0x1032
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2736     	MOVR	r0x1032,W
     0013 0903                      1- 2737     	BTRSS	STATUS,2
     0014 3rrr                      1- 2738     	LGOTO	_00219_DS_
                                    1- 2739     	BANKSEL	r0x1033
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2740     	MOVR	r0x1033,W
     0017 0D03                      1- 2741     	BTRSC	STATUS,2
     0018 3rrr                      1- 2742     	LGOTO	_00220_DS_
     0019                           1- 2743     _00219_DS_:
                                    1- 2744     	.line	369, "main.c"; 	sendRGB2(colorR,colorG,colorB);	
                                    1- 2745     	BANKSEL	r0x1033
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 2746     	MOVR	r0x1033,W
     001B 00rr                      1- 2747     	MOVAR	STK01
                                    1- 2748     	BANKSEL	r0x1032
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 2749     	MOVR	r0x1032,W
     001E 00rr                      1- 2750     	MOVAR	STK00
                                    1- 2751     	BANKSEL	r0x1031
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 2752     	MOVR	r0x1031,W
     0021 2rrr                      1- 2753     	LCALL	_sendRGB2
                                    1- 2754     	.line	370, "main.c"; 	do
     0022 210C                      1- 2755     	MOVIA	0x0c
                                    1- 2756     	BANKSEL	r0x1034
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 2757     	MOVAR	r0x1034
     0025                           1- 2758     _00213_DS_:
                                    1- 2759     	.line	372, "main.c"; 	sendRGB(BLACK);	
     0025 2100                      1- 2760     	MOVIA	0x00
     0026 00rr                      1- 2761     	MOVAR	STK01
     0027 00rr                      1- 2762     	MOVAR	STK00
     0028 2rrr                      1- 2763     	LCALL	_sendRGB
                                    1- 2764     	.line	374, "main.c"; 	while(--i > 0);
                                    1- 2765     	BANKSEL	r0x1034
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 17rr                      1- 2766     	DECRSZ	r0x1034,F
     002B 3rrr                      1- 2767     	LGOTO	_00213_DS_
                                    1- 2768     	.line	375, "main.c"; 	sendRGB2(colorR,colorG,colorB);	
                                    1- 2769     	BANKSEL	r0x1033
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1- 2770     	MOVR	r0x1033,W
     002E 00rr                      1- 2771     	MOVAR	STK01
                                    1- 2772     	BANKSEL	r0x1032
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 2773     	MOVR	r0x1032,W
     0031 00rr                      1- 2774     	MOVAR	STK00
                                    1- 2775     	BANKSEL	r0x1031
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 01rr                      1- 2776     	MOVR	r0x1031,W
     0034 2rrr                      1- 2777     	LCALL	_sendRGB2
     0035 3rrr                      1- 2778     	LGOTO	_00225_DS_
     0036                           1- 2779     _00220_DS_:
                                    1- 2780     	.line	381, "main.c"; 	sendRGB2(colorR,colorG,colorB);	
                                    1- 2781     	BANKSEL	r0x1033
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1- 2782     	MOVR	r0x1033,W
     0038 00rr                      1- 2783     	MOVAR	STK01
                                    1- 2784     	BANKSEL	r0x1032
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 2785     	MOVR	r0x1032,W
     003B 00rr                      1- 2786     	MOVAR	STK00
                                    1- 2787     	BANKSEL	r0x1031
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 2788     	MOVR	r0x1031,W
     003E 2rrr                      1- 2789     	LCALL	_sendRGB2
                                    1- 2790     	.line	382, "main.c"; 	do
     003F 210C                      1- 2791     	MOVIA	0x0c
                                    1- 2792     	BANKSEL	r0x1034
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 00rr                      1- 2793     	MOVAR	r0x1034
     0042                           1- 2794     _00216_DS_:
                                    1- 2795     	.line	384, "main.c"; 	sendRGB(colorR,colorG,colorB);	
                                    1- 2796     	BANKSEL	r0x1033
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1- 2797     	MOVR	r0x1033,W
     0044 00rr                      1- 2798     	MOVAR	STK01
                                    1- 2799     	BANKSEL	r0x1032
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1- 2800     	MOVR	r0x1032,W
     0047 00rr                      1- 2801     	MOVAR	STK00
                                    1- 2802     	BANKSEL	r0x1031
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 01rr                      1- 2803     	MOVR	r0x1031,W
     004A 2rrr                      1- 2804     	LCALL	_sendRGB
                                    1- 2805     	.line	386, "main.c"; 	while(--i > 0);
                                    1- 2806     	BANKSEL	r0x1034
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 17rr                      1- 2807     	DECRSZ	r0x1034,F
     004D 3rrr                      1- 2808     	LGOTO	_00216_DS_
                                    1- 2809     	.line	387, "main.c"; 	sendRGB2(colorR,colorG,colorB);	
                                    1- 2810     	BANKSEL	r0x1033
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1- 2811     	MOVR	r0x1033,W
     0050 00rr                      1- 2812     	MOVAR	STK01
                                    1- 2813     	BANKSEL	r0x1032
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 01rr                      1- 2814     	MOVR	r0x1032,W
     0053 00rr                      1- 2815     	MOVAR	STK00
                                    1- 2816     	BANKSEL	r0x1031
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 01rr                      1- 2817     	MOVR	r0x1031,W
     0056 2rrr                      1- 2818     	LCALL	_sendRGB2
     0057                           1- 2819     _00225_DS_:
                                    1- 2820     	.line	389, "main.c"; 	}
                                    1- 2821     	RETURN	
     0057 0010                      3-   26 m1      ret
                                    1- 2822     ; exit point of _setColor
                                    1- 2824     ;***
                                    1- 2825     ;  pBlock Stats: dbName = C
                                    1- 2826     ;***
                                    1- 2827     ;has an exit
                                    1- 2828     ;; Starting pCode block
                                    1- 2829     .segment "code"; module=main, function=_initTimer0
     0000                           1- 2831     _initTimer0:
                                    1- 2832     ; 2 exit points
                                    1- 2833     	.line	339, "main.c"; 	PORTA = 0x00;
                                    1- 2834     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 2835     	CLRR	_PORTA
                                    1- 2836     	.line	342, "main.c"; 	IOSTA =  C_PA4_Input | C_PA5_Input | C_PA7_Input;	
     0002 21B0                      1- 2837     	MOVIA	0xb0
     0003 000r                      1- 2838     	IOST	_IOSTA
                                    1- 2839     	.line	343, "main.c"; 	APHCON = 0xDF;						//PA5下拉	
     0004 21DF                      1- 2840     	MOVIA	0xdf
     0005 000r                      1- 2841     	IOST	_APHCON
                                    1- 2842     	.line	344, "main.c"; 	ABPLCON = 0xF7;						//PA3下拉
     0006 21F7                      1- 2843     	MOVIA	0xf7
     0007 00rr                      1- 2844     	MOVAR	_ABPLCON
                                    1- 2845     	.line	345, "main.c"; 	PORTA = 0x00;                        	// PORTA Data Register = 0x00
     0008 02rr                      1- 2846     	CLRR	_PORTA
                                    1- 2847     	.line	346, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT & LVR
     0009 2188                      1- 2848     	MOVIA	0x88
     000A 00rr                      1- 2849     	MOVAR	_PCON
                                    1- 2850     	.line	347, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     000B 2101                      1- 2851     	MOVIA	0x01
     000C 00rr                      1- 2852     	MOVAR	_INTE
                                    1- 2853     	.line	348, "main.c"; 	INTF = 0;
     000D 02rr                      1- 2854     	CLRR	_INTF
                                    1- 2855     	.line	351, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2856     	CLRA	
     000F 000r                      1- 2857     	IOST	_PCON1
                                    1- 2858     	.line	353, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2859     	MOVIA	0x37
     0011 00rr                      1- 2860     	MOVAR	_TMR0
                                    1- 2861     	.line	354, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0012 0200                      1- 2862     	CLRA	
     0013 0003                      1- 2863     	T0MD	
                                    1- 2864     	.line	356, "main.c"; 	PCON1 = C_TMR0_En;	
     0014 2101                      1- 2865     	MOVIA	0x01
     0015 000r                      1- 2866     	IOST	_PCON1
                                    1- 2867     	.line	357, "main.c"; 	ENI();	
     0016 0004                      1- 2868     	ENI
                                    1- 2869     	.line	359, "main.c"; 	}
                                    1- 2870     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 2871     ; exit point of _initTimer0
                                    1- 2873     ;***
                                    1- 2874     ;  pBlock Stats: dbName = C
                                    1- 2875     ;***
                                    1- 2876     ;has an exit
                                    1- 2877     ;functions called:
                                    1- 2878     ;   _openCtr
                                    1- 2879     ;   _openCtr2
                                    1- 2880     ;   _closeCtr2
                                    1- 2881     ;   _closeCtr
                                    1- 2882     ;   _openCtr
                                    1- 2883     ;   _openCtr2
                                    1- 2884     ;   _closeCtr2
                                    1- 2885     ;   _closeCtr
                                    1- 2886     ;1 compiler assigned register :
                                    1- 2887     ;   r0x1035
                                    1- 2888     ;; Starting pCode block
                                    1- 2889     .segment "code"; module=main, function=_xdCtr
     0000                           1- 2891     _xdCtr:
                                    1- 2892     ; 2 exit points
                                    1- 2893     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2894     ;;unsigned compare: left >= lit (0x33=51), size=1
                                    1- 2895     	.line	279, "main.c"; 	if(XD > 50)
     0000 2133                      1- 2896     	MOVIA	0x33
                                    1- 2897     	BANKSEL	_XD
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 2898     	SUBAR	_XD,W
     0003 0803                      1- 2899     	BTRSS	STATUS,0
     0004 3rrr                      1- 2900     	LGOTO	_00202_DS_
                                    1- 2901     	.line	282, "main.c"; 	if(++redTime > 1)
                                    1- 2902     	BANKSEL	_redTime
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 2903     	INCR	_redTime,F
                                    1- 2904     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2905     ;;unsigned compare: left >= lit (0x2=2), size=1
     0007 2102                      1- 2906     	MOVIA	0x02
     0008 04rr                      1- 2907     	SUBAR	_redTime,W
     0009 0803                      1- 2908     	BTRSS	STATUS,0
     000A 3rrr                      1- 2909     	LGOTO	_00187_DS_
                                    1- 2910     	.line	284, "main.c"; 	redTime = 0;
     000B 02rr                      1- 2911     	CLRR	_redTime
                                    1- 2912     ;;unsigned compare: left < lit (0xE=14), size=1
                                    1- 2913     	.line	285, "main.c"; 	if(ledStep < 14)
     000C 210E                      1- 2914     	MOVIA	0x0e
                                    1- 2915     	BANKSEL	_ledStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 2916     	SUBAR	_ledStep,W
     000F 0C03                      1- 2917     	BTRSC	STATUS,0
     0010 3rrr                      1- 2918     	LGOTO	_00184_DS_
                                    1- 2919     	.line	287, "main.c"; 	ledStep++;
     0011 05rr                      1- 2920     	INCR	_ledStep,F
                                    1- 2921     	.line	288, "main.c"; 	workStep = 1;
     0012 2101                      1- 2922     	MOVIA	0x01
                                    1- 2923     	BANKSEL	_workStep
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1- 2924     	MOVAR	_workStep
     0015 3rrr                      1- 2925     	LGOTO	_00187_DS_
     0016                           1- 2926     _00184_DS_:
                                    1- 2927     	.line	292, "main.c"; 	workStep = 2;
     0016 2102                      1- 2928     	MOVIA	0x02
                                    1- 2929     	BANKSEL	_workStep
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 2930     	MOVAR	_workStep
                                    1- 2931     ;;unsigned compare: left < lit (0x7=7), size=1
     0019                           1- 2932     _00187_DS_:
                                    1- 2933     	.line	295, "main.c"; 	if(ledStep < 7)
     0019 2107                      1- 2934     	MOVIA	0x07
                                    1- 2935     	BANKSEL	_ledStep
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 04rr                      1- 2936     	SUBAR	_ledStep,W
     001C 0C03                      1- 2937     	BTRSC	STATUS,0
     001D 3rrr                      1- 2938     	LGOTO	_00189_DS_
                                    1- 2939     	.line	297, "main.c"; 	openCtr(ledStep);
     001E 01rr                      1- 2940     	MOVR	_ledStep,W
     001F 2rrr                      1- 2941     	LCALL	_openCtr
     0020 3rrr                      1- 2942     	LGOTO	_00204_DS_
     0021                           1- 2943     _00189_DS_:
                                    1- 2944     	.line	301, "main.c"; 	openCtr2(ledStep-7);
     0021 21F9                      1- 2945     	MOVIA	0xf9
                                    1- 2946     	BANKSEL	_ledStep
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 2947     	ADDAR	_ledStep,W
                                    1- 2948     	BANKSEL	r0x1035
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 2949     	MOVAR	r0x1035
     0026 2rrr                      1- 2950     	LCALL	_openCtr2
     0027 3rrr                      1- 2951     	LGOTO	_00204_DS_
     0028                           1- 2952     _00202_DS_:
                                    1- 2953     	.line	306, "main.c"; 	if(breakFlag == 1)
                                    1- 2954     	BANKSEL	_breakFlag
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1- 2955     	MOVR	_breakFlag,W
     002A 2401                      1- 2956     	XORIA	0x01
     002B 0903                      1- 2957     	BTRSS	STATUS,2
     002C 3rrr                      1- 2958     	LGOTO	_00192_DS_
                                    1- 2959     	.line	308, "main.c"; 	ledStep = 14;	//如果断开XD就执行关机
     002D 210E                      1- 2960     	MOVIA	0x0e
                                    1- 2961     	BANKSEL	_ledStep
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1- 2962     	MOVAR	_ledStep
                                    1- 2963     	.line	309, "main.c"; 	breakFlag = 0;
                                    1- 2964     	BANKSEL	_breakFlag
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 02rr                      1- 2965     	CLRR	_breakFlag
     0032                           1- 2966     _00192_DS_:
                                    1- 2967     	.line	312, "main.c"; 	if(++redTime > 1)
                                    1- 2968     	BANKSEL	_redTime
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 05rr                      1- 2969     	INCR	_redTime,F
                                    1- 2970     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2971     ;;unsigned compare: left >= lit (0x2=2), size=1
     0034 2102                      1- 2972     	MOVIA	0x02
     0035 04rr                      1- 2973     	SUBAR	_redTime,W
     0036 0803                      1- 2974     	BTRSS	STATUS,0
     0037 3rrr                      1- 2975     	LGOTO	_00197_DS_
                                    1- 2976     	.line	314, "main.c"; 	redTime = 0;
     0038 02rr                      1- 2977     	CLRR	_redTime
                                    1- 2978     	.line	315, "main.c"; 	if(ledStep > 0)
                                    1- 2979     	BANKSEL	_ledStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 2980     	MOVR	_ledStep,W
     003B 0D03                      1- 2981     	BTRSC	STATUS,2
     003C 3rrr                      1- 2982     	LGOTO	_00194_DS_
                                    1- 2983     	.line	317, "main.c"; 	ledStep--;
     003D 06rr                      1- 2984     	DECR	_ledStep,F
                                    1- 2985     	.line	318, "main.c"; 	workStep = 3;
     003E 2103                      1- 2986     	MOVIA	0x03
                                    1- 2987     	BANKSEL	_workStep
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 00rr                      1- 2988     	MOVAR	_workStep
     0041 3rrr                      1- 2989     	LGOTO	_00197_DS_
     0042                           1- 2990     _00194_DS_:
                                    1- 2991     	.line	322, "main.c"; 	workStep = 0;
                                    1- 2992     	BANKSEL	_workStep
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 02rr                      1- 2993     	CLRR	_workStep
                                    1- 2994     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2995     ;;unsigned compare: left >= lit (0x8=8), size=1
     0044                           1- 2996     _00197_DS_:
                                    1- 2997     	.line	325, "main.c"; 	if(ledStep > 7)
     0044 2108                      1- 2998     	MOVIA	0x08
                                    1- 2999     	BANKSEL	_ledStep
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 04rr                      1- 3000     	SUBAR	_ledStep,W
     0047 0803                      1- 3001     	BTRSS	STATUS,0
     0048 3rrr                      1- 3002     	LGOTO	_00199_DS_
                                    1- 3003     	.line	327, "main.c"; 	closeCtr2(ledStep-7);
     0049 21F9                      1- 3004     	MOVIA	0xf9
     004A 03rr                      1- 3005     	ADDAR	_ledStep,W
                                    1- 3006     	BANKSEL	r0x1035
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1- 3007     	MOVAR	r0x1035
     004D 2rrr                      1- 3008     	LCALL	_closeCtr2
     004E 3rrr                      1- 3009     	LGOTO	_00204_DS_
     004F                           1- 3010     _00199_DS_:
                                    1- 3011     	.line	331, "main.c"; 	closeCtr(ledStep);
                                    1- 3012     	BANKSEL	_ledStep
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 3013     	MOVR	_ledStep,W
     0051 2rrr                      1- 3014     	LCALL	_closeCtr
     0052                           1- 3015     _00204_DS_:
                                    1- 3016     	.line	335, "main.c"; 	}
                                    1- 3017     	RETURN	
     0052 0010                      3-   26 m1      ret
                                    1- 3018     ; exit point of _xdCtr
                                    1- 3020     ;***
                                    1- 3021     ;  pBlock Stats: dbName = C
                                    1- 3022     ;***
                                    1- 3023     ;has an exit
                                    1- 3024     ;functions called:
                                    1- 3025     ;   _setColor
                                    1- 3026     ;   _setColor
                                    1- 3027     ;   _setColor
                                    1- 3028     ;   _setColor
                                    1- 3029     ;   _setColor
                                    1- 3030     ;   _setColor
                                    1- 3031     ;2 compiler assigned registers:
                                    1- 3032     ;   STK01
                                    1- 3033     ;   STK00
                                    1- 3034     ;; Starting pCode block
                                    1- 3035     .segment "code"; module=main, function=_keyCtr
     0000                           1- 3037     _keyCtr:
                                    1- 3038     ; 2 exit points
                                    1- 3039     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3040     ;;unsigned compare: left >= lit (0x33=51), size=1
                                    1- 3041     	.line	244, "main.c"; 	if(XD > 50)
     0000 2133                      1- 3042     	MOVIA	0x33
                                    1- 3043     	BANKSEL	_XD
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 3044     	SUBAR	_XD,W
     0003 0803                      1- 3045     	BTRSS	STATUS,0
     0004 3rrr                      1- 3046     	LGOTO	_00177_DS_
                                    1- 3047     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3048     ;;unsigned compare: left >= lit (0x33=51), size=1
                                    1- 3049     	.line	247, "main.c"; 	if(SC > 50)
     0005 2133                      1- 3050     	MOVIA	0x33
                                    1- 3051     	BANKSEL	_SC
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 3052     	SUBAR	_SC,W
     0008 0803                      1- 3053     	BTRSS	STATUS,0
     0009 3rrr                      1- 3054     	LGOTO	_00174_DS_
                                    1- 3055     	.line	251, "main.c"; 	setColor(RED5);	
     000A 217F                      1- 3056     	MOVIA	0x7f
     000B 00rr                      1- 3057     	MOVAR	STK01
     000C 00rr                      1- 3058     	MOVAR	STK00
     000D 2rrr                      1- 3059     	LCALL	_setColor
                                    1- 3060     	.line	252, "main.c"; 	return 1;
     000E 2101                      1- 3061     	MOVIA	0x01
     000F 3rrr                      1- 3062     	LGOTO	_00178_DS_
                                    1- 3063     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3064     ;;unsigned compare: left >= lit (0x33=51), size=1
     0010                           1- 3065     _00174_DS_:
                                    1- 3066     	.line	254, "main.c"; 	else if(DC > 50)
     0010 2133                      1- 3067     	MOVIA	0x33
                                    1- 3068     	BANKSEL	_DC
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1- 3069     	SUBAR	_DC,W
     0013 0803                      1- 3070     	BTRSS	STATUS,0
     0014 3rrr                      1- 3071     	LGOTO	_00177_DS_
                                    1- 3072     	.line	258, "main.c"; 	if(count100ms == 0)
                                    1- 3073     	BANKSEL	_count100ms
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 3074     	MOVR	_count100ms,W
     0017 0903                      1- 3075     	BTRSS	STATUS,2
     0018 3rrr                      1- 3076     	LGOTO	_00169_DS_
                                    1- 3077     	.line	260, "main.c"; 	setColor(RED5);
     0019 217F                      1- 3078     	MOVIA	0x7f
     001A 00rr                      1- 3079     	MOVAR	STK01
     001B 00rr                      1- 3080     	MOVAR	STK00
     001C 2rrr                      1- 3081     	LCALL	_setColor
     001D 3rrr                      1- 3082     	LGOTO	_00170_DS_
     001E                           1- 3083     _00169_DS_:
                                    1- 3084     	.line	262, "main.c"; 	else if(count100ms == 5)
                                    1- 3085     	BANKSEL	_count100ms
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 3086     	MOVR	_count100ms,W
     0020 2405                      1- 3087     	XORIA	0x05
     0021 0903                      1- 3088     	BTRSS	STATUS,2
     0022 3rrr                      1- 3089     	LGOTO	_00170_DS_
                                    1- 3090     	.line	264, "main.c"; 	setColor(BLACK);
     0023 2100                      1- 3091     	MOVIA	0x00
     0024 00rr                      1- 3092     	MOVAR	STK01
     0025 00rr                      1- 3093     	MOVAR	STK00
     0026 2rrr                      1- 3094     	LCALL	_setColor
     0027                           1- 3095     _00170_DS_:
                                    1- 3096     	.line	266, "main.c"; 	return 1;
     0027 2101                      1- 3097     	MOVIA	0x01
     0028 3rrr                      1- 3098     	LGOTO	_00178_DS_
     0029                           1- 3099     _00177_DS_:
                                    1- 3100     	.line	271, "main.c"; 	return 0;
     0029 2100                      1- 3101     	MOVIA	0x00
     002A                           1- 3102     _00178_DS_:
                                    1- 3103     	.line	272, "main.c"; 	}
                                    1- 3104     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1- 3105     ; exit point of _keyCtr
                                    1- 3107     ;***
                                    1- 3108     ;  pBlock Stats: dbName = C
                                    1- 3109     ;***
                                    1- 3110     ;has an exit
                                    1- 3111     ;; Starting pCode block
                                    1- 3112     .segment "code"; module=main, function=_readKey
     0000                           1- 3114     _readKey:
                                    1- 3115     ; 2 exit points
                                    1- 3116     	.line	208, "main.c"; 	if(PORTA & 0x10)
                                    1- 3117     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 0Arr                      1- 3118     	BTRSS	_PORTA,4
     0002 3rrr                      1- 3119     	LGOTO	_00149_DS_
                                    1- 3120     	.line	210, "main.c"; 	if(++XD > 50)
                                    1- 3121     	BANKSEL	_XD
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 05rr                      1- 3122     	INCR	_XD,F
                                    1- 3123     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3124     ;;unsigned compare: left >= lit (0x33=51), size=1
     0005 2133                      1- 3125     	MOVIA	0x33
     0006 04rr                      1- 3126     	SUBAR	_XD,W
     0007 0803                      1- 3127     	BTRSS	STATUS,0
     0008 3rrr                      1- 3128     	LGOTO	_00150_DS_
                                    1- 3129     	.line	212, "main.c"; 	XD = 51;
     0009 2133                      1- 3130     	MOVIA	0x33
     000A 00rr                      1- 3131     	MOVAR	_XD
     000B 3rrr                      1- 3132     	LGOTO	_00150_DS_
     000C                           1- 3133     _00149_DS_:
                                    1- 3134     	.line	216, "main.c"; 	XD = 0;
                                    1- 3135     	BANKSEL	_XD
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1- 3136     	CLRR	_XD
     000E                           1- 3137     _00150_DS_:
                                    1- 3138     	.line	218, "main.c"; 	if(PORTA & 0x20)
                                    1- 3139     	BANKSEL	_PORTA
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 0Arr                      1- 3140     	BTRSS	_PORTA,5
     0010 3rrr                      1- 3141     	LGOTO	_00154_DS_
                                    1- 3142     	.line	220, "main.c"; 	if(++SC > 50)
                                    1- 3143     	BANKSEL	_SC
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 05rr                      1- 3144     	INCR	_SC,F
                                    1- 3145     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3146     ;;unsigned compare: left >= lit (0x33=51), size=1
     0013 2133                      1- 3147     	MOVIA	0x33
     0014 04rr                      1- 3148     	SUBAR	_SC,W
     0015 0803                      1- 3149     	BTRSS	STATUS,0
     0016 3rrr                      1- 3150     	LGOTO	_00155_DS_
                                    1- 3151     	.line	222, "main.c"; 	SC = 51;
     0017 2133                      1- 3152     	MOVIA	0x33
     0018 00rr                      1- 3153     	MOVAR	_SC
     0019 3rrr                      1- 3154     	LGOTO	_00155_DS_
     001A                           1- 3155     _00154_DS_:
                                    1- 3156     	.line	226, "main.c"; 	SC = 0;
                                    1- 3157     	BANKSEL	_SC
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 02rr                      1- 3158     	CLRR	_SC
     001C                           1- 3159     _00155_DS_:
                                    1- 3160     	.line	228, "main.c"; 	if(PORTA & 0x80)
                                    1- 3161     	BANKSEL	_PORTA
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 0Brr                      1- 3162     	BTRSS	_PORTA,7
     001E 3rrr                      1- 3163     	LGOTO	_00159_DS_
                                    1- 3164     	.line	230, "main.c"; 	if(++DC > 50)
                                    1- 3165     	BANKSEL	_DC
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 05rr                      1- 3166     	INCR	_DC,F
                                    1- 3167     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3168     ;;unsigned compare: left >= lit (0x33=51), size=1
     0021 2133                      1- 3169     	MOVIA	0x33
     0022 04rr                      1- 3170     	SUBAR	_DC,W
     0023 0803                      1- 3171     	BTRSS	STATUS,0
     0024 3rrr                      1- 3172     	LGOTO	_00161_DS_
                                    1- 3173     	.line	232, "main.c"; 	DC = 51;
     0025 2133                      1- 3174     	MOVIA	0x33
     0026 00rr                      1- 3175     	MOVAR	_DC
     0027 3rrr                      1- 3176     	LGOTO	_00161_DS_
     0028                           1- 3177     _00159_DS_:
                                    1- 3178     	.line	236, "main.c"; 	DC = 0;
                                    1- 3179     	BANKSEL	_DC
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 3180     	CLRR	_DC
     002A                           1- 3181     _00161_DS_:
                                    1- 3182     	.line	237, "main.c"; 	}
                                    1- 3183     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1- 3184     ; exit point of _readKey
                                    1- 3187     ;	code size estimation:
                                    1- 3188     ;	 1292+  335 =  1627 instructions ( 3924 byte)
                                    1- 3190     	end
                                    1- 3190     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    00000022
_00002_DS_              Label    00000012
_00110_DS_              Label    00000024
_00112_DS_              Label    00000028
_00120_DS_              Label    0000001E
_00123_DS_              Label    00000022
_00125_DS_              Label    00000038
_00127_DS_              Label    00000042
_00130_DS_              Label    00000055
_00134_DS_              Label    00000047
_00141_DS_              Label    00000005
_00149_DS_              Label    0000000C
_00150_DS_              Label    0000000E
_00154_DS_              Label    0000001A
_00155_DS_              Label    0000001C
_00159_DS_              Label    00000028
_00161_DS_              Label    0000002A
_00169_DS_              Label    0000001E
_00170_DS_              Label    00000027
_00174_DS_              Label    00000010
_00177_DS_              Label    00000029
_00178_DS_              Label    0000002A
_00184_DS_              Label    00000016
_00187_DS_              Label    00000019
_00189_DS_              Label    00000021
_00192_DS_              Label    00000032
_00194_DS_              Label    00000042
_00197_DS_              Label    00000044
_00199_DS_              Label    0000004F
_00202_DS_              Label    00000028
_00204_DS_              Label    00000052
_00213_DS_              Label    00000025
_00216_DS_              Label    00000042
_00219_DS_              Label    00000019
_00220_DS_              Label    00000036
_00225_DS_              Label    00000057
_00233_DS_              Label    00000026
_00238_DS_              Label    00000057
_00241_DS_              Label    00000088
_00245_DS_              Label    0000006D
_00248_DS_              Label    0000003C
_00250_DS_              Label    0000000B
_00251_DS_              Label    00000097
_00259_DS_              Label    00000026
_00264_DS_              Label    00000057
_00267_DS_              Label    00000088
_00271_DS_              Label    0000006D
_00274_DS_              Label    0000003C
_00276_DS_              Label    0000000B
_00277_DS_              Label    00000097
_00285_DS_              Label    00000044
_00290_DS_              Label    00000075
_00293_DS_              Label    000000A6
_00297_DS_              Label    0000008B
_00300_DS_              Label    0000005A
_00303_DS_              Label    00000029
_00305_DS_              Label    00000015
_00306_DS_              Label    000000B5
_00349_DS_              Label    00000026
_00354_DS_              Label    00000057
_00357_DS_              Label    00000088
_00361_DS_              Label    0000006D
_00364_DS_              Label    0000003C
_00366_DS_              Label    0000000B
_00367_DS_              Label    00000097
_00372_DS_              Label    0000001E
_00373_DS_              Label    00000028
_00376_DS_              Label    00000031
_00383_DS_              Label    0000000A
_00385_DS_              Label    00000023
_00394_DS_              Label    0000001A
_00402_DS_              Label    00000010
_00407_DS_              Label    00000015
_00411_DS_              Label    0000001C
_00416_DS_              Label    00000021
_00420_DS_              Label    00000028
_00425_DS_              Label    0000002D
_00429_DS_              Label    00000034
_00434_DS_              Label    00000039
_00438_DS_              Label    00000040
_00443_DS_              Label    00000045
_00447_DS_              Label    0000004C
_00452_DS_              Label    00000051
_00456_DS_              Label    00000058
_00461_DS_              Label    0000005D
_00465_DS_              Label    00000064
_00470_DS_              Label    00000069
_00474_DS_              Label    00000070
_00479_DS_              Label    00000075
_00483_DS_              Label    0000007C
_00488_DS_              Label    00000081
_00492_DS_              Label    00000088
_00497_DS_              Label    0000008D
_00501_DS_              Label    00000094
_00506_DS_              Label    00000099
_00510_DS_              Label    000000A0
_00515_DS_              Label    000000A5
_00519_DS_              Label    000000AC
_00524_DS_              Label    000000B1
_00528_DS_              Label    000000B8
_00533_DS_              Label    000000BD
_00537_DS_              Label    000000C4
_00542_DS_              Label    000000C9
_00546_DS_              Label    000000D0
_00551_DS_              Label    000000D5
_00555_DS_              Label    000000DC
_00560_DS_              Label    000000E1
_00564_DS_              Label    000000E8
_00569_DS_              Label    000000ED
_00573_DS_              Label    000000F4
_00578_DS_              Label    000000F9
_00582_DS_              Label    00000100
_00587_DS_              Label    00000105
_00591_DS_              Label    0000010C
_00596_DS_              Label    00000111
_00600_DS_              Label    00000118
_00605_DS_              Label    0000011D
_00609_DS_              Label    00000124
_00614_DS_              Label    00000129
_00622_DS_              Label    00000010
_00627_DS_              Label    00000015
_00631_DS_              Label    0000001C
_00636_DS_              Label    00000021
_00640_DS_              Label    00000028
_00645_DS_              Label    0000002D
_00649_DS_              Label    00000034
_00654_DS_              Label    00000039
_00658_DS_              Label    00000040
_00663_DS_              Label    00000045
_00667_DS_              Label    0000004C
_00672_DS_              Label    00000051
_00676_DS_              Label    00000058
_00681_DS_              Label    0000005D
_00685_DS_              Label    00000064
_00690_DS_              Label    00000069
_00694_DS_              Label    00000070
_00699_DS_              Label    00000075
_00703_DS_              Label    0000007C
_00708_DS_              Label    00000081
_00712_DS_              Label    00000088
_00717_DS_              Label    0000008D
_00721_DS_              Label    00000094
_00726_DS_              Label    00000099
_00730_DS_              Label    000000A0
_00735_DS_              Label    000000A5
_00739_DS_              Label    000000AC
_00744_DS_              Label    000000B1
_00748_DS_              Label    000000B8
_00753_DS_              Label    000000BD
_00757_DS_              Label    000000C4
_00762_DS_              Label    000000C9
_00766_DS_              Label    000000D0
_00771_DS_              Label    000000D5
_00775_DS_              Label    000000DC
_00780_DS_              Label    000000E1
_00784_DS_              Label    000000E8
_00789_DS_              Label    000000ED
_00793_DS_              Label    000000F4
_00798_DS_              Label    000000F9
_00802_DS_              Label    00000100
_00807_DS_              Label    00000105
_00811_DS_              Label    0000010C
_00816_DS_              Label    00000111
_00820_DS_              Label    00000118
_00825_DS_              Label    0000011D
_00829_DS_              Label    00000124
_00834_DS_              Label    00000129
_00841_DS_              Label    00000002
_00843_DS_              Label    0000000D
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_Bdata                  Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_breakFlag              Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_closeCtr               Label    00000000
_closeCtr2              Label    00000000
_CMPCR                  Label    00000000
_count100ms             Label    00000000
_count20s               Label    00000000
_DC                     Label    00000000
_delay                  Label    00000000
_Delay10Us              Label    00000000
_Delay80us              Label    00000000
_FSR                    Label    00000000
_Gdata                  Label    00000000
_INDF                   Label    00000000
_initTimer0             Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCtr                 Label    00000000
_ledStep                Label    00000000
_main                   Label    00000000
_openCtr                Label    00000000
_openCtr2               Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_Rdata                  Label    00000000
_readKey                Label    00000000
_redTime                Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_SC                     Label    00000000
_sendRGB                Label    00000000
_sendRGB2               Label    00000000
_sendRGB3               Label    00000000
_setColor               Label    00000000
_setColor2              Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workStep               Label    00000000
_XD                     Label    00000000
_xdCtr                  Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000039
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1011                 Label    00000000
r0x1012                 Label    00000000
r0x1013                 Label    00000000
r0x1014                 Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
r0x101A                 Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
r0x101D                 Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1035                 Label    00000000
r0x1036                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a054d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
