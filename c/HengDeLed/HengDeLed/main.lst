
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A053D,c=on
                                    1-    9     	#include "ny8a053d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduchar
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_INDF
                                    1-   24     	extern	_TMR0
                                    1-   25     	extern	_PCL
                                    1-   26     	extern	_STATUS
                                    1-   27     	extern	_FSR
                                    1-   28     	extern	_PORTA
                                    1-   29     	extern	_PORTB
                                    1-   30     	extern	_PCON
                                    1-   31     	extern	_BWUCON
                                    1-   32     	extern	_PCHBUF
                                    1-   33     	extern	_ABPLCON
                                    1-   34     	extern	_BPHCON
                                    1-   35     	extern	_INTE
                                    1-   36     	extern	_INTF
                                    1-   37     	extern	_TMR1
                                    1-   38     	extern	_T1CR1
                                    1-   39     	extern	_T1CR2
                                    1-   40     	extern	_PWM1DUTY
                                    1-   41     	extern	_PS1CV
                                    1-   42     	extern	_BZ1CR
                                    1-   43     	extern	_IRCR
                                    1-   44     	extern	_TBHP
                                    1-   45     	extern	_TBHD
                                    1-   46     	extern	_OSCCR
                                    1-   47     	extern	_IOSTA
                                    1-   48     	extern	_IOSTB
                                    1-   49     	extern	_PS0CV
                                    1-   50     	extern	_BODCON
                                    1-   51     	extern	_PCON1
                                    1-   52     	extern	_T0MD
                                    1-   53     	extern	___sdcc_saved_fsr
                                    1-   54     	extern	___sdcc_saved_stk00
                                    1-   55     	extern	___sdcc_saved_stk01
                                    1-   56     	extern	__nyc_ny8_startup
                                    1-   57     ;--------------------------------------------------------
                                    1-   58     ; global declarations
                                    1-   59     ;--------------------------------------------------------
                                    1-   60     	extern	_gotoSleep
                                    1-   61     	extern	_keyRead
                                    1-   62     	extern	_init
                                    1-   63     	extern	_keyCon
                                    1-   64     	extern	_ledMode2
                                    1-   65     	extern	_ledMode1
                                    1-   66     	extern	_ledCon
                                    1-   67     	extern	_isr
                                    1-   68     	extern	_main
                                    1-   69     	extern	_ledMode3
                                    1-   70     	extern	_intCount
                                    1-   71     	extern	_IntFlag
                                    1-   72     	extern	_keyLockFlag
                                    1-   73     	extern	_modeFlag
                                    1-   74     	extern	_key2Count
                                    1-   75     	extern	_ledFlag
                                    1-   76     	extern	_longFlag
                                    1-   77     	extern	_lockLedFlag
                                    1-   78     	extern	_lockLedCount
                                    1-   79     	extern	_countLed
                                    1-   80     	extern	_sleepCount
                                    1-   81     	extern	_keyCount
                                    1-   82     	extern	_longPressFlag
                                    1-   84     	extern PSAVE
                                    1-   85     	extern SSAVE
                                    1-   86     	extern WSAVE
                                    1-   87     	extern STK12
                                    1-   88     	extern STK11
                                    1-   89     	extern STK10
                                    1-   90     	extern STK09
                                    1-   91     	extern STK08
                                    1-   92     	extern STK07
                                    1-   93     	extern STK06
                                    1-   94     	extern STK05
                                    1-   95     	extern STK04
                                    1-   96     	extern STK03
                                    1-   97     	extern STK02
                                    1-   98     	extern STK01
                                    1-   99     	extern STK00
                                    1-  101     .segment "uninit", 0x20000020
 20000020                           1-  102     PSAVE:
                                    1-  103     	.res 1
 20000021                           1-  104     SSAVE:
                                    1-  105     	.res 1
 20000022                           1-  106     WSAVE:
                                    1-  107     	.res 1
 20000023                           1-  108     STK12:
                                    1-  109     	.res 1
 20000024                           1-  110     STK11:
                                    1-  111     	.res 1
 20000025                           1-  112     STK10:
                                    1-  113     	.res 1
 20000026                           1-  114     STK09:
                                    1-  115     	.res 1
 20000027                           1-  116     STK08:
                                    1-  117     	.res 1
 20000028                           1-  118     STK07:
                                    1-  119     	.res 1
 20000029                           1-  120     STK06:
                                    1-  121     	.res 1
 2000002A                           1-  122     STK05:
                                    1-  123     	.res 1
 2000002B                           1-  124     STK04:
                                    1-  125     	.res 1
 2000002C                           1-  126     STK03:
                                    1-  127     	.res 1
 2000002D                           1-  128     STK02:
                                    1-  129     	.res 1
 2000002E                           1-  130     STK01:
                                    1-  131     	.res 1
 2000002F                           1-  132     STK00:
                                    1-  133     	.res 1
                                    1-  135     ;--------------------------------------------------------
                                    1-  136     ; global definitions
                                    1-  137     ;--------------------------------------------------------
                                    1-  138     ;--------------------------------------------------------
                                    1-  139     ; absolute symbol definitions
                                    1-  140     ;--------------------------------------------------------
                                    1-  141     ;--------------------------------------------------------
                                    1-  142     ; compiler-defined variables
                                    1-  143     ;--------------------------------------------------------
                                    1-  144     .segment "uninit"
     0000                           1-  145     r0x1018:
                                    1-  146     	.res	1
                                    1-  147     .segment "uninit"
     0000                           1-  148     r0x1019:
                                    1-  149     	.res	1
                                    1-  150     .segment "uninit"
     0000                           1-  151     r0x1017:
                                    1-  152     	.res	1
                                    1-  153     .segment "uninit"
     0000                           1-  154     r0x1015:
                                    1-  155     	.res	1
                                    1-  156     .segment "uninit"
     0000                           1-  157     r0x1016:
                                    1-  158     	.res	1
                                    1-  159     .segment "uninit"
     0000                           1-  160     r0x1014:
                                    1-  161     	.res	1
                                    1-  162     .segment "uninit"
     0000                           1-  163     r0x1013:
                                    1-  164     	.res	1
                                    1-  165     ;--------------------------------------------------------
                                    1-  166     ; initialized data
                                    1-  167     ;--------------------------------------------------------
                                    1-  169     .segment "idata"
     0000                           1-  170     _intCount:
     0000 0000                      1-  171     	dw	0x00
                                    1-  175     .segment "idata"
     0000                           1-  176     _IntFlag:
     0000 0000                      1-  177     	dw	0x00
                                    1-  181     .segment "idata"
     0000                           1-  182     _keyLockFlag:
     0000 0001                      1-  183     	dw	0x01
                                    1-  187     .segment "idata"
     0000                           1-  188     _modeFlag:
     0000 0000                      1-  189     	dw	0x00
                                    1-  193     .segment "idata"
     0000                           1-  194     _key2Count:
     0000 0000 0000                 1-  195     	dw	0x00, 0x00
                                    1-  199     .segment "idata"
     0000                           1-  200     _ledFlag:
     0000 0000                      1-  201     	dw	0x00
                                    1-  205     .segment "idata"
     0000                           1-  206     _longFlag:
     0000 0000                      1-  207     	dw	0x00
                                    1-  211     .segment "idata"
     0000                           1-  212     _lockLedFlag:
     0000 0000                      1-  213     	dw	0x00
                                    1-  217     .segment "idata"
     0000                           1-  218     _lockLedCount:
     0000 0000                      1-  219     	dw	0x00
                                    1-  223     .segment "idata"
     0000                           1-  224     _countLed:
     0000 0000                      1-  225     	dw	0x00
                                    1-  229     .segment "idata"
     0000                           1-  230     _sleepCount:
     0000 0000 0000                 1-  231     	dw	0x00, 0x00
                                    1-  235     .segment "idata"
     0000                           1-  236     _keyCount:
     0000 0000 0000                 1-  237     	dw	0x00, 0x00
                                    1-  241     .segment "idata"
     0000                           1-  242     _longPressFlag:
     0000 0000                      1-  243     	dw	0x00
                                    1-  246     ;--------------------------------------------------------
                                    1-  247     ; overlayable items in internal ram 
                                    1-  248     ;--------------------------------------------------------
                                    1-  249     ;	udata_ovr
                                    1-  250     ;--------------------------------------------------------
                                    1-  251     ; reset vector 
                                    1-  252     ;--------------------------------------------------------
                                    1-  253     ORG	0x0000
     0000 3rrr                      1-  254     	LGOTO	__nyc_ny8_startup
                                    1-  255     ;--------------------------------------------------------
                                    1-  256     ; interrupt and initialization code
                                    1-  257     ;--------------------------------------------------------
                                    1-  258     ORG 0x0008
     0008 3rrr                      1-  259     	lgoto	__sdcc_interrupt
                                    1-  261     .segment "code"
     0000                           1-  262     __sdcc_interrupt:
                                    1-  263     ;***
                                    1-  264     ;  pBlock Stats: dbName = I
                                    1-  265     ;***
                                    1-  266     ;2 compiler assigned registers:
                                    1-  267     ;   STK00
                                    1-  268     ;   STK01
                                    1-  269     ;; Starting pCode block
     0000                           1-  270     _isr:
                                    1-  271     ; 0 exit points
                                    1-  272     	.line	50, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  273     	MOVAR	WSAVE
     0001 1503                      1-  274     	SWAPR	STATUS,W
     0002 0283                      1-  275     	CLRR	STATUS
     0003 00rr                      1-  276     	MOVAR	SSAVE
     0004 010A                      1-  277     	MOVR	PCHBUF,W
     0005 028A                      1-  278     	CLRR	PCHBUF
     0006 00rr                      1-  279     	MOVAR	PSAVE
     0007 0104                      1-  280     	MOVR	FSR,W
                                    1-  281     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  282     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  283     	MOVR	STK00,W
                                    1-  284     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  285     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  286     	MOVR	STK01,W
                                    1-  287     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  288     	MOVAR	___sdcc_saved_stk01
                                    1-  289     	.line	52, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  290     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  291     	LGOTO	_00108_DS_
                                    1-  292     	.line	54, "main.c"; 	TMR0 = 55;
     0012 2137                      1-  293     	MOVIA	0x37
     0013 00rr                      1-  294     	MOVAR	_TMR0
                                    1-  295     	.line	55, "main.c"; 	intCount++;
                                    1-  296     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  297     	INCR	_intCount,F
                                    1-  298     	.line	56, "main.c"; 	if(intCount == 96)
     0016 01rr                      1-  299     	MOVR	_intCount,W
     0017 2460                      1-  300     	XORIA	0x60
     0018 0903                      1-  301     	BTRSS	STATUS,2
     0019 3rrr                      1-  302     	LGOTO	_00108_DS_
                                    1-  303     	.line	58, "main.c"; 	intCount = 0;
     001A 02rr                      1-  304     	CLRR	_intCount
                                    1-  305     	.line	59, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  306     	MOVIA	0x01
                                    1-  307     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  308     	MOVAR	_IntFlag
     001E                           1-  309     _00108_DS_:
                                    1-  310     	.line	64, "main.c"; 	if(INTFbits.PBIF)
     001E 08rr                      1-  311     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  312     	LGOTO	_00110_DS_
                                    1-  313     	.line	66, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  314     	MOVIA	0xfd
     0021 00rr                      1-  315     	MOVAR	_INTF
     0022                           1-  316     _00110_DS_:
                                    1-  317     	.line	69, "main.c"; 	INTF = 0;
     0022 02rr                      1-  318     	CLRR	_INTF
                                    1-  319     	.line	71, "main.c"; 	}
                                    1-  320     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  321     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  322     	MOVAR	STK01
                                    1-  323     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  324     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  325     	MOVAR	STK00
                                    1-  326     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  327     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  328     	MOVAR	FSR
     002C 01rr                      1-  329     	MOVR	PSAVE,W
     002D 008A                      1-  330     	MOVAR	PCHBUF
     002E 0283                      1-  331     	CLRR	STATUS
     002F 15rr                      1-  332     	SWAPR	SSAVE,W
     0030 0083                      1-  333     	MOVAR	STATUS
     0031 15rr                      1-  334     	SWAPR	WSAVE,F
     0032 15rr                      1-  335     	SWAPR	WSAVE,W
     0033                           1-  336     END_OF_INTERRUPT:
     0033 0011                      1-  337     	RETIE	
                                    1-  339     ;--------------------------------------------------------
                                    1-  340     ; code
                                    1-  341     ;--------------------------------------------------------
                                    1-  342     ;***
                                    1-  343     ;  pBlock Stats: dbName = M
                                    1-  344     ;***
                                    1-  345     ;has an exit
                                    1-  346     ;functions called:
                                    1-  347     ;   _init
                                    1-  348     ;   _keyCon
                                    1-  349     ;   _ledCon
                                    1-  350     ;   _gotoSleep
                                    1-  351     ;   _init
                                    1-  352     ;   _keyCon
                                    1-  353     ;   _ledCon
                                    1-  354     ;   _gotoSleep
                                    1-  355     ;2 compiler assigned registers:
                                    1-  356     ;   r0x1018
                                    1-  357     ;   r0x1019
                                    1-  358     ;; Starting pCode block
                                    1-  359     .segment "code"; module=main, function=_main
     0000                           1-  361     _main:
                                    1-  362     ; 2 exit points
                                    1-  363     	.line	75, "main.c"; 	init();
     0000 2rrr                      1-  364     	LCALL	_init
     0001                           1-  365     _00128_DS_:
                                    1-  366     	.line	78, "main.c"; 	CLRWDT();
     0001 0002                      1-  367     	clrwdt
                                    1-  368     	.line	79, "main.c"; 	if(0x02&~PORTB)
     0002 01rr                      1-  369     	MOVR	_PORTB,W
                                    1-  370     	BANKSEL	r0x1018
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  371     	MOVAR	r0x1018
                                    1-  372     	BANKSEL	r0x1019
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  373     	CLRR	r0x1019
                                    1-  374     	BANKSEL	r0x1018
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 07rr                      1-  375     	COMR	r0x1018,W
     0009 00rr                      1-  376     	MOVAR	r0x1018
                                    1-  377     	BANKSEL	r0x1019
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 07rr                      1-  378     	COMR	r0x1019,W
     000C 00rr                      1-  379     	MOVAR	r0x1019
                                    1-  380     	BANKSEL	r0x1018
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 08rr                      1-  381     	BTRSS	r0x1018,1
     000F 3rrr                      1-  382     	LGOTO	_00116_DS_
                                    1-  383     	.line	80, "main.c"; 	key2Count++;
                                    1-  384     	BANKSEL	_key2Count
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 05rr                      1-  385     	INCR	_key2Count,F
     0012 0D03                      1-  386     	BTRSC	STATUS,2
     0013 05rr                      1-  387     	INCR	(_key2Count + 1),F
     0014                           1-  388     _00116_DS_:
                                    1-  389     	.line	81, "main.c"; 	if(!IntFlag)
                                    1-  390     	BANKSEL	_IntFlag
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1-  391     	MOVR	_IntFlag,W
     0016 0D03                      1-  392     	BTRSC	STATUS,2
     0017 3rrr                      1-  393     	LGOTO	_00128_DS_
                                    1-  394     	.line	83, "main.c"; 	IntFlag = 0;
     0018 02rr                      1-  395     	CLRR	_IntFlag
                                    1-  396     	.line	84, "main.c"; 	keyCon();
     0019 2rrr                      1-  397     	LCALL	_keyCon
                                    1-  398     	.line	85, "main.c"; 	ledCon();
     001A 2rrr                      1-  399     	LCALL	_ledCon
                                    1-  400     	.line	86, "main.c"; 	if(countLed == 0 && lockLedCount == 0 && ledFlag == 0 && key2Count == 0)
                                    1-  401     	BANKSEL	_countLed
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1-  402     	MOVR	_countLed,W
     001D 0903                      1-  403     	BTRSS	STATUS,2
     001E 3rrr                      1-  404     	LGOTO	_00122_DS_
                                    1-  405     	BANKSEL	_lockLedCount
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  406     	MOVR	_lockLedCount,W
     0021 0903                      1-  407     	BTRSS	STATUS,2
     0022 3rrr                      1-  408     	LGOTO	_00122_DS_
                                    1-  409     	BANKSEL	_ledFlag
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  410     	MOVR	_ledFlag,W
     0025 0903                      1-  411     	BTRSS	STATUS,2
     0026 3rrr                      1-  412     	LGOTO	_00122_DS_
                                    1-  413     	BANKSEL	_key2Count
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  414     	MOVR	_key2Count,W
     0029 11rr                      1-  415     	IORAR	(_key2Count + 1),W
     002A 0903                      1-  416     	BTRSS	STATUS,2
     002B 3rrr                      1-  417     	LGOTO	_00122_DS_
                                    1-  418     	.line	88, "main.c"; 	if(++sleepCount > 1200)
                                    1-  419     	BANKSEL	_sleepCount
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  420     	INCR	_sleepCount,F
     002E 0D03                      1-  421     	BTRSC	STATUS,2
     002F 05rr                      1-  422     	INCR	(_sleepCount + 1),F
                                    1-  423     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  424     ;;unsigned compare: left >= lit (0x4B1=1201), size=2
     0030 2104                      1-  425     	MOVIA	0x04
     0031 04rr                      1-  426     	SUBAR	(_sleepCount + 1),W
     0032 0903                      1-  427     	BTRSS	STATUS,2
     0033 3rrr                      1-  428     	LGOTO	_00156_DS_
     0034 21B1                      1-  429     	MOVIA	0xb1
     0035 04rr                      1-  430     	SUBAR	_sleepCount,W
     0036                           1-  431     _00156_DS_:
     0036 0803                      1-  432     	BTRSS	STATUS,0
     0037 3rrr                      1-  433     	LGOTO	_00128_DS_
                                    1-  434     	.line	89, "main.c"; 	gotoSleep(0x07);
     0038 2107                      1-  435     	MOVIA	0x07
     0039 2rrr                      1-  436     	LCALL	_gotoSleep
     003A 3rrr                      1-  437     	LGOTO	_00128_DS_
     003B                           1-  438     _00122_DS_:
                                    1-  439     	.line	92, "main.c"; 	sleepCount = 0;
                                    1-  440     	BANKSEL	_sleepCount
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 02rr                      1-  441     	CLRR	_sleepCount
     003D 02rr                      1-  442     	CLRR	(_sleepCount + 1)
     003E 3rrr                      1-  443     	LGOTO	_00128_DS_
                                    1-  444     	.line	94, "main.c"; 	}
                                    1-  445     	RETURN	
     003F 0010                      3-   26 m1      ret
                                    1-  446     ; exit point of _main
                                    1-  448     ;***
                                    1-  449     ;  pBlock Stats: dbName = C
                                    1-  450     ;***
                                    1-  451     ;has an exit
                                    1-  452     ;1 compiler assigned register :
                                    1-  453     ;   r0x1013
                                    1-  454     ;; Starting pCode block
                                    1-  455     .segment "code"; module=main, function=_gotoSleep
                                    1-  457     ;local variable name mapping:
     0000                           1-  459     _gotoSleep:
                                    1-  460     ; 2 exit points
                                    1-  461     	.line	431, "main.c"; 	void gotoSleep(char wakeKey)
                                    1-  462     	BANKSEL	r0x1013
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  463     	MOVAR	r0x1013
                                    1-  464     	.line	434, "main.c"; 	sleepCount = 0;
                                    1-  465     	BANKSEL	_sleepCount
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  466     	CLRR	_sleepCount
     0004 02rr                      1-  467     	CLRR	(_sleepCount + 1)
                                    1-  468     	.line	435, "main.c"; 	PWM1DUTY = 0;
     0005 0200                      1-  469     	CLRA	
     0006 002r                      1-  470     	SFUN	_PWM1DUTY
                                    1-  471     	.line	436, "main.c"; 	PORTA = 0xFF;
     0007 21FF                      1-  472     	MOVIA	0xff
     0008 00rr                      1-  473     	MOVAR	_PORTA
                                    1-  474     	.line	437, "main.c"; 	PORTB = 0xFF;
     0009 00rr                      1-  475     	MOVAR	_PORTB
                                    1-  476     	.line	438, "main.c"; 	keyCount = 0;
                                    1-  477     	BANKSEL	_keyCount
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1-  478     	CLRR	_keyCount
     000C 02rr                      1-  479     	CLRR	(_keyCount + 1)
                                    1-  480     	.line	440, "main.c"; 	BWUCON = wakeKey;
                                    1-  481     	BANKSEL	r0x1013
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  482     	MOVR	r0x1013,W
     000F 00rr                      1-  483     	MOVAR	_BWUCON
                                    1-  484     	.line	441, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PBKey;
     0010 2103                      1-  485     	MOVIA	0x03
     0011 00rr                      1-  486     	MOVAR	_INTE
                                    1-  487     	.line	442, "main.c"; 	PCON =  C_LVR_En ;	
     0012 2108                      1-  488     	MOVIA	0x08
     0013 00rr                      1-  489     	MOVAR	_PCON
                                    1-  490     	.line	443, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0014 02rr                      1-  491     	CLRR	_INTF
                                    1-  492     	.line	444, "main.c"; 	CLRWDT();
     0015 0002                      1-  493     	clrwdt
                                    1-  494     	.line	445, "main.c"; 	SLEEP();
     0016 0001                      1-  495     	sleep
                                    1-  496     	.line	446, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0017 2101                      1-  497     	MOVIA	0x01
     0018 00rr                      1-  498     	MOVAR	_INTE
                                    1-  499     	.line	447, "main.c"; 	INTF = 0;
     0019 02rr                      1-  500     	CLRR	_INTF
                                    1-  501     	.line	449, "main.c"; 	PCON = C_WDT_En | C_LVR_En ;				// Enable WDT ,  Enable LVR
     001A 2188                      1-  502     	MOVIA	0x88
     001B 00rr                      1-  503     	MOVAR	_PCON
                                    1-  504     	.line	451, "main.c"; 	}
                                    1-  505     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  506     ; exit point of _gotoSleep
                                    1-  508     ;***
                                    1-  509     ;  pBlock Stats: dbName = C
                                    1-  510     ;***
                                    1-  511     ;has an exit
                                    1-  512     ;1 compiler assigned register :
                                    1-  513     ;   r0x1014
                                    1-  514     ;; Starting pCode block
                                    1-  515     .segment "code"; module=main, function=_keyRead
                                    1-  517     ;local variable name mapping:
     0000                           1-  519     _keyRead:
                                    1-  520     ; 2 exit points
                                    1-  521     	.line	398, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  522     	BANKSEL	r0x1014
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  523     	MOVAR	r0x1014
                                    1-  524     	.line	400, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  525     	MOVR	r0x1014,W
     0003 0D03                      1-  526     	BTRSC	STATUS,2
     0004 3rrr                      1-  527     	LGOTO	_00353_DS_
                                    1-  528     	.line	402, "main.c"; 	keyCount++;
                                    1-  529     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  530     	INCR	_keyCount,F
     0007 0D03                      1-  531     	BTRSC	STATUS,2
     0008 05rr                      1-  532     	INCR	(_keyCount + 1),F
                                    1-  533     ;;unsigned compare: left < lit (0xC8=200), size=2
                                    1-  534     	.line	403, "main.c"; 	if(keyCount >= 200)
     0009 2100                      1-  535     	MOVIA	0x00
     000A 04rr                      1-  536     	SUBAR	(_keyCount + 1),W
     000B 0903                      1-  537     	BTRSS	STATUS,2
     000C 3rrr                      1-  538     	LGOTO	_00372_DS_
     000D 21C8                      1-  539     	MOVIA	0xc8
     000E 04rr                      1-  540     	SUBAR	_keyCount,W
     000F                           1-  541     _00372_DS_:
     000F 0803                      1-  542     	BTRSS	STATUS,0
     0010 3rrr                      1-  543     	LGOTO	_00354_DS_
                                    1-  544     	.line	405, "main.c"; 	keyCount = 200;
     0011 21C8                      1-  545     	MOVIA	0xc8
                                    1-  546     	BANKSEL	_keyCount
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1-  547     	MOVAR	_keyCount
     0014 02rr                      1-  548     	CLRR	(_keyCount + 1)
                                    1-  549     	.line	406, "main.c"; 	if(!longPressFlag)
                                    1-  550     	BANKSEL	_longPressFlag
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  551     	MOVR	_longPressFlag,W
     0017 0903                      1-  552     	BTRSS	STATUS,2
     0018 3rrr                      1-  553     	LGOTO	_00354_DS_
                                    1-  554     	.line	408, "main.c"; 	longPressFlag = 1;
     0019 2101                      1-  555     	MOVIA	0x01
     001A 00rr                      1-  556     	MOVAR	_longPressFlag
                                    1-  557     	.line	409, "main.c"; 	return 2;
     001B 2102                      1-  558     	MOVIA	0x02
     001C 3rrr                      1-  559     	LGOTO	_00355_DS_
                                    1-  560     ;;unsigned compare: left < lit (0xC8=200), size=2
     001D                           1-  561     _00353_DS_:
                                    1-  562     	.line	415, "main.c"; 	if(keyCount >= 200)
     001D 2100                      1-  563     	MOVIA	0x00
                                    1-  564     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1-  565     	SUBAR	(_keyCount + 1),W
     0020 0903                      1-  566     	BTRSS	STATUS,2
     0021 3rrr                      1-  567     	LGOTO	_00373_DS_
     0022 21C8                      1-  568     	MOVIA	0xc8
     0023 04rr                      1-  569     	SUBAR	_keyCount,W
     0024                           1-  570     _00373_DS_:
     0024 0803                      1-  571     	BTRSS	STATUS,0
     0025 3rrr                      1-  572     	LGOTO	_00350_DS_
                                    1-  573     	.line	417, "main.c"; 	keyCount = 0;
                                    1-  574     	BANKSEL	_keyCount
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 02rr                      1-  575     	CLRR	_keyCount
     0028 02rr                      1-  576     	CLRR	(_keyCount + 1)
                                    1-  577     	.line	418, "main.c"; 	longPressFlag = 0;
                                    1-  578     	BANKSEL	_longPressFlag
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 02rr                      1-  579     	CLRR	_longPressFlag
                                    1-  580     	.line	419, "main.c"; 	return	0;
     002B 2100                      1-  581     	MOVIA	0x00
     002C 3rrr                      1-  582     	LGOTO	_00355_DS_
                                    1-  583     ;;unsigned compare: left < lit (0x5=5), size=2
     002D                           1-  584     _00350_DS_:
                                    1-  585     	.line	421, "main.c"; 	else if(keyCount >= 5)
     002D 2100                      1-  586     	MOVIA	0x00
                                    1-  587     	BANKSEL	_keyCount
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 04rr                      1-  588     	SUBAR	(_keyCount + 1),W
     0030 0903                      1-  589     	BTRSS	STATUS,2
     0031 3rrr                      1-  590     	LGOTO	_00374_DS_
     0032 2105                      1-  591     	MOVIA	0x05
     0033 04rr                      1-  592     	SUBAR	_keyCount,W
     0034                           1-  593     _00374_DS_:
     0034 0803                      1-  594     	BTRSS	STATUS,0
     0035 3rrr                      1-  595     	LGOTO	_00351_DS_
                                    1-  596     	.line	423, "main.c"; 	keyCount = 0;
                                    1-  597     	BANKSEL	_keyCount
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 02rr                      1-  598     	CLRR	_keyCount
     0038 02rr                      1-  599     	CLRR	(_keyCount + 1)
                                    1-  600     	.line	424, "main.c"; 	return	1;
     0039 2101                      1-  601     	MOVIA	0x01
     003A 3rrr                      1-  602     	LGOTO	_00355_DS_
     003B                           1-  603     _00351_DS_:
                                    1-  604     	.line	426, "main.c"; 	keyCount = 0;
                                    1-  605     	BANKSEL	_keyCount
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 02rr                      1-  606     	CLRR	_keyCount
     003D 02rr                      1-  607     	CLRR	(_keyCount + 1)
     003E                           1-  608     _00354_DS_:
                                    1-  609     	.line	428, "main.c"; 	return 0;
     003E 2100                      1-  610     	MOVIA	0x00
     003F                           1-  611     _00355_DS_:
                                    1-  612     	.line	429, "main.c"; 	}
                                    1-  613     	RETURN	
     003F 0010                      3-   26 m1      ret
                                    1-  614     ; exit point of _keyRead
                                    1-  616     ;***
                                    1-  617     ;  pBlock Stats: dbName = C
                                    1-  618     ;***
                                    1-  619     ;has an exit
                                    1-  620     ;; Starting pCode block
                                    1-  621     .segment "code"; module=main, function=_init
     0000                           1-  623     _init:
                                    1-  624     ; 2 exit points
                                    1-  625     	.line	375, "main.c"; 	PORTA = 0xFF;
     0000 21FF                      1-  626     	MOVIA	0xff
     0001 00rr                      1-  627     	MOVAR	_PORTA
                                    1-  628     	.line	376, "main.c"; 	PORTB = 0xFF;
     0002 00rr                      1-  629     	MOVAR	_PORTB
                                    1-  630     	.line	377, "main.c"; 	BPHCON = 0xF8;
     0003 21F8                      1-  631     	MOVIA	0xf8
     0004 00rr                      1-  632     	MOVAR	_BPHCON
                                    1-  633     	.line	379, "main.c"; 	IOSTA =  0xF0;
     0005 21F0                      1-  634     	MOVIA	0xf0
     0006 000r                      1-  635     	IOST	_IOSTA
                                    1-  636     	.line	380, "main.c"; 	IOSTB =  C_PB0_Input | C_PB1_Input | C_PB2_Input;	
     0007 2107                      1-  637     	MOVIA	0x07
     0008 000r                      1-  638     	IOST	_IOSTB
                                    1-  639     	.line	381, "main.c"; 	PORTB = 0xFF; 
     0009 21FF                      1-  640     	MOVIA	0xff
     000A 00rr                      1-  641     	MOVAR	_PORTB
                                    1-  642     	.line	382, "main.c"; 	PORTA = 0xFF;
     000B 00rr                      1-  643     	MOVAR	_PORTA
                                    1-  644     	.line	383, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT & LVR
     000C 2188                      1-  645     	MOVIA	0x88
     000D 00rr                      1-  646     	MOVAR	_PCON
                                    1-  647     	.line	385, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1-  648     	CLRA	
     000F 000r                      1-  649     	IOST	_PCON1
                                    1-  650     	.line	387, "main.c"; 	TMR0 = 55;
     0010 2137                      1-  651     	MOVIA	0x37
     0011 00rr                      1-  652     	MOVAR	_TMR0
                                    1-  653     	.line	388, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0012 0200                      1-  654     	CLRA	
     0013 0003                      1-  655     	T0MD	
                                    1-  656     	.line	390, "main.c"; 	PCON1 =  C_TMR0_En;
     0014 2101                      1-  657     	MOVIA	0x01
     0015 000r                      1-  658     	IOST	_PCON1
                                    1-  659     	.line	391, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1;	// Enable Timer0、Timer1、WDT overflow interrupt
     0016 2109                      1-  660     	MOVIA	0x09
     0017 00rr                      1-  661     	MOVAR	_INTE
                                    1-  662     	.line	392, "main.c"; 	INTF = 0;
     0018 02rr                      1-  663     	CLRR	_INTF
                                    1-  664     	.line	393, "main.c"; 	ENI();
     0019 0004                      1-  665     	ENI
                                    1-  666     	.line	395, "main.c"; 	}
                                    1-  667     	RETURN	
     001A 0010                      3-   26 m1      ret
                                    1-  668     ; exit point of _init
                                    1-  670     ;***
                                    1-  671     ;  pBlock Stats: dbName = C
                                    1-  672     ;***
                                    1-  673     ;has an exit
                                    1-  674     ;functions called:
                                    1-  675     ;   _keyRead
                                    1-  676     ;   _keyRead
                                    1-  677     ;2 compiler assigned registers:
                                    1-  678     ;   r0x1015
                                    1-  679     ;   r0x1016
                                    1-  680     ;; Starting pCode block
                                    1-  681     .segment "code"; module=main, function=_keyCon
     0000                           1-  683     _keyCon:
                                    1-  684     ; 2 exit points
                                    1-  685     	.line	335, "main.c"; 	if(0x02&PORTB)
     0000 08rr                      1-  686     	BTRSS	_PORTB,1
     0001 3rrr                      1-  687     	LGOTO	_00301_DS_
                                    1-  688     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  689     ;;unsigned compare: left >= lit (0x6=6), size=2
                                    1-  690     	.line	337, "main.c"; 	if(key2Count > 5)
     0002 2100                      1-  691     	MOVIA	0x00
                                    1-  692     	BANKSEL	_key2Count
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 04rr                      1-  693     	SUBAR	(_key2Count + 1),W
     0005 0903                      1-  694     	BTRSS	STATUS,2
     0006 3rrr                      1-  695     	LGOTO	_00333_DS_
     0007 2106                      1-  696     	MOVIA	0x06
     0008 04rr                      1-  697     	SUBAR	_key2Count,W
     0009                           1-  698     _00333_DS_:
     0009 0803                      1-  699     	BTRSS	STATUS,0
     000A 3rrr                      1-  700     	LGOTO	_00295_DS_
                                    1-  701     	.line	338, "main.c"; 	ledFlag = 1;
     000B 2101                      1-  702     	MOVIA	0x01
                                    1-  703     	BANKSEL	_ledFlag
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  704     	MOVAR	_ledFlag
     000E                           1-  705     _00295_DS_:
                                    1-  706     	.line	339, "main.c"; 	key2Count = 0;
                                    1-  707     	BANKSEL	_key2Count
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1-  708     	CLRR	_key2Count
     0010 02rr                      1-  709     	CLRR	(_key2Count + 1)
                                    1-  710     	.line	340, "main.c"; 	longFlag = 0;
                                    1-  711     	BANKSEL	_longFlag
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 02rr                      1-  712     	CLRR	_longFlag
     0013 3rrr                      1-  713     	LGOTO	_00302_DS_
                                    1-  714     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  715     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0014                           1-  716     _00301_DS_:
                                    1-  717     	.line	344, "main.c"; 	if(key2Count > 2000)
     0014 2107                      1-  718     	MOVIA	0x07
                                    1-  719     	BANKSEL	_key2Count
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 04rr                      1-  720     	SUBAR	(_key2Count + 1),W
     0017 0903                      1-  721     	BTRSS	STATUS,2
     0018 3rrr                      1-  722     	LGOTO	_00334_DS_
     0019 21D1                      1-  723     	MOVIA	0xd1
     001A 04rr                      1-  724     	SUBAR	_key2Count,W
     001B                           1-  725     _00334_DS_:
     001B 0803                      1-  726     	BTRSS	STATUS,0
     001C 3rrr                      1-  727     	LGOTO	_00302_DS_
                                    1-  728     	.line	346, "main.c"; 	key2Count = 2000;
     001D 21D0                      1-  729     	MOVIA	0xd0
                                    1-  730     	BANKSEL	_key2Count
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  731     	MOVAR	_key2Count
     0020 2107                      1-  732     	MOVIA	0x07
     0021 00rr                      1-  733     	MOVAR	(_key2Count + 1)
                                    1-  734     	.line	347, "main.c"; 	if(!longFlag)
                                    1-  735     	BANKSEL	_longFlag
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  736     	MOVR	_longFlag,W
     0024 0903                      1-  737     	BTRSS	STATUS,2
     0025 3rrr                      1-  738     	LGOTO	_00302_DS_
                                    1-  739     	.line	349, "main.c"; 	ledFlag = 1;
     0026 2101                      1-  740     	MOVIA	0x01
                                    1-  741     	BANKSEL	_ledFlag
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1-  742     	MOVAR	_ledFlag
                                    1-  743     	.line	350, "main.c"; 	longFlag = 1;
                                    1-  744     	BANKSEL	_longFlag
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 00rr                      1-  745     	MOVAR	_longFlag
     002B                           1-  746     _00302_DS_:
                                    1-  747     	.line	355, "main.c"; 	if(0x01&~PORTB)
     002B 01rr                      1-  748     	MOVR	_PORTB,W
                                    1-  749     	BANKSEL	r0x1015
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1-  750     	MOVAR	r0x1015
                                    1-  751     	BANKSEL	r0x1016
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 02rr                      1-  752     	CLRR	r0x1016
                                    1-  753     	BANKSEL	r0x1015
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 07rr                      1-  754     	COMR	r0x1015,W
     0032 00rr                      1-  755     	MOVAR	r0x1015
                                    1-  756     	BANKSEL	r0x1016
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 07rr                      1-  757     	COMR	r0x1016,W
     0035 00rr                      1-  758     	MOVAR	r0x1016
                                    1-  759     	BANKSEL	r0x1015
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 08rr                      1-  760     	BTRSS	r0x1015,0
     0038 3rrr                      1-  761     	LGOTO	_00304_DS_
                                    1-  762     	.line	356, "main.c"; 	modeFlag = 1;
     0039 2101                      1-  763     	MOVIA	0x01
                                    1-  764     	BANKSEL	_modeFlag
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 00rr                      1-  765     	MOVAR	_modeFlag
     003C 3rrr                      1-  766     	LGOTO	_00305_DS_
     003D                           1-  767     _00304_DS_:
                                    1-  768     	.line	358, "main.c"; 	modeFlag = 0;
                                    1-  769     	BANKSEL	_modeFlag
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 02rr                      1-  770     	CLRR	_modeFlag
     003F                           1-  771     _00305_DS_:
                                    1-  772     	.line	360, "main.c"; 	if(keyRead(0x04&~PORTB))
     003F 07rr                      1-  773     	COMR	_PORTB,W
                                    1-  774     	BANKSEL	r0x1015
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 00rr                      1-  775     	MOVAR	r0x1015
     0042 2104                      1-  776     	MOVIA	0x04
     0043 10rr                      1-  777     	ANDAR	r0x1015,F
     0044 01rr                      1-  778     	MOVR	r0x1015,W
     0045 2rrr                      1-  779     	LCALL	_keyRead
                                    1-  780     	BANKSEL	r0x1015
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 00rr                      1-  781     	MOVAR	r0x1015
     0048 01rr                      1-  782     	MOVR	r0x1015,W
     0049 0D03                      1-  783     	BTRSC	STATUS,2
     004A 3rrr                      1-  784     	LGOTO	_00308_DS_
                                    1-  785     	.line	362, "main.c"; 	PORTB = 0xFF; 
     004B 21FF                      1-  786     	MOVIA	0xff
     004C 00rr                      1-  787     	MOVAR	_PORTB
                                    1-  788     	.line	363, "main.c"; 	PORTA = 0xFF;
     004D 00rr                      1-  789     	MOVAR	_PORTA
                                    1-  790     	.line	364, "main.c"; 	keyLockFlag = (keyLockFlag == 1 ?0:1);
                                    1-  791     	BANKSEL	_keyLockFlag
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1-  792     	MOVR	_keyLockFlag,W
     0050 2401                      1-  793     	XORIA	0x01
     0051 0903                      1-  794     	BTRSS	STATUS,2
     0052 3rrr                      1-  795     	LGOTO	_00310_DS_
                                    1-  796     	BANKSEL	r0x1015
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 02rr                      1-  797     	CLRR	r0x1015
     0055 3rrr                      1-  798     	LGOTO	_00311_DS_
     0056                           1-  799     _00310_DS_:
     0056 2101                      1-  800     	MOVIA	0x01
                                    1-  801     	BANKSEL	r0x1015
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1-  802     	MOVAR	r0x1015
     0059                           1-  803     _00311_DS_:
                                    1-  804     	BANKSEL	r0x1015
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 01rr                      1-  805     	MOVR	r0x1015,W
                                    1-  806     	BANKSEL	_keyLockFlag
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 00rr                      1-  807     	MOVAR	_keyLockFlag
                                    1-  808     	.line	365, "main.c"; 	lockLedFlag = 1;
     005D 2101                      1-  809     	MOVIA	0x01
                                    1-  810     	BANKSEL	_lockLedFlag
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 00rr                      1-  811     	MOVAR	_lockLedFlag
                                    1-  812     	.line	366, "main.c"; 	lockLedCount = 0;
                                    1-  813     	BANKSEL	_lockLedCount
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 02rr                      1-  814     	CLRR	_lockLedCount
                                    1-  815     	.line	367, "main.c"; 	countLed = 0;
                                    1-  816     	BANKSEL	_countLed
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 02rr                      1-  817     	CLRR	_countLed
     0064                           1-  818     _00308_DS_:
                                    1-  819     	.line	370, "main.c"; 	}
                                    1-  820     	RETURN	
     0064 0010                      3-   26 m1      ret
                                    1-  821     ; exit point of _keyCon
                                    1-  823     ;***
                                    1-  824     ;  pBlock Stats: dbName = C
                                    1-  825     ;***
                                    1-  826     ;has an exit
                                    1-  827     ;; Starting pCode block
                                    1-  828     .segment "code"; module=main, function=_ledMode3
     0000                           1-  830     _ledMode3:
                                    1-  831     ; 2 exit points
                                    1-  832     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1-  833     	.line	319, "main.c"; 	if(lockLedCount < 5)
     0000 2105                      1-  834     	MOVIA	0x05
                                    1-  835     	BANKSEL	_lockLedCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  836     	SUBAR	_lockLedCount,W
     0003 0C03                      1-  837     	BTRSC	STATUS,0
     0004 3rrr                      1-  838     	LGOTO	_00287_DS_
                                    1-  839     	.line	321, "main.c"; 	PORTA &= 0x10;
     0005 2110                      1-  840     	MOVIA	0x10
     0006 10rr                      1-  841     	ANDAR	_PORTA,F
                                    1-  842     	.line	322, "main.c"; 	PORTB &= 0x07;
     0007 2107                      1-  843     	MOVIA	0x07
     0008 10rr                      1-  844     	ANDAR	_PORTB,F
     0009 3rrr                      1-  845     	LGOTO	_00289_DS_
                                    1-  846     ;;unsigned compare: left < lit (0xA=10), size=1
     000A                           1-  847     _00287_DS_:
                                    1-  848     	.line	324, "main.c"; 	else if(lockLedCount < 10)
     000A 210A                      1-  849     	MOVIA	0x0a
                                    1-  850     	BANKSEL	_lockLedCount
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  851     	SUBAR	_lockLedCount,W
     000D 0C03                      1-  852     	BTRSC	STATUS,0
     000E 3rrr                      1-  853     	LGOTO	_00289_DS_
                                    1-  854     	.line	326, "main.c"; 	PORTA |= 0x01;
     000F 18rr                      1-  855     	BSR	_PORTA,0
                                    1-  856     	.line	327, "main.c"; 	PORTB |= 0xF8;
     0010 21F8                      1-  857     	MOVIA	0xf8
     0011 11rr                      1-  858     	IORAR	_PORTB,F
     0012                           1-  859     _00289_DS_:
                                    1-  860     	.line	329, "main.c"; 	}
                                    1-  861     	RETURN	
     0012 0010                      3-   26 m1      ret
                                    1-  862     ; exit point of _ledMode3
                                    1-  864     ;***
                                    1-  865     ;  pBlock Stats: dbName = C
                                    1-  866     ;***
                                    1-  867     ;; Starting pCode block
                                    1-  868     .segment "code"; module=main, function=_ledMode2
     0000                           1-  870     _ledMode2:
                                    1-  871     ; 0 exit points
                                    1-  872     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  873     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1-  874     	.line	249, "main.c"; 	if(lockLedCount <= 5)
     0000 2106                      1-  875     	MOVIA	0x06
                                    1-  876     	BANKSEL	_lockLedCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  877     	SUBAR	_lockLedCount,W
     0003 0C03                      1-  878     	BTRSC	STATUS,0
     0004 3rrr                      1-  879     	LGOTO	_00277_DS_
                                    1-  880     	.line	250, "main.c"; 	resetbit(PORTA,0);
     0005 1Crr                      1-  881     	BCR	_PORTA,0
     0006 3rrr                      1-  882     	LGOTO	_00279_DS_
                                    1-  883     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  884     ;;unsigned compare: left >= lit (0xB=11), size=1
     0007                           1-  885     _00277_DS_:
                                    1-  886     	.line	251, "main.c"; 	else if(lockLedCount <= 10)
     0007 210B                      1-  887     	MOVIA	0x0b
                                    1-  888     	BANKSEL	_lockLedCount
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 04rr                      1-  889     	SUBAR	_lockLedCount,W
     000A 0C03                      1-  890     	BTRSC	STATUS,0
     000B 3rrr                      1-  891     	LGOTO	_00274_DS_
                                    1-  892     	.line	253, "main.c"; 	setbit(PORTA,0);
     000C 18rr                      1-  893     	BSR	_PORTA,0
                                    1-  894     	.line	254, "main.c"; 	resetbit(PORTB,7);
     000D 1Frr                      1-  895     	BCR	_PORTB,7
     000E 3rrr                      1-  896     	LGOTO	_00279_DS_
                                    1-  897     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  898     ;;unsigned compare: left >= lit (0x10=16), size=1
     000F                           1-  899     _00274_DS_:
                                    1-  900     	.line	256, "main.c"; 	else if(lockLedCount <= 15)
     000F 2110                      1-  901     	MOVIA	0x10
                                    1-  902     	BANKSEL	_lockLedCount
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  903     	SUBAR	_lockLedCount,W
     0012 0C03                      1-  904     	BTRSC	STATUS,0
     0013 3rrr                      1-  905     	LGOTO	_00271_DS_
                                    1-  906     	.line	258, "main.c"; 	setbit(PORTB,7);
     0014 1Brr                      1-  907     	BSR	_PORTB,7
                                    1-  908     	.line	259, "main.c"; 	resetbit(PORTB,6);
     0015 1Frr                      1-  909     	BCR	_PORTB,6
     0016 3rrr                      1-  910     	LGOTO	_00279_DS_
                                    1-  911     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  912     ;;unsigned compare: left >= lit (0x15=21), size=1
     0017                           1-  913     _00271_DS_:
                                    1-  914     	.line	261, "main.c"; 	else if(lockLedCount <= 20)
     0017 2115                      1-  915     	MOVIA	0x15
                                    1-  916     	BANKSEL	_lockLedCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1-  917     	SUBAR	_lockLedCount,W
     001A 0C03                      1-  918     	BTRSC	STATUS,0
     001B 3rrr                      1-  919     	LGOTO	_00268_DS_
                                    1-  920     	.line	263, "main.c"; 	setbit(PORTB,6);
     001C 1Brr                      1-  921     	BSR	_PORTB,6
                                    1-  922     	.line	264, "main.c"; 	resetbit(PORTB,5);
     001D 1Err                      1-  923     	BCR	_PORTB,5
     001E 3rrr                      1-  924     	LGOTO	_00279_DS_
                                    1-  925     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  926     ;;unsigned compare: left >= lit (0x1A=26), size=1
     001F                           1-  927     _00268_DS_:
                                    1-  928     	.line	266, "main.c"; 	else if(lockLedCount <= 25)
     001F 211A                      1-  929     	MOVIA	0x1a
                                    1-  930     	BANKSEL	_lockLedCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1-  931     	SUBAR	_lockLedCount,W
     0022 0C03                      1-  932     	BTRSC	STATUS,0
     0023 3rrr                      1-  933     	LGOTO	_00265_DS_
                                    1-  934     	.line	268, "main.c"; 	setbit(PORTB,5);
     0024 1Arr                      1-  935     	BSR	_PORTB,5
                                    1-  936     	.line	269, "main.c"; 	resetbit(PORTB,4);
     0025 1Err                      1-  937     	BCR	_PORTB,4
     0026 3rrr                      1-  938     	LGOTO	_00279_DS_
                                    1-  939     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  940     ;;unsigned compare: left >= lit (0x1F=31), size=1
     0027                           1-  941     _00265_DS_:
                                    1-  942     	.line	271, "main.c"; 	else if(lockLedCount <= 30)
     0027 211F                      1-  943     	MOVIA	0x1f
                                    1-  944     	BANKSEL	_lockLedCount
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 04rr                      1-  945     	SUBAR	_lockLedCount,W
     002A 0C03                      1-  946     	BTRSC	STATUS,0
     002B 3rrr                      1-  947     	LGOTO	_00262_DS_
                                    1-  948     	.line	273, "main.c"; 	setbit(PORTB,4);
     002C 1Arr                      1-  949     	BSR	_PORTB,4
                                    1-  950     	.line	274, "main.c"; 	resetbit(PORTB,3);
     002D 1Drr                      1-  951     	BCR	_PORTB,3
     002E 3rrr                      1-  952     	LGOTO	_00279_DS_
                                    1-  953     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  954     ;;unsigned compare: left >= lit (0x24=36), size=1
     002F                           1-  955     _00262_DS_:
                                    1-  956     	.line	276, "main.c"; 	else if(lockLedCount <= 35)
     002F 2124                      1-  957     	MOVIA	0x24
                                    1-  958     	BANKSEL	_lockLedCount
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 04rr                      1-  959     	SUBAR	_lockLedCount,W
     0032 0C03                      1-  960     	BTRSC	STATUS,0
     0033 3rrr                      1-  961     	LGOTO	_00259_DS_
                                    1-  962     	.line	278, "main.c"; 	setbit(PORTB,3);
     0034 19rr                      1-  963     	BSR	_PORTB,3
     0035 3rrr                      1-  964     	LGOTO	_00279_DS_
                                    1-  965     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  966     ;;unsigned compare: left >= lit (0x29=41), size=1
     0036                           1-  967     _00259_DS_:
                                    1-  968     	.line	280, "main.c"; 	else if(lockLedCount <= 40)
     0036 2129                      1-  969     	MOVIA	0x29
                                    1-  970     	BANKSEL	_lockLedCount
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 04rr                      1-  971     	SUBAR	_lockLedCount,W
     0039 0C03                      1-  972     	BTRSC	STATUS,0
     003A 3rrr                      1-  973     	LGOTO	_00256_DS_
                                    1-  974     	.line	282, "main.c"; 	setbit(PORTB,4);
     003B 1Arr                      1-  975     	BSR	_PORTB,4
                                    1-  976     	.line	283, "main.c"; 	resetbit(PORTB,3);
     003C 1Drr                      1-  977     	BCR	_PORTB,3
     003D 3rrr                      1-  978     	LGOTO	_00279_DS_
                                    1-  979     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  980     ;;unsigned compare: left >= lit (0x2E=46), size=1
     003E                           1-  981     _00256_DS_:
                                    1-  982     	.line	285, "main.c"; 	else if(lockLedCount <= 45)
     003E 212E                      1-  983     	MOVIA	0x2e
                                    1-  984     	BANKSEL	_lockLedCount
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 04rr                      1-  985     	SUBAR	_lockLedCount,W
     0041 0C03                      1-  986     	BTRSC	STATUS,0
     0042 3rrr                      1-  987     	LGOTO	_00253_DS_
                                    1-  988     	.line	287, "main.c"; 	setbit(PORTB,3);
     0043 19rr                      1-  989     	BSR	_PORTB,3
                                    1-  990     	.line	288, "main.c"; 	resetbit(PORTB,4);
     0044 1Err                      1-  991     	BCR	_PORTB,4
     0045 3rrr                      1-  992     	LGOTO	_00279_DS_
                                    1-  993     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  994     ;;unsigned compare: left >= lit (0x33=51), size=1
     0046                           1-  995     _00253_DS_:
                                    1-  996     	.line	290, "main.c"; 	else if(lockLedCount <= 50)
     0046 2133                      1-  997     	MOVIA	0x33
                                    1-  998     	BANKSEL	_lockLedCount
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 04rr                      1-  999     	SUBAR	_lockLedCount,W
     0049 0C03                      1- 1000     	BTRSC	STATUS,0
     004A 3rrr                      1- 1001     	LGOTO	_00250_DS_
                                    1- 1002     	.line	292, "main.c"; 	setbit(PORTB,4);
     004B 1Arr                      1- 1003     	BSR	_PORTB,4
                                    1- 1004     	.line	293, "main.c"; 	resetbit(PORTB,5);
     004C 1Err                      1- 1005     	BCR	_PORTB,5
     004D 3rrr                      1- 1006     	LGOTO	_00279_DS_
                                    1- 1007     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1008     ;;unsigned compare: left >= lit (0x38=56), size=1
     004E                           1- 1009     _00250_DS_:
                                    1- 1010     	.line	295, "main.c"; 	else if(lockLedCount <= 55)
     004E 2138                      1- 1011     	MOVIA	0x38
                                    1- 1012     	BANKSEL	_lockLedCount
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 04rr                      1- 1013     	SUBAR	_lockLedCount,W
     0051 0C03                      1- 1014     	BTRSC	STATUS,0
     0052 3rrr                      1- 1015     	LGOTO	_00247_DS_
                                    1- 1016     	.line	297, "main.c"; 	setbit(PORTB,5);
     0053 1Arr                      1- 1017     	BSR	_PORTB,5
                                    1- 1018     	.line	298, "main.c"; 	resetbit(PORTB,6);
     0054 1Frr                      1- 1019     	BCR	_PORTB,6
     0055 3rrr                      1- 1020     	LGOTO	_00279_DS_
                                    1- 1021     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1022     ;;unsigned compare: left >= lit (0x3D=61), size=1
     0056                           1- 1023     _00247_DS_:
                                    1- 1024     	.line	300, "main.c"; 	else if(lockLedCount <= 60)
     0056 213D                      1- 1025     	MOVIA	0x3d
                                    1- 1026     	BANKSEL	_lockLedCount
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 04rr                      1- 1027     	SUBAR	_lockLedCount,W
     0059 0C03                      1- 1028     	BTRSC	STATUS,0
     005A 3rrr                      1- 1029     	LGOTO	_00244_DS_
                                    1- 1030     	.line	302, "main.c"; 	setbit(PORTB,6);
     005B 1Brr                      1- 1031     	BSR	_PORTB,6
                                    1- 1032     	.line	303, "main.c"; 	resetbit(PORTB,7);
     005C 1Frr                      1- 1033     	BCR	_PORTB,7
     005D 3rrr                      1- 1034     	LGOTO	_00279_DS_
                                    1- 1035     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1036     ;;unsigned compare: left >= lit (0x42=66), size=1
     005E                           1- 1037     _00244_DS_:
                                    1- 1038     	.line	305, "main.c"; 	else if(lockLedCount <= 65)
     005E 2142                      1- 1039     	MOVIA	0x42
                                    1- 1040     	BANKSEL	_lockLedCount
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 04rr                      1- 1041     	SUBAR	_lockLedCount,W
     0061 0C03                      1- 1042     	BTRSC	STATUS,0
     0062 3rrr                      1- 1043     	LGOTO	_00241_DS_
                                    1- 1044     	.line	307, "main.c"; 	setbit(PORTB,7);
     0063 1Brr                      1- 1045     	BSR	_PORTB,7
                                    1- 1046     	.line	308, "main.c"; 	resetbit(PORTA,0);
     0064 1Crr                      1- 1047     	BCR	_PORTA,0
     0065 3rrr                      1- 1048     	LGOTO	_00279_DS_
                                    1- 1049     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1050     ;;unsigned compare: left >= lit (0x47=71), size=1
     0066                           1- 1051     _00241_DS_:
                                    1- 1052     	.line	310, "main.c"; 	else if(lockLedCount <= 70)
     0066 2147                      1- 1053     	MOVIA	0x47
                                    1- 1054     	BANKSEL	_lockLedCount
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 04rr                      1- 1055     	SUBAR	_lockLedCount,W
     0069 0803                      1- 1056     	BTRSS	STATUS,0
                                    1- 1057     	.line	312, "main.c"; 	setbit(PORTA,0);
     006A 18rr                      1- 1058     	BSR	_PORTA,0
     006B                           1- 1059     _00279_DS_:
                                    1- 1060     	.line	315, "main.c"; 	}
                                    1- 1061     	RETURN	
     006B 0010                      3-   26 m1      ret
                                    1- 1063     ;***
                                    1- 1064     ;  pBlock Stats: dbName = C
                                    1- 1065     ;***
                                    1- 1066     ;; Starting pCode block
                                    1- 1067     .segment "code"; module=main, function=_ledMode1
     0000                           1- 1069     _ledMode1:
                                    1- 1070     ; 0 exit points
                                    1- 1071     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 1072     	.line	212, "main.c"; 	if(lockLedCount < 5)
     0000 2105                      1- 1073     	MOVIA	0x05
                                    1- 1074     	BANKSEL	_lockLedCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1075     	SUBAR	_lockLedCount,W
     0003 0C03                      1- 1076     	BTRSC	STATUS,0
     0004 3rrr                      1- 1077     	LGOTO	_00231_DS_
                                    1- 1078     	.line	213, "main.c"; 	resetbit(PORTA,0);
     0005 1Crr                      1- 1079     	BCR	_PORTA,0
     0006 3rrr                      1- 1080     	LGOTO	_00233_DS_
                                    1- 1081     ;;unsigned compare: left < lit (0xA=10), size=1
     0007                           1- 1082     _00231_DS_:
                                    1- 1083     	.line	214, "main.c"; 	else if(lockLedCount < 10)
     0007 210A                      1- 1084     	MOVIA	0x0a
                                    1- 1085     	BANKSEL	_lockLedCount
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 04rr                      1- 1086     	SUBAR	_lockLedCount,W
     000A 0C03                      1- 1087     	BTRSC	STATUS,0
     000B 3rrr                      1- 1088     	LGOTO	_00228_DS_
                                    1- 1089     	.line	216, "main.c"; 	setbit(PORTA,0);
     000C 18rr                      1- 1090     	BSR	_PORTA,0
                                    1- 1091     	.line	217, "main.c"; 	resetbit(PORTB,7);
     000D 1Frr                      1- 1092     	BCR	_PORTB,7
     000E 3rrr                      1- 1093     	LGOTO	_00233_DS_
                                    1- 1094     ;;unsigned compare: left < lit (0xF=15), size=1
     000F                           1- 1095     _00228_DS_:
                                    1- 1096     	.line	219, "main.c"; 	else if(lockLedCount < 15)
     000F 210F                      1- 1097     	MOVIA	0x0f
                                    1- 1098     	BANKSEL	_lockLedCount
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1099     	SUBAR	_lockLedCount,W
     0012 0C03                      1- 1100     	BTRSC	STATUS,0
     0013 3rrr                      1- 1101     	LGOTO	_00225_DS_
                                    1- 1102     	.line	221, "main.c"; 	setbit(PORTB,7);
     0014 1Brr                      1- 1103     	BSR	_PORTB,7
                                    1- 1104     	.line	222, "main.c"; 	resetbit(PORTB,6);
     0015 1Frr                      1- 1105     	BCR	_PORTB,6
     0016 3rrr                      1- 1106     	LGOTO	_00233_DS_
                                    1- 1107     ;;unsigned compare: left < lit (0x14=20), size=1
     0017                           1- 1108     _00225_DS_:
                                    1- 1109     	.line	224, "main.c"; 	else if(lockLedCount < 20)
     0017 2114                      1- 1110     	MOVIA	0x14
                                    1- 1111     	BANKSEL	_lockLedCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1- 1112     	SUBAR	_lockLedCount,W
     001A 0C03                      1- 1113     	BTRSC	STATUS,0
     001B 3rrr                      1- 1114     	LGOTO	_00222_DS_
                                    1- 1115     	.line	226, "main.c"; 	setbit(PORTB,6);
     001C 1Brr                      1- 1116     	BSR	_PORTB,6
                                    1- 1117     	.line	227, "main.c"; 	resetbit(PORTB,5);
     001D 1Err                      1- 1118     	BCR	_PORTB,5
     001E 3rrr                      1- 1119     	LGOTO	_00233_DS_
                                    1- 1120     ;;unsigned compare: left < lit (0x19=25), size=1
     001F                           1- 1121     _00222_DS_:
                                    1- 1122     	.line	229, "main.c"; 	else if(lockLedCount < 25)
     001F 2119                      1- 1123     	MOVIA	0x19
                                    1- 1124     	BANKSEL	_lockLedCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1- 1125     	SUBAR	_lockLedCount,W
     0022 0C03                      1- 1126     	BTRSC	STATUS,0
     0023 3rrr                      1- 1127     	LGOTO	_00219_DS_
                                    1- 1128     	.line	231, "main.c"; 	setbit(PORTB,5);
     0024 1Arr                      1- 1129     	BSR	_PORTB,5
                                    1- 1130     	.line	232, "main.c"; 	resetbit(PORTB,4);
     0025 1Err                      1- 1131     	BCR	_PORTB,4
     0026 3rrr                      1- 1132     	LGOTO	_00233_DS_
                                    1- 1133     ;;unsigned compare: left < lit (0x1E=30), size=1
     0027                           1- 1134     _00219_DS_:
                                    1- 1135     	.line	234, "main.c"; 	else if(lockLedCount < 30)
     0027 211E                      1- 1136     	MOVIA	0x1e
                                    1- 1137     	BANKSEL	_lockLedCount
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 04rr                      1- 1138     	SUBAR	_lockLedCount,W
     002A 0C03                      1- 1139     	BTRSC	STATUS,0
     002B 3rrr                      1- 1140     	LGOTO	_00216_DS_
                                    1- 1141     	.line	236, "main.c"; 	setbit(PORTB,4);
     002C 1Arr                      1- 1142     	BSR	_PORTB,4
                                    1- 1143     	.line	237, "main.c"; 	resetbit(PORTB,3);
     002D 1Drr                      1- 1144     	BCR	_PORTB,3
     002E 3rrr                      1- 1145     	LGOTO	_00233_DS_
                                    1- 1146     ;;unsigned compare: left < lit (0x23=35), size=1
     002F                           1- 1147     _00216_DS_:
                                    1- 1148     	.line	239, "main.c"; 	else if(lockLedCount < 35)
     002F 2123                      1- 1149     	MOVIA	0x23
                                    1- 1150     	BANKSEL	_lockLedCount
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 04rr                      1- 1151     	SUBAR	_lockLedCount,W
     0032 0803                      1- 1152     	BTRSS	STATUS,0
                                    1- 1153     	.line	241, "main.c"; 	setbit(PORTB,3);
     0033 19rr                      1- 1154     	BSR	_PORTB,3
     0034                           1- 1155     _00233_DS_:
                                    1- 1156     	.line	244, "main.c"; 	}
                                    1- 1157     	RETURN	
     0034 0010                      3-   26 m1      ret
                                    1- 1159     ;***
                                    1- 1160     ;  pBlock Stats: dbName = C
                                    1- 1161     ;***
                                    1- 1162     ;has an exit
                                    1- 1163     ;functions called:
                                    1- 1164     ;   _ledMode1
                                    1- 1165     ;   _ledMode2
                                    1- 1166     ;   _ledMode2
                                    1- 1167     ;   __moduchar
                                    1- 1168     ;   _ledMode1
                                    1- 1169     ;   _ledMode2
                                    1- 1170     ;   _ledMode2
                                    1- 1171     ;   __moduchar
                                    1- 1172     ;2 compiler assigned registers:
                                    1- 1173     ;   STK00
                                    1- 1174     ;   r0x1017
                                    1- 1175     ;; Starting pCode block
                                    1- 1176     .segment "code"; module=main, function=_ledCon
     0000                           1- 1178     _ledCon:
                                    1- 1179     ; 2 exit points
                                    1- 1180     	.line	99, "main.c"; 	if(!modeFlag)
                                    1- 1181     	BANKSEL	_modeFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1182     	MOVR	_modeFlag,W
     0002 0903                      1- 1183     	BTRSS	STATUS,2
     0003 3rrr                      1- 1184     	LGOTO	_00206_DS_
                                    1- 1185     	.line	102, "main.c"; 	if(lockLedFlag)
                                    1- 1186     	BANKSEL	_lockLedFlag
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1187     	MOVR	_lockLedFlag,W
     0006 0D03                      1- 1188     	BTRSC	STATUS,2
     0007 3rrr                      1- 1189     	LGOTO	_00175_DS_
                                    1- 1190     	.line	105, "main.c"; 	ledMode1();
     0008 2rrr                      1- 1191     	LCALL	_ledMode1
                                    1- 1192     	.line	106, "main.c"; 	if(++lockLedCount >= 35)
                                    1- 1193     	BANKSEL	_lockLedCount
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 05rr                      1- 1194     	INCR	_lockLedCount,F
                                    1- 1195     ;;unsigned compare: left < lit (0x23=35), size=1
     000B 2123                      1- 1196     	MOVIA	0x23
     000C 04rr                      1- 1197     	SUBAR	_lockLedCount,W
     000D 0803                      1- 1198     	BTRSS	STATUS,0
     000E 3rrr                      1- 1199     	LGOTO	_00208_DS_
                                    1- 1200     	.line	108, "main.c"; 	lockLedCount = 0;
     000F 02rr                      1- 1201     	CLRR	_lockLedCount
                                    1- 1202     	.line	109, "main.c"; 	if(keyLockFlag)
                                    1- 1203     	BANKSEL	_keyLockFlag
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1204     	MOVR	_keyLockFlag,W
     0012 0D03                      1- 1205     	BTRSC	STATUS,2
     0013 3rrr                      1- 1206     	LGOTO	_00164_DS_
                                    1- 1207     	.line	111, "main.c"; 	if(++countLed >= 3)
                                    1- 1208     	BANKSEL	_countLed
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1- 1209     	INCR	_countLed,F
                                    1- 1210     ;;unsigned compare: left < lit (0x3=3), size=1
     0016 2103                      1- 1211     	MOVIA	0x03
     0017 04rr                      1- 1212     	SUBAR	_countLed,W
     0018 0803                      1- 1213     	BTRSS	STATUS,0
     0019 3rrr                      1- 1214     	LGOTO	_00208_DS_
                                    1- 1215     	.line	112, "main.c"; 	lockLedFlag = 0;//停止开关闪灯
                                    1- 1216     	BANKSEL	_lockLedFlag
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 02rr                      1- 1217     	CLRR	_lockLedFlag
     001C 3rrr                      1- 1218     	LGOTO	_00208_DS_
     001D                           1- 1219     _00164_DS_:
                                    1- 1220     	.line	115, "main.c"; 	lockLedFlag = 0;//停止开关闪灯
                                    1- 1221     	BANKSEL	_lockLedFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 02rr                      1- 1222     	CLRR	_lockLedFlag
     001F 3rrr                      1- 1223     	LGOTO	_00208_DS_
     0020                           1- 1224     _00175_DS_:
                                    1- 1225     	.line	118, "main.c"; 	else if(ledFlag)
                                    1- 1226     	BANKSEL	_ledFlag
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1227     	MOVR	_ledFlag,W
     0022 0D03                      1- 1228     	BTRSC	STATUS,2
     0023 3rrr                      1- 1229     	LGOTO	_00208_DS_
                                    1- 1230     	.line	120, "main.c"; 	if(!keyLockFlag)
                                    1- 1231     	BANKSEL	_keyLockFlag
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1232     	MOVR	_keyLockFlag,W
     0026 0903                      1- 1233     	BTRSS	STATUS,2
     0027 3rrr                      1- 1234     	LGOTO	_00169_DS_
                                    1- 1235     	.line	122, "main.c"; 	ledFlag = 0;
                                    1- 1236     	BANKSEL	_ledFlag
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 1237     	CLRR	_ledFlag
                                    1- 1238     	.line	123, "main.c"; 	lockLedCount = 0;
                                    1- 1239     	BANKSEL	_lockLedCount
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 02rr                      1- 1240     	CLRR	_lockLedCount
                                    1- 1241     	.line	124, "main.c"; 	return;
     002C 3rrr                      1- 1242     	LGOTO	_00208_DS_
     002D                           1- 1243     _00169_DS_:
                                    1- 1244     	.line	127, "main.c"; 	ledMode2();
     002D 2rrr                      1- 1245     	LCALL	_ledMode2
                                    1- 1246     	.line	128, "main.c"; 	if(++lockLedCount >= 70)
                                    1- 1247     	BANKSEL	_lockLedCount
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1248     	INCR	_lockLedCount,F
                                    1- 1249     ;;unsigned compare: left < lit (0x46=70), size=1
     0030 2146                      1- 1250     	MOVIA	0x46
     0031 04rr                      1- 1251     	SUBAR	_lockLedCount,W
     0032 0803                      1- 1252     	BTRSS	STATUS,0
     0033 3rrr                      1- 1253     	LGOTO	_00208_DS_
                                    1- 1254     	.line	130, "main.c"; 	PORTA |= 0x01;
     0034 18rr                      1- 1255     	BSR	_PORTA,0
                                    1- 1256     	.line	131, "main.c"; 	PORTB |= 0xF8;
     0035 21F8                      1- 1257     	MOVIA	0xf8
     0036 11rr                      1- 1258     	IORAR	_PORTB,F
                                    1- 1259     	.line	132, "main.c"; 	lockLedCount = 0;
     0037 02rr                      1- 1260     	CLRR	_lockLedCount
                                    1- 1261     	.line	133, "main.c"; 	ledFlag = 0;
                                    1- 1262     	BANKSEL	_ledFlag
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 02rr                      1- 1263     	CLRR	_ledFlag
     003A 3rrr                      1- 1264     	LGOTO	_00208_DS_
     003B                           1- 1265     _00206_DS_:
                                    1- 1266     	.line	141, "main.c"; 	if(lockLedFlag)
                                    1- 1267     	BANKSEL	_lockLedFlag
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 01rr                      1- 1268     	MOVR	_lockLedFlag,W
     003D 0D03                      1- 1269     	BTRSC	STATUS,2
     003E 3rrr                      1- 1270     	LGOTO	_00203_DS_
                                    1- 1271     ;;unsigned compare: left < lit (0x3=3), size=1
                                    1- 1272     	.line	144, "main.c"; 	if(lockLedCount < 3)
     003F 2103                      1- 1273     	MOVIA	0x03
                                    1- 1274     	BANKSEL	_lockLedCount
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 04rr                      1- 1275     	SUBAR	_lockLedCount,W
     0042 0C03                      1- 1276     	BTRSC	STATUS,0
     0043 3rrr                      1- 1277     	LGOTO	_00180_DS_
                                    1- 1278     	.line	146, "main.c"; 	PORTA &= 0x10;
     0044 2110                      1- 1279     	MOVIA	0x10
     0045 10rr                      1- 1280     	ANDAR	_PORTA,F
                                    1- 1281     	.line	147, "main.c"; 	PORTB &= 0x07;
     0046 2107                      1- 1282     	MOVIA	0x07
     0047 10rr                      1- 1283     	ANDAR	_PORTB,F
     0048 3rrr                      1- 1284     	LGOTO	_00181_DS_
                                    1- 1285     ;;unsigned compare: left < lit (0x21=33), size=1
     0049                           1- 1286     _00180_DS_:
                                    1- 1287     	.line	149, "main.c"; 	else if(lockLedCount < 33)
     0049 2121                      1- 1288     	MOVIA	0x21
                                    1- 1289     	BANKSEL	_lockLedCount
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 04rr                      1- 1290     	SUBAR	_lockLedCount,W
     004C 0C03                      1- 1291     	BTRSC	STATUS,0
     004D 3rrr                      1- 1292     	LGOTO	_00181_DS_
                                    1- 1293     	.line	151, "main.c"; 	PORTA |= 0x01;
     004E 18rr                      1- 1294     	BSR	_PORTA,0
                                    1- 1295     	.line	152, "main.c"; 	PORTB |= 0xF8;
     004F 21F8                      1- 1296     	MOVIA	0xf8
     0050 11rr                      1- 1297     	IORAR	_PORTB,F
     0051                           1- 1298     _00181_DS_:
                                    1- 1299     	.line	155, "main.c"; 	if(++lockLedCount >= 33)
                                    1- 1300     	BANKSEL	_lockLedCount
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 05rr                      1- 1301     	INCR	_lockLedCount,F
                                    1- 1302     ;;unsigned compare: left < lit (0x21=33), size=1
     0053 2121                      1- 1303     	MOVIA	0x21
     0054 04rr                      1- 1304     	SUBAR	_lockLedCount,W
     0055 0803                      1- 1305     	BTRSS	STATUS,0
     0056 3rrr                      1- 1306     	LGOTO	_00208_DS_
                                    1- 1307     	.line	157, "main.c"; 	lockLedCount = 0;
     0057 02rr                      1- 1308     	CLRR	_lockLedCount
                                    1- 1309     	.line	158, "main.c"; 	if(keyLockFlag)
                                    1- 1310     	BANKSEL	_keyLockFlag
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 01rr                      1- 1311     	MOVR	_keyLockFlag,W
     005A 0D03                      1- 1312     	BTRSC	STATUS,2
     005B 3rrr                      1- 1313     	LGOTO	_00185_DS_
                                    1- 1314     	.line	160, "main.c"; 	if(++countLed >= 3)
                                    1- 1315     	BANKSEL	_countLed
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 05rr                      1- 1316     	INCR	_countLed,F
                                    1- 1317     ;;unsigned compare: left < lit (0x3=3), size=1
     005E 2103                      1- 1318     	MOVIA	0x03
     005F 04rr                      1- 1319     	SUBAR	_countLed,W
     0060 0803                      1- 1320     	BTRSS	STATUS,0
     0061 3rrr                      1- 1321     	LGOTO	_00208_DS_
                                    1- 1322     	.line	161, "main.c"; 	lockLedFlag = 0;//停止开关闪灯
                                    1- 1323     	BANKSEL	_lockLedFlag
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 02rr                      1- 1324     	CLRR	_lockLedFlag
     0064 3rrr                      1- 1325     	LGOTO	_00208_DS_
     0065                           1- 1326     _00185_DS_:
                                    1- 1327     	.line	164, "main.c"; 	lockLedFlag = 0;//停止开关闪灯
                                    1- 1328     	BANKSEL	_lockLedFlag
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 02rr                      1- 1329     	CLRR	_lockLedFlag
     0067 3rrr                      1- 1330     	LGOTO	_00208_DS_
     0068                           1- 1331     _00203_DS_:
                                    1- 1332     	.line	167, "main.c"; 	else if(ledFlag)
                                    1- 1333     	BANKSEL	_ledFlag
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 01rr                      1- 1334     	MOVR	_ledFlag,W
     006A 0D03                      1- 1335     	BTRSC	STATUS,2
     006B 3rrr                      1- 1336     	LGOTO	_00208_DS_
                                    1- 1337     	.line	169, "main.c"; 	if(!keyLockFlag)
                                    1- 1338     	BANKSEL	_keyLockFlag
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 01rr                      1- 1339     	MOVR	_keyLockFlag,W
     006E 0903                      1- 1340     	BTRSS	STATUS,2
     006F 3rrr                      1- 1341     	LGOTO	_00190_DS_
                                    1- 1342     	.line	171, "main.c"; 	ledFlag = 0;
                                    1- 1343     	BANKSEL	_ledFlag
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 02rr                      1- 1344     	CLRR	_ledFlag
                                    1- 1345     	.line	172, "main.c"; 	lockLedCount = 0;
                                    1- 1346     	BANKSEL	_lockLedCount
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 02rr                      1- 1347     	CLRR	_lockLedCount
                                    1- 1348     	.line	173, "main.c"; 	return;
     0074 3rrr                      1- 1349     	LGOTO	_00208_DS_
     0075                           1- 1350     _00190_DS_:
                                    1- 1351     	.line	176, "main.c"; 	ledMode2();
     0075 2rrr                      1- 1352     	LCALL	_ledMode2
                                    1- 1353     ;;unsigned compare: left < lit (0x46=70), size=1
                                    1- 1354     	.line	177, "main.c"; 	if(lockLedCount >= 70)
     0076 2146                      1- 1355     	MOVIA	0x46
                                    1- 1356     	BANKSEL	_lockLedCount
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 04rr                      1- 1357     	SUBAR	_lockLedCount,W
     0079 0803                      1- 1358     	BTRSS	STATUS,0
     007A 3rrr                      1- 1359     	LGOTO	_00197_DS_
                                    1- 1360     	.line	179, "main.c"; 	if(lockLedCount % 5 == 0)
     007B 2105                      1- 1361     	MOVIA	0x05
     007C 00rr                      1- 1362     	MOVAR	STK00
     007D 01rr                      1- 1363     	MOVR	_lockLedCount,W
     007E 2rrr                      1- 1364     	LCALL	__moduchar
                                    1- 1365     	BANKSEL	r0x1017
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 00rr                      1- 1366     	MOVAR	r0x1017
     0081 01rr                      1- 1367     	MOVR	r0x1017,W
     0082 0903                      1- 1368     	BTRSS	STATUS,2
     0083 3rrr                      1- 1369     	LGOTO	_00197_DS_
                                    1- 1370     	.line	181, "main.c"; 	if(countLed == 0)
                                    1- 1371     	BANKSEL	_countLed
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 01rr                      1- 1372     	MOVR	_countLed,W
     0086 0903                      1- 1373     	BTRSS	STATUS,2
     0087 3rrr                      1- 1374     	LGOTO	_00192_DS_
                                    1- 1375     	.line	183, "main.c"; 	PORTA &= 0x10;
     0088 2110                      1- 1376     	MOVIA	0x10
     0089 10rr                      1- 1377     	ANDAR	_PORTA,F
                                    1- 1378     	.line	184, "main.c"; 	PORTB &= 0x07;
     008A 2107                      1- 1379     	MOVIA	0x07
     008B 10rr                      1- 1380     	ANDAR	_PORTB,F
                                    1- 1381     	.line	185, "main.c"; 	countLed = 1;
     008C 2101                      1- 1382     	MOVIA	0x01
     008D 00rr                      1- 1383     	MOVAR	_countLed
     008E 3rrr                      1- 1384     	LGOTO	_00197_DS_
     008F                           1- 1385     _00192_DS_:
                                    1- 1386     	.line	189, "main.c"; 	PORTA |= 0x01;
     008F 18rr                      1- 1387     	BSR	_PORTA,0
                                    1- 1388     	.line	190, "main.c"; 	PORTB |= 0xF8;
     0090 21F8                      1- 1389     	MOVIA	0xf8
     0091 11rr                      1- 1390     	IORAR	_PORTB,F
                                    1- 1391     	.line	191, "main.c"; 	countLed = 0;
                                    1- 1392     	BANKSEL	_countLed
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 02rr                      1- 1393     	CLRR	_countLed
     0094                           1- 1394     _00197_DS_:
                                    1- 1395     	.line	195, "main.c"; 	if(++lockLedCount >= 170)
                                    1- 1396     	BANKSEL	_lockLedCount
     0094 rrrr                      3-   71 m1      .banksel ram_address
     0095 05rr                      1- 1397     	INCR	_lockLedCount,F
                                    1- 1398     ;;unsigned compare: left < lit (0xAA=170), size=1
     0096 21AA                      1- 1399     	MOVIA	0xaa
     0097 04rr                      1- 1400     	SUBAR	_lockLedCount,W
     0098 0803                      1- 1401     	BTRSS	STATUS,0
     0099 3rrr                      1- 1402     	LGOTO	_00208_DS_
                                    1- 1403     	.line	197, "main.c"; 	PORTA |= 0x01;
     009A 18rr                      1- 1404     	BSR	_PORTA,0
                                    1- 1405     	.line	198, "main.c"; 	PORTB |= 0xF8;
     009B 21F8                      1- 1406     	MOVIA	0xf8
     009C 11rr                      1- 1407     	IORAR	_PORTB,F
                                    1- 1408     	.line	199, "main.c"; 	countLed = 0;
                                    1- 1409     	BANKSEL	_countLed
     009D rrrr                      3-   71 m1      .banksel ram_address
     009E 02rr                      1- 1410     	CLRR	_countLed
                                    1- 1411     	.line	200, "main.c"; 	lockLedCount = 0;
                                    1- 1412     	BANKSEL	_lockLedCount
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 02rr                      1- 1413     	CLRR	_lockLedCount
                                    1- 1414     	.line	201, "main.c"; 	ledFlag = 0;
                                    1- 1415     	BANKSEL	_ledFlag
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 02rr                      1- 1416     	CLRR	_ledFlag
     00A3                           1- 1417     _00208_DS_:
                                    1- 1418     	.line	207, "main.c"; 	}
                                    1- 1419     	RETURN	
     00A3 0010                      3-   26 m1      ret
                                    1- 1420     ; exit point of _ledCon
                                    1- 1423     ;	code size estimation:
                                    1- 1424     ;	  560+  117 =   677 instructions ( 1588 byte)
                                    1- 1426     	end
                                    1- 1426     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__moduchar              Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800533
__sdcc_interrupt        Label    00000000
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00116_DS_              Label    00000014
_00122_DS_              Label    0000003B
_00128_DS_              Label    00000001
_00156_DS_              Label    00000036
_00164_DS_              Label    0000001D
_00169_DS_              Label    0000002D
_00175_DS_              Label    00000020
_00180_DS_              Label    00000049
_00181_DS_              Label    00000051
_00185_DS_              Label    00000065
_00190_DS_              Label    00000075
_00192_DS_              Label    0000008F
_00197_DS_              Label    00000094
_00203_DS_              Label    00000068
_00206_DS_              Label    0000003B
_00208_DS_              Label    000000A3
_00216_DS_              Label    0000002F
_00219_DS_              Label    00000027
_00222_DS_              Label    0000001F
_00225_DS_              Label    00000017
_00228_DS_              Label    0000000F
_00231_DS_              Label    00000007
_00233_DS_              Label    00000034
_00241_DS_              Label    00000066
_00244_DS_              Label    0000005E
_00247_DS_              Label    00000056
_00250_DS_              Label    0000004E
_00253_DS_              Label    00000046
_00256_DS_              Label    0000003E
_00259_DS_              Label    00000036
_00262_DS_              Label    0000002F
_00265_DS_              Label    00000027
_00268_DS_              Label    0000001F
_00271_DS_              Label    00000017
_00274_DS_              Label    0000000F
_00277_DS_              Label    00000007
_00279_DS_              Label    0000006B
_00287_DS_              Label    0000000A
_00289_DS_              Label    00000012
_00295_DS_              Label    0000000E
_00301_DS_              Label    00000014
_00302_DS_              Label    0000002B
_00304_DS_              Label    0000003D
_00305_DS_              Label    0000003F
_00308_DS_              Label    00000064
_00310_DS_              Label    00000056
_00311_DS_              Label    00000059
_00333_DS_              Label    00000009
_00334_DS_              Label    0000001B
_00350_DS_              Label    0000002D
_00351_DS_              Label    0000003B
_00353_DS_              Label    0000001D
_00354_DS_              Label    0000003E
_00355_DS_              Label    0000003F
_00372_DS_              Label    0000000F
_00373_DS_              Label    00000024
_00374_DS_              Label    00000034
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_countLed               Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_init                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_key2Count              Label    00000000
_keyCon                 Label    00000000
_keyCount               Label    00000000
_keyLockFlag            Label    00000000
_keyRead                Label    00000000
_ledCon                 Label    00000000
_ledFlag                Label    00000000
_ledMode1               Label    00000000
_ledMode2               Label    00000000
_ledMode3               Label    00000000
_lockLedCount           Label    00000000
_lockLedFlag            Label    00000000
_longFlag               Label    00000000
_longPressFlag          Label    00000000
_main                   Label    00000000
_modeFlag               Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_sleepCount             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1013                 Label    00000000
r0x1014                 Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a053d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A053D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
