
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A053D,c=on
                                    1-    9     	#include "ny8a053d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduchar
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_INDF
                                    1-   24     	extern	_TMR0
                                    1-   25     	extern	_PCL
                                    1-   26     	extern	_STATUS
                                    1-   27     	extern	_FSR
                                    1-   28     	extern	_PORTA
                                    1-   29     	extern	_PORTB
                                    1-   30     	extern	_PCON
                                    1-   31     	extern	_BWUCON
                                    1-   32     	extern	_PCHBUF
                                    1-   33     	extern	_ABPLCON
                                    1-   34     	extern	_BPHCON
                                    1-   35     	extern	_INTE
                                    1-   36     	extern	_INTF
                                    1-   37     	extern	_TMR1
                                    1-   38     	extern	_T1CR1
                                    1-   39     	extern	_T1CR2
                                    1-   40     	extern	_PWM1DUTY
                                    1-   41     	extern	_PS1CV
                                    1-   42     	extern	_BZ1CR
                                    1-   43     	extern	_IRCR
                                    1-   44     	extern	_TBHP
                                    1-   45     	extern	_TBHD
                                    1-   46     	extern	_OSCCR
                                    1-   47     	extern	_IOSTA
                                    1-   48     	extern	_IOSTB
                                    1-   49     	extern	_PS0CV
                                    1-   50     	extern	_BODCON
                                    1-   51     	extern	_PCON1
                                    1-   52     	extern	_T0MD
                                    1-   53     	extern	___sdcc_saved_fsr
                                    1-   54     	extern	___sdcc_saved_stk00
                                    1-   55     	extern	___sdcc_saved_stk01
                                    1-   56     	extern	__nyc_ny8_startup
                                    1-   57     ;--------------------------------------------------------
                                    1-   58     ; global declarations
                                    1-   59     ;--------------------------------------------------------
                                    1-   60     	extern	_keyRead
                                    1-   61     	extern	_init
                                    1-   62     	extern	_keyCon
                                    1-   63     	extern	_ledMode2
                                    1-   64     	extern	_ledMode1
                                    1-   65     	extern	_ledCon
                                    1-   66     	extern	_isr
                                    1-   67     	extern	_main
                                    1-   68     	extern	_ledMode3
                                    1-   69     	extern	_intCount
                                    1-   70     	extern	_IntFlag
                                    1-   71     	extern	_keyLockFlag
                                    1-   72     	extern	_modeFlag
                                    1-   73     	extern	_key2Count
                                    1-   74     	extern	_ledFlag
                                    1-   75     	extern	_longFlag
                                    1-   76     	extern	_lockLedFlag
                                    1-   77     	extern	_lockLedCount
                                    1-   78     	extern	_countLed
                                    1-   79     	extern	_keyCount
                                    1-   80     	extern	_longPressFlag
                                    1-   82     	extern PSAVE
                                    1-   83     	extern SSAVE
                                    1-   84     	extern WSAVE
                                    1-   85     	extern STK12
                                    1-   86     	extern STK11
                                    1-   87     	extern STK10
                                    1-   88     	extern STK09
                                    1-   89     	extern STK08
                                    1-   90     	extern STK07
                                    1-   91     	extern STK06
                                    1-   92     	extern STK05
                                    1-   93     	extern STK04
                                    1-   94     	extern STK03
                                    1-   95     	extern STK02
                                    1-   96     	extern STK01
                                    1-   97     	extern STK00
                                    1-   99     .segment "uninit", 0x20000020
 20000020                           1-  100     PSAVE:
                                    1-  101     	.res 1
 20000021                           1-  102     SSAVE:
                                    1-  103     	.res 1
 20000022                           1-  104     WSAVE:
                                    1-  105     	.res 1
 20000023                           1-  106     STK12:
                                    1-  107     	.res 1
 20000024                           1-  108     STK11:
                                    1-  109     	.res 1
 20000025                           1-  110     STK10:
                                    1-  111     	.res 1
 20000026                           1-  112     STK09:
                                    1-  113     	.res 1
 20000027                           1-  114     STK08:
                                    1-  115     	.res 1
 20000028                           1-  116     STK07:
                                    1-  117     	.res 1
 20000029                           1-  118     STK06:
                                    1-  119     	.res 1
 2000002A                           1-  120     STK05:
                                    1-  121     	.res 1
 2000002B                           1-  122     STK04:
                                    1-  123     	.res 1
 2000002C                           1-  124     STK03:
                                    1-  125     	.res 1
 2000002D                           1-  126     STK02:
                                    1-  127     	.res 1
 2000002E                           1-  128     STK01:
                                    1-  129     	.res 1
 2000002F                           1-  130     STK00:
                                    1-  131     	.res 1
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     ; global definitions
                                    1-  135     ;--------------------------------------------------------
                                    1-  136     ;--------------------------------------------------------
                                    1-  137     ; absolute symbol definitions
                                    1-  138     ;--------------------------------------------------------
                                    1-  139     ;--------------------------------------------------------
                                    1-  140     ; compiler-defined variables
                                    1-  141     ;--------------------------------------------------------
                                    1-  142     .segment "uninit"
     0000                           1-  143     r0x1015:
                                    1-  144     	.res	1
                                    1-  145     .segment "uninit"
     0000                           1-  146     r0x1016:
                                    1-  147     	.res	1
                                    1-  148     .segment "uninit"
     0000                           1-  149     r0x1014:
                                    1-  150     	.res	1
                                    1-  151     .segment "uninit"
     0000                           1-  152     r0x1012:
                                    1-  153     	.res	1
                                    1-  154     .segment "uninit"
     0000                           1-  155     r0x1013:
                                    1-  156     	.res	1
                                    1-  157     .segment "uninit"
     0000                           1-  158     r0x1011:
                                    1-  159     	.res	1
                                    1-  160     ;--------------------------------------------------------
                                    1-  161     ; initialized data
                                    1-  162     ;--------------------------------------------------------
                                    1-  164     .segment "idata"
     0000                           1-  165     _intCount:
     0000 0000                      1-  166     	dw	0x00
                                    1-  170     .segment "idata"
     0000                           1-  171     _IntFlag:
     0000 0000                      1-  172     	dw	0x00
                                    1-  176     .segment "idata"
     0000                           1-  177     _keyLockFlag:
     0000 0001                      1-  178     	dw	0x01
                                    1-  182     .segment "idata"
     0000                           1-  183     _modeFlag:
     0000 0000                      1-  184     	dw	0x00
                                    1-  188     .segment "idata"
     0000                           1-  189     _key2Count:
     0000 0000 0000                 1-  190     	dw	0x00, 0x00
                                    1-  194     .segment "idata"
     0000                           1-  195     _ledFlag:
     0000 0000                      1-  196     	dw	0x00
                                    1-  200     .segment "idata"
     0000                           1-  201     _longFlag:
     0000 0000                      1-  202     	dw	0x00
                                    1-  206     .segment "idata"
     0000                           1-  207     _lockLedFlag:
     0000 0000                      1-  208     	dw	0x00
                                    1-  212     .segment "idata"
     0000                           1-  213     _lockLedCount:
     0000 0000                      1-  214     	dw	0x00
                                    1-  218     .segment "idata"
     0000                           1-  219     _countLed:
     0000 0000                      1-  220     	dw	0x00
                                    1-  224     .segment "idata"
     0000                           1-  225     _keyCount:
     0000 0000 0000                 1-  226     	dw	0x00, 0x00
                                    1-  230     .segment "idata"
     0000                           1-  231     _longPressFlag:
     0000 0000                      1-  232     	dw	0x00
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     ; overlayable items in internal ram 
                                    1-  237     ;--------------------------------------------------------
                                    1-  238     ;	udata_ovr
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ; reset vector 
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     ORG	0x0000
     0000 3rrr                      1-  243     	LGOTO	__nyc_ny8_startup
                                    1-  244     ;--------------------------------------------------------
                                    1-  245     ; interrupt and initialization code
                                    1-  246     ;--------------------------------------------------------
                                    1-  247     ORG 0x0008
     0008 3rrr                      1-  248     	lgoto	__sdcc_interrupt
                                    1-  250     .segment "code"
     0000                           1-  251     __sdcc_interrupt:
                                    1-  252     ;***
                                    1-  253     ;  pBlock Stats: dbName = I
                                    1-  254     ;***
                                    1-  255     ;2 compiler assigned registers:
                                    1-  256     ;   STK00
                                    1-  257     ;   STK01
                                    1-  258     ;; Starting pCode block
     0000                           1-  259     _isr:
                                    1-  260     ; 0 exit points
                                    1-  261     	.line	48, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  262     	MOVAR	WSAVE
     0001 1503                      1-  263     	SWAPR	STATUS,W
     0002 0283                      1-  264     	CLRR	STATUS
     0003 00rr                      1-  265     	MOVAR	SSAVE
     0004 010A                      1-  266     	MOVR	PCHBUF,W
     0005 028A                      1-  267     	CLRR	PCHBUF
     0006 00rr                      1-  268     	MOVAR	PSAVE
     0007 0104                      1-  269     	MOVR	FSR,W
                                    1-  270     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  271     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  272     	MOVR	STK00,W
                                    1-  273     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  274     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  275     	MOVR	STK01,W
                                    1-  276     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  277     	MOVAR	___sdcc_saved_stk01
                                    1-  278     	.line	50, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  279     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  280     	LGOTO	_00108_DS_
                                    1-  281     	.line	52, "main.c"; 	TMR0 = 55;
     0012 2137                      1-  282     	MOVIA	0x37
     0013 00rr                      1-  283     	MOVAR	_TMR0
                                    1-  284     	.line	53, "main.c"; 	intCount++;
                                    1-  285     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  286     	INCR	_intCount,F
                                    1-  287     	.line	54, "main.c"; 	if(intCount == 96)
     0016 01rr                      1-  288     	MOVR	_intCount,W
     0017 2460                      1-  289     	XORIA	0x60
     0018 0903                      1-  290     	BTRSS	STATUS,2
     0019 3rrr                      1-  291     	LGOTO	_00108_DS_
                                    1-  292     	.line	56, "main.c"; 	intCount = 0;
     001A 02rr                      1-  293     	CLRR	_intCount
                                    1-  294     	.line	57, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  295     	MOVIA	0x01
                                    1-  296     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  297     	MOVAR	_IntFlag
     001E                           1-  298     _00108_DS_:
                                    1-  299     	.line	62, "main.c"; 	if(INTFbits.PBIF)
     001E 08rr                      1-  300     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  301     	LGOTO	_00110_DS_
                                    1-  302     	.line	64, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  303     	MOVIA	0xfd
     0021 00rr                      1-  304     	MOVAR	_INTF
     0022                           1-  305     _00110_DS_:
                                    1-  306     	.line	67, "main.c"; 	INTF = 0;
     0022 02rr                      1-  307     	CLRR	_INTF
                                    1-  308     	.line	69, "main.c"; 	}
                                    1-  309     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  310     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  311     	MOVAR	STK01
                                    1-  312     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  313     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  314     	MOVAR	STK00
                                    1-  315     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  316     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  317     	MOVAR	FSR
     002C 01rr                      1-  318     	MOVR	PSAVE,W
     002D 008A                      1-  319     	MOVAR	PCHBUF
     002E 0283                      1-  320     	CLRR	STATUS
     002F 15rr                      1-  321     	SWAPR	SSAVE,W
     0030 0083                      1-  322     	MOVAR	STATUS
     0031 15rr                      1-  323     	SWAPR	WSAVE,F
     0032 15rr                      1-  324     	SWAPR	WSAVE,W
     0033                           1-  325     END_OF_INTERRUPT:
     0033 0011                      1-  326     	RETIE	
                                    1-  328     ;--------------------------------------------------------
                                    1-  329     ; code
                                    1-  330     ;--------------------------------------------------------
                                    1-  331     ;***
                                    1-  332     ;  pBlock Stats: dbName = M
                                    1-  333     ;***
                                    1-  334     ;has an exit
                                    1-  335     ;functions called:
                                    1-  336     ;   _init
                                    1-  337     ;   _keyCon
                                    1-  338     ;   _ledCon
                                    1-  339     ;   _init
                                    1-  340     ;   _keyCon
                                    1-  341     ;   _ledCon
                                    1-  342     ;2 compiler assigned registers:
                                    1-  343     ;   r0x1015
                                    1-  344     ;   r0x1016
                                    1-  345     ;; Starting pCode block
                                    1-  346     .segment "code"; module=main, function=_main
     0000                           1-  348     _main:
                                    1-  349     ; 2 exit points
                                    1-  350     	.line	73, "main.c"; 	init();
     0000 2rrr                      1-  351     	LCALL	_init
     0001                           1-  352     _00120_DS_:
                                    1-  353     	.line	76, "main.c"; 	CLRWDT();
     0001 0002                      1-  354     	clrwdt
                                    1-  355     	.line	77, "main.c"; 	if(0x02&~PORTB)
     0002 01rr                      1-  356     	MOVR	_PORTB,W
                                    1-  357     	BANKSEL	r0x1015
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  358     	MOVAR	r0x1015
                                    1-  359     	BANKSEL	r0x1016
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  360     	CLRR	r0x1016
                                    1-  361     	BANKSEL	r0x1015
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 07rr                      1-  362     	COMR	r0x1015,W
     0009 00rr                      1-  363     	MOVAR	r0x1015
                                    1-  364     	BANKSEL	r0x1016
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 07rr                      1-  365     	COMR	r0x1016,W
     000C 00rr                      1-  366     	MOVAR	r0x1016
                                    1-  367     	BANKSEL	r0x1015
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 08rr                      1-  368     	BTRSS	r0x1015,1
     000F 3rrr                      1-  369     	LGOTO	_00116_DS_
                                    1-  370     	.line	78, "main.c"; 	key2Count++;
                                    1-  371     	BANKSEL	_key2Count
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 05rr                      1-  372     	INCR	_key2Count,F
     0012 0D03                      1-  373     	BTRSC	STATUS,2
     0013 05rr                      1-  374     	INCR	(_key2Count + 1),F
     0014                           1-  375     _00116_DS_:
                                    1-  376     	.line	79, "main.c"; 	if(!IntFlag)
                                    1-  377     	BANKSEL	_IntFlag
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1-  378     	MOVR	_IntFlag,W
     0016 0D03                      1-  379     	BTRSC	STATUS,2
     0017 3rrr                      1-  380     	LGOTO	_00120_DS_
                                    1-  381     	.line	81, "main.c"; 	IntFlag = 0;
     0018 02rr                      1-  382     	CLRR	_IntFlag
                                    1-  383     	.line	82, "main.c"; 	keyCon();
     0019 2rrr                      1-  384     	LCALL	_keyCon
                                    1-  385     	.line	83, "main.c"; 	ledCon();
     001A 2rrr                      1-  386     	LCALL	_ledCon
     001B 3rrr                      1-  387     	LGOTO	_00120_DS_
                                    1-  388     	.line	85, "main.c"; 	}
                                    1-  389     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  390     ; exit point of _main
                                    1-  392     ;***
                                    1-  393     ;  pBlock Stats: dbName = C
                                    1-  394     ;***
                                    1-  395     ;has an exit
                                    1-  396     ;1 compiler assigned register :
                                    1-  397     ;   r0x1011
                                    1-  398     ;; Starting pCode block
                                    1-  399     .segment "code"; module=main, function=_keyRead
                                    1-  401     ;local variable name mapping:
     0000                           1-  403     _keyRead:
                                    1-  404     ; 2 exit points
                                    1-  405     	.line	389, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  406     	BANKSEL	r0x1011
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  407     	MOVAR	r0x1011
                                    1-  408     	.line	391, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  409     	MOVR	r0x1011,W
     0003 0D03                      1-  410     	BTRSC	STATUS,2
     0004 3rrr                      1-  411     	LGOTO	_00317_DS_
                                    1-  412     	.line	393, "main.c"; 	keyCount++;
                                    1-  413     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  414     	INCR	_keyCount,F
     0007 0D03                      1-  415     	BTRSC	STATUS,2
     0008 05rr                      1-  416     	INCR	(_keyCount + 1),F
                                    1-  417     ;;unsigned compare: left < lit (0xC8=200), size=2
                                    1-  418     	.line	394, "main.c"; 	if(keyCount >= 200)
     0009 2100                      1-  419     	MOVIA	0x00
     000A 04rr                      1-  420     	SUBAR	(_keyCount + 1),W
     000B 0903                      1-  421     	BTRSS	STATUS,2
     000C 3rrr                      1-  422     	LGOTO	_00336_DS_
     000D 21C8                      1-  423     	MOVIA	0xc8
     000E 04rr                      1-  424     	SUBAR	_keyCount,W
     000F                           1-  425     _00336_DS_:
     000F 0803                      1-  426     	BTRSS	STATUS,0
     0010 3rrr                      1-  427     	LGOTO	_00318_DS_
                                    1-  428     	.line	396, "main.c"; 	keyCount = 200;
     0011 21C8                      1-  429     	MOVIA	0xc8
                                    1-  430     	BANKSEL	_keyCount
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1-  431     	MOVAR	_keyCount
     0014 02rr                      1-  432     	CLRR	(_keyCount + 1)
                                    1-  433     	.line	397, "main.c"; 	if(!longPressFlag)
                                    1-  434     	BANKSEL	_longPressFlag
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  435     	MOVR	_longPressFlag,W
     0017 0903                      1-  436     	BTRSS	STATUS,2
     0018 3rrr                      1-  437     	LGOTO	_00318_DS_
                                    1-  438     	.line	399, "main.c"; 	longPressFlag = 1;
     0019 2101                      1-  439     	MOVIA	0x01
     001A 00rr                      1-  440     	MOVAR	_longPressFlag
                                    1-  441     	.line	400, "main.c"; 	return 2;
     001B 2102                      1-  442     	MOVIA	0x02
     001C 3rrr                      1-  443     	LGOTO	_00319_DS_
                                    1-  444     ;;unsigned compare: left < lit (0xC8=200), size=2
     001D                           1-  445     _00317_DS_:
                                    1-  446     	.line	406, "main.c"; 	if(keyCount >= 200)
     001D 2100                      1-  447     	MOVIA	0x00
                                    1-  448     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1-  449     	SUBAR	(_keyCount + 1),W
     0020 0903                      1-  450     	BTRSS	STATUS,2
     0021 3rrr                      1-  451     	LGOTO	_00337_DS_
     0022 21C8                      1-  452     	MOVIA	0xc8
     0023 04rr                      1-  453     	SUBAR	_keyCount,W
     0024                           1-  454     _00337_DS_:
     0024 0803                      1-  455     	BTRSS	STATUS,0
     0025 3rrr                      1-  456     	LGOTO	_00314_DS_
                                    1-  457     	.line	408, "main.c"; 	keyCount = 0;
                                    1-  458     	BANKSEL	_keyCount
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 02rr                      1-  459     	CLRR	_keyCount
     0028 02rr                      1-  460     	CLRR	(_keyCount + 1)
                                    1-  461     	.line	409, "main.c"; 	longPressFlag = 0;
                                    1-  462     	BANKSEL	_longPressFlag
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 02rr                      1-  463     	CLRR	_longPressFlag
                                    1-  464     	.line	410, "main.c"; 	return	0;
     002B 2100                      1-  465     	MOVIA	0x00
     002C 3rrr                      1-  466     	LGOTO	_00319_DS_
                                    1-  467     ;;unsigned compare: left < lit (0x5=5), size=2
     002D                           1-  468     _00314_DS_:
                                    1-  469     	.line	412, "main.c"; 	else if(keyCount >= 5)
     002D 2100                      1-  470     	MOVIA	0x00
                                    1-  471     	BANKSEL	_keyCount
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 04rr                      1-  472     	SUBAR	(_keyCount + 1),W
     0030 0903                      1-  473     	BTRSS	STATUS,2
     0031 3rrr                      1-  474     	LGOTO	_00338_DS_
     0032 2105                      1-  475     	MOVIA	0x05
     0033 04rr                      1-  476     	SUBAR	_keyCount,W
     0034                           1-  477     _00338_DS_:
     0034 0803                      1-  478     	BTRSS	STATUS,0
     0035 3rrr                      1-  479     	LGOTO	_00315_DS_
                                    1-  480     	.line	414, "main.c"; 	keyCount = 0;
                                    1-  481     	BANKSEL	_keyCount
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 02rr                      1-  482     	CLRR	_keyCount
     0038 02rr                      1-  483     	CLRR	(_keyCount + 1)
                                    1-  484     	.line	415, "main.c"; 	return	1;
     0039 2101                      1-  485     	MOVIA	0x01
     003A 3rrr                      1-  486     	LGOTO	_00319_DS_
     003B                           1-  487     _00315_DS_:
                                    1-  488     	.line	417, "main.c"; 	keyCount = 0;
                                    1-  489     	BANKSEL	_keyCount
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 02rr                      1-  490     	CLRR	_keyCount
     003D 02rr                      1-  491     	CLRR	(_keyCount + 1)
     003E                           1-  492     _00318_DS_:
                                    1-  493     	.line	419, "main.c"; 	return 0;
     003E 2100                      1-  494     	MOVIA	0x00
     003F                           1-  495     _00319_DS_:
                                    1-  496     	.line	420, "main.c"; 	}
                                    1-  497     	RETURN	
     003F 0010                      3-   26 m1      ret
                                    1-  498     ; exit point of _keyRead
                                    1-  500     ;***
                                    1-  501     ;  pBlock Stats: dbName = C
                                    1-  502     ;***
                                    1-  503     ;has an exit
                                    1-  504     ;; Starting pCode block
                                    1-  505     .segment "code"; module=main, function=_init
     0000                           1-  507     _init:
                                    1-  508     ; 2 exit points
                                    1-  509     	.line	366, "main.c"; 	PORTA = 0xFF;
     0000 21FF                      1-  510     	MOVIA	0xff
     0001 00rr                      1-  511     	MOVAR	_PORTA
                                    1-  512     	.line	367, "main.c"; 	PORTB = 0xFF;
     0002 00rr                      1-  513     	MOVAR	_PORTB
                                    1-  514     	.line	368, "main.c"; 	BPHCON = 0xF8;
     0003 21F8                      1-  515     	MOVIA	0xf8
     0004 00rr                      1-  516     	MOVAR	_BPHCON
                                    1-  517     	.line	370, "main.c"; 	IOSTA =  0xF0;
     0005 21F0                      1-  518     	MOVIA	0xf0
     0006 000r                      1-  519     	IOST	_IOSTA
                                    1-  520     	.line	371, "main.c"; 	IOSTB =  C_PB0_Input | C_PB1_Input | C_PB2_Input;	
     0007 2107                      1-  521     	MOVIA	0x07
     0008 000r                      1-  522     	IOST	_IOSTB
                                    1-  523     	.line	372, "main.c"; 	PORTB = 0xFF; 
     0009 21FF                      1-  524     	MOVIA	0xff
     000A 00rr                      1-  525     	MOVAR	_PORTB
                                    1-  526     	.line	373, "main.c"; 	PORTA = 0xFF;
     000B 00rr                      1-  527     	MOVAR	_PORTA
                                    1-  528     	.line	374, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT & LVR
     000C 2188                      1-  529     	MOVIA	0x88
     000D 00rr                      1-  530     	MOVAR	_PCON
                                    1-  531     	.line	376, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1-  532     	CLRA	
     000F 000r                      1-  533     	IOST	_PCON1
                                    1-  534     	.line	378, "main.c"; 	TMR0 = 55;
     0010 2137                      1-  535     	MOVIA	0x37
     0011 00rr                      1-  536     	MOVAR	_TMR0
                                    1-  537     	.line	379, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0012 0200                      1-  538     	CLRA	
     0013 0003                      1-  539     	T0MD	
                                    1-  540     	.line	381, "main.c"; 	PCON1 =  C_TMR0_En;
     0014 2101                      1-  541     	MOVIA	0x01
     0015 000r                      1-  542     	IOST	_PCON1
                                    1-  543     	.line	382, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1;	// Enable Timer0、Timer1、WDT overflow interrupt
     0016 2109                      1-  544     	MOVIA	0x09
     0017 00rr                      1-  545     	MOVAR	_INTE
                                    1-  546     	.line	383, "main.c"; 	INTF = 0;
     0018 02rr                      1-  547     	CLRR	_INTF
                                    1-  548     	.line	384, "main.c"; 	ENI();
     0019 0004                      1-  549     	ENI
                                    1-  550     	.line	386, "main.c"; 	}
                                    1-  551     	RETURN	
     001A 0010                      3-   26 m1      ret
                                    1-  552     ; exit point of _init
                                    1-  554     ;***
                                    1-  555     ;  pBlock Stats: dbName = C
                                    1-  556     ;***
                                    1-  557     ;has an exit
                                    1-  558     ;functions called:
                                    1-  559     ;   _keyRead
                                    1-  560     ;   _keyRead
                                    1-  561     ;2 compiler assigned registers:
                                    1-  562     ;   r0x1012
                                    1-  563     ;   r0x1013
                                    1-  564     ;; Starting pCode block
                                    1-  565     .segment "code"; module=main, function=_keyCon
     0000                           1-  567     _keyCon:
                                    1-  568     ; 2 exit points
                                    1-  569     	.line	326, "main.c"; 	if(0x02&PORTB)
     0000 08rr                      1-  570     	BTRSS	_PORTB,1
     0001 3rrr                      1-  571     	LGOTO	_00265_DS_
                                    1-  572     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  573     ;;unsigned compare: left >= lit (0x6=6), size=2
                                    1-  574     	.line	328, "main.c"; 	if(key2Count > 5)
     0002 2100                      1-  575     	MOVIA	0x00
                                    1-  576     	BANKSEL	_key2Count
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 04rr                      1-  577     	SUBAR	(_key2Count + 1),W
     0005 0903                      1-  578     	BTRSS	STATUS,2
     0006 3rrr                      1-  579     	LGOTO	_00297_DS_
     0007 2106                      1-  580     	MOVIA	0x06
     0008 04rr                      1-  581     	SUBAR	_key2Count,W
     0009                           1-  582     _00297_DS_:
     0009 0803                      1-  583     	BTRSS	STATUS,0
     000A 3rrr                      1-  584     	LGOTO	_00259_DS_
                                    1-  585     	.line	329, "main.c"; 	ledFlag = 1;
     000B 2101                      1-  586     	MOVIA	0x01
                                    1-  587     	BANKSEL	_ledFlag
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  588     	MOVAR	_ledFlag
     000E                           1-  589     _00259_DS_:
                                    1-  590     	.line	330, "main.c"; 	key2Count = 0;
                                    1-  591     	BANKSEL	_key2Count
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1-  592     	CLRR	_key2Count
     0010 02rr                      1-  593     	CLRR	(_key2Count + 1)
                                    1-  594     	.line	331, "main.c"; 	longFlag = 0;
                                    1-  595     	BANKSEL	_longFlag
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 02rr                      1-  596     	CLRR	_longFlag
     0013 3rrr                      1-  597     	LGOTO	_00266_DS_
                                    1-  598     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  599     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0014                           1-  600     _00265_DS_:
                                    1-  601     	.line	335, "main.c"; 	if(key2Count > 2000)
     0014 2107                      1-  602     	MOVIA	0x07
                                    1-  603     	BANKSEL	_key2Count
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 04rr                      1-  604     	SUBAR	(_key2Count + 1),W
     0017 0903                      1-  605     	BTRSS	STATUS,2
     0018 3rrr                      1-  606     	LGOTO	_00298_DS_
     0019 21D1                      1-  607     	MOVIA	0xd1
     001A 04rr                      1-  608     	SUBAR	_key2Count,W
     001B                           1-  609     _00298_DS_:
     001B 0803                      1-  610     	BTRSS	STATUS,0
     001C 3rrr                      1-  611     	LGOTO	_00266_DS_
                                    1-  612     	.line	337, "main.c"; 	key2Count = 2000;
     001D 21D0                      1-  613     	MOVIA	0xd0
                                    1-  614     	BANKSEL	_key2Count
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  615     	MOVAR	_key2Count
     0020 2107                      1-  616     	MOVIA	0x07
     0021 00rr                      1-  617     	MOVAR	(_key2Count + 1)
                                    1-  618     	.line	338, "main.c"; 	if(!longFlag)
                                    1-  619     	BANKSEL	_longFlag
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  620     	MOVR	_longFlag,W
     0024 0903                      1-  621     	BTRSS	STATUS,2
     0025 3rrr                      1-  622     	LGOTO	_00266_DS_
                                    1-  623     	.line	340, "main.c"; 	ledFlag = 1;
     0026 2101                      1-  624     	MOVIA	0x01
                                    1-  625     	BANKSEL	_ledFlag
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1-  626     	MOVAR	_ledFlag
                                    1-  627     	.line	341, "main.c"; 	longFlag = 1;
                                    1-  628     	BANKSEL	_longFlag
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 00rr                      1-  629     	MOVAR	_longFlag
     002B                           1-  630     _00266_DS_:
                                    1-  631     	.line	346, "main.c"; 	if(0x01&~PORTB)
     002B 01rr                      1-  632     	MOVR	_PORTB,W
                                    1-  633     	BANKSEL	r0x1012
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1-  634     	MOVAR	r0x1012
                                    1-  635     	BANKSEL	r0x1013
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 02rr                      1-  636     	CLRR	r0x1013
                                    1-  637     	BANKSEL	r0x1012
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 07rr                      1-  638     	COMR	r0x1012,W
     0032 00rr                      1-  639     	MOVAR	r0x1012
                                    1-  640     	BANKSEL	r0x1013
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 07rr                      1-  641     	COMR	r0x1013,W
     0035 00rr                      1-  642     	MOVAR	r0x1013
                                    1-  643     	BANKSEL	r0x1012
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 08rr                      1-  644     	BTRSS	r0x1012,0
     0038 3rrr                      1-  645     	LGOTO	_00268_DS_
                                    1-  646     	.line	347, "main.c"; 	modeFlag = 1;
     0039 2101                      1-  647     	MOVIA	0x01
                                    1-  648     	BANKSEL	_modeFlag
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 00rr                      1-  649     	MOVAR	_modeFlag
     003C 3rrr                      1-  650     	LGOTO	_00269_DS_
     003D                           1-  651     _00268_DS_:
                                    1-  652     	.line	349, "main.c"; 	modeFlag = 0;
                                    1-  653     	BANKSEL	_modeFlag
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 02rr                      1-  654     	CLRR	_modeFlag
     003F                           1-  655     _00269_DS_:
                                    1-  656     	.line	351, "main.c"; 	if(keyRead(0x04&~PORTB))
     003F 07rr                      1-  657     	COMR	_PORTB,W
                                    1-  658     	BANKSEL	r0x1012
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 00rr                      1-  659     	MOVAR	r0x1012
     0042 2104                      1-  660     	MOVIA	0x04
     0043 10rr                      1-  661     	ANDAR	r0x1012,F
     0044 01rr                      1-  662     	MOVR	r0x1012,W
     0045 2rrr                      1-  663     	LCALL	_keyRead
                                    1-  664     	BANKSEL	r0x1012
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 00rr                      1-  665     	MOVAR	r0x1012
     0048 01rr                      1-  666     	MOVR	r0x1012,W
     0049 0D03                      1-  667     	BTRSC	STATUS,2
     004A 3rrr                      1-  668     	LGOTO	_00272_DS_
                                    1-  669     	.line	353, "main.c"; 	PORTB = 0xFF; 
     004B 21FF                      1-  670     	MOVIA	0xff
     004C 00rr                      1-  671     	MOVAR	_PORTB
                                    1-  672     	.line	354, "main.c"; 	PORTA = 0xFF;
     004D 00rr                      1-  673     	MOVAR	_PORTA
                                    1-  674     	.line	355, "main.c"; 	keyLockFlag = (keyLockFlag == 1 ?0:1);
                                    1-  675     	BANKSEL	_keyLockFlag
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1-  676     	MOVR	_keyLockFlag,W
     0050 2401                      1-  677     	XORIA	0x01
     0051 0903                      1-  678     	BTRSS	STATUS,2
     0052 3rrr                      1-  679     	LGOTO	_00274_DS_
                                    1-  680     	BANKSEL	r0x1012
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 02rr                      1-  681     	CLRR	r0x1012
     0055 3rrr                      1-  682     	LGOTO	_00275_DS_
     0056                           1-  683     _00274_DS_:
     0056 2101                      1-  684     	MOVIA	0x01
                                    1-  685     	BANKSEL	r0x1012
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1-  686     	MOVAR	r0x1012
     0059                           1-  687     _00275_DS_:
                                    1-  688     	BANKSEL	r0x1012
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 01rr                      1-  689     	MOVR	r0x1012,W
                                    1-  690     	BANKSEL	_keyLockFlag
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 00rr                      1-  691     	MOVAR	_keyLockFlag
                                    1-  692     	.line	356, "main.c"; 	lockLedFlag = 1;
     005D 2101                      1-  693     	MOVIA	0x01
                                    1-  694     	BANKSEL	_lockLedFlag
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 00rr                      1-  695     	MOVAR	_lockLedFlag
                                    1-  696     	.line	357, "main.c"; 	lockLedCount = 0;
                                    1-  697     	BANKSEL	_lockLedCount
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 02rr                      1-  698     	CLRR	_lockLedCount
                                    1-  699     	.line	358, "main.c"; 	countLed = 0;
                                    1-  700     	BANKSEL	_countLed
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 02rr                      1-  701     	CLRR	_countLed
     0064                           1-  702     _00272_DS_:
                                    1-  703     	.line	361, "main.c"; 	}
                                    1-  704     	RETURN	
     0064 0010                      3-   26 m1      ret
                                    1-  705     ; exit point of _keyCon
                                    1-  707     ;***
                                    1-  708     ;  pBlock Stats: dbName = C
                                    1-  709     ;***
                                    1-  710     ;has an exit
                                    1-  711     ;; Starting pCode block
                                    1-  712     .segment "code"; module=main, function=_ledMode3
     0000                           1-  714     _ledMode3:
                                    1-  715     ; 2 exit points
                                    1-  716     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1-  717     	.line	310, "main.c"; 	if(lockLedCount < 5)
     0000 2105                      1-  718     	MOVIA	0x05
                                    1-  719     	BANKSEL	_lockLedCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  720     	SUBAR	_lockLedCount,W
     0003 0C03                      1-  721     	BTRSC	STATUS,0
     0004 3rrr                      1-  722     	LGOTO	_00251_DS_
                                    1-  723     	.line	312, "main.c"; 	PORTA &= 0xF0;
     0005 21F0                      1-  724     	MOVIA	0xf0
     0006 10rr                      1-  725     	ANDAR	_PORTA,F
                                    1-  726     	.line	313, "main.c"; 	PORTB &= 0x3F;
     0007 213F                      1-  727     	MOVIA	0x3f
     0008 10rr                      1-  728     	ANDAR	_PORTB,F
     0009 3rrr                      1-  729     	LGOTO	_00253_DS_
                                    1-  730     ;;unsigned compare: left < lit (0xA=10), size=1
     000A                           1-  731     _00251_DS_:
                                    1-  732     	.line	315, "main.c"; 	else if(lockLedCount < 10)
     000A 210A                      1-  733     	MOVIA	0x0a
                                    1-  734     	BANKSEL	_lockLedCount
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  735     	SUBAR	_lockLedCount,W
     000D 0C03                      1-  736     	BTRSC	STATUS,0
     000E 3rrr                      1-  737     	LGOTO	_00253_DS_
                                    1-  738     	.line	317, "main.c"; 	PORTA |= 0x0F;
     000F 210F                      1-  739     	MOVIA	0x0f
     0010 11rr                      1-  740     	IORAR	_PORTA,F
                                    1-  741     	.line	318, "main.c"; 	PORTB |= 0xC0;
     0011 21C0                      1-  742     	MOVIA	0xc0
     0012 11rr                      1-  743     	IORAR	_PORTB,F
     0013                           1-  744     _00253_DS_:
                                    1-  745     	.line	320, "main.c"; 	}
                                    1-  746     	RETURN	
     0013 0010                      3-   26 m1      ret
                                    1-  747     ; exit point of _ledMode3
                                    1-  749     ;***
                                    1-  750     ;  pBlock Stats: dbName = C
                                    1-  751     ;***
                                    1-  752     ;; Starting pCode block
                                    1-  753     .segment "code"; module=main, function=_ledMode2
     0000                           1-  755     _ledMode2:
                                    1-  756     ; 0 exit points
                                    1-  757     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  758     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1-  759     	.line	240, "main.c"; 	if(lockLedCount <= 5)
     0000 2106                      1-  760     	MOVIA	0x06
                                    1-  761     	BANKSEL	_lockLedCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  762     	SUBAR	_lockLedCount,W
     0003 0C03                      1-  763     	BTRSC	STATUS,0
     0004 3rrr                      1-  764     	LGOTO	_00241_DS_
                                    1-  765     	.line	241, "main.c"; 	resetbit(PORTA,0);
     0005 1Crr                      1-  766     	BCR	_PORTA,0
     0006 3rrr                      1-  767     	LGOTO	_00243_DS_
                                    1-  768     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  769     ;;unsigned compare: left >= lit (0xB=11), size=1
     0007                           1-  770     _00241_DS_:
                                    1-  771     	.line	242, "main.c"; 	else if(lockLedCount <= 10)
     0007 210B                      1-  772     	MOVIA	0x0b
                                    1-  773     	BANKSEL	_lockLedCount
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 04rr                      1-  774     	SUBAR	_lockLedCount,W
     000A 0C03                      1-  775     	BTRSC	STATUS,0
     000B 3rrr                      1-  776     	LGOTO	_00238_DS_
                                    1-  777     	.line	244, "main.c"; 	setbit(PORTA,0);
     000C 18rr                      1-  778     	BSR	_PORTA,0
                                    1-  779     	.line	245, "main.c"; 	resetbit(PORTB,7);
     000D 1Frr                      1-  780     	BCR	_PORTB,7
     000E 3rrr                      1-  781     	LGOTO	_00243_DS_
                                    1-  782     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  783     ;;unsigned compare: left >= lit (0x10=16), size=1
     000F                           1-  784     _00238_DS_:
                                    1-  785     	.line	247, "main.c"; 	else if(lockLedCount <= 15)
     000F 2110                      1-  786     	MOVIA	0x10
                                    1-  787     	BANKSEL	_lockLedCount
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  788     	SUBAR	_lockLedCount,W
     0012 0C03                      1-  789     	BTRSC	STATUS,0
     0013 3rrr                      1-  790     	LGOTO	_00235_DS_
                                    1-  791     	.line	249, "main.c"; 	setbit(PORTB,7);
     0014 1Brr                      1-  792     	BSR	_PORTB,7
                                    1-  793     	.line	250, "main.c"; 	resetbit(PORTB,6);
     0015 1Frr                      1-  794     	BCR	_PORTB,6
     0016 3rrr                      1-  795     	LGOTO	_00243_DS_
                                    1-  796     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  797     ;;unsigned compare: left >= lit (0x15=21), size=1
     0017                           1-  798     _00235_DS_:
                                    1-  799     	.line	252, "main.c"; 	else if(lockLedCount <= 20)
     0017 2115                      1-  800     	MOVIA	0x15
                                    1-  801     	BANKSEL	_lockLedCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1-  802     	SUBAR	_lockLedCount,W
     001A 0C03                      1-  803     	BTRSC	STATUS,0
     001B 3rrr                      1-  804     	LGOTO	_00232_DS_
                                    1-  805     	.line	254, "main.c"; 	setbit(PORTB,6);
     001C 1Brr                      1-  806     	BSR	_PORTB,6
                                    1-  807     	.line	255, "main.c"; 	resetbit(PORTA,1);
     001D 1Crr                      1-  808     	BCR	_PORTA,1
     001E 3rrr                      1-  809     	LGOTO	_00243_DS_
                                    1-  810     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  811     ;;unsigned compare: left >= lit (0x1A=26), size=1
     001F                           1-  812     _00232_DS_:
                                    1-  813     	.line	257, "main.c"; 	else if(lockLedCount <= 25)
     001F 211A                      1-  814     	MOVIA	0x1a
                                    1-  815     	BANKSEL	_lockLedCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1-  816     	SUBAR	_lockLedCount,W
     0022 0C03                      1-  817     	BTRSC	STATUS,0
     0023 3rrr                      1-  818     	LGOTO	_00229_DS_
                                    1-  819     	.line	259, "main.c"; 	setbit(PORTA,1);
     0024 18rr                      1-  820     	BSR	_PORTA,1
                                    1-  821     	.line	260, "main.c"; 	resetbit(PORTA,2);
     0025 1Drr                      1-  822     	BCR	_PORTA,2
     0026 3rrr                      1-  823     	LGOTO	_00243_DS_
                                    1-  824     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  825     ;;unsigned compare: left >= lit (0x1F=31), size=1
     0027                           1-  826     _00229_DS_:
                                    1-  827     	.line	262, "main.c"; 	else if(lockLedCount <= 30)
     0027 211F                      1-  828     	MOVIA	0x1f
                                    1-  829     	BANKSEL	_lockLedCount
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 04rr                      1-  830     	SUBAR	_lockLedCount,W
     002A 0C03                      1-  831     	BTRSC	STATUS,0
     002B 3rrr                      1-  832     	LGOTO	_00226_DS_
                                    1-  833     	.line	264, "main.c"; 	setbit(PORTA,2);
     002C 19rr                      1-  834     	BSR	_PORTA,2
                                    1-  835     	.line	265, "main.c"; 	resetbit(PORTA,3);
     002D 1Drr                      1-  836     	BCR	_PORTA,3
     002E 3rrr                      1-  837     	LGOTO	_00243_DS_
                                    1-  838     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  839     ;;unsigned compare: left >= lit (0x24=36), size=1
     002F                           1-  840     _00226_DS_:
                                    1-  841     	.line	267, "main.c"; 	else if(lockLedCount <= 35)
     002F 2124                      1-  842     	MOVIA	0x24
                                    1-  843     	BANKSEL	_lockLedCount
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 04rr                      1-  844     	SUBAR	_lockLedCount,W
     0032 0C03                      1-  845     	BTRSC	STATUS,0
     0033 3rrr                      1-  846     	LGOTO	_00223_DS_
                                    1-  847     	.line	269, "main.c"; 	setbit(PORTA,3);
     0034 19rr                      1-  848     	BSR	_PORTA,3
     0035 3rrr                      1-  849     	LGOTO	_00243_DS_
                                    1-  850     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  851     ;;unsigned compare: left >= lit (0x29=41), size=1
     0036                           1-  852     _00223_DS_:
                                    1-  853     	.line	271, "main.c"; 	else if(lockLedCount <= 40)
     0036 2129                      1-  854     	MOVIA	0x29
                                    1-  855     	BANKSEL	_lockLedCount
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 04rr                      1-  856     	SUBAR	_lockLedCount,W
     0039 0C03                      1-  857     	BTRSC	STATUS,0
     003A 3rrr                      1-  858     	LGOTO	_00220_DS_
                                    1-  859     	.line	273, "main.c"; 	setbit(PORTA,2);
     003B 19rr                      1-  860     	BSR	_PORTA,2
                                    1-  861     	.line	274, "main.c"; 	resetbit(PORTA,3);
     003C 1Drr                      1-  862     	BCR	_PORTA,3
     003D 3rrr                      1-  863     	LGOTO	_00243_DS_
                                    1-  864     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  865     ;;unsigned compare: left >= lit (0x2E=46), size=1
     003E                           1-  866     _00220_DS_:
                                    1-  867     	.line	276, "main.c"; 	else if(lockLedCount <= 45)
     003E 212E                      1-  868     	MOVIA	0x2e
                                    1-  869     	BANKSEL	_lockLedCount
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 04rr                      1-  870     	SUBAR	_lockLedCount,W
     0041 0C03                      1-  871     	BTRSC	STATUS,0
     0042 3rrr                      1-  872     	LGOTO	_00217_DS_
                                    1-  873     	.line	278, "main.c"; 	setbit(PORTA,3);
     0043 19rr                      1-  874     	BSR	_PORTA,3
                                    1-  875     	.line	279, "main.c"; 	resetbit(PORTA,2);
     0044 1Drr                      1-  876     	BCR	_PORTA,2
     0045 3rrr                      1-  877     	LGOTO	_00243_DS_
                                    1-  878     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  879     ;;unsigned compare: left >= lit (0x33=51), size=1
     0046                           1-  880     _00217_DS_:
                                    1-  881     	.line	281, "main.c"; 	else if(lockLedCount <= 50)
     0046 2133                      1-  882     	MOVIA	0x33
                                    1-  883     	BANKSEL	_lockLedCount
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 04rr                      1-  884     	SUBAR	_lockLedCount,W
     0049 0C03                      1-  885     	BTRSC	STATUS,0
     004A 3rrr                      1-  886     	LGOTO	_00214_DS_
                                    1-  887     	.line	283, "main.c"; 	setbit(PORTA,2);
     004B 19rr                      1-  888     	BSR	_PORTA,2
                                    1-  889     	.line	284, "main.c"; 	resetbit(PORTA,1);
     004C 1Crr                      1-  890     	BCR	_PORTA,1
     004D 3rrr                      1-  891     	LGOTO	_00243_DS_
                                    1-  892     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  893     ;;unsigned compare: left >= lit (0x38=56), size=1
     004E                           1-  894     _00214_DS_:
                                    1-  895     	.line	286, "main.c"; 	else if(lockLedCount <= 55)
     004E 2138                      1-  896     	MOVIA	0x38
                                    1-  897     	BANKSEL	_lockLedCount
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 04rr                      1-  898     	SUBAR	_lockLedCount,W
     0051 0C03                      1-  899     	BTRSC	STATUS,0
     0052 3rrr                      1-  900     	LGOTO	_00211_DS_
                                    1-  901     	.line	288, "main.c"; 	setbit(PORTA,1);
     0053 18rr                      1-  902     	BSR	_PORTA,1
                                    1-  903     	.line	289, "main.c"; 	resetbit(PORTB,6);
     0054 1Frr                      1-  904     	BCR	_PORTB,6
     0055 3rrr                      1-  905     	LGOTO	_00243_DS_
                                    1-  906     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  907     ;;unsigned compare: left >= lit (0x3D=61), size=1
     0056                           1-  908     _00211_DS_:
                                    1-  909     	.line	291, "main.c"; 	else if(lockLedCount <= 60)
     0056 213D                      1-  910     	MOVIA	0x3d
                                    1-  911     	BANKSEL	_lockLedCount
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 04rr                      1-  912     	SUBAR	_lockLedCount,W
     0059 0C03                      1-  913     	BTRSC	STATUS,0
     005A 3rrr                      1-  914     	LGOTO	_00208_DS_
                                    1-  915     	.line	293, "main.c"; 	setbit(PORTB,6);
     005B 1Brr                      1-  916     	BSR	_PORTB,6
                                    1-  917     	.line	294, "main.c"; 	resetbit(PORTB,7);
     005C 1Frr                      1-  918     	BCR	_PORTB,7
     005D 3rrr                      1-  919     	LGOTO	_00243_DS_
                                    1-  920     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  921     ;;unsigned compare: left >= lit (0x42=66), size=1
     005E                           1-  922     _00208_DS_:
                                    1-  923     	.line	296, "main.c"; 	else if(lockLedCount <= 65)
     005E 2142                      1-  924     	MOVIA	0x42
                                    1-  925     	BANKSEL	_lockLedCount
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 04rr                      1-  926     	SUBAR	_lockLedCount,W
     0061 0C03                      1-  927     	BTRSC	STATUS,0
     0062 3rrr                      1-  928     	LGOTO	_00205_DS_
                                    1-  929     	.line	298, "main.c"; 	setbit(PORTB,7);
     0063 1Brr                      1-  930     	BSR	_PORTB,7
                                    1-  931     	.line	299, "main.c"; 	resetbit(PORTA,0);
     0064 1Crr                      1-  932     	BCR	_PORTA,0
     0065 3rrr                      1-  933     	LGOTO	_00243_DS_
                                    1-  934     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  935     ;;unsigned compare: left >= lit (0x47=71), size=1
     0066                           1-  936     _00205_DS_:
                                    1-  937     	.line	301, "main.c"; 	else if(lockLedCount <= 70)
     0066 2147                      1-  938     	MOVIA	0x47
                                    1-  939     	BANKSEL	_lockLedCount
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 04rr                      1-  940     	SUBAR	_lockLedCount,W
     0069 0803                      1-  941     	BTRSS	STATUS,0
                                    1-  942     	.line	303, "main.c"; 	setbit(PORTA,0);
     006A 18rr                      1-  943     	BSR	_PORTA,0
     006B                           1-  944     _00243_DS_:
                                    1-  945     	.line	306, "main.c"; 	}
                                    1-  946     	RETURN	
     006B 0010                      3-   26 m1      ret
                                    1-  948     ;***
                                    1-  949     ;  pBlock Stats: dbName = C
                                    1-  950     ;***
                                    1-  951     ;; Starting pCode block
                                    1-  952     .segment "code"; module=main, function=_ledMode1
     0000                           1-  954     _ledMode1:
                                    1-  955     ; 0 exit points
                                    1-  956     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1-  957     	.line	203, "main.c"; 	if(lockLedCount < 5)
     0000 2105                      1-  958     	MOVIA	0x05
                                    1-  959     	BANKSEL	_lockLedCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  960     	SUBAR	_lockLedCount,W
     0003 0C03                      1-  961     	BTRSC	STATUS,0
     0004 3rrr                      1-  962     	LGOTO	_00195_DS_
                                    1-  963     	.line	204, "main.c"; 	resetbit(PORTA,0);
     0005 1Crr                      1-  964     	BCR	_PORTA,0
     0006 3rrr                      1-  965     	LGOTO	_00197_DS_
                                    1-  966     ;;unsigned compare: left < lit (0xA=10), size=1
     0007                           1-  967     _00195_DS_:
                                    1-  968     	.line	205, "main.c"; 	else if(lockLedCount < 10)
     0007 210A                      1-  969     	MOVIA	0x0a
                                    1-  970     	BANKSEL	_lockLedCount
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 04rr                      1-  971     	SUBAR	_lockLedCount,W
     000A 0C03                      1-  972     	BTRSC	STATUS,0
     000B 3rrr                      1-  973     	LGOTO	_00192_DS_
                                    1-  974     	.line	207, "main.c"; 	setbit(PORTA,0);
     000C 18rr                      1-  975     	BSR	_PORTA,0
                                    1-  976     	.line	208, "main.c"; 	resetbit(PORTB,7);
     000D 1Frr                      1-  977     	BCR	_PORTB,7
     000E 3rrr                      1-  978     	LGOTO	_00197_DS_
                                    1-  979     ;;unsigned compare: left < lit (0xF=15), size=1
     000F                           1-  980     _00192_DS_:
                                    1-  981     	.line	210, "main.c"; 	else if(lockLedCount < 15)
     000F 210F                      1-  982     	MOVIA	0x0f
                                    1-  983     	BANKSEL	_lockLedCount
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  984     	SUBAR	_lockLedCount,W
     0012 0C03                      1-  985     	BTRSC	STATUS,0
     0013 3rrr                      1-  986     	LGOTO	_00189_DS_
                                    1-  987     	.line	212, "main.c"; 	setbit(PORTB,7);
     0014 1Brr                      1-  988     	BSR	_PORTB,7
                                    1-  989     	.line	213, "main.c"; 	resetbit(PORTB,6);
     0015 1Frr                      1-  990     	BCR	_PORTB,6
     0016 3rrr                      1-  991     	LGOTO	_00197_DS_
                                    1-  992     ;;unsigned compare: left < lit (0x14=20), size=1
     0017                           1-  993     _00189_DS_:
                                    1-  994     	.line	215, "main.c"; 	else if(lockLedCount < 20)
     0017 2114                      1-  995     	MOVIA	0x14
                                    1-  996     	BANKSEL	_lockLedCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1-  997     	SUBAR	_lockLedCount,W
     001A 0C03                      1-  998     	BTRSC	STATUS,0
     001B 3rrr                      1-  999     	LGOTO	_00186_DS_
                                    1- 1000     	.line	217, "main.c"; 	setbit(PORTB,6);
     001C 1Brr                      1- 1001     	BSR	_PORTB,6
                                    1- 1002     	.line	218, "main.c"; 	resetbit(PORTA,1);
     001D 1Crr                      1- 1003     	BCR	_PORTA,1
     001E 3rrr                      1- 1004     	LGOTO	_00197_DS_
                                    1- 1005     ;;unsigned compare: left < lit (0x19=25), size=1
     001F                           1- 1006     _00186_DS_:
                                    1- 1007     	.line	220, "main.c"; 	else if(lockLedCount < 25)
     001F 2119                      1- 1008     	MOVIA	0x19
                                    1- 1009     	BANKSEL	_lockLedCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1- 1010     	SUBAR	_lockLedCount,W
     0022 0C03                      1- 1011     	BTRSC	STATUS,0
     0023 3rrr                      1- 1012     	LGOTO	_00183_DS_
                                    1- 1013     	.line	222, "main.c"; 	setbit(PORTA,1);
     0024 18rr                      1- 1014     	BSR	_PORTA,1
                                    1- 1015     	.line	223, "main.c"; 	resetbit(PORTA,2);
     0025 1Drr                      1- 1016     	BCR	_PORTA,2
     0026 3rrr                      1- 1017     	LGOTO	_00197_DS_
                                    1- 1018     ;;unsigned compare: left < lit (0x1E=30), size=1
     0027                           1- 1019     _00183_DS_:
                                    1- 1020     	.line	225, "main.c"; 	else if(lockLedCount < 30)
     0027 211E                      1- 1021     	MOVIA	0x1e
                                    1- 1022     	BANKSEL	_lockLedCount
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 04rr                      1- 1023     	SUBAR	_lockLedCount,W
     002A 0C03                      1- 1024     	BTRSC	STATUS,0
     002B 3rrr                      1- 1025     	LGOTO	_00180_DS_
                                    1- 1026     	.line	227, "main.c"; 	setbit(PORTA,2);
     002C 19rr                      1- 1027     	BSR	_PORTA,2
                                    1- 1028     	.line	228, "main.c"; 	resetbit(PORTA,3);
     002D 1Drr                      1- 1029     	BCR	_PORTA,3
     002E 3rrr                      1- 1030     	LGOTO	_00197_DS_
                                    1- 1031     ;;unsigned compare: left < lit (0x23=35), size=1
     002F                           1- 1032     _00180_DS_:
                                    1- 1033     	.line	230, "main.c"; 	else if(lockLedCount < 35)
     002F 2123                      1- 1034     	MOVIA	0x23
                                    1- 1035     	BANKSEL	_lockLedCount
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 04rr                      1- 1036     	SUBAR	_lockLedCount,W
     0032 0803                      1- 1037     	BTRSS	STATUS,0
                                    1- 1038     	.line	232, "main.c"; 	setbit(PORTA,3);
     0033 19rr                      1- 1039     	BSR	_PORTA,3
     0034                           1- 1040     _00197_DS_:
                                    1- 1041     	.line	235, "main.c"; 	}
                                    1- 1042     	RETURN	
     0034 0010                      3-   26 m1      ret
                                    1- 1044     ;***
                                    1- 1045     ;  pBlock Stats: dbName = C
                                    1- 1046     ;***
                                    1- 1047     ;has an exit
                                    1- 1048     ;functions called:
                                    1- 1049     ;   _ledMode1
                                    1- 1050     ;   _ledMode2
                                    1- 1051     ;   _ledMode2
                                    1- 1052     ;   __moduchar
                                    1- 1053     ;   _ledMode1
                                    1- 1054     ;   _ledMode2
                                    1- 1055     ;   _ledMode2
                                    1- 1056     ;   __moduchar
                                    1- 1057     ;2 compiler assigned registers:
                                    1- 1058     ;   STK00
                                    1- 1059     ;   r0x1014
                                    1- 1060     ;; Starting pCode block
                                    1- 1061     .segment "code"; module=main, function=_ledCon
     0000                           1- 1063     _ledCon:
                                    1- 1064     ; 2 exit points
                                    1- 1065     	.line	90, "main.c"; 	if(!modeFlag)
                                    1- 1066     	BANKSEL	_modeFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1067     	MOVR	_modeFlag,W
     0002 0903                      1- 1068     	BTRSS	STATUS,2
     0003 3rrr                      1- 1069     	LGOTO	_00170_DS_
                                    1- 1070     	.line	93, "main.c"; 	if(lockLedFlag)
                                    1- 1071     	BANKSEL	_lockLedFlag
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1072     	MOVR	_lockLedFlag,W
     0006 0D03                      1- 1073     	BTRSC	STATUS,2
     0007 3rrr                      1- 1074     	LGOTO	_00139_DS_
                                    1- 1075     	.line	96, "main.c"; 	ledMode1();
     0008 2rrr                      1- 1076     	LCALL	_ledMode1
                                    1- 1077     	.line	97, "main.c"; 	if(++lockLedCount >= 35)
                                    1- 1078     	BANKSEL	_lockLedCount
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 05rr                      1- 1079     	INCR	_lockLedCount,F
                                    1- 1080     ;;unsigned compare: left < lit (0x23=35), size=1
     000B 2123                      1- 1081     	MOVIA	0x23
     000C 04rr                      1- 1082     	SUBAR	_lockLedCount,W
     000D 0803                      1- 1083     	BTRSS	STATUS,0
     000E 3rrr                      1- 1084     	LGOTO	_00172_DS_
                                    1- 1085     	.line	99, "main.c"; 	lockLedCount = 0;
     000F 02rr                      1- 1086     	CLRR	_lockLedCount
                                    1- 1087     	.line	100, "main.c"; 	if(keyLockFlag)
                                    1- 1088     	BANKSEL	_keyLockFlag
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1089     	MOVR	_keyLockFlag,W
     0012 0D03                      1- 1090     	BTRSC	STATUS,2
     0013 3rrr                      1- 1091     	LGOTO	_00128_DS_
                                    1- 1092     	.line	102, "main.c"; 	if(++countLed >= 3)
                                    1- 1093     	BANKSEL	_countLed
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1- 1094     	INCR	_countLed,F
                                    1- 1095     ;;unsigned compare: left < lit (0x3=3), size=1
     0016 2103                      1- 1096     	MOVIA	0x03
     0017 04rr                      1- 1097     	SUBAR	_countLed,W
     0018 0803                      1- 1098     	BTRSS	STATUS,0
     0019 3rrr                      1- 1099     	LGOTO	_00172_DS_
                                    1- 1100     	.line	103, "main.c"; 	lockLedFlag = 0;//停止开关闪灯
                                    1- 1101     	BANKSEL	_lockLedFlag
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 02rr                      1- 1102     	CLRR	_lockLedFlag
     001C 3rrr                      1- 1103     	LGOTO	_00172_DS_
     001D                           1- 1104     _00128_DS_:
                                    1- 1105     	.line	106, "main.c"; 	lockLedFlag = 0;//停止开关闪灯
                                    1- 1106     	BANKSEL	_lockLedFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 02rr                      1- 1107     	CLRR	_lockLedFlag
     001F 3rrr                      1- 1108     	LGOTO	_00172_DS_
     0020                           1- 1109     _00139_DS_:
                                    1- 1110     	.line	109, "main.c"; 	else if(ledFlag)
                                    1- 1111     	BANKSEL	_ledFlag
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1112     	MOVR	_ledFlag,W
     0022 0D03                      1- 1113     	BTRSC	STATUS,2
     0023 3rrr                      1- 1114     	LGOTO	_00172_DS_
                                    1- 1115     	.line	111, "main.c"; 	if(!keyLockFlag)
                                    1- 1116     	BANKSEL	_keyLockFlag
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1117     	MOVR	_keyLockFlag,W
     0026 0903                      1- 1118     	BTRSS	STATUS,2
     0027 3rrr                      1- 1119     	LGOTO	_00133_DS_
                                    1- 1120     	.line	113, "main.c"; 	ledFlag = 0;
                                    1- 1121     	BANKSEL	_ledFlag
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 1122     	CLRR	_ledFlag
                                    1- 1123     	.line	114, "main.c"; 	lockLedCount = 0;
                                    1- 1124     	BANKSEL	_lockLedCount
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 02rr                      1- 1125     	CLRR	_lockLedCount
                                    1- 1126     	.line	115, "main.c"; 	return;
     002C 3rrr                      1- 1127     	LGOTO	_00172_DS_
     002D                           1- 1128     _00133_DS_:
                                    1- 1129     	.line	118, "main.c"; 	ledMode2();
     002D 2rrr                      1- 1130     	LCALL	_ledMode2
                                    1- 1131     	.line	119, "main.c"; 	if(++lockLedCount >= 70)
                                    1- 1132     	BANKSEL	_lockLedCount
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1133     	INCR	_lockLedCount,F
                                    1- 1134     ;;unsigned compare: left < lit (0x46=70), size=1
     0030 2146                      1- 1135     	MOVIA	0x46
     0031 04rr                      1- 1136     	SUBAR	_lockLedCount,W
     0032 0803                      1- 1137     	BTRSS	STATUS,0
     0033 3rrr                      1- 1138     	LGOTO	_00172_DS_
                                    1- 1139     	.line	121, "main.c"; 	PORTA |= 0x0F;
     0034 210F                      1- 1140     	MOVIA	0x0f
     0035 11rr                      1- 1141     	IORAR	_PORTA,F
                                    1- 1142     	.line	122, "main.c"; 	PORTB |= 0xC0;
     0036 21C0                      1- 1143     	MOVIA	0xc0
     0037 11rr                      1- 1144     	IORAR	_PORTB,F
                                    1- 1145     	.line	123, "main.c"; 	lockLedCount = 0;
     0038 02rr                      1- 1146     	CLRR	_lockLedCount
                                    1- 1147     	.line	124, "main.c"; 	ledFlag = 0;
                                    1- 1148     	BANKSEL	_ledFlag
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1- 1149     	CLRR	_ledFlag
     003B 3rrr                      1- 1150     	LGOTO	_00172_DS_
     003C                           1- 1151     _00170_DS_:
                                    1- 1152     	.line	132, "main.c"; 	if(lockLedFlag)
                                    1- 1153     	BANKSEL	_lockLedFlag
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 1154     	MOVR	_lockLedFlag,W
     003E 0D03                      1- 1155     	BTRSC	STATUS,2
     003F 3rrr                      1- 1156     	LGOTO	_00167_DS_
                                    1- 1157     ;;unsigned compare: left < lit (0x3=3), size=1
                                    1- 1158     	.line	135, "main.c"; 	if(lockLedCount < 3)
     0040 2103                      1- 1159     	MOVIA	0x03
                                    1- 1160     	BANKSEL	_lockLedCount
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 04rr                      1- 1161     	SUBAR	_lockLedCount,W
     0043 0C03                      1- 1162     	BTRSC	STATUS,0
     0044 3rrr                      1- 1163     	LGOTO	_00144_DS_
                                    1- 1164     	.line	137, "main.c"; 	PORTA &= 0xF0;
     0045 21F0                      1- 1165     	MOVIA	0xf0
     0046 10rr                      1- 1166     	ANDAR	_PORTA,F
                                    1- 1167     	.line	138, "main.c"; 	PORTB &= 0x3F;
     0047 213F                      1- 1168     	MOVIA	0x3f
     0048 10rr                      1- 1169     	ANDAR	_PORTB,F
     0049 3rrr                      1- 1170     	LGOTO	_00145_DS_
                                    1- 1171     ;;unsigned compare: left < lit (0x21=33), size=1
     004A                           1- 1172     _00144_DS_:
                                    1- 1173     	.line	140, "main.c"; 	else if(lockLedCount < 33)
     004A 2121                      1- 1174     	MOVIA	0x21
                                    1- 1175     	BANKSEL	_lockLedCount
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 04rr                      1- 1176     	SUBAR	_lockLedCount,W
     004D 0C03                      1- 1177     	BTRSC	STATUS,0
     004E 3rrr                      1- 1178     	LGOTO	_00145_DS_
                                    1- 1179     	.line	142, "main.c"; 	PORTA |= 0x0F;
     004F 210F                      1- 1180     	MOVIA	0x0f
     0050 11rr                      1- 1181     	IORAR	_PORTA,F
                                    1- 1182     	.line	143, "main.c"; 	PORTB |= 0xC0;
     0051 21C0                      1- 1183     	MOVIA	0xc0
     0052 11rr                      1- 1184     	IORAR	_PORTB,F
     0053                           1- 1185     _00145_DS_:
                                    1- 1186     	.line	146, "main.c"; 	if(++lockLedCount >= 33)
                                    1- 1187     	BANKSEL	_lockLedCount
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 05rr                      1- 1188     	INCR	_lockLedCount,F
                                    1- 1189     ;;unsigned compare: left < lit (0x21=33), size=1
     0055 2121                      1- 1190     	MOVIA	0x21
     0056 04rr                      1- 1191     	SUBAR	_lockLedCount,W
     0057 0803                      1- 1192     	BTRSS	STATUS,0
     0058 3rrr                      1- 1193     	LGOTO	_00172_DS_
                                    1- 1194     	.line	148, "main.c"; 	lockLedCount = 0;
     0059 02rr                      1- 1195     	CLRR	_lockLedCount
                                    1- 1196     	.line	149, "main.c"; 	if(keyLockFlag)
                                    1- 1197     	BANKSEL	_keyLockFlag
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 01rr                      1- 1198     	MOVR	_keyLockFlag,W
     005C 0D03                      1- 1199     	BTRSC	STATUS,2
     005D 3rrr                      1- 1200     	LGOTO	_00149_DS_
                                    1- 1201     	.line	151, "main.c"; 	if(++countLed >= 3)
                                    1- 1202     	BANKSEL	_countLed
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 05rr                      1- 1203     	INCR	_countLed,F
                                    1- 1204     ;;unsigned compare: left < lit (0x3=3), size=1
     0060 2103                      1- 1205     	MOVIA	0x03
     0061 04rr                      1- 1206     	SUBAR	_countLed,W
     0062 0803                      1- 1207     	BTRSS	STATUS,0
     0063 3rrr                      1- 1208     	LGOTO	_00172_DS_
                                    1- 1209     	.line	152, "main.c"; 	lockLedFlag = 0;//停止开关闪灯
                                    1- 1210     	BANKSEL	_lockLedFlag
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 02rr                      1- 1211     	CLRR	_lockLedFlag
     0066 3rrr                      1- 1212     	LGOTO	_00172_DS_
     0067                           1- 1213     _00149_DS_:
                                    1- 1214     	.line	155, "main.c"; 	lockLedFlag = 0;//停止开关闪灯
                                    1- 1215     	BANKSEL	_lockLedFlag
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 02rr                      1- 1216     	CLRR	_lockLedFlag
     0069 3rrr                      1- 1217     	LGOTO	_00172_DS_
     006A                           1- 1218     _00167_DS_:
                                    1- 1219     	.line	158, "main.c"; 	else if(ledFlag)
                                    1- 1220     	BANKSEL	_ledFlag
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 01rr                      1- 1221     	MOVR	_ledFlag,W
     006C 0D03                      1- 1222     	BTRSC	STATUS,2
     006D 3rrr                      1- 1223     	LGOTO	_00172_DS_
                                    1- 1224     	.line	160, "main.c"; 	if(!keyLockFlag)
                                    1- 1225     	BANKSEL	_keyLockFlag
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 01rr                      1- 1226     	MOVR	_keyLockFlag,W
     0070 0903                      1- 1227     	BTRSS	STATUS,2
     0071 3rrr                      1- 1228     	LGOTO	_00154_DS_
                                    1- 1229     	.line	162, "main.c"; 	ledFlag = 0;
                                    1- 1230     	BANKSEL	_ledFlag
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 02rr                      1- 1231     	CLRR	_ledFlag
                                    1- 1232     	.line	163, "main.c"; 	lockLedCount = 0;
                                    1- 1233     	BANKSEL	_lockLedCount
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 02rr                      1- 1234     	CLRR	_lockLedCount
                                    1- 1235     	.line	164, "main.c"; 	return;
     0076 3rrr                      1- 1236     	LGOTO	_00172_DS_
     0077                           1- 1237     _00154_DS_:
                                    1- 1238     	.line	167, "main.c"; 	ledMode2();
     0077 2rrr                      1- 1239     	LCALL	_ledMode2
                                    1- 1240     ;;unsigned compare: left < lit (0x46=70), size=1
                                    1- 1241     	.line	168, "main.c"; 	if(lockLedCount >= 70)
     0078 2146                      1- 1242     	MOVIA	0x46
                                    1- 1243     	BANKSEL	_lockLedCount
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 04rr                      1- 1244     	SUBAR	_lockLedCount,W
     007B 0803                      1- 1245     	BTRSS	STATUS,0
     007C 3rrr                      1- 1246     	LGOTO	_00161_DS_
                                    1- 1247     	.line	170, "main.c"; 	if(lockLedCount % 5 == 0)
     007D 2105                      1- 1248     	MOVIA	0x05
     007E 00rr                      1- 1249     	MOVAR	STK00
     007F 01rr                      1- 1250     	MOVR	_lockLedCount,W
     0080 2rrr                      1- 1251     	LCALL	__moduchar
                                    1- 1252     	BANKSEL	r0x1014
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 00rr                      1- 1253     	MOVAR	r0x1014
     0083 01rr                      1- 1254     	MOVR	r0x1014,W
     0084 0903                      1- 1255     	BTRSS	STATUS,2
     0085 3rrr                      1- 1256     	LGOTO	_00161_DS_
                                    1- 1257     	.line	172, "main.c"; 	if(countLed == 0)
                                    1- 1258     	BANKSEL	_countLed
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 01rr                      1- 1259     	MOVR	_countLed,W
     0088 0903                      1- 1260     	BTRSS	STATUS,2
     0089 3rrr                      1- 1261     	LGOTO	_00156_DS_
                                    1- 1262     	.line	174, "main.c"; 	PORTA &= 0xF0;
     008A 21F0                      1- 1263     	MOVIA	0xf0
     008B 10rr                      1- 1264     	ANDAR	_PORTA,F
                                    1- 1265     	.line	175, "main.c"; 	PORTB &= 0x3F;
     008C 213F                      1- 1266     	MOVIA	0x3f
     008D 10rr                      1- 1267     	ANDAR	_PORTB,F
                                    1- 1268     	.line	176, "main.c"; 	countLed = 1;
     008E 2101                      1- 1269     	MOVIA	0x01
     008F 00rr                      1- 1270     	MOVAR	_countLed
     0090 3rrr                      1- 1271     	LGOTO	_00161_DS_
     0091                           1- 1272     _00156_DS_:
                                    1- 1273     	.line	180, "main.c"; 	PORTA |= 0x0F;
     0091 210F                      1- 1274     	MOVIA	0x0f
     0092 11rr                      1- 1275     	IORAR	_PORTA,F
                                    1- 1276     	.line	181, "main.c"; 	PORTB |= 0xC0;
     0093 21C0                      1- 1277     	MOVIA	0xc0
     0094 11rr                      1- 1278     	IORAR	_PORTB,F
                                    1- 1279     	.line	182, "main.c"; 	countLed = 0;
                                    1- 1280     	BANKSEL	_countLed
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 02rr                      1- 1281     	CLRR	_countLed
     0097                           1- 1282     _00161_DS_:
                                    1- 1283     	.line	186, "main.c"; 	if(++lockLedCount >= 170)
                                    1- 1284     	BANKSEL	_lockLedCount
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 05rr                      1- 1285     	INCR	_lockLedCount,F
                                    1- 1286     ;;unsigned compare: left < lit (0xAA=170), size=1
     0099 21AA                      1- 1287     	MOVIA	0xaa
     009A 04rr                      1- 1288     	SUBAR	_lockLedCount,W
     009B 0803                      1- 1289     	BTRSS	STATUS,0
     009C 3rrr                      1- 1290     	LGOTO	_00172_DS_
                                    1- 1291     	.line	188, "main.c"; 	PORTA |= 0x0F;
     009D 210F                      1- 1292     	MOVIA	0x0f
     009E 11rr                      1- 1293     	IORAR	_PORTA,F
                                    1- 1294     	.line	189, "main.c"; 	PORTB |= 0xC0;
     009F 21C0                      1- 1295     	MOVIA	0xc0
     00A0 11rr                      1- 1296     	IORAR	_PORTB,F
                                    1- 1297     	.line	190, "main.c"; 	countLed = 0;
                                    1- 1298     	BANKSEL	_countLed
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 02rr                      1- 1299     	CLRR	_countLed
                                    1- 1300     	.line	191, "main.c"; 	lockLedCount = 0;
                                    1- 1301     	BANKSEL	_lockLedCount
     00A3 rrrr                      3-   71 m1      .banksel ram_address
     00A4 02rr                      1- 1302     	CLRR	_lockLedCount
                                    1- 1303     	.line	192, "main.c"; 	ledFlag = 0;
                                    1- 1304     	BANKSEL	_ledFlag
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 02rr                      1- 1305     	CLRR	_ledFlag
     00A7                           1- 1306     _00172_DS_:
                                    1- 1307     	.line	198, "main.c"; 	}
                                    1- 1308     	RETURN	
     00A7 0010                      3-   26 m1      ret
                                    1- 1309     ; exit point of _ledCon
                                    1- 1312     ;	code size estimation:
                                    1- 1313     ;	  513+  107 =   620 instructions ( 1454 byte)
                                    1- 1315     	end
                                    1- 1315     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__moduchar              Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800533
__sdcc_interrupt        Label    00000000
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00116_DS_              Label    00000014
_00120_DS_              Label    00000001
_00128_DS_              Label    0000001D
_00133_DS_              Label    0000002D
_00139_DS_              Label    00000020
_00144_DS_              Label    0000004A
_00145_DS_              Label    00000053
_00149_DS_              Label    00000067
_00154_DS_              Label    00000077
_00156_DS_              Label    00000091
_00161_DS_              Label    00000097
_00167_DS_              Label    0000006A
_00170_DS_              Label    0000003C
_00172_DS_              Label    000000A7
_00180_DS_              Label    0000002F
_00183_DS_              Label    00000027
_00186_DS_              Label    0000001F
_00189_DS_              Label    00000017
_00192_DS_              Label    0000000F
_00195_DS_              Label    00000007
_00197_DS_              Label    00000034
_00205_DS_              Label    00000066
_00208_DS_              Label    0000005E
_00211_DS_              Label    00000056
_00214_DS_              Label    0000004E
_00217_DS_              Label    00000046
_00220_DS_              Label    0000003E
_00223_DS_              Label    00000036
_00226_DS_              Label    0000002F
_00229_DS_              Label    00000027
_00232_DS_              Label    0000001F
_00235_DS_              Label    00000017
_00238_DS_              Label    0000000F
_00241_DS_              Label    00000007
_00243_DS_              Label    0000006B
_00251_DS_              Label    0000000A
_00253_DS_              Label    00000013
_00259_DS_              Label    0000000E
_00265_DS_              Label    00000014
_00266_DS_              Label    0000002B
_00268_DS_              Label    0000003D
_00269_DS_              Label    0000003F
_00272_DS_              Label    00000064
_00274_DS_              Label    00000056
_00275_DS_              Label    00000059
_00297_DS_              Label    00000009
_00298_DS_              Label    0000001B
_00314_DS_              Label    0000002D
_00315_DS_              Label    0000003B
_00317_DS_              Label    0000001D
_00318_DS_              Label    0000003E
_00319_DS_              Label    0000003F
_00336_DS_              Label    0000000F
_00337_DS_              Label    00000024
_00338_DS_              Label    00000034
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_countLed               Label    00000000
_FSR                    Label    00000000
_INDF                   Label    00000000
_init                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_key2Count              Label    00000000
_keyCon                 Label    00000000
_keyCount               Label    00000000
_keyLockFlag            Label    00000000
_keyRead                Label    00000000
_ledCon                 Label    00000000
_ledFlag                Label    00000000
_ledMode1               Label    00000000
_ledMode2               Label    00000000
_ledMode3               Label    00000000
_lockLedCount           Label    00000000
_lockLedFlag            Label    00000000
_longFlag               Label    00000000
_longPressFlag          Label    00000000
_main                   Label    00000000
_modeFlag               Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1011                 Label    00000000
r0x1012                 Label    00000000
r0x1013                 Label    00000000
r0x1014                 Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a053d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A053D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
