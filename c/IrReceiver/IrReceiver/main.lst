
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A051D,c=on
                                    1-    9     	#include "ny8a051d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTBbits
                                    1-   15     	extern	_PCONbits
                                    1-   16     	extern	_BWUCONbits
                                    1-   17     	extern	_BPLCONbits
                                    1-   18     	extern	_BPHCONbits
                                    1-   19     	extern	_INTEbits
                                    1-   20     	extern	_INTFbits
                                    1-   21     	extern	_INDF
                                    1-   22     	extern	_TMR0
                                    1-   23     	extern	_PCL
                                    1-   24     	extern	_STATUS
                                    1-   25     	extern	_FSR
                                    1-   26     	extern	_PORTB
                                    1-   27     	extern	_PCON
                                    1-   28     	extern	_BWUCON
                                    1-   29     	extern	_PCHBUF
                                    1-   30     	extern	_BPLCON
                                    1-   31     	extern	_BPHCON
                                    1-   32     	extern	_INTE
                                    1-   33     	extern	_INTF
                                    1-   34     	extern	_TMR1
                                    1-   35     	extern	_T1CR1
                                    1-   36     	extern	_T1CR2
                                    1-   37     	extern	_PWM1DUTY
                                    1-   38     	extern	_PS1CV
                                    1-   39     	extern	_BZ1CR
                                    1-   40     	extern	_IRCR
                                    1-   41     	extern	_TBHP
                                    1-   42     	extern	_TBHD
                                    1-   43     	extern	_OSCCR
                                    1-   44     	extern	_IOSTB
                                    1-   45     	extern	_PS0CV
                                    1-   46     	extern	_BODCON
                                    1-   47     	extern	_PCON1
                                    1-   48     	extern	_T0MD
                                    1-   49     	extern	___sdcc_saved_fsr
                                    1-   50     	extern	___sdcc_saved_stk00
                                    1-   51     	extern	___sdcc_saved_stk01
                                    1-   52     	extern	__nyc_ny8_startup
                                    1-   53     ;--------------------------------------------------------
                                    1-   54     ; global declarations
                                    1-   55     ;--------------------------------------------------------
                                    1-   56     	extern	_gotoSleep
                                    1-   57     	extern	_irwork
                                    1-   58     	extern	_irpros
                                    1-   59     	extern	_isr
                                    1-   60     	extern	_main
                                    1-   61     	extern	_irtime
                                    1-   62     	extern	_IntFlag
                                    1-   63     	extern	_count
                                    1-   64     	extern	_startflag
                                    1-   65     	extern	_bitIndex
                                    1-   66     	extern	_irreceok
                                    1-   67     	extern	_irprosok
                                    1-   68     	extern	_data1
                                    1-   69     	extern	_data2
                                    1-   70     	extern	_data3
                                    1-   71     	extern	_data4
                                    1-   72     	extern	_irCode
                                    1-   73     	extern	_irCode2
                                    1-   74     	extern	_value
                                    1-   75     	extern	_irdata
                                    1-   76     	extern	_sleepFlag
                                    1-   77     	extern	_sleepCount
                                    1-   79     	extern PSAVE
                                    1-   80     	extern SSAVE
                                    1-   81     	extern WSAVE
                                    1-   82     	extern STK12
                                    1-   83     	extern STK11
                                    1-   84     	extern STK10
                                    1-   85     	extern STK09
                                    1-   86     	extern STK08
                                    1-   87     	extern STK07
                                    1-   88     	extern STK06
                                    1-   89     	extern STK05
                                    1-   90     	extern STK04
                                    1-   91     	extern STK03
                                    1-   92     	extern STK02
                                    1-   93     	extern STK01
                                    1-   94     	extern STK00
                                    1-   96     .segment "uninit", 0x20000010
 20000010                           1-   97     PSAVE:
                                    1-   98     	.res 1
 20000011                           1-   99     SSAVE:
                                    1-  100     	.res 1
 20000012                           1-  101     WSAVE:
                                    1-  102     	.res 1
 20000013                           1-  103     STK12:
                                    1-  104     	.res 1
 20000014                           1-  105     STK11:
                                    1-  106     	.res 1
 20000015                           1-  107     STK10:
                                    1-  108     	.res 1
 20000016                           1-  109     STK09:
                                    1-  110     	.res 1
 20000017                           1-  111     STK08:
                                    1-  112     	.res 1
 20000018                           1-  113     STK07:
                                    1-  114     	.res 1
 20000019                           1-  115     STK06:
                                    1-  116     	.res 1
 2000001A                           1-  117     STK05:
                                    1-  118     	.res 1
 2000001B                           1-  119     STK04:
                                    1-  120     	.res 1
 2000001C                           1-  121     STK03:
                                    1-  122     	.res 1
 2000001D                           1-  123     STK02:
                                    1-  124     	.res 1
 2000001E                           1-  125     STK01:
                                    1-  126     	.res 1
 2000001F                           1-  127     STK00:
                                    1-  128     	.res 1
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; global definitions
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     .segment "uninit"
     0000                           1-  134     _irtime:
                                    1-  135     	.res	1
                                    1-  138     .segment "uninit"
     0000                           1-  139     _IntFlag:
                                    1-  140     	.res	1
                                    1-  143     .segment "uninit"
     0000                           1-  144     _count:
                                    1-  145     	.res	1
                                    1-  148     .segment "uninit"
     0000                           1-  149     _startflag:
                                    1-  150     	.res	1
                                    1-  153     .segment "uninit"
     0000                           1-  154     _bitIndex:
                                    1-  155     	.res	1
                                    1-  158     .segment "uninit"
     0000                           1-  159     _irreceok:
                                    1-  160     	.res	1
                                    1-  163     .segment "uninit"
     0000                           1-  164     _irprosok:
                                    1-  165     	.res	1
                                    1-  168     .segment "uninit"
     0000                           1-  169     _data1:
                                    1-  170     	.res	1
                                    1-  173     .segment "uninit"
     0000                           1-  174     _data2:
                                    1-  175     	.res	1
                                    1-  178     .segment "uninit"
     0000                           1-  179     _data3:
                                    1-  180     	.res	1
                                    1-  183     .segment "uninit"
     0000                           1-  184     _data4:
                                    1-  185     	.res	1
                                    1-  188     .segment "uninit"
     0000                           1-  189     _irCode:
                                    1-  190     	.res	1
                                    1-  193     .segment "uninit"
     0000                           1-  194     _irCode2:
                                    1-  195     	.res	1
                                    1-  198     .segment "uninit"
     0000                           1-  199     _value:
                                    1-  200     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     _irdata:
                                    1-  205     	.res	8
                                    1-  208     ;--------------------------------------------------------
                                    1-  209     ; absolute symbol definitions
                                    1-  210     ;--------------------------------------------------------
                                    1-  211     ;--------------------------------------------------------
                                    1-  212     ; compiler-defined variables
                                    1-  213     ;--------------------------------------------------------
                                    1-  214     ;--------------------------------------------------------
                                    1-  215     ; initialized data
                                    1-  216     ;--------------------------------------------------------
                                    1-  218     .segment "idata"
     0000                           1-  219     _sleepFlag:
     0000 0000                      1-  220     	dw	0x00
                                    1-  224     .segment "idata"
     0000                           1-  225     _sleepCount:
     0000 0000 0000                 1-  226     	dw	0x00, 0x00
                                    1-  229     ;--------------------------------------------------------
                                    1-  230     ; overlayable items in internal ram 
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     ;	udata_ovr
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ; reset vector 
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     ORG	0x0000
     0000 3rrr                      1-  237     	LGOTO	__nyc_ny8_startup
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ; interrupt and initialization code
                                    1-  240     ;--------------------------------------------------------
                                    1-  241     ORG 0x0008
     0008 3rrr                      1-  242     	lgoto	__sdcc_interrupt
                                    1-  244     .segment "code"
     0000                           1-  245     __sdcc_interrupt:
                                    1-  246     ;***
                                    1-  247     ;  pBlock Stats: dbName = I
                                    1-  248     ;***
                                    1-  249     ;2 compiler assigned registers:
                                    1-  250     ;   STK00
                                    1-  251     ;   STK01
                                    1-  252     ;; Starting pCode block
     0000                           1-  253     _isr:
                                    1-  254     ; 0 exit points
                                    1-  255     	.line	40, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  256     	MOVAR	WSAVE
     0001 1503                      1-  257     	SWAPR	STATUS,W
     0002 0283                      1-  258     	CLRR	STATUS
     0003 00rr                      1-  259     	MOVAR	SSAVE
     0004 010A                      1-  260     	MOVR	PCHBUF,W
     0005 028A                      1-  261     	CLRR	PCHBUF
     0006 00rr                      1-  262     	MOVAR	PSAVE
     0007 0104                      1-  263     	MOVR	FSR,W
     0008 00rr                      1-  264     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  265     	MOVR	STK00,W
     000A 00rr                      1-  266     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  267     	MOVR	STK01,W
     000C 00rr                      1-  268     	MOVAR	___sdcc_saved_stk01
                                    1-  269     	.line	42, "main.c"; 	if(INTFbits.T1IF)
     000D 09rr                      1-  270     	BTRSS	_INTFbits,3
     000E 3rrr                      1-  271     	LGOTO	_00108_DS_
                                    1-  272     	.line	44, "main.c"; 	irtime++;
     000F 05rr                      1-  273     	INCR	_irtime,F
                                    1-  274     	.line	45, "main.c"; 	if(++count == 100)
     0010 05rr                      1-  275     	INCR	_count,F
     0011 01rr                      1-  276     	MOVR	_count,W
     0012 2464                      1-  277     	XORIA	0x64
     0013 0903                      1-  278     	BTRSS	STATUS,2
     0014 3rrr                      1-  279     	LGOTO	_00106_DS_
                                    1-  280     	.line	47, "main.c"; 	count = 0;
     0015 02rr                      1-  281     	CLRR	_count
                                    1-  282     	.line	48, "main.c"; 	IntFlag = 1;
     0016 2101                      1-  283     	MOVIA	0x01
     0017 00rr                      1-  284     	MOVAR	_IntFlag
     0018                           1-  285     _00106_DS_:
                                    1-  286     	.line	50, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR1);	// Clear T1IF flag bit	
     0018 21F7                      1-  287     	MOVIA	0xf7
     0019 00rr                      1-  288     	MOVAR	_INTF
     001A                           1-  289     _00108_DS_:
                                    1-  290     	.line	54, "main.c"; 	if(INTFbits.PBIF)
     001A 08rr                      1-  291     	BTRSS	_INTFbits,1
     001B 3rrr                      1-  292     	LGOTO	_00130_DS_
                                    1-  293     	.line	57, "main.c"; 	if(startflag)
     001C 01rr                      1-  294     	MOVR	_startflag,W
     001D 0D03                      1-  295     	BTRSC	STATUS,2
     001E 3rrr                      1-  296     	LGOTO	_00127_DS_
                                    1-  297     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  298     ;;unsigned compare: left >= lit (0x21=33), size=1
                                    1-  299     	.line	59, "main.c"; 	if(irtime>32 )
     001F 2121                      1-  300     	MOVIA	0x21
     0020 04rr                      1-  301     	SUBAR	_irtime,W
     0021 0803                      1-  302     	BTRSS	STATUS,0
     0022 3rrr                      1-  303     	LGOTO	_00110_DS_
                                    1-  304     	.line	61, "main.c"; 	bitIndex=0;
     0023 02rr                      1-  305     	CLRR	_bitIndex
                                    1-  306     	.line	62, "main.c"; 	value = 0;
     0024 02rr                      1-  307     	CLRR	_value
                                    1-  308     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  309     ;;unsigned compare: left >= lit (0x7=7), size=1
     0025                           1-  310     _00110_DS_:
                                    1-  311     	.line	64, "main.c"; 	if(irtime>6)
     0025 2107                      1-  312     	MOVIA	0x07
     0026 04rr                      1-  313     	SUBAR	_irtime,W
     0027 0C03                      1-  314     	BTRSC	STATUS,0
                                    1-  315     	.line	66, "main.c"; 	value |= 0x80;
     0028 1Brr                      1-  316     	BSR	_value,7
                                    1-  317     	.line	69, "main.c"; 	value = value >> 1;
     0029 1C03                      1-  318     	BCR	STATUS,0
     002A 13rr                      1-  319     	RRR	_value,F
                                    1-  320     	.line	70, "main.c"; 	irtime=0;
     002B 02rr                      1-  321     	CLRR	_irtime
                                    1-  322     	.line	71, "main.c"; 	bitIndex++;
     002C 05rr                      1-  323     	INCR	_bitIndex,F
                                    1-  324     	.line	72, "main.c"; 	if(bitIndex == 8)
     002D 01rr                      1-  325     	MOVR	_bitIndex,W
     002E 2408                      1-  326     	XORIA	0x08
     002F 0903                      1-  327     	BTRSS	STATUS,2
     0030 3rrr                      1-  328     	LGOTO	_00122_DS_
                                    1-  329     	.line	74, "main.c"; 	data1 = value;
     0031 01rr                      1-  330     	MOVR	_value,W
     0032 00rr                      1-  331     	MOVAR	_data1
     0033 3rrr                      1-  332     	LGOTO	_00123_DS_
     0034                           1-  333     _00122_DS_:
                                    1-  334     	.line	76, "main.c"; 	else if(bitIndex == 16)
     0034 01rr                      1-  335     	MOVR	_bitIndex,W
     0035 2410                      1-  336     	XORIA	0x10
     0036 0903                      1-  337     	BTRSS	STATUS,2
     0037 3rrr                      1-  338     	LGOTO	_00119_DS_
                                    1-  339     	.line	78, "main.c"; 	data2 = value;
     0038 01rr                      1-  340     	MOVR	_value,W
     0039 00rr                      1-  341     	MOVAR	_data2
     003A 3rrr                      1-  342     	LGOTO	_00123_DS_
     003B                           1-  343     _00119_DS_:
                                    1-  344     	.line	81, "main.c"; 	else if(bitIndex == 24)
     003B 01rr                      1-  345     	MOVR	_bitIndex,W
     003C 2418                      1-  346     	XORIA	0x18
     003D 0903                      1-  347     	BTRSS	STATUS,2
     003E 3rrr                      1-  348     	LGOTO	_00116_DS_
                                    1-  349     	.line	83, "main.c"; 	data3 = value;
     003F 01rr                      1-  350     	MOVR	_value,W
     0040 00rr                      1-  351     	MOVAR	_data3
     0041 3rrr                      1-  352     	LGOTO	_00123_DS_
     0042                           1-  353     _00116_DS_:
                                    1-  354     	.line	86, "main.c"; 	else if(bitIndex == 32)
     0042 01rr                      1-  355     	MOVR	_bitIndex,W
     0043 2420                      1-  356     	XORIA	0x20
     0044 0903                      1-  357     	BTRSS	STATUS,2
     0045 3rrr                      1-  358     	LGOTO	_00123_DS_
                                    1-  359     	.line	88, "main.c"; 	data4 = value;
     0046 01rr                      1-  360     	MOVR	_value,W
     0047 00rr                      1-  361     	MOVAR	_data4
     0048                           1-  362     _00123_DS_:
                                    1-  363     	.line	92, "main.c"; 	if(bitIndex == 33)
     0048 01rr                      1-  364     	MOVR	_bitIndex,W
     0049 2421                      1-  365     	XORIA	0x21
     004A 0903                      1-  366     	BTRSS	STATUS,2
     004B 3rrr                      1-  367     	LGOTO	_00128_DS_
                                    1-  368     	.line	94, "main.c"; 	bitIndex=0;
     004C 02rr                      1-  369     	CLRR	_bitIndex
                                    1-  370     	.line	95, "main.c"; 	irreceok=1;
     004D 2101                      1-  371     	MOVIA	0x01
     004E 00rr                      1-  372     	MOVAR	_irreceok
     004F 3rrr                      1-  373     	LGOTO	_00128_DS_
     0050                           1-  374     _00127_DS_:
                                    1-  375     	.line	101, "main.c"; 	startflag = 1;
     0050 2101                      1-  376     	MOVIA	0x01
     0051 00rr                      1-  377     	MOVAR	_startflag
                                    1-  378     	.line	102, "main.c"; 	irtime=0;
     0052 02rr                      1-  379     	CLRR	_irtime
     0053                           1-  380     _00128_DS_:
                                    1-  381     	.line	104, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);
     0053 21FD                      1-  382     	MOVIA	0xfd
     0054 00rr                      1-  383     	MOVAR	_INTF
     0055                           1-  384     _00130_DS_:
                                    1-  385     	.line	107, "main.c"; 	INTF = 0;
     0055 02rr                      1-  386     	CLRR	_INTF
                                    1-  387     	.line	110, "main.c"; 	}
     0056 01rr                      1-  388     	MOVR	___sdcc_saved_stk01,W
     0057 00rr                      1-  389     	MOVAR	STK01
     0058 01rr                      1-  390     	MOVR	___sdcc_saved_stk00,W
     0059 00rr                      1-  391     	MOVAR	STK00
     005A 01rr                      1-  392     	MOVR	___sdcc_saved_fsr,W
     005B 0084                      1-  393     	MOVAR	FSR
     005C 01rr                      1-  394     	MOVR	PSAVE,W
     005D 008A                      1-  395     	MOVAR	PCHBUF
     005E 0283                      1-  396     	CLRR	STATUS
     005F 15rr                      1-  397     	SWAPR	SSAVE,W
     0060 0083                      1-  398     	MOVAR	STATUS
     0061 15rr                      1-  399     	SWAPR	WSAVE,F
     0062 15rr                      1-  400     	SWAPR	WSAVE,W
     0063                           1-  401     END_OF_INTERRUPT:
     0063 0011                      1-  402     	RETIE	
                                    1-  404     ;--------------------------------------------------------
                                    1-  405     ; code
                                    1-  406     ;--------------------------------------------------------
                                    1-  407     ;***
                                    1-  408     ;  pBlock Stats: dbName = M
                                    1-  409     ;***
                                    1-  410     ;has an exit
                                    1-  411     ;functions called:
                                    1-  412     ;   _irpros
                                    1-  413     ;   _irwork
                                    1-  414     ;   _gotoSleep
                                    1-  415     ;   _irpros
                                    1-  416     ;   _irwork
                                    1-  417     ;   _gotoSleep
                                    1-  418     ;; Starting pCode block
                                    1-  419     .segment "code"; module=main, function=_main
     0000                           1-  421     _main:
                                    1-  422     ; 2 exit points
                                    1-  423     	.line	159, "main.c"; 	IOSTB =   C_PB0_Input;     // Set PB0 & PB1 to input mode,others set to output mode
     0000 2101                      1-  424     	MOVIA	0x01
     0001 000r                      1-  425     	IOST	_IOSTB
                                    1-  426     	.line	160, "main.c"; 	PORTB = 0x01;                           // PB0、PB1 & PB2 are output High
     0002 00rr                      1-  427     	MOVAR	_PORTB
                                    1-  428     	.line	161, "main.c"; 	DISI();
     0003 0013                      1-  429     	DISI
                                    1-  430     	.line	163, "main.c"; 	PCON1 = C_TMR0_Dis;						// Disable Timer0
     0004 0200                      1-  431     	CLRA	
     0005 000r                      1-  432     	IOST	_PCON1
                                    1-  433     	.line	165, "main.c"; 	TMR1 = 128;							// Load 0xFF to TMR1 (Initial Timer1 register)
     0006 2180                      1-  434     	MOVIA	0x80
     0007 002r                      1-  435     	SFUN	_TMR1
                                    1-  436     	.line	166, "main.c"; 	T1CR1 = C_TMR1_Reload | C_TMR1_En;      // Enable Timer1, Initial value reloaded from TMR1, Non-stop mode 
     0008 2103                      1-  437     	MOVIA	0x03
     0009 002r                      1-  438     	SFUN	_T1CR1
                                    1-  439     	.line	167, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div8;	// Enable Prescaler1, Prescaler1 dividing rate = 1:4, Timer1 clock source is instruction clock
     000A 2102                      1-  440     	MOVIA	0x02
     000B 002r                      1-  441     	SFUN	_T1CR2
                                    1-  442     	.line	170, "main.c"; 	INTE =  C_INT_TMR1 | C_INT_PBKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 210A                      1-  443     	MOVIA	0x0a
     000D 00rr                      1-  444     	MOVAR	_INTE
                                    1-  445     	.line	173, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     000E 2188                      1-  446     	MOVIA	0x88
     000F 00rr                      1-  447     	MOVAR	_PCON
                                    1-  448     	.line	177, "main.c"; 	ENI();									// Enable all unmasked interrupts			
     0010 0004                      1-  449     	ENI
     0011                           1-  450     _00173_DS_:
                                    1-  451     	.line	181, "main.c"; 	CLRWDT(); 
     0011 0002                      1-  452     	clrwdt
                                    1-  453     	.line	182, "main.c"; 	if(irreceok)
     0012 01rr                      1-  454     	MOVR	_irreceok,W
     0013 0903                      1-  455     	BTRSS	STATUS,2
                                    1-  456     	.line	184, "main.c"; 	irpros();	
     0014 2rrr                      1-  457     	LCALL	_irpros
                                    1-  458     	.line	186, "main.c"; 	if(!IntFlag)
     0015 01rr                      1-  459     	MOVR	_IntFlag,W
     0016 0D03                      1-  460     	BTRSC	STATUS,2
     0017 3rrr                      1-  461     	LGOTO	_00173_DS_
                                    1-  462     	.line	188, "main.c"; 	IntFlag = 0;
     0018 02rr                      1-  463     	CLRR	_IntFlag
                                    1-  464     	.line	189, "main.c"; 	if(irprosok)
     0019 01rr                      1-  465     	MOVR	_irprosok,W
     001A 0903                      1-  466     	BTRSS	STATUS,2
                                    1-  467     	.line	191, "main.c"; 	irwork();
     001B 2rrr                      1-  468     	LCALL	_irwork
                                    1-  469     	.line	193, "main.c"; 	if(irtime>32 && (PORTB & 0x01))
     001C 2121                      1-  470     	MOVIA	0x21
     001D 04rr                      1-  471     	SUBAR	_irtime,W
     001E 0803                      1-  472     	BTRSS	STATUS,0
     001F 3rrr                      1-  473     	LGOTO	_00167_DS_
     0020 08rr                      1-  474     	BTRSS	_PORTB,0
     0021 3rrr                      1-  475     	LGOTO	_00167_DS_
                                    1-  476     	.line	195, "main.c"; 	bitIndex = 0;
     0022 02rr                      1-  477     	CLRR	_bitIndex
                                    1-  478     	.line	196, "main.c"; 	value = 0;
     0023 02rr                      1-  479     	CLRR	_value
     0024                           1-  480     _00167_DS_:
                                    1-  481     	.line	198, "main.c"; 	if(sleepFlag && ++sleepCount >= 300)
     0024 01rr                      1-  482     	MOVR	_sleepFlag,W
     0025 0D03                      1-  483     	BTRSC	STATUS,2
     0026 3rrr                      1-  484     	LGOTO	_00173_DS_
     0027 05rr                      1-  485     	INCR	_sleepCount,F
     0028 0D03                      1-  486     	BTRSC	STATUS,2
     0029 05rr                      1-  487     	INCR	(_sleepCount + 1),F
                                    1-  488     ;;unsigned compare: left < lit (0x12C=300), size=2
     002A 2101                      1-  489     	MOVIA	0x01
     002B 04rr                      1-  490     	SUBAR	(_sleepCount + 1),W
     002C 0903                      1-  491     	BTRSS	STATUS,2
     002D 3rrr                      1-  492     	LGOTO	_00202_DS_
     002E 212C                      1-  493     	MOVIA	0x2c
     002F 04rr                      1-  494     	SUBAR	_sleepCount,W
     0030                           1-  495     _00202_DS_:
     0030 0803                      1-  496     	BTRSS	STATUS,0
     0031 3rrr                      1-  497     	LGOTO	_00173_DS_
                                    1-  498     	.line	200, "main.c"; 	gotoSleep();
     0032 2rrr                      1-  499     	LCALL	_gotoSleep
     0033 3rrr                      1-  500     	LGOTO	_00173_DS_
                                    1-  501     	.line	203, "main.c"; 	}
                                    1-  502     	RETURN	
     0034 0010                      3-   26 m1      ret
                                    1-  503     ; exit point of _main
                                    1-  505     ;***
                                    1-  506     ;  pBlock Stats: dbName = C
                                    1-  507     ;***
                                    1-  508     ;has an exit
                                    1-  509     ;; Starting pCode block
                                    1-  510     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  512     _gotoSleep:
                                    1-  513     ; 2 exit points
                                    1-  514     	.line	141, "main.c"; 	sleepCount = 0;
     0000 02rr                      1-  515     	CLRR	_sleepCount
     0001 02rr                      1-  516     	CLRR	(_sleepCount + 1)
                                    1-  517     	.line	142, "main.c"; 	BWUCON = 0x01;
     0002 2101                      1-  518     	MOVIA	0x01
     0003 00rr                      1-  519     	MOVAR	_BWUCON
                                    1-  520     	.line	143, "main.c"; 	INTE =  C_INT_TMR1 | C_INT_PBKey;
     0004 210A                      1-  521     	MOVIA	0x0a
     0005 00rr                      1-  522     	MOVAR	_INTE
                                    1-  523     	.line	144, "main.c"; 	PCON =  C_LVR_En;	
     0006 2108                      1-  524     	MOVIA	0x08
     0007 00rr                      1-  525     	MOVAR	_PCON
                                    1-  526     	.line	145, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0008 02rr                      1-  527     	CLRR	_INTF
                                    1-  528     	.line	146, "main.c"; 	CLRWDT();
     0009 0002                      1-  529     	clrwdt
                                    1-  530     	.line	147, "main.c"; 	SLEEP();
     000A 0001                      1-  531     	sleep
                                    1-  532     	.line	148, "main.c"; 	INTE =  C_INT_TMR1 | C_INT_PBKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     000B 210A                      1-  533     	MOVIA	0x0a
     000C 00rr                      1-  534     	MOVAR	_INTE
                                    1-  535     	.line	149, "main.c"; 	INTF = 0;
     000D 02rr                      1-  536     	CLRR	_INTF
                                    1-  537     	.line	151, "main.c"; 	PCON = C_WDT_En;				// Enable WDT ,  Enable LVR
     000E 2180                      1-  538     	MOVIA	0x80
     000F 00rr                      1-  539     	MOVAR	_PCON
                                    1-  540     	.line	152, "main.c"; 	sleepFlag = 0;
     0010 02rr                      1-  541     	CLRR	_sleepFlag
                                    1-  542     	.line	153, "main.c"; 	}
                                    1-  543     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1-  544     ; exit point of _gotoSleep
                                    1-  546     ;***
                                    1-  547     ;  pBlock Stats: dbName = C
                                    1-  548     ;***
                                    1-  549     ;has an exit
                                    1-  550     ;; Starting pCode block
                                    1-  551     .segment "code"; module=main, function=_irwork
     0000                           1-  553     _irwork:
                                    1-  554     ; 2 exit points
                                    1-  555     	.line	125, "main.c"; 	switch(irCode)
     0000 01rr                      1-  556     	MOVR	_irCode,W
     0001 2445                      1-  557     	XORIA	0x45
     0002 0D03                      1-  558     	BTRSC	STATUS,2
     0003 3rrr                      1-  559     	LGOTO	_00139_DS_
     0004 01rr                      1-  560     	MOVR	_irCode,W
     0005 2446                      1-  561     	XORIA	0x46
     0006 0D03                      1-  562     	BTRSC	STATUS,2
     0007 3rrr                      1-  563     	LGOTO	_00140_DS_
     0008 3rrr                      1-  564     	LGOTO	_00141_DS_
     0009                           1-  565     _00139_DS_:
                                    1-  566     	.line	128, "main.c"; 	PORTB |= 0x02;
     0009 18rr                      1-  567     	BSR	_PORTB,1
                                    1-  568     	.line	129, "main.c"; 	break;
     000A 3rrr                      1-  569     	LGOTO	_00141_DS_
     000B                           1-  570     _00140_DS_:
                                    1-  571     	.line	131, "main.c"; 	PORTB &= 0xFD;
     000B 1Crr                      1-  572     	BCR	_PORTB,1
                                    1-  573     	.line	132, "main.c"; 	sleepFlag = 1;
     000C 2101                      1-  574     	MOVIA	0x01
     000D 00rr                      1-  575     	MOVAR	_sleepFlag
     000E                           1-  576     _00141_DS_:
                                    1-  577     	.line	135, "main.c"; 	irprosok = 0;
     000E 02rr                      1-  578     	CLRR	_irprosok
                                    1-  579     	.line	137, "main.c"; 	}
                                    1-  580     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1-  581     ; exit point of _irwork
                                    1-  583     ;***
                                    1-  584     ;  pBlock Stats: dbName = C
                                    1-  585     ;***
                                    1-  586     ;has an exit
                                    1-  587     ;; Starting pCode block
                                    1-  588     .segment "code"; module=main, function=_irpros
     0000                           1-  590     _irpros:
                                    1-  591     ; 2 exit points
                                    1-  592     	.line	116, "main.c"; 	irCode = data3;
     0000 01rr                      1-  593     	MOVR	_data3,W
     0001 00rr                      1-  594     	MOVAR	_irCode
                                    1-  595     	.line	117, "main.c"; 	irCode2 = data4;
     0002 01rr                      1-  596     	MOVR	_data4,W
     0003 00rr                      1-  597     	MOVAR	_irCode2
                                    1-  598     	.line	118, "main.c"; 	irreceok=0;
     0004 02rr                      1-  599     	CLRR	_irreceok
                                    1-  600     	.line	119, "main.c"; 	irprosok = 1;
     0005 2101                      1-  601     	MOVIA	0x01
     0006 00rr                      1-  602     	MOVAR	_irprosok
                                    1-  603     	.line	120, "main.c"; 	}
                                    1-  604     	RETURN	
     0007 0010                      3-   26 m1      ret
                                    1-  605     ; exit point of _irpros
                                    1-  608     ;	code size estimation:
                                    1-  609     ;	  190+    0 =   190 instructions (  380 byte)
                                    1-  611     	end
                                    1-  611     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 00000006
__PROCESSOR__           Constant 00800513
__sdcc_interrupt        Label    00000000
_00106_DS_              Label    00000018
_00108_DS_              Label    0000001A
_00110_DS_              Label    00000025
_00116_DS_              Label    00000042
_00119_DS_              Label    0000003B
_00122_DS_              Label    00000034
_00123_DS_              Label    00000048
_00127_DS_              Label    00000050
_00128_DS_              Label    00000053
_00130_DS_              Label    00000055
_00139_DS_              Label    00000009
_00140_DS_              Label    0000000B
_00141_DS_              Label    0000000E
_00167_DS_              Label    00000024
_00173_DS_              Label    00000011
_00202_DS_              Label    00000030
_bitIndex               Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BPLCON                 Label    00000000
_BPLCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_count                  Label    00000000
_data1                  Label    00000000
_data2                  Label    00000000
_data3                  Label    00000000
_data4                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTB                  Label    00000000
_irCode                 Label    00000000
_irCode2                Label    00000000
_IRCR                   Label    00000000
_irdata                 Label    00000000
_irpros                 Label    00000000
_irprosok               Label    00000000
_irreceok               Label    00000000
_irtime                 Label    00000000
_irwork                 Label    00000000
_isr                    Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_sleepCount             Label    00000000
_sleepFlag              Label    00000000
_startflag              Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_value                  Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    00000063
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a051d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A051D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
