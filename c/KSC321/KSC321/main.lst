
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_KeyScan
                                    1-   15     	extern	_keyRead
                                    1-   16     	extern	__divuint
                                    1-   17     	extern	__mulint
                                    1-   18     	extern	_PORTAbits
                                    1-   19     	extern	_PORTBbits
                                    1-   20     	extern	_PCONbits
                                    1-   21     	extern	_BWUCONbits
                                    1-   22     	extern	_ABPLCONbits
                                    1-   23     	extern	_BPHCONbits
                                    1-   24     	extern	_INTEbits
                                    1-   25     	extern	_INTFbits
                                    1-   26     	extern	_ADMDbits
                                    1-   27     	extern	_ADRbits
                                    1-   28     	extern	_ADVREFHbits
                                    1-   29     	extern	_ADCRbits
                                    1-   30     	extern	_AWUCONbits
                                    1-   31     	extern	_PACONbits
                                    1-   32     	extern	_INTEDGbits
                                    1-   33     	extern	_ANAENbits
                                    1-   34     	extern	_RFCbits
                                    1-   35     	extern	_INTE2bits
                                    1-   36     	extern	_INDF
                                    1-   37     	extern	_TMR0
                                    1-   38     	extern	_PCL
                                    1-   39     	extern	_STATUS
                                    1-   40     	extern	_FSR
                                    1-   41     	extern	_PORTA
                                    1-   42     	extern	_PORTB
                                    1-   43     	extern	_PCON
                                    1-   44     	extern	_BWUCON
                                    1-   45     	extern	_PCHBUF
                                    1-   46     	extern	_ABPLCON
                                    1-   47     	extern	_BPHCON
                                    1-   48     	extern	_INTE
                                    1-   49     	extern	_INTF
                                    1-   50     	extern	_ADMD
                                    1-   51     	extern	_ADR
                                    1-   52     	extern	_ADD
                                    1-   53     	extern	_ADVREFH
                                    1-   54     	extern	_ADCR
                                    1-   55     	extern	_AWUCON
                                    1-   56     	extern	_PACON
                                    1-   57     	extern	_INTEDG
                                    1-   58     	extern	_TMRH
                                    1-   59     	extern	_ANAEN
                                    1-   60     	extern	_RFC
                                    1-   61     	extern	_TM3RH
                                    1-   62     	extern	_INTE2
                                    1-   63     	extern	_TMR1
                                    1-   64     	extern	_T1CR1
                                    1-   65     	extern	_T1CR2
                                    1-   66     	extern	_PWM1DUTY
                                    1-   67     	extern	_PS1CV
                                    1-   68     	extern	_BZ1CR
                                    1-   69     	extern	_IRCR
                                    1-   70     	extern	_TBHP
                                    1-   71     	extern	_TBHD
                                    1-   72     	extern	_TMR2
                                    1-   73     	extern	_T2CR1
                                    1-   74     	extern	_T2CR2
                                    1-   75     	extern	_PWM2DUTY
                                    1-   76     	extern	_PS2CV
                                    1-   77     	extern	_BZ2CR
                                    1-   78     	extern	_OSCCR
                                    1-   79     	extern	_TMR3
                                    1-   80     	extern	_T3CR1
                                    1-   81     	extern	_T3CR2
                                    1-   82     	extern	_PWM3DUTY
                                    1-   83     	extern	_PS3CV
                                    1-   84     	extern	_BZ3CR
                                    1-   85     	extern	_IOSTA
                                    1-   86     	extern	_IOSTB
                                    1-   87     	extern	_APHCON
                                    1-   88     	extern	_PS0CV
                                    1-   89     	extern	_BODCON
                                    1-   90     	extern	_CMPCR
                                    1-   91     	extern	_PCON1
                                    1-   92     	extern	_T0MD
                                    1-   93     	extern	___sdcc_saved_fsr
                                    1-   94     	extern	___sdcc_saved_stk00
                                    1-   95     	extern	___sdcc_saved_stk01
                                    1-   96     	extern	__nyc_ny8_startup
                                    1-   97     ;--------------------------------------------------------
                                    1-   98     ; global declarations
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     	extern	_checkLVD
                                    1-  101     	extern	_F_wait_eoc
                                    1-  102     	extern	_F_AIN4_Convert
                                    1-  103     	extern	_F_AIN3_Convert
                                    1-  104     	extern	_F_AIN2_Convert
                                    1-  105     	extern	_F_AIN1_Convert
                                    1-  106     	extern	_checkBat
                                    1-  107     	extern	_checkOut
                                    1-  108     	extern	_isNotFan
                                    1-  109     	extern	_initAD
                                    1-  110     	extern	_delay
                                    1-  111     	extern	_processKey
                                    1-  112     	extern	_checkUsbInput
                                    1-  113     	extern	_fanUseable
                                    1-  114     	extern	_ledCon
                                    1-  115     	extern	_pwm1Stop
                                    1-  116     	extern	_gotoSleep
                                    1-  117     	extern	_init
                                    1-  118     	extern	_isr
                                    1-  119     	extern	_main
                                    1-  120     	extern	_intCount
                                    1-  121     	extern	_IntFlag
                                    1-  122     	extern	_keyClick
                                    1-  123     	extern	_duty1
                                    1-  124     	extern	_duty2
                                    1-  125     	extern	_workStep
                                    1-  126     	extern	_usbFlag
                                    1-  127     	extern	_batFullFlag
                                    1-  128     	extern	_fanStatus
                                    1-  129     	extern	_count500ms
                                    1-  130     	extern	_sleepFlag
                                    1-  131     	extern	_sleepDelay
                                    1-  132     	extern	_count200ms
                                    1-  133     	extern	_nullcount
                                    1-  134     	extern	_R_AIN1_DATA
                                    1-  135     	extern	_R_AIN1_DATA_LB
                                    1-  136     	extern	_R_AIN2_DATA
                                    1-  137     	extern	_R_AIN2_DATA_LB
                                    1-  138     	extern	_R_AIN3_DATA
                                    1-  139     	extern	_R_AIN3_DATA_LB
                                    1-  140     	extern	_R_AIN4_DATA
                                    1-  141     	extern	_R_AIN4_DATA_LB
                                    1-  142     	extern	_count15S
                                    1-  143     	extern	_tempDuty
                                    1-  144     	extern	_tempData
                                    1-  145     	extern	_chrgSpeed
                                    1-  146     	extern	_lvdFlag
                                    1-  147     	extern	_chrgCount
                                    1-  148     	extern	_sumR_AIN3_DATA
                                    1-  149     	extern	_AIN3Count
                                    1-  150     	extern	_AIN1Count
                                    1-  151     	extern	_sumR_AIN1_DATA
                                    1-  152     	extern	_AIN2Count
                                    1-  153     	extern	_sumR_AIN2_DATA
                                    1-  154     	extern	_AIN4Count
                                    1-  155     	extern	_sumR_AIN4_DATA
                                    1-  156     	extern	_maxTime
                                    1-  157     	extern	_checkTime
                                    1-  158     	extern	_lockTime
                                    1-  159     	extern	_duty2LockTime
                                    1-  160     	extern	_usbTime
                                    1-  161     	extern	_closeTime
                                    1-  163     	extern PSAVE
                                    1-  164     	extern SSAVE
                                    1-  165     	extern WSAVE
                                    1-  166     	extern STK12
                                    1-  167     	extern STK11
                                    1-  168     	extern STK10
                                    1-  169     	extern STK09
                                    1-  170     	extern STK08
                                    1-  171     	extern STK07
                                    1-  172     	extern STK06
                                    1-  173     	extern STK05
                                    1-  174     	extern STK04
                                    1-  175     	extern STK03
                                    1-  176     	extern STK02
                                    1-  177     	extern STK01
                                    1-  178     	extern STK00
                                    1-  180     .segment "uninit", 0x20000040
 20000040                           1-  181     PSAVE:
                                    1-  182     	.res 1
 20000041                           1-  183     SSAVE:
                                    1-  184     	.res 1
 20000042                           1-  185     WSAVE:
                                    1-  186     	.res 1
 20000043                           1-  187     STK12:
                                    1-  188     	.res 1
 20000044                           1-  189     STK11:
                                    1-  190     	.res 1
 20000045                           1-  191     STK10:
                                    1-  192     	.res 1
 20000046                           1-  193     STK09:
                                    1-  194     	.res 1
 20000047                           1-  195     STK08:
                                    1-  196     	.res 1
 20000048                           1-  197     STK07:
                                    1-  198     	.res 1
 20000049                           1-  199     STK06:
                                    1-  200     	.res 1
 2000004A                           1-  201     STK05:
                                    1-  202     	.res 1
 2000004B                           1-  203     STK04:
                                    1-  204     	.res 1
 2000004C                           1-  205     STK03:
                                    1-  206     	.res 1
 2000004D                           1-  207     STK02:
                                    1-  208     	.res 1
 2000004E                           1-  209     STK01:
                                    1-  210     	.res 1
 2000004F                           1-  211     STK00:
                                    1-  212     	.res 1
                                    1-  214     ;--------------------------------------------------------
                                    1-  215     ; global definitions
                                    1-  216     ;--------------------------------------------------------
                                    1-  217     .segment "uninit"
     0000                           1-  218     _R_AIN1_DATA:
                                    1-  219     	.res	2
                                    1-  222     .segment "uninit"
     0000                           1-  223     _R_AIN1_DATA_LB:
                                    1-  224     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     _R_AIN2_DATA:
                                    1-  229     	.res	2
                                    1-  232     .segment "uninit"
     0000                           1-  233     _R_AIN2_DATA_LB:
                                    1-  234     	.res	1
                                    1-  237     .segment "uninit"
     0000                           1-  238     _R_AIN3_DATA:
                                    1-  239     	.res	2
                                    1-  242     .segment "uninit"
     0000                           1-  243     _R_AIN3_DATA_LB:
                                    1-  244     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     _R_AIN4_DATA:
                                    1-  249     	.res	2
                                    1-  252     .segment "uninit"
     0000                           1-  253     _R_AIN4_DATA_LB:
                                    1-  254     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     _tempData:
                                    1-  259     	.res	2
                                    1-  262     ;--------------------------------------------------------
                                    1-  263     ; absolute symbol definitions
                                    1-  264     ;--------------------------------------------------------
                                    1-  265     ;--------------------------------------------------------
                                    1-  266     ; compiler-defined variables
                                    1-  267     ;--------------------------------------------------------
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1058:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x1057:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x102D:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x102C:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x102E:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x102F:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1054:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x1055:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x1050:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x1051:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x104A:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x104B:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x104D:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x1044:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x1045:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x1046:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x1049:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x103E:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x103F:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1040:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x1043:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x1038:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x1039:
                                    1-  336     	.res	1
                                    1-  337     .segment "uninit"
     0000                           1-  338     r0x103A:
                                    1-  339     	.res	1
                                    1-  340     .segment "uninit"
     0000                           1-  341     r0x103D:
                                    1-  342     	.res	1
                                    1-  343     .segment "uninit"
     0000                           1-  344     r0x1032:
                                    1-  345     	.res	1
                                    1-  346     .segment "uninit"
     0000                           1-  347     r0x1033:
                                    1-  348     	.res	1
                                    1-  349     .segment "uninit"
     0000                           1-  350     r0x1034:
                                    1-  351     	.res	1
                                    1-  352     .segment "uninit"
     0000                           1-  353     r0x1037:
                                    1-  354     	.res	1
                                    1-  355     .segment "uninit"
     0000                           1-  356     r0x1030:
                                    1-  357     	.res	1
                                    1-  358     .segment "uninit"
     0000                           1-  359     r0x1031:
                                    1-  360     	.res	1
                                    1-  361     ;--------------------------------------------------------
                                    1-  362     ; initialized data
                                    1-  363     ;--------------------------------------------------------
                                    1-  365     .segment "idata"
     0000                           1-  366     _intCount:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _IntFlag:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _keyClick:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _duty1:
     0000 0005                      1-  385     	dw	0x05
                                    1-  389     .segment "idata"
     0000                           1-  390     _duty2:
     0000 0018 0000                 1-  391     	dw	0x18, 0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _workStep:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _usbFlag:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _batFullFlag:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _fanStatus:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _count500ms:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _sleepFlag:
     0000 0000                      1-  427     	dw	0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _sleepDelay:
     0000 0000                      1-  433     	dw	0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _count200ms:
     0000 0000                      1-  439     	dw	0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _nullcount:
     0000 0000                      1-  445     	dw	0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _count15S:
     0000 0000 0000                 1-  451     	dw	0x00, 0x00
                                    1-  455     .segment "idata"
     0000                           1-  456     _tempDuty:
     0000 0000                      1-  457     	dw	0x00
                                    1-  461     .segment "idata"
     0000                           1-  462     _chrgSpeed:
     0000 0000                      1-  463     	dw	0x00
                                    1-  467     .segment "idata"
     0000                           1-  468     _lvdFlag:
     0000 0000                      1-  469     	dw	0x00
                                    1-  473     .segment "idata"
     0000                           1-  474     _chrgCount:
     0000 0000                      1-  475     	dw	0x00
                                    1-  479     .segment "idata"
     0000                           1-  480     _sumR_AIN3_DATA:
     0000 0000 0000                 1-  481     	dw	0x00, 0x00
                                    1-  485     .segment "idata"
     0000                           1-  486     _AIN3Count:
     0000 0000                      1-  487     	dw	0x00
                                    1-  491     .segment "idata"
     0000                           1-  492     _AIN1Count:
     0000 0000                      1-  493     	dw	0x00
                                    1-  497     .segment "idata"
     0000                           1-  498     _sumR_AIN1_DATA:
     0000 0000 0000                 1-  499     	dw	0x00, 0x00
                                    1-  503     .segment "idata"
     0000                           1-  504     _AIN2Count:
     0000 0000                      1-  505     	dw	0x00
                                    1-  509     .segment "idata"
     0000                           1-  510     _sumR_AIN2_DATA:
     0000 0000 0000                 1-  511     	dw	0x00, 0x00
                                    1-  515     .segment "idata"
     0000                           1-  516     _AIN4Count:
     0000 0000                      1-  517     	dw	0x00
                                    1-  521     .segment "idata"
     0000                           1-  522     _sumR_AIN4_DATA:
     0000 0000 0000                 1-  523     	dw	0x00, 0x00
                                    1-  527     .segment "idata"
     0000                           1-  528     _maxTime:
     0000 0000                      1-  529     	dw	0x00
                                    1-  533     .segment "idata"
     0000                           1-  534     _checkTime:
     0000 0000                      1-  535     	dw	0x00
                                    1-  539     .segment "idata"
     0000                           1-  540     _lockTime:
     0000 0000                      1-  541     	dw	0x00
                                    1-  545     .segment "idata"
     0000                           1-  546     _duty2LockTime:
     0000 0064                      1-  547     	dw	0x64
                                    1-  551     .segment "idata"
     0000                           1-  552     _usbTime:
     0000 0000                      1-  553     	dw	0x00
                                    1-  557     .segment "idata"
     0000                           1-  558     _closeTime:
     0000 0000                      1-  559     	dw	0x00
                                    1-  562     ;--------------------------------------------------------
                                    1-  563     ; overlayable items in internal ram 
                                    1-  564     ;--------------------------------------------------------
                                    1-  565     ;	udata_ovr
                                    1-  566     ;--------------------------------------------------------
                                    1-  567     ; reset vector 
                                    1-  568     ;--------------------------------------------------------
                                    1-  569     ORG	0x0000
     0000 3rrr                      1-  570     	LGOTO	__nyc_ny8_startup
                                    1-  571     ;--------------------------------------------------------
                                    1-  572     ; interrupt and initialization code
                                    1-  573     ;--------------------------------------------------------
                                    1-  574     ORG 0x0008
     0008 3rrr                      1-  575     	lgoto	__sdcc_interrupt
                                    1-  577     .segment "code"
     0000                           1-  578     __sdcc_interrupt:
                                    1-  579     ;***
                                    1-  580     ;  pBlock Stats: dbName = I
                                    1-  581     ;***
                                    1-  582     ;2 compiler assigned registers:
                                    1-  583     ;   STK00
                                    1-  584     ;   STK01
                                    1-  585     ;; Starting pCode block
     0000                           1-  586     _isr:
                                    1-  587     ; 0 exit points
                                    1-  588     	.line	76, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  589     	MOVAR	WSAVE
     0001 1503                      1-  590     	SWAPR	STATUS,W
     0002 0283                      1-  591     	CLRR	STATUS
     0003 00rr                      1-  592     	MOVAR	SSAVE
     0004 010A                      1-  593     	MOVR	PCHBUF,W
     0005 028A                      1-  594     	CLRR	PCHBUF
     0006 00rr                      1-  595     	MOVAR	PSAVE
     0007 0104                      1-  596     	MOVR	FSR,W
                                    1-  597     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  598     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  599     	MOVR	STK00,W
                                    1-  600     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  601     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  602     	MOVR	STK01,W
                                    1-  603     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  604     	MOVAR	___sdcc_saved_stk01
                                    1-  605     	.line	78, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  606     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  607     	LGOTO	_00108_DS_
                                    1-  608     	.line	80, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  609     	MOVIA	0x37
     0013 03rr                      1-  610     	ADDAR	_TMR0,F
                                    1-  611     	.line	81, "main.c"; 	intCount++;
                                    1-  612     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  613     	INCR	_intCount,F
                                    1-  614     	.line	82, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  615     	MOVR	_intCount,W
     0017 2464                      1-  616     	XORIA	0x64
     0018 0903                      1-  617     	BTRSS	STATUS,2
     0019 3rrr                      1-  618     	LGOTO	_00108_DS_
                                    1-  619     	.line	84, "main.c"; 	intCount = 0;
     001A 02rr                      1-  620     	CLRR	_intCount
                                    1-  621     	.line	85, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  622     	MOVIA	0x01
                                    1-  623     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  624     	MOVAR	_IntFlag
     001E                           1-  625     _00108_DS_:
                                    1-  626     	.line	88, "main.c"; 	if(INTFbits.PABIF)
     001E 08rr                      1-  627     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  628     	LGOTO	_00110_DS_
                                    1-  629     	.line	90, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  630     	MOVIA	0xfd
     0021 00rr                      1-  631     	MOVAR	_INTF
     0022                           1-  632     _00110_DS_:
                                    1-  633     	.line	93, "main.c"; 	INTF = 0;
     0022 02rr                      1-  634     	CLRR	_INTF
                                    1-  635     	.line	95, "main.c"; 	}
                                    1-  636     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  637     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  638     	MOVAR	STK01
                                    1-  639     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  640     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  641     	MOVAR	STK00
                                    1-  642     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  643     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  644     	MOVAR	FSR
     002C 01rr                      1-  645     	MOVR	PSAVE,W
     002D 008A                      1-  646     	MOVAR	PCHBUF
     002E 0283                      1-  647     	CLRR	STATUS
     002F 15rr                      1-  648     	SWAPR	SSAVE,W
     0030 0083                      1-  649     	MOVAR	STATUS
     0031 15rr                      1-  650     	SWAPR	WSAVE,F
     0032 15rr                      1-  651     	SWAPR	WSAVE,W
     0033                           1-  652     END_OF_INTERRUPT:
     0033 0011                      1-  653     	RETIE	
                                    1-  655     ;--------------------------------------------------------
                                    1-  656     ; code
                                    1-  657     ;--------------------------------------------------------
                                    1-  658     ;***
                                    1-  659     ;  pBlock Stats: dbName = M
                                    1-  660     ;***
                                    1-  661     ;has an exit
                                    1-  662     ;functions called:
                                    1-  663     ;   _init
                                    1-  664     ;   _initAD
                                    1-  665     ;   _checkUsbInput
                                    1-  666     ;   _checkLVD
                                    1-  667     ;   _checkLVD
                                    1-  668     ;   _KeyScan
                                    1-  669     ;   _keyRead
                                    1-  670     ;   _processKey
                                    1-  671     ;   _fanUseable
                                    1-  672     ;   _pwm1Stop
                                    1-  673     ;   _gotoSleep
                                    1-  674     ;   _ledCon
                                    1-  675     ;   _init
                                    1-  676     ;   _initAD
                                    1-  677     ;   _checkUsbInput
                                    1-  678     ;   _checkLVD
                                    1-  679     ;   _checkLVD
                                    1-  680     ;   _KeyScan
                                    1-  681     ;   _keyRead
                                    1-  682     ;   _processKey
                                    1-  683     ;   _fanUseable
                                    1-  684     ;   _pwm1Stop
                                    1-  685     ;   _gotoSleep
                                    1-  686     ;   _ledCon
                                    1-  687     ;1 compiler assigned register :
                                    1-  688     ;   r0x1058
                                    1-  689     ;; Starting pCode block
                                    1-  690     .segment "code"; module=main, function=_main
     0000                           1-  692     _main:
                                    1-  693     ; 2 exit points
                                    1-  694     	.line	100, "main.c"; 	init();
     0000 2rrr                      1-  695     	LCALL	_init
                                    1-  696     	.line	101, "main.c"; 	initAD();
     0001 2rrr                      1-  697     	LCALL	_initAD
                                    1-  698     	.line	102, "main.c"; 	AIN1Count = 0;		//检测输出电流
                                    1-  699     	BANKSEL	_AIN1Count
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  700     	CLRR	_AIN1Count
     0004                           1-  701     _00134_DS_:
                                    1-  702     	.line	105, "main.c"; 	CLRWDT(); 
     0004 0002                      1-  703     	clrwdt
                                    1-  704     	.line	106, "main.c"; 	if(!IntFlag)
                                    1-  705     	BANKSEL	_IntFlag
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1-  706     	MOVR	_IntFlag,W
     0007 0D03                      1-  707     	BTRSC	STATUS,2
     0008 3rrr                      1-  708     	LGOTO	_00134_DS_
                                    1-  709     	.line	108, "main.c"; 	IntFlag = 0;
     0009 02rr                      1-  710     	CLRR	_IntFlag
                                    1-  711     	.line	109, "main.c"; 	if(++checkTime > 30)
                                    1-  712     	BANKSEL	_checkTime
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 05rr                      1-  713     	INCR	_checkTime,F
                                    1-  714     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  715     ;;unsigned compare: left >= lit (0x1F=31), size=1
     000C 211F                      1-  716     	MOVIA	0x1f
     000D 04rr                      1-  717     	SUBAR	_checkTime,W
     000E 0C03                      1-  718     	BTRSC	STATUS,0
                                    1-  719     	.line	110, "main.c"; 	checkTime = 0;
     000F 02rr                      1-  720     	CLRR	_checkTime
                                    1-  721     	.line	111, "main.c"; 	checkUsbInput();
     0010 2rrr                      1-  722     	LCALL	_checkUsbInput
                                    1-  723     	.line	112, "main.c"; 	if(workStep)
                                    1-  724     	BANKSEL	_workStep
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1-  725     	MOVR	_workStep,W
     0013 0D03                      1-  726     	BTRSC	STATUS,2
     0014 3rrr                      1-  727     	LGOTO	_00120_DS_
                                    1-  728     	.line	114, "main.c"; 	checkLVD(C_LVD_2P0V);
     0015 2100                      1-  729     	MOVIA	0x00
     0016 2rrr                      1-  730     	LCALL	_checkLVD
     0017 3rrr                      1-  731     	LGOTO	_00121_DS_
     0018                           1-  732     _00120_DS_:
                                    1-  733     	.line	118, "main.c"; 	checkLVD(C_LVD_2P7V);
     0018 210C                      1-  734     	MOVIA	0x0c
     0019 2rrr                      1-  735     	LCALL	_checkLVD
     001A                           1-  736     _00121_DS_:
                                    1-  737     	.line	121, "main.c"; 	keyClick = keyRead(KeyScan() & 0x80);
     001A 2rrr                      1-  738     	LCALL	_KeyScan
                                    1-  739     	BANKSEL	r0x1058
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  740     	MOVAR	r0x1058
     001D 2180                      1-  741     	MOVIA	0x80
     001E 10rr                      1-  742     	ANDAR	r0x1058,F
     001F 01rr                      1-  743     	MOVR	r0x1058,W
     0020 2rrr                      1-  744     	LCALL	_keyRead
                                    1-  745     	BANKSEL	_keyClick
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 00rr                      1-  746     	MOVAR	_keyClick
                                    1-  747     	.line	122, "main.c"; 	if(keyClick == 1)
     0023 2401                      1-  748     	XORIA	0x01
     0024 0903                      1-  749     	BTRSS	STATUS,2
     0025 3rrr                      1-  750     	LGOTO	_00126_DS_
                                    1-  751     	.line	124, "main.c"; 	processKey();
     0026 2rrr                      1-  752     	LCALL	_processKey
                                    1-  753     	.line	125, "main.c"; 	nullcount = 0;
                                    1-  754     	BANKSEL	_nullcount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1-  755     	CLRR	_nullcount
                                    1-  756     	.line	126, "main.c"; 	if(workStep)
                                    1-  757     	BANKSEL	_workStep
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  758     	MOVR	_workStep,W
     002B 0D03                      1-  759     	BTRSC	STATUS,2
     002C 3rrr                      1-  760     	LGOTO	_00123_DS_
                                    1-  761     	.line	128, "main.c"; 	fanStatus = 1;
     002D 2101                      1-  762     	MOVIA	0x01
                                    1-  763     	BANKSEL	_fanStatus
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1-  764     	MOVAR	_fanStatus
     0030 3rrr                      1-  765     	LGOTO	_00126_DS_
     0031                           1-  766     _00123_DS_:
                                    1-  767     	.line	132, "main.c"; 	fanStatus = 0;
                                    1-  768     	BANKSEL	_fanStatus
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 02rr                      1-  769     	CLRR	_fanStatus
     0033                           1-  770     _00126_DS_:
                                    1-  771     	.line	136, "main.c"; 	if(workStep)
                                    1-  772     	BANKSEL	_workStep
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  773     	MOVR	_workStep,W
     0035 0D03                      1-  774     	BTRSC	STATUS,2
     0036 3rrr                      1-  775     	LGOTO	_00131_DS_
                                    1-  776     	.line	138, "main.c"; 	fanUseable();
     0037 2rrr                      1-  777     	LCALL	_fanUseable
     0038 3rrr                      1-  778     	LGOTO	_00132_DS_
     0039                           1-  779     _00131_DS_:
                                    1-  780     	.line	142, "main.c"; 	sleepDelay++;
                                    1-  781     	BANKSEL	_sleepDelay
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 05rr                      1-  782     	INCR	_sleepDelay,F
                                    1-  783     	.line	143, "main.c"; 	pwm1Stop();
     003B 2rrr                      1-  784     	LCALL	_pwm1Stop
                                    1-  785     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  786     	.line	144, "main.c"; 	if(sleepDelay >= 200 && !usbFlag)
     003C 21C8                      1-  787     	MOVIA	0xc8
                                    1-  788     	BANKSEL	_sleepDelay
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 04rr                      1-  789     	SUBAR	_sleepDelay,W
     003F 0803                      1-  790     	BTRSS	STATUS,0
     0040 3rrr                      1-  791     	LGOTO	_00132_DS_
                                    1-  792     	BANKSEL	_usbFlag
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1-  793     	MOVR	_usbFlag,W
     0043 0D03                      1-  794     	BTRSC	STATUS,2
                                    1-  795     	.line	145, "main.c"; 	gotoSleep();
     0044 2rrr                      1-  796     	LCALL	_gotoSleep
     0045                           1-  797     _00132_DS_:
                                    1-  798     	.line	147, "main.c"; 	ledCon();
     0045 2rrr                      1-  799     	LCALL	_ledCon
     0046 3rrr                      1-  800     	LGOTO	_00134_DS_
                                    1-  801     	.line	149, "main.c"; 	}
                                    1-  802     	RETURN	
     0047 0010                      3-   26 m1      ret
                                    1-  803     ; exit point of _main
                                    1-  805     ;***
                                    1-  806     ;  pBlock Stats: dbName = C
                                    1-  807     ;***
                                    1-  808     ;has an exit
                                    1-  809     ;functions called:
                                    1-  810     ;   _delay
                                    1-  811     ;   _gotoSleep
                                    1-  812     ;   _delay
                                    1-  813     ;   _gotoSleep
                                    1-  814     ;3 compiler assigned registers:
                                    1-  815     ;   r0x1030
                                    1-  816     ;   STK00
                                    1-  817     ;   r0x1031
                                    1-  818     ;; Starting pCode block
                                    1-  819     .segment "code"; module=main, function=_checkLVD
                                    1-  821     ;local variable name mapping:
     0000                           1-  824     _checkLVD:
                                    1-  825     ; 2 exit points
                                    1-  826     	.line	715, "main.c"; 	char checkLVD(unsigned char lvd)
                                    1-  827     	BANKSEL	r0x1030
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  828     	MOVAR	r0x1030
                                    1-  829     	.line	718, "main.c"; 	PCON1 = lvd | C_TMR0_En;
     0002 18rr                      1-  830     	BSR	r0x1030,0
     0003 01rr                      1-  831     	MOVR	r0x1030,W
     0004 000r                      1-  832     	IOST	_PCON1
                                    1-  833     	.line	719, "main.c"; 	delay(80);
     0005 2150                      1-  834     	MOVIA	0x50
     0006 00rr                      1-  835     	MOVAR	STK00
     0007 2100                      1-  836     	MOVIA	0x00
     0008 2rrr                      1-  837     	LCALL	_delay
                                    1-  838     	.line	720, "main.c"; 	if((PCON1 >> 6)&1)
     0009 001r                      1-  839     	IOSTR	_PCON1
                                    1-  840     	BANKSEL	r0x1030
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1-  841     	MOVAR	r0x1030
     000C 2240                      1-  842     	ANDIA	0x40
     000D 0903                      1-  843     	BTRSS	STATUS,2
     000E 2101                      1-  844     	MOVIA	0x01
                                    1-  845     	BANKSEL	r0x1031
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1-  846     	MOVAR	r0x1031
     0011 01rr                      1-  847     	MOVR	r0x1031,W
     0012 0D03                      1-  848     	BTRSC	STATUS,2
     0013 3rrr                      1-  849     	LGOTO	_00598_DS_
                                    1-  850     	.line	722, "main.c"; 	lvdFlag = 0;
                                    1-  851     	BANKSEL	r0x1030
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 02rr                      1-  852     	CLRR	r0x1030
     0016 3rrr                      1-  853     	LGOTO	_00599_DS_
     0017                           1-  854     _00598_DS_:
                                    1-  855     	.line	726, "main.c"; 	lvdFlag = 1;
     0017 2101                      1-  856     	MOVIA	0x01
                                    1-  857     	BANKSEL	r0x1030
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1-  858     	MOVAR	r0x1030
                                    1-  859     	.line	727, "main.c"; 	if(++sleepDelay >= 200 && !usbFlag)
                                    1-  860     	BANKSEL	_sleepDelay
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 05rr                      1-  861     	INCR	_sleepDelay,F
                                    1-  862     ;;unsigned compare: left < lit (0xC8=200), size=1
     001C 21C8                      1-  863     	MOVIA	0xc8
     001D 04rr                      1-  864     	SUBAR	_sleepDelay,W
     001E 0803                      1-  865     	BTRSS	STATUS,0
     001F 3rrr                      1-  866     	LGOTO	_00599_DS_
                                    1-  867     	BANKSEL	_usbFlag
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  868     	MOVR	_usbFlag,W
     0022 0903                      1-  869     	BTRSS	STATUS,2
     0023 3rrr                      1-  870     	LGOTO	_00599_DS_
                                    1-  871     	.line	729, "main.c"; 	workStep = 0;
                                    1-  872     	BANKSEL	_workStep
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1-  873     	CLRR	_workStep
                                    1-  874     	.line	730, "main.c"; 	gotoSleep();	
     0026 2rrr                      1-  875     	LCALL	_gotoSleep
     0027                           1-  876     _00599_DS_:
                                    1-  877     	.line	733, "main.c"; 	return lvdFlag;
                                    1-  878     	BANKSEL	r0x1030
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  879     	MOVR	r0x1030,W
                                    1-  880     	.line	734, "main.c"; 	}	
                                    1-  881     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1-  882     ; exit point of _checkLVD
                                    1-  884     ;***
                                    1-  885     ;  pBlock Stats: dbName = C
                                    1-  886     ;***
                                    1-  887     ;has an exit
                                    1-  888     ;; Starting pCode block
                                    1-  889     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  891     _F_wait_eoc:
                                    1-  892     ; 2 exit points
     0000                           1-  893     _00589_DS_:
                                    1-  894     	.line	709, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  895     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  896     	LGOTO	_00589_DS_
                                    1-  897     	.line	711, "main.c"; 	}
                                    1-  898     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  899     ; exit point of _F_wait_eoc
                                    1-  901     ;***
                                    1-  902     ;  pBlock Stats: dbName = C
                                    1-  903     ;***
                                    1-  904     ;has an exit
                                    1-  905     ;functions called:
                                    1-  906     ;   _delay
                                    1-  907     ;   _F_wait_eoc
                                    1-  908     ;   _delay
                                    1-  909     ;   _F_wait_eoc
                                    1-  910     ;7 compiler assigned registers:
                                    1-  911     ;   r0x1032
                                    1-  912     ;   STK00
                                    1-  913     ;   r0x1033
                                    1-  914     ;   r0x1034
                                    1-  915     ;   r0x1035
                                    1-  916     ;   r0x1036
                                    1-  917     ;   r0x1037
                                    1-  918     ;; Starting pCode block
                                    1-  919     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1-  921     ;local variable name mapping:
     0000                           1-  924     _F_AIN4_Convert:
                                    1-  925     ; 2 exit points
                                    1-  926     	.line	688, "main.c"; 	void F_AIN4_Convert(char count)
                                    1-  927     	BANKSEL	r0x1032
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  928     	MOVAR	r0x1032
                                    1-  929     	.line	691, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN0(PA0) pad as ADC input
     0002 2194                      1-  930     	MOVIA	0x94
     0003 00rr                      1-  931     	MOVAR	_ADMD
                                    1-  932     	.line	692, "main.c"; 	delay(100);
     0004 2164                      1-  933     	MOVIA	0x64
     0005 00rr                      1-  934     	MOVAR	STK00
     0006 2100                      1-  935     	MOVIA	0x00
     0007 2rrr                      1-  936     	LCALL	_delay
                                    1-  937     	.line	693, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  938     	MOVIA	0x01
                                    1-  939     	BANKSEL	r0x1033
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  940     	MOVAR	r0x1033
     000B                           1-  941     _00582_DS_:
                                    1-  942     	BANKSEL	r0x1033
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1-  943     	MOVR	r0x1033,W
                                    1-  944     	BANKSEL	r0x1032
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  945     	SUBAR	r0x1032,W
     000F 0803                      1-  946     	BTRSS	STATUS,0
     0010 3rrr                      1-  947     	LGOTO	_00584_DS_
                                    1-  948     	.line	695, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0011 1Brr                      1-  949     	BSR	_ADMDbits,6
                                    1-  950     	.line	696, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0012 2rrr                      1-  951     	LCALL	_F_wait_eoc
                                    1-  952     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  953     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1-  954     	.line	697, "main.c"; 	if(i>4)
     0013 2105                      1-  955     	MOVIA	0x05
                                    1-  956     	BANKSEL	r0x1033
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1-  957     	SUBAR	r0x1033,W
     0016 0803                      1-  958     	BTRSS	STATUS,0
     0017 3rrr                      1-  959     	LGOTO	_00001_DS_
                                    1-  960     	.line	699, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1-  961     	MOVIA	0x0f
     0019 10rr                      1-  962     	ANDAR	_ADR,W
                                    1-  963     ;;3	MOVAR	r0x1034
                                    1-  964     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1-  965     	ADDAR	_R_AIN4_DATA_LB,F
                                    1-  966     	.line	700, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1-  967     	MOVR	_ADD,W
                                    1-  968     	BANKSEL	r0x1034
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  969     	MOVAR	r0x1034
                                    1-  970     ;;1	CLRR	r0x1035
                                    1-  971     ;;115	MOVR	r0x1034,W
                                    1-  972     ;;113	MOVAR	r0x1036
     001F 2100                      1-  973     	MOVIA	0x00
                                    1-  974     	BANKSEL	r0x1037
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1-  975     	MOVAR	r0x1037
                                    1-  976     ;;114	MOVR	r0x1036,W
                                    1-  977     	BANKSEL	r0x1034
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  978     	MOVR	r0x1034,W
                                    1-  979     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1-  980     	ADDAR	_R_AIN4_DATA,F
                                    1-  981     	BANKSEL	r0x1037
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  982     	MOVR	r0x1037,W
     0028 0C03                      1-  983     	BTRSC	STATUS,0
     0029 05rr                      1-  984     	INCR	r0x1037,W
     002A 0D03                      1-  985     	BTRSC	STATUS,2
     002B 3rrr                      1-  986     	LGOTO	_00001_DS_
                                    1-  987     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1-  988     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1-  989     _00001_DS_:
                                    1-  990     	.line	693, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  991     	BANKSEL	r0x1033
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1-  992     	INCR	r0x1033,F
     0030 3rrr                      1-  993     	LGOTO	_00582_DS_
     0031                           1-  994     _00584_DS_:
                                    1-  995     	.line	703, "main.c"; 	}
                                    1-  996     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1-  997     ; exit point of _F_AIN4_Convert
                                    1-  999     ;***
                                    1- 1000     ;  pBlock Stats: dbName = C
                                    1- 1001     ;***
                                    1- 1002     ;has an exit
                                    1- 1003     ;functions called:
                                    1- 1004     ;   _delay
                                    1- 1005     ;   _F_wait_eoc
                                    1- 1006     ;   _delay
                                    1- 1007     ;   _F_wait_eoc
                                    1- 1008     ;7 compiler assigned registers:
                                    1- 1009     ;   r0x1038
                                    1- 1010     ;   STK00
                                    1- 1011     ;   r0x1039
                                    1- 1012     ;   r0x103A
                                    1- 1013     ;   r0x103B
                                    1- 1014     ;   r0x103C
                                    1- 1015     ;   r0x103D
                                    1- 1016     ;; Starting pCode block
                                    1- 1017     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1019     ;local variable name mapping:
     0000                           1- 1022     _F_AIN3_Convert:
                                    1- 1023     ; 2 exit points
                                    1- 1024     	.line	671, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1025     	BANKSEL	r0x1038
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1026     	MOVAR	r0x1038
                                    1- 1027     	.line	674, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN0(PA0) pad as ADC input
     0002 2193                      1- 1028     	MOVIA	0x93
     0003 00rr                      1- 1029     	MOVAR	_ADMD
                                    1- 1030     	.line	675, "main.c"; 	delay(100);
     0004 2164                      1- 1031     	MOVIA	0x64
     0005 00rr                      1- 1032     	MOVAR	STK00
     0006 2100                      1- 1033     	MOVIA	0x00
     0007 2rrr                      1- 1034     	LCALL	_delay
                                    1- 1035     	.line	676, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1- 1036     	MOVIA	0x01
                                    1- 1037     	BANKSEL	r0x1039
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1038     	MOVAR	r0x1039
     000B                           1- 1039     _00571_DS_:
                                    1- 1040     	BANKSEL	r0x1039
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1041     	MOVR	r0x1039,W
                                    1- 1042     	BANKSEL	r0x1038
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 1043     	SUBAR	r0x1038,W
     000F 0803                      1- 1044     	BTRSS	STATUS,0
     0010 3rrr                      1- 1045     	LGOTO	_00573_DS_
                                    1- 1046     	.line	678, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0011 1Brr                      1- 1047     	BSR	_ADMDbits,6
                                    1- 1048     	.line	679, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0012 2rrr                      1- 1049     	LCALL	_F_wait_eoc
                                    1- 1050     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1051     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 1052     	.line	680, "main.c"; 	if(i>4)
     0013 2105                      1- 1053     	MOVIA	0x05
                                    1- 1054     	BANKSEL	r0x1039
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1055     	SUBAR	r0x1039,W
     0016 0803                      1- 1056     	BTRSS	STATUS,0
     0017 3rrr                      1- 1057     	LGOTO	_00002_DS_
                                    1- 1058     	.line	682, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1059     	MOVIA	0x0f
     0019 10rr                      1- 1060     	ANDAR	_ADR,W
                                    1- 1061     ;;3	MOVAR	r0x103A
                                    1- 1062     	BANKSEL	_R_AIN3_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1063     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1064     	.line	683, "main.c"; 	R_AIN3_DATA    += ADD; 
     001C 01rr                      1- 1065     	MOVR	_ADD,W
                                    1- 1066     	BANKSEL	r0x103A
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1067     	MOVAR	r0x103A
                                    1- 1068     ;;1	CLRR	r0x103B
                                    1- 1069     ;;112	MOVR	r0x103A,W
                                    1- 1070     ;;110	MOVAR	r0x103C
     001F 2100                      1- 1071     	MOVIA	0x00
                                    1- 1072     	BANKSEL	r0x103D
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1073     	MOVAR	r0x103D
                                    1- 1074     ;;111	MOVR	r0x103C,W
                                    1- 1075     	BANKSEL	r0x103A
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1076     	MOVR	r0x103A,W
                                    1- 1077     	BANKSEL	_R_AIN3_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1078     	ADDAR	_R_AIN3_DATA,F
                                    1- 1079     	BANKSEL	r0x103D
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1080     	MOVR	r0x103D,W
     0028 0C03                      1- 1081     	BTRSC	STATUS,0
     0029 05rr                      1- 1082     	INCR	r0x103D,W
     002A 0D03                      1- 1083     	BTRSC	STATUS,2
     002B 3rrr                      1- 1084     	LGOTO	_00002_DS_
                                    1- 1085     	BANKSEL	_R_AIN3_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1086     	ADDAR	(_R_AIN3_DATA + 1),F
     002E                           1- 1087     _00002_DS_:
                                    1- 1088     	.line	676, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1089     	BANKSEL	r0x1039
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1090     	INCR	r0x1039,F
     0030 3rrr                      1- 1091     	LGOTO	_00571_DS_
     0031                           1- 1092     _00573_DS_:
                                    1- 1093     	.line	686, "main.c"; 	}
                                    1- 1094     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1095     ; exit point of _F_AIN3_Convert
                                    1- 1097     ;***
                                    1- 1098     ;  pBlock Stats: dbName = C
                                    1- 1099     ;***
                                    1- 1100     ;has an exit
                                    1- 1101     ;functions called:
                                    1- 1102     ;   _delay
                                    1- 1103     ;   _F_wait_eoc
                                    1- 1104     ;   _delay
                                    1- 1105     ;   _F_wait_eoc
                                    1- 1106     ;7 compiler assigned registers:
                                    1- 1107     ;   r0x103E
                                    1- 1108     ;   STK00
                                    1- 1109     ;   r0x103F
                                    1- 1110     ;   r0x1040
                                    1- 1111     ;   r0x1041
                                    1- 1112     ;   r0x1042
                                    1- 1113     ;   r0x1043
                                    1- 1114     ;; Starting pCode block
                                    1- 1115     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1117     ;local variable name mapping:
     0000                           1- 1120     _F_AIN2_Convert:
                                    1- 1121     ; 2 exit points
                                    1- 1122     	.line	654, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1123     	BANKSEL	r0x103E
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1124     	MOVAR	r0x103E
                                    1- 1125     	.line	657, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN0(PA0) pad as ADC input
     0002 2192                      1- 1126     	MOVIA	0x92
     0003 00rr                      1- 1127     	MOVAR	_ADMD
                                    1- 1128     	.line	658, "main.c"; 	delay(100);
     0004 2164                      1- 1129     	MOVIA	0x64
     0005 00rr                      1- 1130     	MOVAR	STK00
     0006 2100                      1- 1131     	MOVIA	0x00
     0007 2rrr                      1- 1132     	LCALL	_delay
                                    1- 1133     	.line	659, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1- 1134     	MOVIA	0x01
                                    1- 1135     	BANKSEL	r0x103F
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1136     	MOVAR	r0x103F
     000B                           1- 1137     _00560_DS_:
                                    1- 1138     	BANKSEL	r0x103F
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1139     	MOVR	r0x103F,W
                                    1- 1140     	BANKSEL	r0x103E
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 1141     	SUBAR	r0x103E,W
     000F 0803                      1- 1142     	BTRSS	STATUS,0
     0010 3rrr                      1- 1143     	LGOTO	_00562_DS_
                                    1- 1144     	.line	661, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0011 1Brr                      1- 1145     	BSR	_ADMDbits,6
                                    1- 1146     	.line	662, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0012 2rrr                      1- 1147     	LCALL	_F_wait_eoc
                                    1- 1148     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1149     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 1150     	.line	663, "main.c"; 	if(i>4)
     0013 2105                      1- 1151     	MOVIA	0x05
                                    1- 1152     	BANKSEL	r0x103F
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1153     	SUBAR	r0x103F,W
     0016 0803                      1- 1154     	BTRSS	STATUS,0
     0017 3rrr                      1- 1155     	LGOTO	_00003_DS_
                                    1- 1156     	.line	665, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1157     	MOVIA	0x0f
     0019 10rr                      1- 1158     	ANDAR	_ADR,W
                                    1- 1159     ;;3	MOVAR	r0x1040
                                    1- 1160     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1161     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1162     	.line	666, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1163     	MOVR	_ADD,W
                                    1- 1164     	BANKSEL	r0x1040
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1165     	MOVAR	r0x1040
                                    1- 1166     ;;1	CLRR	r0x1041
                                    1- 1167     ;;109	MOVR	r0x1040,W
                                    1- 1168     ;;107	MOVAR	r0x1042
     001F 2100                      1- 1169     	MOVIA	0x00
                                    1- 1170     	BANKSEL	r0x1043
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1171     	MOVAR	r0x1043
                                    1- 1172     ;;108	MOVR	r0x1042,W
                                    1- 1173     	BANKSEL	r0x1040
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1174     	MOVR	r0x1040,W
                                    1- 1175     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1176     	ADDAR	_R_AIN2_DATA,F
                                    1- 1177     	BANKSEL	r0x1043
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1178     	MOVR	r0x1043,W
     0028 0C03                      1- 1179     	BTRSC	STATUS,0
     0029 05rr                      1- 1180     	INCR	r0x1043,W
     002A 0D03                      1- 1181     	BTRSC	STATUS,2
     002B 3rrr                      1- 1182     	LGOTO	_00003_DS_
                                    1- 1183     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1184     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1185     _00003_DS_:
                                    1- 1186     	.line	659, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1187     	BANKSEL	r0x103F
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1188     	INCR	r0x103F,F
     0030 3rrr                      1- 1189     	LGOTO	_00560_DS_
     0031                           1- 1190     _00562_DS_:
                                    1- 1191     	.line	669, "main.c"; 	}
                                    1- 1192     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1193     ; exit point of _F_AIN2_Convert
                                    1- 1195     ;***
                                    1- 1196     ;  pBlock Stats: dbName = C
                                    1- 1197     ;***
                                    1- 1198     ;has an exit
                                    1- 1199     ;functions called:
                                    1- 1200     ;   _delay
                                    1- 1201     ;   _F_wait_eoc
                                    1- 1202     ;   _delay
                                    1- 1203     ;   _F_wait_eoc
                                    1- 1204     ;7 compiler assigned registers:
                                    1- 1205     ;   r0x1044
                                    1- 1206     ;   STK00
                                    1- 1207     ;   r0x1045
                                    1- 1208     ;   r0x1046
                                    1- 1209     ;   r0x1047
                                    1- 1210     ;   r0x1048
                                    1- 1211     ;   r0x1049
                                    1- 1212     ;; Starting pCode block
                                    1- 1213     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1- 1215     ;local variable name mapping:
     0000                           1- 1218     _F_AIN1_Convert:
                                    1- 1219     ; 2 exit points
                                    1- 1220     	.line	636, "main.c"; 	void F_AIN1_Convert(char count)
                                    1- 1221     	BANKSEL	r0x1044
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1222     	MOVAR	r0x1044
                                    1- 1223     	.line	639, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN0(PA0) pad as ADC input
     0002 2191                      1- 1224     	MOVIA	0x91
     0003 00rr                      1- 1225     	MOVAR	_ADMD
                                    1- 1226     	.line	640, "main.c"; 	delay(100);
     0004 2164                      1- 1227     	MOVIA	0x64
     0005 00rr                      1- 1228     	MOVAR	STK00
     0006 2100                      1- 1229     	MOVIA	0x00
     0007 2rrr                      1- 1230     	LCALL	_delay
                                    1- 1231     	.line	641, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1- 1232     	MOVIA	0x01
                                    1- 1233     	BANKSEL	r0x1045
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1234     	MOVAR	r0x1045
     000B                           1- 1235     _00549_DS_:
                                    1- 1236     	BANKSEL	r0x1045
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1237     	MOVR	r0x1045,W
                                    1- 1238     	BANKSEL	r0x1044
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 1239     	SUBAR	r0x1044,W
     000F 0803                      1- 1240     	BTRSS	STATUS,0
     0010 3rrr                      1- 1241     	LGOTO	_00551_DS_
                                    1- 1242     	.line	643, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0011 1Brr                      1- 1243     	BSR	_ADMDbits,6
                                    1- 1244     	.line	644, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0012 2rrr                      1- 1245     	LCALL	_F_wait_eoc
                                    1- 1246     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1247     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 1248     	.line	645, "main.c"; 	if(i>4)
     0013 2105                      1- 1249     	MOVIA	0x05
                                    1- 1250     	BANKSEL	r0x1045
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1251     	SUBAR	r0x1045,W
     0016 0803                      1- 1252     	BTRSS	STATUS,0
     0017 3rrr                      1- 1253     	LGOTO	_00004_DS_
                                    1- 1254     	.line	647, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1255     	MOVIA	0x0f
     0019 10rr                      1- 1256     	ANDAR	_ADR,W
                                    1- 1257     ;;3	MOVAR	r0x1046
                                    1- 1258     	BANKSEL	_R_AIN1_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1259     	ADDAR	_R_AIN1_DATA_LB,F
                                    1- 1260     	.line	648, "main.c"; 	R_AIN1_DATA    += ADD; 
     001C 01rr                      1- 1261     	MOVR	_ADD,W
                                    1- 1262     	BANKSEL	r0x1046
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1263     	MOVAR	r0x1046
                                    1- 1264     ;;1	CLRR	r0x1047
                                    1- 1265     ;;106	MOVR	r0x1046,W
                                    1- 1266     ;;104	MOVAR	r0x1048
     001F 2100                      1- 1267     	MOVIA	0x00
                                    1- 1268     	BANKSEL	r0x1049
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1269     	MOVAR	r0x1049
                                    1- 1270     ;;105	MOVR	r0x1048,W
                                    1- 1271     	BANKSEL	r0x1046
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1272     	MOVR	r0x1046,W
                                    1- 1273     	BANKSEL	_R_AIN1_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1274     	ADDAR	_R_AIN1_DATA,F
                                    1- 1275     	BANKSEL	r0x1049
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1276     	MOVR	r0x1049,W
     0028 0C03                      1- 1277     	BTRSC	STATUS,0
     0029 05rr                      1- 1278     	INCR	r0x1049,W
     002A 0D03                      1- 1279     	BTRSC	STATUS,2
     002B 3rrr                      1- 1280     	LGOTO	_00004_DS_
                                    1- 1281     	BANKSEL	_R_AIN1_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1282     	ADDAR	(_R_AIN1_DATA + 1),F
     002E                           1- 1283     _00004_DS_:
                                    1- 1284     	.line	641, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1285     	BANKSEL	r0x1045
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1286     	INCR	r0x1045,F
     0030 3rrr                      1- 1287     	LGOTO	_00549_DS_
     0031                           1- 1288     _00551_DS_:
                                    1- 1289     	.line	651, "main.c"; 	}
                                    1- 1290     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1291     ; exit point of _F_AIN1_Convert
                                    1- 1293     ;***
                                    1- 1294     ;  pBlock Stats: dbName = C
                                    1- 1295     ;***
                                    1- 1296     ;has an exit
                                    1- 1297     ;functions called:
                                    1- 1298     ;   _F_AIN4_Convert
                                    1- 1299     ;   __divuint
                                    1- 1300     ;   __mulint
                                    1- 1301     ;   __divuint
                                    1- 1302     ;   __mulint
                                    1- 1303     ;   __divuint
                                    1- 1304     ;   _F_AIN4_Convert
                                    1- 1305     ;   __divuint
                                    1- 1306     ;   __mulint
                                    1- 1307     ;   __divuint
                                    1- 1308     ;   __mulint
                                    1- 1309     ;   __divuint
                                    1- 1310     ;7 compiler assigned registers:
                                    1- 1311     ;   r0x104A
                                    1- 1312     ;   r0x104B
                                    1- 1313     ;   r0x104C
                                    1- 1314     ;   r0x104D
                                    1- 1315     ;   STK02
                                    1- 1316     ;   STK01
                                    1- 1317     ;   STK00
                                    1- 1318     ;; Starting pCode block
                                    1- 1319     .segment "code"; module=main, function=_checkBat
     0000                           1- 1321     _checkBat:
                                    1- 1322     ; 2 exit points
                                    1- 1323     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1324     ;;unsigned compare: left >= lit (0x15=21), size=1
                                    1- 1325     	.line	589, "main.c"; 	if(checkTime > 20 || checkTime < 10)
     0000 2115                      1- 1326     	MOVIA	0x15
                                    1- 1327     	BANKSEL	_checkTime
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1328     	SUBAR	_checkTime,W
     0003 0C03                      1- 1329     	BTRSC	STATUS,0
     0004 3rrr                      1- 1330     	LGOTO	_00492_DS_
                                    1- 1331     ;;unsigned compare: left < lit (0xA=10), size=1
     0005 210A                      1- 1332     	MOVIA	0x0a
     0006 04rr                      1- 1333     	SUBAR	_checkTime,W
     0007 0803                      1- 1334     	BTRSS	STATUS,0
     0008                           1- 1335     _00492_DS_:
                                    1- 1336     	.line	590, "main.c"; 	return;
     0008 3rrr                      1- 1337     	LGOTO	_00510_DS_
                                    1- 1338     	.line	591, "main.c"; 	PACON = C_PA4_AIN4;
     0009 2110                      1- 1339     	MOVIA	0x10
     000A 00rr                      1- 1340     	MOVAR	_PACON
                                    1- 1341     	.line	592, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;
                                    1- 1342     	BANKSEL	_R_AIN4_DATA_LB
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1- 1343     	CLRR	_R_AIN4_DATA_LB
                                    1- 1344     	BANKSEL	_R_AIN4_DATA
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1- 1345     	CLRR	_R_AIN4_DATA
     000F 02rr                      1- 1346     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1347     	.line	593, "main.c"; 	F_AIN4_Convert(12);					// execute AIN0 ADC converting 8 times
     0010 210C                      1- 1348     	MOVIA	0x0c
     0011 2rrr                      1- 1349     	LCALL	_F_AIN4_Convert
                                    1- 1350     	.line	594, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1351     	BANKSEL	_R_AIN4_DATA
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 15rr                      1- 1352     	SWAPR	(_R_AIN4_DATA + 1),W
     0014 22F0                      1- 1353     	ANDIA	0xf0
     0015 00rr                      1- 1354     	MOVAR	(_R_AIN4_DATA + 1)
     0016 15rr                      1- 1355     	SWAPR	_R_AIN4_DATA,W
     0017 00rr                      1- 1356     	MOVAR	_R_AIN4_DATA
     0018 220F                      1- 1357     	ANDIA	0x0f
     0019 11rr                      1- 1358     	IORAR	(_R_AIN4_DATA + 1),F
     001A 12rr                      1- 1359     	XORAR	_R_AIN4_DATA,F
                                    1- 1360     	.line	595, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     001B 21F0                      1- 1361     	MOVIA	0xf0
                                    1- 1362     	BANKSEL	_R_AIN4_DATA_LB
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 10rr                      1- 1363     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1364     	.line	596, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     001E 01rr                      1- 1365     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1366     	BANKSEL	r0x104A
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 1367     	MOVAR	r0x104A
                                    1- 1368     	BANKSEL	r0x104B
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 02rr                      1- 1369     	CLRR	r0x104B
                                    1- 1370     ;;103	MOVR	r0x104A,W
                                    1- 1371     ;;101	MOVAR	r0x104C
     0023 2100                      1- 1372     	MOVIA	0x00
                                    1- 1373     	BANKSEL	r0x104D
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 1374     	MOVAR	r0x104D
                                    1- 1375     ;;102	MOVR	r0x104C,W
                                    1- 1376     	BANKSEL	r0x104A
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1377     	MOVR	r0x104A,W
                                    1- 1378     	BANKSEL	_R_AIN4_DATA
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 03rr                      1- 1379     	ADDAR	_R_AIN4_DATA,F
                                    1- 1380     	BANKSEL	r0x104D
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1- 1381     	MOVR	r0x104D,W
     002C 0C03                      1- 1382     	BTRSC	STATUS,0
     002D 05rr                      1- 1383     	INCR	r0x104D,W
     002E 0D03                      1- 1384     	BTRSC	STATUS,2
     002F 3rrr                      1- 1385     	LGOTO	_00005_DS_
                                    1- 1386     	BANKSEL	_R_AIN4_DATA
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 03rr                      1- 1387     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1388     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0032                           1- 1389     _00005_DS_:
                                    1- 1390     	.line	597, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0032 1C03                      1- 1391     	BCR	STATUS,0
                                    1- 1392     	BANKSEL	_R_AIN4_DATA
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 13rr                      1- 1393     	RRR	(_R_AIN4_DATA + 1),F
     0035 13rr                      1- 1394     	RRR	_R_AIN4_DATA,F
                                    1- 1395     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0036 1C03                      1- 1396     	BCR	STATUS,0
     0037 13rr                      1- 1397     	RRR	(_R_AIN4_DATA + 1),F
     0038 13rr                      1- 1398     	RRR	_R_AIN4_DATA,F
                                    1- 1399     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0039 1C03                      1- 1400     	BCR	STATUS,0
     003A 13rr                      1- 1401     	RRR	(_R_AIN4_DATA + 1),F
     003B 13rr                      1- 1402     	RRR	_R_AIN4_DATA,F
                                    1- 1403     	.line	598, "main.c"; 	sumR_AIN4_DATA +=	R_AIN4_DATA;
     003C 01rr                      1- 1404     	MOVR	_R_AIN4_DATA,W
                                    1- 1405     	BANKSEL	_sumR_AIN4_DATA
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 03rr                      1- 1406     	ADDAR	_sumR_AIN4_DATA,F
                                    1- 1407     	BANKSEL	_R_AIN4_DATA
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1- 1408     	MOVR	(_R_AIN4_DATA + 1),W
     0041 0C03                      1- 1409     	BTRSC	STATUS,0
     0042 05rr                      1- 1410     	INCR	(_R_AIN4_DATA + 1),W
     0043 0D03                      1- 1411     	BTRSC	STATUS,2
     0044 3rrr                      1- 1412     	LGOTO	_00006_DS_
                                    1- 1413     	BANKSEL	_sumR_AIN4_DATA
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 03rr                      1- 1414     	ADDAR	(_sumR_AIN4_DATA + 1),F
     0047                           1- 1415     _00006_DS_:
                                    1- 1416     	.line	599, "main.c"; 	if(++AIN4Count >= 5)
                                    1- 1417     	BANKSEL	_AIN4Count
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 05rr                      1- 1418     	INCR	_AIN4Count,F
                                    1- 1419     ;;unsigned compare: left < lit (0x5=5), size=1
     0049 2105                      1- 1420     	MOVIA	0x05
     004A 04rr                      1- 1421     	SUBAR	_AIN4Count,W
     004B 0803                      1- 1422     	BTRSS	STATUS,0
     004C 3rrr                      1- 1423     	LGOTO	_00510_DS_
                                    1- 1424     	.line	602, "main.c"; 	R_AIN4_DATA = sumR_AIN4_DATA/AIN4Count;
     004D 01rr                      1- 1425     	MOVR	_AIN4Count,W
                                    1- 1426     	BANKSEL	r0x104A
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 00rr                      1- 1427     	MOVAR	r0x104A
                                    1- 1428     	BANKSEL	r0x104B
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 02rr                      1- 1429     	CLRR	r0x104B
                                    1- 1430     	BANKSEL	r0x104A
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1- 1431     	MOVR	r0x104A,W
     0054 00rr                      1- 1432     	MOVAR	STK02
     0055 2100                      1- 1433     	MOVIA	0x00
     0056 00rr                      1- 1434     	MOVAR	STK01
                                    1- 1435     	BANKSEL	_sumR_AIN4_DATA
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 01rr                      1- 1436     	MOVR	_sumR_AIN4_DATA,W
     0059 00rr                      1- 1437     	MOVAR	STK00
     005A 01rr                      1- 1438     	MOVR	(_sumR_AIN4_DATA + 1),W
     005B 2rrr                      1- 1439     	LCALL	__divuint
                                    1- 1440     	BANKSEL	_R_AIN4_DATA
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 00rr                      1- 1441     	MOVAR	(_R_AIN4_DATA + 1)
     005E 01rr                      1- 1442     	MOVR	STK00,W
     005F 00rr                      1- 1443     	MOVAR	_R_AIN4_DATA
                                    1- 1444     	.line	603, "main.c"; 	sumR_AIN4_DATA = 0;
                                    1- 1445     	BANKSEL	_sumR_AIN4_DATA
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 02rr                      1- 1446     	CLRR	_sumR_AIN4_DATA
     0062 02rr                      1- 1447     	CLRR	(_sumR_AIN4_DATA + 1)
                                    1- 1448     	.line	604, "main.c"; 	AIN4Count = 0;
                                    1- 1449     	BANKSEL	_AIN4Count
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 02rr                      1- 1450     	CLRR	_AIN4Count
                                    1- 1451     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1452     ;;unsigned compare: left >= lit (0x8E9=2281), size=2
                                    1- 1453     	.line	605, "main.c"; 	if(R_AIN4_DATA > 2280)	//电压大于4.2V
     0065 2108                      1- 1454     	MOVIA	0x08
                                    1- 1455     	BANKSEL	_R_AIN4_DATA
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 04rr                      1- 1456     	SUBAR	(_R_AIN4_DATA + 1),W
     0068 0903                      1- 1457     	BTRSS	STATUS,2
     0069 3rrr                      1- 1458     	LGOTO	_00536_DS_
     006A 21E9                      1- 1459     	MOVIA	0xe9
     006B 04rr                      1- 1460     	SUBAR	_R_AIN4_DATA,W
     006C                           1- 1461     _00536_DS_:
     006C 0803                      1- 1462     	BTRSS	STATUS,0
     006D 3rrr                      1- 1463     	LGOTO	_00506_DS_
                                    1- 1464     	.line	606, "main.c"; 	chrgSpeed = 0;
                                    1- 1465     	BANKSEL	_chrgSpeed
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 02rr                      1- 1466     	CLRR	_chrgSpeed
     0070 3rrr                      1- 1467     	LGOTO	_00510_DS_
                                    1- 1468     ;;unsigned compare: left < lit (0x6A4=1700), size=2
     0071                           1- 1469     _00506_DS_:
                                    1- 1470     	.line	607, "main.c"; 	else if(R_AIN4_DATA < 1700)	//电池电压小于3.0V
     0071 2106                      1- 1471     	MOVIA	0x06
                                    1- 1472     	BANKSEL	_R_AIN4_DATA
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 04rr                      1- 1473     	SUBAR	(_R_AIN4_DATA + 1),W
     0074 0903                      1- 1474     	BTRSS	STATUS,2
     0075 3rrr                      1- 1475     	LGOTO	_00537_DS_
     0076 21A4                      1- 1476     	MOVIA	0xa4
     0077 04rr                      1- 1477     	SUBAR	_R_AIN4_DATA,W
     0078                           1- 1478     _00537_DS_:
     0078 0C03                      1- 1479     	BTRSC	STATUS,0
     0079 3rrr                      1- 1480     	LGOTO	_00503_DS_
                                    1- 1481     	.line	608, "main.c"; 	chrgSpeed = 0;
                                    1- 1482     	BANKSEL	_chrgSpeed
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1- 1483     	CLRR	_chrgSpeed
     007C 3rrr                      1- 1484     	LGOTO	_00510_DS_
                                    1- 1485     ;;unsigned compare: left < lit (0x708=1800), size=2
     007D                           1- 1486     _00503_DS_:
                                    1- 1487     	.line	611, "main.c"; 	if(R_AIN4_DATA < 1800)		//电池电压3.0V - 3.5V
     007D 2107                      1- 1488     	MOVIA	0x07
                                    1- 1489     	BANKSEL	_R_AIN4_DATA
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 04rr                      1- 1490     	SUBAR	(_R_AIN4_DATA + 1),W
     0080 0903                      1- 1491     	BTRSS	STATUS,2
     0081 3rrr                      1- 1492     	LGOTO	_00538_DS_
     0082 2108                      1- 1493     	MOVIA	0x08
     0083 04rr                      1- 1494     	SUBAR	_R_AIN4_DATA,W
     0084                           1- 1495     _00538_DS_:
     0084 0C03                      1- 1496     	BTRSC	STATUS,0
     0085 3rrr                      1- 1497     	LGOTO	_00500_DS_
                                    1- 1498     	.line	613, "main.c"; 	duty2 = (((2280 - R_AIN4_DATA)*32)/744)-1;
                                    1- 1499     	BANKSEL	_R_AIN4_DATA
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 01rr                      1- 1500     	MOVR	_R_AIN4_DATA,W
     0088 27E8                      1- 1501     	SUBIA	0xe8
                                    1- 1502     	BANKSEL	r0x104A
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 00rr                      1- 1503     	MOVAR	r0x104A
                                    1- 1504     	BANKSEL	_R_AIN4_DATA
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 01rr                      1- 1505     	MOVR	(_R_AIN4_DATA + 1),W
     008D 0803                      1- 1506     	BTRSS	STATUS,0
     008E 05rr                      1- 1507     	INCR	(_R_AIN4_DATA + 1),W
     008F 2708                      1- 1508     	SUBIA	0x08
                                    1- 1509     	BANKSEL	r0x104B
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 00rr                      1- 1510     	MOVAR	r0x104B
                                    1- 1511     	BANKSEL	r0x104A
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 01rr                      1- 1512     	MOVR	r0x104A,W
     0094 00rr                      1- 1513     	MOVAR	STK02
                                    1- 1514     	BANKSEL	r0x104B
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 01rr                      1- 1515     	MOVR	r0x104B,W
     0097 00rr                      1- 1516     	MOVAR	STK01
     0098 2120                      1- 1517     	MOVIA	0x20
     0099 00rr                      1- 1518     	MOVAR	STK00
     009A 2100                      1- 1519     	MOVIA	0x00
     009B 2rrr                      1- 1520     	LCALL	__mulint
                                    1- 1521     	BANKSEL	r0x104B
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 00rr                      1- 1522     	MOVAR	r0x104B
     009E 01rr                      1- 1523     	MOVR	STK00,W
                                    1- 1524     	BANKSEL	r0x104A
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 00rr                      1- 1525     	MOVAR	r0x104A
     00A1 21E8                      1- 1526     	MOVIA	0xe8
     00A2 00rr                      1- 1527     	MOVAR	STK02
     00A3 2102                      1- 1528     	MOVIA	0x02
     00A4 00rr                      1- 1529     	MOVAR	STK01
     00A5 01rr                      1- 1530     	MOVR	r0x104A,W
     00A6 00rr                      1- 1531     	MOVAR	STK00
                                    1- 1532     	BANKSEL	r0x104B
     00A7 rrrr                      3-   71 m1      .banksel ram_address
     00A8 01rr                      1- 1533     	MOVR	r0x104B,W
     00A9 2rrr                      1- 1534     	LCALL	__divuint
                                    1- 1535     	BANKSEL	r0x104B
     00AA rrrr                      3-   71 m1      .banksel ram_address
     00AB 00rr                      1- 1536     	MOVAR	r0x104B
     00AC 01rr                      1- 1537     	MOVR	STK00,W
                                    1- 1538     	BANKSEL	r0x104A
     00AD rrrr                      3-   71 m1      .banksel ram_address
     00AE 00rr                      1- 1539     	MOVAR	r0x104A
     00AF 21FF                      1- 1540     	MOVIA	0xff
     00B0 03rr                      1- 1541     	ADDAR	r0x104A,W
                                    1- 1542     	BANKSEL	_duty2
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 00rr                      1- 1543     	MOVAR	_duty2
     00B3 21FF                      1- 1544     	MOVIA	0xff
     00B4 00rr                      1- 1545     	MOVAR	(_duty2 + 1)
                                    1- 1546     	BANKSEL	r0x104B
     00B5 rrrr                      3-   71 m1      .banksel ram_address
     00B6 01rr                      1- 1547     	MOVR	r0x104B,W
     00B7 0C03                      1- 1548     	BTRSC	STATUS,0
     00B8 05rr                      1- 1549     	INCR	r0x104B,W
     00B9 0D03                      1- 1550     	BTRSC	STATUS,2
     00BA 3rrr                      1- 1551     	LGOTO	_00007_DS_
                                    1- 1552     	BANKSEL	_duty2
     00BB rrrr                      3-   71 m1      .banksel ram_address
     00BC 03rr                      1- 1553     	ADDAR	(_duty2 + 1),F
                                    1- 1554     ;;unsigned compare: left < lit (0x19=25), size=2
     00BD                           1- 1555     _00007_DS_:
                                    1- 1556     	.line	617, "main.c"; 	if(duty2 < 25)
     00BD 2100                      1- 1557     	MOVIA	0x00
                                    1- 1558     	BANKSEL	_duty2
     00BE rrrr                      3-   71 m1      .banksel ram_address
     00BF 04rr                      1- 1559     	SUBAR	(_duty2 + 1),W
     00C0 0903                      1- 1560     	BTRSS	STATUS,2
     00C1 3rrr                      1- 1561     	LGOTO	_00539_DS_
     00C2 2119                      1- 1562     	MOVIA	0x19
     00C3 04rr                      1- 1563     	SUBAR	_duty2,W
     00C4                           1- 1564     _00539_DS_:
     00C4 0C03                      1- 1565     	BTRSC	STATUS,0
     00C5 3rrr                      1- 1566     	LGOTO	_00501_DS_
                                    1- 1567     	.line	618, "main.c"; 	duty2 = duty2 + 1;
                                    1- 1568     	BANKSEL	_duty2
     00C6 rrrr                      3-   71 m1      .banksel ram_address
     00C7 05rr                      1- 1569     	INCR	_duty2,F
     00C8 0D03                      1- 1570     	BTRSC	STATUS,2
     00C9 05rr                      1- 1571     	INCR	(_duty2 + 1),F
     00CA 3rrr                      1- 1572     	LGOTO	_00501_DS_
     00CB                           1- 1573     _00500_DS_:
                                    1- 1574     	.line	622, "main.c"; 	duty2 = (((2280 - R_AIN4_DATA)*32)/744) + 1;
                                    1- 1575     	BANKSEL	_R_AIN4_DATA
     00CB rrrr                      3-   71 m1      .banksel ram_address
     00CC 01rr                      1- 1576     	MOVR	_R_AIN4_DATA,W
     00CD 27E8                      1- 1577     	SUBIA	0xe8
                                    1- 1578     	BANKSEL	r0x104A
     00CE rrrr                      3-   71 m1      .banksel ram_address
     00CF 00rr                      1- 1579     	MOVAR	r0x104A
                                    1- 1580     	BANKSEL	_R_AIN4_DATA
     00D0 rrrr                      3-   71 m1      .banksel ram_address
     00D1 01rr                      1- 1581     	MOVR	(_R_AIN4_DATA + 1),W
     00D2 0803                      1- 1582     	BTRSS	STATUS,0
     00D3 05rr                      1- 1583     	INCR	(_R_AIN4_DATA + 1),W
     00D4 2708                      1- 1584     	SUBIA	0x08
                                    1- 1585     	BANKSEL	r0x104B
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 00rr                      1- 1586     	MOVAR	r0x104B
                                    1- 1587     	BANKSEL	r0x104A
     00D7 rrrr                      3-   71 m1      .banksel ram_address
     00D8 01rr                      1- 1588     	MOVR	r0x104A,W
     00D9 00rr                      1- 1589     	MOVAR	STK02
                                    1- 1590     	BANKSEL	r0x104B
     00DA rrrr                      3-   71 m1      .banksel ram_address
     00DB 01rr                      1- 1591     	MOVR	r0x104B,W
     00DC 00rr                      1- 1592     	MOVAR	STK01
     00DD 2120                      1- 1593     	MOVIA	0x20
     00DE 00rr                      1- 1594     	MOVAR	STK00
     00DF 2100                      1- 1595     	MOVIA	0x00
     00E0 2rrr                      1- 1596     	LCALL	__mulint
                                    1- 1597     	BANKSEL	r0x104B
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 00rr                      1- 1598     	MOVAR	r0x104B
     00E3 01rr                      1- 1599     	MOVR	STK00,W
                                    1- 1600     	BANKSEL	r0x104A
     00E4 rrrr                      3-   71 m1      .banksel ram_address
     00E5 00rr                      1- 1601     	MOVAR	r0x104A
     00E6 21E8                      1- 1602     	MOVIA	0xe8
     00E7 00rr                      1- 1603     	MOVAR	STK02
     00E8 2102                      1- 1604     	MOVIA	0x02
     00E9 00rr                      1- 1605     	MOVAR	STK01
     00EA 01rr                      1- 1606     	MOVR	r0x104A,W
     00EB 00rr                      1- 1607     	MOVAR	STK00
                                    1- 1608     	BANKSEL	r0x104B
     00EC rrrr                      3-   71 m1      .banksel ram_address
     00ED 01rr                      1- 1609     	MOVR	r0x104B,W
     00EE 2rrr                      1- 1610     	LCALL	__divuint
                                    1- 1611     	BANKSEL	r0x104B
     00EF rrrr                      3-   71 m1      .banksel ram_address
     00F0 00rr                      1- 1612     	MOVAR	r0x104B
     00F1 01rr                      1- 1613     	MOVR	STK00,W
                                    1- 1614     	BANKSEL	r0x104A
     00F2 rrrr                      3-   71 m1      .banksel ram_address
     00F3 00rr                      1- 1615     	MOVAR	r0x104A
     00F4 2101                      1- 1616     	MOVIA	0x01
     00F5 03rr                      1- 1617     	ADDAR	r0x104A,W
                                    1- 1618     	BANKSEL	_duty2
     00F6 rrrr                      3-   71 m1      .banksel ram_address
     00F7 00rr                      1- 1619     	MOVAR	_duty2
     00F8 02rr                      1- 1620     	CLRR	(_duty2 + 1)
     00F9 14rr                      1- 1621     	RLR	(_duty2 + 1),F
                                    1- 1622     	BANKSEL	r0x104B
     00FA rrrr                      3-   71 m1      .banksel ram_address
     00FB 01rr                      1- 1623     	MOVR	r0x104B,W
                                    1- 1624     	BANKSEL	_duty2
     00FC rrrr                      3-   71 m1      .banksel ram_address
     00FD 03rr                      1- 1625     	ADDAR	(_duty2 + 1),F
                                    1- 1626     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1627     ;;unsigned compare: left >= lit (0x11=17), size=2
                                    1- 1628     	.line	623, "main.c"; 	if(duty2 > 16)
     00FE 2100                      1- 1629     	MOVIA	0x00
     00FF 04rr                      1- 1630     	SUBAR	(_duty2 + 1),W
     0100 0903                      1- 1631     	BTRSS	STATUS,2
     0101 3rrr                      1- 1632     	LGOTO	_00540_DS_
     0102 2111                      1- 1633     	MOVIA	0x11
     0103 04rr                      1- 1634     	SUBAR	_duty2,W
     0104                           1- 1635     _00540_DS_:
     0104 0803                      1- 1636     	BTRSS	STATUS,0
     0105 3rrr                      1- 1637     	LGOTO	_00501_DS_
                                    1- 1638     	.line	624, "main.c"; 	duty2 = duty2 - 6;
     0106 21FA                      1- 1639     	MOVIA	0xfa
                                    1- 1640     	BANKSEL	_duty2
     0107 rrrr                      3-   71 m1      .banksel ram_address
     0108 03rr                      1- 1641     	ADDAR	_duty2,F
     0109 0803                      1- 1642     	BTRSS	STATUS,0
     010A 06rr                      1- 1643     	DECR	(_duty2 + 1),F
     010B                           1- 1644     _00501_DS_:
                                    1- 1645     	.line	626, "main.c"; 	chrgSpeed = 1;
     010B 2101                      1- 1646     	MOVIA	0x01
                                    1- 1647     	BANKSEL	_chrgSpeed
     010C rrrr                      3-   71 m1      .banksel ram_address
     010D 00rr                      1- 1648     	MOVAR	_chrgSpeed
     010E                           1- 1649     _00510_DS_:
                                    1- 1650     	.line	631, "main.c"; 	}
                                    1- 1651     	RETURN	
     010E 0010                      3-   26 m1      ret
                                    1- 1652     ; exit point of _checkBat
                                    1- 1654     ;***
                                    1- 1655     ;  pBlock Stats: dbName = C
                                    1- 1656     ;***
                                    1- 1657     ;has an exit
                                    1- 1658     ;functions called:
                                    1- 1659     ;   _F_AIN1_Convert
                                    1- 1660     ;   _F_AIN1_Convert
                                    1- 1661     ;4 compiler assigned registers:
                                    1- 1662     ;   r0x104E
                                    1- 1663     ;   r0x104F
                                    1- 1664     ;   r0x1050
                                    1- 1665     ;   r0x1051
                                    1- 1666     ;; Starting pCode block
                                    1- 1667     .segment "code"; module=main, function=_checkOut
     0000                           1- 1669     _checkOut:
                                    1- 1670     ; 2 exit points
                                    1- 1671     ;;unsigned compare: left < lit (0x14=20), size=1
                                    1- 1672     	.line	543, "main.c"; 	if(checkTime < 20)
     0000 2114                      1- 1673     	MOVIA	0x14
                                    1- 1674     	BANKSEL	_checkTime
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1675     	SUBAR	_checkTime,W
     0003 0803                      1- 1676     	BTRSS	STATUS,0
                                    1- 1677     	.line	544, "main.c"; 	return;
     0004 3rrr                      1- 1678     	LGOTO	_00466_DS_
                                    1- 1679     	.line	545, "main.c"; 	PACON = C_PA1_AIN1;
     0005 2102                      1- 1680     	MOVIA	0x02
     0006 00rr                      1- 1681     	MOVAR	_PACON
                                    1- 1682     	.line	546, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;
                                    1- 1683     	BANKSEL	_R_AIN1_DATA_LB
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 1684     	CLRR	_R_AIN1_DATA_LB
                                    1- 1685     	BANKSEL	_R_AIN1_DATA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 1686     	CLRR	_R_AIN1_DATA
     000B 02rr                      1- 1687     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1688     	.line	547, "main.c"; 	F_AIN1_Convert(12);					// execute AIN0 ADC converting 8 times
     000C 210C                      1- 1689     	MOVIA	0x0c
     000D 2rrr                      1- 1690     	LCALL	_F_AIN1_Convert
                                    1- 1691     	.line	548, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1692     	BANKSEL	_R_AIN1_DATA
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 15rr                      1- 1693     	SWAPR	(_R_AIN1_DATA + 1),W
     0010 22F0                      1- 1694     	ANDIA	0xf0
     0011 00rr                      1- 1695     	MOVAR	(_R_AIN1_DATA + 1)
     0012 15rr                      1- 1696     	SWAPR	_R_AIN1_DATA,W
     0013 00rr                      1- 1697     	MOVAR	_R_AIN1_DATA
     0014 220F                      1- 1698     	ANDIA	0x0f
     0015 11rr                      1- 1699     	IORAR	(_R_AIN1_DATA + 1),F
     0016 12rr                      1- 1700     	XORAR	_R_AIN1_DATA,F
                                    1- 1701     	.line	549, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0017 21F0                      1- 1702     	MOVIA	0xf0
                                    1- 1703     	BANKSEL	_R_AIN1_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 10rr                      1- 1704     	ANDAR	_R_AIN1_DATA_LB,F
                                    1- 1705     	.line	550, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     001A 01rr                      1- 1706     	MOVR	_R_AIN1_DATA_LB,W
                                    1- 1707     	BANKSEL	r0x1050
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1708     	MOVAR	r0x1050
                                    1- 1709     ;;1	MOVAR	r0x104E
                                    1- 1710     ;;1	CLRR	r0x104F
                                    1- 1711     ;;100	MOVR	r0x104E,W
     001D 2100                      1- 1712     	MOVIA	0x00
                                    1- 1713     	BANKSEL	r0x1051
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1714     	MOVAR	r0x1051
                                    1- 1715     	BANKSEL	r0x1050
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1716     	MOVR	r0x1050,W
                                    1- 1717     	BANKSEL	_R_AIN1_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1718     	ADDAR	_R_AIN1_DATA,F
                                    1- 1719     	BANKSEL	r0x1051
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1720     	MOVR	r0x1051,W
     0026 0C03                      1- 1721     	BTRSC	STATUS,0
     0027 05rr                      1- 1722     	INCR	r0x1051,W
     0028 0D03                      1- 1723     	BTRSC	STATUS,2
     0029 3rrr                      1- 1724     	LGOTO	_00008_DS_
                                    1- 1725     	BANKSEL	_R_AIN1_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1726     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1- 1727     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002C                           1- 1728     _00008_DS_:
                                    1- 1729     	.line	551, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 8
     002C 1C03                      1- 1730     	BCR	STATUS,0
                                    1- 1731     	BANKSEL	_R_AIN1_DATA
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 13rr                      1- 1732     	RRR	(_R_AIN1_DATA + 1),F
     002F 13rr                      1- 1733     	RRR	_R_AIN1_DATA,F
                                    1- 1734     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1735     	BCR	STATUS,0
     0031 13rr                      1- 1736     	RRR	(_R_AIN1_DATA + 1),F
     0032 13rr                      1- 1737     	RRR	_R_AIN1_DATA,F
                                    1- 1738     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0033 1C03                      1- 1739     	BCR	STATUS,0
     0034 13rr                      1- 1740     	RRR	(_R_AIN1_DATA + 1),F
     0035 13rr                      1- 1741     	RRR	_R_AIN1_DATA,F
                                    1- 1742     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1743     ;;unsigned compare: left >= lit (0x12D=301), size=2
                                    1- 1744     	.line	552, "main.c"; 	if(R_AIN1_DATA > 300)	//放电电流大于2A
     0036 2101                      1- 1745     	MOVIA	0x01
     0037 04rr                      1- 1746     	SUBAR	(_R_AIN1_DATA + 1),W
     0038 0903                      1- 1747     	BTRSS	STATUS,2
     0039 3rrr                      1- 1748     	LGOTO	_00484_DS_
     003A 212D                      1- 1749     	MOVIA	0x2d
     003B 04rr                      1- 1750     	SUBAR	_R_AIN1_DATA,W
     003C                           1- 1751     _00484_DS_:
     003C 0803                      1- 1752     	BTRSS	STATUS,0
     003D 3rrr                      1- 1753     	LGOTO	_00464_DS_
                                    1- 1754     	.line	554, "main.c"; 	AIN1Count++;
                                    1- 1755     	BANKSEL	_AIN1Count
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 05rr                      1- 1756     	INCR	_AIN1Count,F
                                    1- 1757     	.line	555, "main.c"; 	if(++AIN1Count >=5)
     0040 05rr                      1- 1758     	INCR	_AIN1Count,F
                                    1- 1759     ;;unsigned compare: left < lit (0x5=5), size=1
     0041 2105                      1- 1760     	MOVIA	0x05
     0042 04rr                      1- 1761     	SUBAR	_AIN1Count,W
     0043 0803                      1- 1762     	BTRSS	STATUS,0
     0044 3rrr                      1- 1763     	LGOTO	_00466_DS_
                                    1- 1764     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1765     ;;unsigned compare: left >= lit (0x1F5=501), size=2
                                    1- 1766     	.line	557, "main.c"; 	if(R_AIN1_DATA > 500)
     0045 2101                      1- 1767     	MOVIA	0x01
                                    1- 1768     	BANKSEL	_R_AIN1_DATA
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 04rr                      1- 1769     	SUBAR	(_R_AIN1_DATA + 1),W
     0048 0903                      1- 1770     	BTRSS	STATUS,2
     0049 3rrr                      1- 1771     	LGOTO	_00486_DS_
     004A 21F5                      1- 1772     	MOVIA	0xf5
     004B 04rr                      1- 1773     	SUBAR	_R_AIN1_DATA,W
     004C                           1- 1774     _00486_DS_:
     004C 0803                      1- 1775     	BTRSS	STATUS,0
     004D 3rrr                      1- 1776     	LGOTO	_00459_DS_
                                    1- 1777     	.line	559, "main.c"; 	duty1 = 1;
     004E 2101                      1- 1778     	MOVIA	0x01
                                    1- 1779     	BANKSEL	_duty1
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1- 1780     	MOVAR	_duty1
     0051 3rrr                      1- 1781     	LGOTO	_00466_DS_
                                    1- 1782     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1783     ;;unsigned compare: left >= lit (0x191=401), size=2
     0052                           1- 1784     _00459_DS_:
                                    1- 1785     	.line	561, "main.c"; 	else if(R_AIN1_DATA > 400)
     0052 2101                      1- 1786     	MOVIA	0x01
                                    1- 1787     	BANKSEL	_R_AIN1_DATA
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 04rr                      1- 1788     	SUBAR	(_R_AIN1_DATA + 1),W
     0055 0903                      1- 1789     	BTRSS	STATUS,2
     0056 3rrr                      1- 1790     	LGOTO	_00487_DS_
     0057 2191                      1- 1791     	MOVIA	0x91
     0058 04rr                      1- 1792     	SUBAR	_R_AIN1_DATA,W
     0059                           1- 1793     _00487_DS_:
     0059 0803                      1- 1794     	BTRSS	STATUS,0
     005A 3rrr                      1- 1795     	LGOTO	_00456_DS_
                                    1- 1796     	.line	563, "main.c"; 	duty1 = 11;
     005B 210B                      1- 1797     	MOVIA	0x0b
                                    1- 1798     	BANKSEL	_duty1
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 00rr                      1- 1799     	MOVAR	_duty1
     005E 3rrr                      1- 1800     	LGOTO	_00466_DS_
     005F                           1- 1801     _00456_DS_:
                                    1- 1802     	.line	567, "main.c"; 	duty1 = duty1 - 3;
     005F 21FD                      1- 1803     	MOVIA	0xfd
                                    1- 1804     	BANKSEL	_duty1
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 03rr                      1- 1805     	ADDAR	_duty1,F
     0062 3rrr                      1- 1806     	LGOTO	_00466_DS_
     0063                           1- 1807     _00464_DS_:
                                    1- 1808     	.line	579, "main.c"; 	AIN1Count = 0;
                                    1- 1809     	BANKSEL	_AIN1Count
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 02rr                      1- 1810     	CLRR	_AIN1Count
     0065                           1- 1811     _00466_DS_:
                                    1- 1812     	.line	583, "main.c"; 	}
                                    1- 1813     	RETURN	
     0065 0010                      3-   26 m1      ret
                                    1- 1814     ; exit point of _checkOut
                                    1- 1816     ;***
                                    1- 1817     ;  pBlock Stats: dbName = C
                                    1- 1818     ;***
                                    1- 1819     ;has an exit
                                    1- 1820     ;functions called:
                                    1- 1821     ;   _F_AIN2_Convert
                                    1- 1822     ;   _F_AIN2_Convert
                                    1- 1823     ;4 compiler assigned registers:
                                    1- 1824     ;   r0x1052
                                    1- 1825     ;   r0x1053
                                    1- 1826     ;   r0x1054
                                    1- 1827     ;   r0x1055
                                    1- 1828     ;; Starting pCode block
                                    1- 1829     .segment "code"; module=main, function=_isNotFan
     0000                           1- 1831     _isNotFan:
                                    1- 1832     ; 2 exit points
                                    1- 1833     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1834     ;;unsigned compare: left >= lit (0xB=11), size=1
                                    1- 1835     	.line	458, "main.c"; 	if(checkTime > 10)
     0000 210B                      1- 1836     	MOVIA	0x0b
                                    1- 1837     	BANKSEL	_checkTime
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1838     	SUBAR	_checkTime,W
     0003 0803                      1- 1839     	BTRSS	STATUS,0
     0004 3rrr                      1- 1840     	LGOTO	_00324_DS_
                                    1- 1841     	.line	459, "main.c"; 	return 0;
     0005 2100                      1- 1842     	MOVIA	0x00
     0006 3rrr                      1- 1843     	LGOTO	_00372_DS_
     0007                           1- 1844     _00324_DS_:
                                    1- 1845     	.line	460, "main.c"; 	PACON = C_PA2_AIN2;
     0007 2104                      1- 1846     	MOVIA	0x04
     0008 00rr                      1- 1847     	MOVAR	_PACON
                                    1- 1848     	.line	461, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;
                                    1- 1849     	BANKSEL	_R_AIN2_DATA_LB
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 1850     	CLRR	_R_AIN2_DATA_LB
                                    1- 1851     	BANKSEL	_R_AIN2_DATA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1- 1852     	CLRR	_R_AIN2_DATA
     000D 02rr                      1- 1853     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1854     	.line	462, "main.c"; 	F_AIN2_Convert(12);					// execute AIN0 ADC converting 8 times
     000E 210C                      1- 1855     	MOVIA	0x0c
     000F 2rrr                      1- 1856     	LCALL	_F_AIN2_Convert
                                    1- 1857     	.line	463, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1858     	BANKSEL	_R_AIN2_DATA
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 15rr                      1- 1859     	SWAPR	(_R_AIN2_DATA + 1),W
     0012 22F0                      1- 1860     	ANDIA	0xf0
     0013 00rr                      1- 1861     	MOVAR	(_R_AIN2_DATA + 1)
     0014 15rr                      1- 1862     	SWAPR	_R_AIN2_DATA,W
     0015 00rr                      1- 1863     	MOVAR	_R_AIN2_DATA
     0016 220F                      1- 1864     	ANDIA	0x0f
     0017 11rr                      1- 1865     	IORAR	(_R_AIN2_DATA + 1),F
     0018 12rr                      1- 1866     	XORAR	_R_AIN2_DATA,F
                                    1- 1867     	.line	464, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0019 21F0                      1- 1868     	MOVIA	0xf0
                                    1- 1869     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 10rr                      1- 1870     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1871     	.line	465, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     001C 01rr                      1- 1872     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1873     	BANKSEL	r0x1054
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1874     	MOVAR	r0x1054
                                    1- 1875     ;;1	MOVAR	r0x1052
                                    1- 1876     ;;1	CLRR	r0x1053
                                    1- 1877     ;;99	MOVR	r0x1052,W
     001F 2100                      1- 1878     	MOVIA	0x00
                                    1- 1879     	BANKSEL	r0x1055
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1880     	MOVAR	r0x1055
                                    1- 1881     	BANKSEL	r0x1054
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1882     	MOVR	r0x1054,W
                                    1- 1883     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1884     	ADDAR	_R_AIN2_DATA,F
                                    1- 1885     	BANKSEL	r0x1055
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1886     	MOVR	r0x1055,W
     0028 0C03                      1- 1887     	BTRSC	STATUS,0
     0029 05rr                      1- 1888     	INCR	r0x1055,W
     002A 0D03                      1- 1889     	BTRSC	STATUS,2
     002B 3rrr                      1- 1890     	LGOTO	_00009_DS_
                                    1- 1891     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1892     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1893     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002E                           1- 1894     _00009_DS_:
                                    1- 1895     	.line	466, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 8
     002E 1C03                      1- 1896     	BCR	STATUS,0
                                    1- 1897     	BANKSEL	_R_AIN2_DATA
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 13rr                      1- 1898     	RRR	(_R_AIN2_DATA + 1),F
     0031 13rr                      1- 1899     	RRR	_R_AIN2_DATA,F
                                    1- 1900     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0032 1C03                      1- 1901     	BCR	STATUS,0
     0033 13rr                      1- 1902     	RRR	(_R_AIN2_DATA + 1),F
     0034 13rr                      1- 1903     	RRR	_R_AIN2_DATA,F
                                    1- 1904     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0035 1C03                      1- 1905     	BCR	STATUS,0
     0036 13rr                      1- 1906     	RRR	(_R_AIN2_DATA + 1),F
     0037 13rr                      1- 1907     	RRR	_R_AIN2_DATA,F
                                    1- 1908     	.line	467, "main.c"; 	if(closeTime)
                                    1- 1909     	BANKSEL	_closeTime
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 01rr                      1- 1910     	MOVR	_closeTime,W
     003A 0D03                      1- 1911     	BTRSC	STATUS,2
     003B 3rrr                      1- 1912     	LGOTO	_00328_DS_
                                    1- 1913     	.line	469, "main.c"; 	closeTime--;
     003C 06rr                      1- 1914     	DECR	_closeTime,F
                                    1- 1915     	.line	470, "main.c"; 	duty1 = 0;
                                    1- 1916     	BANKSEL	_duty1
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 02rr                      1- 1917     	CLRR	_duty1
                                    1- 1918     ;;unsigned compare: left < lit (0x834=2100), size=2
                                    1- 1919     	.line	471, "main.c"; 	if(R_AIN2_DATA < 2100)
     003F 2108                      1- 1920     	MOVIA	0x08
                                    1- 1921     	BANKSEL	_R_AIN2_DATA
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 04rr                      1- 1922     	SUBAR	(_R_AIN2_DATA + 1),W
     0042 0903                      1- 1923     	BTRSS	STATUS,2
     0043 3rrr                      1- 1924     	LGOTO	_00435_DS_
     0044 2134                      1- 1925     	MOVIA	0x34
     0045 04rr                      1- 1926     	SUBAR	_R_AIN2_DATA,W
     0046                           1- 1927     _00435_DS_:
     0046 0C03                      1- 1928     	BTRSC	STATUS,0
     0047 3rrr                      1- 1929     	LGOTO	_00326_DS_
                                    1- 1930     	.line	472, "main.c"; 	closeTime = 0;
                                    1- 1931     	BANKSEL	_closeTime
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 02rr                      1- 1932     	CLRR	_closeTime
     004A                           1- 1933     _00326_DS_:
                                    1- 1934     	.line	473, "main.c"; 	return 0;
     004A 2100                      1- 1935     	MOVIA	0x00
     004B 3rrr                      1- 1936     	LGOTO	_00372_DS_
                                    1- 1937     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1938     ;;unsigned compare: left >= lit (0xA8D=2701), size=2
     004C                           1- 1939     _00328_DS_:
                                    1- 1940     	.line	483, "main.c"; 	if(R_AIN2_DATA > 2700)				//高于1.3V，则为空载 (1.3/2) * 4096
     004C 210A                      1- 1941     	MOVIA	0x0a
                                    1- 1942     	BANKSEL	_R_AIN2_DATA
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 04rr                      1- 1943     	SUBAR	(_R_AIN2_DATA + 1),W
     004F 0903                      1- 1944     	BTRSS	STATUS,2
     0050 3rrr                      1- 1945     	LGOTO	_00436_DS_
     0051 218D                      1- 1946     	MOVIA	0x8d
     0052 04rr                      1- 1947     	SUBAR	_R_AIN2_DATA,W
     0053                           1- 1948     _00436_DS_:
     0053 0803                      1- 1949     	BTRSS	STATUS,0
     0054 3rrr                      1- 1950     	LGOTO	_00332_DS_
                                    1- 1951     	.line	485, "main.c"; 	if(++maxTime >= 9)
                                    1- 1952     	BANKSEL	_maxTime
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 05rr                      1- 1953     	INCR	_maxTime,F
                                    1- 1954     ;;unsigned compare: left < lit (0x9=9), size=1
     0057 2109                      1- 1955     	MOVIA	0x09
     0058 04rr                      1- 1956     	SUBAR	_maxTime,W
     0059 0803                      1- 1957     	BTRSS	STATUS,0
     005A 3rrr                      1- 1958     	LGOTO	_00333_DS_
                                    1- 1959     	.line	487, "main.c"; 	duty1 = 0;			//熔断
                                    1- 1960     	BANKSEL	_duty1
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 02rr                      1- 1961     	CLRR	_duty1
                                    1- 1962     	.line	488, "main.c"; 	maxTime = 0;
                                    1- 1963     	BANKSEL	_maxTime
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 02rr                      1- 1964     	CLRR	_maxTime
                                    1- 1965     	.line	489, "main.c"; 	closeTime = 100;
     005F 2164                      1- 1966     	MOVIA	0x64
                                    1- 1967     	BANKSEL	_closeTime
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 00rr                      1- 1968     	MOVAR	_closeTime
                                    1- 1969     	.line	490, "main.c"; 	return 1;
     0062 2101                      1- 1970     	MOVIA	0x01
     0063 3rrr                      1- 1971     	LGOTO	_00372_DS_
     0064                           1- 1972     _00332_DS_:
                                    1- 1973     	.line	496, "main.c"; 	maxTime = 0;
                                    1- 1974     	BANKSEL	_maxTime
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 02rr                      1- 1975     	CLRR	_maxTime
     0066                           1- 1976     _00333_DS_:
                                    1- 1977     	.line	499, "main.c"; 	if(workStep && R_AIN2_DATA > 100)
                                    1- 1978     	BANKSEL	_workStep
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 01rr                      1- 1979     	MOVR	_workStep,W
     0068 0D03                      1- 1980     	BTRSC	STATUS,2
     0069 3rrr                      1- 1981     	LGOTO	_00370_DS_
                                    1- 1982     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1983     ;;unsigned compare: left >= lit (0x65=101), size=2
     006A 2100                      1- 1984     	MOVIA	0x00
                                    1- 1985     	BANKSEL	_R_AIN2_DATA
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 04rr                      1- 1986     	SUBAR	(_R_AIN2_DATA + 1),W
     006D 0903                      1- 1987     	BTRSS	STATUS,2
     006E 3rrr                      1- 1988     	LGOTO	_00438_DS_
     006F 2165                      1- 1989     	MOVIA	0x65
     0070 04rr                      1- 1990     	SUBAR	_R_AIN2_DATA,W
     0071                           1- 1991     _00438_DS_:
     0071 0803                      1- 1992     	BTRSS	STATUS,0
     0072 3rrr                      1- 1993     	LGOTO	_00370_DS_
                                    1- 1994     	.line	501, "main.c"; 	if(workStep == 1)
                                    1- 1995     	BANKSEL	_workStep
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 01rr                      1- 1996     	MOVR	_workStep,W
     0075 2401                      1- 1997     	XORIA	0x01
     0076 0903                      1- 1998     	BTRSS	STATUS,2
     0077 3rrr                      1- 1999     	LGOTO	_00367_DS_
                                    1- 2000     ;;unsigned compare: left < lit (0x4B0=1200), size=2
                                    1- 2001     	.line	503, "main.c"; 	if(R_AIN2_DATA < 1200)
     0078 2104                      1- 2002     	MOVIA	0x04
                                    1- 2003     	BANKSEL	_R_AIN2_DATA
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 04rr                      1- 2004     	SUBAR	(_R_AIN2_DATA + 1),W
     007B 0903                      1- 2005     	BTRSS	STATUS,2
     007C 3rrr                      1- 2006     	LGOTO	_00439_DS_
     007D 21B0                      1- 2007     	MOVIA	0xb0
     007E 04rr                      1- 2008     	SUBAR	_R_AIN2_DATA,W
     007F                           1- 2009     _00439_DS_:
     007F 0C03                      1- 2010     	BTRSC	STATUS,0
     0080 3rrr                      1- 2011     	LGOTO	_00340_DS_
                                    1- 2012     	.line	504, "main.c"; 	duty1++;
                                    1- 2013     	BANKSEL	_duty1
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 05rr                      1- 2014     	INCR	_duty1,F
     0083 3rrr                      1- 2015     	LGOTO	_00370_DS_
                                    1- 2016     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2017     ;;unsigned compare: left >= lit (0x547=1351), size=2
     0084                           1- 2018     _00340_DS_:
                                    1- 2019     	.line	505, "main.c"; 	else if(R_AIN2_DATA > 1350)
     0084 2105                      1- 2020     	MOVIA	0x05
                                    1- 2021     	BANKSEL	_R_AIN2_DATA
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 04rr                      1- 2022     	SUBAR	(_R_AIN2_DATA + 1),W
     0087 0903                      1- 2023     	BTRSS	STATUS,2
     0088 3rrr                      1- 2024     	LGOTO	_00440_DS_
     0089 2147                      1- 2025     	MOVIA	0x47
     008A 04rr                      1- 2026     	SUBAR	_R_AIN2_DATA,W
     008B                           1- 2027     _00440_DS_:
     008B 0803                      1- 2028     	BTRSS	STATUS,0
     008C 3rrr                      1- 2029     	LGOTO	_00337_DS_
                                    1- 2030     	.line	506, "main.c"; 	duty1 = duty1 - 3;
     008D 21FD                      1- 2031     	MOVIA	0xfd
                                    1- 2032     	BANKSEL	_duty1
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 03rr                      1- 2033     	ADDAR	_duty1,F
     0090 3rrr                      1- 2034     	LGOTO	_00370_DS_
                                    1- 2035     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2036     ;;unsigned compare: left >= lit (0x501=1281), size=2
     0091                           1- 2037     _00337_DS_:
                                    1- 2038     	.line	507, "main.c"; 	else if(R_AIN2_DATA > 1280)
     0091 2105                      1- 2039     	MOVIA	0x05
                                    1- 2040     	BANKSEL	_R_AIN2_DATA
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 04rr                      1- 2041     	SUBAR	(_R_AIN2_DATA + 1),W
     0094 0903                      1- 2042     	BTRSS	STATUS,2
     0095 3rrr                      1- 2043     	LGOTO	_00441_DS_
     0096 2101                      1- 2044     	MOVIA	0x01
     0097 04rr                      1- 2045     	SUBAR	_R_AIN2_DATA,W
     0098                           1- 2046     _00441_DS_:
     0098 0803                      1- 2047     	BTRSS	STATUS,0
     0099 3rrr                      1- 2048     	LGOTO	_00370_DS_
                                    1- 2049     	.line	508, "main.c"; 	duty1--;
                                    1- 2050     	BANKSEL	_duty1
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 06rr                      1- 2051     	DECR	_duty1,F
     009C 3rrr                      1- 2052     	LGOTO	_00370_DS_
     009D                           1- 2053     _00367_DS_:
                                    1- 2054     	.line	511, "main.c"; 	else if(workStep == 2)
                                    1- 2055     	BANKSEL	_workStep
     009D rrrr                      3-   71 m1      .banksel ram_address
     009E 01rr                      1- 2056     	MOVR	_workStep,W
     009F 2402                      1- 2057     	XORIA	0x02
     00A0 0903                      1- 2058     	BTRSS	STATUS,2
     00A1 3rrr                      1- 2059     	LGOTO	_00364_DS_
                                    1- 2060     ;;unsigned compare: left < lit (0x60E=1550), size=2
                                    1- 2061     	.line	513, "main.c"; 	if(R_AIN2_DATA < 1550)
     00A2 2106                      1- 2062     	MOVIA	0x06
                                    1- 2063     	BANKSEL	_R_AIN2_DATA
     00A3 rrrr                      3-   71 m1      .banksel ram_address
     00A4 04rr                      1- 2064     	SUBAR	(_R_AIN2_DATA + 1),W
     00A5 0903                      1- 2065     	BTRSS	STATUS,2
     00A6 3rrr                      1- 2066     	LGOTO	_00442_DS_
     00A7 210E                      1- 2067     	MOVIA	0x0e
     00A8 04rr                      1- 2068     	SUBAR	_R_AIN2_DATA,W
     00A9                           1- 2069     _00442_DS_:
     00A9 0C03                      1- 2070     	BTRSC	STATUS,0
     00AA 3rrr                      1- 2071     	LGOTO	_00348_DS_
                                    1- 2072     	.line	514, "main.c"; 	duty1++;
                                    1- 2073     	BANKSEL	_duty1
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 05rr                      1- 2074     	INCR	_duty1,F
     00AD 3rrr                      1- 2075     	LGOTO	_00370_DS_
                                    1- 2076     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2077     ;;unsigned compare: left >= lit (0x6A5=1701), size=2
     00AE                           1- 2078     _00348_DS_:
                                    1- 2079     	.line	515, "main.c"; 	else if(R_AIN2_DATA > 1700)
     00AE 2106                      1- 2080     	MOVIA	0x06
                                    1- 2081     	BANKSEL	_R_AIN2_DATA
     00AF rrrr                      3-   71 m1      .banksel ram_address
     00B0 04rr                      1- 2082     	SUBAR	(_R_AIN2_DATA + 1),W
     00B1 0903                      1- 2083     	BTRSS	STATUS,2
     00B2 3rrr                      1- 2084     	LGOTO	_00443_DS_
     00B3 21A5                      1- 2085     	MOVIA	0xa5
     00B4 04rr                      1- 2086     	SUBAR	_R_AIN2_DATA,W
     00B5                           1- 2087     _00443_DS_:
     00B5 0803                      1- 2088     	BTRSS	STATUS,0
     00B6 3rrr                      1- 2089     	LGOTO	_00345_DS_
                                    1- 2090     	.line	516, "main.c"; 	duty1 = duty1 - 3;
     00B7 21FD                      1- 2091     	MOVIA	0xfd
                                    1- 2092     	BANKSEL	_duty1
     00B8 rrrr                      3-   71 m1      .banksel ram_address
     00B9 03rr                      1- 2093     	ADDAR	_duty1,F
     00BA 3rrr                      1- 2094     	LGOTO	_00370_DS_
                                    1- 2095     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2096     ;;unsigned compare: left >= lit (0x65F=1631), size=2
     00BB                           1- 2097     _00345_DS_:
                                    1- 2098     	.line	517, "main.c"; 	else if(R_AIN2_DATA > 1630)
     00BB 2106                      1- 2099     	MOVIA	0x06
                                    1- 2100     	BANKSEL	_R_AIN2_DATA
     00BC rrrr                      3-   71 m1      .banksel ram_address
     00BD 04rr                      1- 2101     	SUBAR	(_R_AIN2_DATA + 1),W
     00BE 0903                      1- 2102     	BTRSS	STATUS,2
     00BF 3rrr                      1- 2103     	LGOTO	_00444_DS_
     00C0 215F                      1- 2104     	MOVIA	0x5f
     00C1 04rr                      1- 2105     	SUBAR	_R_AIN2_DATA,W
     00C2                           1- 2106     _00444_DS_:
     00C2 0803                      1- 2107     	BTRSS	STATUS,0
     00C3 3rrr                      1- 2108     	LGOTO	_00370_DS_
                                    1- 2109     	.line	518, "main.c"; 	duty1--; 	
                                    1- 2110     	BANKSEL	_duty1
     00C4 rrrr                      3-   71 m1      .banksel ram_address
     00C5 06rr                      1- 2111     	DECR	_duty1,F
     00C6 3rrr                      1- 2112     	LGOTO	_00370_DS_
     00C7                           1- 2113     _00364_DS_:
                                    1- 2114     	.line	520, "main.c"; 	else if(workStep == 3)
                                    1- 2115     	BANKSEL	_workStep
     00C7 rrrr                      3-   71 m1      .banksel ram_address
     00C8 01rr                      1- 2116     	MOVR	_workStep,W
     00C9 2403                      1- 2117     	XORIA	0x03
     00CA 0903                      1- 2118     	BTRSS	STATUS,2
     00CB 3rrr                      1- 2119     	LGOTO	_00370_DS_
                                    1- 2120     ;;unsigned compare: left < lit (0x834=2100), size=2
                                    1- 2121     	.line	522, "main.c"; 	if(R_AIN2_DATA < 2100)
     00CC 2108                      1- 2122     	MOVIA	0x08
                                    1- 2123     	BANKSEL	_R_AIN2_DATA
     00CD rrrr                      3-   71 m1      .banksel ram_address
     00CE 04rr                      1- 2124     	SUBAR	(_R_AIN2_DATA + 1),W
     00CF 0903                      1- 2125     	BTRSS	STATUS,2
     00D0 3rrr                      1- 2126     	LGOTO	_00445_DS_
     00D1 2134                      1- 2127     	MOVIA	0x34
     00D2 04rr                      1- 2128     	SUBAR	_R_AIN2_DATA,W
     00D3                           1- 2129     _00445_DS_:
     00D3 0C03                      1- 2130     	BTRSC	STATUS,0
     00D4 3rrr                      1- 2131     	LGOTO	_00359_DS_
                                    1- 2132     	.line	523, "main.c"; 	duty1++;
                                    1- 2133     	BANKSEL	_duty1
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 05rr                      1- 2134     	INCR	_duty1,F
     00D7 3rrr                      1- 2135     	LGOTO	_00370_DS_
                                    1- 2136     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2137     ;;unsigned compare: left >= lit (0x92F=2351), size=2
     00D8                           1- 2138     _00359_DS_:
                                    1- 2139     	.line	524, "main.c"; 	else if(R_AIN2_DATA > 2350)
     00D8 2109                      1- 2140     	MOVIA	0x09
                                    1- 2141     	BANKSEL	_R_AIN2_DATA
     00D9 rrrr                      3-   71 m1      .banksel ram_address
     00DA 04rr                      1- 2142     	SUBAR	(_R_AIN2_DATA + 1),W
     00DB 0903                      1- 2143     	BTRSS	STATUS,2
     00DC 3rrr                      1- 2144     	LGOTO	_00446_DS_
     00DD 212F                      1- 2145     	MOVIA	0x2f
     00DE 04rr                      1- 2146     	SUBAR	_R_AIN2_DATA,W
     00DF                           1- 2147     _00446_DS_:
     00DF 0803                      1- 2148     	BTRSS	STATUS,0
     00E0 3rrr                      1- 2149     	LGOTO	_00356_DS_
                                    1- 2150     	.line	525, "main.c"; 	duty1 = duty1 - 4;
     00E1 21FC                      1- 2151     	MOVIA	0xfc
                                    1- 2152     	BANKSEL	_duty1
     00E2 rrrr                      3-   71 m1      .banksel ram_address
     00E3 03rr                      1- 2153     	ADDAR	_duty1,F
     00E4 3rrr                      1- 2154     	LGOTO	_00370_DS_
                                    1- 2155     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2156     ;;unsigned compare: left >= lit (0x8CB=2251), size=2
     00E5                           1- 2157     _00356_DS_:
                                    1- 2158     	.line	526, "main.c"; 	else if(R_AIN2_DATA > 2250)
     00E5 2108                      1- 2159     	MOVIA	0x08
                                    1- 2160     	BANKSEL	_R_AIN2_DATA
     00E6 rrrr                      3-   71 m1      .banksel ram_address
     00E7 04rr                      1- 2161     	SUBAR	(_R_AIN2_DATA + 1),W
     00E8 0903                      1- 2162     	BTRSS	STATUS,2
     00E9 3rrr                      1- 2163     	LGOTO	_00447_DS_
     00EA 21CB                      1- 2164     	MOVIA	0xcb
     00EB 04rr                      1- 2165     	SUBAR	_R_AIN2_DATA,W
     00EC                           1- 2166     _00447_DS_:
     00EC 0803                      1- 2167     	BTRSS	STATUS,0
     00ED 3rrr                      1- 2168     	LGOTO	_00353_DS_
                                    1- 2169     	.line	527, "main.c"; 	duty1 = duty1 - 2;
     00EE 21FE                      1- 2170     	MOVIA	0xfe
                                    1- 2171     	BANKSEL	_duty1
     00EF rrrr                      3-   71 m1      .banksel ram_address
     00F0 03rr                      1- 2172     	ADDAR	_duty1,F
     00F1 3rrr                      1- 2173     	LGOTO	_00370_DS_
                                    1- 2174     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2175     ;;unsigned compare: left >= lit (0x899=2201), size=2
     00F2                           1- 2176     _00353_DS_:
                                    1- 2177     	.line	528, "main.c"; 	else if(R_AIN2_DATA > 2200)
     00F2 2108                      1- 2178     	MOVIA	0x08
                                    1- 2179     	BANKSEL	_R_AIN2_DATA
     00F3 rrrr                      3-   71 m1      .banksel ram_address
     00F4 04rr                      1- 2180     	SUBAR	(_R_AIN2_DATA + 1),W
     00F5 0903                      1- 2181     	BTRSS	STATUS,2
     00F6 3rrr                      1- 2182     	LGOTO	_00448_DS_
     00F7 2199                      1- 2183     	MOVIA	0x99
     00F8 04rr                      1- 2184     	SUBAR	_R_AIN2_DATA,W
     00F9                           1- 2185     _00448_DS_:
     00F9 0803                      1- 2186     	BTRSS	STATUS,0
     00FA 3rrr                      1- 2187     	LGOTO	_00370_DS_
                                    1- 2188     	.line	529, "main.c"; 	duty1--;
                                    1- 2189     	BANKSEL	_duty1
     00FB rrrr                      3-   71 m1      .banksel ram_address
     00FC 06rr                      1- 2190     	DECR	_duty1,F
     00FD                           1- 2191     _00370_DS_:
                                    1- 2192     	.line	533, "main.c"; 	return 0;
     00FD 2100                      1- 2193     	MOVIA	0x00
     00FE                           1- 2194     _00372_DS_:
                                    1- 2195     	.line	537, "main.c"; 	}
                                    1- 2196     	RETURN	
     00FE 0010                      3-   26 m1      ret
                                    1- 2197     ; exit point of _isNotFan
                                    1- 2199     ;***
                                    1- 2200     ;  pBlock Stats: dbName = C
                                    1- 2201     ;***
                                    1- 2202     ;has an exit
                                    1- 2203     ;functions called:
                                    1- 2204     ;   _delay
                                    1- 2205     ;   _delay
                                    1- 2206     ;1 compiler assigned register :
                                    1- 2207     ;   STK00
                                    1- 2208     ;; Starting pCode block
                                    1- 2209     .segment "code"; module=main, function=_initAD
     0000                           1- 2211     _initAD:
                                    1- 2212     ; 2 exit points
                                    1- 2213     	.line	434, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA2 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2182                      1- 2214     	MOVIA	0x82
     0001 00rr                      1- 2215     	MOVAR	_ADMD
                                    1- 2216     	.line	437, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 02rr                      1- 2217     	CLRR	_ADVREFH
                                    1- 2218     	.line	444, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2219     	MOVIA	0x10
     0004 00rr                      1- 2220     	MOVAR	_ADR
                                    1- 2221     	.line	446, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2222     	MOVIA	0x03
     0006 00rr                      1- 2223     	MOVAR	_ADCR
                                    1- 2224     	.line	448, "main.c"; 	PACON = 0x4E ;						// PB1 PA1 PA2 PA3为AD监测脚位
     0007 214E                      1- 2225     	MOVIA	0x4e
     0008 00rr                      1- 2226     	MOVAR	_PACON
                                    1- 2227     	.line	449, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 2228     	BSR	_ADMDbits,4
                                    1- 2229     	.line	450, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 2230     	MOVIA	0x64
     000B 00rr                      1- 2231     	MOVAR	STK00
     000C 2100                      1- 2232     	MOVIA	0x00
     000D 2rrr                      1- 2233     	LCALL	_delay
                                    1- 2234     	.line	453, "main.c"; 	}
                                    1- 2235     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 2236     ; exit point of _initAD
                                    1- 2238     ;***
                                    1- 2239     ;  pBlock Stats: dbName = C
                                    1- 2240     ;***
                                    1- 2241     ;has an exit
                                    1- 2242     ;5 compiler assigned registers:
                                    1- 2243     ;   r0x102C
                                    1- 2244     ;   STK00
                                    1- 2245     ;   r0x102D
                                    1- 2246     ;   r0x102E
                                    1- 2247     ;   r0x102F
                                    1- 2248     ;; Starting pCode block
                                    1- 2249     .segment "code"; module=main, function=_delay
                                    1- 2251     ;local variable name mapping:
     0000                           1- 2256     _delay:
                                    1- 2257     ; 2 exit points
                                    1- 2258     	.line	426, "main.c"; 	void delay(uint16_t time)
                                    1- 2259     	BANKSEL	r0x102C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2260     	MOVAR	r0x102C
     0002 01rr                      1- 2261     	MOVR	STK00,W
                                    1- 2262     	BANKSEL	r0x102D
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 2263     	MOVAR	r0x102D
                                    1- 2264     	.line	428, "main.c"; 	for(uint16_t i=0;i<time;i++);
                                    1- 2265     	BANKSEL	r0x102E
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 2266     	CLRR	r0x102E
                                    1- 2267     	BANKSEL	r0x102F
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 2268     	CLRR	r0x102F
     0009                           1- 2269     _00303_DS_:
                                    1- 2270     	BANKSEL	r0x102C
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1- 2271     	MOVR	r0x102C,W
                                    1- 2272     	BANKSEL	r0x102F
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1- 2273     	SUBAR	r0x102F,W
     000D 0903                      1- 2274     	BTRSS	STATUS,2
     000E 3rrr                      1- 2275     	LGOTO	_00314_DS_
                                    1- 2276     	BANKSEL	r0x102D
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 2277     	MOVR	r0x102D,W
                                    1- 2278     	BANKSEL	r0x102E
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1- 2279     	SUBAR	r0x102E,W
     0013                           1- 2280     _00314_DS_:
     0013 0C03                      1- 2281     	BTRSC	STATUS,0
     0014 3rrr                      1- 2282     	LGOTO	_00305_DS_
                                    1- 2283     	BANKSEL	r0x102E
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1- 2284     	INCR	r0x102E,F
     0017 0903                      1- 2285     	BTRSS	STATUS,2
     0018 3rrr                      1- 2286     	LGOTO	_00010_DS_
                                    1- 2287     	BANKSEL	r0x102F
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1- 2288     	INCR	r0x102F,F
     001B                           1- 2289     _00010_DS_:
     001B 3rrr                      1- 2290     	LGOTO	_00303_DS_
     001C                           1- 2291     _00305_DS_:
                                    1- 2292     	.line	429, "main.c"; 	}
                                    1- 2293     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1- 2294     ; exit point of _delay
                                    1- 2296     ;***
                                    1- 2297     ;  pBlock Stats: dbName = C
                                    1- 2298     ;***
                                    1- 2299     ;has an exit
                                    1- 2300     ;; Starting pCode block
                                    1- 2301     .segment "code"; module=main, function=_processKey
     0000                           1- 2303     _processKey:
                                    1- 2304     ; 2 exit points
                                    1- 2305     	.line	390, "main.c"; 	workStep += 1;
                                    1- 2306     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 2307     	INCR	_workStep,F
                                    1- 2308     ;;unsigned compare: left < lit (0x4=4), size=1
                                    1- 2309     	.line	391, "main.c"; 	if(workStep >= 4)
     0002 2104                      1- 2310     	MOVIA	0x04
     0003 04rr                      1- 2311     	SUBAR	_workStep,W
     0004 0C03                      1- 2312     	BTRSC	STATUS,0
                                    1- 2313     	.line	392, "main.c"; 	workStep = 0;
     0005 02rr                      1- 2314     	CLRR	_workStep
                                    1- 2315     	.line	393, "main.c"; 	switch(workStep)
     0006 2104                      1- 2316     	MOVIA	0x04
     0007 04rr                      1- 2317     	SUBAR	_workStep,W
     0008 0C03                      1- 2318     	BTRSC	STATUS,0
     0009 3rrr                      1- 2319     	LGOTO	_00279_DS_
     000A 21rr                      1- 2320     	MOVIA	((_00296_DS_ >> 8) & 0xff)
     000B 008A                      1- 2321     	MOVAR	PCHBUF
     000C 01rr                      1- 2322     	MOVR	_workStep,W
     000D 25rr                      1- 2323     	ADDIA	_00296_DS_
     000E 0C03                      1- 2324     	BTRSC	STATUS,0
     000F 058A                      1- 2325     	INCR	PCHBUF,F
     0010 0082                      1- 2326     	MOVAR	PCL
     0011                           1- 2327     _00296_DS_:
     0011 3rrr                      1- 2328     	LGOTO	_00275_DS_
     0012 3rrr                      1- 2329     	LGOTO	_00276_DS_
     0013 3rrr                      1- 2330     	LGOTO	_00277_DS_
     0014 3rrr                      1- 2331     	LGOTO	_00278_DS_
     0015                           1- 2332     _00275_DS_:
                                    1- 2333     	.line	396, "main.c"; 	tempDuty = 0;
                                    1- 2334     	BANKSEL	_tempDuty
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 2335     	CLRR	_tempDuty
                                    1- 2336     	.line	397, "main.c"; 	count15S = 0;	//补充电
                                    1- 2337     	BANKSEL	_count15S
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 02rr                      1- 2338     	CLRR	_count15S
     0019 02rr                      1- 2339     	CLRR	(_count15S + 1)
                                    1- 2340     	.line	398, "main.c"; 	break;
     001A 3rrr                      1- 2341     	LGOTO	_00279_DS_
     001B                           1- 2342     _00276_DS_:
                                    1- 2343     	.line	400, "main.c"; 	duty1 = 5;
     001B 2105                      1- 2344     	MOVIA	0x05
                                    1- 2345     	BANKSEL	_duty1
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1- 2346     	MOVAR	_duty1
                                    1- 2347     	.line	401, "main.c"; 	tempDuty = 16;
     001E 2110                      1- 2348     	MOVIA	0x10
                                    1- 2349     	BANKSEL	_tempDuty
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 2350     	MOVAR	_tempDuty
                                    1- 2351     	.line	402, "main.c"; 	break;
     0021 3rrr                      1- 2352     	LGOTO	_00279_DS_
     0022                           1- 2353     _00277_DS_:
                                    1- 2354     	.line	404, "main.c"; 	duty1 = 8;
     0022 2108                      1- 2355     	MOVIA	0x08
                                    1- 2356     	BANKSEL	_duty1
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 2357     	MOVAR	_duty1
                                    1- 2358     	.line	405, "main.c"; 	tempDuty = 16;
     0025 2110                      1- 2359     	MOVIA	0x10
                                    1- 2360     	BANKSEL	_tempDuty
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1- 2361     	MOVAR	_tempDuty
                                    1- 2362     	.line	406, "main.c"; 	break;
     0028 3rrr                      1- 2363     	LGOTO	_00279_DS_
     0029                           1- 2364     _00278_DS_:
                                    1- 2365     	.line	408, "main.c"; 	duty1 = 11;
     0029 210B                      1- 2366     	MOVIA	0x0b
                                    1- 2367     	BANKSEL	_duty1
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 00rr                      1- 2368     	MOVAR	_duty1
                                    1- 2369     	.line	409, "main.c"; 	tempDuty = 16;
     002C 2110                      1- 2370     	MOVIA	0x10
                                    1- 2371     	BANKSEL	_tempDuty
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 2372     	MOVAR	_tempDuty
     002F                           1- 2373     _00279_DS_:
                                    1- 2374     	.line	413, "main.c"; 	if(workStep)
                                    1- 2375     	BANKSEL	_workStep
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 2376     	MOVR	_workStep,W
     0031 0D03                      1- 2377     	BTRSC	STATUS,2
     0032 3rrr                      1- 2378     	LGOTO	_00281_DS_
                                    1- 2379     	.line	415, "main.c"; 	PORTB |= 0x02;	//打开IO_FAN
     0033 18rr                      1- 2380     	BSR	_PORTB,1
                                    1- 2381     	.line	416, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	
     0034 2183                      1- 2382     	MOVIA	0x83
     0035 00rr                      1- 2383     	SFUN	_T1CR1
     0036 3rrr                      1- 2384     	LGOTO	_00283_DS_
     0037                           1- 2385     _00281_DS_:
                                    1- 2386     	.line	419, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0037 0200                      1- 2387     	CLRA	
     0038 00rr                      1- 2388     	SFUN	_T1CR1
     0039                           1- 2389     _00283_DS_:
                                    1- 2390     	.line	421, "main.c"; 	}
                                    1- 2391     	RETURN	
     0039 0010                      3-   26 m1      ret
                                    1- 2392     ; exit point of _processKey
                                    1- 2394     ;***
                                    1- 2395     ;  pBlock Stats: dbName = C
                                    1- 2396     ;***
                                    1- 2397     ;has an exit
                                    1- 2398     ;functions called:
                                    1- 2399     ;   _checkBat
                                    1- 2400     ;   _checkBat
                                    1- 2401     ;1 compiler assigned register :
                                    1- 2402     ;   r0x1056
                                    1- 2403     ;; Starting pCode block
                                    1- 2404     .segment "code"; module=main, function=_checkUsbInput
     0000                           1- 2406     _checkUsbInput:
                                    1- 2407     ; 2 exit points
                                    1- 2408     	.line	310, "main.c"; 	if(PORTA & 0x20)
     0000 0Arr                      1- 2409     	BTRSS	_PORTA,5
     0001 3rrr                      1- 2410     	LGOTO	_00201_DS_
                                    1- 2411     	.line	311, "main.c"; 	usbFlag = 1;
     0002 2101                      1- 2412     	MOVIA	0x01
                                    1- 2413     	BANKSEL	_usbFlag
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 2414     	MOVAR	_usbFlag
     0005 3rrr                      1- 2415     	LGOTO	_00202_DS_
     0006                           1- 2416     _00201_DS_:
                                    1- 2417     	.line	313, "main.c"; 	usbFlag = 0;
                                    1- 2418     	BANKSEL	_usbFlag
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 2419     	CLRR	_usbFlag
     0008                           1- 2420     _00202_DS_:
                                    1- 2421     	.line	316, "main.c"; 	UPDATE_REG(PORTA);
     0008 01rr                      1- 2422     	MOVR	_PORTA,F
                                    1- 2423     	.line	317, "main.c"; 	if(PORTA & 0x40)
     0009 0Brr                      1- 2424     	BTRSS	_PORTA,6
     000A 3rrr                      1- 2425     	LGOTO	_00204_DS_
                                    1- 2426     	.line	319, "main.c"; 	batFullFlag = 1;
     000B 2101                      1- 2427     	MOVIA	0x01
                                    1- 2428     	BANKSEL	_batFullFlag
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 2429     	MOVAR	_batFullFlag
     000E 3rrr                      1- 2430     	LGOTO	_00205_DS_
     000F                           1- 2431     _00204_DS_:
                                    1- 2432     	.line	323, "main.c"; 	batFullFlag = 0;
                                    1- 2433     	BANKSEL	_batFullFlag
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1- 2434     	CLRR	_batFullFlag
     0011                           1- 2435     _00205_DS_:
                                    1- 2436     	.line	325, "main.c"; 	if(usbFlag)
                                    1- 2437     	BANKSEL	_usbFlag
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2438     	MOVR	_usbFlag,W
     0013 0D03                      1- 2439     	BTRSC	STATUS,2
     0014 3rrr                      1- 2440     	LGOTO	_00228_DS_
                                    1- 2441     	.line	327, "main.c"; 	usbTime = 0;
                                    1- 2442     	BANKSEL	_usbTime
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 2443     	CLRR	_usbTime
                                    1- 2444     	.line	328, "main.c"; 	if(workStep > 0 || count15S > 1500)
                                    1- 2445     	BANKSEL	_workStep
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1- 2446     	MOVR	_workStep,W
     0019 0903                      1- 2447     	BTRSS	STATUS,2
     001A 3rrr                      1- 2448     	LGOTO	_00221_DS_
                                    1- 2449     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2450     ;;unsigned compare: left >= lit (0x5DD=1501), size=2
     001B 2105                      1- 2451     	MOVIA	0x05
                                    1- 2452     	BANKSEL	_count15S
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 04rr                      1- 2453     	SUBAR	(_count15S + 1),W
     001E 0903                      1- 2454     	BTRSS	STATUS,2
     001F 3rrr                      1- 2455     	LGOTO	_00265_DS_
     0020 21DD                      1- 2456     	MOVIA	0xdd
     0021 04rr                      1- 2457     	SUBAR	_count15S,W
     0022                           1- 2458     _00265_DS_:
     0022 0803                      1- 2459     	BTRSS	STATUS,0
     0023 3rrr                      1- 2460     	LGOTO	_00222_DS_
     0024                           1- 2461     _00221_DS_:
                                    1- 2462     	.line	330, "main.c"; 	PWM2DUTY = 0;
     0024 0200                      1- 2463     	CLRA	
     0025 00rr                      1- 2464     	SFUN	_PWM2DUTY
                                    1- 2465     	.line	331, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0026 00rr                      1- 2466     	SFUN	_T2CR1
                                    1- 2467     	.line	332, "main.c"; 	setbit(PORTB, 2);
     0027 19rr                      1- 2468     	BSR	_PORTB,2
     0028 3rrr                      1- 2469     	LGOTO	_00230_DS_
     0029                           1- 2470     _00222_DS_:
                                    1- 2471     	.line	336, "main.c"; 	if(batFullFlag)
                                    1- 2472     	BANKSEL	_batFullFlag
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 2473     	MOVR	_batFullFlag,W
     002B 0D03                      1- 2474     	BTRSC	STATUS,2
     002C 3rrr                      1- 2475     	LGOTO	_00219_DS_
                                    1- 2476     	.line	338, "main.c"; 	PWM2DUTY = 0;
     002D 0200                      1- 2477     	CLRA	
     002E 00rr                      1- 2478     	SFUN	_PWM2DUTY
                                    1- 2479     	.line	339, "main.c"; 	T2CR1 = C_TMR2_Dis;
     002F 00rr                      1- 2480     	SFUN	_T2CR1
                                    1- 2481     	.line	340, "main.c"; 	setbit(PORTB, 2);
     0030 19rr                      1- 2482     	BSR	_PORTB,2
     0031 3rrr                      1- 2483     	LGOTO	_00230_DS_
     0032                           1- 2484     _00219_DS_:
                                    1- 2485     	.line	344, "main.c"; 	checkBat();
     0032 2rrr                      1- 2486     	LCALL	_checkBat
                                    1- 2487     	.line	345, "main.c"; 	if(chrgSpeed == 0)
                                    1- 2488     	BANKSEL	_chrgSpeed
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 2489     	MOVR	_chrgSpeed,W
     0035 0903                      1- 2490     	BTRSS	STATUS,2
     0036 3rrr                      1- 2491     	LGOTO	_00216_DS_
                                    1- 2492     	.line	346, "main.c"; 	PWM2DUTY = 32;
     0037 2120                      1- 2493     	MOVIA	0x20
     0038 00rr                      1- 2494     	SFUN	_PWM2DUTY
     0039 3rrr                      1- 2495     	LGOTO	_00217_DS_
     003A                           1- 2496     _00216_DS_:
                                    1- 2497     	.line	350, "main.c"; 	if(++chrgCount >= 10)
                                    1- 2498     	BANKSEL	_chrgCount
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 05rr                      1- 2499     	INCR	_chrgCount,F
                                    1- 2500     ;;unsigned compare: left < lit (0xA=10), size=1
     003C 210A                      1- 2501     	MOVIA	0x0a
     003D 04rr                      1- 2502     	SUBAR	_chrgCount,W
     003E 0803                      1- 2503     	BTRSS	STATUS,0
     003F 3rrr                      1- 2504     	LGOTO	_00217_DS_
                                    1- 2505     	.line	352, "main.c"; 	chrgCount = 0;
     0040 02rr                      1- 2506     	CLRR	_chrgCount
                                    1- 2507     ;;unsigned compare: left < lit (0x2=2), size=2
                                    1- 2508     	.line	353, "main.c"; 	if(duty2 < 2)
     0041 2100                      1- 2509     	MOVIA	0x00
                                    1- 2510     	BANKSEL	_duty2
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 04rr                      1- 2511     	SUBAR	(_duty2 + 1),W
     0044 0903                      1- 2512     	BTRSS	STATUS,2
     0045 3rrr                      1- 2513     	LGOTO	_00267_DS_
     0046 2102                      1- 2514     	MOVIA	0x02
     0047 04rr                      1- 2515     	SUBAR	_duty2,W
     0048                           1- 2516     _00267_DS_:
     0048 0C03                      1- 2517     	BTRSC	STATUS,0
     0049 3rrr                      1- 2518     	LGOTO	_00209_DS_
                                    1- 2519     	.line	354, "main.c"; 	duty2 = 2;
     004A 2102                      1- 2520     	MOVIA	0x02
                                    1- 2521     	BANKSEL	_duty2
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1- 2522     	MOVAR	_duty2
     004D 02rr                      1- 2523     	CLRR	(_duty2 + 1)
     004E 3rrr                      1- 2524     	LGOTO	_00210_DS_
                                    1- 2525     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2526     ;;unsigned compare: left >= lit (0x21=33), size=2
     004F                           1- 2527     _00209_DS_:
                                    1- 2528     	.line	355, "main.c"; 	else if(duty2 > 32)
     004F 2100                      1- 2529     	MOVIA	0x00
                                    1- 2530     	BANKSEL	_duty2
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 04rr                      1- 2531     	SUBAR	(_duty2 + 1),W
     0052 0903                      1- 2532     	BTRSS	STATUS,2
     0053 3rrr                      1- 2533     	LGOTO	_00268_DS_
     0054 2121                      1- 2534     	MOVIA	0x21
     0055 04rr                      1- 2535     	SUBAR	_duty2,W
     0056                           1- 2536     _00268_DS_:
     0056 0803                      1- 2537     	BTRSS	STATUS,0
     0057 3rrr                      1- 2538     	LGOTO	_00210_DS_
                                    1- 2539     	.line	356, "main.c"; 	duty2 = 32;
     0058 2120                      1- 2540     	MOVIA	0x20
                                    1- 2541     	BANKSEL	_duty2
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 00rr                      1- 2542     	MOVAR	_duty2
     005B 02rr                      1- 2543     	CLRR	(_duty2 + 1)
     005C                           1- 2544     _00210_DS_:
                                    1- 2545     	.line	357, "main.c"; 	duty2LockTime--;
                                    1- 2546     	BANKSEL	_duty2LockTime
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 17rr                      1- 2547     	DECRSZ	_duty2LockTime,F
                                    1- 2548     	.line	358, "main.c"; 	if(duty2LockTime == 0)
     005E 3rrr                      1- 2549     	LGOTO	_00217_DS_
                                    1- 2550     	.line	360, "main.c"; 	PWM2DUTY = duty2;
                                    1- 2551     	BANKSEL	_duty2
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 01rr                      1- 2552     	MOVR	_duty2,W
                                    1- 2553     ;;1	MOVAR	r0x1056
     0061 00rr                      1- 2554     	SFUN	_PWM2DUTY
                                    1- 2555     	.line	361, "main.c"; 	duty2LockTime = 10;
     0062 210A                      1- 2556     	MOVIA	0x0a
                                    1- 2557     	BANKSEL	_duty2LockTime
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 00rr                      1- 2558     	MOVAR	_duty2LockTime
     0065                           1- 2559     _00217_DS_:
                                    1- 2560     	.line	366, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;
     0065 2183                      1- 2561     	MOVIA	0x83
     0066 00rr                      1- 2562     	SFUN	_T2CR1
                                    1- 2563     	.line	367, "main.c"; 	count15S = 0;
                                    1- 2564     	BANKSEL	_count15S
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 02rr                      1- 2565     	CLRR	_count15S
     0069 02rr                      1- 2566     	CLRR	(_count15S + 1)
     006A 3rrr                      1- 2567     	LGOTO	_00230_DS_
     006B                           1- 2568     _00228_DS_:
                                    1- 2569     	.line	375, "main.c"; 	if(++usbTime >= 100)
                                    1- 2570     	BANKSEL	_usbTime
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 05rr                      1- 2571     	INCR	_usbTime,F
                                    1- 2572     ;;unsigned compare: left < lit (0x64=100), size=1
     006D 2164                      1- 2573     	MOVIA	0x64
     006E 04rr                      1- 2574     	SUBAR	_usbTime,W
     006F 0803                      1- 2575     	BTRSS	STATUS,0
     0070 3rrr                      1- 2576     	LGOTO	_00230_DS_
                                    1- 2577     	.line	377, "main.c"; 	usbTime = 0;
     0071 02rr                      1- 2578     	CLRR	_usbTime
                                    1- 2579     	.line	378, "main.c"; 	PWM2DUTY = 0;
     0072 0200                      1- 2580     	CLRA	
     0073 00rr                      1- 2581     	SFUN	_PWM2DUTY
                                    1- 2582     	.line	379, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0074 00rr                      1- 2583     	SFUN	_T2CR1
                                    1- 2584     	.line	380, "main.c"; 	resetbit(PORTB, 2);
     0075 1Drr                      1- 2585     	BCR	_PORTB,2
     0076                           1- 2586     _00230_DS_:
                                    1- 2587     	.line	384, "main.c"; 	}
                                    1- 2588     	RETURN	
     0076 0010                      3-   26 m1      ret
                                    1- 2589     ; exit point of _checkUsbInput
                                    1- 2591     ;***
                                    1- 2592     ;  pBlock Stats: dbName = C
                                    1- 2593     ;***
                                    1- 2594     ;has an exit
                                    1- 2595     ;functions called:
                                    1- 2596     ;   _checkOut
                                    1- 2597     ;   _delay
                                    1- 2598     ;   _isNotFan
                                    1- 2599     ;   _pwm1Stop
                                    1- 2600     ;   _checkOut
                                    1- 2601     ;   _delay
                                    1- 2602     ;   _isNotFan
                                    1- 2603     ;   _pwm1Stop
                                    1- 2604     ;2 compiler assigned registers:
                                    1- 2605     ;   STK00
                                    1- 2606     ;   r0x1057
                                    1- 2607     ;; Starting pCode block
                                    1- 2608     .segment "code"; module=main, function=_fanUseable
     0000                           1- 2610     _fanUseable:
                                    1- 2611     ; 2 exit points
                                    1- 2612     	.line	269, "main.c"; 	checkOut();
     0000 2rrr                      1- 2613     	LCALL	_checkOut
                                    1- 2614     	.line	272, "main.c"; 	if(duty1 > tempDuty)		//最大占空比
                                    1- 2615     	BANKSEL	_duty1
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 01rr                      1- 2616     	MOVR	_duty1,W
                                    1- 2617     	BANKSEL	_tempDuty
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 04rr                      1- 2618     	SUBAR	_tempDuty,W
     0005 0C03                      1- 2619     	BTRSC	STATUS,0
     0006 3rrr                      1- 2620     	LGOTO	_00187_DS_
                                    1- 2621     	.line	274, "main.c"; 	duty1 = tempDuty;
     0007 01rr                      1- 2622     	MOVR	_tempDuty,W
                                    1- 2623     	BANKSEL	_duty1
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 2624     	MOVAR	_duty1
     000A                           1- 2625     _00187_DS_:
                                    1- 2626     	.line	276, "main.c"; 	delay(100);
     000A 2164                      1- 2627     	MOVIA	0x64
     000B 00rr                      1- 2628     	MOVAR	STK00
     000C 2100                      1- 2629     	MOVIA	0x00
     000D 2rrr                      1- 2630     	LCALL	_delay
                                    1- 2631     	.line	279, "main.c"; 	if(isNotFan())
     000E 2rrr                      1- 2632     	LCALL	_isNotFan
                                    1- 2633     	BANKSEL	r0x1057
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 2634     	MOVAR	r0x1057
     0011 01rr                      1- 2635     	MOVR	r0x1057,W
     0012 0D03                      1- 2636     	BTRSC	STATUS,2
     0013 3rrr                      1- 2637     	LGOTO	_00193_DS_
                                    1- 2638     	.line	282, "main.c"; 	if(++nullcount >= 100)	//检测500ms
                                    1- 2639     	BANKSEL	_nullcount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1- 2640     	INCR	_nullcount,F
                                    1- 2641     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1- 2642     	MOVIA	0x64
     0017 04rr                      1- 2643     	SUBAR	_nullcount,W
     0018 0803                      1- 2644     	BTRSS	STATUS,0
     0019 3rrr                      1- 2645     	LGOTO	_00195_DS_
                                    1- 2646     	.line	284, "main.c"; 	pwm1Stop();
     001A 2rrr                      1- 2647     	LCALL	_pwm1Stop
                                    1- 2648     	.line	285, "main.c"; 	PORTB &= 0xFD;	//IO_FAN断开
     001B 1Crr                      1- 2649     	BCR	_PORTB,1
                                    1- 2650     	.line	286, "main.c"; 	nullcount = 0;
                                    1- 2651     	BANKSEL	_nullcount
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1- 2652     	CLRR	_nullcount
                                    1- 2653     	.line	287, "main.c"; 	count200ms = 0;
                                    1- 2654     	BANKSEL	_count200ms
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 02rr                      1- 2655     	CLRR	_count200ms
     0020 3rrr                      1- 2656     	LGOTO	_00195_DS_
     0021                           1- 2657     _00193_DS_:
                                    1- 2658     	.line	296, "main.c"; 	PORTB |= 0x02;	//打开IO_FAN
     0021 18rr                      1- 2659     	BSR	_PORTB,1
                                    1- 2660     	.line	297, "main.c"; 	nullcount = 0;
                                    1- 2661     	BANKSEL	_nullcount
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 02rr                      1- 2662     	CLRR	_nullcount
                                    1- 2663     	.line	298, "main.c"; 	PWM1DUTY = duty1;
                                    1- 2664     	BANKSEL	_duty1
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 2665     	MOVR	_duty1,W
     0026 00rr                      1- 2666     	SFUN	_PWM1DUTY
                                    1- 2667     	.line	299, "main.c"; 	if(T1CR1 == C_TMR1_Dis)
     0027 00rr                      1- 2668     	SFUNR	_T1CR1
                                    1- 2669     	BANKSEL	r0x1057
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 00rr                      1- 2670     	MOVAR	r0x1057
     002A 01rr                      1- 2671     	MOVR	r0x1057,W
     002B 0903                      1- 2672     	BTRSS	STATUS,2
     002C 3rrr                      1- 2673     	LGOTO	_00195_DS_
                                    1- 2674     	.line	300, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;
     002D 2183                      1- 2675     	MOVIA	0x83
     002E 00rr                      1- 2676     	SFUN	_T1CR1
     002F                           1- 2677     _00195_DS_:
                                    1- 2678     	.line	305, "main.c"; 	}
                                    1- 2679     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 2680     ; exit point of _fanUseable
                                    1- 2682     ;***
                                    1- 2683     ;  pBlock Stats: dbName = C
                                    1- 2684     ;***
                                    1- 2685     ;has an exit
                                    1- 2686     ;; Starting pCode block
                                    1- 2687     .segment "code"; module=main, function=_ledCon
     0000                           1- 2689     _ledCon:
                                    1- 2690     ; 2 exit points
                                    1- 2691     	.line	228, "main.c"; 	if(!usbFlag)
                                    1- 2692     	BANKSEL	_usbFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2693     	MOVR	_usbFlag,W
     0002 0903                      1- 2694     	BTRSS	STATUS,2
     0003 3rrr                      1- 2695     	LGOTO	_00157_DS_
                                    1- 2696     	.line	230, "main.c"; 	PORTA &= 0xFE;
     0004 1Crr                      1- 2697     	BCR	_PORTA,0
                                    1- 2698     	.line	231, "main.c"; 	count15S = 0;
                                    1- 2699     	BANKSEL	_count15S
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 2700     	CLRR	_count15S
     0007 02rr                      1- 2701     	CLRR	(_count15S + 1)
     0008 3rrr                      1- 2702     	LGOTO	_00158_DS_
     0009                           1- 2703     _00157_DS_:
                                    1- 2704     	.line	235, "main.c"; 	count15S++;
                                    1- 2705     	BANKSEL	_count15S
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 05rr                      1- 2706     	INCR	_count15S,F
     000B 0D03                      1- 2707     	BTRSC	STATUS,2
     000C 05rr                      1- 2708     	INCR	(_count15S + 1),F
                                    1- 2709     ;;unsigned compare: left < lit (0x5DC=1500), size=2
                                    1- 2710     	.line	236, "main.c"; 	if(count15S >= 1500)
     000D 2105                      1- 2711     	MOVIA	0x05
     000E 04rr                      1- 2712     	SUBAR	(_count15S + 1),W
     000F 0903                      1- 2713     	BTRSS	STATUS,2
     0010 3rrr                      1- 2714     	LGOTO	_00181_DS_
     0011 21DC                      1- 2715     	MOVIA	0xdc
     0012 04rr                      1- 2716     	SUBAR	_count15S,W
     0013                           1- 2717     _00181_DS_:
     0013 0803                      1- 2718     	BTRSS	STATUS,0
     0014 3rrr                      1- 2719     	LGOTO	_00154_DS_
                                    1- 2720     	.line	238, "main.c"; 	count15S = 1500;
     0015 21DC                      1- 2721     	MOVIA	0xdc
                                    1- 2722     	BANKSEL	_count15S
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 2723     	MOVAR	_count15S
     0018 2105                      1- 2724     	MOVIA	0x05
     0019 00rr                      1- 2725     	MOVAR	(_count15S + 1)
                                    1- 2726     	.line	240, "main.c"; 	PORTA |= 1;
     001A 18rr                      1- 2727     	BSR	_PORTA,0
     001B 3rrr                      1- 2728     	LGOTO	_00158_DS_
     001C                           1- 2729     _00154_DS_:
                                    1- 2730     	.line	245, "main.c"; 	count500ms++;
                                    1- 2731     	BANKSEL	_count500ms
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 05rr                      1- 2732     	INCR	_count500ms,F
                                    1- 2733     	.line	246, "main.c"; 	if(count500ms == 100)
     001E 01rr                      1- 2734     	MOVR	_count500ms,W
     001F 2464                      1- 2735     	XORIA	0x64
     0020 0903                      1- 2736     	BTRSS	STATUS,2
     0021 3rrr                      1- 2737     	LGOTO	_00158_DS_
                                    1- 2738     	.line	248, "main.c"; 	count500ms = 0;
     0022 02rr                      1- 2739     	CLRR	_count500ms
                                    1- 2740     	.line	249, "main.c"; 	reversebit(PORTA,0);
     0023 2101                      1- 2741     	MOVIA	0x01
     0024 12rr                      1- 2742     	XORAR	_PORTA,F
     0025                           1- 2743     _00158_DS_:
                                    1- 2744     	.line	253, "main.c"; 	if(!batFullFlag)
                                    1- 2745     	BANKSEL	_batFullFlag
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 2746     	MOVR	_batFullFlag,W
     0027 0903                      1- 2747     	BTRSS	STATUS,2
     0028 3rrr                      1- 2748     	LGOTO	_00160_DS_
                                    1- 2749     	.line	255, "main.c"; 	count15S = 0;
                                    1- 2750     	BANKSEL	_count15S
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 02rr                      1- 2751     	CLRR	_count15S
     002B 02rr                      1- 2752     	CLRR	(_count15S + 1)
     002C                           1- 2753     _00160_DS_:
                                    1- 2754     	.line	259, "main.c"; 	if(workStep)
                                    1- 2755     	BANKSEL	_workStep
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1- 2756     	MOVR	_workStep,W
     002E 0D03                      1- 2757     	BTRSC	STATUS,2
     002F 3rrr                      1- 2758     	LGOTO	_00162_DS_
                                    1- 2759     	.line	260, "main.c"; 	PORTB |= 1;
     0030 18rr                      1- 2760     	BSR	_PORTB,0
     0031 3rrr                      1- 2761     	LGOTO	_00164_DS_
     0032                           1- 2762     _00162_DS_:
                                    1- 2763     	.line	262, "main.c"; 	PORTB &= 0xFE;
     0032 1Crr                      1- 2764     	BCR	_PORTB,0
     0033                           1- 2765     _00164_DS_:
                                    1- 2766     	.line	263, "main.c"; 	}
                                    1- 2767     	RETURN	
     0033 0010                      3-   26 m1      ret
                                    1- 2768     ; exit point of _ledCon
                                    1- 2770     ;***
                                    1- 2771     ;  pBlock Stats: dbName = C
                                    1- 2772     ;***
                                    1- 2773     ;has an exit
                                    1- 2774     ;; Starting pCode block
                                    1- 2775     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2777     _pwm1Stop:
                                    1- 2778     ; 2 exit points
                                    1- 2779     	.line	219, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2780     	CLRA	
     0001 00rr                      1- 2781     	SFUN	_T1CR1
                                    1- 2782     	.line	220, "main.c"; 	PORTB &= 0x05; 	//关闭
     0002 2105                      1- 2783     	MOVIA	0x05
     0003 10rr                      1- 2784     	ANDAR	_PORTB,F
                                    1- 2785     	.line	221, "main.c"; 	PWM1DUTY = 0;
     0004 0200                      1- 2786     	CLRA	
     0005 00rr                      1- 2787     	SFUN	_PWM1DUTY
                                    1- 2788     	.line	222, "main.c"; 	PORTB &= 0xFD;	//IO_FAN断开
     0006 1Crr                      1- 2789     	BCR	_PORTB,1
                                    1- 2790     	.line	223, "main.c"; 	}
                                    1- 2791     	RETURN	
     0007 0010                      3-   26 m1      ret
                                    1- 2792     ; exit point of _pwm1Stop
                                    1- 2794     ;***
                                    1- 2795     ;  pBlock Stats: dbName = C
                                    1- 2796     ;***
                                    1- 2797     ;has an exit
                                    1- 2798     ;functions called:
                                    1- 2799     ;   _initAD
                                    1- 2800     ;   _initAD
                                    1- 2801     ;; Starting pCode block
                                    1- 2802     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2804     _gotoSleep:
                                    1- 2805     ; 2 exit points
                                    1- 2806     	.line	194, "main.c"; 	sleepDelay = 0;
                                    1- 2807     	BANKSEL	_sleepDelay
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 2808     	CLRR	_sleepDelay
                                    1- 2809     	.line	195, "main.c"; 	workStep = 0;
                                    1- 2810     	BANKSEL	_workStep
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 2811     	CLRR	_workStep
                                    1- 2812     	.line	196, "main.c"; 	AWUCON = 0xE0;		//PA5 PA6 PA7唤醒
     0004 21E0                      1- 2813     	MOVIA	0xe0
     0005 00rr                      1- 2814     	MOVAR	_AWUCON
                                    1- 2815     	.line	197, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0006 0200                      1- 2816     	CLRA	
     0007 00rr                      1- 2817     	SFUN	_T1CR1
                                    1- 2818     	.line	198, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0008 00rr                      1- 2819     	SFUN	_T2CR1
                                    1- 2820     	.line	199, "main.c"; 	PORTB = 0x00; 	//关闭
     0009 02rr                      1- 2821     	CLRR	_PORTB
                                    1- 2822     	.line	200, "main.c"; 	PWM1DUTY = 0;
     000A 0200                      1- 2823     	CLRA	
     000B 00rr                      1- 2824     	SFUN	_PWM1DUTY
                                    1- 2825     	.line	201, "main.c"; 	PWM2DUTY = 0;
     000C 00rr                      1- 2826     	SFUN	_PWM2DUTY
                                    1- 2827     	.line	203, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     000D 2103                      1- 2828     	MOVIA	0x03
     000E 00rr                      1- 2829     	MOVAR	_INTE
                                    1- 2830     	.line	204, "main.c"; 	PCON =  C_LVR_En | C_LVR_En;	
     000F 2108                      1- 2831     	MOVIA	0x08
     0010 00rr                      1- 2832     	MOVAR	_PCON
                                    1- 2833     	.line	205, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0011 02rr                      1- 2834     	CLRR	_INTF
                                    1- 2835     	.line	206, "main.c"; 	CLRWDT();
     0012 0002                      1- 2836     	clrwdt
                                    1- 2837     	.line	207, "main.c"; 	sleepFlag = 1;
     0013 2101                      1- 2838     	MOVIA	0x01
                                    1- 2839     	BANKSEL	_sleepFlag
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 2840     	MOVAR	_sleepFlag
                                    1- 2841     	.line	208, "main.c"; 	SLEEP();
     0016 0001                      1- 2842     	sleep
                                    1- 2843     	.line	209, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0017 2101                      1- 2844     	MOVIA	0x01
     0018 00rr                      1- 2845     	MOVAR	_INTE
                                    1- 2846     	.line	210, "main.c"; 	INTF = 0;
     0019 02rr                      1- 2847     	CLRR	_INTF
                                    1- 2848     	.line	212, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     001A 21A8                      1- 2849     	MOVIA	0xa8
     001B 00rr                      1- 2850     	MOVAR	_PCON
                                    1- 2851     	.line	213, "main.c"; 	PCON |= 0x10;			//关闭上拉
     001C 1Arr                      1- 2852     	BSR	_PCON,4
                                    1- 2853     	.line	214, "main.c"; 	initAD();
     001D 2rrr                      1- 2854     	LCALL	_initAD
                                    1- 2855     	.line	215, "main.c"; 	}
                                    1- 2856     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1- 2857     ; exit point of _gotoSleep
                                    1- 2859     ;***
                                    1- 2860     ;  pBlock Stats: dbName = C
                                    1- 2861     ;***
                                    1- 2862     ;has an exit
                                    1- 2863     ;; Starting pCode block
                                    1- 2864     .segment "code"; module=main, function=_init
     0000                           1- 2866     _init:
                                    1- 2867     ; 2 exit points
                                    1- 2868     	.line	154, "main.c"; 	PORTA = 0;
     0000 02rr                      1- 2869     	CLRR	_PORTA
                                    1- 2870     	.line	155, "main.c"; 	PORTB = 0;
     0001 02rr                      1- 2871     	CLRR	_PORTB
                                    1- 2872     	.line	157, "main.c"; 	IOSTA = 0xFC;		//P2 -P7输入
     0002 21FC                      1- 2873     	MOVIA	0xfc
     0003 000r                      1- 2874     	IOST	_IOSTA
                                    1- 2875     	.line	158, "main.c"; 	IOSTB =  0;								// PB1输入					
     0004 0200                      1- 2876     	CLRA	
     0005 000r                      1- 2877     	IOST	_IOSTB
                                    1- 2878     	.line	159, "main.c"; 	PORTA = 0;
     0006 02rr                      1- 2879     	CLRR	_PORTA
                                    1- 2880     	.line	160, "main.c"; 	PORTB = 0x04;                           	
     0007 2104                      1- 2881     	MOVIA	0x04
     0008 00rr                      1- 2882     	MOVAR	_PORTB
                                    1- 2883     	.line	161, "main.c"; 	APHCON = 0x7F;		//PA7打开上拉		，PA5关闭下拉
     0009 217F                      1- 2884     	MOVIA	0x7f
     000A 000r                      1- 2885     	IOST	_APHCON
                                    1- 2886     	.line	164, "main.c"; 	TMRH = 0;								// 
     000B 02rr                      1- 2887     	CLRR	_TMRH
                                    1- 2888     	.line	165, "main.c"; 	TMR1 = 28;						//风扇PWM				
     000C 211C                      1- 2889     	MOVIA	0x1c
     000D 00rr                      1- 2890     	SFUN	_TMR1
                                    1- 2891     	.line	166, "main.c"; 	TMR2 = 30;						//充电PWM		
     000E 211E                      1- 2892     	MOVIA	0x1e
     000F 00rr                      1- 2893     	SFUN	_TMR2
                                    1- 2894     	.line	168, "main.c"; 	PWM1DUTY = 5;				// 		
     0010 2105                      1- 2895     	MOVIA	0x05
     0011 00rr                      1- 2896     	SFUN	_PWM1DUTY
                                    1- 2897     	.line	169, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB3 , PWM1 output is active high, reloaded from TMR1, non-stop mode 
     0012 2183                      1- 2898     	MOVIA	0x83
     0013 00rr                      1- 2899     	SFUN	_T1CR1
                                    1- 2900     	.line	170, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0014 2108                      1- 2901     	MOVIA	0x08
     0015 00rr                      1- 2902     	SFUN	_T1CR2
                                    1- 2903     	.line	173, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	    //reloaded from TMR2, non-stop mode 
     0016 2183                      1- 2904     	MOVIA	0x83
     0017 00rr                      1- 2905     	SFUN	_T2CR1
                                    1- 2906     	.line	174, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Dis;	// Enable Prescaler2, Prescaler2 dividing rate = 1:2, Timer2 clock source is instruction clock 
     0018 2108                      1- 2907     	MOVIA	0x08
     0019 00rr                      1- 2908     	SFUN	_T2CR2
                                    1- 2909     	.line	176, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT & LVR
     001A 2188                      1- 2910     	MOVIA	0x88
     001B 00rr                      1- 2911     	MOVAR	_PCON
                                    1- 2912     	.line	177, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     001C 2101                      1- 2913     	MOVIA	0x01
     001D 00rr                      1- 2914     	MOVAR	_INTE
                                    1- 2915     	.line	178, "main.c"; 	INTF = 0;
     001E 02rr                      1- 2916     	CLRR	_INTF
                                    1- 2917     	.line	181, "main.c"; 	PCON1 = C_TMR0_Dis;
     001F 0200                      1- 2918     	CLRA	
     0020 000r                      1- 2919     	IOST	_PCON1
                                    1- 2920     	.line	183, "main.c"; 	TMR0 = 55;
     0021 2137                      1- 2921     	MOVIA	0x37
     0022 00rr                      1- 2922     	MOVAR	_TMR0
                                    1- 2923     	.line	184, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0023 0200                      1- 2924     	CLRA	
     0024 0003                      1- 2925     	T0MD	
                                    1- 2926     	.line	186, "main.c"; 	PCON1 = C_TMR0_En;
     0025 2101                      1- 2927     	MOVIA	0x01
     0026 000r                      1- 2928     	IOST	_PCON1
                                    1- 2929     	.line	188, "main.c"; 	ENI();
     0027 0004                      1- 2930     	ENI
                                    1- 2931     	.line	189, "main.c"; 	}
                                    1- 2932     	RETURN	
     0028 0010                      3-   26 m1      ret
                                    1- 2933     ; exit point of _init
                                    1- 2936     ;	code size estimation:
                                    1- 2937     ;	 1122+  271 =  1393 instructions ( 3328 byte)
                                    1- 2939     	end
                                    1- 2939     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuint               Label    00000000
__mulint                Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002E
_00002_DS_              Label    0000002E
_00003_DS_              Label    0000002E
_00004_DS_              Label    0000002E
_00005_DS_              Label    00000032
_00006_DS_              Label    00000047
_00007_DS_              Label    000000BD
_00008_DS_              Label    0000002C
_00009_DS_              Label    0000002E
_00010_DS_              Label    0000001B
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00120_DS_              Label    00000018
_00121_DS_              Label    0000001A
_00123_DS_              Label    00000031
_00126_DS_              Label    00000033
_00131_DS_              Label    00000039
_00132_DS_              Label    00000045
_00134_DS_              Label    00000004
_00154_DS_              Label    0000001C
_00157_DS_              Label    00000009
_00158_DS_              Label    00000025
_00160_DS_              Label    0000002C
_00162_DS_              Label    00000032
_00164_DS_              Label    00000033
_00181_DS_              Label    00000013
_00187_DS_              Label    0000000A
_00193_DS_              Label    00000021
_00195_DS_              Label    0000002F
_00201_DS_              Label    00000006
_00202_DS_              Label    00000008
_00204_DS_              Label    0000000F
_00205_DS_              Label    00000011
_00209_DS_              Label    0000004F
_00210_DS_              Label    0000005C
_00216_DS_              Label    0000003A
_00217_DS_              Label    00000065
_00219_DS_              Label    00000032
_00221_DS_              Label    00000024
_00222_DS_              Label    00000029
_00228_DS_              Label    0000006B
_00230_DS_              Label    00000076
_00265_DS_              Label    00000022
_00267_DS_              Label    00000048
_00268_DS_              Label    00000056
_00275_DS_              Label    00000015
_00276_DS_              Label    0000001B
_00277_DS_              Label    00000022
_00278_DS_              Label    00000029
_00279_DS_              Label    0000002F
_00281_DS_              Label    00000037
_00283_DS_              Label    00000039
_00296_DS_              Label    00000011
_00303_DS_              Label    00000009
_00305_DS_              Label    0000001C
_00314_DS_              Label    00000013
_00324_DS_              Label    00000007
_00326_DS_              Label    0000004A
_00328_DS_              Label    0000004C
_00332_DS_              Label    00000064
_00333_DS_              Label    00000066
_00337_DS_              Label    00000091
_00340_DS_              Label    00000084
_00345_DS_              Label    000000BB
_00348_DS_              Label    000000AE
_00353_DS_              Label    000000F2
_00356_DS_              Label    000000E5
_00359_DS_              Label    000000D8
_00364_DS_              Label    000000C7
_00367_DS_              Label    0000009D
_00370_DS_              Label    000000FD
_00372_DS_              Label    000000FE
_00435_DS_              Label    00000046
_00436_DS_              Label    00000053
_00438_DS_              Label    00000071
_00439_DS_              Label    0000007F
_00440_DS_              Label    0000008B
_00441_DS_              Label    00000098
_00442_DS_              Label    000000A9
_00443_DS_              Label    000000B5
_00444_DS_              Label    000000C2
_00445_DS_              Label    000000D3
_00446_DS_              Label    000000DF
_00447_DS_              Label    000000EC
_00448_DS_              Label    000000F9
_00456_DS_              Label    0000005F
_00459_DS_              Label    00000052
_00464_DS_              Label    00000063
_00466_DS_              Label    00000065
_00484_DS_              Label    0000003C
_00486_DS_              Label    0000004C
_00487_DS_              Label    00000059
_00492_DS_              Label    00000008
_00500_DS_              Label    000000CB
_00501_DS_              Label    0000010B
_00503_DS_              Label    0000007D
_00506_DS_              Label    00000071
_00510_DS_              Label    0000010E
_00536_DS_              Label    0000006C
_00537_DS_              Label    00000078
_00538_DS_              Label    00000084
_00539_DS_              Label    000000C4
_00540_DS_              Label    00000104
_00549_DS_              Label    0000000B
_00551_DS_              Label    00000031
_00560_DS_              Label    0000000B
_00562_DS_              Label    00000031
_00571_DS_              Label    0000000B
_00573_DS_              Label    00000031
_00582_DS_              Label    0000000B
_00584_DS_              Label    00000031
_00589_DS_              Label    00000000
_00598_DS_              Label    00000017
_00599_DS_              Label    00000027
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_AIN1Count              Label    00000000
_AIN2Count              Label    00000000
_AIN3Count              Label    00000000
_AIN4Count              Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_batFullFlag            Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBat               Label    00000000
_checkLVD               Label    00000000
_checkOut               Label    00000000
_checkTime              Label    00000000
_checkUsbInput          Label    00000000
_chrgCount              Label    00000000
_chrgSpeed              Label    00000000
_closeTime              Label    00000000
_CMPCR                  Label    00000000
_count15S               Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_delay                  Label    00000000
_duty1                  Label    00000000
_duty2                  Label    00000000
_duty2LockTime          Label    00000000
_F_AIN1_Convert         Label    00000000
_F_AIN2_Convert         Label    00000000
_F_AIN3_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_fanStatus              Label    00000000
_fanUseable             Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_init                   Label    00000000
_initAD                 Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isNotFan               Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyRead                Label    00000000
_KeyScan                Label    00000000
_ledCon                 Label    00000000
_lockTime               Label    00000000
_lvdFlag                Label    00000000
_main                   Label    00000000
_maxTime                Label    00000000
_nullcount              Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_processKey             Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_pwm1Stop               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN1_DATA            Label    00000000
_R_AIN1_DATA_LB         Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_R_AIN3_DATA            Label    00000000
_R_AIN3_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepDelay             Label    00000000
_sleepFlag              Label    00000000
_STATUS                 Label    00000000
_sumR_AIN1_DATA         Label    00000000
_sumR_AIN2_DATA         Label    00000000
_sumR_AIN3_DATA         Label    00000000
_sumR_AIN4_DATA         Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempData               Label    00000000
_tempDuty               Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_usbFlag                Label    00000000
_usbTime                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103D                 Label    00000000
r0x103E                 Label    00000000
r0x103F                 Label    00000000
r0x1040                 Label    00000000
r0x1043                 Label    00000000
r0x1044                 Label    00000000
r0x1045                 Label    00000000
r0x1046                 Label    00000000
r0x1049                 Label    00000000
r0x104A                 Label    00000000
r0x104B                 Label    00000000
r0x104D                 Label    00000000
r0x1050                 Label    00000000
r0x1051                 Label    00000000
r0x1054                 Label    00000000
r0x1055                 Label    00000000
r0x1057                 Label    00000000
r0x1058                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
