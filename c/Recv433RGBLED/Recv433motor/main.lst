
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_AWUCONbits
                                    1-   23     	extern	_INTEDGbits
                                    1-   24     	extern	_RFCbits
                                    1-   25     	extern	_INTE2bits
                                    1-   26     	extern	_INDF
                                    1-   27     	extern	_TMR0
                                    1-   28     	extern	_PCL
                                    1-   29     	extern	_STATUS
                                    1-   30     	extern	_FSR
                                    1-   31     	extern	_PORTA
                                    1-   32     	extern	_PORTB
                                    1-   33     	extern	_PCON
                                    1-   34     	extern	_BWUCON
                                    1-   35     	extern	_PCHBUF
                                    1-   36     	extern	_ABPLCON
                                    1-   37     	extern	_BPHCON
                                    1-   38     	extern	_INTE
                                    1-   39     	extern	_INTF
                                    1-   40     	extern	_AWUCON
                                    1-   41     	extern	_INTEDG
                                    1-   42     	extern	_TMRH
                                    1-   43     	extern	_RFC
                                    1-   44     	extern	_TM34RH
                                    1-   45     	extern	_INTE2
                                    1-   46     	extern	_TMR1
                                    1-   47     	extern	_T1CR1
                                    1-   48     	extern	_T1CR2
                                    1-   49     	extern	_PWM1DUTY
                                    1-   50     	extern	_PS1CV
                                    1-   51     	extern	_BZ1CR
                                    1-   52     	extern	_IRCR
                                    1-   53     	extern	_TBHP
                                    1-   54     	extern	_TBHD
                                    1-   55     	extern	_P2CR1
                                    1-   56     	extern	_PWM2DUTY
                                    1-   57     	extern	_OSCCR
                                    1-   58     	extern	_TMR3
                                    1-   59     	extern	_T3CR1
                                    1-   60     	extern	_T3CR2
                                    1-   61     	extern	_PWM3DUTY
                                    1-   62     	extern	_PS3CV
                                    1-   63     	extern	_P4CR1
                                    1-   64     	extern	_PWM4DUTY
                                    1-   65     	extern	_P5CR1
                                    1-   66     	extern	_PWM5DUTY
                                    1-   67     	extern	_PWM5RH
                                    1-   68     	extern	_IOSTA
                                    1-   69     	extern	_IOSTB
                                    1-   70     	extern	_APHCON
                                    1-   71     	extern	_PS0CV
                                    1-   72     	extern	_BODCON
                                    1-   73     	extern	_CMPCR
                                    1-   74     	extern	_PCON1
                                    1-   75     	extern	_T0MD
                                    1-   76     	extern	___sdcc_saved_fsr
                                    1-   77     	extern	___sdcc_saved_stk00
                                    1-   78     	extern	___sdcc_saved_stk01
                                    1-   79     	extern	__nyc_ny8_startup
                                    1-   80     ;--------------------------------------------------------
                                    1-   81     ; global declarations
                                    1-   82     ;--------------------------------------------------------
                                    1-   83     	extern	_keyCallBack
                                    1-   84     	extern	_proData
                                    1-   85     	extern	_GetOneByte
                                    1-   86     	extern	_initSys
                                    1-   87     	extern	_proLow
                                    1-   88     	extern	_proHight
                                    1-   89     	extern	_isr
                                    1-   90     	extern	_main
                                    1-   91     	extern	_intCount
                                    1-   92     	extern	_IntFlag
                                    1-   93     	extern	_Status
                                    1-   94     	extern	_proTime
                                    1-   95     	extern	_T1Counter
                                    1-   96     	extern	_tempT1
                                    1-   97     	extern	_bitIndex
                                    1-   98     	extern	_value
                                    1-   99     	extern	_data1
                                    1-  100     	extern	_data2
                                    1-  101     	extern	_data3
                                    1-  102     	extern	_predata1
                                    1-  103     	extern	_predata2
                                    1-  104     	extern	_predata3
                                    1-  106     	extern PSAVE
                                    1-  107     	extern SSAVE
                                    1-  108     	extern WSAVE
                                    1-  109     	extern STK12
                                    1-  110     	extern STK11
                                    1-  111     	extern STK10
                                    1-  112     	extern STK09
                                    1-  113     	extern STK08
                                    1-  114     	extern STK07
                                    1-  115     	extern STK06
                                    1-  116     	extern STK05
                                    1-  117     	extern STK04
                                    1-  118     	extern STK03
                                    1-  119     	extern STK02
                                    1-  120     	extern STK01
                                    1-  121     	extern STK00
                                    1-  123     .segment "uninit", 0x20000040
 20000040                           1-  124     PSAVE:
                                    1-  125     	.res 1
 20000041                           1-  126     SSAVE:
                                    1-  127     	.res 1
 20000042                           1-  128     WSAVE:
                                    1-  129     	.res 1
 20000043                           1-  130     STK12:
                                    1-  131     	.res 1
 20000044                           1-  132     STK11:
                                    1-  133     	.res 1
 20000045                           1-  134     STK10:
                                    1-  135     	.res 1
 20000046                           1-  136     STK09:
                                    1-  137     	.res 1
 20000047                           1-  138     STK08:
                                    1-  139     	.res 1
 20000048                           1-  140     STK07:
                                    1-  141     	.res 1
 20000049                           1-  142     STK06:
                                    1-  143     	.res 1
 2000004A                           1-  144     STK05:
                                    1-  145     	.res 1
 2000004B                           1-  146     STK04:
                                    1-  147     	.res 1
 2000004C                           1-  148     STK03:
                                    1-  149     	.res 1
 2000004D                           1-  150     STK02:
                                    1-  151     	.res 1
 2000004E                           1-  152     STK01:
                                    1-  153     	.res 1
 2000004F                           1-  154     STK00:
                                    1-  155     	.res 1
                                    1-  157     ;--------------------------------------------------------
                                    1-  158     ; global definitions
                                    1-  159     ;--------------------------------------------------------
                                    1-  160     .segment "uninit"
     0000                           1-  161     _T1Counter:
                                    1-  162     	.res	2
                                    1-  165     .segment "uninit"
     0000                           1-  166     _tempT1:
                                    1-  167     	.res	2
                                    1-  170     .segment "uninit"
     0000                           1-  171     _data1:
                                    1-  172     	.res	1
                                    1-  175     .segment "uninit"
     0000                           1-  176     _data2:
                                    1-  177     	.res	1
                                    1-  180     .segment "uninit"
     0000                           1-  181     _data3:
                                    1-  182     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     _predata1:
                                    1-  187     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     _predata2:
                                    1-  192     	.res	1
                                    1-  195     .segment "uninit"
     0000                           1-  196     _predata3:
                                    1-  197     	.res	1
                                    1-  200     ;--------------------------------------------------------
                                    1-  201     ; absolute symbol definitions
                                    1-  202     ;--------------------------------------------------------
                                    1-  203     ;--------------------------------------------------------
                                    1-  204     ; compiler-defined variables
                                    1-  205     ;--------------------------------------------------------
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x1017:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x101A:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1013:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1016:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x1012:
                                    1-  220     	.res	1
                                    1-  221     ;--------------------------------------------------------
                                    1-  222     ; initialized data
                                    1-  223     ;--------------------------------------------------------
                                    1-  225     .segment "idata"
     0000                           1-  226     _intCount:
     0000 0000                      1-  227     	dw	0x00
                                    1-  231     .segment "idata"
     0000                           1-  232     _IntFlag:
     0000 0000                      1-  233     	dw	0x00
                                    1-  237     .segment "idata"
     0000                           1-  238     _Status:
     0000 0000                      1-  239     	dw	0x00
                                    1-  243     .segment "idata"
     0000                           1-  244     _proTime:
     0000 0000                      1-  245     	dw	0x00
                                    1-  249     .segment "idata"
     0000                           1-  250     _bitIndex:
     0000 0000                      1-  251     	dw	0x00
                                    1-  255     .segment "idata"
     0000                           1-  256     _value:
     0000 0000                      1-  257     	dw	0x00
                                    1-  260     ;--------------------------------------------------------
                                    1-  261     ; overlayable items in internal ram 
                                    1-  262     ;--------------------------------------------------------
                                    1-  263     ;	udata_ovr
                                    1-  264     ;--------------------------------------------------------
                                    1-  265     ; reset vector 
                                    1-  266     ;--------------------------------------------------------
                                    1-  267     ORG	0x0000
     0000 3rrr                      1-  268     	LGOTO	__nyc_ny8_startup
                                    1-  269     ;--------------------------------------------------------
                                    1-  270     ; interrupt and initialization code
                                    1-  271     ;--------------------------------------------------------
                                    1-  272     ORG 0x0008
     0008 3rrr                      1-  273     	lgoto	__sdcc_interrupt
                                    1-  275     .segment "code"
     0000                           1-  276     __sdcc_interrupt:
                                    1-  277     ;***
                                    1-  278     ;  pBlock Stats: dbName = I
                                    1-  279     ;***
                                    1-  280     ;2 compiler assigned registers:
                                    1-  281     ;   STK00
                                    1-  282     ;   STK01
                                    1-  283     ;; Starting pCode block
     0000                           1-  284     _isr:
                                    1-  285     ; 0 exit points
                                    1-  286     	.line	66, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  287     	MOVAR	WSAVE
     0001 1503                      1-  288     	SWAPR	STATUS,W
     0002 0283                      1-  289     	CLRR	STATUS
     0003 00rr                      1-  290     	MOVAR	SSAVE
     0004 010A                      1-  291     	MOVR	PCHBUF,W
     0005 028A                      1-  292     	CLRR	PCHBUF
     0006 00rr                      1-  293     	MOVAR	PSAVE
     0007 0104                      1-  294     	MOVR	FSR,W
                                    1-  295     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  296     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  297     	MOVR	STK00,W
                                    1-  298     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  299     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  300     	MOVR	STK01,W
                                    1-  301     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  302     	MOVAR	___sdcc_saved_stk01
                                    1-  303     	.line	68, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  304     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  305     	LGOTO	_00108_DS_
                                    1-  306     	.line	71, "main.c"; 	TMR0 += 65;
     0012 2141                      1-  307     	MOVIA	0x41
     0013 03rr                      1-  308     	ADDAR	_TMR0,F
                                    1-  309     	.line	72, "main.c"; 	intCount++;
                                    1-  310     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  311     	INCR	_intCount,F
                                    1-  312     	.line	73, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  313     	MOVR	_intCount,W
     0017 2464                      1-  314     	XORIA	0x64
     0018 0903                      1-  315     	BTRSS	STATUS,2
     0019 3rrr                      1-  316     	LGOTO	_00108_DS_
                                    1-  317     	.line	75, "main.c"; 	intCount = 0;
     001A 02rr                      1-  318     	CLRR	_intCount
                                    1-  319     	.line	76, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  320     	MOVIA	0x01
                                    1-  321     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  322     	MOVAR	_IntFlag
     001E                           1-  323     _00108_DS_:
                                    1-  324     	.line	79, "main.c"; 	if(INTFbits.T1IF)
     001E 09rr                      1-  325     	BTRSS	_INTFbits,3
     001F 3rrr                      1-  326     	LGOTO	_00110_DS_
                                    1-  327     	.line	81, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR1);	// Clear PABIF(PortB input change interrupt flag bit)	
     0020 21F7                      1-  328     	MOVIA	0xf7
     0021 00rr                      1-  329     	MOVAR	_INTF
     0022                           1-  330     _00110_DS_:
                                    1-  331     	.line	83, "main.c"; 	if(INTFbits.PABIF)
     0022 08rr                      1-  332     	BTRSS	_INTFbits,1
     0023 3rrr                      1-  333     	LGOTO	_00112_DS_
                                    1-  334     	.line	85, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0024 21FD                      1-  335     	MOVIA	0xfd
     0025 00rr                      1-  336     	MOVAR	_INTF
     0026                           1-  337     _00112_DS_:
                                    1-  338     	.line	89, "main.c"; 	INTF = 0;
     0026 02rr                      1-  339     	CLRR	_INTF
                                    1-  340     	.line	91, "main.c"; 	}
                                    1-  341     	BANKSEL	___sdcc_saved_stk01
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  342     	MOVR	___sdcc_saved_stk01,W
     0029 00rr                      1-  343     	MOVAR	STK01
                                    1-  344     	BANKSEL	___sdcc_saved_stk00
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  345     	MOVR	___sdcc_saved_stk00,W
     002C 00rr                      1-  346     	MOVAR	STK00
                                    1-  347     	BANKSEL	___sdcc_saved_fsr
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  348     	MOVR	___sdcc_saved_fsr,W
     002F 0084                      1-  349     	MOVAR	FSR
     0030 01rr                      1-  350     	MOVR	PSAVE,W
     0031 008A                      1-  351     	MOVAR	PCHBUF
     0032 0283                      1-  352     	CLRR	STATUS
     0033 15rr                      1-  353     	SWAPR	SSAVE,W
     0034 0083                      1-  354     	MOVAR	STATUS
     0035 15rr                      1-  355     	SWAPR	WSAVE,F
     0036 15rr                      1-  356     	SWAPR	WSAVE,W
     0037                           1-  357     END_OF_INTERRUPT:
     0037 0011                      1-  358     	RETIE	
                                    1-  360     ;--------------------------------------------------------
                                    1-  361     ; code
                                    1-  362     ;--------------------------------------------------------
                                    1-  363     ;***
                                    1-  364     ;  pBlock Stats: dbName = M
                                    1-  365     ;***
                                    1-  366     ;has an exit
                                    1-  367     ;functions called:
                                    1-  368     ;   _initSys
                                    1-  369     ;   _proData
                                    1-  370     ;   _proLow
                                    1-  371     ;   _proHight
                                    1-  372     ;   _initSys
                                    1-  373     ;   _proData
                                    1-  374     ;   _proLow
                                    1-  375     ;   _proHight
                                    1-  376     ;; Starting pCode block
                                    1-  377     .segment "code"; module=main, function=_main
     0000                           1-  379     _main:
                                    1-  380     ; 2 exit points
                                    1-  381     	.line	95, "main.c"; 	initSys();
     0000 2rrr                      1-  382     	LCALL	_initSys
     0001                           1-  383     _00127_DS_:
                                    1-  384     	.line	98, "main.c"; 	if(ReadOver)
                                    1-  385     	BANKSEL	_Status
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 0Err                      1-  386     	BTRSC	_Status,4
                                    1-  387     	.line	100, "main.c"; 	proData();
     0003 2rrr                      1-  388     	LCALL	_proData
     0004                           1-  389     _00118_DS_:
                                    1-  390     	.line	102, "main.c"; 	if(INT1Level && (PORTA & 0x04))
                                    1-  391     	BANKSEL	_Status
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 0Arr                      1-  392     	BTRSS	_Status,5
     0006 3rrr                      1-  393     	LGOTO	_00123_DS_
                                    1-  394     	BANKSEL	_PORTA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 09rr                      1-  395     	BTRSS	_PORTA,2
     0009 3rrr                      1-  396     	LGOTO	_00123_DS_
                                    1-  397     	.line	104, "main.c"; 	INT1Level = 0;
                                    1-  398     	BANKSEL	_Status
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 1Err                      1-  399     	BCR	_Status,5
                                    1-  400     	.line	105, "main.c"; 	proLow();
     000C 2rrr                      1-  401     	LCALL	_proLow
     000D 3rrr                      1-  402     	LGOTO	_00124_DS_
     000E                           1-  403     _00123_DS_:
                                    1-  404     	.line	107, "main.c"; 	else if(INT1Level == 0 && (PORTA & 0x04) == 0)
                                    1-  405     	BANKSEL	_Status
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 0Err                      1-  406     	BTRSC	_Status,5
     0010 3rrr                      1-  407     	LGOTO	_00124_DS_
                                    1-  408     	BANKSEL	_PORTA
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 0Drr                      1-  409     	BTRSC	_PORTA,2
     0013 3rrr                      1-  410     	LGOTO	_00124_DS_
                                    1-  411     	.line	110, "main.c"; 	INT1Level = 1;
                                    1-  412     	BANKSEL	_Status
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 1Arr                      1-  413     	BSR	_Status,5
                                    1-  414     	.line	111, "main.c"; 	proHight();
     0016 2rrr                      1-  415     	LCALL	_proHight
     0017                           1-  416     _00124_DS_:
                                    1-  417     	.line	113, "main.c"; 	CLRWDT();
     0017 0002                      1-  418     	clrwdt
     0018 3rrr                      1-  419     	LGOTO	_00127_DS_
                                    1-  420     	.line	116, "main.c"; 	}
                                    1-  421     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1-  422     ; exit point of _main
                                    1-  424     ;***
                                    1-  425     ;  pBlock Stats: dbName = C
                                    1-  426     ;***
                                    1-  427     ;has an exit
                                    1-  428     ;; Starting pCode block
                                    1-  429     .segment "code"; module=main, function=_keyCallBack
     0000                           1-  431     _keyCallBack:
                                    1-  432     ; 2 exit points
                                    1-  433     	.line	322, "main.c"; 	proTime = 0;
                                    1-  434     	BANKSEL	_proTime
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  435     	CLRR	_proTime
                                    1-  436     	.line	323, "main.c"; 	switch(data3)
                                    1-  437     	BANKSEL	_data3
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 01rr                      1-  438     	MOVR	_data3,W
     0004 0D03                      1-  439     	BTRSC	STATUS,2
     0005 3rrr                      1-  440     	LGOTO	_00264_DS_
     0006 01rr                      1-  441     	MOVR	_data3,W
     0007 2401                      1-  442     	XORIA	0x01
     0008 0D03                      1-  443     	BTRSC	STATUS,2
     0009 3rrr                      1-  444     	LGOTO	_00265_DS_
     000A 3rrr                      1-  445     	LGOTO	_00267_DS_
     000B                           1-  446     _00264_DS_:
                                    1-  447     	.line	326, "main.c"; 	PORTB = 0x02;
     000B 2102                      1-  448     	MOVIA	0x02
     000C 00rr                      1-  449     	MOVAR	_PORTB
                                    1-  450     	.line	327, "main.c"; 	break;
     000D 3rrr                      1-  451     	LGOTO	_00267_DS_
     000E                           1-  452     _00265_DS_:
                                    1-  453     	.line	329, "main.c"; 	PORTB = 0x00;
     000E 02rr                      1-  454     	CLRR	_PORTB
     000F                           1-  455     _00267_DS_:
                                    1-  456     	.line	332, "main.c"; 	}
                                    1-  457     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1-  458     ; exit point of _keyCallBack
                                    1-  460     ;***
                                    1-  461     ;  pBlock Stats: dbName = C
                                    1-  462     ;***
                                    1-  463     ;has an exit
                                    1-  464     ;functions called:
                                    1-  465     ;   _keyCallBack
                                    1-  466     ;   _keyCallBack
                                    1-  467     ;; Starting pCode block
                                    1-  468     .segment "code"; module=main, function=_proData
     0000                           1-  470     _proData:
                                    1-  471     ; 2 exit points
                                    1-  472     	.line	312, "main.c"; 	predata1 = data1;
                                    1-  473     	BANKSEL	_data1
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1-  474     	MOVR	_data1,W
                                    1-  475     	BANKSEL	_predata1
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1-  476     	MOVAR	_predata1
                                    1-  477     	.line	313, "main.c"; 	predata2 = data2;
                                    1-  478     	BANKSEL	_data2
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1-  479     	MOVR	_data2,W
                                    1-  480     	BANKSEL	_predata2
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  481     	MOVAR	_predata2
                                    1-  482     	.line	314, "main.c"; 	predata3 = data3;
                                    1-  483     	BANKSEL	_data3
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1-  484     	MOVR	_data3,W
                                    1-  485     	BANKSEL	_predata3
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1-  486     	MOVAR	_predata3
                                    1-  487     	.line	315, "main.c"; 	keyCallBack();
     000C 2rrr                      1-  488     	LCALL	_keyCallBack
                                    1-  489     	.line	316, "main.c"; 	ReadOver = 0;
                                    1-  490     	BANKSEL	_Status
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 1Err                      1-  491     	BCR	_Status,4
                                    1-  492     	.line	317, "main.c"; 	}
                                    1-  493     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1-  494     ; exit point of _proData
                                    1-  496     ;***
                                    1-  497     ;  pBlock Stats: dbName = C
                                    1-  498     ;***
                                    1-  499     ;has an exit
                                    1-  500     ;1 compiler assigned register :
                                    1-  501     ;   r0x1012
                                    1-  502     ;; Starting pCode block
                                    1-  503     .segment "code"; module=main, function=_GetOneByte
                                    1-  505     ;local variable name mapping:
     0000                           1-  507     _GetOneByte:
                                    1-  508     ; 2 exit points
                                    1-  509     	.line	272, "main.c"; 	void GetOneByte(uchar bitNub)
                                    1-  510     	BANKSEL	r0x1012
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  511     	MOVAR	r0x1012
                                    1-  512     	.line	274, "main.c"; 	if(RemoteStart)
                                    1-  513     	BANKSEL	_Status
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 09rr                      1-  514     	BTRSS	_Status,3
     0004 3rrr                      1-  515     	LGOTO	_00255_DS_
                                    1-  516     	.line	276, "main.c"; 	if(bitIndex == 0)
                                    1-  517     	BANKSEL	_bitIndex
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1-  518     	MOVR	_bitIndex,W
     0007 0903                      1-  519     	BTRSS	STATUS,2
     0008 3rrr                      1-  520     	LGOTO	_00242_DS_
                                    1-  521     	.line	278, "main.c"; 	bitIndex = 0;
     0009 02rr                      1-  522     	CLRR	_bitIndex
                                    1-  523     	.line	279, "main.c"; 	value = 0;
                                    1-  524     	BANKSEL	_value
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1-  525     	CLRR	_value
                                    1-  526     	.line	280, "main.c"; 	data1 = data2 = data3 = 0;
                                    1-  527     	BANKSEL	_data3
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1-  528     	CLRR	_data3
                                    1-  529     	BANKSEL	_data2
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1-  530     	CLRR	_data2
                                    1-  531     	BANKSEL	_data1
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1-  532     	CLRR	_data1
     0012                           1-  533     _00242_DS_:
                                    1-  534     	.line	282, "main.c"; 	++bitIndex;
                                    1-  535     	BANKSEL	_bitIndex
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 05rr                      1-  536     	INCR	_bitIndex,F
                                    1-  537     	.line	283, "main.c"; 	if(bitNub)
                                    1-  538     	BANKSEL	r0x1012
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1-  539     	MOVR	r0x1012,W
     0016 0D03                      1-  540     	BTRSC	STATUS,2
     0017 3rrr                      1-  541     	LGOTO	_00001_DS_
                                    1-  542     	.line	285, "main.c"; 	value |= 0x01;
                                    1-  543     	BANKSEL	_value
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 18rr                      1-  544     	BSR	_value,0
     001A                           1-  545     _00001_DS_:
                                    1-  546     	.line	288, "main.c"; 	if(bitIndex == 8)
                                    1-  547     	BANKSEL	_bitIndex
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  548     	MOVR	_bitIndex,W
     001C 2408                      1-  549     	XORIA	0x08
     001D 0903                      1-  550     	BTRSS	STATUS,2
     001E 3rrr                      1-  551     	LGOTO	_00251_DS_
                                    1-  552     	.line	290, "main.c"; 	data1 = value;
                                    1-  553     	BANKSEL	_value
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  554     	MOVR	_value,W
                                    1-  555     	BANKSEL	_data1
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 00rr                      1-  556     	MOVAR	_data1
     0023 3rrr                      1-  557     	LGOTO	_00252_DS_
     0024                           1-  558     _00251_DS_:
                                    1-  559     	.line	292, "main.c"; 	else if(bitIndex == 16)
                                    1-  560     	BANKSEL	_bitIndex
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  561     	MOVR	_bitIndex,W
     0026 2410                      1-  562     	XORIA	0x10
     0027 0903                      1-  563     	BTRSS	STATUS,2
     0028 3rrr                      1-  564     	LGOTO	_00248_DS_
                                    1-  565     	.line	294, "main.c"; 	data2 = value;
                                    1-  566     	BANKSEL	_value
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  567     	MOVR	_value,W
                                    1-  568     	BANKSEL	_data2
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 00rr                      1-  569     	MOVAR	_data2
     002D 3rrr                      1-  570     	LGOTO	_00252_DS_
     002E                           1-  571     _00248_DS_:
                                    1-  572     	.line	297, "main.c"; 	else if(bitIndex == 24)
                                    1-  573     	BANKSEL	_bitIndex
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1-  574     	MOVR	_bitIndex,W
     0030 2418                      1-  575     	XORIA	0x18
     0031 0903                      1-  576     	BTRSS	STATUS,2
     0032 3rrr                      1-  577     	LGOTO	_00252_DS_
                                    1-  578     	.line	299, "main.c"; 	data3 = value;
                                    1-  579     	BANKSEL	_value
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  580     	MOVR	_value,W
                                    1-  581     	BANKSEL	_data3
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 00rr                      1-  582     	MOVAR	_data3
     0037                           1-  583     _00252_DS_:
                                    1-  584     	.line	302, "main.c"; 	value = value << 1;
     0037 1C03                      1-  585     	BCR	STATUS,0
                                    1-  586     	BANKSEL	_value
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 14rr                      1-  587     	RLR	_value,F
     003A                           1-  588     _00255_DS_:
                                    1-  589     	.line	304, "main.c"; 	}
                                    1-  590     	RETURN	
     003A 0010                      3-   26 m1      ret
                                    1-  591     ; exit point of _GetOneByte
                                    1-  593     ;***
                                    1-  594     ;  pBlock Stats: dbName = C
                                    1-  595     ;***
                                    1-  596     ;has an exit
                                    1-  597     ;; Starting pCode block
                                    1-  598     .segment "code"; module=main, function=_initSys
     0000                           1-  600     _initSys:
                                    1-  601     ; 2 exit points
                                    1-  602     	.line	244, "main.c"; 	PORTA = 0x00;
                                    1-  603     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  604     	CLRR	_PORTA
                                    1-  605     	.line	245, "main.c"; 	APHCON = 0xDF;		//PA5下拉
     0002 21DF                      1-  606     	MOVIA	0xdf
     0003 000r                      1-  607     	IOST	_APHCON
                                    1-  608     	.line	247, "main.c"; 	IOSTA =  C_PA2_Input;					//PA5输入
     0004 2104                      1-  609     	MOVIA	0x04
     0005 000r                      1-  610     	IOST	_IOSTA
                                    1-  611     	.line	248, "main.c"; 	IOSTB =  C_PB0_Input;					//PB0输入
     0006 2101                      1-  612     	MOVIA	0x01
     0007 000r                      1-  613     	IOST	_IOSTB
                                    1-  614     	.line	249, "main.c"; 	PORTA = 0x00;  
     0008 02rr                      1-  615     	CLRR	_PORTA
                                    1-  616     	.line	250, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     0009 21A8                      1-  617     	MOVIA	0xa8
     000A 00rr                      1-  618     	MOVAR	_PCON
                                    1-  619     	.line	252, "main.c"; 	PCON1 = C_TMR0_Dis;
     000B 0200                      1-  620     	CLRA	
     000C 000r                      1-  621     	IOST	_PCON1
                                    1-  622     	.line	254, "main.c"; 	TMR0 = 55;
     000D 2137                      1-  623     	MOVIA	0x37
     000E 00rr                      1-  624     	MOVAR	_TMR0
                                    1-  625     	.line	255, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     000F 0200                      1-  626     	CLRA	
     0010 0003                      1-  627     	T0MD	
                                    1-  628     	.line	256, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0011 210B                      1-  629     	MOVIA	0x0b
     0012 00rr                      1-  630     	MOVAR	_INTE
                                    1-  631     	.line	257, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0013 2111                      1-  632     	MOVIA	0x11
     0014 000r                      1-  633     	IOST	_PCON1
                                    1-  634     	.line	260, "main.c"; 	TMRH = 0x30;
     0015 2130                      1-  635     	MOVIA	0x30
     0016 00rr                      1-  636     	MOVAR	_TMRH
                                    1-  637     	.line	261, "main.c"; 	TMR1 = 0xFF;
     0017 21FF                      1-  638     	MOVIA	0xff
     0018 00rr                      1-  639     	SFUN	_TMR1
                                    1-  640     	.line	262, "main.c"; 	T1CR2 = C_PS1_Div64 | C_PS1_EN | C_TMR1_ClkSrc_Inst;
     0019 2105                      1-  641     	MOVIA	0x05
     001A 00rr                      1-  642     	SFUN	_T1CR2
                                    1-  643     	.line	263, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     001B 2103                      1-  644     	MOVIA	0x03
     001C 00rr                      1-  645     	SFUN	_T1CR1
                                    1-  646     	.line	266, "main.c"; 	INT1Level = 1;
                                    1-  647     	BANKSEL	_Status
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 1Arr                      1-  648     	BSR	_Status,5
                                    1-  649     	.line	268, "main.c"; 	ENI();
     001F 0004                      1-  650     	ENI
                                    1-  651     	.line	269, "main.c"; 	}
                                    1-  652     	RETURN	
     0020 0010                      3-   26 m1      ret
                                    1-  653     ; exit point of _initSys
                                    1-  655     ;***
                                    1-  656     ;  pBlock Stats: dbName = C
                                    1-  657     ;***
                                    1-  658     ;has an exit
                                    1-  659     ;functions called:
                                    1-  660     ;   _GetOneByte
                                    1-  661     ;   _GetOneByte
                                    1-  662     ;   _GetOneByte
                                    1-  663     ;   _GetOneByte
                                    1-  664     ;4 compiler assigned registers:
                                    1-  665     ;   r0x1013
                                    1-  666     ;   r0x1014
                                    1-  667     ;   r0x1015
                                    1-  668     ;   r0x1016
                                    1-  669     ;; Starting pCode block
                                    1-  670     .segment "code"; module=main, function=_proLow
     0000                           1-  672     _proLow:
                                    1-  673     ; 2 exit points
                                    1-  674     	.line	156, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1-  675     	CLRA	
     0001 00rr                      1-  676     	SFUN	_T1CR1
                                    1-  677     	.line	157, "main.c"; 	tempT1 = 0x30&TMRH;
     0002 2130                      1-  678     	MOVIA	0x30
     0003 10rr                      1-  679     	ANDAR	_TMRH,W
                                    1-  680     ;;3	MOVAR	r0x1013
                                    1-  681     	BANKSEL	_tempT1
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  682     	MOVAR	_tempT1
     0006 02rr                      1-  683     	CLRR	(_tempT1 + 1)
                                    1-  684     	.line	158, "main.c"; 	tempT1 <<= 4;
     0007 15rr                      1-  685     	SWAPR	(_tempT1 + 1),W
     0008 22F0                      1-  686     	ANDIA	0xf0
     0009 00rr                      1-  687     	MOVAR	(_tempT1 + 1)
     000A 15rr                      1-  688     	SWAPR	_tempT1,W
     000B 00rr                      1-  689     	MOVAR	_tempT1
     000C 220F                      1-  690     	ANDIA	0x0f
     000D 11rr                      1-  691     	IORAR	(_tempT1 + 1),F
     000E 12rr                      1-  692     	XORAR	_tempT1,F
                                    1-  693     	.line	159, "main.c"; 	tempT1 += TMR1;
     000F 00rr                      1-  694     	SFUNR	_TMR1
                                    1-  695     	BANKSEL	r0x1013
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1-  696     	MOVAR	r0x1013
                                    1-  697     ;;1	MOVAR	r0x1014
                                    1-  698     ;;1	CLRR	r0x1015
                                    1-  699     ;;100	MOVR	r0x1014,W
     0012 2100                      1-  700     	MOVIA	0x00
                                    1-  701     	BANKSEL	r0x1016
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1-  702     	MOVAR	r0x1016
                                    1-  703     	BANKSEL	r0x1013
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  704     	MOVR	r0x1013,W
                                    1-  705     	BANKSEL	_tempT1
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 03rr                      1-  706     	ADDAR	_tempT1,F
                                    1-  707     	BANKSEL	r0x1016
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  708     	MOVR	r0x1016,W
     001B 0C03                      1-  709     	BTRSC	STATUS,0
     001C 05rr                      1-  710     	INCR	r0x1016,W
     001D 0D03                      1-  711     	BTRSC	STATUS,2
     001E 3rrr                      1-  712     	LGOTO	_00002_DS_
                                    1-  713     	BANKSEL	_tempT1
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 03rr                      1-  714     	ADDAR	(_tempT1 + 1),F
     0021                           1-  715     _00002_DS_:
                                    1-  716     	.line	160, "main.c"; 	T1Counter = 0x3FF - tempT1;
                                    1-  717     	BANKSEL	_tempT1
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1-  718     	MOVR	_tempT1,W
     0023 27FF                      1-  719     	SUBIA	0xff
                                    1-  720     	BANKSEL	_T1Counter
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1-  721     	MOVAR	_T1Counter
                                    1-  722     	BANKSEL	_tempT1
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  723     	MOVR	(_tempT1 + 1),W
     0028 0803                      1-  724     	BTRSS	STATUS,0
     0029 05rr                      1-  725     	INCR	(_tempT1 + 1),W
     002A 2703                      1-  726     	SUBIA	0x03
                                    1-  727     	BANKSEL	_T1Counter
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 00rr                      1-  728     	MOVAR	(_T1Counter + 1)
                                    1-  729     	.line	161, "main.c"; 	TMRH = 0x30;
     002D 2130                      1-  730     	MOVIA	0x30
     002E 00rr                      1-  731     	MOVAR	_TMRH
                                    1-  732     	.line	162, "main.c"; 	TMR1 = 0xFF;
     002F 21FF                      1-  733     	MOVIA	0xff
     0030 00rr                      1-  734     	SFUN	_TMR1
                                    1-  735     	.line	163, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     0031 2103                      1-  736     	MOVIA	0x03
     0032 00rr                      1-  737     	SFUN	_T1CR1
                                    1-  738     	.line	164, "main.c"; 	PORTA = 0x01;  
     0033 2101                      1-  739     	MOVIA	0x01
                                    1-  740     	BANKSEL	_PORTA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1-  741     	MOVAR	_PORTA
                                    1-  742     	.line	165, "main.c"; 	if(RemoteStart)
                                    1-  743     	BANKSEL	_Status
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 09rr                      1-  744     	BTRSS	_Status,3
     0038 3rrr                      1-  745     	LGOTO	_00189_DS_
                                    1-  746     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  747     ;;unsigned compare: left >= lit (0xD=13), size=2
                                    1-  748     	.line	167, "main.c"; 	if((T1Counter >(OneCode_L - FaultTolerant))&&(T1Counter < (OneCode_L + FaultTolerant)))
     0039 2100                      1-  749     	MOVIA	0x00
                                    1-  750     	BANKSEL	_T1Counter
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 04rr                      1-  751     	SUBAR	(_T1Counter + 1),W
     003C 0903                      1-  752     	BTRSS	STATUS,2
     003D 3rrr                      1-  753     	LGOTO	_00226_DS_
     003E 210D                      1-  754     	MOVIA	0x0d
     003F 04rr                      1-  755     	SUBAR	_T1Counter,W
     0040                           1-  756     _00226_DS_:
     0040 0803                      1-  757     	BTRSS	STATUS,0
     0041 3rrr                      1-  758     	LGOTO	_00182_DS_
                                    1-  759     ;;unsigned compare: left < lit (0x20=32), size=2
     0042 2100                      1-  760     	MOVIA	0x00
                                    1-  761     	BANKSEL	_T1Counter
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 04rr                      1-  762     	SUBAR	(_T1Counter + 1),W
     0045 0903                      1-  763     	BTRSS	STATUS,2
     0046 3rrr                      1-  764     	LGOTO	_00227_DS_
     0047 2120                      1-  765     	MOVIA	0x20
     0048 04rr                      1-  766     	SUBAR	_T1Counter,W
     0049                           1-  767     _00227_DS_:
     0049 0C03                      1-  768     	BTRSC	STATUS,0
     004A 3rrr                      1-  769     	LGOTO	_00182_DS_
                                    1-  770     	.line	169, "main.c"; 	if(OneCode)
                                    1-  771     	BANKSEL	_Status
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 08rr                      1-  772     	BTRSS	_Status,1
     004D 3rrr                      1-  773     	LGOTO	_00168_DS_
                                    1-  774     	.line	172, "main.c"; 	GetOneByte(1);
     004E 2101                      1-  775     	MOVIA	0x01
     004F 2rrr                      1-  776     	LCALL	_GetOneByte
     0050 3rrr                      1-  777     	LGOTO	_00191_DS_
     0051                           1-  778     _00168_DS_:
                                    1-  779     	.line	177, "main.c"; 	RemoteStart = 0;
                                    1-  780     	BANKSEL	_Status
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 1Drr                      1-  781     	BCR	_Status,3
                                    1-  782     	.line	178, "main.c"; 	OneCode = 0;
     0053 1Crr                      1-  783     	BCR	_Status,1
                                    1-  784     	.line	179, "main.c"; 	ZeroCode = 0;
     0054 1Crr                      1-  785     	BCR	_Status,0
                                    1-  786     	.line	180, "main.c"; 	ReadOver = 0;
     0055 1Err                      1-  787     	BCR	_Status,4
                                    1-  788     	.line	181, "main.c"; 	bitIndex = 0;
                                    1-  789     	BANKSEL	_bitIndex
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 02rr                      1-  790     	CLRR	_bitIndex
     0058 3rrr                      1-  791     	LGOTO	_00191_DS_
                                    1-  792     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  793     ;;unsigned compare: left >= lit (0x40=64), size=2
     0059                           1-  794     _00182_DS_:
                                    1-  795     	.line	187, "main.c"; 	if((T1Counter > (Zero_L - FaultTolerant))&&(T1Counter < (Zero_L + FaultTolerant)))
     0059 2100                      1-  796     	MOVIA	0x00
                                    1-  797     	BANKSEL	_T1Counter
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 04rr                      1-  798     	SUBAR	(_T1Counter + 1),W
     005C 0903                      1-  799     	BTRSS	STATUS,2
     005D 3rrr                      1-  800     	LGOTO	_00228_DS_
     005E 2140                      1-  801     	MOVIA	0x40
     005F 04rr                      1-  802     	SUBAR	_T1Counter,W
     0060                           1-  803     _00228_DS_:
     0060 0803                      1-  804     	BTRSS	STATUS,0
     0061 3rrr                      1-  805     	LGOTO	_00178_DS_
                                    1-  806     ;;unsigned compare: left < lit (0x53=83), size=2
     0062 2100                      1-  807     	MOVIA	0x00
                                    1-  808     	BANKSEL	_T1Counter
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 04rr                      1-  809     	SUBAR	(_T1Counter + 1),W
     0065 0903                      1-  810     	BTRSS	STATUS,2
     0066 3rrr                      1-  811     	LGOTO	_00229_DS_
     0067 2153                      1-  812     	MOVIA	0x53
     0068 04rr                      1-  813     	SUBAR	_T1Counter,W
     0069                           1-  814     _00229_DS_:
     0069 0C03                      1-  815     	BTRSC	STATUS,0
     006A 3rrr                      1-  816     	LGOTO	_00178_DS_
                                    1-  817     	.line	189, "main.c"; 	if(ZeroCode)
                                    1-  818     	BANKSEL	_Status
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 08rr                      1-  819     	BTRSS	_Status,0
     006D 3rrr                      1-  820     	LGOTO	_00171_DS_
                                    1-  821     	.line	192, "main.c"; 	GetOneByte(0);
     006E 2100                      1-  822     	MOVIA	0x00
     006F 2rrr                      1-  823     	LCALL	_GetOneByte
     0070 3rrr                      1-  824     	LGOTO	_00191_DS_
     0071                           1-  825     _00171_DS_:
                                    1-  826     	.line	197, "main.c"; 	RemoteStart = 0;
                                    1-  827     	BANKSEL	_Status
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 1Drr                      1-  828     	BCR	_Status,3
                                    1-  829     	.line	198, "main.c"; 	OneCode = 0;
     0073 1Crr                      1-  830     	BCR	_Status,1
                                    1-  831     	.line	199, "main.c"; 	ZeroCode = 0;
     0074 1Crr                      1-  832     	BCR	_Status,0
                                    1-  833     	.line	200, "main.c"; 	ReadOver = 0;
     0075 1Err                      1-  834     	BCR	_Status,4
                                    1-  835     	.line	201, "main.c"; 	bitIndex = 0;
                                    1-  836     	BANKSEL	_bitIndex
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 02rr                      1-  837     	CLRR	_bitIndex
     0078 3rrr                      1-  838     	LGOTO	_00191_DS_
     0079                           1-  839     _00178_DS_:
                                    1-  840     	.line	207, "main.c"; 	if(ZeroCode && (T1Counter > (HeadCont_L - FaultTolerant))) //结束码,同时也是重复码的起始
                                    1-  841     	BANKSEL	_Status
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 08rr                      1-  842     	BTRSS	_Status,0
     007B 3rrr                      1-  843     	LGOTO	_00174_DS_
                                    1-  844     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  845     ;;unsigned compare: left >= lit (0x2E8=744), size=2
     007C 2102                      1-  846     	MOVIA	0x02
                                    1-  847     	BANKSEL	_T1Counter
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 04rr                      1-  848     	SUBAR	(_T1Counter + 1),W
     007F 0903                      1-  849     	BTRSS	STATUS,2
     0080 3rrr                      1-  850     	LGOTO	_00230_DS_
     0081 21E8                      1-  851     	MOVIA	0xe8
     0082 04rr                      1-  852     	SUBAR	_T1Counter,W
     0083                           1-  853     _00230_DS_:
     0083 0803                      1-  854     	BTRSS	STATUS,0
     0084 3rrr                      1-  855     	LGOTO	_00174_DS_
                                    1-  856     	.line	209, "main.c"; 	ReadOver = 1;
                                    1-  857     	BANKSEL	_Status
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 1Arr                      1-  858     	BSR	_Status,4
                                    1-  859     	.line	210, "main.c"; 	OneCode = 0;
     0087 1Crr                      1-  860     	BCR	_Status,1
                                    1-  861     	.line	211, "main.c"; 	ZeroCode = 0;
     0088 1Crr                      1-  862     	BCR	_Status,0
                                    1-  863     	.line	212, "main.c"; 	RemoteStart = 0;
     0089 1Drr                      1-  864     	BCR	_Status,3
                                    1-  865     	.line	213, "main.c"; 	bitIndex = 0;
                                    1-  866     	BANKSEL	_bitIndex
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 02rr                      1-  867     	CLRR	_bitIndex
     008C 3rrr                      1-  868     	LGOTO	_00191_DS_
     008D                           1-  869     _00174_DS_:
                                    1-  870     	.line	218, "main.c"; 	RemoteStart = 0;
                                    1-  871     	BANKSEL	_Status
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 1Drr                      1-  872     	BCR	_Status,3
                                    1-  873     	.line	219, "main.c"; 	OneCode = 0;
     008F 1Crr                      1-  874     	BCR	_Status,1
                                    1-  875     	.line	220, "main.c"; 	ZeroCode = 0;
     0090 1Crr                      1-  876     	BCR	_Status,0
                                    1-  877     	.line	221, "main.c"; 	ReadOver = 0;
     0091 1Err                      1-  878     	BCR	_Status,4
     0092 3rrr                      1-  879     	LGOTO	_00191_DS_
                                    1-  880     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  881     ;;unsigned compare: left >= lit (0x2DE=734), size=2
     0093                           1-  882     _00189_DS_:
                                    1-  883     	.line	229, "main.c"; 	if((T1Counter > (HeadCont_L - (FaultTolerant*FaultTolerantX)))&&(T1Counter < (HeadCont_L + (FaultTolerant*FaultTolerantX))))
     0093 2102                      1-  884     	MOVIA	0x02
                                    1-  885     	BANKSEL	_T1Counter
     0094 rrrr                      3-   71 m1      .banksel ram_address
     0095 04rr                      1-  886     	SUBAR	(_T1Counter + 1),W
     0096 0903                      1-  887     	BTRSS	STATUS,2
     0097 3rrr                      1-  888     	LGOTO	_00231_DS_
     0098 21DE                      1-  889     	MOVIA	0xde
     0099 04rr                      1-  890     	SUBAR	_T1Counter,W
     009A                           1-  891     _00231_DS_:
     009A 0803                      1-  892     	BTRSS	STATUS,0
     009B 3rrr                      1-  893     	LGOTO	_00191_DS_
                                    1-  894     ;;unsigned compare: left < lit (0x305=773), size=2
     009C 2103                      1-  895     	MOVIA	0x03
                                    1-  896     	BANKSEL	_T1Counter
     009D rrrr                      3-   71 m1      .banksel ram_address
     009E 04rr                      1-  897     	SUBAR	(_T1Counter + 1),W
     009F 0903                      1-  898     	BTRSS	STATUS,2
     00A0 3rrr                      1-  899     	LGOTO	_00232_DS_
     00A1 2105                      1-  900     	MOVIA	0x05
     00A2 04rr                      1-  901     	SUBAR	_T1Counter,W
     00A3                           1-  902     _00232_DS_:
     00A3 0C03                      1-  903     	BTRSC	STATUS,0
     00A4 3rrr                      1-  904     	LGOTO	_00191_DS_
                                    1-  905     	.line	231, "main.c"; 	RemoteStart = 1;       //疑似遥控数据头
                                    1-  906     	BANKSEL	_Status
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 19rr                      1-  907     	BSR	_Status,3
                                    1-  908     	.line	232, "main.c"; 	bitIndex = 0;
                                    1-  909     	BANKSEL	_bitIndex
     00A7 rrrr                      3-   71 m1      .banksel ram_address
     00A8 02rr                      1-  910     	CLRR	_bitIndex
                                    1-  911     	.line	233, "main.c"; 	OneCode = 0;
                                    1-  912     	BANKSEL	_Status
     00A9 rrrr                      3-   71 m1      .banksel ram_address
     00AA 1Crr                      1-  913     	BCR	_Status,1
                                    1-  914     	.line	234, "main.c"; 	ZeroCode = 0;
     00AB 1Crr                      1-  915     	BCR	_Status,0
                                    1-  916     	.line	235, "main.c"; 	ReadOver = 0;
     00AC 1Err                      1-  917     	BCR	_Status,4
     00AD                           1-  918     _00191_DS_:
                                    1-  919     	.line	240, "main.c"; 	}
                                    1-  920     	RETURN	
     00AD 0010                      3-   26 m1      ret
                                    1-  921     ; exit point of _proLow
                                    1-  923     ;***
                                    1-  924     ;  pBlock Stats: dbName = C
                                    1-  925     ;***
                                    1-  926     ;has an exit
                                    1-  927     ;4 compiler assigned registers:
                                    1-  928     ;   r0x1017
                                    1-  929     ;   r0x1018
                                    1-  930     ;   r0x1019
                                    1-  931     ;   r0x101A
                                    1-  932     ;; Starting pCode block
                                    1-  933     .segment "code"; module=main, function=_proHight
     0000                           1-  935     _proHight:
                                    1-  936     ; 2 exit points
                                    1-  937     	.line	121, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1-  938     	CLRA	
     0001 00rr                      1-  939     	SFUN	_T1CR1
                                    1-  940     	.line	122, "main.c"; 	tempT1 = 0x30&TMRH;
     0002 2130                      1-  941     	MOVIA	0x30
     0003 10rr                      1-  942     	ANDAR	_TMRH,W
                                    1-  943     ;;3	MOVAR	r0x1017
                                    1-  944     	BANKSEL	_tempT1
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  945     	MOVAR	_tempT1
     0006 02rr                      1-  946     	CLRR	(_tempT1 + 1)
                                    1-  947     	.line	123, "main.c"; 	tempT1 <<= 4;
     0007 15rr                      1-  948     	SWAPR	(_tempT1 + 1),W
     0008 22F0                      1-  949     	ANDIA	0xf0
     0009 00rr                      1-  950     	MOVAR	(_tempT1 + 1)
     000A 15rr                      1-  951     	SWAPR	_tempT1,W
     000B 00rr                      1-  952     	MOVAR	_tempT1
     000C 220F                      1-  953     	ANDIA	0x0f
     000D 11rr                      1-  954     	IORAR	(_tempT1 + 1),F
     000E 12rr                      1-  955     	XORAR	_tempT1,F
                                    1-  956     	.line	124, "main.c"; 	tempT1 += TMR1;
     000F 00rr                      1-  957     	SFUNR	_TMR1
                                    1-  958     	BANKSEL	r0x1017
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1-  959     	MOVAR	r0x1017
                                    1-  960     ;;1	MOVAR	r0x1018
                                    1-  961     ;;1	CLRR	r0x1019
                                    1-  962     ;;99	MOVR	r0x1018,W
     0012 2100                      1-  963     	MOVIA	0x00
                                    1-  964     	BANKSEL	r0x101A
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1-  965     	MOVAR	r0x101A
                                    1-  966     	BANKSEL	r0x1017
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  967     	MOVR	r0x1017,W
                                    1-  968     	BANKSEL	_tempT1
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 03rr                      1-  969     	ADDAR	_tempT1,F
                                    1-  970     	BANKSEL	r0x101A
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  971     	MOVR	r0x101A,W
     001B 0C03                      1-  972     	BTRSC	STATUS,0
     001C 05rr                      1-  973     	INCR	r0x101A,W
     001D 0D03                      1-  974     	BTRSC	STATUS,2
     001E 3rrr                      1-  975     	LGOTO	_00003_DS_
                                    1-  976     	BANKSEL	_tempT1
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 03rr                      1-  977     	ADDAR	(_tempT1 + 1),F
     0021                           1-  978     _00003_DS_:
                                    1-  979     	.line	125, "main.c"; 	T1Counter = 0x3FF - tempT1;
                                    1-  980     	BANKSEL	_tempT1
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1-  981     	MOVR	_tempT1,W
     0023 27FF                      1-  982     	SUBIA	0xff
                                    1-  983     	BANKSEL	_T1Counter
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1-  984     	MOVAR	_T1Counter
                                    1-  985     	BANKSEL	_tempT1
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  986     	MOVR	(_tempT1 + 1),W
     0028 0803                      1-  987     	BTRSS	STATUS,0
     0029 05rr                      1-  988     	INCR	(_tempT1 + 1),W
     002A 2703                      1-  989     	SUBIA	0x03
                                    1-  990     	BANKSEL	_T1Counter
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 00rr                      1-  991     	MOVAR	(_T1Counter + 1)
                                    1-  992     	.line	126, "main.c"; 	TMRH = 0x30;
     002D 2130                      1-  993     	MOVIA	0x30
     002E 00rr                      1-  994     	MOVAR	_TMRH
                                    1-  995     	.line	127, "main.c"; 	TMR1 = 0xFF;
     002F 21FF                      1-  996     	MOVIA	0xff
     0030 00rr                      1-  997     	SFUN	_TMR1
                                    1-  998     	.line	128, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     0031 2103                      1-  999     	MOVIA	0x03
     0032 00rr                      1- 1000     	SFUN	_T1CR1
                                    1- 1001     	.line	129, "main.c"; 	PORTA = 0x00; 
                                    1- 1002     	BANKSEL	_PORTA
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1- 1003     	CLRR	_PORTA
                                    1- 1004     	.line	130, "main.c"; 	if(RemoteStart)
                                    1- 1005     	BANKSEL	_Status
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 09rr                      1- 1006     	BTRSS	_Status,3
     0037 3rrr                      1- 1007     	LGOTO	_00142_DS_
                                    1- 1008     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1009     ;;unsigned compare: left >= lit (0x44=68), size=2
                                    1- 1010     	.line	132, "main.c"; 	if((T1Counter> (OneCode_H - FaultTolerant))&&(T1Counter < (OneCode_H + FaultTolerant)))
     0038 2100                      1- 1011     	MOVIA	0x00
                                    1- 1012     	BANKSEL	_T1Counter
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1013     	SUBAR	(_T1Counter + 1),W
     003B 0903                      1- 1014     	BTRSS	STATUS,2
     003C 3rrr                      1- 1015     	LGOTO	_00159_DS_
     003D 2144                      1- 1016     	MOVIA	0x44
     003E 04rr                      1- 1017     	SUBAR	_T1Counter,W
     003F                           1- 1018     _00159_DS_:
     003F 0803                      1- 1019     	BTRSS	STATUS,0
     0040 3rrr                      1- 1020     	LGOTO	_00137_DS_
                                    1- 1021     ;;unsigned compare: left < lit (0x57=87), size=2
     0041 2100                      1- 1022     	MOVIA	0x00
                                    1- 1023     	BANKSEL	_T1Counter
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 04rr                      1- 1024     	SUBAR	(_T1Counter + 1),W
     0044 0903                      1- 1025     	BTRSS	STATUS,2
     0045 3rrr                      1- 1026     	LGOTO	_00160_DS_
     0046 2157                      1- 1027     	MOVIA	0x57
     0047 04rr                      1- 1028     	SUBAR	_T1Counter,W
     0048                           1- 1029     _00160_DS_:
     0048 0C03                      1- 1030     	BTRSC	STATUS,0
     0049 3rrr                      1- 1031     	LGOTO	_00137_DS_
                                    1- 1032     	.line	134, "main.c"; 	OneCode = 1;
                                    1- 1033     	BANKSEL	_Status
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 18rr                      1- 1034     	BSR	_Status,1
                                    1- 1035     	.line	135, "main.c"; 	ZeroCode = 0;
     004C 1Crr                      1- 1036     	BCR	_Status,0
     004D 3rrr                      1- 1037     	LGOTO	_00142_DS_
                                    1- 1038     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1039     ;;unsigned compare: left >= lit (0x13=19), size=2
     004E                           1- 1040     _00137_DS_:
                                    1- 1041     	.line	139, "main.c"; 	if((T1Counter > (Zero_H - FaultTolerant))&&(T1Counter < (Zero_H + FaultTolerant)))
     004E 2100                      1- 1042     	MOVIA	0x00
                                    1- 1043     	BANKSEL	_T1Counter
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 04rr                      1- 1044     	SUBAR	(_T1Counter + 1),W
     0051 0903                      1- 1045     	BTRSS	STATUS,2
     0052 3rrr                      1- 1046     	LGOTO	_00161_DS_
     0053 2113                      1- 1047     	MOVIA	0x13
     0054 04rr                      1- 1048     	SUBAR	_T1Counter,W
     0055                           1- 1049     _00161_DS_:
     0055 0803                      1- 1050     	BTRSS	STATUS,0
     0056 3rrr                      1- 1051     	LGOTO	_00133_DS_
                                    1- 1052     ;;unsigned compare: left < lit (0x26=38), size=2
     0057 2100                      1- 1053     	MOVIA	0x00
                                    1- 1054     	BANKSEL	_T1Counter
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 04rr                      1- 1055     	SUBAR	(_T1Counter + 1),W
     005A 0903                      1- 1056     	BTRSS	STATUS,2
     005B 3rrr                      1- 1057     	LGOTO	_00162_DS_
     005C 2126                      1- 1058     	MOVIA	0x26
     005D 04rr                      1- 1059     	SUBAR	_T1Counter,W
     005E                           1- 1060     _00162_DS_:
     005E 0C03                      1- 1061     	BTRSC	STATUS,0
     005F 3rrr                      1- 1062     	LGOTO	_00133_DS_
                                    1- 1063     	.line	141, "main.c"; 	ZeroCode = 1;
                                    1- 1064     	BANKSEL	_Status
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 18rr                      1- 1065     	BSR	_Status,0
                                    1- 1066     	.line	142, "main.c"; 	OneCode = 0;
     0062 1Crr                      1- 1067     	BCR	_Status,1
     0063 3rrr                      1- 1068     	LGOTO	_00142_DS_
     0064                           1- 1069     _00133_DS_:
                                    1- 1070     	.line	146, "main.c"; 	ZeroCode = 0;
                                    1- 1071     	BANKSEL	_Status
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 1Crr                      1- 1072     	BCR	_Status,0
                                    1- 1073     	.line	147, "main.c"; 	OneCode = 0;
     0066 1Crr                      1- 1074     	BCR	_Status,1
     0067                           1- 1075     _00142_DS_:
                                    1- 1076     	.line	152, "main.c"; 	}
                                    1- 1077     	RETURN	
     0067 0010                      3-   26 m1      ret
                                    1- 1078     ; exit point of _proHight
                                    1- 1081     ;	code size estimation:
                                    1- 1082     ;	  383+   99 =   482 instructions ( 1162 byte)
                                    1- 1084     	end
                                    1- 1084     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001A
_00002_DS_              Label    00000021
_00003_DS_              Label    00000021
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00112_DS_              Label    00000026
_00118_DS_              Label    00000004
_00123_DS_              Label    0000000E
_00124_DS_              Label    00000017
_00127_DS_              Label    00000001
_00133_DS_              Label    00000064
_00137_DS_              Label    0000004E
_00142_DS_              Label    00000067
_00159_DS_              Label    0000003F
_00160_DS_              Label    00000048
_00161_DS_              Label    00000055
_00162_DS_              Label    0000005E
_00168_DS_              Label    00000051
_00171_DS_              Label    00000071
_00174_DS_              Label    0000008D
_00178_DS_              Label    00000079
_00182_DS_              Label    00000059
_00189_DS_              Label    00000093
_00191_DS_              Label    000000AD
_00226_DS_              Label    00000040
_00227_DS_              Label    00000049
_00228_DS_              Label    00000060
_00229_DS_              Label    00000069
_00230_DS_              Label    00000083
_00231_DS_              Label    0000009A
_00232_DS_              Label    000000A3
_00242_DS_              Label    00000012
_00248_DS_              Label    0000002E
_00251_DS_              Label    00000024
_00252_DS_              Label    00000037
_00255_DS_              Label    0000003A
_00264_DS_              Label    0000000B
_00265_DS_              Label    0000000E
_00267_DS_              Label    0000000F
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_bitIndex               Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_CMPCR                  Label    00000000
_data1                  Label    00000000
_data2                  Label    00000000
_data3                  Label    00000000
_FSR                    Label    00000000
_GetOneByte             Label    00000000
_INDF                   Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCallBack            Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_predata1               Label    00000000
_predata2               Label    00000000
_predata3               Label    00000000
_proData                Label    00000000
_proHight               Label    00000000
_proLow                 Label    00000000
_proTime                Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1Counter              Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempT1                 Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_value                  Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000037
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1012                 Label    00000000
r0x1013                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x101A                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a054d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
