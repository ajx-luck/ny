
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showBaiwei
                                    1-   24     	extern	_B1
                                    1-   25     	extern	_C1
                                    1-   26     	extern	_A2
                                    1-   27     	extern	_B2
                                    1-   28     	extern	_C2
                                    1-   29     	extern	_D2
                                    1-   30     	extern	_E2
                                    1-   31     	extern	_F2
                                    1-   32     	extern	_G2
                                    1-   33     	extern	_A3
                                    1-   34     	extern	_B3
                                    1-   35     	extern	_C3
                                    1-   36     	extern	_D3
                                    1-   37     	extern	_E3
                                    1-   38     	extern	_F3
                                    1-   39     	extern	_G3
                                    1-   40     	extern	_delayms
                                    1-   41     	extern	__divuint
                                    1-   42     	extern	_PORTAbits
                                    1-   43     	extern	_PORTBbits
                                    1-   44     	extern	_PCONbits
                                    1-   45     	extern	_BWUCONbits
                                    1-   46     	extern	_ABPLCONbits
                                    1-   47     	extern	_BPHCONbits
                                    1-   48     	extern	_INTEbits
                                    1-   49     	extern	_INTFbits
                                    1-   50     	extern	_ADMDbits
                                    1-   51     	extern	_ADRbits
                                    1-   52     	extern	_ADVREFHbits
                                    1-   53     	extern	_ADCRbits
                                    1-   54     	extern	_AWUCONbits
                                    1-   55     	extern	_PACONbits
                                    1-   56     	extern	_INTEDGbits
                                    1-   57     	extern	_ANAENbits
                                    1-   58     	extern	_RFCbits
                                    1-   59     	extern	_INTE2bits
                                    1-   60     	extern	_INDF
                                    1-   61     	extern	_TMR0
                                    1-   62     	extern	_PCL
                                    1-   63     	extern	_STATUS
                                    1-   64     	extern	_FSR
                                    1-   65     	extern	_PORTA
                                    1-   66     	extern	_PORTB
                                    1-   67     	extern	_PCON
                                    1-   68     	extern	_BWUCON
                                    1-   69     	extern	_PCHBUF
                                    1-   70     	extern	_ABPLCON
                                    1-   71     	extern	_BPHCON
                                    1-   72     	extern	_INTE
                                    1-   73     	extern	_INTF
                                    1-   74     	extern	_ADMD
                                    1-   75     	extern	_ADR
                                    1-   76     	extern	_ADD
                                    1-   77     	extern	_ADVREFH
                                    1-   78     	extern	_ADCR
                                    1-   79     	extern	_AWUCON
                                    1-   80     	extern	_PACON
                                    1-   81     	extern	_INTEDG
                                    1-   82     	extern	_TMRH
                                    1-   83     	extern	_ANAEN
                                    1-   84     	extern	_RFC
                                    1-   85     	extern	_TM3RH
                                    1-   86     	extern	_INTE2
                                    1-   87     	extern	_TMR1
                                    1-   88     	extern	_T1CR1
                                    1-   89     	extern	_T1CR2
                                    1-   90     	extern	_PWM1DUTY
                                    1-   91     	extern	_PS1CV
                                    1-   92     	extern	_BZ1CR
                                    1-   93     	extern	_IRCR
                                    1-   94     	extern	_TBHP
                                    1-   95     	extern	_TBHD
                                    1-   96     	extern	_TMR2
                                    1-   97     	extern	_T2CR1
                                    1-   98     	extern	_T2CR2
                                    1-   99     	extern	_PWM2DUTY
                                    1-  100     	extern	_PS2CV
                                    1-  101     	extern	_BZ2CR
                                    1-  102     	extern	_OSCCR
                                    1-  103     	extern	_TMR3
                                    1-  104     	extern	_T3CR1
                                    1-  105     	extern	_T3CR2
                                    1-  106     	extern	_PWM3DUTY
                                    1-  107     	extern	_PS3CV
                                    1-  108     	extern	_BZ3CR
                                    1-  109     	extern	_IOSTA
                                    1-  110     	extern	_IOSTB
                                    1-  111     	extern	_APHCON
                                    1-  112     	extern	_PS0CV
                                    1-  113     	extern	_BODCON
                                    1-  114     	extern	_CMPCR
                                    1-  115     	extern	_PCON1
                                    1-  116     	extern	_T0MD
                                    1-  117     	extern	___sdcc_saved_fsr
                                    1-  118     	extern	___sdcc_saved_stk00
                                    1-  119     	extern	___sdcc_saved_stk01
                                    1-  120     	extern	__gptrget1
                                    1-  121     	extern	__nyc_ny8_startup
                                    1-  122     ;--------------------------------------------------------
                                    1-  123     ; global declarations
                                    1-  124     ;--------------------------------------------------------
                                    1-  125     	extern	_checkLVD
                                    1-  126     	extern	_translateTempAD
                                    1-  127     	extern	_translateVDDAD
                                    1-  128     	extern	_delay
                                    1-  129     	extern	_F_wait_eoc
                                    1-  130     	extern	_gotoSleep
                                    1-  131     	extern	_F_Quarter_VDD_Convert
                                    1-  132     	extern	_F_AIN6_Convert
                                    1-  133     	extern	_checkMF52AD
                                    1-  134     	extern	_checkQuarterVDD
                                    1-  135     	extern	_initAD
                                    1-  136     	extern	_init
                                    1-  137     	extern	_setKeyPress
                                    1-  138     	extern	_keyCon
                                    1-  139     	extern	_checkBatSta
                                    1-  140     	extern	_checkAD
                                    1-  141     	extern	_refreshNub
                                    1-  142     	extern	_isr
                                    1-  143     	extern	_main
                                    1-  144     	extern	_intCount
                                    1-  145     	extern	_IntFlag
                                    1-  146     	extern	_R_AIN6_DATA
                                    1-  147     	extern	_R_AIN6_DATA_LB
                                    1-  148     	extern	_R_Quarter_VDD_DATA
                                    1-  149     	extern	_R_Quarter_VDD_DATA_LB
                                    1-  150     	extern	_workStep
                                    1-  151     	extern	_batHCount
                                    1-  152     	extern	_batCount
                                    1-  153     	extern	_realWork
                                    1-  154     	extern	_baiweiNum
                                    1-  155     	extern	_shiweiNum
                                    1-  156     	extern	_geweiNum
                                    1-  157     	extern	_nubCount
                                    1-  158     	extern	_numFlag
                                    1-  159     	extern	_keyOutCount
                                    1-  160     	extern	_addVDDFlag
                                    1-  161     	extern	_sharkCount
                                    1-  162     	extern	_sleepCount
                                    1-  163     	extern	_ADDFullFlag
                                    1-  164     	extern	_tempbaiweiNum
                                    1-  165     	extern	_tempshiweiNum
                                    1-  166     	extern	_tempgeweiNum
                                    1-  167     	extern	_refreshCount
                                    1-  168     	extern	_LVDFlag
                                    1-  169     	extern	_NotSleepFlag
                                    1-  170     	extern	_hotFlag
                                    1-  171     	extern	_saveWorkStep
                                    1-  172     	extern	_numArray
                                    1-  174     	extern PSAVE
                                    1-  175     	extern SSAVE
                                    1-  176     	extern WSAVE
                                    1-  177     	extern STK12
                                    1-  178     	extern STK11
                                    1-  179     	extern STK10
                                    1-  180     	extern STK09
                                    1-  181     	extern STK08
                                    1-  182     	extern STK07
                                    1-  183     	extern STK06
                                    1-  184     	extern STK05
                                    1-  185     	extern STK04
                                    1-  186     	extern STK03
                                    1-  187     	extern STK02
                                    1-  188     	extern STK01
                                    1-  189     	extern STK00
                                    1-  191     .segment "uninit", 0x20000040
 20000040                           1-  192     PSAVE:
                                    1-  193     	.res 1
 20000041                           1-  194     SSAVE:
                                    1-  195     	.res 1
 20000042                           1-  196     WSAVE:
                                    1-  197     	.res 1
 20000043                           1-  198     STK12:
                                    1-  199     	.res 1
 20000044                           1-  200     STK11:
                                    1-  201     	.res 1
 20000045                           1-  202     STK10:
                                    1-  203     	.res 1
 20000046                           1-  204     STK09:
                                    1-  205     	.res 1
 20000047                           1-  206     STK08:
                                    1-  207     	.res 1
 20000048                           1-  208     STK07:
                                    1-  209     	.res 1
 20000049                           1-  210     STK06:
                                    1-  211     	.res 1
 2000004A                           1-  212     STK05:
                                    1-  213     	.res 1
 2000004B                           1-  214     STK04:
                                    1-  215     	.res 1
 2000004C                           1-  216     STK03:
                                    1-  217     	.res 1
 2000004D                           1-  218     STK02:
                                    1-  219     	.res 1
 2000004E                           1-  220     STK01:
                                    1-  221     	.res 1
 2000004F                           1-  222     STK00:
                                    1-  223     	.res 1
                                    1-  225     ;--------------------------------------------------------
                                    1-  226     ; global definitions
                                    1-  227     ;--------------------------------------------------------
                                    1-  228     .segment "uninit"
     0000                           1-  229     _R_AIN6_DATA:
                                    1-  230     	.res	2
                                    1-  233     .segment "uninit"
     0000                           1-  234     _R_AIN6_DATA_LB:
                                    1-  235     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     _R_Quarter_VDD_DATA:
                                    1-  240     	.res	2
                                    1-  243     .segment "uninit"
     0000                           1-  244     _R_Quarter_VDD_DATA_LB:
                                    1-  245     	.res	1
                                    1-  248     ;--------------------------------------------------------
                                    1-  249     ; absolute symbol definitions
                                    1-  250     ;--------------------------------------------------------
                                    1-  251     ;--------------------------------------------------------
                                    1-  252     ; compiler-defined variables
                                    1-  253     ;--------------------------------------------------------
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x104F:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1050:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1051:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x104E:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x104D:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x104B:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x104C:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1047:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1048:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x103F:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1040:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1041:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1044:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1039:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x103A:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x103B:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x103E:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1030:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x102F:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1031:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1032:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1035:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x1036:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x1038:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x1037:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x1034:
                                    1-  331     	.res	1
                                    1-  332     ;--------------------------------------------------------
                                    1-  333     ; initialized data
                                    1-  334     ;--------------------------------------------------------
                                    1-  336     .segment "idata"
     0000                           1-  337     _intCount:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _IntFlag:
     0000 0000                      1-  344     	dw	0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _workStep:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _batHCount:
     0000 0000                      1-  356     	dw	0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _batCount:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _realWork:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _baiweiNum:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _shiweiNum:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _geweiNum:
     0000 0000                      1-  386     	dw	0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _nubCount:
     0000 0000 0000                 1-  392     	dw	0x00, 0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _numFlag:
     0000 0000                      1-  398     	dw	0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _keyOutCount:
     0000 0000 0000                 1-  404     	dw	0x00, 0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _addVDDFlag:
     0000 0000                      1-  410     	dw	0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _sharkCount:
     0000 0000 0000                 1-  416     	dw	0x00, 0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _sleepCount:
     0000 0000 0000                 1-  422     	dw	0x00, 0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _ADDFullFlag:
     0000 0000                      1-  428     	dw	0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _tempbaiweiNum:
     0000 0000                      1-  434     	dw	0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _tempshiweiNum:
     0000 0000                      1-  440     	dw	0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _tempgeweiNum:
     0000 0000                      1-  446     	dw	0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _refreshCount:
     0000 0000                      1-  452     	dw	0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _LVDFlag:
     0000 0000                      1-  458     	dw	0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _NotSleepFlag:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _hotFlag:
     0000 0000                      1-  470     	dw	0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _saveWorkStep:
     0000 0000                      1-  476     	dw	0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _numArray:
     0000 003F                      1-  482     	dw	0x3f
     0001 0006                      1-  483     	dw	0x06
     0002 005B                      1-  484     	dw	0x5b
     0003 004F                      1-  485     	dw	0x4f
     0004 0066                      1-  486     	dw	0x66
     0005 006D                      1-  487     	dw	0x6d
     0006 007D                      1-  488     	dw	0x7d
     0007 0007                      1-  489     	dw	0x07
     0008 007F                      1-  490     	dw	0x7f
     0009 0067                      1-  491     	dw	0x67
                                    1-  494     ;--------------------------------------------------------
                                    1-  495     ; overlayable items in internal ram 
                                    1-  496     ;--------------------------------------------------------
                                    1-  497     ;	udata_ovr
                                    1-  498     ;--------------------------------------------------------
                                    1-  499     ; reset vector 
                                    1-  500     ;--------------------------------------------------------
                                    1-  501     ORG	0x0000
     0000 3rrr                      1-  502     	LGOTO	__nyc_ny8_startup
                                    1-  503     ;--------------------------------------------------------
                                    1-  504     ; interrupt and initialization code
                                    1-  505     ;--------------------------------------------------------
                                    1-  506     ORG 0x0008
     0008 3rrr                      1-  507     	lgoto	__sdcc_interrupt
                                    1-  509     .segment "code"
     0000                           1-  510     __sdcc_interrupt:
                                    1-  511     ;***
                                    1-  512     ;  pBlock Stats: dbName = I
                                    1-  513     ;***
                                    1-  514     ;2 compiler assigned registers:
                                    1-  515     ;   STK00
                                    1-  516     ;   STK01
                                    1-  517     ;; Starting pCode block
     0000                           1-  518     _isr:
                                    1-  519     ; 0 exit points
                                    1-  520     	.line	63, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  521     	MOVAR	WSAVE
     0001 1503                      1-  522     	SWAPR	STATUS,W
     0002 0283                      1-  523     	CLRR	STATUS
     0003 00rr                      1-  524     	MOVAR	SSAVE
     0004 010A                      1-  525     	MOVR	PCHBUF,W
     0005 028A                      1-  526     	CLRR	PCHBUF
     0006 00rr                      1-  527     	MOVAR	PSAVE
     0007 0104                      1-  528     	MOVR	FSR,W
                                    1-  529     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  530     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  531     	MOVR	STK00,W
                                    1-  532     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  533     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  534     	MOVR	STK01,W
                                    1-  535     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  536     	MOVAR	___sdcc_saved_stk01
                                    1-  537     	.line	65, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  538     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  539     	LGOTO	_00108_DS_
                                    1-  540     	.line	67, "main.c"; 	TMR0 = 65;
     0012 2141                      1-  541     	MOVIA	0x41
     0013 00rr                      1-  542     	MOVAR	_TMR0
                                    1-  543     	.line	68, "main.c"; 	intCount++;
                                    1-  544     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  545     	INCR	_intCount,F
                                    1-  546     	.line	69, "main.c"; 	if(intCount == 30)		//3ms
     0016 01rr                      1-  547     	MOVR	_intCount,W
     0017 241E                      1-  548     	XORIA	0x1e
     0018 0903                      1-  549     	BTRSS	STATUS,2
     0019 3rrr                      1-  550     	LGOTO	_00108_DS_
                                    1-  551     	.line	71, "main.c"; 	intCount = 0;
     001A 02rr                      1-  552     	CLRR	_intCount
                                    1-  553     	.line	72, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  554     	MOVIA	0x01
                                    1-  555     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  556     	MOVAR	_IntFlag
     001E                           1-  557     _00108_DS_:
                                    1-  558     	.line	76, "main.c"; 	if(INTFbits.PABIF)
     001E 08rr                      1-  559     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  560     	LGOTO	_00110_DS_
                                    1-  561     	.line	78, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  562     	MOVIA	0xfd
     0021 00rr                      1-  563     	MOVAR	_INTF
     0022                           1-  564     _00110_DS_:
                                    1-  565     	.line	81, "main.c"; 	INTF = 0;
     0022 02rr                      1-  566     	CLRR	_INTF
                                    1-  567     	.line	83, "main.c"; 	}
                                    1-  568     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  569     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  570     	MOVAR	STK01
                                    1-  571     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  572     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  573     	MOVAR	STK00
                                    1-  574     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  575     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  576     	MOVAR	FSR
     002C 01rr                      1-  577     	MOVR	PSAVE,W
     002D 008A                      1-  578     	MOVAR	PCHBUF
     002E 0283                      1-  579     	CLRR	STATUS
     002F 15rr                      1-  580     	SWAPR	SSAVE,W
     0030 0083                      1-  581     	MOVAR	STATUS
     0031 15rr                      1-  582     	SWAPR	WSAVE,F
     0032 15rr                      1-  583     	SWAPR	WSAVE,W
     0033                           1-  584     END_OF_INTERRUPT:
     0033 0011                      1-  585     	RETIE	
                                    1-  587     ;--------------------------------------------------------
                                    1-  588     ; code
                                    1-  589     ;--------------------------------------------------------
                                    1-  590     ;***
                                    1-  591     ;  pBlock Stats: dbName = M
                                    1-  592     ;***
                                    1-  593     ;has an exit
                                    1-  594     ;functions called:
                                    1-  595     ;   _init
                                    1-  596     ;   _initAD
                                    1-  597     ;   _checkBatSta
                                    1-  598     ;   _keyCon
                                    1-  599     ;   _checkAD
                                    1-  600     ;   _checkLVD
                                    1-  601     ;   _refreshNub
                                    1-  602     ;   _setInput
                                    1-  603     ;   _refreshNub
                                    1-  604     ;   _setInput
                                    1-  605     ;   _gotoSleep
                                    1-  606     ;   _setInput
                                    1-  607     ;   _gotoSleep
                                    1-  608     ;   _init
                                    1-  609     ;   _initAD
                                    1-  610     ;   _checkBatSta
                                    1-  611     ;   _keyCon
                                    1-  612     ;   _checkAD
                                    1-  613     ;   _checkLVD
                                    1-  614     ;   _refreshNub
                                    1-  615     ;   _setInput
                                    1-  616     ;   _refreshNub
                                    1-  617     ;   _setInput
                                    1-  618     ;   _gotoSleep
                                    1-  619     ;   _setInput
                                    1-  620     ;   _gotoSleep
                                    1-  621     ;; Starting pCode block
                                    1-  622     .segment "code"; module=main, function=_main
     0000                           1-  624     _main:
                                    1-  625     ; 2 exit points
                                    1-  626     	.line	87, "main.c"; 	init();
     0000 2rrr                      1-  627     	LCALL	_init
                                    1-  628     	.line	88, "main.c"; 	initAD();
     0001 2rrr                      1-  629     	LCALL	_initAD
     0002                           1-  630     _00143_DS_:
                                    1-  631     	.line	91, "main.c"; 	CLRWDT(); 
     0002 0002                      1-  632     	clrwdt
                                    1-  633     	.line	92, "main.c"; 	if(!IntFlag)
                                    1-  634     	BANKSEL	_IntFlag
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 01rr                      1-  635     	MOVR	_IntFlag,W
     0005 0D03                      1-  636     	BTRSC	STATUS,2
     0006 3rrr                      1-  637     	LGOTO	_00143_DS_
                                    1-  638     	.line	94, "main.c"; 	IntFlag = 0;
     0007 02rr                      1-  639     	CLRR	_IntFlag
                                    1-  640     	.line	95, "main.c"; 	checkBatSta();
     0008 2rrr                      1-  641     	LCALL	_checkBatSta
                                    1-  642     	.line	96, "main.c"; 	keyCon();
     0009 2rrr                      1-  643     	LCALL	_keyCon
                                    1-  644     	.line	97, "main.c"; 	checkAD();
     000A 2rrr                      1-  645     	LCALL	_checkAD
                                    1-  646     	.line	98, "main.c"; 	if(workStep != 1)
                                    1-  647     	BANKSEL	_workStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1-  648     	MOVR	_workStep,W
     000D 2401                      1-  649     	XORIA	0x01
     000E 0903                      1-  650     	BTRSS	STATUS,2
                                    1-  651     	.line	101, "main.c"; 	checkLVD();
     000F 2rrr                      1-  652     	LCALL	_checkLVD
                                    1-  653     	.line	103, "main.c"; 	if((LVDFlag == 1 || workStep == 1) && sharkCount && ADDFullFlag == 0)
                                    1-  654     	BANKSEL	_LVDFlag
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1-  655     	MOVR	_LVDFlag,W
     0012 2401                      1-  656     	XORIA	0x01
     0013 0D03                      1-  657     	BTRSC	STATUS,2
     0014 3rrr                      1-  658     	LGOTO	_00140_DS_
                                    1-  659     	BANKSEL	_workStep
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  660     	MOVR	_workStep,W
     0017 2401                      1-  661     	XORIA	0x01
     0018 0903                      1-  662     	BTRSS	STATUS,2
     0019 3rrr                      1-  663     	LGOTO	_00137_DS_
     001A                           1-  664     _00140_DS_:
                                    1-  665     	BANKSEL	_sharkCount
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  666     	MOVR	_sharkCount,W
     001C 11rr                      1-  667     	IORAR	(_sharkCount + 1),W
     001D 0D03                      1-  668     	BTRSC	STATUS,2
     001E 3rrr                      1-  669     	LGOTO	_00137_DS_
                                    1-  670     	BANKSEL	_ADDFullFlag
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  671     	MOVR	_ADDFullFlag,W
     0021 0903                      1-  672     	BTRSS	STATUS,2
     0022 3rrr                      1-  673     	LGOTO	_00137_DS_
                                    1-  674     	.line	106, "main.c"; 	if(++nubCount >= 300)
                                    1-  675     	BANKSEL	_nubCount
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 05rr                      1-  676     	INCR	_nubCount,F
     0025 0D03                      1-  677     	BTRSC	STATUS,2
     0026 05rr                      1-  678     	INCR	(_nubCount + 1),F
                                    1-  679     ;;unsigned compare: left < lit (0x12C=300), size=2
     0027 2101                      1-  680     	MOVIA	0x01
     0028 04rr                      1-  681     	SUBAR	(_nubCount + 1),W
     0029 0903                      1-  682     	BTRSS	STATUS,2
     002A 3rrr                      1-  683     	LGOTO	_00188_DS_
     002B 212C                      1-  684     	MOVIA	0x2c
     002C 04rr                      1-  685     	SUBAR	_nubCount,W
     002D                           1-  686     _00188_DS_:
     002D 0803                      1-  687     	BTRSS	STATUS,0
     002E 3rrr                      1-  688     	LGOTO	_00120_DS_
                                    1-  689     	.line	108, "main.c"; 	nubCount = 0;
                                    1-  690     	BANKSEL	_nubCount
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1-  691     	CLRR	_nubCount
     0031 02rr                      1-  692     	CLRR	(_nubCount + 1)
                                    1-  693     	.line	109, "main.c"; 	numFlag = ~numFlag;
                                    1-  694     	BANKSEL	_numFlag
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 07rr                      1-  695     	COMR	_numFlag,W
     0034 00rr                      1-  696     	MOVAR	_numFlag
     0035                           1-  697     _00120_DS_:
                                    1-  698     	.line	113, "main.c"; 	if(numFlag)
                                    1-  699     	BANKSEL	_numFlag
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1-  700     	MOVR	_numFlag,W
     0037 0D03                      1-  701     	BTRSC	STATUS,2
     0038 3rrr                      1-  702     	LGOTO	_00122_DS_
                                    1-  703     	.line	115, "main.c"; 	refreshNub();
     0039 2rrr                      1-  704     	LCALL	_refreshNub
     003A 3rrr                      1-  705     	LGOTO	_00123_DS_
     003B                           1-  706     _00122_DS_:
                                    1-  707     	.line	119, "main.c"; 	setInput();
     003B 2rrr                      1-  708     	LCALL	_setInput
     003C                           1-  709     _00123_DS_:
                                    1-  710     	.line	121, "main.c"; 	sharkCount--;
     003C 21FF                      1-  711     	MOVIA	0xff
                                    1-  712     	BANKSEL	_sharkCount
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 03rr                      1-  713     	ADDAR	_sharkCount,F
     003F 0803                      1-  714     	BTRSS	STATUS,0
     0040 06rr                      1-  715     	DECR	(_sharkCount + 1),F
     0041 3rrr                      1-  716     	LGOTO	_00143_DS_
     0042                           1-  717     _00137_DS_:
                                    1-  718     	.line	123, "main.c"; 	else if(workStep == 2 || workStep == 3 || ADDFullFlag == 1)
                                    1-  719     	BANKSEL	_workStep
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1-  720     	MOVR	_workStep,W
     0044 2402                      1-  721     	XORIA	0x02
     0045 0D03                      1-  722     	BTRSC	STATUS,2
     0046 3rrr                      1-  723     	LGOTO	_00131_DS_
     0047 01rr                      1-  724     	MOVR	_workStep,W
     0048 2403                      1-  725     	XORIA	0x03
     0049 0D03                      1-  726     	BTRSC	STATUS,2
     004A 3rrr                      1-  727     	LGOTO	_00131_DS_
                                    1-  728     	BANKSEL	_ADDFullFlag
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1-  729     	MOVR	_ADDFullFlag,W
     004D 2401                      1-  730     	XORIA	0x01
     004E 0903                      1-  731     	BTRSS	STATUS,2
     004F 3rrr                      1-  732     	LGOTO	_00132_DS_
     0050                           1-  733     _00131_DS_:
                                    1-  734     	.line	124, "main.c"; 	refreshNub();
     0050 2rrr                      1-  735     	LCALL	_refreshNub
     0051 3rrr                      1-  736     	LGOTO	_00143_DS_
     0052                           1-  737     _00132_DS_:
                                    1-  738     	.line	125, "main.c"; 	else if(workStep == 0)
                                    1-  739     	BANKSEL	_workStep
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1-  740     	MOVR	_workStep,W
     0054 0903                      1-  741     	BTRSS	STATUS,2
     0055 3rrr                      1-  742     	LGOTO	_00129_DS_
                                    1-  743     	.line	127, "main.c"; 	ADDFullFlag = 0;
                                    1-  744     	BANKSEL	_ADDFullFlag
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 02rr                      1-  745     	CLRR	_ADDFullFlag
                                    1-  746     	.line	128, "main.c"; 	realWork = 0;
                                    1-  747     	BANKSEL	_realWork
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 02rr                      1-  748     	CLRR	_realWork
                                    1-  749     	.line	129, "main.c"; 	setInput();
     005A 2rrr                      1-  750     	LCALL	_setInput
                                    1-  751     	.line	130, "main.c"; 	if(++sleepCount >= 50)
                                    1-  752     	BANKSEL	_sleepCount
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 05rr                      1-  753     	INCR	_sleepCount,F
     005D 0D03                      1-  754     	BTRSC	STATUS,2
     005E 05rr                      1-  755     	INCR	(_sleepCount + 1),F
                                    1-  756     ;;unsigned compare: left < lit (0x32=50), size=2
     005F 2100                      1-  757     	MOVIA	0x00
     0060 04rr                      1-  758     	SUBAR	(_sleepCount + 1),W
     0061 0903                      1-  759     	BTRSS	STATUS,2
     0062 3rrr                      1-  760     	LGOTO	_00191_DS_
     0063 2132                      1-  761     	MOVIA	0x32
     0064 04rr                      1-  762     	SUBAR	_sleepCount,W
     0065                           1-  763     _00191_DS_:
     0065 0803                      1-  764     	BTRSS	STATUS,0
     0066 3rrr                      1-  765     	LGOTO	_00143_DS_
                                    1-  766     	.line	131, "main.c"; 	gotoSleep();
     0067 2rrr                      1-  767     	LCALL	_gotoSleep
     0068 3rrr                      1-  768     	LGOTO	_00143_DS_
     0069                           1-  769     _00129_DS_:
                                    1-  770     	.line	135, "main.c"; 	setInput();
     0069 2rrr                      1-  771     	LCALL	_setInput
                                    1-  772     	.line	136, "main.c"; 	if(++sleepCount >= 50)
                                    1-  773     	BANKSEL	_sleepCount
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 05rr                      1-  774     	INCR	_sleepCount,F
     006C 0D03                      1-  775     	BTRSC	STATUS,2
     006D 05rr                      1-  776     	INCR	(_sleepCount + 1),F
                                    1-  777     ;;unsigned compare: left < lit (0x32=50), size=2
     006E 2100                      1-  778     	MOVIA	0x00
     006F 04rr                      1-  779     	SUBAR	(_sleepCount + 1),W
     0070 0903                      1-  780     	BTRSS	STATUS,2
     0071 3rrr                      1-  781     	LGOTO	_00192_DS_
     0072 2132                      1-  782     	MOVIA	0x32
     0073 04rr                      1-  783     	SUBAR	_sleepCount,W
     0074                           1-  784     _00192_DS_:
     0074 0803                      1-  785     	BTRSS	STATUS,0
     0075 3rrr                      1-  786     	LGOTO	_00143_DS_
                                    1-  787     	.line	138, "main.c"; 	realWork = 0;
                                    1-  788     	BANKSEL	_realWork
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 02rr                      1-  789     	CLRR	_realWork
                                    1-  790     	.line	139, "main.c"; 	gotoSleep();
     0078 2rrr                      1-  791     	LCALL	_gotoSleep
     0079 3rrr                      1-  792     	LGOTO	_00143_DS_
                                    1-  793     	.line	143, "main.c"; 	}
                                    1-  794     	RETURN	
     007A 0010                      3-   26 m1      ret
                                    1-  795     ; exit point of _main
                                    1-  797     ;***
                                    1-  798     ;  pBlock Stats: dbName = C
                                    1-  799     ;***
                                    1-  800     ;has an exit
                                    1-  801     ;functions called:
                                    1-  802     ;   _delay
                                    1-  803     ;   _setInput
                                    1-  804     ;   _gotoSleep
                                    1-  805     ;   _delay
                                    1-  806     ;   _setInput
                                    1-  807     ;   _gotoSleep
                                    1-  808     ;3 compiler assigned registers:
                                    1-  809     ;   STK00
                                    1-  810     ;   r0x1033
                                    1-  811     ;   r0x1034
                                    1-  812     ;; Starting pCode block
                                    1-  813     .segment "code"; module=main, function=_checkLVD
     0000                           1-  815     _checkLVD:
                                    1-  816     ; 2 exit points
                                    1-  817     	.line	638, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0000 2111                      1-  818     	MOVIA	0x11
     0001 000r                      1-  819     	IOST	_PCON1
                                    1-  820     	.line	639, "main.c"; 	delay(80);
     0002 2150                      1-  821     	MOVIA	0x50
     0003 00rr                      1-  822     	MOVAR	STK00
     0004 2100                      1-  823     	MOVIA	0x00
     0005 2rrr                      1-  824     	LCALL	_delay
                                    1-  825     	.line	641, "main.c"; 	if((PCON1 >> 6)&1)
     0006 001r                      1-  826     	IOSTR	_PCON1
                                    1-  827     ;;1	MOVAR	r0x1033
     0007 2240                      1-  828     	ANDIA	0x40
     0008 0903                      1-  829     	BTRSS	STATUS,2
     0009 2101                      1-  830     	MOVIA	0x01
                                    1-  831     	BANKSEL	r0x1034
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1-  832     	MOVAR	r0x1034
     000C 01rr                      1-  833     	MOVR	r0x1034,W
     000D 0D03                      1-  834     	BTRSC	STATUS,2
     000E 3rrr                      1-  835     	LGOTO	_00624_DS_
                                    1-  836     	.line	643, "main.c"; 	NOP();
     000F 0000                      1-  837     	nop
                                    1-  838     	.line	644, "main.c"; 	LVDFlag = 0;
                                    1-  839     	BANKSEL	_LVDFlag
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1-  840     	CLRR	_LVDFlag
     0012 3rrr                      1-  841     	LGOTO	_00626_DS_
     0013                           1-  842     _00624_DS_:
                                    1-  843     	.line	648, "main.c"; 	LVDFlag = 1;
     0013 2101                      1-  844     	MOVIA	0x01
                                    1-  845     	BANKSEL	_LVDFlag
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1-  846     	MOVAR	_LVDFlag
                                    1-  847     	.line	649, "main.c"; 	sharkCount = 5000;
     0016 2188                      1-  848     	MOVIA	0x88
                                    1-  849     	BANKSEL	_sharkCount
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1-  850     	MOVAR	_sharkCount
     0019 2113                      1-  851     	MOVIA	0x13
     001A 00rr                      1-  852     	MOVAR	(_sharkCount + 1)
                                    1-  853     	.line	650, "main.c"; 	if(++sleepCount >= 50)
                                    1-  854     	BANKSEL	_sleepCount
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 05rr                      1-  855     	INCR	_sleepCount,F
     001D 0D03                      1-  856     	BTRSC	STATUS,2
     001E 05rr                      1-  857     	INCR	(_sleepCount + 1),F
                                    1-  858     ;;unsigned compare: left < lit (0x32=50), size=2
     001F 2100                      1-  859     	MOVIA	0x00
     0020 04rr                      1-  860     	SUBAR	(_sleepCount + 1),W
     0021 0903                      1-  861     	BTRSS	STATUS,2
     0022 3rrr                      1-  862     	LGOTO	_00634_DS_
     0023 2132                      1-  863     	MOVIA	0x32
     0024 04rr                      1-  864     	SUBAR	_sleepCount,W
     0025                           1-  865     _00634_DS_:
     0025 0803                      1-  866     	BTRSS	STATUS,0
     0026 3rrr                      1-  867     	LGOTO	_00626_DS_
                                    1-  868     	.line	652, "main.c"; 	resetbit(PORTB, 0);
     0027 1Crr                      1-  869     	BCR	_PORTB,0
                                    1-  870     	.line	653, "main.c"; 	resetbit(PORTB, 4);
     0028 1Err                      1-  871     	BCR	_PORTB,4
                                    1-  872     	.line	654, "main.c"; 	resetbit(PORTB, 2);
     0029 1Drr                      1-  873     	BCR	_PORTB,2
                                    1-  874     	.line	655, "main.c"; 	setInput();
     002A 2rrr                      1-  875     	LCALL	_setInput
                                    1-  876     	.line	656, "main.c"; 	realWork = 0;
                                    1-  877     	BANKSEL	_realWork
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 02rr                      1-  878     	CLRR	_realWork
                                    1-  879     	.line	657, "main.c"; 	gotoSleep();
     002D 2rrr                      1-  880     	LCALL	_gotoSleep
     002E                           1-  881     _00626_DS_:
                                    1-  882     	.line	660, "main.c"; 	}
                                    1-  883     	RETURN	
     002E 0010                      3-   26 m1      ret
                                    1-  884     ; exit point of _checkLVD
                                    1-  886     ;***
                                    1-  887     ;  pBlock Stats: dbName = C
                                    1-  888     ;***
                                    1-  889     ;has an exit
                                    1-  890     ;functions called:
                                    1-  891     ;   __divuint
                                    1-  892     ;   __divuint
                                    1-  893     ;   __divuint
                                    1-  894     ;   __divuint
                                    1-  895     ;   __divuint
                                    1-  896     ;   __divuint
                                    1-  897     ;   __divuint
                                    1-  898     ;   __divuint
                                    1-  899     ;   __divuint
                                    1-  900     ;   __divuint
                                    1-  901     ;   __divuint
                                    1-  902     ;   __divuint
                                    1-  903     ;   __divuint
                                    1-  904     ;   __divuint
                                    1-  905     ;   __divuint
                                    1-  906     ;   __divuint
                                    1-  907     ;   __divuint
                                    1-  908     ;   __divuint
                                    1-  909     ;7 compiler assigned registers:
                                    1-  910     ;   r0x1035
                                    1-  911     ;   r0x1036
                                    1-  912     ;   r0x1037
                                    1-  913     ;   r0x1038
                                    1-  914     ;   STK02
                                    1-  915     ;   STK01
                                    1-  916     ;   STK00
                                    1-  917     ;; Starting pCode block
                                    1-  918     .segment "code"; module=main, function=_translateTempAD
     0000                           1-  920     _translateTempAD:
                                    1-  921     ; 2 exit points
                                    1-  922     ;;unsigned compare: left < lit (0xFA=250), size=2
                                    1-  923     	.line	561, "main.c"; 	if(R_AIN6_DATA < 250)
     0000 2100                      1-  924     	MOVIA	0x00
                                    1-  925     	BANKSEL	_R_AIN6_DATA
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  926     	SUBAR	(_R_AIN6_DATA + 1),W
     0003 0903                      1-  927     	BTRSS	STATUS,2
     0004 3rrr                      1-  928     	LGOTO	_00606_DS_
     0005 21FA                      1-  929     	MOVIA	0xfa
     0006 04rr                      1-  930     	SUBAR	_R_AIN6_DATA,W
     0007                           1-  931     _00606_DS_:
     0007 0C03                      1-  932     	BTRSC	STATUS,0
     0008 3rrr                      1-  933     	LGOTO	_00569_DS_
                                    1-  934     	.line	563, "main.c"; 	baiweiNum = 1;
     0009 2101                      1-  935     	MOVIA	0x01
                                    1-  936     	BANKSEL	_baiweiNum
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1-  937     	MOVAR	_baiweiNum
                                    1-  938     	.line	564, "main.c"; 	shiweiNum = 0;
                                    1-  939     	BANKSEL	_shiweiNum
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1-  940     	CLRR	_shiweiNum
                                    1-  941     	.line	565, "main.c"; 	geweiNum = 0;
                                    1-  942     	BANKSEL	_geweiNum
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1-  943     	CLRR	_geweiNum
     0010 3rrr                      1-  944     	LGOTO	_00571_DS_
                                    1-  945     ;;unsigned compare: left < lit (0x14A=330), size=2
     0011                           1-  946     _00569_DS_:
                                    1-  947     	.line	567, "main.c"; 	else if(R_AIN6_DATA < 330)
     0011 2101                      1-  948     	MOVIA	0x01
                                    1-  949     	BANKSEL	_R_AIN6_DATA
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1-  950     	SUBAR	(_R_AIN6_DATA + 1),W
     0014 0903                      1-  951     	BTRSS	STATUS,2
     0015 3rrr                      1-  952     	LGOTO	_00607_DS_
     0016 214A                      1-  953     	MOVIA	0x4a
     0017 04rr                      1-  954     	SUBAR	_R_AIN6_DATA,W
     0018                           1-  955     _00607_DS_:
     0018 0C03                      1-  956     	BTRSC	STATUS,0
     0019 3rrr                      1-  957     	LGOTO	_00566_DS_
                                    1-  958     	.line	569, "main.c"; 	baiweiNum = 0;
                                    1-  959     	BANKSEL	_baiweiNum
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 02rr                      1-  960     	CLRR	_baiweiNum
                                    1-  961     	.line	570, "main.c"; 	shiweiNum = 9;
     001C 2109                      1-  962     	MOVIA	0x09
                                    1-  963     	BANKSEL	_shiweiNum
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  964     	MOVAR	_shiweiNum
                                    1-  965     	.line	571, "main.c"; 	geweiNum = (330-R_AIN6_DATA)/8;
                                    1-  966     	BANKSEL	_R_AIN6_DATA
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  967     	MOVR	_R_AIN6_DATA,W
     0021 274A                      1-  968     	SUBIA	0x4a
                                    1-  969     	BANKSEL	r0x1035
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 00rr                      1-  970     	MOVAR	r0x1035
                                    1-  971     	BANKSEL	_R_AIN6_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  972     	MOVR	(_R_AIN6_DATA + 1),W
     0026 0803                      1-  973     	BTRSS	STATUS,0
     0027 05rr                      1-  974     	INCR	(_R_AIN6_DATA + 1),W
     0028 2701                      1-  975     	SUBIA	0x01
                                    1-  976     	BANKSEL	r0x1036
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 00rr                      1-  977     	MOVAR	r0x1036
                                    1-  978     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=0, offr=0
     002B 1C03                      1-  979     	BCR	STATUS,0
     002C 13rr                      1-  980     	RRR	r0x1036,W
                                    1-  981     	BANKSEL	r0x1037
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1-  982     	MOVAR	r0x1037
                                    1-  983     	BANKSEL	r0x1035
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 13rr                      1-  984     	RRR	r0x1035,W
                                    1-  985     	BANKSEL	r0x1038
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 00rr                      1-  986     	MOVAR	r0x1038
                                    1-  987     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0033 1C03                      1-  988     	BCR	STATUS,0
                                    1-  989     	BANKSEL	r0x1037
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 13rr                      1-  990     	RRR	r0x1037,F
                                    1-  991     	BANKSEL	r0x1038
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 13rr                      1-  992     	RRR	r0x1038,F
                                    1-  993     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0038 1C03                      1-  994     	BCR	STATUS,0
                                    1-  995     	BANKSEL	r0x1037
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 13rr                      1-  996     	RRR	r0x1037,F
                                    1-  997     	BANKSEL	r0x1038
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 13rr                      1-  998     	RRR	r0x1038,F
     003D 01rr                      1-  999     	MOVR	r0x1038,W
                                    1- 1000     	BANKSEL	_geweiNum
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 00rr                      1- 1001     	MOVAR	_geweiNum
     0040 3rrr                      1- 1002     	LGOTO	_00571_DS_
                                    1- 1003     ;;unsigned compare: left < lit (0x1C2=450), size=2
     0041                           1- 1004     _00566_DS_:
                                    1- 1005     	.line	573, "main.c"; 	else if(R_AIN6_DATA < 450)
     0041 2101                      1- 1006     	MOVIA	0x01
                                    1- 1007     	BANKSEL	_R_AIN6_DATA
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 04rr                      1- 1008     	SUBAR	(_R_AIN6_DATA + 1),W
     0044 0903                      1- 1009     	BTRSS	STATUS,2
     0045 3rrr                      1- 1010     	LGOTO	_00608_DS_
     0046 21C2                      1- 1011     	MOVIA	0xc2
     0047 04rr                      1- 1012     	SUBAR	_R_AIN6_DATA,W
     0048                           1- 1013     _00608_DS_:
     0048 0C03                      1- 1014     	BTRSC	STATUS,0
     0049 3rrr                      1- 1015     	LGOTO	_00563_DS_
                                    1- 1016     	.line	575, "main.c"; 	baiweiNum = 0;
                                    1- 1017     	BANKSEL	_baiweiNum
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 02rr                      1- 1018     	CLRR	_baiweiNum
                                    1- 1019     	.line	576, "main.c"; 	shiweiNum = 8;
     004C 2108                      1- 1020     	MOVIA	0x08
                                    1- 1021     	BANKSEL	_shiweiNum
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1- 1022     	MOVAR	_shiweiNum
                                    1- 1023     	.line	577, "main.c"; 	geweiNum = (450-R_AIN6_DATA)/12;
                                    1- 1024     	BANKSEL	_R_AIN6_DATA
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 1025     	MOVR	_R_AIN6_DATA,W
     0051 27C2                      1- 1026     	SUBIA	0xc2
                                    1- 1027     	BANKSEL	r0x1035
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 00rr                      1- 1028     	MOVAR	r0x1035
                                    1- 1029     	BANKSEL	_R_AIN6_DATA
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 01rr                      1- 1030     	MOVR	(_R_AIN6_DATA + 1),W
     0056 0803                      1- 1031     	BTRSS	STATUS,0
     0057 05rr                      1- 1032     	INCR	(_R_AIN6_DATA + 1),W
     0058 2701                      1- 1033     	SUBIA	0x01
                                    1- 1034     	BANKSEL	r0x1036
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 00rr                      1- 1035     	MOVAR	r0x1036
     005B 210C                      1- 1036     	MOVIA	0x0c
     005C 00rr                      1- 1037     	MOVAR	STK02
     005D 2100                      1- 1038     	MOVIA	0x00
     005E 00rr                      1- 1039     	MOVAR	STK01
                                    1- 1040     	BANKSEL	r0x1035
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 01rr                      1- 1041     	MOVR	r0x1035,W
     0061 00rr                      1- 1042     	MOVAR	STK00
                                    1- 1043     	BANKSEL	r0x1036
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 01rr                      1- 1044     	MOVR	r0x1036,W
     0064 2rrr                      1- 1045     	LCALL	__divuint
                                    1- 1046     	BANKSEL	r0x1036
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 00rr                      1- 1047     	MOVAR	r0x1036
     0067 01rr                      1- 1048     	MOVR	STK00,W
                                    1- 1049     	BANKSEL	r0x1035
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 00rr                      1- 1050     	MOVAR	r0x1035
                                    1- 1051     	BANKSEL	_geweiNum
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 00rr                      1- 1052     	MOVAR	_geweiNum
     006C 3rrr                      1- 1053     	LGOTO	_00571_DS_
                                    1- 1054     ;;unsigned compare: left < lit (0x258=600), size=2
     006D                           1- 1055     _00563_DS_:
                                    1- 1056     	.line	579, "main.c"; 	else if(R_AIN6_DATA < 600)
     006D 2102                      1- 1057     	MOVIA	0x02
                                    1- 1058     	BANKSEL	_R_AIN6_DATA
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 04rr                      1- 1059     	SUBAR	(_R_AIN6_DATA + 1),W
     0070 0903                      1- 1060     	BTRSS	STATUS,2
     0071 3rrr                      1- 1061     	LGOTO	_00609_DS_
     0072 2158                      1- 1062     	MOVIA	0x58
     0073 04rr                      1- 1063     	SUBAR	_R_AIN6_DATA,W
     0074                           1- 1064     _00609_DS_:
     0074 0C03                      1- 1065     	BTRSC	STATUS,0
     0075 3rrr                      1- 1066     	LGOTO	_00560_DS_
                                    1- 1067     	.line	581, "main.c"; 	baiweiNum = 0;
                                    1- 1068     	BANKSEL	_baiweiNum
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 02rr                      1- 1069     	CLRR	_baiweiNum
                                    1- 1070     	.line	582, "main.c"; 	shiweiNum = 7;
     0078 2107                      1- 1071     	MOVIA	0x07
                                    1- 1072     	BANKSEL	_shiweiNum
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 00rr                      1- 1073     	MOVAR	_shiweiNum
                                    1- 1074     	.line	583, "main.c"; 	geweiNum = (600-R_AIN6_DATA)/15;
                                    1- 1075     	BANKSEL	_R_AIN6_DATA
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 01rr                      1- 1076     	MOVR	_R_AIN6_DATA,W
     007D 2758                      1- 1077     	SUBIA	0x58
                                    1- 1078     	BANKSEL	r0x1035
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 00rr                      1- 1079     	MOVAR	r0x1035
                                    1- 1080     	BANKSEL	_R_AIN6_DATA
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1- 1081     	MOVR	(_R_AIN6_DATA + 1),W
     0082 0803                      1- 1082     	BTRSS	STATUS,0
     0083 05rr                      1- 1083     	INCR	(_R_AIN6_DATA + 1),W
     0084 2702                      1- 1084     	SUBIA	0x02
                                    1- 1085     	BANKSEL	r0x1036
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 00rr                      1- 1086     	MOVAR	r0x1036
     0087 210F                      1- 1087     	MOVIA	0x0f
     0088 00rr                      1- 1088     	MOVAR	STK02
     0089 2100                      1- 1089     	MOVIA	0x00
     008A 00rr                      1- 1090     	MOVAR	STK01
                                    1- 1091     	BANKSEL	r0x1035
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 01rr                      1- 1092     	MOVR	r0x1035,W
     008D 00rr                      1- 1093     	MOVAR	STK00
                                    1- 1094     	BANKSEL	r0x1036
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 01rr                      1- 1095     	MOVR	r0x1036,W
     0090 2rrr                      1- 1096     	LCALL	__divuint
                                    1- 1097     	BANKSEL	r0x1036
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 00rr                      1- 1098     	MOVAR	r0x1036
     0093 01rr                      1- 1099     	MOVR	STK00,W
                                    1- 1100     	BANKSEL	r0x1035
     0094 rrrr                      3-   71 m1      .banksel ram_address
     0095 00rr                      1- 1101     	MOVAR	r0x1035
                                    1- 1102     	BANKSEL	_geweiNum
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 00rr                      1- 1103     	MOVAR	_geweiNum
     0098 3rrr                      1- 1104     	LGOTO	_00571_DS_
                                    1- 1105     ;;unsigned compare: left < lit (0x320=800), size=2
     0099                           1- 1106     _00560_DS_:
                                    1- 1107     	.line	585, "main.c"; 	else if(R_AIN6_DATA < 800)
     0099 2103                      1- 1108     	MOVIA	0x03
                                    1- 1109     	BANKSEL	_R_AIN6_DATA
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 04rr                      1- 1110     	SUBAR	(_R_AIN6_DATA + 1),W
     009C 0903                      1- 1111     	BTRSS	STATUS,2
     009D 3rrr                      1- 1112     	LGOTO	_00610_DS_
     009E 2120                      1- 1113     	MOVIA	0x20
     009F 04rr                      1- 1114     	SUBAR	_R_AIN6_DATA,W
     00A0                           1- 1115     _00610_DS_:
     00A0 0C03                      1- 1116     	BTRSC	STATUS,0
     00A1 3rrr                      1- 1117     	LGOTO	_00557_DS_
                                    1- 1118     	.line	587, "main.c"; 	baiweiNum = 0;
                                    1- 1119     	BANKSEL	_baiweiNum
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 02rr                      1- 1120     	CLRR	_baiweiNum
                                    1- 1121     	.line	588, "main.c"; 	shiweiNum = 6;
     00A4 2106                      1- 1122     	MOVIA	0x06
                                    1- 1123     	BANKSEL	_shiweiNum
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 00rr                      1- 1124     	MOVAR	_shiweiNum
                                    1- 1125     	.line	589, "main.c"; 	geweiNum = (800-R_AIN6_DATA)/20;
                                    1- 1126     	BANKSEL	_R_AIN6_DATA
     00A7 rrrr                      3-   71 m1      .banksel ram_address
     00A8 01rr                      1- 1127     	MOVR	_R_AIN6_DATA,W
     00A9 2720                      1- 1128     	SUBIA	0x20
                                    1- 1129     	BANKSEL	r0x1035
     00AA rrrr                      3-   71 m1      .banksel ram_address
     00AB 00rr                      1- 1130     	MOVAR	r0x1035
                                    1- 1131     	BANKSEL	_R_AIN6_DATA
     00AC rrrr                      3-   71 m1      .banksel ram_address
     00AD 01rr                      1- 1132     	MOVR	(_R_AIN6_DATA + 1),W
     00AE 0803                      1- 1133     	BTRSS	STATUS,0
     00AF 05rr                      1- 1134     	INCR	(_R_AIN6_DATA + 1),W
     00B0 2703                      1- 1135     	SUBIA	0x03
                                    1- 1136     	BANKSEL	r0x1036
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 00rr                      1- 1137     	MOVAR	r0x1036
     00B3 2114                      1- 1138     	MOVIA	0x14
     00B4 00rr                      1- 1139     	MOVAR	STK02
     00B5 2100                      1- 1140     	MOVIA	0x00
     00B6 00rr                      1- 1141     	MOVAR	STK01
                                    1- 1142     	BANKSEL	r0x1035
     00B7 rrrr                      3-   71 m1      .banksel ram_address
     00B8 01rr                      1- 1143     	MOVR	r0x1035,W
     00B9 00rr                      1- 1144     	MOVAR	STK00
                                    1- 1145     	BANKSEL	r0x1036
     00BA rrrr                      3-   71 m1      .banksel ram_address
     00BB 01rr                      1- 1146     	MOVR	r0x1036,W
     00BC 2rrr                      1- 1147     	LCALL	__divuint
                                    1- 1148     	BANKSEL	r0x1036
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 00rr                      1- 1149     	MOVAR	r0x1036
     00BF 01rr                      1- 1150     	MOVR	STK00,W
                                    1- 1151     	BANKSEL	r0x1035
     00C0 rrrr                      3-   71 m1      .banksel ram_address
     00C1 00rr                      1- 1152     	MOVAR	r0x1035
                                    1- 1153     	BANKSEL	_geweiNum
     00C2 rrrr                      3-   71 m1      .banksel ram_address
     00C3 00rr                      1- 1154     	MOVAR	_geweiNum
     00C4 3rrr                      1- 1155     	LGOTO	_00571_DS_
                                    1- 1156     ;;unsigned compare: left < lit (0x42E=1070), size=2
     00C5                           1- 1157     _00557_DS_:
                                    1- 1158     	.line	591, "main.c"; 	else if(R_AIN6_DATA < 1070)
     00C5 2104                      1- 1159     	MOVIA	0x04
                                    1- 1160     	BANKSEL	_R_AIN6_DATA
     00C6 rrrr                      3-   71 m1      .banksel ram_address
     00C7 04rr                      1- 1161     	SUBAR	(_R_AIN6_DATA + 1),W
     00C8 0903                      1- 1162     	BTRSS	STATUS,2
     00C9 3rrr                      1- 1163     	LGOTO	_00611_DS_
     00CA 212E                      1- 1164     	MOVIA	0x2e
     00CB 04rr                      1- 1165     	SUBAR	_R_AIN6_DATA,W
     00CC                           1- 1166     _00611_DS_:
     00CC 0C03                      1- 1167     	BTRSC	STATUS,0
     00CD 3rrr                      1- 1168     	LGOTO	_00554_DS_
                                    1- 1169     	.line	593, "main.c"; 	baiweiNum = 0;
                                    1- 1170     	BANKSEL	_baiweiNum
     00CE rrrr                      3-   71 m1      .banksel ram_address
     00CF 02rr                      1- 1171     	CLRR	_baiweiNum
                                    1- 1172     	.line	594, "main.c"; 	shiweiNum = 5;
     00D0 2105                      1- 1173     	MOVIA	0x05
                                    1- 1174     	BANKSEL	_shiweiNum
     00D1 rrrr                      3-   71 m1      .banksel ram_address
     00D2 00rr                      1- 1175     	MOVAR	_shiweiNum
                                    1- 1176     	.line	595, "main.c"; 	geweiNum = (1070-R_AIN6_DATA)/27;
                                    1- 1177     	BANKSEL	_R_AIN6_DATA
     00D3 rrrr                      3-   71 m1      .banksel ram_address
     00D4 01rr                      1- 1178     	MOVR	_R_AIN6_DATA,W
     00D5 272E                      1- 1179     	SUBIA	0x2e
                                    1- 1180     	BANKSEL	r0x1035
     00D6 rrrr                      3-   71 m1      .banksel ram_address
     00D7 00rr                      1- 1181     	MOVAR	r0x1035
                                    1- 1182     	BANKSEL	_R_AIN6_DATA
     00D8 rrrr                      3-   71 m1      .banksel ram_address
     00D9 01rr                      1- 1183     	MOVR	(_R_AIN6_DATA + 1),W
     00DA 0803                      1- 1184     	BTRSS	STATUS,0
     00DB 05rr                      1- 1185     	INCR	(_R_AIN6_DATA + 1),W
     00DC 2704                      1- 1186     	SUBIA	0x04
                                    1- 1187     	BANKSEL	r0x1036
     00DD rrrr                      3-   71 m1      .banksel ram_address
     00DE 00rr                      1- 1188     	MOVAR	r0x1036
     00DF 211B                      1- 1189     	MOVIA	0x1b
     00E0 00rr                      1- 1190     	MOVAR	STK02
     00E1 2100                      1- 1191     	MOVIA	0x00
     00E2 00rr                      1- 1192     	MOVAR	STK01
                                    1- 1193     	BANKSEL	r0x1035
     00E3 rrrr                      3-   71 m1      .banksel ram_address
     00E4 01rr                      1- 1194     	MOVR	r0x1035,W
     00E5 00rr                      1- 1195     	MOVAR	STK00
                                    1- 1196     	BANKSEL	r0x1036
     00E6 rrrr                      3-   71 m1      .banksel ram_address
     00E7 01rr                      1- 1197     	MOVR	r0x1036,W
     00E8 2rrr                      1- 1198     	LCALL	__divuint
                                    1- 1199     	BANKSEL	r0x1036
     00E9 rrrr                      3-   71 m1      .banksel ram_address
     00EA 00rr                      1- 1200     	MOVAR	r0x1036
     00EB 01rr                      1- 1201     	MOVR	STK00,W
                                    1- 1202     	BANKSEL	r0x1035
     00EC rrrr                      3-   71 m1      .banksel ram_address
     00ED 00rr                      1- 1203     	MOVAR	r0x1035
                                    1- 1204     	BANKSEL	_geweiNum
     00EE rrrr                      3-   71 m1      .banksel ram_address
     00EF 00rr                      1- 1205     	MOVAR	_geweiNum
     00F0 3rrr                      1- 1206     	LGOTO	_00571_DS_
                                    1- 1207     ;;unsigned compare: left < lit (0x58C=1420), size=2
     00F1                           1- 1208     _00554_DS_:
                                    1- 1209     	.line	597, "main.c"; 	else if(R_AIN6_DATA < 1420)
     00F1 2105                      1- 1210     	MOVIA	0x05
                                    1- 1211     	BANKSEL	_R_AIN6_DATA
     00F2 rrrr                      3-   71 m1      .banksel ram_address
     00F3 04rr                      1- 1212     	SUBAR	(_R_AIN6_DATA + 1),W
     00F4 0903                      1- 1213     	BTRSS	STATUS,2
     00F5 3rrr                      1- 1214     	LGOTO	_00612_DS_
     00F6 218C                      1- 1215     	MOVIA	0x8c
     00F7 04rr                      1- 1216     	SUBAR	_R_AIN6_DATA,W
     00F8                           1- 1217     _00612_DS_:
     00F8 0C03                      1- 1218     	BTRSC	STATUS,0
     00F9 3rrr                      1- 1219     	LGOTO	_00551_DS_
                                    1- 1220     	.line	599, "main.c"; 	baiweiNum = 0;
                                    1- 1221     	BANKSEL	_baiweiNum
     00FA rrrr                      3-   71 m1      .banksel ram_address
     00FB 02rr                      1- 1222     	CLRR	_baiweiNum
                                    1- 1223     	.line	600, "main.c"; 	shiweiNum = 4;
     00FC 2104                      1- 1224     	MOVIA	0x04
                                    1- 1225     	BANKSEL	_shiweiNum
     00FD rrrr                      3-   71 m1      .banksel ram_address
     00FE 00rr                      1- 1226     	MOVAR	_shiweiNum
                                    1- 1227     	.line	601, "main.c"; 	geweiNum = (1420-R_AIN6_DATA)/35;
                                    1- 1228     	BANKSEL	_R_AIN6_DATA
     00FF rrrr                      3-   71 m1      .banksel ram_address
     0100 01rr                      1- 1229     	MOVR	_R_AIN6_DATA,W
     0101 278C                      1- 1230     	SUBIA	0x8c
                                    1- 1231     	BANKSEL	r0x1035
     0102 rrrr                      3-   71 m1      .banksel ram_address
     0103 00rr                      1- 1232     	MOVAR	r0x1035
                                    1- 1233     	BANKSEL	_R_AIN6_DATA
     0104 rrrr                      3-   71 m1      .banksel ram_address
     0105 01rr                      1- 1234     	MOVR	(_R_AIN6_DATA + 1),W
     0106 0803                      1- 1235     	BTRSS	STATUS,0
     0107 05rr                      1- 1236     	INCR	(_R_AIN6_DATA + 1),W
     0108 2705                      1- 1237     	SUBIA	0x05
                                    1- 1238     	BANKSEL	r0x1036
     0109 rrrr                      3-   71 m1      .banksel ram_address
     010A 00rr                      1- 1239     	MOVAR	r0x1036
     010B 2123                      1- 1240     	MOVIA	0x23
     010C 00rr                      1- 1241     	MOVAR	STK02
     010D 2100                      1- 1242     	MOVIA	0x00
     010E 00rr                      1- 1243     	MOVAR	STK01
                                    1- 1244     	BANKSEL	r0x1035
     010F rrrr                      3-   71 m1      .banksel ram_address
     0110 01rr                      1- 1245     	MOVR	r0x1035,W
     0111 00rr                      1- 1246     	MOVAR	STK00
                                    1- 1247     	BANKSEL	r0x1036
     0112 rrrr                      3-   71 m1      .banksel ram_address
     0113 01rr                      1- 1248     	MOVR	r0x1036,W
     0114 2rrr                      1- 1249     	LCALL	__divuint
                                    1- 1250     	BANKSEL	r0x1036
     0115 rrrr                      3-   71 m1      .banksel ram_address
     0116 00rr                      1- 1251     	MOVAR	r0x1036
     0117 01rr                      1- 1252     	MOVR	STK00,W
                                    1- 1253     	BANKSEL	r0x1035
     0118 rrrr                      3-   71 m1      .banksel ram_address
     0119 00rr                      1- 1254     	MOVAR	r0x1035
                                    1- 1255     	BANKSEL	_geweiNum
     011A rrrr                      3-   71 m1      .banksel ram_address
     011B 00rr                      1- 1256     	MOVAR	_geweiNum
     011C 3rrr                      1- 1257     	LGOTO	_00571_DS_
                                    1- 1258     ;;unsigned compare: left < lit (0x730=1840), size=2
     011D                           1- 1259     _00551_DS_:
                                    1- 1260     	.line	603, "main.c"; 	else if(R_AIN6_DATA < 1840)
     011D 2107                      1- 1261     	MOVIA	0x07
                                    1- 1262     	BANKSEL	_R_AIN6_DATA
     011E rrrr                      3-   71 m1      .banksel ram_address
     011F 04rr                      1- 1263     	SUBAR	(_R_AIN6_DATA + 1),W
     0120 0903                      1- 1264     	BTRSS	STATUS,2
     0121 3rrr                      1- 1265     	LGOTO	_00613_DS_
     0122 2130                      1- 1266     	MOVIA	0x30
     0123 04rr                      1- 1267     	SUBAR	_R_AIN6_DATA,W
     0124                           1- 1268     _00613_DS_:
     0124 0C03                      1- 1269     	BTRSC	STATUS,0
     0125 3rrr                      1- 1270     	LGOTO	_00548_DS_
                                    1- 1271     	.line	605, "main.c"; 	baiweiNum = 0;
                                    1- 1272     	BANKSEL	_baiweiNum
     0126 rrrr                      3-   71 m1      .banksel ram_address
     0127 02rr                      1- 1273     	CLRR	_baiweiNum
                                    1- 1274     	.line	606, "main.c"; 	shiweiNum = 3;
     0128 2103                      1- 1275     	MOVIA	0x03
                                    1- 1276     	BANKSEL	_shiweiNum
     0129 rrrr                      3-   71 m1      .banksel ram_address
     012A 00rr                      1- 1277     	MOVAR	_shiweiNum
                                    1- 1278     	.line	607, "main.c"; 	geweiNum = (1840-R_AIN6_DATA)/42;
                                    1- 1279     	BANKSEL	_R_AIN6_DATA
     012B rrrr                      3-   71 m1      .banksel ram_address
     012C 01rr                      1- 1280     	MOVR	_R_AIN6_DATA,W
     012D 2730                      1- 1281     	SUBIA	0x30
                                    1- 1282     	BANKSEL	r0x1035
     012E rrrr                      3-   71 m1      .banksel ram_address
     012F 00rr                      1- 1283     	MOVAR	r0x1035
                                    1- 1284     	BANKSEL	_R_AIN6_DATA
     0130 rrrr                      3-   71 m1      .banksel ram_address
     0131 01rr                      1- 1285     	MOVR	(_R_AIN6_DATA + 1),W
     0132 0803                      1- 1286     	BTRSS	STATUS,0
     0133 05rr                      1- 1287     	INCR	(_R_AIN6_DATA + 1),W
     0134 2707                      1- 1288     	SUBIA	0x07
                                    1- 1289     	BANKSEL	r0x1036
     0135 rrrr                      3-   71 m1      .banksel ram_address
     0136 00rr                      1- 1290     	MOVAR	r0x1036
     0137 212A                      1- 1291     	MOVIA	0x2a
     0138 00rr                      1- 1292     	MOVAR	STK02
     0139 2100                      1- 1293     	MOVIA	0x00
     013A 00rr                      1- 1294     	MOVAR	STK01
                                    1- 1295     	BANKSEL	r0x1035
     013B rrrr                      3-   71 m1      .banksel ram_address
     013C 01rr                      1- 1296     	MOVR	r0x1035,W
     013D 00rr                      1- 1297     	MOVAR	STK00
                                    1- 1298     	BANKSEL	r0x1036
     013E rrrr                      3-   71 m1      .banksel ram_address
     013F 01rr                      1- 1299     	MOVR	r0x1036,W
     0140 2rrr                      1- 1300     	LCALL	__divuint
                                    1- 1301     	BANKSEL	r0x1036
     0141 rrrr                      3-   71 m1      .banksel ram_address
     0142 00rr                      1- 1302     	MOVAR	r0x1036
     0143 01rr                      1- 1303     	MOVR	STK00,W
                                    1- 1304     	BANKSEL	r0x1035
     0144 rrrr                      3-   71 m1      .banksel ram_address
     0145 00rr                      1- 1305     	MOVAR	r0x1035
                                    1- 1306     	BANKSEL	_geweiNum
     0146 rrrr                      3-   71 m1      .banksel ram_address
     0147 00rr                      1- 1307     	MOVAR	_geweiNum
     0148 3rrr                      1- 1308     	LGOTO	_00571_DS_
                                    1- 1309     ;;unsigned compare: left < lit (0x8FC=2300), size=2
     0149                           1- 1310     _00548_DS_:
                                    1- 1311     	.line	609, "main.c"; 	else if(R_AIN6_DATA < 2300)
     0149 2108                      1- 1312     	MOVIA	0x08
                                    1- 1313     	BANKSEL	_R_AIN6_DATA
     014A rrrr                      3-   71 m1      .banksel ram_address
     014B 04rr                      1- 1314     	SUBAR	(_R_AIN6_DATA + 1),W
     014C 0903                      1- 1315     	BTRSS	STATUS,2
     014D 3rrr                      1- 1316     	LGOTO	_00614_DS_
     014E 21FC                      1- 1317     	MOVIA	0xfc
     014F 04rr                      1- 1318     	SUBAR	_R_AIN6_DATA,W
     0150                           1- 1319     _00614_DS_:
     0150 0C03                      1- 1320     	BTRSC	STATUS,0
     0151 3rrr                      1- 1321     	LGOTO	_00545_DS_
                                    1- 1322     	.line	611, "main.c"; 	baiweiNum = 0;
                                    1- 1323     	BANKSEL	_baiweiNum
     0152 rrrr                      3-   71 m1      .banksel ram_address
     0153 02rr                      1- 1324     	CLRR	_baiweiNum
                                    1- 1325     	.line	612, "main.c"; 	shiweiNum = 2;
     0154 2102                      1- 1326     	MOVIA	0x02
                                    1- 1327     	BANKSEL	_shiweiNum
     0155 rrrr                      3-   71 m1      .banksel ram_address
     0156 00rr                      1- 1328     	MOVAR	_shiweiNum
                                    1- 1329     	.line	613, "main.c"; 	geweiNum = (2300-R_AIN6_DATA)/46;
                                    1- 1330     	BANKSEL	_R_AIN6_DATA
     0157 rrrr                      3-   71 m1      .banksel ram_address
     0158 01rr                      1- 1331     	MOVR	_R_AIN6_DATA,W
     0159 27FC                      1- 1332     	SUBIA	0xfc
                                    1- 1333     	BANKSEL	r0x1035
     015A rrrr                      3-   71 m1      .banksel ram_address
     015B 00rr                      1- 1334     	MOVAR	r0x1035
                                    1- 1335     	BANKSEL	_R_AIN6_DATA
     015C rrrr                      3-   71 m1      .banksel ram_address
     015D 01rr                      1- 1336     	MOVR	(_R_AIN6_DATA + 1),W
     015E 0803                      1- 1337     	BTRSS	STATUS,0
     015F 05rr                      1- 1338     	INCR	(_R_AIN6_DATA + 1),W
     0160 2708                      1- 1339     	SUBIA	0x08
                                    1- 1340     	BANKSEL	r0x1036
     0161 rrrr                      3-   71 m1      .banksel ram_address
     0162 00rr                      1- 1341     	MOVAR	r0x1036
     0163 212E                      1- 1342     	MOVIA	0x2e
     0164 00rr                      1- 1343     	MOVAR	STK02
     0165 2100                      1- 1344     	MOVIA	0x00
     0166 00rr                      1- 1345     	MOVAR	STK01
                                    1- 1346     	BANKSEL	r0x1035
     0167 rrrr                      3-   71 m1      .banksel ram_address
     0168 01rr                      1- 1347     	MOVR	r0x1035,W
     0169 00rr                      1- 1348     	MOVAR	STK00
                                    1- 1349     	BANKSEL	r0x1036
     016A rrrr                      3-   71 m1      .banksel ram_address
     016B 01rr                      1- 1350     	MOVR	r0x1036,W
     016C 2rrr                      1- 1351     	LCALL	__divuint
                                    1- 1352     	BANKSEL	r0x1036
     016D rrrr                      3-   71 m1      .banksel ram_address
     016E 00rr                      1- 1353     	MOVAR	r0x1036
     016F 01rr                      1- 1354     	MOVR	STK00,W
                                    1- 1355     	BANKSEL	r0x1035
     0170 rrrr                      3-   71 m1      .banksel ram_address
     0171 00rr                      1- 1356     	MOVAR	r0x1035
                                    1- 1357     	BANKSEL	_geweiNum
     0172 rrrr                      3-   71 m1      .banksel ram_address
     0173 00rr                      1- 1358     	MOVAR	_geweiNum
     0174 3rrr                      1- 1359     	LGOTO	_00571_DS_
                                    1- 1360     ;;unsigned compare: left < lit (0xAD2=2770), size=2
     0175                           1- 1361     _00545_DS_:
                                    1- 1362     	.line	615, "main.c"; 	else if(R_AIN6_DATA < 2770)
     0175 210A                      1- 1363     	MOVIA	0x0a
                                    1- 1364     	BANKSEL	_R_AIN6_DATA
     0176 rrrr                      3-   71 m1      .banksel ram_address
     0177 04rr                      1- 1365     	SUBAR	(_R_AIN6_DATA + 1),W
     0178 0903                      1- 1366     	BTRSS	STATUS,2
     0179 3rrr                      1- 1367     	LGOTO	_00615_DS_
     017A 21D2                      1- 1368     	MOVIA	0xd2
     017B 04rr                      1- 1369     	SUBAR	_R_AIN6_DATA,W
     017C                           1- 1370     _00615_DS_:
     017C 0C03                      1- 1371     	BTRSC	STATUS,0
     017D 3rrr                      1- 1372     	LGOTO	_00542_DS_
                                    1- 1373     	.line	617, "main.c"; 	baiweiNum = 0;
                                    1- 1374     	BANKSEL	_baiweiNum
     017E rrrr                      3-   71 m1      .banksel ram_address
     017F 02rr                      1- 1375     	CLRR	_baiweiNum
                                    1- 1376     	.line	618, "main.c"; 	shiweiNum = 1;
     0180 2101                      1- 1377     	MOVIA	0x01
                                    1- 1378     	BANKSEL	_shiweiNum
     0181 rrrr                      3-   71 m1      .banksel ram_address
     0182 00rr                      1- 1379     	MOVAR	_shiweiNum
                                    1- 1380     	.line	619, "main.c"; 	geweiNum = (2770-R_AIN6_DATA)/47;
                                    1- 1381     	BANKSEL	_R_AIN6_DATA
     0183 rrrr                      3-   71 m1      .banksel ram_address
     0184 01rr                      1- 1382     	MOVR	_R_AIN6_DATA,W
     0185 27D2                      1- 1383     	SUBIA	0xd2
                                    1- 1384     	BANKSEL	r0x1035
     0186 rrrr                      3-   71 m1      .banksel ram_address
     0187 00rr                      1- 1385     	MOVAR	r0x1035
                                    1- 1386     	BANKSEL	_R_AIN6_DATA
     0188 rrrr                      3-   71 m1      .banksel ram_address
     0189 01rr                      1- 1387     	MOVR	(_R_AIN6_DATA + 1),W
     018A 0803                      1- 1388     	BTRSS	STATUS,0
     018B 05rr                      1- 1389     	INCR	(_R_AIN6_DATA + 1),W
     018C 270A                      1- 1390     	SUBIA	0x0a
                                    1- 1391     	BANKSEL	r0x1036
     018D rrrr                      3-   71 m1      .banksel ram_address
     018E 00rr                      1- 1392     	MOVAR	r0x1036
     018F 212F                      1- 1393     	MOVIA	0x2f
     0190 00rr                      1- 1394     	MOVAR	STK02
     0191 2100                      1- 1395     	MOVIA	0x00
     0192 00rr                      1- 1396     	MOVAR	STK01
                                    1- 1397     	BANKSEL	r0x1035
     0193 rrrr                      3-   71 m1      .banksel ram_address
     0194 01rr                      1- 1398     	MOVR	r0x1035,W
     0195 00rr                      1- 1399     	MOVAR	STK00
                                    1- 1400     	BANKSEL	r0x1036
     0196 rrrr                      3-   71 m1      .banksel ram_address
     0197 01rr                      1- 1401     	MOVR	r0x1036,W
     0198 2rrr                      1- 1402     	LCALL	__divuint
                                    1- 1403     	BANKSEL	r0x1036
     0199 rrrr                      3-   71 m1      .banksel ram_address
     019A 00rr                      1- 1404     	MOVAR	r0x1036
     019B 01rr                      1- 1405     	MOVR	STK00,W
                                    1- 1406     	BANKSEL	r0x1035
     019C rrrr                      3-   71 m1      .banksel ram_address
     019D 00rr                      1- 1407     	MOVAR	r0x1035
                                    1- 1408     	BANKSEL	_geweiNum
     019E rrrr                      3-   71 m1      .banksel ram_address
     019F 00rr                      1- 1409     	MOVAR	_geweiNum
     01A0 3rrr                      1- 1410     	LGOTO	_00571_DS_
                                    1- 1411     ;;unsigned compare: left < lit (0xC76=3190), size=2
     01A1                           1- 1412     _00542_DS_:
                                    1- 1413     	.line	621, "main.c"; 	else if(R_AIN6_DATA < 3190)
     01A1 210C                      1- 1414     	MOVIA	0x0c
                                    1- 1415     	BANKSEL	_R_AIN6_DATA
     01A2 rrrr                      3-   71 m1      .banksel ram_address
     01A3 04rr                      1- 1416     	SUBAR	(_R_AIN6_DATA + 1),W
     01A4 0903                      1- 1417     	BTRSS	STATUS,2
     01A5 3rrr                      1- 1418     	LGOTO	_00616_DS_
     01A6 2176                      1- 1419     	MOVIA	0x76
     01A7 04rr                      1- 1420     	SUBAR	_R_AIN6_DATA,W
     01A8                           1- 1421     _00616_DS_:
     01A8 0C03                      1- 1422     	BTRSC	STATUS,0
     01A9 3rrr                      1- 1423     	LGOTO	_00539_DS_
                                    1- 1424     	.line	623, "main.c"; 	baiweiNum = 0;
                                    1- 1425     	BANKSEL	_baiweiNum
     01AA rrrr                      3-   71 m1      .banksel ram_address
     01AB 02rr                      1- 1426     	CLRR	_baiweiNum
                                    1- 1427     	.line	624, "main.c"; 	shiweiNum = 0;
                                    1- 1428     	BANKSEL	_shiweiNum
     01AC rrrr                      3-   71 m1      .banksel ram_address
     01AD 02rr                      1- 1429     	CLRR	_shiweiNum
                                    1- 1430     	.line	625, "main.c"; 	geweiNum = (3190-R_AIN6_DATA)/42;
                                    1- 1431     	BANKSEL	_R_AIN6_DATA
     01AE rrrr                      3-   71 m1      .banksel ram_address
     01AF 01rr                      1- 1432     	MOVR	_R_AIN6_DATA,W
     01B0 2776                      1- 1433     	SUBIA	0x76
                                    1- 1434     	BANKSEL	r0x1035
     01B1 rrrr                      3-   71 m1      .banksel ram_address
     01B2 00rr                      1- 1435     	MOVAR	r0x1035
                                    1- 1436     	BANKSEL	_R_AIN6_DATA
     01B3 rrrr                      3-   71 m1      .banksel ram_address
     01B4 01rr                      1- 1437     	MOVR	(_R_AIN6_DATA + 1),W
     01B5 0803                      1- 1438     	BTRSS	STATUS,0
     01B6 05rr                      1- 1439     	INCR	(_R_AIN6_DATA + 1),W
     01B7 270C                      1- 1440     	SUBIA	0x0c
                                    1- 1441     	BANKSEL	r0x1036
     01B8 rrrr                      3-   71 m1      .banksel ram_address
     01B9 00rr                      1- 1442     	MOVAR	r0x1036
     01BA 212A                      1- 1443     	MOVIA	0x2a
     01BB 00rr                      1- 1444     	MOVAR	STK02
     01BC 2100                      1- 1445     	MOVIA	0x00
     01BD 00rr                      1- 1446     	MOVAR	STK01
                                    1- 1447     	BANKSEL	r0x1035
     01BE rrrr                      3-   71 m1      .banksel ram_address
     01BF 01rr                      1- 1448     	MOVR	r0x1035,W
     01C0 00rr                      1- 1449     	MOVAR	STK00
                                    1- 1450     	BANKSEL	r0x1036
     01C1 rrrr                      3-   71 m1      .banksel ram_address
     01C2 01rr                      1- 1451     	MOVR	r0x1036,W
     01C3 2rrr                      1- 1452     	LCALL	__divuint
                                    1- 1453     	BANKSEL	r0x1036
     01C4 rrrr                      3-   71 m1      .banksel ram_address
     01C5 00rr                      1- 1454     	MOVAR	r0x1036
     01C6 01rr                      1- 1455     	MOVR	STK00,W
                                    1- 1456     	BANKSEL	r0x1035
     01C7 rrrr                      3-   71 m1      .banksel ram_address
     01C8 00rr                      1- 1457     	MOVAR	r0x1035
                                    1- 1458     	BANKSEL	_geweiNum
     01C9 rrrr                      3-   71 m1      .banksel ram_address
     01CA 00rr                      1- 1459     	MOVAR	_geweiNum
     01CB 3rrr                      1- 1460     	LGOTO	_00571_DS_
     01CC                           1- 1461     _00539_DS_:
                                    1- 1462     	.line	629, "main.c"; 	baiweiNum = 0;
                                    1- 1463     	BANKSEL	_baiweiNum
     01CC rrrr                      3-   71 m1      .banksel ram_address
     01CD 02rr                      1- 1464     	CLRR	_baiweiNum
                                    1- 1465     	.line	630, "main.c"; 	shiweiNum = 0;
                                    1- 1466     	BANKSEL	_shiweiNum
     01CE rrrr                      3-   71 m1      .banksel ram_address
     01CF 02rr                      1- 1467     	CLRR	_shiweiNum
                                    1- 1468     	.line	631, "main.c"; 	geweiNum = 0;
                                    1- 1469     	BANKSEL	_geweiNum
     01D0 rrrr                      3-   71 m1      .banksel ram_address
     01D1 02rr                      1- 1470     	CLRR	_geweiNum
     01D2                           1- 1471     _00571_DS_:
                                    1- 1472     	.line	633, "main.c"; 	}
                                    1- 1473     	RETURN	
     01D2 0010                      3-   26 m1      ret
                                    1- 1474     ; exit point of _translateTempAD
                                    1- 1476     ;***
                                    1- 1477     ;  pBlock Stats: dbName = C
                                    1- 1478     ;***
                                    1- 1479     ;has an exit
                                    1- 1480     ;; Starting pCode block
                                    1- 1481     .segment "code"; module=main, function=_translateVDDAD
     0000                           1- 1483     _translateVDDAD:
                                    1- 1484     ; 2 exit points
                                    1- 1485     	.line	513, "main.c"; 	if(workStep == 1)
                                    1- 1486     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1487     	MOVR	_workStep,W
     0002 2401                      1- 1488     	XORIA	0x01
     0003 0903                      1- 1489     	BTRSS	STATUS,2
     0004 3rrr                      1- 1490     	LGOTO	_00001_DS_
                                    1- 1491     	.line	515, "main.c"; 	ADDFullFlag = 0;
                                    1- 1492     	BANKSEL	_ADDFullFlag
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1493     	CLRR	_ADDFullFlag
     0007                           1- 1494     _00001_DS_:
                                    1- 1495     	.line	519, "main.c"; 	if(R_Quarter_VDD_DATA < 1050)
     0007 2104                      1- 1496     	MOVIA	0x04
                                    1- 1497     	BANKSEL	_R_Quarter_VDD_DATA
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 04rr                      1- 1498     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     000A 0903                      1- 1499     	BTRSS	STATUS,2
     000B 3rrr                      1- 1500     	LGOTO	_00529_DS_
     000C 211A                      1- 1501     	MOVIA	0x1a
     000D 04rr                      1- 1502     	SUBAR	_R_Quarter_VDD_DATA,W
     000E                           1- 1503     _00529_DS_:
     000E 0C03                      1- 1504     	BTRSC	STATUS,0
     000F 3rrr                      1- 1505     	LGOTO	_00507_DS_
                                    1- 1506     	.line	522, "main.c"; 	baiweiNum = 0;
                                    1- 1507     	BANKSEL	_baiweiNum
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1- 1508     	CLRR	_baiweiNum
                                    1- 1509     	.line	523, "main.c"; 	shiweiNum = 0;
                                    1- 1510     	BANKSEL	_shiweiNum
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 02rr                      1- 1511     	CLRR	_shiweiNum
                                    1- 1512     	.line	524, "main.c"; 	geweiNum = 0;
                                    1- 1513     	BANKSEL	_geweiNum
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 02rr                      1- 1514     	CLRR	_geweiNum
                                    1- 1515     	.line	525, "main.c"; 	realWork = 0;
                                    1- 1516     	BANKSEL	_realWork
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 02rr                      1- 1517     	CLRR	_realWork
     0018 3rrr                      1- 1518     	LGOTO	_00509_DS_
                                    1- 1519     ;;unsigned compare: left < lit (0x47E=1150), size=2
     0019                           1- 1520     _00507_DS_:
                                    1- 1521     	.line	527, "main.c"; 	else if(R_Quarter_VDD_DATA < 1150)
     0019 2104                      1- 1522     	MOVIA	0x04
                                    1- 1523     	BANKSEL	_R_Quarter_VDD_DATA
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 04rr                      1- 1524     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     001C 0903                      1- 1525     	BTRSS	STATUS,2
     001D 3rrr                      1- 1526     	LGOTO	_00530_DS_
     001E 217E                      1- 1527     	MOVIA	0x7e
     001F 04rr                      1- 1528     	SUBAR	_R_Quarter_VDD_DATA,W
     0020                           1- 1529     _00530_DS_:
     0020 0C03                      1- 1530     	BTRSC	STATUS,0
     0021 3rrr                      1- 1531     	LGOTO	_00504_DS_
                                    1- 1532     	.line	530, "main.c"; 	baiweiNum = 0;
                                    1- 1533     	BANKSEL	_baiweiNum
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 02rr                      1- 1534     	CLRR	_baiweiNum
                                    1- 1535     	.line	531, "main.c"; 	shiweiNum = 2;
     0024 2102                      1- 1536     	MOVIA	0x02
                                    1- 1537     	BANKSEL	_shiweiNum
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 00rr                      1- 1538     	MOVAR	_shiweiNum
                                    1- 1539     	.line	532, "main.c"; 	geweiNum = 5;
     0027 2105                      1- 1540     	MOVIA	0x05
                                    1- 1541     	BANKSEL	_geweiNum
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 00rr                      1- 1542     	MOVAR	_geweiNum
     002A 3rrr                      1- 1543     	LGOTO	_00509_DS_
                                    1- 1544     ;;unsigned compare: left < lit (0x4E2=1250), size=2
     002B                           1- 1545     _00504_DS_:
                                    1- 1546     	.line	534, "main.c"; 	else if(R_Quarter_VDD_DATA < 1250)
     002B 2104                      1- 1547     	MOVIA	0x04
                                    1- 1548     	BANKSEL	_R_Quarter_VDD_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 04rr                      1- 1549     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     002E 0903                      1- 1550     	BTRSS	STATUS,2
     002F 3rrr                      1- 1551     	LGOTO	_00531_DS_
     0030 21E2                      1- 1552     	MOVIA	0xe2
     0031 04rr                      1- 1553     	SUBAR	_R_Quarter_VDD_DATA,W
     0032                           1- 1554     _00531_DS_:
     0032 0C03                      1- 1555     	BTRSC	STATUS,0
     0033 3rrr                      1- 1556     	LGOTO	_00501_DS_
                                    1- 1557     	.line	537, "main.c"; 	baiweiNum = 0;
                                    1- 1558     	BANKSEL	_baiweiNum
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 02rr                      1- 1559     	CLRR	_baiweiNum
                                    1- 1560     	.line	538, "main.c"; 	shiweiNum = 5;
     0036 2105                      1- 1561     	MOVIA	0x05
                                    1- 1562     	BANKSEL	_shiweiNum
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 1563     	MOVAR	_shiweiNum
                                    1- 1564     	.line	539, "main.c"; 	geweiNum = 0;
                                    1- 1565     	BANKSEL	_geweiNum
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1- 1566     	CLRR	_geweiNum
     003B 3rrr                      1- 1567     	LGOTO	_00509_DS_
                                    1- 1568     ;;unsigned compare: left < lit (0x546=1350), size=2
     003C                           1- 1569     _00501_DS_:
                                    1- 1570     	.line	541, "main.c"; 	else if(R_Quarter_VDD_DATA < 1350)
     003C 2105                      1- 1571     	MOVIA	0x05
                                    1- 1572     	BANKSEL	_R_Quarter_VDD_DATA
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 04rr                      1- 1573     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     003F 0903                      1- 1574     	BTRSS	STATUS,2
     0040 3rrr                      1- 1575     	LGOTO	_00532_DS_
     0041 2146                      1- 1576     	MOVIA	0x46
     0042 04rr                      1- 1577     	SUBAR	_R_Quarter_VDD_DATA,W
     0043                           1- 1578     _00532_DS_:
     0043 0C03                      1- 1579     	BTRSC	STATUS,0
     0044 3rrr                      1- 1580     	LGOTO	_00498_DS_
                                    1- 1581     	.line	544, "main.c"; 	baiweiNum = 0;
                                    1- 1582     	BANKSEL	_baiweiNum
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 02rr                      1- 1583     	CLRR	_baiweiNum
                                    1- 1584     	.line	545, "main.c"; 	shiweiNum = 7;
     0047 2107                      1- 1585     	MOVIA	0x07
                                    1- 1586     	BANKSEL	_shiweiNum
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 00rr                      1- 1587     	MOVAR	_shiweiNum
                                    1- 1588     	.line	546, "main.c"; 	geweiNum = 5;
     004A 2105                      1- 1589     	MOVIA	0x05
                                    1- 1590     	BANKSEL	_geweiNum
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1- 1591     	MOVAR	_geweiNum
     004D 3rrr                      1- 1592     	LGOTO	_00509_DS_
                                    1- 1593     ;;unsigned compare: left < lit (0x578=1400), size=2
     004E                           1- 1594     _00498_DS_:
                                    1- 1595     	.line	548, "main.c"; 	else if(R_Quarter_VDD_DATA >= 1400 )
     004E 2105                      1- 1596     	MOVIA	0x05
                                    1- 1597     	BANKSEL	_R_Quarter_VDD_DATA
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 04rr                      1- 1598     	SUBAR	(_R_Quarter_VDD_DATA + 1),W
     0051 0903                      1- 1599     	BTRSS	STATUS,2
     0052 3rrr                      1- 1600     	LGOTO	_00533_DS_
     0053 2178                      1- 1601     	MOVIA	0x78
     0054 04rr                      1- 1602     	SUBAR	_R_Quarter_VDD_DATA,W
     0055                           1- 1603     _00533_DS_:
     0055 0803                      1- 1604     	BTRSS	STATUS,0
     0056 3rrr                      1- 1605     	LGOTO	_00509_DS_
                                    1- 1606     	.line	551, "main.c"; 	baiweiNum = 1;
     0057 2101                      1- 1607     	MOVIA	0x01
                                    1- 1608     	BANKSEL	_baiweiNum
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 00rr                      1- 1609     	MOVAR	_baiweiNum
                                    1- 1610     	.line	552, "main.c"; 	shiweiNum = 0;
                                    1- 1611     	BANKSEL	_shiweiNum
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 02rr                      1- 1612     	CLRR	_shiweiNum
                                    1- 1613     	.line	553, "main.c"; 	geweiNum = 0;
                                    1- 1614     	BANKSEL	_geweiNum
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 02rr                      1- 1615     	CLRR	_geweiNum
     005E                           1- 1616     _00509_DS_:
                                    1- 1617     	.line	555, "main.c"; 	}
                                    1- 1618     	RETURN	
     005E 0010                      3-   26 m1      ret
                                    1- 1619     ; exit point of _translateVDDAD
                                    1- 1621     ;***
                                    1- 1622     ;  pBlock Stats: dbName = C
                                    1- 1623     ;***
                                    1- 1624     ;has an exit
                                    1- 1625     ;5 compiler assigned registers:
                                    1- 1626     ;   r0x102F
                                    1- 1627     ;   STK00
                                    1- 1628     ;   r0x1030
                                    1- 1629     ;   r0x1031
                                    1- 1630     ;   r0x1032
                                    1- 1631     ;; Starting pCode block
                                    1- 1632     .segment "code"; module=main, function=_delay
                                    1- 1634     ;local variable name mapping:
     0000                           1- 1639     _delay:
                                    1- 1640     ; 2 exit points
                                    1- 1641     	.line	505, "main.c"; 	void delay(uint16_t time)
                                    1- 1642     	BANKSEL	r0x102F
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1643     	MOVAR	r0x102F
     0002 01rr                      1- 1644     	MOVR	STK00,W
                                    1- 1645     	BANKSEL	r0x1030
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1646     	MOVAR	r0x1030
                                    1- 1647     	.line	507, "main.c"; 	for(uint16_t i=0;i<time;i++);
                                    1- 1648     	BANKSEL	r0x1031
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1649     	CLRR	r0x1031
                                    1- 1650     	BANKSEL	r0x1032
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 1651     	CLRR	r0x1032
     0009                           1- 1652     _00477_DS_:
                                    1- 1653     	BANKSEL	r0x102F
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1- 1654     	MOVR	r0x102F,W
                                    1- 1655     	BANKSEL	r0x1032
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1- 1656     	SUBAR	r0x1032,W
     000D 0903                      1- 1657     	BTRSS	STATUS,2
     000E 3rrr                      1- 1658     	LGOTO	_00488_DS_
                                    1- 1659     	BANKSEL	r0x1030
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1660     	MOVR	r0x1030,W
                                    1- 1661     	BANKSEL	r0x1031
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1- 1662     	SUBAR	r0x1031,W
     0013                           1- 1663     _00488_DS_:
     0013 0C03                      1- 1664     	BTRSC	STATUS,0
     0014 3rrr                      1- 1665     	LGOTO	_00479_DS_
                                    1- 1666     	BANKSEL	r0x1031
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1- 1667     	INCR	r0x1031,F
     0017 0903                      1- 1668     	BTRSS	STATUS,2
     0018 3rrr                      1- 1669     	LGOTO	_00002_DS_
                                    1- 1670     	BANKSEL	r0x1032
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1- 1671     	INCR	r0x1032,F
     001B                           1- 1672     _00002_DS_:
     001B 3rrr                      1- 1673     	LGOTO	_00477_DS_
     001C                           1- 1674     _00479_DS_:
                                    1- 1675     	.line	508, "main.c"; 	}
                                    1- 1676     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1- 1677     ; exit point of _delay
                                    1- 1679     ;***
                                    1- 1680     ;  pBlock Stats: dbName = C
                                    1- 1681     ;***
                                    1- 1682     ;has an exit
                                    1- 1683     ;; Starting pCode block
                                    1- 1684     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1686     _F_wait_eoc:
                                    1- 1687     ; 2 exit points
     0000                           1- 1688     _00470_DS_:
                                    1- 1689     	.line	499, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1690     	BTRSS	_ADMDbits,5
     0001 3rrr                      1- 1691     	LGOTO	_00470_DS_
                                    1- 1692     	.line	501, "main.c"; 	}
                                    1- 1693     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1694     ; exit point of _F_wait_eoc
                                    1- 1696     ;***
                                    1- 1697     ;  pBlock Stats: dbName = C
                                    1- 1698     ;***
                                    1- 1699     ;has an exit
                                    1- 1700     ;functions called:
                                    1- 1701     ;   _initAD
                                    1- 1702     ;   _initAD
                                    1- 1703     ;; Starting pCode block
                                    1- 1704     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1706     _gotoSleep:
                                    1- 1707     ; 2 exit points
                                    1- 1708     	.line	468, "main.c"; 	AWUCON = 0xE0;		//PA7，PA6唤醒
     0000 21E0                      1- 1709     	MOVIA	0xe0
     0001 00rr                      1- 1710     	MOVAR	_AWUCON
                                    1- 1711     	.line	469, "main.c"; 	BWUCON = 0x0A;		//PB1 PB3唤醒
     0002 210A                      1- 1712     	MOVIA	0x0a
     0003 00rr                      1- 1713     	MOVAR	_BWUCON
                                    1- 1714     	.line	470, "main.c"; 	if(LVDFlag == 1)
                                    1- 1715     	BANKSEL	_LVDFlag
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1716     	MOVR	_LVDFlag,W
     0006 2401                      1- 1717     	XORIA	0x01
     0007 0903                      1- 1718     	BTRSS	STATUS,2
     0008 3rrr                      1- 1719     	LGOTO	_00465_DS_
                                    1- 1720     	.line	472, "main.c"; 	PORTB = 0x20; 	//关闭
     0009 2120                      1- 1721     	MOVIA	0x20
     000A 00rr                      1- 1722     	MOVAR	_PORTB
                                    1- 1723     	.line	473, "main.c"; 	PORTA = 0x00;
     000B 02rr                      1- 1724     	CLRR	_PORTA
     000C                           1- 1725     _00465_DS_:
                                    1- 1726     	.line	475, "main.c"; 	sleepCount = 0;
                                    1- 1727     	BANKSEL	_sleepCount
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1- 1728     	CLRR	_sleepCount
     000E 02rr                      1- 1729     	CLRR	(_sleepCount + 1)
                                    1- 1730     	.line	476, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     000F 2103                      1- 1731     	MOVIA	0x03
     0010 00rr                      1- 1732     	MOVAR	_INTE
                                    1- 1733     	.line	477, "main.c"; 	PCON =  C_LVR_En;	
     0011 2108                      1- 1734     	MOVIA	0x08
     0012 00rr                      1- 1735     	MOVAR	_PCON
                                    1- 1736     	.line	478, "main.c"; 	PCON &= 0xEF;
     0013 1Err                      1- 1737     	BCR	_PCON,4
                                    1- 1738     	.line	479, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0014 02rr                      1- 1739     	CLRR	_INTF
                                    1- 1740     	.line	480, "main.c"; 	CLRWDT();
     0015 0002                      1- 1741     	clrwdt
                                    1- 1742     	.line	481, "main.c"; 	SLEEP();
     0016 0001                      1- 1743     	sleep
                                    1- 1744     	.line	482, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0017 2101                      1- 1745     	MOVIA	0x01
     0018 00rr                      1- 1746     	MOVAR	_INTE
                                    1- 1747     	.line	483, "main.c"; 	INTF = 0;
     0019 02rr                      1- 1748     	CLRR	_INTF
                                    1- 1749     	.line	485, "main.c"; 	PCON = C_WDT_En | C_LVR_En ;				// Enable WDT ,  Enable LVR
     001A 2188                      1- 1750     	MOVIA	0x88
     001B 00rr                      1- 1751     	MOVAR	_PCON
                                    1- 1752     	.line	486, "main.c"; 	PCON &= 0xEF;
     001C 1Err                      1- 1753     	BCR	_PCON,4
                                    1- 1754     	.line	487, "main.c"; 	initAD();
     001D 2rrr                      1- 1755     	LCALL	_initAD
                                    1- 1756     	.line	494, "main.c"; 	}
                                    1- 1757     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1- 1758     ; exit point of _gotoSleep
                                    1- 1760     ;***
                                    1- 1761     ;  pBlock Stats: dbName = C
                                    1- 1762     ;***
                                    1- 1763     ;has an exit
                                    1- 1764     ;functions called:
                                    1- 1765     ;   _delay
                                    1- 1766     ;   _F_wait_eoc
                                    1- 1767     ;   _delay
                                    1- 1768     ;   _F_wait_eoc
                                    1- 1769     ;7 compiler assigned registers:
                                    1- 1770     ;   r0x1039
                                    1- 1771     ;   STK00
                                    1- 1772     ;   r0x103A
                                    1- 1773     ;   r0x103B
                                    1- 1774     ;   r0x103C
                                    1- 1775     ;   r0x103D
                                    1- 1776     ;   r0x103E
                                    1- 1777     ;; Starting pCode block
                                    1- 1778     .segment "code"; module=main, function=_F_Quarter_VDD_Convert
                                    1- 1780     ;local variable name mapping:
     0000                           1- 1783     _F_Quarter_VDD_Convert:
                                    1- 1784     ; 2 exit points
                                    1- 1785     	.line	452, "main.c"; 	void F_Quarter_VDD_Convert(char count)
                                    1- 1786     	BANKSEL	r0x1039
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1787     	MOVAR	r0x1039
                                    1- 1788     	.line	455, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;			// Select internal 1/4VDD as ADC input
     0002 219B                      1- 1789     	MOVIA	0x9b
     0003 00rr                      1- 1790     	MOVAR	_ADMD
                                    1- 1791     	.line	456, "main.c"; 	delay(200);	
     0004 21C8                      1- 1792     	MOVIA	0xc8
     0005 00rr                      1- 1793     	MOVAR	STK00
     0006 2100                      1- 1794     	MOVIA	0x00
     0007 2rrr                      1- 1795     	LCALL	_delay
                                    1- 1796     	.line	457, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1- 1797     	MOVIA	0x01
                                    1- 1798     	BANKSEL	r0x103A
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1799     	MOVAR	r0x103A
     000B                           1- 1800     _00457_DS_:
                                    1- 1801     	BANKSEL	r0x103A
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1802     	MOVR	r0x103A,W
                                    1- 1803     	BANKSEL	r0x1039
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 1804     	SUBAR	r0x1039,W
     000F 0803                      1- 1805     	BTRSS	STATUS,0
     0010 3rrr                      1- 1806     	LGOTO	_00459_DS_
                                    1- 1807     	.line	459, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0011 1Brr                      1- 1808     	BSR	_ADMDbits,6
                                    1- 1809     	.line	460, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete	
     0012 2rrr                      1- 1810     	LCALL	_F_wait_eoc
                                    1- 1811     	.line	461, "main.c"; 	R_Quarter_VDD_DATA_LB += ( 0x0F & ADR); 
     0013 210F                      1- 1812     	MOVIA	0x0f
     0014 10rr                      1- 1813     	ANDAR	_ADR,W
                                    1- 1814     ;;3	MOVAR	r0x103B
                                    1- 1815     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 03rr                      1- 1816     	ADDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 1817     	.line	462, "main.c"; 	R_Quarter_VDD_DATA    += ADD; 
     0017 01rr                      1- 1818     	MOVR	_ADD,W
                                    1- 1819     	BANKSEL	r0x103B
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 1820     	MOVAR	r0x103B
                                    1- 1821     ;;1	CLRR	r0x103C
                                    1- 1822     ;;106	MOVR	r0x103B,W
                                    1- 1823     ;;104	MOVAR	r0x103D
     001A 2100                      1- 1824     	MOVIA	0x00
                                    1- 1825     	BANKSEL	r0x103E
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1826     	MOVAR	r0x103E
                                    1- 1827     ;;105	MOVR	r0x103D,W
                                    1- 1828     	BANKSEL	r0x103B
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1829     	MOVR	r0x103B,W
                                    1- 1830     	BANKSEL	_R_Quarter_VDD_DATA
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 03rr                      1- 1831     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 1832     	BANKSEL	r0x103E
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1833     	MOVR	r0x103E,W
     0023 0C03                      1- 1834     	BTRSC	STATUS,0
     0024 05rr                      1- 1835     	INCR	r0x103E,W
     0025 0D03                      1- 1836     	BTRSC	STATUS,2
     0026 3rrr                      1- 1837     	LGOTO	_00003_DS_
                                    1- 1838     	BANKSEL	_R_Quarter_VDD_DATA
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 03rr                      1- 1839     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
     0029                           1- 1840     _00003_DS_:
                                    1- 1841     	.line	457, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1842     	BANKSEL	r0x103A
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 05rr                      1- 1843     	INCR	r0x103A,F
     002B 3rrr                      1- 1844     	LGOTO	_00457_DS_
     002C                           1- 1845     _00459_DS_:
                                    1- 1846     	.line	464, "main.c"; 	}
                                    1- 1847     	RETURN	
     002C 0010                      3-   26 m1      ret
                                    1- 1848     ; exit point of _F_Quarter_VDD_Convert
                                    1- 1850     ;***
                                    1- 1851     ;  pBlock Stats: dbName = C
                                    1- 1852     ;***
                                    1- 1853     ;has an exit
                                    1- 1854     ;functions called:
                                    1- 1855     ;   _delay
                                    1- 1856     ;   _F_wait_eoc
                                    1- 1857     ;   _delay
                                    1- 1858     ;   _F_wait_eoc
                                    1- 1859     ;7 compiler assigned registers:
                                    1- 1860     ;   r0x103F
                                    1- 1861     ;   STK00
                                    1- 1862     ;   r0x1040
                                    1- 1863     ;   r0x1041
                                    1- 1864     ;   r0x1042
                                    1- 1865     ;   r0x1043
                                    1- 1866     ;   r0x1044
                                    1- 1867     ;; Starting pCode block
                                    1- 1868     .segment "code"; module=main, function=_F_AIN6_Convert
                                    1- 1870     ;local variable name mapping:
     0000                           1- 1873     _F_AIN6_Convert:
                                    1- 1874     ; 2 exit points
                                    1- 1875     	.line	437, "main.c"; 	void F_AIN6_Convert(char count)
                                    1- 1876     	BANKSEL	r0x103F
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1877     	MOVAR	r0x103F
                                    1- 1878     	.line	439, "main.c"; 	R_AIN6_DATA=R_AIN6_DATA_LB=0x00;   
                                    1- 1879     	BANKSEL	_R_AIN6_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1880     	CLRR	_R_AIN6_DATA_LB
                                    1- 1881     	BANKSEL	_R_AIN6_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1882     	CLRR	_R_AIN6_DATA
     0006 02rr                      1- 1883     	CLRR	(_R_AIN6_DATA + 1)
                                    1- 1884     	.line	441, "main.c"; 	ADMD  = 0x90 | C_ADC_PB1;				// Select AIN6(PB1) pad as ADC input
     0007 2196                      1- 1885     	MOVIA	0x96
     0008 00rr                      1- 1886     	MOVAR	_ADMD
                                    1- 1887     	.line	442, "main.c"; 	delay(200);	
     0009 21C8                      1- 1888     	MOVIA	0xc8
     000A 00rr                      1- 1889     	MOVAR	STK00
     000B 2100                      1- 1890     	MOVIA	0x00
     000C 2rrr                      1- 1891     	LCALL	_delay
                                    1- 1892     	.line	443, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1893     	MOVIA	0x01
                                    1- 1894     	BANKSEL	r0x1040
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1895     	MOVAR	r0x1040
     0010                           1- 1896     _00448_DS_:
                                    1- 1897     	BANKSEL	r0x1040
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1898     	MOVR	r0x1040,W
                                    1- 1899     	BANKSEL	r0x103F
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1900     	SUBAR	r0x103F,W
     0014 0803                      1- 1901     	BTRSS	STATUS,0
     0015 3rrr                      1- 1902     	LGOTO	_00450_DS_
                                    1- 1903     	.line	445, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1904     	BSR	_ADMDbits,6
                                    1- 1905     	.line	446, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1906     	LCALL	_F_wait_eoc
                                    1- 1907     	.line	447, "main.c"; 	R_AIN6_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1908     	MOVIA	0x0f
     0019 10rr                      1- 1909     	ANDAR	_ADR,W
                                    1- 1910     ;;3	MOVAR	r0x1041
                                    1- 1911     	BANKSEL	_R_AIN6_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1912     	ADDAR	_R_AIN6_DATA_LB,F
                                    1- 1913     	.line	448, "main.c"; 	R_AIN6_DATA    += ADD; 
     001C 01rr                      1- 1914     	MOVR	_ADD,W
                                    1- 1915     	BANKSEL	r0x1041
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1916     	MOVAR	r0x1041
                                    1- 1917     ;;1	CLRR	r0x1042
                                    1- 1918     ;;103	MOVR	r0x1041,W
                                    1- 1919     ;;101	MOVAR	r0x1043
     001F 2100                      1- 1920     	MOVIA	0x00
                                    1- 1921     	BANKSEL	r0x1044
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1922     	MOVAR	r0x1044
                                    1- 1923     ;;102	MOVR	r0x1043,W
                                    1- 1924     	BANKSEL	r0x1041
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1925     	MOVR	r0x1041,W
                                    1- 1926     	BANKSEL	_R_AIN6_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1927     	ADDAR	_R_AIN6_DATA,F
                                    1- 1928     	BANKSEL	r0x1044
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1929     	MOVR	r0x1044,W
     0028 0C03                      1- 1930     	BTRSC	STATUS,0
     0029 05rr                      1- 1931     	INCR	r0x1044,W
     002A 0D03                      1- 1932     	BTRSC	STATUS,2
     002B 3rrr                      1- 1933     	LGOTO	_00004_DS_
                                    1- 1934     	BANKSEL	_R_AIN6_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1935     	ADDAR	(_R_AIN6_DATA + 1),F
     002E                           1- 1936     _00004_DS_:
                                    1- 1937     	.line	443, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1938     	BANKSEL	r0x1040
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1939     	INCR	r0x1040,F
     0030 3rrr                      1- 1940     	LGOTO	_00448_DS_
     0031                           1- 1941     _00450_DS_:
                                    1- 1942     	.line	450, "main.c"; 	}
                                    1- 1943     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1944     ; exit point of _F_AIN6_Convert
                                    1- 1946     ;***
                                    1- 1947     ;  pBlock Stats: dbName = C
                                    1- 1948     ;***
                                    1- 1949     ;has an exit
                                    1- 1950     ;functions called:
                                    1- 1951     ;   _F_AIN6_Convert
                                    1- 1952     ;   _translateTempAD
                                    1- 1953     ;   _F_AIN6_Convert
                                    1- 1954     ;   _translateTempAD
                                    1- 1955     ;4 compiler assigned registers:
                                    1- 1956     ;   r0x1045
                                    1- 1957     ;   r0x1046
                                    1- 1958     ;   r0x1047
                                    1- 1959     ;   r0x1048
                                    1- 1960     ;; Starting pCode block
                                    1- 1961     .segment "code"; module=main, function=_checkMF52AD
     0000                           1- 1963     _checkMF52AD:
                                    1- 1964     ; 2 exit points
                                    1- 1965     	.line	408, "main.c"; 	R_AIN6_DATA = R_AIN6_DATA_LB = 0x00;
                                    1- 1966     	BANKSEL	_R_AIN6_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1967     	CLRR	_R_AIN6_DATA_LB
                                    1- 1968     	BANKSEL	_R_AIN6_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1969     	CLRR	_R_AIN6_DATA
     0004 02rr                      1- 1970     	CLRR	(_R_AIN6_DATA + 1)
                                    1- 1971     	.line	409, "main.c"; 	F_AIN6_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1972     	MOVIA	0x08
     0006 2rrr                      1- 1973     	LCALL	_F_AIN6_Convert
                                    1- 1974     	.line	410, "main.c"; 	R_AIN6_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1975     	BANKSEL	_R_AIN6_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1976     	SWAPR	(_R_AIN6_DATA + 1),W
     0009 22F0                      1- 1977     	ANDIA	0xf0
     000A 00rr                      1- 1978     	MOVAR	(_R_AIN6_DATA + 1)
     000B 15rr                      1- 1979     	SWAPR	_R_AIN6_DATA,W
     000C 00rr                      1- 1980     	MOVAR	_R_AIN6_DATA
     000D 220F                      1- 1981     	ANDIA	0x0f
     000E 11rr                      1- 1982     	IORAR	(_R_AIN6_DATA + 1),F
     000F 12rr                      1- 1983     	XORAR	_R_AIN6_DATA,F
                                    1- 1984     	.line	411, "main.c"; 	R_AIN6_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1985     	MOVIA	0xf0
                                    1- 1986     	BANKSEL	_R_AIN6_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1987     	ANDAR	_R_AIN6_DATA_LB,F
                                    1- 1988     	.line	412, "main.c"; 	R_AIN6_DATA += R_AIN6_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1989     	MOVR	_R_AIN6_DATA_LB,W
                                    1- 1990     	BANKSEL	r0x1047
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1991     	MOVAR	r0x1047
                                    1- 1992     ;;1	MOVAR	r0x1045
                                    1- 1993     ;;1	CLRR	r0x1046
                                    1- 1994     ;;100	MOVR	r0x1045,W
     0016 2100                      1- 1995     	MOVIA	0x00
                                    1- 1996     	BANKSEL	r0x1048
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1997     	MOVAR	r0x1048
                                    1- 1998     	BANKSEL	r0x1047
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1999     	MOVR	r0x1047,W
                                    1- 2000     	BANKSEL	_R_AIN6_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 2001     	ADDAR	_R_AIN6_DATA,F
                                    1- 2002     	BANKSEL	r0x1048
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 2003     	MOVR	r0x1048,W
     001F 0C03                      1- 2004     	BTRSC	STATUS,0
     0020 05rr                      1- 2005     	INCR	r0x1048,W
     0021 0D03                      1- 2006     	BTRSC	STATUS,2
     0022 3rrr                      1- 2007     	LGOTO	_00005_DS_
                                    1- 2008     	BANKSEL	_R_AIN6_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 2009     	ADDAR	(_R_AIN6_DATA + 1),F
                                    1- 2010     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 2011     _00005_DS_:
                                    1- 2012     	.line	413, "main.c"; 	R_AIN6_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 2013     	BCR	STATUS,0
                                    1- 2014     	BANKSEL	_R_AIN6_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 2015     	RRR	(_R_AIN6_DATA + 1),F
     0028 13rr                      1- 2016     	RRR	_R_AIN6_DATA,F
                                    1- 2017     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 2018     	BCR	STATUS,0
     002A 13rr                      1- 2019     	RRR	(_R_AIN6_DATA + 1),F
     002B 13rr                      1- 2020     	RRR	_R_AIN6_DATA,F
                                    1- 2021     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 2022     	BCR	STATUS,0
     002D 13rr                      1- 2023     	RRR	(_R_AIN6_DATA + 1),F
     002E 13rr                      1- 2024     	RRR	_R_AIN6_DATA,F
                                    1- 2025     	.line	414, "main.c"; 	translateTempAD();
     002F 2rrr                      1- 2026     	LCALL	_translateTempAD
                                    1- 2027     ;;unsigned compare: left < lit (0x38E=910), size=2
                                    1- 2028     	.line	415, "main.c"; 	if(R_AIN6_DATA < 910)
     0030 2103                      1- 2029     	MOVIA	0x03
                                    1- 2030     	BANKSEL	_R_AIN6_DATA
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 04rr                      1- 2031     	SUBAR	(_R_AIN6_DATA + 1),W
     0033 0903                      1- 2032     	BTRSS	STATUS,2
     0034 3rrr                      1- 2033     	LGOTO	_00439_DS_
     0035 218E                      1- 2034     	MOVIA	0x8e
     0036 04rr                      1- 2035     	SUBAR	_R_AIN6_DATA,W
     0037                           1- 2036     _00439_DS_:
     0037 0C03                      1- 2037     	BTRSC	STATUS,0
     0038 3rrr                      1- 2038     	LGOTO	_00422_DS_
                                    1- 2039     	.line	418, "main.c"; 	hotFlag = 0;
                                    1- 2040     	BANKSEL	_hotFlag
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1- 2041     	CLRR	_hotFlag
                                    1- 2042     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2043     ;;unsigned compare: left >= lit (0x4D9=1241), size=2
     003B                           1- 2044     _00422_DS_:
                                    1- 2045     	.line	421, "main.c"; 	if(R_AIN6_DATA > 1240)
     003B 2104                      1- 2046     	MOVIA	0x04
                                    1- 2047     	BANKSEL	_R_AIN6_DATA
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 04rr                      1- 2048     	SUBAR	(_R_AIN6_DATA + 1),W
     003E 0903                      1- 2049     	BTRSS	STATUS,2
     003F 3rrr                      1- 2050     	LGOTO	_00440_DS_
     0040 21D9                      1- 2051     	MOVIA	0xd9
     0041 04rr                      1- 2052     	SUBAR	_R_AIN6_DATA,W
     0042                           1- 2053     _00440_DS_:
     0042 0803                      1- 2054     	BTRSS	STATUS,0
     0043 3rrr                      1- 2055     	LGOTO	_00424_DS_
                                    1- 2056     	.line	424, "main.c"; 	hotFlag = 1;
     0044 2101                      1- 2057     	MOVIA	0x01
                                    1- 2058     	BANKSEL	_hotFlag
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 00rr                      1- 2059     	MOVAR	_hotFlag
                                    1- 2060     ;;unsigned compare: left < lit (0x58C=1420), size=2
     0047                           1- 2061     _00424_DS_:
                                    1- 2062     	.line	427, "main.c"; 	if(R_AIN6_DATA < 1420)
     0047 2105                      1- 2063     	MOVIA	0x05
                                    1- 2064     	BANKSEL	_R_AIN6_DATA
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 04rr                      1- 2065     	SUBAR	(_R_AIN6_DATA + 1),W
     004A 0903                      1- 2066     	BTRSS	STATUS,2
     004B 3rrr                      1- 2067     	LGOTO	_00441_DS_
     004C 218C                      1- 2068     	MOVIA	0x8c
     004D 04rr                      1- 2069     	SUBAR	_R_AIN6_DATA,W
     004E                           1- 2070     _00441_DS_:
     004E 0C03                      1- 2071     	BTRSC	STATUS,0
     004F 3rrr                      1- 2072     	LGOTO	_00426_DS_
                                    1- 2073     	.line	428, "main.c"; 	NotSleepFlag = 1;
     0050 2101                      1- 2074     	MOVIA	0x01
                                    1- 2075     	BANKSEL	_NotSleepFlag
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 2076     	MOVAR	_NotSleepFlag
     0053 3rrr                      1- 2077     	LGOTO	_00428_DS_
     0054                           1- 2078     _00426_DS_:
                                    1- 2079     	.line	430, "main.c"; 	NotSleepFlag = 0;
                                    1- 2080     	BANKSEL	_NotSleepFlag
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 02rr                      1- 2081     	CLRR	_NotSleepFlag
     0056                           1- 2082     _00428_DS_:
                                    1- 2083     	.line	431, "main.c"; 	}
                                    1- 2084     	RETURN	
     0056 0010                      3-   26 m1      ret
                                    1- 2085     ; exit point of _checkMF52AD
                                    1- 2087     ;***
                                    1- 2088     ;  pBlock Stats: dbName = C
                                    1- 2089     ;***
                                    1- 2090     ;has an exit
                                    1- 2091     ;functions called:
                                    1- 2092     ;   _F_Quarter_VDD_Convert
                                    1- 2093     ;   _translateVDDAD
                                    1- 2094     ;   _F_Quarter_VDD_Convert
                                    1- 2095     ;   _translateVDDAD
                                    1- 2096     ;4 compiler assigned registers:
                                    1- 2097     ;   r0x1049
                                    1- 2098     ;   r0x104A
                                    1- 2099     ;   r0x104B
                                    1- 2100     ;   r0x104C
                                    1- 2101     ;; Starting pCode block
                                    1- 2102     .segment "code"; module=main, function=_checkQuarterVDD
     0000                           1- 2104     _checkQuarterVDD:
                                    1- 2105     ; 2 exit points
                                    1- 2106     	.line	394, "main.c"; 	R_Quarter_VDD_DATA = R_Quarter_VDD_DATA_LB = 0x00;
                                    1- 2107     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 2108     	CLRR	_R_Quarter_VDD_DATA_LB
                                    1- 2109     	BANKSEL	_R_Quarter_VDD_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 2110     	CLRR	_R_Quarter_VDD_DATA
     0004 02rr                      1- 2111     	CLRR	(_R_Quarter_VDD_DATA + 1)
                                    1- 2112     	.line	395, "main.c"; 	F_Quarter_VDD_Convert(8);			// execute 1/4VDD input channel ADC converting 8 times
     0005 2108                      1- 2113     	MOVIA	0x08
     0006 2rrr                      1- 2114     	LCALL	_F_Quarter_VDD_Convert
                                    1- 2115     	.line	396, "main.c"; 	R_Quarter_VDD_DATA <<= 4;			// R_Quarter_VDD_DATA shift left 4 bit
                                    1- 2116     	BANKSEL	_R_Quarter_VDD_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 2117     	SWAPR	(_R_Quarter_VDD_DATA + 1),W
     0009 22F0                      1- 2118     	ANDIA	0xf0
     000A 00rr                      1- 2119     	MOVAR	(_R_Quarter_VDD_DATA + 1)
     000B 15rr                      1- 2120     	SWAPR	_R_Quarter_VDD_DATA,W
     000C 00rr                      1- 2121     	MOVAR	_R_Quarter_VDD_DATA
     000D 220F                      1- 2122     	ANDIA	0x0f
     000E 11rr                      1- 2123     	IORAR	(_R_Quarter_VDD_DATA + 1),F
     000F 12rr                      1- 2124     	XORAR	_R_Quarter_VDD_DATA,F
                                    1- 2125     	.line	397, "main.c"; 	R_Quarter_VDD_DATA_LB &= 0xF0;		// Only get Bit7~4
     0010 21F0                      1- 2126     	MOVIA	0xf0
                                    1- 2127     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 2128     	ANDAR	_R_Quarter_VDD_DATA_LB,F
                                    1- 2129     	.line	398, "main.c"; 	R_Quarter_VDD_DATA += R_Quarter_VDD_DATA_LB; //// R_Quarter_VDD_DATA + R_Quarter_VDD_DATA_LB
     0013 01rr                      1- 2130     	MOVR	_R_Quarter_VDD_DATA_LB,W
                                    1- 2131     	BANKSEL	r0x104B
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 2132     	MOVAR	r0x104B
                                    1- 2133     ;;1	MOVAR	r0x1049
                                    1- 2134     ;;1	CLRR	r0x104A
                                    1- 2135     ;;99	MOVR	r0x1049,W
     0016 2100                      1- 2136     	MOVIA	0x00
                                    1- 2137     	BANKSEL	r0x104C
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 2138     	MOVAR	r0x104C
                                    1- 2139     	BANKSEL	r0x104B
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 2140     	MOVR	r0x104B,W
                                    1- 2141     	BANKSEL	_R_Quarter_VDD_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 2142     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1- 2143     	BANKSEL	r0x104C
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 2144     	MOVR	r0x104C,W
     001F 0C03                      1- 2145     	BTRSC	STATUS,0
     0020 05rr                      1- 2146     	INCR	r0x104C,W
     0021 0D03                      1- 2147     	BTRSC	STATUS,2
     0022 3rrr                      1- 2148     	LGOTO	_00006_DS_
                                    1- 2149     	BANKSEL	_R_Quarter_VDD_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 2150     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
                                    1- 2151     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 2152     _00006_DS_:
                                    1- 2153     	.line	399, "main.c"; 	R_Quarter_VDD_DATA >>=3;			// R_Quarter_VDD_DATA dividing 8
     0025 1C03                      1- 2154     	BCR	STATUS,0
                                    1- 2155     	BANKSEL	_R_Quarter_VDD_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 2156     	RRR	(_R_Quarter_VDD_DATA + 1),F
     0028 13rr                      1- 2157     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 2158     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 2159     	BCR	STATUS,0
     002A 13rr                      1- 2160     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002B 13rr                      1- 2161     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 2162     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 2163     	BCR	STATUS,0
     002D 13rr                      1- 2164     	RRR	(_R_Quarter_VDD_DATA + 1),F
     002E 13rr                      1- 2165     	RRR	_R_Quarter_VDD_DATA,F
                                    1- 2166     	.line	400, "main.c"; 	translateVDDAD();
     002F 2rrr                      1- 2167     	LCALL	_translateVDDAD
                                    1- 2168     	.line	402, "main.c"; 	}
                                    1- 2169     	RETURN	
     0030 0010                      3-   26 m1      ret
                                    1- 2170     ; exit point of _checkQuarterVDD
                                    1- 2172     ;***
                                    1- 2173     ;  pBlock Stats: dbName = C
                                    1- 2174     ;***
                                    1- 2175     ;has an exit
                                    1- 2176     ;functions called:
                                    1- 2177     ;   _delay
                                    1- 2178     ;   _delay
                                    1- 2179     ;1 compiler assigned register :
                                    1- 2180     ;   STK00
                                    1- 2181     ;; Starting pCode block
                                    1- 2182     .segment "code"; module=main, function=_initAD
     0000                           1- 2184     _initAD:
                                    1- 2185     ; 2 exit points
                                    1- 2186     	.line	370, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PB1 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2186                      1- 2187     	MOVIA	0x86
     0001 00rr                      1- 2188     	MOVAR	_ADMD
                                    1- 2189     	.line	374, "main.c"; 	ADVREFH = C_Vrefh_3V;					// ADC reference high voltage is supplied by internal 3V  (Note: ADC clock freq. must be equal or less than 500KHz)
     0002 2101                      1- 2190     	MOVIA	0x01
     0003 00rr                      1- 2191     	MOVAR	_ADVREFH
                                    1- 2192     	.line	380, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0004 2110                      1- 2193     	MOVIA	0x10
     0005 00rr                      1- 2194     	MOVAR	_ADR
                                    1- 2195     	.line	382, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0006 2103                      1- 2196     	MOVIA	0x03
     0007 00rr                      1- 2197     	MOVAR	_ADCR
                                    1- 2198     	.line	384, "main.c"; 	PACON = C_PB1_AIN6;						// Set AIN0(PA0) as pure ADC input for reduce power consumption (SFR "PACON")
     0008 2140                      1- 2199     	MOVIA	0x40
     0009 00rr                      1- 2200     	MOVAR	_PACON
                                    1- 2201     	.line	385, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     000A 1Arr                      1- 2202     	BSR	_ADMDbits,4
                                    1- 2203     	.line	386, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000B 2164                      1- 2204     	MOVIA	0x64
     000C 00rr                      1- 2205     	MOVAR	STK00
     000D 2100                      1- 2206     	MOVIA	0x00
     000E 2rrr                      1- 2207     	LCALL	_delay
                                    1- 2208     	.line	389, "main.c"; 	}
                                    1- 2209     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2210     ; exit point of _initAD
                                    1- 2212     ;***
                                    1- 2213     ;  pBlock Stats: dbName = C
                                    1- 2214     ;***
                                    1- 2215     ;has an exit
                                    1- 2216     ;; Starting pCode block
                                    1- 2217     .segment "code"; module=main, function=_init
     0000                           1- 2219     _init:
                                    1- 2220     ; 2 exit points
                                    1- 2221     	.line	339, "main.c"; 	PORTA = 0;
     0000 02rr                      1- 2222     	CLRR	_PORTA
                                    1- 2223     	.line	340, "main.c"; 	PORTB = 0;
     0001 02rr                      1- 2224     	CLRR	_PORTB
                                    1- 2225     	.line	342, "main.c"; 	IOSTA = C_PA5_Input | C_PA6_Input | C_PA7_Input;		//PA3 -PA5输入
     0002 21E0                      1- 2226     	MOVIA	0xe0
     0003 000r                      1- 2227     	IOST	_IOSTA
                                    1- 2228     	.line	343, "main.c"; 	IOSTB =  C_PB1_Input | C_PB3_Input;	
     0004 210A                      1- 2229     	MOVIA	0x0a
     0005 000r                      1- 2230     	IOST	_IOSTB
                                    1- 2231     	.line	344, "main.c"; 	PORTA = 0;
     0006 02rr                      1- 2232     	CLRR	_PORTA
                                    1- 2233     	.line	345, "main.c"; 	PORTB = 0x04;                           	
     0007 2104                      1- 2234     	MOVIA	0x04
     0008 00rr                      1- 2235     	MOVAR	_PORTB
                                    1- 2236     	.line	346, "main.c"; 	APHCON = 0x3F;		//PA6 PA7打开上拉 PA5关闭下拉
     0009 213F                      1- 2237     	MOVIA	0x3f
     000A 000r                      1- 2238     	IOST	_APHCON
                                    1- 2239     	.line	347, "main.c"; 	BPHCON = 0x37;		//PB3打开上拉
     000B 2137                      1- 2240     	MOVIA	0x37
     000C 00rr                      1- 2241     	MOVAR	_BPHCON
                                    1- 2242     	.line	348, "main.c"; 	ABPLCON = 0xFF;		//PB1打开下拉
     000D 21FF                      1- 2243     	MOVIA	0xff
     000E 00rr                      1- 2244     	MOVAR	_ABPLCON
                                    1- 2245     	.line	350, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT & LVR
     000F 2188                      1- 2246     	MOVIA	0x88
     0010 00rr                      1- 2247     	MOVAR	_PCON
                                    1- 2248     	.line	351, "main.c"; 	PCON &= 0xEF;
     0011 1Err                      1- 2249     	BCR	_PCON,4
                                    1- 2250     	.line	352, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0012 2101                      1- 2251     	MOVIA	0x01
     0013 00rr                      1- 2252     	MOVAR	_INTE
                                    1- 2253     	.line	353, "main.c"; 	INTF = 0;
     0014 02rr                      1- 2254     	CLRR	_INTF
                                    1- 2255     	.line	356, "main.c"; 	PCON1 = C_TMR0_Dis;
     0015 0200                      1- 2256     	CLRA	
     0016 000r                      1- 2257     	IOST	_PCON1
                                    1- 2258     	.line	358, "main.c"; 	TMR0 = 55;
     0017 2137                      1- 2259     	MOVIA	0x37
     0018 00rr                      1- 2260     	MOVAR	_TMR0
                                    1- 2261     	.line	359, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0019 0200                      1- 2262     	CLRA	
     001A 0003                      1- 2263     	T0MD	
                                    1- 2264     	.line	361, "main.c"; 	PCON1 = C_TMR0_En;
     001B 2101                      1- 2265     	MOVIA	0x01
     001C 000r                      1- 2266     	IOST	_PCON1
                                    1- 2267     	.line	363, "main.c"; 	ENI();
     001D 0004                      1- 2268     	ENI
                                    1- 2269     	.line	364, "main.c"; 	}
                                    1- 2270     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1- 2271     ; exit point of _init
                                    1- 2273     ;***
                                    1- 2274     ;  pBlock Stats: dbName = C
                                    1- 2275     ;***
                                    1- 2276     ;has an exit
                                    1- 2277     ;; Starting pCode block
                                    1- 2278     .segment "code"; module=main, function=_setKeyPress
     0000                           1- 2280     _setKeyPress:
                                    1- 2281     ; 2 exit points
                                    1- 2282     	.line	312, "main.c"; 	--keyOutCount;
     0000 21FF                      1- 2283     	MOVIA	0xff
                                    1- 2284     	BANKSEL	_keyOutCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 03rr                      1- 2285     	ADDAR	_keyOutCount,F
     0003 0803                      1- 2286     	BTRSS	STATUS,0
     0004 06rr                      1- 2287     	DECR	(_keyOutCount + 1),F
                                    1- 2288     ;;unsigned compare: left < lit (0x64=100), size=2
                                    1- 2289     	.line	313, "main.c"; 	if(keyOutCount<100)
     0005 2100                      1- 2290     	MOVIA	0x00
     0006 04rr                      1- 2291     	SUBAR	(_keyOutCount + 1),W
     0007 0903                      1- 2292     	BTRSS	STATUS,2
     0008 3rrr                      1- 2293     	LGOTO	_00401_DS_
     0009 2164                      1- 2294     	MOVIA	0x64
     000A 04rr                      1- 2295     	SUBAR	_keyOutCount,W
     000B                           1- 2296     _00401_DS_:
     000B 0C03                      1- 2297     	BTRSC	STATUS,0
     000C 3rrr                      1- 2298     	LGOTO	_00385_DS_
                                    1- 2299     	.line	315, "main.c"; 	setbit(PORTB, 5);
     000D 1Arr                      1- 2300     	BSR	_PORTB,5
     000E 3rrr                      1- 2301     	LGOTO	_00387_DS_
                                    1- 2302     ;;unsigned compare: left < lit (0xC8=200), size=2
     000F                           1- 2303     _00385_DS_:
                                    1- 2304     	.line	317, "main.c"; 	else if(keyOutCount < 200)
     000F 2100                      1- 2305     	MOVIA	0x00
                                    1- 2306     	BANKSEL	_keyOutCount
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 2307     	SUBAR	(_keyOutCount + 1),W
     0012 0903                      1- 2308     	BTRSS	STATUS,2
     0013 3rrr                      1- 2309     	LGOTO	_00402_DS_
     0014 21C8                      1- 2310     	MOVIA	0xc8
     0015 04rr                      1- 2311     	SUBAR	_keyOutCount,W
     0016                           1- 2312     _00402_DS_:
     0016 0C03                      1- 2313     	BTRSC	STATUS,0
     0017 3rrr                      1- 2314     	LGOTO	_00382_DS_
                                    1- 2315     	.line	319, "main.c"; 	resetbit(PORTB, 5);
     0018 1Err                      1- 2316     	BCR	_PORTB,5
     0019 3rrr                      1- 2317     	LGOTO	_00387_DS_
                                    1- 2318     ;;unsigned compare: left < lit (0x12C=300), size=2
     001A                           1- 2319     _00382_DS_:
                                    1- 2320     	.line	321, "main.c"; 	else if(keyOutCount < 300)
     001A 2101                      1- 2321     	MOVIA	0x01
                                    1- 2322     	BANKSEL	_keyOutCount
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 04rr                      1- 2323     	SUBAR	(_keyOutCount + 1),W
     001D 0903                      1- 2324     	BTRSS	STATUS,2
     001E 3rrr                      1- 2325     	LGOTO	_00403_DS_
     001F 212C                      1- 2326     	MOVIA	0x2c
     0020 04rr                      1- 2327     	SUBAR	_keyOutCount,W
     0021                           1- 2328     _00403_DS_:
     0021 0C03                      1- 2329     	BTRSC	STATUS,0
     0022 3rrr                      1- 2330     	LGOTO	_00379_DS_
                                    1- 2331     	.line	323, "main.c"; 	setbit(PORTB, 5);
     0023 1Arr                      1- 2332     	BSR	_PORTB,5
     0024 3rrr                      1- 2333     	LGOTO	_00387_DS_
                                    1- 2334     ;;unsigned compare: left < lit (0x190=400), size=2
     0025                           1- 2335     _00379_DS_:
                                    1- 2336     	.line	325, "main.c"; 	else if(keyOutCount < 400)
     0025 2101                      1- 2337     	MOVIA	0x01
                                    1- 2338     	BANKSEL	_keyOutCount
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 04rr                      1- 2339     	SUBAR	(_keyOutCount + 1),W
     0028 0903                      1- 2340     	BTRSS	STATUS,2
     0029 3rrr                      1- 2341     	LGOTO	_00404_DS_
     002A 2190                      1- 2342     	MOVIA	0x90
     002B 04rr                      1- 2343     	SUBAR	_keyOutCount,W
     002C                           1- 2344     _00404_DS_:
     002C 0C03                      1- 2345     	BTRSC	STATUS,0
     002D 3rrr                      1- 2346     	LGOTO	_00376_DS_
                                    1- 2347     	.line	327, "main.c"; 	resetbit(PORTB, 5);
     002E 1Err                      1- 2348     	BCR	_PORTB,5
     002F 3rrr                      1- 2349     	LGOTO	_00387_DS_
     0030                           1- 2350     _00376_DS_:
                                    1- 2351     	.line	331, "main.c"; 	setbit(PORTB, 5);
     0030 1Arr                      1- 2352     	BSR	_PORTB,5
     0031                           1- 2353     _00387_DS_:
                                    1- 2354     	.line	334, "main.c"; 	}
                                    1- 2355     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 2356     ; exit point of _setKeyPress
                                    1- 2358     ;***
                                    1- 2359     ;  pBlock Stats: dbName = C
                                    1- 2360     ;***
                                    1- 2361     ;functions called:
                                    1- 2362     ;   _setInput
                                    1- 2363     ;   _setKeyPress
                                    1- 2364     ;   _setInput
                                    1- 2365     ;   _setKeyPress
                                    1- 2366     ;1 compiler assigned register :
                                    1- 2367     ;   r0x104D
                                    1- 2368     ;; Starting pCode block
                                    1- 2369     .segment "code"; module=main, function=_keyCon
     0000                           1- 2371     _keyCon:
                                    1- 2372     ; 0 exit points
                                    1- 2373     	.line	233, "main.c"; 	if(getbit(PORTB,3) == 0)
     0000 01rr                      1- 2374     	MOVR	_PORTB,W
     0001 2208                      1- 2375     	ANDIA	0x08
     0002 0903                      1- 2376     	BTRSS	STATUS,2
     0003 2101                      1- 2377     	MOVIA	0x01
                                    1- 2378     	BANKSEL	r0x104D
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 2379     	MOVAR	r0x104D
     0006 01rr                      1- 2380     	MOVR	r0x104D,W
     0007 0903                      1- 2381     	BTRSS	STATUS,2
     0008 3rrr                      1- 2382     	LGOTO	_00311_DS_
                                    1- 2383     	.line	236, "main.c"; 	workStep = 3;
     0009 2103                      1- 2384     	MOVIA	0x03
                                    1- 2385     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 2386     	MOVAR	_workStep
                                    1- 2387     	.line	237, "main.c"; 	resetbit(PORTB, 0);
     000C 1Crr                      1- 2388     	BCR	_PORTB,0
                                    1- 2389     	.line	238, "main.c"; 	resetbit(PORTB, 4);
     000D 1Err                      1- 2390     	BCR	_PORTB,4
                                    1- 2391     	.line	239, "main.c"; 	if(hotFlag)
                                    1- 2392     	BANKSEL	_hotFlag
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 2393     	MOVR	_hotFlag,W
     0010 0D03                      1- 2394     	BTRSC	STATUS,2
     0011 3rrr                      1- 2395     	LGOTO	_00296_DS_
                                    1- 2396     	.line	240, "main.c"; 	setbit(PORTB, 2);
     0012 19rr                      1- 2397     	BSR	_PORTB,2
     0013 3rrr                      1- 2398     	LGOTO	_00312_DS_
     0014                           1- 2399     _00296_DS_:
                                    1- 2400     	.line	242, "main.c"; 	resetbit(PORTB, 2);
     0014 1Drr                      1- 2401     	BCR	_PORTB,2
     0015 3rrr                      1- 2402     	LGOTO	_00312_DS_
     0016                           1- 2403     _00311_DS_:
                                    1- 2404     	.line	244, "main.c"; 	else if(getbit(PORTA,7) == 0)
     0016 01rr                      1- 2405     	MOVR	_PORTA,W
     0017 2280                      1- 2406     	ANDIA	0x80
     0018 0903                      1- 2407     	BTRSS	STATUS,2
     0019 2101                      1- 2408     	MOVIA	0x01
                                    1- 2409     	BANKSEL	r0x104D
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1- 2410     	MOVAR	r0x104D
     001C 01rr                      1- 2411     	MOVR	r0x104D,W
     001D 0903                      1- 2412     	BTRSS	STATUS,2
     001E 3rrr                      1- 2413     	LGOTO	_00308_DS_
                                    1- 2414     	.line	247, "main.c"; 	if(workStep != 2)
                                    1- 2415     	BANKSEL	_workStep
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 2416     	MOVR	_workStep,W
     0021 2402                      1- 2417     	XORIA	0x02
     0022 0D03                      1- 2418     	BTRSC	STATUS,2
     0023 3rrr                      1- 2419     	LGOTO	_00299_DS_
                                    1- 2420     	.line	249, "main.c"; 	baiweiNum = 0;
                                    1- 2421     	BANKSEL	_baiweiNum
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1- 2422     	CLRR	_baiweiNum
                                    1- 2423     	.line	250, "main.c"; 	shiweiNum = 5;
     0026 2105                      1- 2424     	MOVIA	0x05
                                    1- 2425     	BANKSEL	_shiweiNum
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1- 2426     	MOVAR	_shiweiNum
                                    1- 2427     	.line	251, "main.c"; 	geweiNum = 0;
                                    1- 2428     	BANKSEL	_geweiNum
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 02rr                      1- 2429     	CLRR	_geweiNum
     002B                           1- 2430     _00299_DS_:
                                    1- 2431     	.line	253, "main.c"; 	workStep = 2;
     002B 2102                      1- 2432     	MOVIA	0x02
                                    1- 2433     	BANKSEL	_workStep
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 2434     	MOVAR	_workStep
                                    1- 2435     	.line	254, "main.c"; 	resetbit(PORTB, 0);
     002E 1Crr                      1- 2436     	BCR	_PORTB,0
                                    1- 2437     	.line	255, "main.c"; 	resetbit(PORTB, 2);
     002F 1Drr                      1- 2438     	BCR	_PORTB,2
                                    1- 2439     	.line	256, "main.c"; 	setbit(PORTB, 4);
     0030 1Arr                      1- 2440     	BSR	_PORTB,4
     0031 3rrr                      1- 2441     	LGOTO	_00312_DS_
     0032                           1- 2442     _00308_DS_:
                                    1- 2443     	.line	259, "main.c"; 	else if(getbit(PORTA,6) == 0)
     0032 01rr                      1- 2444     	MOVR	_PORTA,W
     0033 2240                      1- 2445     	ANDIA	0x40
     0034 0903                      1- 2446     	BTRSS	STATUS,2
     0035 2101                      1- 2447     	MOVIA	0x01
                                    1- 2448     	BANKSEL	r0x104D
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 2449     	MOVAR	r0x104D
     0038 01rr                      1- 2450     	MOVR	r0x104D,W
     0039 0903                      1- 2451     	BTRSS	STATUS,2
     003A 3rrr                      1- 2452     	LGOTO	_00305_DS_
                                    1- 2453     	.line	262, "main.c"; 	if(workStep != 1)
                                    1- 2454     	BANKSEL	_workStep
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 01rr                      1- 2455     	MOVR	_workStep,W
     003D 2401                      1- 2456     	XORIA	0x01
     003E 0D03                      1- 2457     	BTRSC	STATUS,2
     003F 3rrr                      1- 2458     	LGOTO	_00301_DS_
                                    1- 2459     	.line	264, "main.c"; 	sharkCount = 5000;	//闪烁5秒
     0040 2188                      1- 2460     	MOVIA	0x88
                                    1- 2461     	BANKSEL	_sharkCount
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 00rr                      1- 2462     	MOVAR	_sharkCount
     0043 2113                      1- 2463     	MOVIA	0x13
     0044 00rr                      1- 2464     	MOVAR	(_sharkCount + 1)
                                    1- 2465     	.line	265, "main.c"; 	baiweiNum = 0;
                                    1- 2466     	BANKSEL	_baiweiNum
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 02rr                      1- 2467     	CLRR	_baiweiNum
                                    1- 2468     	.line	266, "main.c"; 	shiweiNum = 5;
     0047 2105                      1- 2469     	MOVIA	0x05
                                    1- 2470     	BANKSEL	_shiweiNum
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 00rr                      1- 2471     	MOVAR	_shiweiNum
                                    1- 2472     	.line	267, "main.c"; 	geweiNum = 0;
                                    1- 2473     	BANKSEL	_geweiNum
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 02rr                      1- 2474     	CLRR	_geweiNum
     004C                           1- 2475     _00301_DS_:
                                    1- 2476     	.line	269, "main.c"; 	workStep = 1;
     004C 2101                      1- 2477     	MOVIA	0x01
                                    1- 2478     	BANKSEL	_workStep
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1- 2479     	MOVAR	_workStep
                                    1- 2480     	.line	270, "main.c"; 	resetbit(PORTB, 4);
     004F 1Err                      1- 2481     	BCR	_PORTB,4
                                    1- 2482     	.line	271, "main.c"; 	resetbit(PORTB, 2);
     0050 1Drr                      1- 2483     	BCR	_PORTB,2
                                    1- 2484     	.line	272, "main.c"; 	setbit(PORTB, 0);
     0051 18rr                      1- 2485     	BSR	_PORTB,0
                                    1- 2486     	.line	273, "main.c"; 	if(realWork)			//真实充电，则一直闪烁
                                    1- 2487     	BANKSEL	_realWork
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1- 2488     	MOVR	_realWork,W
     0054 0D03                      1- 2489     	BTRSC	STATUS,2
     0055 3rrr                      1- 2490     	LGOTO	_00312_DS_
                                    1- 2491     	.line	274, "main.c"; 	sharkCount = 5000;	//闪烁5秒
     0056 2188                      1- 2492     	MOVIA	0x88
                                    1- 2493     	BANKSEL	_sharkCount
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1- 2494     	MOVAR	_sharkCount
     0059 2113                      1- 2495     	MOVIA	0x13
     005A 00rr                      1- 2496     	MOVAR	(_sharkCount + 1)
     005B 3rrr                      1- 2497     	LGOTO	_00312_DS_
     005C                           1- 2498     _00305_DS_:
                                    1- 2499     	.line	278, "main.c"; 	workStep = 0;
                                    1- 2500     	BANKSEL	_workStep
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 02rr                      1- 2501     	CLRR	_workStep
                                    1- 2502     	.line	279, "main.c"; 	ADDFullFlag = 0;
                                    1- 2503     	BANKSEL	_ADDFullFlag
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 02rr                      1- 2504     	CLRR	_ADDFullFlag
                                    1- 2505     	.line	280, "main.c"; 	realWork = 0;
                                    1- 2506     	BANKSEL	_realWork
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 02rr                      1- 2507     	CLRR	_realWork
                                    1- 2508     	.line	281, "main.c"; 	resetbit(PORTB, 0);
     0062 1Crr                      1- 2509     	BCR	_PORTB,0
                                    1- 2510     	.line	282, "main.c"; 	resetbit(PORTB, 4);
     0063 1Err                      1- 2511     	BCR	_PORTB,4
                                    1- 2512     	.line	283, "main.c"; 	resetbit(PORTB, 2);
     0064 1Drr                      1- 2513     	BCR	_PORTB,2
                                    1- 2514     	.line	284, "main.c"; 	setInput();
     0065 2rrr                      1- 2515     	LCALL	_setInput
     0066                           1- 2516     _00312_DS_:
                                    1- 2517     	.line	288, "main.c"; 	if( LVDFlag == 1 && addVDDFlag == 1 && keyOutCount == 0)
                                    1- 2518     	BANKSEL	_LVDFlag
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 01rr                      1- 2519     	MOVR	_LVDFlag,W
     0068 2401                      1- 2520     	XORIA	0x01
     0069 0903                      1- 2521     	BTRSS	STATUS,2
     006A 3rrr                      1- 2522     	LGOTO	_00314_DS_
                                    1- 2523     	BANKSEL	_addVDDFlag
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 01rr                      1- 2524     	MOVR	_addVDDFlag,W
     006D 2401                      1- 2525     	XORIA	0x01
     006E 0903                      1- 2526     	BTRSS	STATUS,2
     006F 3rrr                      1- 2527     	LGOTO	_00314_DS_
                                    1- 2528     	BANKSEL	_keyOutCount
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 01rr                      1- 2529     	MOVR	_keyOutCount,W
     0072 11rr                      1- 2530     	IORAR	(_keyOutCount + 1),W
     0073 0903                      1- 2531     	BTRSS	STATUS,2
     0074 3rrr                      1- 2532     	LGOTO	_00314_DS_
                                    1- 2533     	.line	290, "main.c"; 	keyOutCount = 500;
     0075 21F4                      1- 2534     	MOVIA	0xf4
     0076 00rr                      1- 2535     	MOVAR	_keyOutCount
     0077 2101                      1- 2536     	MOVIA	0x01
     0078 00rr                      1- 2537     	MOVAR	(_keyOutCount + 1)
                                    1- 2538     	.line	291, "main.c"; 	addVDDFlag = 0;
                                    1- 2539     	BANKSEL	_addVDDFlag
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 02rr                      1- 2540     	CLRR	_addVDDFlag
     007B                           1- 2541     _00314_DS_:
                                    1- 2542     	.line	293, "main.c"; 	if(saveWorkStep != workStep)
                                    1- 2543     	BANKSEL	_workStep
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 01rr                      1- 2544     	MOVR	_workStep,W
                                    1- 2545     	BANKSEL	_saveWorkStep
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 12rr                      1- 2546     	XORAR	_saveWorkStep,W
     007F 0D03                      1- 2547     	BTRSC	STATUS,2
     0080 3rrr                      1- 2548     	LGOTO	_00321_DS_
                                    1- 2549     	.line	295, "main.c"; 	saveWorkStep = workStep;
                                    1- 2550     	BANKSEL	_workStep
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 01rr                      1- 2551     	MOVR	_workStep,W
                                    1- 2552     	BANKSEL	_saveWorkStep
     0083 rrrr                      3-   71 m1      .banksel ram_address
     0084 00rr                      1- 2553     	MOVAR	_saveWorkStep
                                    1- 2554     	.line	296, "main.c"; 	if(realWork == 0 && workStep > 1)
                                    1- 2555     	BANKSEL	_realWork
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 01rr                      1- 2556     	MOVR	_realWork,W
     0087 0903                      1- 2557     	BTRSS	STATUS,2
     0088 3rrr                      1- 2558     	LGOTO	_00321_DS_
                                    1- 2559     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2560     ;;unsigned compare: left >= lit (0x2=2), size=1
     0089 2102                      1- 2561     	MOVIA	0x02
                                    1- 2562     	BANKSEL	_workStep
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 04rr                      1- 2563     	SUBAR	_workStep,W
     008C 0803                      1- 2564     	BTRSS	STATUS,0
     008D 3rrr                      1- 2565     	LGOTO	_00321_DS_
                                    1- 2566     	.line	299, "main.c"; 	keyOutCount = 300;
     008E 212C                      1- 2567     	MOVIA	0x2c
                                    1- 2568     	BANKSEL	_keyOutCount
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 00rr                      1- 2569     	MOVAR	_keyOutCount
     0091 2101                      1- 2570     	MOVIA	0x01
     0092 00rr                      1- 2571     	MOVAR	(_keyOutCount + 1)
                                    1- 2572     	.line	300, "main.c"; 	addVDDFlag = 1;
                                    1- 2573     	BANKSEL	_addVDDFlag
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 00rr                      1- 2574     	MOVAR	_addVDDFlag
     0095                           1- 2575     _00321_DS_:
                                    1- 2576     	.line	304, "main.c"; 	if(keyOutCount > 0)
                                    1- 2577     	BANKSEL	_keyOutCount
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 01rr                      1- 2578     	MOVR	_keyOutCount,W
     0097 11rr                      1- 2579     	IORAR	(_keyOutCount + 1),W
     0098 0903                      1- 2580     	BTRSS	STATUS,2
                                    1- 2581     	.line	305, "main.c"; 	setKeyPress();
     0099 2rrr                      1- 2582     	LCALL	_setKeyPress
                                    1- 2583     	.line	306, "main.c"; 	}
                                    1- 2584     	RETURN	
     009A 0010                      3-   26 m1      ret
                                    1- 2586     ;***
                                    1- 2587     ;  pBlock Stats: dbName = C
                                    1- 2588     ;***
                                    1- 2589     ;has an exit
                                    1- 2590     ;functions called:
                                    1- 2591     ;   _setInput
                                    1- 2592     ;   _gotoSleep
                                    1- 2593     ;   _setInput
                                    1- 2594     ;   _gotoSleep
                                    1- 2595     ;1 compiler assigned register :
                                    1- 2596     ;   r0x104E
                                    1- 2597     ;; Starting pCode block
                                    1- 2598     .segment "code"; module=main, function=_checkBatSta
     0000                           1- 2600     _checkBatSta:
                                    1- 2601     ; 2 exit points
                                    1- 2602     	.line	188, "main.c"; 	if(getbit(PORTA,5))
     0000 01rr                      1- 2603     	MOVR	_PORTA,W
     0001 2220                      1- 2604     	ANDIA	0x20
     0002 0903                      1- 2605     	BTRSS	STATUS,2
     0003 2101                      1- 2606     	MOVIA	0x01
                                    1- 2607     	BANKSEL	r0x104E
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 2608     	MOVAR	r0x104E
     0006 01rr                      1- 2609     	MOVR	r0x104E,W
     0007 0D03                      1- 2610     	BTRSC	STATUS,2
     0008 3rrr                      1- 2611     	LGOTO	_00007_DS_
                                    1- 2612     	.line	189, "main.c"; 	batHCount++;
                                    1- 2613     	BANKSEL	_batHCount
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 05rr                      1- 2614     	INCR	_batHCount,F
     000B                           1- 2615     _00007_DS_:
                                    1- 2616     	.line	190, "main.c"; 	if(++batCount >= 42)
                                    1- 2617     	BANKSEL	_batCount
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 2618     	INCR	_batCount,F
     000D 212A                      1- 2619     	MOVIA	0x2a
     000E 04rr                      1- 2620     	SUBAR	_batCount,W
     000F 0803                      1- 2621     	BTRSS	STATUS,0
     0010 3rrr                      1- 2622     	LGOTO	_00254_DS_
                                    1- 2623     	.line	192, "main.c"; 	if(batHCount == 0)
                                    1- 2624     	BANKSEL	_batHCount
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2625     	MOVR	_batHCount,W
     0013 0903                      1- 2626     	BTRSS	STATUS,2
     0014 3rrr                      1- 2627     	LGOTO	_00250_DS_
                                    1- 2628     	.line	194, "main.c"; 	realWork = 0;
                                    1- 2629     	BANKSEL	_realWork
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 2630     	CLRR	_realWork
                                    1- 2631     	.line	195, "main.c"; 	if(++sleepCount >= 50 && NotSleepFlag == 0)
                                    1- 2632     	BANKSEL	_sleepCount
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 05rr                      1- 2633     	INCR	_sleepCount,F
     0019 0D03                      1- 2634     	BTRSC	STATUS,2
     001A 05rr                      1- 2635     	INCR	(_sleepCount + 1),F
                                    1- 2636     ;;unsigned compare: left < lit (0x32=50), size=2
     001B 2100                      1- 2637     	MOVIA	0x00
     001C 04rr                      1- 2638     	SUBAR	(_sleepCount + 1),W
     001D 0903                      1- 2639     	BTRSS	STATUS,2
     001E 3rrr                      1- 2640     	LGOTO	_00290_DS_
     001F 2132                      1- 2641     	MOVIA	0x32
     0020 04rr                      1- 2642     	SUBAR	_sleepCount,W
     0021                           1- 2643     _00290_DS_:
     0021 0803                      1- 2644     	BTRSS	STATUS,0
     0022 3rrr                      1- 2645     	LGOTO	_00251_DS_
                                    1- 2646     	BANKSEL	_NotSleepFlag
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1- 2647     	MOVR	_NotSleepFlag,W
     0025 0903                      1- 2648     	BTRSS	STATUS,2
     0026 3rrr                      1- 2649     	LGOTO	_00251_DS_
                                    1- 2650     	.line	197, "main.c"; 	setInput();
     0027 2rrr                      1- 2651     	LCALL	_setInput
                                    1- 2652     	.line	198, "main.c"; 	gotoSleep();
     0028 2rrr                      1- 2653     	LCALL	_gotoSleep
     0029 3rrr                      1- 2654     	LGOTO	_00251_DS_
                                    1- 2655     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2656     ;;unsigned compare: left >= lit (0x4=4), size=1
     002A                           1- 2657     _00250_DS_:
                                    1- 2658     	.line	201, "main.c"; 	else if(batHCount > 3 && batHCount < 23)
     002A 2104                      1- 2659     	MOVIA	0x04
                                    1- 2660     	BANKSEL	_batHCount
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 04rr                      1- 2661     	SUBAR	_batHCount,W
     002D 0803                      1- 2662     	BTRSS	STATUS,0
     002E 3rrr                      1- 2663     	LGOTO	_00246_DS_
                                    1- 2664     ;;unsigned compare: left < lit (0x17=23), size=1
     002F 2117                      1- 2665     	MOVIA	0x17
     0030 04rr                      1- 2666     	SUBAR	_batHCount,W
     0031 0C03                      1- 2667     	BTRSC	STATUS,0
     0032 3rrr                      1- 2668     	LGOTO	_00246_DS_
                                    1- 2669     	.line	204, "main.c"; 	realWork = 1;
     0033 2101                      1- 2670     	MOVIA	0x01
                                    1- 2671     	BANKSEL	_realWork
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 2672     	MOVAR	_realWork
                                    1- 2673     	.line	205, "main.c"; 	sleepCount = 0;
                                    1- 2674     	BANKSEL	_sleepCount
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 02rr                      1- 2675     	CLRR	_sleepCount
     0038 02rr                      1- 2676     	CLRR	(_sleepCount + 1)
     0039 3rrr                      1- 2677     	LGOTO	_00251_DS_
                                    1- 2678     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2679     ;;unsigned compare: left >= lit (0x22=34), size=1
     003A                           1- 2680     _00246_DS_:
                                    1- 2681     	.line	207, "main.c"; 	else if(batHCount > 33 && batHCount < 41)
     003A 2122                      1- 2682     	MOVIA	0x22
                                    1- 2683     	BANKSEL	_batHCount
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 04rr                      1- 2684     	SUBAR	_batHCount,W
     003D 0803                      1- 2685     	BTRSS	STATUS,0
     003E 3rrr                      1- 2686     	LGOTO	_00242_DS_
                                    1- 2687     ;;unsigned compare: left < lit (0x29=41), size=1
     003F 2129                      1- 2688     	MOVIA	0x29
     0040 04rr                      1- 2689     	SUBAR	_batHCount,W
     0041 0C03                      1- 2690     	BTRSC	STATUS,0
     0042 3rrr                      1- 2691     	LGOTO	_00242_DS_
                                    1- 2692     	.line	210, "main.c"; 	realWork = 2;
     0043 2102                      1- 2693     	MOVIA	0x02
                                    1- 2694     	BANKSEL	_realWork
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 00rr                      1- 2695     	MOVAR	_realWork
                                    1- 2696     	.line	211, "main.c"; 	sleepCount = 0;
                                    1- 2697     	BANKSEL	_sleepCount
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 02rr                      1- 2698     	CLRR	_sleepCount
     0048 02rr                      1- 2699     	CLRR	(_sleepCount + 1)
     0049 3rrr                      1- 2700     	LGOTO	_00251_DS_
                                    1- 2701     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2702     ;;unsigned compare: left >= lit (0x18=24), size=1
     004A                           1- 2703     _00242_DS_:
                                    1- 2704     	.line	213, "main.c"; 	else if(batHCount > 23 && batHCount < 32)
     004A 2118                      1- 2705     	MOVIA	0x18
                                    1- 2706     	BANKSEL	_batHCount
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 04rr                      1- 2707     	SUBAR	_batHCount,W
     004D 0803                      1- 2708     	BTRSS	STATUS,0
     004E 3rrr                      1- 2709     	LGOTO	_00238_DS_
                                    1- 2710     ;;unsigned compare: left < lit (0x20=32), size=1
     004F 2120                      1- 2711     	MOVIA	0x20
     0050 04rr                      1- 2712     	SUBAR	_batHCount,W
     0051 0C03                      1- 2713     	BTRSC	STATUS,0
     0052 3rrr                      1- 2714     	LGOTO	_00238_DS_
                                    1- 2715     	.line	216, "main.c"; 	realWork = 3;
     0053 2103                      1- 2716     	MOVIA	0x03
                                    1- 2717     	BANKSEL	_realWork
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 00rr                      1- 2718     	MOVAR	_realWork
                                    1- 2719     	.line	217, "main.c"; 	sleepCount = 0;
                                    1- 2720     	BANKSEL	_sleepCount
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 02rr                      1- 2721     	CLRR	_sleepCount
     0058 02rr                      1- 2722     	CLRR	(_sleepCount + 1)
                                    1- 2723     	.line	218, "main.c"; 	ADDFullFlag = 1;
     0059 2101                      1- 2724     	MOVIA	0x01
                                    1- 2725     	BANKSEL	_ADDFullFlag
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1- 2726     	MOVAR	_ADDFullFlag
     005C 3rrr                      1- 2727     	LGOTO	_00251_DS_
     005D                           1- 2728     _00238_DS_:
                                    1- 2729     	.line	222, "main.c"; 	realWork = 4;
     005D 2104                      1- 2730     	MOVIA	0x04
                                    1- 2731     	BANKSEL	_realWork
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 00rr                      1- 2732     	MOVAR	_realWork
                                    1- 2733     	.line	223, "main.c"; 	sleepCount = 0;
                                    1- 2734     	BANKSEL	_sleepCount
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 02rr                      1- 2735     	CLRR	_sleepCount
     0062 02rr                      1- 2736     	CLRR	(_sleepCount + 1)
     0063                           1- 2737     _00251_DS_:
                                    1- 2738     	.line	225, "main.c"; 	batCount = 0;
                                    1- 2739     	BANKSEL	_batCount
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 02rr                      1- 2740     	CLRR	_batCount
                                    1- 2741     	.line	226, "main.c"; 	batHCount = 0;
                                    1- 2742     	BANKSEL	_batHCount
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 02rr                      1- 2743     	CLRR	_batHCount
     0067                           1- 2744     _00254_DS_:
                                    1- 2745     	.line	228, "main.c"; 	}
                                    1- 2746     	RETURN	
     0067 0010                      3-   26 m1      ret
                                    1- 2747     ; exit point of _checkBatSta
                                    1- 2749     ;***
                                    1- 2750     ;  pBlock Stats: dbName = C
                                    1- 2751     ;***
                                    1- 2752     ;functions called:
                                    1- 2753     ;   _checkMF52AD
                                    1- 2754     ;   _checkQuarterVDD
                                    1- 2755     ;   _checkMF52AD
                                    1- 2756     ;   _checkQuarterVDD
                                    1- 2757     ;; Starting pCode block
                                    1- 2758     .segment "code"; module=main, function=_checkAD
     0000                           1- 2760     _checkAD:
                                    1- 2761     ; 0 exit points
                                    1- 2762     	.line	173, "main.c"; 	if(workStep == 3)
                                    1- 2763     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2764     	MOVR	_workStep,W
     0002 2403                      1- 2765     	XORIA	0x03
     0003 0903                      1- 2766     	BTRSS	STATUS,2
     0004 3rrr                      1- 2767     	LGOTO	_00217_DS_
                                    1- 2768     	.line	175, "main.c"; 	checkMF52AD();
     0005 2rrr                      1- 2769     	LCALL	_checkMF52AD
     0006 3rrr                      1- 2770     	LGOTO	_00219_DS_
     0007                           1- 2771     _00217_DS_:
                                    1- 2772     	.line	178, "main.c"; 	else if(workStep == 1 || workStep == 2)
                                    1- 2773     	BANKSEL	_workStep
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1- 2774     	MOVR	_workStep,W
     0009 2401                      1- 2775     	XORIA	0x01
     000A 0D03                      1- 2776     	BTRSC	STATUS,2
     000B 3rrr                      1- 2777     	LGOTO	_00213_DS_
     000C 01rr                      1- 2778     	MOVR	_workStep,W
     000D 2402                      1- 2779     	XORIA	0x02
     000E 0D03                      1- 2780     	BTRSC	STATUS,2
     000F                           1- 2781     _00213_DS_:
                                    1- 2782     	.line	180, "main.c"; 	checkQuarterVDD();
     000F 2rrr                      1- 2783     	LCALL	_checkQuarterVDD
     0010                           1- 2784     _00219_DS_:
                                    1- 2785     	.line	182, "main.c"; 	}
                                    1- 2786     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 2788     ;***
                                    1- 2789     ;  pBlock Stats: dbName = C
                                    1- 2790     ;***
                                    1- 2791     ;has an exit
                                    1- 2792     ;functions called:
                                    1- 2793     ;   _showBaiwei
                                    1- 2794     ;   __gptrget1
                                    1- 2795     ;   _showNubShiwei
                                    1- 2796     ;   __gptrget1
                                    1- 2797     ;   _showNubShiwei
                                    1- 2798     ;   __gptrget1
                                    1- 2799     ;   _showNubGewei
                                    1- 2800     ;   _showBaiwei
                                    1- 2801     ;   __gptrget1
                                    1- 2802     ;   _showNubShiwei
                                    1- 2803     ;   __gptrget1
                                    1- 2804     ;   _showNubShiwei
                                    1- 2805     ;   __gptrget1
                                    1- 2806     ;   _showNubGewei
                                    1- 2807     ;5 compiler assigned registers:
                                    1- 2808     ;   r0x104F
                                    1- 2809     ;   r0x1050
                                    1- 2810     ;   STK01
                                    1- 2811     ;   STK00
                                    1- 2812     ;   r0x1051
                                    1- 2813     ;; Starting pCode block
                                    1- 2814     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2816     _refreshNub:
                                    1- 2817     ; 2 exit points
                                    1- 2818     	.line	149, "main.c"; 	if(LVDFlag == 1)
                                    1- 2819     	BANKSEL	_LVDFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2820     	MOVR	_LVDFlag,W
     0002 2401                      1- 2821     	XORIA	0x01
     0003 0903                      1- 2822     	BTRSS	STATUS,2
     0004 3rrr                      1- 2823     	LGOTO	_00200_DS_
                                    1- 2824     	.line	151, "main.c"; 	tempbaiweiNum = tempshiweiNum = tempgeweiNum = 0;
                                    1- 2825     	BANKSEL	_tempgeweiNum
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 2826     	CLRR	_tempgeweiNum
                                    1- 2827     	BANKSEL	_tempshiweiNum
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 2828     	CLRR	_tempshiweiNum
                                    1- 2829     	BANKSEL	_tempbaiweiNum
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 2830     	CLRR	_tempbaiweiNum
     000B 3rrr                      1- 2831     	LGOTO	_00201_DS_
     000C                           1- 2832     _00200_DS_:
                                    1- 2833     	.line	153, "main.c"; 	else if(++refreshCount >= 5)
                                    1- 2834     	BANKSEL	_refreshCount
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 05rr                      1- 2835     	INCR	_refreshCount,F
                                    1- 2836     ;;unsigned compare: left < lit (0x5=5), size=1
     000E 2105                      1- 2837     	MOVIA	0x05
     000F 04rr                      1- 2838     	SUBAR	_refreshCount,W
     0010 0803                      1- 2839     	BTRSS	STATUS,0
     0011 3rrr                      1- 2840     	LGOTO	_00201_DS_
                                    1- 2841     	.line	155, "main.c"; 	refreshCount = 0;
     0012 02rr                      1- 2842     	CLRR	_refreshCount
                                    1- 2843     	.line	156, "main.c"; 	tempbaiweiNum = baiweiNum;
                                    1- 2844     	BANKSEL	_baiweiNum
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 2845     	MOVR	_baiweiNum,W
                                    1- 2846     	BANKSEL	_tempbaiweiNum
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 00rr                      1- 2847     	MOVAR	_tempbaiweiNum
                                    1- 2848     	.line	157, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2849     	BANKSEL	_shiweiNum
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1- 2850     	MOVR	_shiweiNum,W
                                    1- 2851     	BANKSEL	_tempshiweiNum
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 2852     	MOVAR	_tempshiweiNum
                                    1- 2853     	.line	158, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2854     	BANKSEL	_geweiNum
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 2855     	MOVR	_geweiNum,W
                                    1- 2856     	BANKSEL	_tempgeweiNum
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 2857     	MOVAR	_tempgeweiNum
     001F                           1- 2858     _00201_DS_:
                                    1- 2859     	.line	161, "main.c"; 	if(tempbaiweiNum)
                                    1- 2860     	BANKSEL	_tempbaiweiNum
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 2861     	MOVR	_tempbaiweiNum,W
     0021 0903                      1- 2862     	BTRSS	STATUS,2
                                    1- 2863     	.line	162, "main.c"; 	showBaiwei();
     0022 2rrr                      1- 2864     	LCALL	_showBaiwei
                                    1- 2865     	.line	163, "main.c"; 	if(tempbaiweiNum)
                                    1- 2866     	BANKSEL	_tempbaiweiNum
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1- 2867     	MOVR	_tempbaiweiNum,W
     0025 0D03                      1- 2868     	BTRSC	STATUS,2
     0026 3rrr                      1- 2869     	LGOTO	_00207_DS_
                                    1- 2870     	.line	164, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2871     	BANKSEL	_tempshiweiNum
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 2872     	MOVR	_tempshiweiNum,W
     0029 25rr                      1- 2873     	ADDIA	(_numArray + 0)
                                    1- 2874     	BANKSEL	r0x104F
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 00rr                      1- 2875     	MOVAR	r0x104F
     002C 21rr                      1- 2876     	MOVIA	((_numArray + 0) >> 8) & 0xff
     002D 0C03                      1- 2877     	BTRSC	STATUS,0
     002E 2501                      1- 2878     	ADDIA	0x01
                                    1- 2879     	BANKSEL	r0x1050
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 00rr                      1- 2880     	MOVAR	r0x1050
                                    1- 2881     	BANKSEL	r0x104F
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1- 2882     	MOVR	r0x104F,W
     0033 00rr                      1- 2883     	MOVAR	STK01
                                    1- 2884     	BANKSEL	r0x1050
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 2885     	MOVR	r0x1050,W
     0036 00rr                      1- 2886     	MOVAR	STK00
     0037 2100                      1- 2887     	MOVIA	0x00
     0038 2rrr                      1- 2888     	LCALL	__gptrget1
                                    1- 2889     	BANKSEL	r0x1051
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 00rr                      1- 2890     	MOVAR	r0x1051
     003B 2rrr                      1- 2891     	LCALL	_showNubShiwei
     003C 3rrr                      1- 2892     	LGOTO	_00208_DS_
     003D                           1- 2893     _00207_DS_:
                                    1- 2894     	.line	165, "main.c"; 	else if(tempshiweiNum)
                                    1- 2895     	BANKSEL	_tempshiweiNum
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1- 2896     	MOVR	_tempshiweiNum,W
     003F 0D03                      1- 2897     	BTRSC	STATUS,2
     0040 3rrr                      1- 2898     	LGOTO	_00208_DS_
                                    1- 2899     	.line	166, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
     0041 01rr                      1- 2900     	MOVR	_tempshiweiNum,W
     0042 25rr                      1- 2901     	ADDIA	(_numArray + 0)
                                    1- 2902     	BANKSEL	r0x104F
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 00rr                      1- 2903     	MOVAR	r0x104F
     0045 21rr                      1- 2904     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0046 0C03                      1- 2905     	BTRSC	STATUS,0
     0047 2501                      1- 2906     	ADDIA	0x01
                                    1- 2907     	BANKSEL	r0x1050
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 00rr                      1- 2908     	MOVAR	r0x1050
                                    1- 2909     	BANKSEL	r0x104F
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 01rr                      1- 2910     	MOVR	r0x104F,W
     004C 00rr                      1- 2911     	MOVAR	STK01
                                    1- 2912     	BANKSEL	r0x1050
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1- 2913     	MOVR	r0x1050,W
     004F 00rr                      1- 2914     	MOVAR	STK00
     0050 2100                      1- 2915     	MOVIA	0x00
     0051 2rrr                      1- 2916     	LCALL	__gptrget1
                                    1- 2917     	BANKSEL	r0x1051
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 00rr                      1- 2918     	MOVAR	r0x1051
     0054 2rrr                      1- 2919     	LCALL	_showNubShiwei
     0055                           1- 2920     _00208_DS_:
                                    1- 2921     	.line	167, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2922     	BANKSEL	_tempgeweiNum
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1- 2923     	MOVR	_tempgeweiNum,W
     0057 25rr                      1- 2924     	ADDIA	(_numArray + 0)
                                    1- 2925     	BANKSEL	r0x104F
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 00rr                      1- 2926     	MOVAR	r0x104F
     005A 21rr                      1- 2927     	MOVIA	((_numArray + 0) >> 8) & 0xff
     005B 0C03                      1- 2928     	BTRSC	STATUS,0
     005C 2501                      1- 2929     	ADDIA	0x01
                                    1- 2930     	BANKSEL	r0x1050
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 00rr                      1- 2931     	MOVAR	r0x1050
                                    1- 2932     	BANKSEL	r0x104F
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 01rr                      1- 2933     	MOVR	r0x104F,W
     0061 00rr                      1- 2934     	MOVAR	STK01
                                    1- 2935     	BANKSEL	r0x1050
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 01rr                      1- 2936     	MOVR	r0x1050,W
     0064 00rr                      1- 2937     	MOVAR	STK00
     0065 2100                      1- 2938     	MOVIA	0x00
     0066 2rrr                      1- 2939     	LCALL	__gptrget1
                                    1- 2940     	BANKSEL	r0x1051
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1- 2941     	MOVAR	r0x1051
     0069 2rrr                      1- 2942     	LCALL	_showNubGewei
                                    1- 2943     	.line	168, "main.c"; 	}
                                    1- 2944     	RETURN	
     006A 0010                      3-   26 m1      ret
                                    1- 2945     ; exit point of _refreshNub
                                    1- 2948     ;	code size estimation:
                                    1- 2949     ;	 1208+  345 =  1553 instructions ( 3796 byte)
                                    1- 2951     	end
                                    1- 2951     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuint               Label    00000000
__gptrget1              Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    00000007
_00002_DS_              Label    0000001B
_00003_DS_              Label    00000029
_00004_DS_              Label    0000002E
_00005_DS_              Label    00000025
_00006_DS_              Label    00000025
_00007_DS_              Label    0000000B
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00120_DS_              Label    00000035
_00122_DS_              Label    0000003B
_00123_DS_              Label    0000003C
_00129_DS_              Label    00000069
_00131_DS_              Label    00000050
_00132_DS_              Label    00000052
_00137_DS_              Label    00000042
_00140_DS_              Label    0000001A
_00143_DS_              Label    00000002
_00188_DS_              Label    0000002D
_00191_DS_              Label    00000065
_00192_DS_              Label    00000074
_00200_DS_              Label    0000000C
_00201_DS_              Label    0000001F
_00207_DS_              Label    0000003D
_00208_DS_              Label    00000055
_00213_DS_              Label    0000000F
_00217_DS_              Label    00000007
_00219_DS_              Label    00000010
_00238_DS_              Label    0000005D
_00242_DS_              Label    0000004A
_00246_DS_              Label    0000003A
_00250_DS_              Label    0000002A
_00251_DS_              Label    00000063
_00254_DS_              Label    00000067
_00290_DS_              Label    00000021
_00296_DS_              Label    00000014
_00299_DS_              Label    0000002B
_00301_DS_              Label    0000004C
_00305_DS_              Label    0000005C
_00308_DS_              Label    00000032
_00311_DS_              Label    00000016
_00312_DS_              Label    00000066
_00314_DS_              Label    0000007B
_00321_DS_              Label    00000095
_00376_DS_              Label    00000030
_00379_DS_              Label    00000025
_00382_DS_              Label    0000001A
_00385_DS_              Label    0000000F
_00387_DS_              Label    00000031
_00401_DS_              Label    0000000B
_00402_DS_              Label    00000016
_00403_DS_              Label    00000021
_00404_DS_              Label    0000002C
_00422_DS_              Label    0000003B
_00424_DS_              Label    00000047
_00426_DS_              Label    00000054
_00428_DS_              Label    00000056
_00439_DS_              Label    00000037
_00440_DS_              Label    00000042
_00441_DS_              Label    0000004E
_00448_DS_              Label    00000010
_00450_DS_              Label    00000031
_00457_DS_              Label    0000000B
_00459_DS_              Label    0000002C
_00465_DS_              Label    0000000C
_00470_DS_              Label    00000000
_00477_DS_              Label    00000009
_00479_DS_              Label    0000001C
_00488_DS_              Label    00000013
_00498_DS_              Label    0000004E
_00501_DS_              Label    0000003C
_00504_DS_              Label    0000002B
_00507_DS_              Label    00000019
_00509_DS_              Label    0000005E
_00529_DS_              Label    0000000E
_00530_DS_              Label    00000020
_00531_DS_              Label    00000032
_00532_DS_              Label    00000043
_00533_DS_              Label    00000055
_00539_DS_              Label    000001CC
_00542_DS_              Label    000001A1
_00545_DS_              Label    00000175
_00548_DS_              Label    00000149
_00551_DS_              Label    0000011D
_00554_DS_              Label    000000F1
_00557_DS_              Label    000000C5
_00560_DS_              Label    00000099
_00563_DS_              Label    0000006D
_00566_DS_              Label    00000041
_00569_DS_              Label    00000011
_00571_DS_              Label    000001D2
_00606_DS_              Label    00000007
_00607_DS_              Label    00000018
_00608_DS_              Label    00000048
_00609_DS_              Label    00000074
_00610_DS_              Label    000000A0
_00611_DS_              Label    000000CC
_00612_DS_              Label    000000F8
_00613_DS_              Label    00000124
_00614_DS_              Label    00000150
_00615_DS_              Label    0000017C
_00616_DS_              Label    000001A8
_00624_DS_              Label    00000013
_00626_DS_              Label    0000002E
_00634_DS_              Label    00000025
_A2                     Label    00000000
_A3                     Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADDFullFlag            Label    00000000
_addVDDFlag             Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_B1                     Label    00000000
_B2                     Label    00000000
_B3                     Label    00000000
_baiweiNum              Label    00000000
_batCount               Label    00000000
_batHCount              Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_C1                     Label    00000000
_C2                     Label    00000000
_C3                     Label    00000000
_checkAD                Label    00000000
_checkBatSta            Label    00000000
_checkLVD               Label    00000000
_checkMF52AD            Label    00000000
_checkQuarterVDD        Label    00000000
_CMPCR                  Label    00000000
_D2                     Label    00000000
_D3                     Label    00000000
_delay                  Label    00000000
_delayms                Label    00000000
_E2                     Label    00000000
_E3                     Label    00000000
_F_AIN6_Convert         Label    00000000
_F_Quarter_VDD_Convert  Label    00000000
_F_wait_eoc             Label    00000000
_F2                     Label    00000000
_F3                     Label    00000000
_FSR                    Label    00000000
_G2                     Label    00000000
_G3                     Label    00000000
_geweiNum               Label    00000000
_gotoSleep              Label    00000000
_hotFlag                Label    00000000
_INDF                   Label    00000000
_init                   Label    00000000
_initAD                 Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCon                 Label    00000000
_keyOutCount            Label    00000000
_LVDFlag                Label    00000000
_main                   Label    00000000
_NotSleepFlag           Label    00000000
_nubCount               Label    00000000
_numArray               Label    00000000
_numFlag                Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN6_DATA            Label    00000000
_R_AIN6_DATA_LB         Label    00000000
_R_Quarter_VDD_DATA     Label    00000000
_R_Quarter_VDD_DATA_LB  Label    00000000
_realWork               Label    00000000
_refreshCount           Label    00000000
_refreshNub             Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_saveWorkStep           Label    00000000
_setHightOutput         Label    00000000
_setInput               Label    00000000
_setKeyPress            Label    00000000
_setlowOutput           Label    00000000
_setOutput              Label    00000000
_sharkCount             Label    00000000
_shiweiNum              Label    00000000
_showBaiwei             Label    00000000
_showNub                Label    00000000
_showNubGewei           Label    00000000
_showNubGewei2          Label    00000000
_showNubShiwei          Label    00000000
_showNubShiwei2         Label    00000000
_sleepCount             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempbaiweiNum          Label    00000000
_tempgeweiNum           Label    00000000
_tempshiweiNum          Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_translateTempAD        Label    00000000
_translateVDDAD         Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1034                 Label    00000000
r0x1035                 Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103E                 Label    00000000
r0x103F                 Label    00000000
r0x1040                 Label    00000000
r0x1041                 Label    00000000
r0x1044                 Label    00000000
r0x1047                 Label    00000000
r0x1048                 Label    00000000
r0x104B                 Label    00000000
r0x104C                 Label    00000000
r0x104D                 Label    00000000
r0x104E                 Label    00000000
r0x104F                 Label    00000000
r0x1050                 Label    00000000
r0x1051                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
