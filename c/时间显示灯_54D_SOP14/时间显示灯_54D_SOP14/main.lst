
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_VK1S68C_Init
                                    1-   15     	extern	_VK1S68C_Disp_Set
                                    1-   16     	extern	_VK1S68C_Disp_AutoAdd1Addr
                                    1-   17     	extern	_VK1S68C_Disp_FixedAddr
                                    1-   18     	extern	_VK1S68C_Main
                                    1-   19     	extern	_genTable
                                    1-   20     	extern	_showNub
                                    1-   21     	extern	_showTime
                                    1-   22     	extern	_VK1S68C_KeyScan
                                    1-   23     	extern	_closeTime
                                    1-   24     	extern	_disPlayMode
                                    1-   25     	extern	_irwork
                                    1-   26     	extern	_irpros
                                    1-   27     	extern	_setPWMduty
                                    1-   28     	extern	_setLow
                                    1-   29     	extern	_setHight
                                    1-   30     	extern	_keyCallBack
                                    1-   31     	extern	_powerCtr
                                    1-   32     	extern	_PORTAbits
                                    1-   33     	extern	_PORTBbits
                                    1-   34     	extern	_PCONbits
                                    1-   35     	extern	_BWUCONbits
                                    1-   36     	extern	_ABPLCONbits
                                    1-   37     	extern	_BPHCONbits
                                    1-   38     	extern	_INTEbits
                                    1-   39     	extern	_INTFbits
                                    1-   40     	extern	_AWUCONbits
                                    1-   41     	extern	_INTEDGbits
                                    1-   42     	extern	_RFCbits
                                    1-   43     	extern	_INTE2bits
                                    1-   44     	extern	_DPFlag
                                    1-   45     	extern	_INDF
                                    1-   46     	extern	_TMR0
                                    1-   47     	extern	_PCL
                                    1-   48     	extern	_STATUS
                                    1-   49     	extern	_FSR
                                    1-   50     	extern	_PORTA
                                    1-   51     	extern	_PORTB
                                    1-   52     	extern	_PCON
                                    1-   53     	extern	_BWUCON
                                    1-   54     	extern	_PCHBUF
                                    1-   55     	extern	_ABPLCON
                                    1-   56     	extern	_BPHCON
                                    1-   57     	extern	_INTE
                                    1-   58     	extern	_INTF
                                    1-   59     	extern	_AWUCON
                                    1-   60     	extern	_INTEDG
                                    1-   61     	extern	_TMRH
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM34RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_P2CR1
                                    1-   75     	extern	_PWM2DUTY
                                    1-   76     	extern	_OSCCR
                                    1-   77     	extern	_TMR3
                                    1-   78     	extern	_T3CR1
                                    1-   79     	extern	_T3CR2
                                    1-   80     	extern	_PWM3DUTY
                                    1-   81     	extern	_PS3CV
                                    1-   82     	extern	_P4CR1
                                    1-   83     	extern	_PWM4DUTY
                                    1-   84     	extern	_P5CR1
                                    1-   85     	extern	_PWM5DUTY
                                    1-   86     	extern	_PWM5RH
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	__nyc_ny8_startup
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_keyRead2
                                    1-  103     	extern	_keyRead
                                    1-  104     	extern	_whiteOFF
                                    1-  105     	extern	_whiteOn
                                    1-  106     	extern	_yellowOFF
                                    1-  107     	extern	_yellowOn
                                    1-  108     	extern	_timeCtr
                                    1-  109     	extern	_ledCtr
                                    1-  110     	extern	_pwCtr
                                    1-  111     	extern	_keyCtr
                                    1-  112     	extern	_gotoSleep
                                    1-  113     	extern	_proData
                                    1-  114     	extern	_GetOneByte
                                    1-  115     	extern	_cleanData
                                    1-  116     	extern	_isr
                                    1-  117     	extern	_proHight
                                    1-  118     	extern	_proLow
                                    1-  119     	extern	_main
                                    1-  120     	extern	_IntFlag
                                    1-  121     	extern	_count
                                    1-  122     	extern	_bitIndex
                                    1-  123     	extern	_data1
                                    1-  124     	extern	_data2
                                    1-  125     	extern	_data3
                                    1-  126     	extern	_data4
                                    1-  127     	extern	_irCode
                                    1-  128     	extern	_irCode2
                                    1-  129     	extern	_value
                                    1-  130     	extern	_sleepFlag
                                    1-  131     	extern	_sleepCount
                                    1-  132     	extern	_keyTime
                                    1-  133     	extern	_lowTime
                                    1-  134     	extern	_Status
                                    1-  135     	extern	_proTime
                                    1-  136     	extern	_count1s
                                    1-  137     	extern	_ledDuty
                                    1-  138     	extern	_deadTime
                                    1-  139     	extern	_hour
                                    1-  140     	extern	_min
                                    1-  141     	extern	_sec
                                    1-  142     	extern	_keyCount
                                    1-  143     	extern	_preKey
                                    1-  144     	extern	_shanshuo
                                    1-  145     	extern	_LedStatus
                                    1-  146     	extern	_ledStep
                                    1-  147     	extern	_keyNub
                                    1-  148     	extern	_keyCount2
                                    1-  149     	extern	_tempCount
                                    1-  150     	extern	_count1S
                                    1-  151     	extern	_intCount
                                    1-  152     	extern	_Status2
                                    1-  153     	extern	_T1Counter
                                    1-  154     	extern	_accTimeH
                                    1-  156     	extern PSAVE
                                    1-  157     	extern SSAVE
                                    1-  158     	extern WSAVE
                                    1-  159     	extern STK12
                                    1-  160     	extern STK11
                                    1-  161     	extern STK10
                                    1-  162     	extern STK09
                                    1-  163     	extern STK08
                                    1-  164     	extern STK07
                                    1-  165     	extern STK06
                                    1-  166     	extern STK05
                                    1-  167     	extern STK04
                                    1-  168     	extern STK03
                                    1-  169     	extern STK02
                                    1-  170     	extern STK01
                                    1-  171     	extern STK00
                                    1-  173     .segment "uninit", 0x20000040
 20000040                           1-  174     PSAVE:
                                    1-  175     	.res 1
 20000041                           1-  176     SSAVE:
                                    1-  177     	.res 1
 20000042                           1-  178     WSAVE:
                                    1-  179     	.res 1
 20000043                           1-  180     STK12:
                                    1-  181     	.res 1
 20000044                           1-  182     STK11:
                                    1-  183     	.res 1
 20000045                           1-  184     STK10:
                                    1-  185     	.res 1
 20000046                           1-  186     STK09:
                                    1-  187     	.res 1
 20000047                           1-  188     STK08:
                                    1-  189     	.res 1
 20000048                           1-  190     STK07:
                                    1-  191     	.res 1
 20000049                           1-  192     STK06:
                                    1-  193     	.res 1
 2000004A                           1-  194     STK05:
                                    1-  195     	.res 1
 2000004B                           1-  196     STK04:
                                    1-  197     	.res 1
 2000004C                           1-  198     STK03:
                                    1-  199     	.res 1
 2000004D                           1-  200     STK02:
                                    1-  201     	.res 1
 2000004E                           1-  202     STK01:
                                    1-  203     	.res 1
 2000004F                           1-  204     STK00:
                                    1-  205     	.res 1
                                    1-  207     ;--------------------------------------------------------
                                    1-  208     ; global definitions
                                    1-  209     ;--------------------------------------------------------
                                    1-  210     .segment "uninit"
     0000                           1-  211     _IntFlag:
                                    1-  212     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     _count:
                                    1-  217     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     _bitIndex:
                                    1-  222     	.res	1
                                    1-  225     .segment "uninit"
     0000                           1-  226     _data1:
                                    1-  227     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     _data2:
                                    1-  232     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     _data3:
                                    1-  237     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     _data4:
                                    1-  242     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     _irCode:
                                    1-  247     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     _irCode2:
                                    1-  252     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     _value:
                                    1-  257     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     _T1Counter:
                                    1-  262     	.res	2
                                    1-  265     ;--------------------------------------------------------
                                    1-  266     ; absolute symbol definitions
                                    1-  267     ;--------------------------------------------------------
                                    1-  268     ;--------------------------------------------------------
                                    1-  269     ; compiler-defined variables
                                    1-  270     ;--------------------------------------------------------
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x102B:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x102C:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x102D:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x102A:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1029:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1028:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x1027:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x1026:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x1025:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x1024:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x1023:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x1022:
                                    1-  306     	.res	1
                                    1-  307     ;--------------------------------------------------------
                                    1-  308     ; initialized data
                                    1-  309     ;--------------------------------------------------------
                                    1-  311     .segment "idata"
     0000                           1-  312     _sleepFlag:
     0000 0000                      1-  313     	dw	0x00
                                    1-  317     .segment "idata"
     0000                           1-  318     _sleepCount:
     0000 0000 0000                 1-  319     	dw	0x00, 0x00
                                    1-  323     .segment "idata"
     0000                           1-  324     _keyTime:
     0000 0000                      1-  325     	dw	0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _lowTime:
     0000 0000                      1-  331     	dw	0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _Status:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _proTime:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _count1s:
     0000 0000                      1-  349     	dw	0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _ledDuty:
     0000 0008                      1-  355     	dw	0x08
                                    1-  359     .segment "idata"
     0000                           1-  360     _deadTime:
     0000 0000 0000                 1-  361     	dw	0x00, 0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _hour:
     0000 000C                      1-  367     	dw	0x0c
                                    1-  371     .segment "idata"
     0000                           1-  372     _min:
     0000 0019                      1-  373     	dw	0x19
                                    1-  377     .segment "idata"
     0000                           1-  378     _sec:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _keyCount:
     0000 0000 0000                 1-  385     	dw	0x00, 0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _preKey:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _shanshuo:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _LedStatus:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _ledStep:
     0000 0001                      1-  409     	dw	0x01
                                    1-  413     .segment "idata"
     0000                           1-  414     _keyNub:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _keyCount2:
     0000 0000 0000                 1-  421     	dw	0x00, 0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _tempCount:
     0000 0000                      1-  427     	dw	0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _count1S:
     0000 0000                      1-  433     	dw	0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _intCount:
     0000 0000                      1-  439     	dw	0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _Status2:
     0000 0000                      1-  445     	dw	0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _accTimeH:
     0000 0000                      1-  451     	dw	0x00
                                    1-  454     ;--------------------------------------------------------
                                    1-  455     ; overlayable items in internal ram 
                                    1-  456     ;--------------------------------------------------------
                                    1-  457     ;	udata_ovr
                                    1-  458     ;--------------------------------------------------------
                                    1-  459     ; reset vector 
                                    1-  460     ;--------------------------------------------------------
                                    1-  461     ORG	0x0000
     0000 3rrr                      1-  462     	LGOTO	__nyc_ny8_startup
                                    1-  463     ;--------------------------------------------------------
                                    1-  464     ; interrupt and initialization code
                                    1-  465     ;--------------------------------------------------------
                                    1-  466     ORG 0x0008
     0008 3rrr                      1-  467     	lgoto	__sdcc_interrupt
                                    1-  469     .segment "code"
     0000                           1-  470     __sdcc_interrupt:
                                    1-  471     ;***
                                    1-  472     ;  pBlock Stats: dbName = I
                                    1-  473     ;***
                                    1-  474     ;2 compiler assigned registers:
                                    1-  475     ;   STK00
                                    1-  476     ;   STK01
                                    1-  477     ;; Starting pCode block
     0000                           1-  478     _isr:
                                    1-  479     ; 0 exit points
                                    1-  480     	.line	116, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  481     	MOVAR	WSAVE
     0001 1503                      1-  482     	SWAPR	STATUS,W
     0002 0283                      1-  483     	CLRR	STATUS
     0003 00rr                      1-  484     	MOVAR	SSAVE
     0004 010A                      1-  485     	MOVR	PCHBUF,W
     0005 028A                      1-  486     	CLRR	PCHBUF
     0006 00rr                      1-  487     	MOVAR	PSAVE
     0007 0104                      1-  488     	MOVR	FSR,W
                                    1-  489     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  490     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  491     	MOVR	STK00,W
                                    1-  492     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  493     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  494     	MOVR	STK01,W
                                    1-  495     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  496     	MOVAR	___sdcc_saved_stk01
                                    1-  497     	.line	118, "main.c"; 	if(INTFbits.T1IF)
     0010 09rr                      1-  498     	BTRSS	_INTFbits,3
     0011 3rrr                      1-  499     	LGOTO	_00112_DS_
                                    1-  500     	.line	120, "main.c"; 	accTimeH++;		//4.096msִ��һ��
                                    1-  501     	BANKSEL	_accTimeH
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 05rr                      1-  502     	INCR	_accTimeH,F
                                    1-  503     	.line	121, "main.c"; 	if(++count >= 4)
                                    1-  504     	BANKSEL	_count
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  505     	INCR	_count,F
                                    1-  506     ;;unsigned compare: left < lit (0x4=4), size=1
     0016 2104                      1-  507     	MOVIA	0x04
     0017 04rr                      1-  508     	SUBAR	_count,W
     0018 0803                      1-  509     	BTRSS	STATUS,0
     0019 3rrr                      1-  510     	LGOTO	_00110_DS_
                                    1-  511     	.line	123, "main.c"; 	count = 0;
     001A 02rr                      1-  512     	CLRR	_count
                                    1-  513     	.line	124, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  514     	MOVIA	0x01
                                    1-  515     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  516     	MOVAR	_IntFlag
                                    1-  517     	.line	125, "main.c"; 	if(shanshuo)
                                    1-  518     	BANKSEL	_shanshuo
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1-  519     	MOVR	_shanshuo,W
     0020 0903                      1-  520     	BTRSS	STATUS,2
                                    1-  521     	.line	127, "main.c"; 	shanshuo--;
     0021 06rr                      1-  522     	DECR	_shanshuo,F
                                    1-  523     	.line	130, "main.c"; 	if(++tempCount >= 62)
                                    1-  524     	BANKSEL	_tempCount
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  525     	INCR	_tempCount,F
     0024 213E                      1-  526     	MOVIA	0x3e
     0025 04rr                      1-  527     	SUBAR	_tempCount,W
     0026 0C03                      1-  528     	BTRSC	STATUS,0
                                    1-  529     	.line	132, "main.c"; 	tempCount = 0;
     0027 02rr                      1-  530     	CLRR	_tempCount
     0028                           1-  531     _00110_DS_:
                                    1-  532     	.line	138, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR1);	// Clear T1IF flag bit	
     0028 21F7                      1-  533     	MOVIA	0xf7
     0029 00rr                      1-  534     	MOVAR	_INTF
     002A                           1-  535     _00112_DS_:
                                    1-  536     	.line	141, "main.c"; 	if(INTFbits.T0IF)
     002A 08rr                      1-  537     	BTRSS	_INTFbits,0
     002B 3rrr                      1-  538     	LGOTO	_00125_DS_
                                    1-  539     	.line	143, "main.c"; 	TMR0 += 191;
     002C 21BF                      1-  540     	MOVIA	0xbf
     002D 03rr                      1-  541     	ADDAR	_TMR0,F
                                    1-  542     	.line	145, "main.c"; 	count1sFlag = 1;
                                    1-  543     	BANKSEL	_Status2
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 1Brr                      1-  544     	BSR	_Status2,6
                                    1-  545     	.line	146, "main.c"; 	if(timeFlag && deadTime > 0)
     0030 09rr                      1-  546     	BTRSS	_Status2,2
     0031 3rrr                      1-  547     	LGOTO	_00010_DS_
                                    1-  548     	BANKSEL	_deadTime
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 01rr                      1-  549     	MOVR	_deadTime,W
     0034 11rr                      1-  550     	IORAR	(_deadTime + 1),W
     0035 0D03                      1-  551     	BTRSC	STATUS,2
     0036 3rrr                      1-  552     	LGOTO	_00010_DS_
                                    1-  553     	.line	148, "main.c"; 	--deadTime;	
     0037 21FF                      1-  554     	MOVIA	0xff
     0038 03rr                      1-  555     	ADDAR	_deadTime,F
     0039 0803                      1-  556     	BTRSS	STATUS,0
     003A 06rr                      1-  557     	DECR	(_deadTime + 1),F
                                    1-  558     	.line	149, "main.c"; 	if(deadTime == 0)	//����һ��Сʱ
     003B 01rr                      1-  559     	MOVR	_deadTime,W
     003C 11rr                      1-  560     	IORAR	(_deadTime + 1),W
     003D 0903                      1-  561     	BTRSS	STATUS,2
     003E 3rrr                      1-  562     	LGOTO	_00010_DS_
                                    1-  563     	.line	151, "main.c"; 	timeOverFlag = 1;			//��ʱ����
                                    1-  564     	BANKSEL	_Status2
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 19rr                      1-  565     	BSR	_Status2,3
     0041                           1-  566     _00010_DS_:
                                    1-  567     	.line	155, "main.c"; 	if(++sec >= 60)
                                    1-  568     	BANKSEL	_sec
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 05rr                      1-  569     	INCR	_sec,F
     0043 213C                      1-  570     	MOVIA	0x3c
     0044 04rr                      1-  571     	SUBAR	_sec,W
     0045 0803                      1-  572     	BTRSS	STATUS,0
     0046 3rrr                      1-  573     	LGOTO	_00125_DS_
                                    1-  574     	.line	157, "main.c"; 	sec = 0;
     0047 02rr                      1-  575     	CLRR	_sec
                                    1-  576     	.line	158, "main.c"; 	if(++min >= 60)
                                    1-  577     	BANKSEL	_min
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 05rr                      1-  578     	INCR	_min,F
                                    1-  579     ;;unsigned compare: left < lit (0x3C=60), size=1
     004A 213C                      1-  580     	MOVIA	0x3c
     004B 04rr                      1-  581     	SUBAR	_min,W
     004C 0803                      1-  582     	BTRSS	STATUS,0
     004D 3rrr                      1-  583     	LGOTO	_00125_DS_
                                    1-  584     	.line	160, "main.c"; 	min = 0;
     004E 02rr                      1-  585     	CLRR	_min
                                    1-  586     	.line	161, "main.c"; 	if(++hour >= 24)
                                    1-  587     	BANKSEL	_hour
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 05rr                      1-  588     	INCR	_hour,F
                                    1-  589     ;;unsigned compare: left < lit (0x18=24), size=1
     0051 2118                      1-  590     	MOVIA	0x18
     0052 04rr                      1-  591     	SUBAR	_hour,W
     0053 0C03                      1-  592     	BTRSC	STATUS,0
                                    1-  593     	.line	163, "main.c"; 	hour = 0;
     0054 02rr                      1-  594     	CLRR	_hour
     0055                           1-  595     _00125_DS_:
                                    1-  596     	.line	170, "main.c"; 	if(INTFbits.PABIF)
     0055 08rr                      1-  597     	BTRSS	_INTFbits,1
     0056 3rrr                      1-  598     	LGOTO	_00127_DS_
                                    1-  599     	.line	172, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);
     0057 21FD                      1-  600     	MOVIA	0xfd
     0058 00rr                      1-  601     	MOVAR	_INTF
     0059                           1-  602     _00127_DS_:
                                    1-  603     	.line	175, "main.c"; 	INTF = 0;
     0059 02rr                      1-  604     	CLRR	_INTF
                                    1-  605     	.line	178, "main.c"; 	}
                                    1-  606     	BANKSEL	___sdcc_saved_stk01
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 01rr                      1-  607     	MOVR	___sdcc_saved_stk01,W
     005C 00rr                      1-  608     	MOVAR	STK01
                                    1-  609     	BANKSEL	___sdcc_saved_stk00
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 01rr                      1-  610     	MOVR	___sdcc_saved_stk00,W
     005F 00rr                      1-  611     	MOVAR	STK00
                                    1-  612     	BANKSEL	___sdcc_saved_fsr
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1-  613     	MOVR	___sdcc_saved_fsr,W
     0062 0084                      1-  614     	MOVAR	FSR
     0063 01rr                      1-  615     	MOVR	PSAVE,W
     0064 008A                      1-  616     	MOVAR	PCHBUF
     0065 0283                      1-  617     	CLRR	STATUS
     0066 15rr                      1-  618     	SWAPR	SSAVE,W
     0067 0083                      1-  619     	MOVAR	STATUS
     0068 15rr                      1-  620     	SWAPR	WSAVE,F
     0069 15rr                      1-  621     	SWAPR	WSAVE,W
     006A                           1-  622     END_OF_INTERRUPT:
     006A 0011                      1-  623     	RETIE	
                                    1-  625     ;--------------------------------------------------------
                                    1-  626     ; code
                                    1-  627     ;--------------------------------------------------------
                                    1-  628     ;***
                                    1-  629     ;  pBlock Stats: dbName = M
                                    1-  630     ;***
                                    1-  631     ;has an exit
                                    1-  632     ;functions called:
                                    1-  633     ;   _VK1S68C_Init
                                    1-  634     ;   _pwCtr
                                    1-  635     ;   _showTime
                                    1-  636     ;   _proData
                                    1-  637     ;   _proLow
                                    1-  638     ;   _proHight
                                    1-  639     ;   _timeCtr
                                    1-  640     ;   _ledCtr
                                    1-  641     ;   _keyCtr
                                    1-  642     ;   _VK1S68C_Init
                                    1-  643     ;   _pwCtr
                                    1-  644     ;   _showTime
                                    1-  645     ;   _proData
                                    1-  646     ;   _proLow
                                    1-  647     ;   _proHight
                                    1-  648     ;   _timeCtr
                                    1-  649     ;   _ledCtr
                                    1-  650     ;   _keyCtr
                                    1-  651     ;1 compiler assigned register :
                                    1-  652     ;   STK00
                                    1-  653     ;; Starting pCode block
                                    1-  654     .segment "code"; module=main, function=_main
     0000                           1-  656     _main:
                                    1-  657     ; 2 exit points
                                    1-  658     	.line	483, "main.c"; 	PORTA = 0x00;
     0000 02rr                      1-  659     	CLRR	_PORTA
                                    1-  660     	.line	484, "main.c"; 	IOSTA = C_PA3_Input | C_PA4_Input | C_PA6_Input | C_PA7_Input;    
     0001 21D8                      1-  661     	MOVIA	0xd8
     0002 000r                      1-  662     	IOST	_IOSTA
                                    1-  663     	.line	485, "main.c"; 	IOSTB =   C_PB1_Input | C_PB2_Input | C_PB3_Input | C_PB4_Input;     // Set PB0 & PB1 to input mode,others set to output mode
     0003 211E                      1-  664     	MOVIA	0x1e
     0004 000r                      1-  665     	IOST	_IOSTB
                                    1-  666     	.line	486, "main.c"; 	BPHCON = 0xE7;
     0005 21E7                      1-  667     	MOVIA	0xe7
     0006 00rr                      1-  668     	MOVAR	_BPHCON
                                    1-  669     	.line	487, "main.c"; 	ABPLCON = 0xBF;
     0007 21BF                      1-  670     	MOVIA	0xbf
     0008 00rr                      1-  671     	MOVAR	_ABPLCON
                                    1-  672     	.line	488, "main.c"; 	APHCON = 0xE7;
     0009 21E7                      1-  673     	MOVIA	0xe7
     000A 000r                      1-  674     	IOST	_APHCON
                                    1-  675     	.line	489, "main.c"; 	PORTA = 0x02;                           // PB0��PB1 & PB2 are output High
     000B 2102                      1-  676     	MOVIA	0x02
     000C 00rr                      1-  677     	MOVAR	_PORTA
                                    1-  678     	.line	490, "main.c"; 	DISI();
     000D 0013                      1-  679     	DISI
                                    1-  680     	.line	492, "main.c"; 	PCON1 = C_TMR0_Dis;						// Disable Timer0
     000E 0200                      1-  681     	CLRA	
     000F 000r                      1-  682     	IOST	_PCON1
                                    1-  683     	.line	495, "main.c"; 	TMRH = 0x00;
     0010 02rr                      1-  684     	CLRR	_TMRH
                                    1-  685     	.line	496, "main.c"; 	TMR1 = 0xFF;
     0011 21FF                      1-  686     	MOVIA	0xff
     0012 00rr                      1-  687     	SFUN	_TMR1
                                    1-  688     	.line	497, "main.c"; 	T1CR2 = C_PS1_Div64 | C_PS1_EN | C_TMR1_ClkSrc_Inst;
     0013 2105                      1-  689     	MOVIA	0x05
     0014 00rr                      1-  690     	SFUN	_T1CR2
                                    1-  691     	.line	498, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     0015 2103                      1-  692     	MOVIA	0x03
     0016 00rr                      1-  693     	SFUN	_T1CR1
                                    1-  694     	.line	501, "main.c"; 	INT1Level = 1;
                                    1-  695     	BANKSEL	_Status
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 1Arr                      1-  696     	BSR	_Status,5
                                    1-  697     	.line	504, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;	// Enable Timer0��Timer1��WDT overflow interrupt
     0019 210B                      1-  698     	MOVIA	0x0b
     001A 00rr                      1-  699     	MOVAR	_INTE
                                    1-  700     	.line	506, "main.c"; 	TMR0 = 191;
     001B 21BF                      1-  701     	MOVIA	0xbf
     001C 00rr                      1-  702     	MOVAR	_TMR0
                                    1-  703     	.line	507, "main.c"; 	T0MD =  C_PS0_TMR0 | C_TMR0_Clk | C_TMR0_ExtClk_Edge | C_PS0_Div256;
     001D 2137                      1-  704     	MOVIA	0x37
     001E 0003                      1-  705     	T0MD	
                                    1-  706     	.line	508, "main.c"; 	PCHBUF &= 0xBF;
     001F 1Frr                      1-  707     	BCR	_PCHBUF,6
                                    1-  708     	.line	513, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0020 2188                      1-  709     	MOVIA	0x88
     0021 00rr                      1-  710     	MOVAR	_PCON
                                    1-  711     	.line	516, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0022 2101                      1-  712     	MOVIA	0x01
     0023 000r                      1-  713     	IOST	_PCON1
                                    1-  714     	.line	517, "main.c"; 	ENI();									// Enable all unmasked interrupts			
     0024 0004                      1-  715     	ENI
                                    1-  716     	.line	518, "main.c"; 	VK1S68C_Init();
     0025 2rrr                      1-  717     	LCALL	_VK1S68C_Init
                                    1-  718     	.line	520, "main.c"; 	pwCtr();
     0026 2rrr                      1-  719     	LCALL	_pwCtr
                                    1-  720     	.line	521, "main.c"; 	showTime(hour,min);
                                    1-  721     	BANKSEL	_min
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  722     	MOVR	_min,W
     0029 00rr                      1-  723     	MOVAR	STK00
                                    1-  724     	BANKSEL	_hour
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  725     	MOVR	_hour,W
     002C 2rrr                      1-  726     	LCALL	_showTime
     002D                           1-  727     _00383_DS_:
                                    1-  728     	.line	524, "main.c"; 	if(ReadOver)
                                    1-  729     	BANKSEL	_Status
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 0Err                      1-  730     	BTRSC	_Status,4
                                    1-  731     	.line	526, "main.c"; 	proData();
     002F 2rrr                      1-  732     	LCALL	_proData
     0030                           1-  733     _00372_DS_:
                                    1-  734     	.line	528, "main.c"; 	if(INT1Level && (PORTB & 0x02))
                                    1-  735     	BANKSEL	_Status
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 0Arr                      1-  736     	BTRSS	_Status,5
     0032 3rrr                      1-  737     	LGOTO	_00377_DS_
     0033 08rr                      1-  738     	BTRSS	_PORTB,1
     0034 3rrr                      1-  739     	LGOTO	_00377_DS_
                                    1-  740     	.line	530, "main.c"; 	INT1Level = 0;
     0035 1Err                      1-  741     	BCR	_Status,5
                                    1-  742     	.line	531, "main.c"; 	proLow();
     0036 2rrr                      1-  743     	LCALL	_proLow
     0037 3rrr                      1-  744     	LGOTO	_00378_DS_
     0038                           1-  745     _00377_DS_:
                                    1-  746     	.line	533, "main.c"; 	else if(INT1Level == 0 && (PORTB & 0x02) == 0)
                                    1-  747     	BANKSEL	_Status
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 0Err                      1-  748     	BTRSC	_Status,5
     003A 3rrr                      1-  749     	LGOTO	_00378_DS_
     003B 0Crr                      1-  750     	BTRSC	_PORTB,1
     003C 3rrr                      1-  751     	LGOTO	_00378_DS_
                                    1-  752     	.line	536, "main.c"; 	INT1Level = 1;
     003D 1Arr                      1-  753     	BSR	_Status,5
                                    1-  754     	.line	537, "main.c"; 	proHight();
     003E 2rrr                      1-  755     	LCALL	_proHight
     003F                           1-  756     _00378_DS_:
                                    1-  757     	.line	540, "main.c"; 	CLRWDT();
     003F 0002                      1-  758     	clrwdt
                                    1-  759     	.line	541, "main.c"; 	if(!IntFlag)
                                    1-  760     	BANKSEL	_IntFlag
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1-  761     	MOVR	_IntFlag,W
     0042 0D03                      1-  762     	BTRSC	STATUS,2
     0043 3rrr                      1-  763     	LGOTO	_00383_DS_
                                    1-  764     	.line	544, "main.c"; 	IntFlag = 0;		//8.2msִ��һ��
     0044 02rr                      1-  765     	CLRR	_IntFlag
                                    1-  766     	.line	545, "main.c"; 	timeCtr();
     0045 2rrr                      1-  767     	LCALL	_timeCtr
                                    1-  768     	.line	546, "main.c"; 	ledCtr();	//LED�ƿ���
     0046 2rrr                      1-  769     	LCALL	_ledCtr
                                    1-  770     	.line	547, "main.c"; 	keyCtr();
     0047 2rrr                      1-  771     	LCALL	_keyCtr
     0048 3rrr                      1-  772     	LGOTO	_00383_DS_
                                    1-  773     	.line	549, "main.c"; 	}
                                    1-  774     	RETURN	
     0049 0010                      3-   26 m1      ret
                                    1-  775     ; exit point of _main
                                    1-  777     ;***
                                    1-  778     ;  pBlock Stats: dbName = C
                                    1-  779     ;***
                                    1-  780     ;has an exit
                                    1-  781     ;1 compiler assigned register :
                                    1-  782     ;   r0x1022
                                    1-  783     ;; Starting pCode block
                                    1-  784     .segment "code"; module=main, function=_keyRead2
                                    1-  786     ;local variable name mapping:
     0000                           1-  788     _keyRead2:
                                    1-  789     ; 2 exit points
                                    1-  790     	.line	739, "main.c"; 	char keyRead2(char KeyStatus)	
                                    1-  791     	BANKSEL	r0x1022
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  792     	MOVAR	r0x1022
                                    1-  793     	.line	741, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  794     	MOVR	r0x1022,W
     0003 0D03                      1-  795     	BTRSC	STATUS,2
     0004 3rrr                      1-  796     	LGOTO	_00509_DS_
                                    1-  797     	.line	743, "main.c"; 	keyNub = KeyStatus;
     0005 01rr                      1-  798     	MOVR	r0x1022,W
                                    1-  799     	BANKSEL	_keyNub
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  800     	MOVAR	_keyNub
                                    1-  801     	.line	744, "main.c"; 	keyCount2++;
                                    1-  802     	BANKSEL	_keyCount2
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 05rr                      1-  803     	INCR	_keyCount2,F
     000A 0D03                      1-  804     	BTRSC	STATUS,2
     000B 05rr                      1-  805     	INCR	(_keyCount2 + 1),F
                                    1-  806     ;;unsigned compare: left < lit (0xB6=182), size=2
                                    1-  807     	.line	745, "main.c"; 	if(keyCount2 >= KEYLONGPRESS)
     000C 2100                      1-  808     	MOVIA	0x00
     000D 04rr                      1-  809     	SUBAR	(_keyCount2 + 1),W
     000E 0903                      1-  810     	BTRSS	STATUS,2
     000F 3rrr                      1-  811     	LGOTO	_00528_DS_
     0010 21B6                      1-  812     	MOVIA	0xb6
     0011 04rr                      1-  813     	SUBAR	_keyCount2,W
     0012                           1-  814     _00528_DS_:
     0012 0803                      1-  815     	BTRSS	STATUS,0
     0013 3rrr                      1-  816     	LGOTO	_00510_DS_
                                    1-  817     	.line	747, "main.c"; 	keyCount2 = KEYLONGPRESS;
     0014 21B6                      1-  818     	MOVIA	0xb6
                                    1-  819     	BANKSEL	_keyCount2
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 00rr                      1-  820     	MOVAR	_keyCount2
     0017 02rr                      1-  821     	CLRR	(_keyCount2 + 1)
                                    1-  822     	.line	748, "main.c"; 	if(!longPressFlag)
                                    1-  823     	BANKSEL	_Status2
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 0Err                      1-  824     	BTRSC	_Status2,5
     001A 3rrr                      1-  825     	LGOTO	_00510_DS_
                                    1-  826     	.line	750, "main.c"; 	longPressFlag = 1;
     001B 1Arr                      1-  827     	BSR	_Status2,5
                                    1-  828     	.line	751, "main.c"; 	return 2;
     001C 2102                      1-  829     	MOVIA	0x02
     001D 3rrr                      1-  830     	LGOTO	_00511_DS_
                                    1-  831     ;;unsigned compare: left < lit (0xB6=182), size=2
     001E                           1-  832     _00509_DS_:
                                    1-  833     	.line	757, "main.c"; 	if(keyCount2 >= KEYLONGPRESS)
     001E 2100                      1-  834     	MOVIA	0x00
                                    1-  835     	BANKSEL	_keyCount2
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1-  836     	SUBAR	(_keyCount2 + 1),W
     0021 0903                      1-  837     	BTRSS	STATUS,2
     0022 3rrr                      1-  838     	LGOTO	_00529_DS_
     0023 21B6                      1-  839     	MOVIA	0xb6
     0024 04rr                      1-  840     	SUBAR	_keyCount2,W
     0025                           1-  841     _00529_DS_:
     0025 0803                      1-  842     	BTRSS	STATUS,0
     0026 3rrr                      1-  843     	LGOTO	_00506_DS_
                                    1-  844     	.line	759, "main.c"; 	keyCount2 = 0;
                                    1-  845     	BANKSEL	_keyCount2
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1-  846     	CLRR	_keyCount2
     0029 02rr                      1-  847     	CLRR	(_keyCount2 + 1)
                                    1-  848     	.line	760, "main.c"; 	longPressFlag = 0;
                                    1-  849     	BANKSEL	_Status2
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 1Err                      1-  850     	BCR	_Status2,5
                                    1-  851     	.line	761, "main.c"; 	return	0;
     002C 2100                      1-  852     	MOVIA	0x00
     002D 3rrr                      1-  853     	LGOTO	_00511_DS_
                                    1-  854     ;;unsigned compare: left < lit (0x4=4), size=2
     002E                           1-  855     _00506_DS_:
                                    1-  856     	.line	763, "main.c"; 	else if(keyCount2 >= 4)
     002E 2100                      1-  857     	MOVIA	0x00
                                    1-  858     	BANKSEL	_keyCount2
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 04rr                      1-  859     	SUBAR	(_keyCount2 + 1),W
     0031 0903                      1-  860     	BTRSS	STATUS,2
     0032 3rrr                      1-  861     	LGOTO	_00530_DS_
     0033 2104                      1-  862     	MOVIA	0x04
     0034 04rr                      1-  863     	SUBAR	_keyCount2,W
     0035                           1-  864     _00530_DS_:
     0035 0803                      1-  865     	BTRSS	STATUS,0
     0036 3rrr                      1-  866     	LGOTO	_00507_DS_
                                    1-  867     	.line	765, "main.c"; 	keyCount2 = 0;
                                    1-  868     	BANKSEL	_keyCount2
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 02rr                      1-  869     	CLRR	_keyCount2
     0039 02rr                      1-  870     	CLRR	(_keyCount2 + 1)
                                    1-  871     	.line	766, "main.c"; 	return	1;
     003A 2101                      1-  872     	MOVIA	0x01
     003B 3rrr                      1-  873     	LGOTO	_00511_DS_
     003C                           1-  874     _00507_DS_:
                                    1-  875     	.line	768, "main.c"; 	keyCount2 = 0;
                                    1-  876     	BANKSEL	_keyCount2
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 02rr                      1-  877     	CLRR	_keyCount2
     003E 02rr                      1-  878     	CLRR	(_keyCount2 + 1)
                                    1-  879     	.line	769, "main.c"; 	keyNub = 0;
                                    1-  880     	BANKSEL	_keyNub
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 02rr                      1-  881     	CLRR	_keyNub
     0041                           1-  882     _00510_DS_:
                                    1-  883     	.line	771, "main.c"; 	return 0;
     0041 2100                      1-  884     	MOVIA	0x00
     0042                           1-  885     _00511_DS_:
                                    1-  886     	.line	772, "main.c"; 	}
                                    1-  887     	RETURN	
     0042 0010                      3-   26 m1      ret
                                    1-  888     ; exit point of _keyRead2
                                    1-  890     ;***
                                    1-  891     ;  pBlock Stats: dbName = C
                                    1-  892     ;***
                                    1-  893     ;has an exit
                                    1-  894     ;1 compiler assigned register :
                                    1-  895     ;   r0x1023
                                    1-  896     ;; Starting pCode block
                                    1-  897     .segment "code"; module=main, function=_keyRead
                                    1-  899     ;local variable name mapping:
     0000                           1-  901     _keyRead:
                                    1-  902     ; 2 exit points
                                    1-  903     	.line	720, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  904     	BANKSEL	r0x1023
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  905     	MOVAR	r0x1023
                                    1-  906     	.line	722, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  907     	MOVR	r0x1023,W
     0003 0D03                      1-  908     	BTRSC	STATUS,2
     0004 3rrr                      1-  909     	LGOTO	_00484_DS_
                                    1-  910     	.line	724, "main.c"; 	keyCount++;
                                    1-  911     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1-  912     	INCR	_keyCount,F
     0007 0D03                      1-  913     	BTRSC	STATUS,2
     0008 05rr                      1-  914     	INCR	(_keyCount + 1),F
     0009 3rrr                      1-  915     	LGOTO	_00485_DS_
                                    1-  916     ;;unsigned compare: left < lit (0x4=4), size=2
     000A                           1-  917     _00484_DS_:
                                    1-  918     	.line	729, "main.c"; 	if(keyCount >= 4)
     000A 2100                      1-  919     	MOVIA	0x00
                                    1-  920     	BANKSEL	_keyCount
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  921     	SUBAR	(_keyCount + 1),W
     000D 0903                      1-  922     	BTRSS	STATUS,2
     000E 3rrr                      1-  923     	LGOTO	_00494_DS_
     000F 2104                      1-  924     	MOVIA	0x04
     0010 04rr                      1-  925     	SUBAR	_keyCount,W
     0011                           1-  926     _00494_DS_:
     0011 0803                      1-  927     	BTRSS	STATUS,0
     0012 3rrr                      1-  928     	LGOTO	_00482_DS_
                                    1-  929     	.line	731, "main.c"; 	keyCount = 0;
                                    1-  930     	BANKSEL	_keyCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1-  931     	CLRR	_keyCount
     0015 02rr                      1-  932     	CLRR	(_keyCount + 1)
                                    1-  933     	.line	732, "main.c"; 	return	1;
     0016 2101                      1-  934     	MOVIA	0x01
     0017 3rrr                      1-  935     	LGOTO	_00486_DS_
     0018                           1-  936     _00482_DS_:
                                    1-  937     	.line	734, "main.c"; 	keyCount = 0;
                                    1-  938     	BANKSEL	_keyCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1-  939     	CLRR	_keyCount
     001A 02rr                      1-  940     	CLRR	(_keyCount + 1)
     001B                           1-  941     _00485_DS_:
                                    1-  942     	.line	736, "main.c"; 	return 0;
     001B 2100                      1-  943     	MOVIA	0x00
     001C                           1-  944     _00486_DS_:
                                    1-  945     	.line	737, "main.c"; 	}
                                    1-  946     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  947     ; exit point of _keyRead
                                    1-  949     ;***
                                    1-  950     ;  pBlock Stats: dbName = C
                                    1-  951     ;***
                                    1-  952     ;has an exit
                                    1-  953     ;1 compiler assigned register :
                                    1-  954     ;   r0x1024
                                    1-  955     ;; Starting pCode block
                                    1-  956     .segment "code"; module=main, function=_whiteOFF
     0000                           1-  958     _whiteOFF:
                                    1-  959     ; 2 exit points
                                    1-  960     	.line	715, "main.c"; 	P5CR1 &= 0x7F;
     0000 00rr                      1-  961     	SFUNR	_P5CR1
                                    1-  962     	BANKSEL	r0x1024
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  963     	MOVAR	r0x1024
     0003 1Frr                      1-  964     	BCR	r0x1024,7
     0004 01rr                      1-  965     	MOVR	r0x1024,W
     0005 00rr                      1-  966     	SFUN	_P5CR1
                                    1-  967     	.line	716, "main.c"; 	PORTA &= 0xFB;
     0006 1Drr                      1-  968     	BCR	_PORTA,2
                                    1-  969     	.line	718, "main.c"; 	}
                                    1-  970     	RETURN	
     0007 0010                      3-   26 m1      ret
                                    1-  971     ; exit point of _whiteOFF
                                    1-  973     ;***
                                    1-  974     ;  pBlock Stats: dbName = C
                                    1-  975     ;***
                                    1-  976     ;has an exit
                                    1-  977     ;1 compiler assigned register :
                                    1-  978     ;   r0x1025
                                    1-  979     ;; Starting pCode block
                                    1-  980     .segment "code"; module=main, function=_whiteOn
     0000                           1-  982     _whiteOn:
                                    1-  983     ; 2 exit points
                                    1-  984     	.line	702, "main.c"; 	TM34RH = 0x00;
     0000 02rr                      1-  985     	CLRR	_TM34RH
                                    1-  986     	.line	703, "main.c"; 	TMR3 = 50;							//Ƶ��Ϊ110K
     0001 2132                      1-  987     	MOVIA	0x32
     0002 00rr                      1-  988     	SFUN	_TMR3
                                    1-  989     	.line	704, "main.c"; 	PWM5RH = 0x00;
     0003 0200                      1-  990     	CLRA	
     0004 00rr                      1-  991     	SFUN	_PWM5RH
                                    1-  992     	.line	705, "main.c"; 	PWM5DUTY = ledDuty;				// 	
                                    1-  993     	BANKSEL	_ledDuty
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1-  994     	MOVR	_ledDuty,W
     0007 00rr                      1-  995     	SFUN	_PWM5DUTY
                                    1-  996     	.line	706, "main.c"; 	if(P5CR1 & 0x80)
     0008 00rr                      1-  997     	SFUNR	_P5CR1
                                    1-  998     	BANKSEL	r0x1025
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  999     	MOVAR	r0x1025
     000B 0Frr                      1- 1000     	BTRSC	r0x1025,7
                                    1- 1001     	.line	707, "main.c"; 	return;
     000C 3rrr                      1- 1002     	LGOTO	_00472_DS_
                                    1- 1003     	.line	708, "main.c"; 	T3CR2 = 0x00;
     000D 0200                      1- 1004     	CLRA	
     000E 00rr                      1- 1005     	SFUN	_T3CR2
                                    1- 1006     	.line	709, "main.c"; 	T3CR1 =  C_TMR3_Reload | C_TMR3_En;
     000F 2103                      1- 1007     	MOVIA	0x03
     0010 00rr                      1- 1008     	SFUN	_T3CR1
                                    1- 1009     	.line	710, "main.c"; 	P5CR1 = C_PWM5_En | C_TMR3_Reload | C_TMR3_En;
     0011 2183                      1- 1010     	MOVIA	0x83
     0012 00rr                      1- 1011     	SFUN	_P5CR1
     0013                           1- 1012     _00472_DS_:
                                    1- 1013     	.line	711, "main.c"; 	}
                                    1- 1014     	RETURN	
     0013 0010                      3-   26 m1      ret
                                    1- 1015     ; exit point of _whiteOn
                                    1- 1017     ;***
                                    1- 1018     ;  pBlock Stats: dbName = C
                                    1- 1019     ;***
                                    1- 1020     ;has an exit
                                    1- 1021     ;1 compiler assigned register :
                                    1- 1022     ;   r0x1026
                                    1- 1023     ;; Starting pCode block
                                    1- 1024     .segment "code"; module=main, function=_yellowOFF
     0000                           1- 1026     _yellowOFF:
                                    1- 1027     ; 2 exit points
                                    1- 1028     	.line	695, "main.c"; 	P4CR1 &= 0x7F;
     0000 00rr                      1- 1029     	SFUNR	_P4CR1
                                    1- 1030     	BANKSEL	r0x1026
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1031     	MOVAR	r0x1026
     0003 1Frr                      1- 1032     	BCR	r0x1026,7
     0004 01rr                      1- 1033     	MOVR	r0x1026,W
     0005 00rr                      1- 1034     	SFUN	_P4CR1
                                    1- 1035     	.line	696, "main.c"; 	PORTB &= 0xFE;
     0006 1Crr                      1- 1036     	BCR	_PORTB,0
                                    1- 1037     	.line	697, "main.c"; 	}
                                    1- 1038     	RETURN	
     0007 0010                      3-   26 m1      ret
                                    1- 1039     ; exit point of _yellowOFF
                                    1- 1041     ;***
                                    1- 1042     ;  pBlock Stats: dbName = C
                                    1- 1043     ;***
                                    1- 1044     ;has an exit
                                    1- 1045     ;1 compiler assigned register :
                                    1- 1046     ;   r0x1027
                                    1- 1047     ;; Starting pCode block
                                    1- 1048     .segment "code"; module=main, function=_yellowOn
     0000                           1- 1050     _yellowOn:
                                    1- 1051     ; 2 exit points
                                    1- 1052     	.line	682, "main.c"; 	TM34RH = 0x00;
     0000 02rr                      1- 1053     	CLRR	_TM34RH
                                    1- 1054     	.line	683, "main.c"; 	TMR3 = 50;							//Ƶ��Ϊ110K
     0001 2132                      1- 1055     	MOVIA	0x32
     0002 00rr                      1- 1056     	SFUN	_TMR3
                                    1- 1057     	.line	684, "main.c"; 	PWM4DUTY = ledDuty;				// 		
                                    1- 1058     	BANKSEL	_ledDuty
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 01rr                      1- 1059     	MOVR	_ledDuty,W
     0005 00rr                      1- 1060     	SFUN	_PWM4DUTY
                                    1- 1061     	.line	685, "main.c"; 	if(P4CR1 & 0x80)
     0006 00rr                      1- 1062     	SFUNR	_P4CR1
                                    1- 1063     	BANKSEL	r0x1027
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 1064     	MOVAR	r0x1027
     0009 0Frr                      1- 1065     	BTRSC	r0x1027,7
                                    1- 1066     	.line	686, "main.c"; 	return;
     000A 3rrr                      1- 1067     	LGOTO	_00461_DS_
                                    1- 1068     	.line	687, "main.c"; 	T3CR2 = 0x00;
     000B 0200                      1- 1069     	CLRA	
     000C 00rr                      1- 1070     	SFUN	_T3CR2
                                    1- 1071     	.line	688, "main.c"; 	T3CR1 =  C_TMR3_Reload | C_TMR3_En;
     000D 2103                      1- 1072     	MOVIA	0x03
     000E 00rr                      1- 1073     	SFUN	_T3CR1
                                    1- 1074     	.line	689, "main.c"; 	P4CR1 = C_PWM4_En | C_TMR3_Reload | C_TMR3_En;
     000F 2183                      1- 1075     	MOVIA	0x83
     0010 00rr                      1- 1076     	SFUN	_P4CR1
     0011                           1- 1077     _00461_DS_:
                                    1- 1078     	.line	690, "main.c"; 	}
                                    1- 1079     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 1080     ; exit point of _yellowOn
                                    1- 1082     ;***
                                    1- 1083     ;  pBlock Stats: dbName = C
                                    1- 1084     ;***
                                    1- 1085     ;functions called:
                                    1- 1086     ;   _showTime
                                    1- 1087     ;   _closeTime
                                    1- 1088     ;   _showTime
                                    1- 1089     ;   _closeTime
                                    1- 1090     ;2 compiler assigned registers:
                                    1- 1091     ;   r0x1028
                                    1- 1092     ;   STK00
                                    1- 1093     ;; Starting pCode block
                                    1- 1094     .segment "code"; module=main, function=_timeCtr
     0000                           1- 1096     _timeCtr:
                                    1- 1097     ; 0 exit points
                                    1- 1098     	.line	644, "main.c"; 	if(keyTime > 0)
                                    1- 1099     	BANKSEL	_keyTime
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1100     	MOVR	_keyTime,W
     0002 0903                      1- 1101     	BTRSS	STATUS,2
                                    1- 1102     	.line	646, "main.c"; 	--keyTime;
     0003 06rr                      1- 1103     	DECR	_keyTime,F
                                    1- 1104     	.line	649, "main.c"; 	if(pwFlag)
                                    1- 1105     	BANKSEL	_Status2
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 08rr                      1- 1106     	BTRSS	_Status2,0
     0006 3rrr                      1- 1107     	LGOTO	_00449_DS_
                                    1- 1108     	.line	651, "main.c"; 	if(count1sFlag)
     0007 0Brr                      1- 1109     	BTRSS	_Status2,6
     0008 3rrr                      1- 1110     	LGOTO	_00450_DS_
                                    1- 1111     	.line	653, "main.c"; 	DPFlag = !DPFlag;
                                    1- 1112     	BANKSEL	_DPFlag
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1- 1113     	MOVR	_DPFlag,W
     000B 2100                      1- 1114     	MOVIA	0x00
     000C 0D03                      1- 1115     	BTRSC	STATUS,2
     000D 2101                      1- 1116     	MOVIA	0x01
                                    1- 1117     	BANKSEL	r0x1028
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1118     	MOVAR	r0x1028
                                    1- 1119     	BANKSEL	_DPFlag
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1- 1120     	CLRR	_DPFlag
                                    1- 1121     	BANKSEL	r0x1028
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 08rr                      1- 1122     	BTRSS	r0x1028,0
     0014 3rrr                      1- 1123     	LGOTO	_00001_DS_
                                    1- 1124     	BANKSEL	_DPFlag
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1- 1125     	INCR	_DPFlag,F
     0017                           1- 1126     _00001_DS_:
                                    1- 1127     	.line	654, "main.c"; 	showTime(hour,min);
                                    1- 1128     	BANKSEL	_min
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1- 1129     	MOVR	_min,W
     0019 00rr                      1- 1130     	MOVAR	STK00
                                    1- 1131     	BANKSEL	_hour
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1- 1132     	MOVR	_hour,W
     001C 2rrr                      1- 1133     	LCALL	_showTime
                                    1- 1134     	.line	655, "main.c"; 	count1sFlag = 0;
                                    1- 1135     	BANKSEL	_Status2
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 1Frr                      1- 1136     	BCR	_Status2,6
                                    1- 1137     	.line	659, "main.c"; 	if(minAddFlag && ++min >= 60)
                                    1- 1138     	BANKSEL	_LedStatus
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 0Arr                      1- 1139     	BTRSS	_LedStatus,4
     0021 3rrr                      1- 1140     	LGOTO	_00441_DS_
                                    1- 1141     	BANKSEL	_min
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1- 1142     	INCR	_min,F
                                    1- 1143     ;;unsigned compare: left < lit (0x3C=60), size=1
     0024 213C                      1- 1144     	MOVIA	0x3c
     0025 04rr                      1- 1145     	SUBAR	_min,W
     0026 0C03                      1- 1146     	BTRSC	STATUS,0
                                    1- 1147     	.line	661, "main.c"; 	min = 0;
     0027 02rr                      1- 1148     	CLRR	_min
     0028                           1- 1149     _00441_DS_:
                                    1- 1150     	.line	664, "main.c"; 	if(hourAddFlag && ++hour >= 24)
                                    1- 1151     	BANKSEL	_LedStatus
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 09rr                      1- 1152     	BTRSS	_LedStatus,3
     002A 3rrr                      1- 1153     	LGOTO	_00450_DS_
                                    1- 1154     	BANKSEL	_hour
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 05rr                      1- 1155     	INCR	_hour,F
                                    1- 1156     ;;unsigned compare: left < lit (0x18=24), size=1
     002D 2118                      1- 1157     	MOVIA	0x18
     002E 04rr                      1- 1158     	SUBAR	_hour,W
     002F 0803                      1- 1159     	BTRSS	STATUS,0
     0030 3rrr                      1- 1160     	LGOTO	_00450_DS_
                                    1- 1161     	.line	666, "main.c"; 	hour = 0;
     0031 02rr                      1- 1162     	CLRR	_hour
     0032 3rrr                      1- 1163     	LGOTO	_00450_DS_
     0033                           1- 1164     _00449_DS_:
                                    1- 1165     	.line	672, "main.c"; 	closeTime();
     0033 2rrr                      1- 1166     	LCALL	_closeTime
     0034                           1- 1167     _00450_DS_:
                                    1- 1168     	.line	675, "main.c"; 	if(timeFlag && deadTime == 0)
                                    1- 1169     	BANKSEL	_Status2
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 09rr                      1- 1170     	BTRSS	_Status2,2
     0036 3rrr                      1- 1171     	LGOTO	_00002_DS_
                                    1- 1172     	BANKSEL	_deadTime
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1- 1173     	MOVR	_deadTime,W
     0039 11rr                      1- 1174     	IORAR	(_deadTime + 1),W
     003A 0903                      1- 1175     	BTRSS	STATUS,2
     003B 3rrr                      1- 1176     	LGOTO	_00002_DS_
                                    1- 1177     	.line	676, "main.c"; 	timeOverFlag = 1;
                                    1- 1178     	BANKSEL	_Status2
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 19rr                      1- 1179     	BSR	_Status2,3
     003E                           1- 1180     _00002_DS_:
                                    1- 1181     	.line	677, "main.c"; 	}
                                    1- 1182     	RETURN	
     003E 0010                      3-   26 m1      ret
                                    1- 1184     ;***
                                    1- 1185     ;  pBlock Stats: dbName = C
                                    1- 1186     ;***
                                    1- 1187     ;has an exit
                                    1- 1188     ;functions called:
                                    1- 1189     ;   _yellowOFF
                                    1- 1190     ;   _whiteOFF
                                    1- 1191     ;   _whiteOn
                                    1- 1192     ;   _whiteOFF
                                    1- 1193     ;   _yellowOn
                                    1- 1194     ;   _yellowOFF
                                    1- 1195     ;   _whiteOFF
                                    1- 1196     ;   _yellowOFF
                                    1- 1197     ;   _yellowOFF
                                    1- 1198     ;   _whiteOFF
                                    1- 1199     ;   _whiteOn
                                    1- 1200     ;   _whiteOFF
                                    1- 1201     ;   _yellowOn
                                    1- 1202     ;   _yellowOFF
                                    1- 1203     ;   _whiteOFF
                                    1- 1204     ;   _yellowOFF
                                    1- 1205     ;; Starting pCode block
                                    1- 1206     .segment "code"; module=main, function=_ledCtr
     0000                           1- 1208     _ledCtr:
                                    1- 1209     ; 2 exit points
                                    1- 1210     	.line	604, "main.c"; 	if(DOFlag && pwFlag && ledFlag && timeOverFlag == 0)
                                    1- 1211     	BANKSEL	_Status
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 0Brr                      1- 1212     	BTRSS	_Status,6
     0002 3rrr                      1- 1213     	LGOTO	_00428_DS_
                                    1- 1214     	BANKSEL	_Status2
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 08rr                      1- 1215     	BTRSS	_Status2,0
     0005 3rrr                      1- 1216     	LGOTO	_00428_DS_
     0006 08rr                      1- 1217     	BTRSS	_Status2,1
     0007 3rrr                      1- 1218     	LGOTO	_00428_DS_
     0008 0Drr                      1- 1219     	BTRSC	_Status2,3
     0009 3rrr                      1- 1220     	LGOTO	_00428_DS_
                                    1- 1221     	.line	606, "main.c"; 	if((shanshuo > 0 && shanshuo < 40) || (shanshuo > 120))
                                    1- 1222     	BANKSEL	_shanshuo
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1223     	MOVR	_shanshuo,W
     000C 0D03                      1- 1224     	BTRSC	STATUS,2
     000D 3rrr                      1- 1225     	LGOTO	_00426_DS_
                                    1- 1226     ;;unsigned compare: left < lit (0x28=40), size=1
     000E 2128                      1- 1227     	MOVIA	0x28
     000F 04rr                      1- 1228     	SUBAR	_shanshuo,W
     0010 0803                      1- 1229     	BTRSS	STATUS,0
     0011 3rrr                      1- 1230     	LGOTO	_00422_DS_
                                    1- 1231     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1232     ;;unsigned compare: left >= lit (0x79=121), size=1
     0012                           1- 1233     _00426_DS_:
     0012 2179                      1- 1234     	MOVIA	0x79
                                    1- 1235     	BANKSEL	_shanshuo
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 04rr                      1- 1236     	SUBAR	_shanshuo,W
     0015 0803                      1- 1237     	BTRSS	STATUS,0
     0016 3rrr                      1- 1238     	LGOTO	_00423_DS_
     0017                           1- 1239     _00422_DS_:
                                    1- 1240     	.line	608, "main.c"; 	yellowOFF();
     0017 2rrr                      1- 1241     	LCALL	_yellowOFF
                                    1- 1242     	.line	609, "main.c"; 	whiteOFF();
     0018 2rrr                      1- 1243     	LCALL	_whiteOFF
     0019 3rrr                      1- 1244     	LGOTO	_00433_DS_
     001A                           1- 1245     _00423_DS_:
                                    1- 1246     	.line	613, "main.c"; 	if(whiteFlag)
                                    1- 1247     	BANKSEL	_Status2
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 0Brr                      1- 1248     	BTRSS	_Status2,7
     001C 3rrr                      1- 1249     	LGOTO	_00417_DS_
                                    1- 1250     	.line	615, "main.c"; 	whiteOn();
     001D 2rrr                      1- 1251     	LCALL	_whiteOn
     001E 3rrr                      1- 1252     	LGOTO	_00418_DS_
     001F                           1- 1253     _00417_DS_:
                                    1- 1254     	.line	619, "main.c"; 	whiteOFF();
     001F 2rrr                      1- 1255     	LCALL	_whiteOFF
     0020                           1- 1256     _00418_DS_:
                                    1- 1257     	.line	621, "main.c"; 	if(yellowFlag)
                                    1- 1258     	BANKSEL	_Status2
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 0Arr                      1- 1259     	BTRSS	_Status2,4
     0022 3rrr                      1- 1260     	LGOTO	_00420_DS_
                                    1- 1261     	.line	623, "main.c"; 	yellowOn();
     0023 2rrr                      1- 1262     	LCALL	_yellowOn
     0024 3rrr                      1- 1263     	LGOTO	_00433_DS_
     0025                           1- 1264     _00420_DS_:
                                    1- 1265     	.line	627, "main.c"; 	yellowOFF();
     0025 2rrr                      1- 1266     	LCALL	_yellowOFF
     0026 3rrr                      1- 1267     	LGOTO	_00433_DS_
     0027                           1- 1268     _00428_DS_:
                                    1- 1269     	.line	635, "main.c"; 	whiteOFF();
     0027 2rrr                      1- 1270     	LCALL	_whiteOFF
                                    1- 1271     	.line	636, "main.c"; 	yellowOFF();
     0028 2rrr                      1- 1272     	LCALL	_yellowOFF
     0029                           1- 1273     _00433_DS_:
                                    1- 1274     	.line	639, "main.c"; 	}
                                    1- 1275     	RETURN	
     0029 0010                      3-   26 m1      ret
                                    1- 1276     ; exit point of _ledCtr
                                    1- 1278     ;***
                                    1- 1279     ;  pBlock Stats: dbName = C
                                    1- 1280     ;***
                                    1- 1281     ;has an exit
                                    1- 1282     ;functions called:
                                    1- 1283     ;   _disPlayMode
                                    1- 1284     ;   _showTime
                                    1- 1285     ;   _closeTime
                                    1- 1286     ;   _disPlayMode
                                    1- 1287     ;   _showTime
                                    1- 1288     ;   _closeTime
                                    1- 1289     ;1 compiler assigned register :
                                    1- 1290     ;   STK00
                                    1- 1291     ;; Starting pCode block
                                    1- 1292     .segment "code"; module=main, function=_pwCtr
     0000                           1- 1294     _pwCtr:
                                    1- 1295     ; 2 exit points
                                    1- 1296     	.line	584, "main.c"; 	pwFlag = !pwFlag;
     0000 2101                      1- 1297     	MOVIA	0x01
                                    1- 1298     	BANKSEL	_Status2
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 12rr                      1- 1299     	XORAR	_Status2,F
                                    1- 1300     	.line	585, "main.c"; 	pwFlag ? (POWER_ON()) : (POWER_OFF());
     0003 08rr                      1- 1301     	BTRSS	_Status2,0
     0004 3rrr                      1- 1302     	LGOTO	_00410_DS_
     0005 1Crr                      1- 1303     	BCR	_PORTA,1
     0006 3rrr                      1- 1304     	LGOTO	_00411_DS_
     0007                           1- 1305     _00410_DS_:
     0007 18rr                      1- 1306     	BSR	_PORTA,1
     0008                           1- 1307     _00411_DS_:
                                    1- 1308     	.line	586, "main.c"; 	if(pwFlag)
                                    1- 1309     	BANKSEL	_Status2
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 08rr                      1- 1310     	BTRSS	_Status2,0
     000A 3rrr                      1- 1311     	LGOTO	_00406_DS_
                                    1- 1312     	.line	588, "main.c"; 	disPlayMode();
     000B 2rrr                      1- 1313     	LCALL	_disPlayMode
                                    1- 1314     	.line	589, "main.c"; 	showTime(hour,min);
                                    1- 1315     	BANKSEL	_min
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 1316     	MOVR	_min,W
     000E 00rr                      1- 1317     	MOVAR	STK00
                                    1- 1318     	BANKSEL	_hour
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1319     	MOVR	_hour,W
     0011 2rrr                      1- 1320     	LCALL	_showTime
                                    1- 1321     	.line	590, "main.c"; 	ledFlag = 1;
                                    1- 1322     	BANKSEL	_Status2
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 18rr                      1- 1323     	BSR	_Status2,1
                                    1- 1324     	.line	591, "main.c"; 	whiteFlag = 1;
     0014 1Brr                      1- 1325     	BSR	_Status2,7
                                    1- 1326     	.line	592, "main.c"; 	yellowFlag = 0;
     0015 1Err                      1- 1327     	BCR	_Status2,4
                                    1- 1328     	.line	593, "main.c"; 	ledStep = 1;
     0016 2101                      1- 1329     	MOVIA	0x01
                                    1- 1330     	BANKSEL	_ledStep
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1331     	MOVAR	_ledStep
                                    1- 1332     	.line	594, "main.c"; 	ledDuty = 40;
     0019 2128                      1- 1333     	MOVIA	0x28
                                    1- 1334     	BANKSEL	_ledDuty
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1- 1335     	MOVAR	_ledDuty
     001C 3rrr                      1- 1336     	LGOTO	_00408_DS_
     001D                           1- 1337     _00406_DS_:
                                    1- 1338     	.line	598, "main.c"; 	closeTime();
     001D 2rrr                      1- 1339     	LCALL	_closeTime
     001E                           1- 1340     _00408_DS_:
                                    1- 1341     	.line	600, "main.c"; 	}
                                    1- 1342     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1- 1343     ; exit point of _pwCtr
                                    1- 1345     ;***
                                    1- 1346     ;  pBlock Stats: dbName = C
                                    1- 1347     ;***
                                    1- 1348     ;has an exit
                                    1- 1349     ;functions called:
                                    1- 1350     ;   _keyRead
                                    1- 1351     ;   _pwCtr
                                    1- 1352     ;   _keyRead2
                                    1- 1353     ;   _keyRead
                                    1- 1354     ;   _pwCtr
                                    1- 1355     ;   _keyRead2
                                    1- 1356     ;1 compiler assigned register :
                                    1- 1357     ;   r0x1029
                                    1- 1358     ;; Starting pCode block
                                    1- 1359     .segment "code"; module=main, function=_keyCtr
                                    1- 1361     ;local variable name mapping:
     0000                           1- 1363     _keyCtr:
                                    1- 1364     ; 2 exit points
                                    1- 1365     	.line	553, "main.c"; 	if(keyRead(0x08 & (~PORTB)))
     0000 07rr                      1- 1366     	COMR	_PORTB,W
                                    1- 1367     	BANKSEL	r0x1029
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1368     	MOVAR	r0x1029
     0003 2108                      1- 1369     	MOVIA	0x08
     0004 10rr                      1- 1370     	ANDAR	r0x1029,F
     0005 01rr                      1- 1371     	MOVR	r0x1029,W
     0006 2rrr                      1- 1372     	LCALL	_keyRead
                                    1- 1373     	BANKSEL	r0x1029
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 1374     	MOVAR	r0x1029
     0009 01rr                      1- 1375     	MOVR	r0x1029,W
     000A 0903                      1- 1376     	BTRSS	STATUS,2
                                    1- 1377     	.line	555, "main.c"; 	pwCtr();
     000B 2rrr                      1- 1378     	LCALL	_pwCtr
                                    1- 1379     	.line	557, "main.c"; 	DOFlag = (PORTB & 0x04) ? 1:0;
     000C 01rr                      1- 1380     	MOVR	_PORTB,W
     000D 2204                      1- 1381     	ANDIA	0x04
     000E 0903                      1- 1382     	BTRSS	STATUS,2
     000F 2101                      1- 1383     	MOVIA	0x01
                                    1- 1384     	BANKSEL	r0x1029
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1385     	MOVAR	r0x1029
     0012 13rr                      1- 1386     	RRR	r0x1029,W
     0013 0C03                      1- 1387     	BTRSC	STATUS,0
     0014 3rrr                      1- 1388     	LGOTO	_00003_DS_
                                    1- 1389     	BANKSEL	_Status
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 1Frr                      1- 1390     	BCR	_Status,6
     0017                           1- 1391     _00003_DS_:
     0017 0803                      1- 1392     	BTRSS	STATUS,0
     0018 3rrr                      1- 1393     	LGOTO	_00004_DS_
                                    1- 1394     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Brr                      1- 1395     	BSR	_Status,6
     001B                           1- 1396     _00004_DS_:
                                    1- 1397     	.line	558, "main.c"; 	char kclick = keyRead2(0x18 & (~PORTA));
     001B 07rr                      1- 1398     	COMR	_PORTA,W
                                    1- 1399     	BANKSEL	r0x1029
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1- 1400     	MOVAR	r0x1029
     001E 2118                      1- 1401     	MOVIA	0x18
     001F 10rr                      1- 1402     	ANDAR	r0x1029,F
     0020 01rr                      1- 1403     	MOVR	r0x1029,W
     0021 2rrr                      1- 1404     	LCALL	_keyRead2
                                    1- 1405     	BANKSEL	r0x1029
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 00rr                      1- 1406     	MOVAR	r0x1029
                                    1- 1407     	.line	559, "main.c"; 	if(kclick == 1)
     0024 2401                      1- 1408     	XORIA	0x01
     0025 0903                      1- 1409     	BTRSS	STATUS,2
     0026 3rrr                      1- 1410     	LGOTO	_00398_DS_
                                    1- 1411     	.line	561, "main.c"; 	hourAddFlag = 0;
                                    1- 1412     	BANKSEL	_LedStatus
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 1Drr                      1- 1413     	BCR	_LedStatus,3
                                    1- 1414     	.line	562, "main.c"; 	minAddFlag = 0;
     0029 1Err                      1- 1415     	BCR	_LedStatus,4
     002A 3rrr                      1- 1416     	LGOTO	_00400_DS_
     002B                           1- 1417     _00398_DS_:
                                    1- 1418     	.line	564, "main.c"; 	else if(kclick == 2)
                                    1- 1419     	BANKSEL	r0x1029
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 1420     	MOVR	r0x1029,W
     002D 2402                      1- 1421     	XORIA	0x02
     002E 0903                      1- 1422     	BTRSS	STATUS,2
     002F 3rrr                      1- 1423     	LGOTO	_00400_DS_
                                    1- 1424     	.line	567, "main.c"; 	if(keyNub & 0x10)
                                    1- 1425     	BANKSEL	_keyNub
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 0Arr                      1- 1426     	BTRSS	_keyNub,4
     0032 3rrr                      1- 1427     	LGOTO	_00393_DS_
                                    1- 1428     	.line	570, "main.c"; 	hourAddFlag = 1;
                                    1- 1429     	BANKSEL	_LedStatus
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 19rr                      1- 1430     	BSR	_LedStatus,3
     0035 3rrr                      1- 1431     	LGOTO	_00400_DS_
     0036                           1- 1432     _00393_DS_:
                                    1- 1433     	.line	573, "main.c"; 	else if(keyNub & 0x08)
                                    1- 1434     	BANKSEL	_keyNub
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 09rr                      1- 1435     	BTRSS	_keyNub,3
     0038 3rrr                      1- 1436     	LGOTO	_00400_DS_
                                    1- 1437     	.line	576, "main.c"; 	minAddFlag = 1;
                                    1- 1438     	BANKSEL	_LedStatus
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 1Arr                      1- 1439     	BSR	_LedStatus,4
     003B                           1- 1440     _00400_DS_:
                                    1- 1441     	.line	580, "main.c"; 	}
                                    1- 1442     	RETURN	
     003B 0010                      3-   26 m1      ret
                                    1- 1443     ; exit point of _keyCtr
                                    1- 1445     ;***
                                    1- 1446     ;  pBlock Stats: dbName = C
                                    1- 1447     ;***
                                    1- 1448     ;has an exit
                                    1- 1449     ;functions called:
                                    1- 1450     ;   _setHight
                                    1- 1451     ;   _setHight
                                    1- 1452     ;; Starting pCode block
                                    1- 1453     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1455     _gotoSleep:
                                    1- 1456     ; 2 exit points
                                    1- 1457     	.line	462, "main.c"; 	setHight();
     0000 2rrr                      1- 1458     	LCALL	_setHight
                                    1- 1459     	.line	463, "main.c"; 	sleepCount = 0;
                                    1- 1460     	BANKSEL	_sleepCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1- 1461     	CLRR	_sleepCount
     0003 02rr                      1- 1462     	CLRR	(_sleepCount + 1)
                                    1- 1463     	.line	464, "main.c"; 	BWUCON = 0x01;
     0004 2101                      1- 1464     	MOVIA	0x01
     0005 00rr                      1- 1465     	MOVAR	_BWUCON
                                    1- 1466     	.line	465, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0006 210B                      1- 1467     	MOVIA	0x0b
     0007 00rr                      1- 1468     	MOVAR	_INTE
                                    1- 1469     	.line	466, "main.c"; 	PCON =  C_LVR_En;	
     0008 2108                      1- 1470     	MOVIA	0x08
     0009 00rr                      1- 1471     	MOVAR	_PCON
                                    1- 1472     	.line	467, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000A 02rr                      1- 1473     	CLRR	_INTF
                                    1- 1474     	.line	468, "main.c"; 	CLRWDT();
     000B 0002                      1- 1475     	clrwdt
                                    1- 1476     	.line	469, "main.c"; 	SLEEP();
     000C 0001                      1- 1477     	sleep
                                    1- 1478     	.line	470, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;	// Enable Timer0��Timer1��WDT overflow interrupt
     000D 210B                      1- 1479     	MOVIA	0x0b
     000E 00rr                      1- 1480     	MOVAR	_INTE
                                    1- 1481     	.line	471, "main.c"; 	INTF = 0;
     000F 02rr                      1- 1482     	CLRR	_INTF
                                    1- 1483     	.line	473, "main.c"; 	PCON = C_WDT_En;				// Enable WDT ,  Enable LVR
     0010 2180                      1- 1484     	MOVIA	0x80
     0011 00rr                      1- 1485     	MOVAR	_PCON
                                    1- 1486     	.line	474, "main.c"; 	sleepFlag = 0;
                                    1- 1487     	BANKSEL	_sleepFlag
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 02rr                      1- 1488     	CLRR	_sleepFlag
                                    1- 1489     	.line	475, "main.c"; 	bitIndex = 0;
                                    1- 1490     	BANKSEL	_bitIndex
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 02rr                      1- 1491     	CLRR	_bitIndex
                                    1- 1492     	.line	476, "main.c"; 	value = 0;
                                    1- 1493     	BANKSEL	_value
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 02rr                      1- 1494     	CLRR	_value
                                    1- 1495     	.line	477, "main.c"; 	}
                                    1- 1496     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 1497     ; exit point of _gotoSleep
                                    1- 1499     ;***
                                    1- 1500     ;  pBlock Stats: dbName = C
                                    1- 1501     ;***
                                    1- 1502     ;has an exit
                                    1- 1503     ;functions called:
                                    1- 1504     ;   _pwCtr
                                    1- 1505     ;   _pwCtr
                                    1- 1506     ;1 compiler assigned register :
                                    1- 1507     ;   r0x102A
                                    1- 1508     ;; Starting pCode block
                                    1- 1509     .segment "code"; module=main, function=_proData
     0000                           1- 1511     _proData:
                                    1- 1512     ; 2 exit points
                                    1- 1513     	.line	351, "main.c"; 	irCode = (uint8)(~data4);
                                    1- 1514     	BANKSEL	_data4
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 07rr                      1- 1515     	COMR	_data4,W
                                    1- 1516     	BANKSEL	_irCode
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1- 1517     	MOVAR	_irCode
                                    1- 1518     	.line	352, "main.c"; 	if(irCode == data3 && keyTime == 0)
                                    1- 1519     	BANKSEL	_data3
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 12rr                      1- 1520     	XORAR	_data3,W
     0006 0903                      1- 1521     	BTRSS	STATUS,2
     0007 3rrr                      1- 1522     	LGOTO	_00290_DS_
                                    1- 1523     	BANKSEL	_keyTime
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1- 1524     	MOVR	_keyTime,W
     000A 0903                      1- 1525     	BTRSS	STATUS,2
     000B 3rrr                      1- 1526     	LGOTO	_00290_DS_
                                    1- 1527     	.line	354, "main.c"; 	keyTime = 30;
     000C 211E                      1- 1528     	MOVIA	0x1e
     000D 00rr                      1- 1529     	MOVAR	_keyTime
                                    1- 1530     	.line	355, "main.c"; 	switch(irCode)
                                    1- 1531     	BANKSEL	_irCode
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1532     	MOVR	_irCode,W
     0010 2401                      1- 1533     	XORIA	0x01
     0011 0D03                      1- 1534     	BTRSC	STATUS,2
     0012 3rrr                      1- 1535     	LGOTO	_00256_DS_
     0013 01rr                      1- 1536     	MOVR	_irCode,W
     0014 2405                      1- 1537     	XORIA	0x05
     0015 0D03                      1- 1538     	BTRSC	STATUS,2
     0016 3rrr                      1- 1539     	LGOTO	_00259_DS_
     0017 01rr                      1- 1540     	MOVR	_irCode,W
     0018 2407                      1- 1541     	XORIA	0x07
     0019 0D03                      1- 1542     	BTRSC	STATUS,2
     001A 3rrr                      1- 1543     	LGOTO	_00270_DS_
     001B 01rr                      1- 1544     	MOVR	_irCode,W
     001C 2409                      1- 1545     	XORIA	0x09
     001D 0D03                      1- 1546     	BTRSC	STATUS,2
     001E 3rrr                      1- 1547     	LGOTO	_00273_DS_
     001F 01rr                      1- 1548     	MOVR	_irCode,W
     0020 240C                      1- 1549     	XORIA	0x0c
     0021 0D03                      1- 1550     	BTRSC	STATUS,2
     0022 3rrr                      1- 1551     	LGOTO	_00276_DS_
     0023 01rr                      1- 1552     	MOVR	_irCode,W
     0024 240D                      1- 1553     	XORIA	0x0d
     0025 0D03                      1- 1554     	BTRSC	STATUS,2
     0026 3rrr                      1- 1555     	LGOTO	_00280_DS_
     0027 01rr                      1- 1556     	MOVR	_irCode,W
     0028 240E                      1- 1557     	XORIA	0x0e
     0029 0D03                      1- 1558     	BTRSC	STATUS,2
     002A 3rrr                      1- 1559     	LGOTO	_00284_DS_
     002B 01rr                      1- 1560     	MOVR	_irCode,W
     002C 2412                      1- 1561     	XORIA	0x12
     002D 0D03                      1- 1562     	BTRSC	STATUS,2
     002E 3rrr                      1- 1563     	LGOTO	_00257_DS_
     002F 01rr                      1- 1564     	MOVR	_irCode,W
     0030 241E                      1- 1565     	XORIA	0x1e
     0031 0D03                      1- 1566     	BTRSC	STATUS,2
     0032 3rrr                      1- 1567     	LGOTO	_00258_DS_
     0033 3rrr                      1- 1568     	LGOTO	_00290_DS_
     0034                           1- 1569     _00256_DS_:
                                    1- 1570     	.line	358, "main.c"; 	P4CR1 &= 0x7F;
     0034 00rr                      1- 1571     	SFUNR	_P4CR1
                                    1- 1572     	BANKSEL	r0x102A
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 00rr                      1- 1573     	MOVAR	r0x102A
     0037 1Frr                      1- 1574     	BCR	r0x102A,7
     0038 01rr                      1- 1575     	MOVR	r0x102A,W
     0039 00rr                      1- 1576     	SFUN	_P4CR1
                                    1- 1577     	.line	359, "main.c"; 	PORTA ^= 0x04;
     003A 2104                      1- 1578     	MOVIA	0x04
     003B 12rr                      1- 1579     	XORAR	_PORTA,F
                                    1- 1580     	.line	360, "main.c"; 	break;
     003C 3rrr                      1- 1581     	LGOTO	_00290_DS_
     003D                           1- 1582     _00257_DS_:
                                    1- 1583     	.line	362, "main.c"; 	pwCtr();
     003D 2rrr                      1- 1584     	LCALL	_pwCtr
                                    1- 1585     	.line	363, "main.c"; 	break;
     003E 3rrr                      1- 1586     	LGOTO	_00290_DS_
     003F                           1- 1587     _00258_DS_:
                                    1- 1588     	.line	365, "main.c"; 	ledFlag = !ledFlag;
     003F 2102                      1- 1589     	MOVIA	0x02
                                    1- 1590     	BANKSEL	_Status2
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 12rr                      1- 1591     	XORAR	_Status2,F
                                    1- 1592     	.line	366, "main.c"; 	break;
     0042 3rrr                      1- 1593     	LGOTO	_00290_DS_
     0043                           1- 1594     _00259_DS_:
                                    1- 1595     	.line	368, "main.c"; 	ledDuty = 25;
     0043 2119                      1- 1596     	MOVIA	0x19
                                    1- 1597     	BANKSEL	_ledDuty
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 00rr                      1- 1598     	MOVAR	_ledDuty
                                    1- 1599     	.line	369, "main.c"; 	if(++ledStep >= 4)
                                    1- 1600     	BANKSEL	_ledStep
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 05rr                      1- 1601     	INCR	_ledStep,F
                                    1- 1602     ;;unsigned compare: left < lit (0x4=4), size=1
     0048 2104                      1- 1603     	MOVIA	0x04
     0049 04rr                      1- 1604     	SUBAR	_ledStep,W
     004A 0803                      1- 1605     	BTRSS	STATUS,0
     004B 3rrr                      1- 1606     	LGOTO	_00261_DS_
                                    1- 1607     	.line	371, "main.c"; 	ledStep = 1;
     004C 2101                      1- 1608     	MOVIA	0x01
     004D 00rr                      1- 1609     	MOVAR	_ledStep
     004E                           1- 1610     _00261_DS_:
                                    1- 1611     	.line	373, "main.c"; 	if(ledStep == 1)
                                    1- 1612     	BANKSEL	_ledStep
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1- 1613     	MOVR	_ledStep,W
     0050 2401                      1- 1614     	XORIA	0x01
     0051 0903                      1- 1615     	BTRSS	STATUS,2
     0052 3rrr                      1- 1616     	LGOTO	_00268_DS_
                                    1- 1617     	.line	375, "main.c"; 	whiteFlag = 1;
                                    1- 1618     	BANKSEL	_Status2
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 1Brr                      1- 1619     	BSR	_Status2,7
                                    1- 1620     	.line	376, "main.c"; 	yellowFlag = 0;
     0055 1Err                      1- 1621     	BCR	_Status2,4
     0056 3rrr                      1- 1622     	LGOTO	_00290_DS_
     0057                           1- 1623     _00268_DS_:
                                    1- 1624     	.line	378, "main.c"; 	else if(ledStep == 2)
                                    1- 1625     	BANKSEL	_ledStep
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 01rr                      1- 1626     	MOVR	_ledStep,W
     0059 2402                      1- 1627     	XORIA	0x02
     005A 0903                      1- 1628     	BTRSS	STATUS,2
     005B 3rrr                      1- 1629     	LGOTO	_00265_DS_
                                    1- 1630     	.line	380, "main.c"; 	yellowFlag = 1;
                                    1- 1631     	BANKSEL	_Status2
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 1Arr                      1- 1632     	BSR	_Status2,4
                                    1- 1633     	.line	381, "main.c"; 	whiteFlag = 0;
     005E 1Frr                      1- 1634     	BCR	_Status2,7
     005F 3rrr                      1- 1635     	LGOTO	_00290_DS_
     0060                           1- 1636     _00265_DS_:
                                    1- 1637     	.line	383, "main.c"; 	else if(ledStep == 3)
                                    1- 1638     	BANKSEL	_ledStep
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1- 1639     	MOVR	_ledStep,W
     0062 2403                      1- 1640     	XORIA	0x03
     0063 0903                      1- 1641     	BTRSS	STATUS,2
     0064 3rrr                      1- 1642     	LGOTO	_00290_DS_
                                    1- 1643     	.line	385, "main.c"; 	yellowFlag = 1;
                                    1- 1644     	BANKSEL	_Status2
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 1Arr                      1- 1645     	BSR	_Status2,4
                                    1- 1646     	.line	386, "main.c"; 	whiteFlag = 1;
     0067 1Brr                      1- 1647     	BSR	_Status2,7
                                    1- 1648     	.line	389, "main.c"; 	break;
     0068 3rrr                      1- 1649     	LGOTO	_00290_DS_
     0069                           1- 1650     _00270_DS_:
                                    1- 1651     	.line	391, "main.c"; 	ledDuty = ledDuty + 5;
     0069 2105                      1- 1652     	MOVIA	0x05
                                    1- 1653     	BANKSEL	_ledDuty
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 03rr                      1- 1654     	ADDAR	_ledDuty,F
                                    1- 1655     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1656     ;;unsigned compare: left >= lit (0x33=51), size=1
                                    1- 1657     	.line	392, "main.c"; 	if(ledDuty>50)
     006C 2133                      1- 1658     	MOVIA	0x33
     006D 04rr                      1- 1659     	SUBAR	_ledDuty,W
     006E 0803                      1- 1660     	BTRSS	STATUS,0
     006F 3rrr                      1- 1661     	LGOTO	_00290_DS_
                                    1- 1662     	.line	393, "main.c"; 	ledDuty = 50;
     0070 2132                      1- 1663     	MOVIA	0x32
     0071 00rr                      1- 1664     	MOVAR	_ledDuty
                                    1- 1665     	.line	394, "main.c"; 	break;
     0072 3rrr                      1- 1666     	LGOTO	_00290_DS_
     0073                           1- 1667     _00273_DS_:
                                    1- 1668     	.line	396, "main.c"; 	ledDuty = ledDuty - 5;
     0073 21FB                      1- 1669     	MOVIA	0xfb
                                    1- 1670     	BANKSEL	_ledDuty
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 03rr                      1- 1671     	ADDAR	_ledDuty,F
                                    1- 1672     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 1673     	.line	397, "main.c"; 	if(ledDuty<5)
     0076 2105                      1- 1674     	MOVIA	0x05
     0077 04rr                      1- 1675     	SUBAR	_ledDuty,W
     0078 0C03                      1- 1676     	BTRSC	STATUS,0
     0079 3rrr                      1- 1677     	LGOTO	_00290_DS_
                                    1- 1678     	.line	398, "main.c"; 	ledDuty = 5;
     007A 2105                      1- 1679     	MOVIA	0x05
     007B 00rr                      1- 1680     	MOVAR	_ledDuty
                                    1- 1681     	.line	399, "main.c"; 	break;
     007C 3rrr                      1- 1682     	LGOTO	_00290_DS_
     007D                           1- 1683     _00276_DS_:
                                    1- 1684     	.line	401, "main.c"; 	led1Flag = !led1Flag;
     007D 2101                      1- 1685     	MOVIA	0x01
                                    1- 1686     	BANKSEL	_LedStatus
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 12rr                      1- 1687     	XORAR	_LedStatus,F
                                    1- 1688     	.line	402, "main.c"; 	timeOverFlag = 0;
                                    1- 1689     	BANKSEL	_Status2
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 1Drr                      1- 1690     	BCR	_Status2,3
                                    1- 1691     	.line	403, "main.c"; 	if(led1Flag)
                                    1- 1692     	BANKSEL	_LedStatus
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 08rr                      1- 1693     	BTRSS	_LedStatus,0
     0084 3rrr                      1- 1694     	LGOTO	_00278_DS_
                                    1- 1695     	.line	405, "main.c"; 	timeFlag = 1;
                                    1- 1696     	BANKSEL	_Status2
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 19rr                      1- 1697     	BSR	_Status2,2
                                    1- 1698     	.line	406, "main.c"; 	deadTime = 900;
     0087 2184                      1- 1699     	MOVIA	0x84
                                    1- 1700     	BANKSEL	_deadTime
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 00rr                      1- 1701     	MOVAR	_deadTime
     008A 2103                      1- 1702     	MOVIA	0x03
     008B 00rr                      1- 1703     	MOVAR	(_deadTime + 1)
                                    1- 1704     	.line	407, "main.c"; 	shanshuo = 10;
     008C 210A                      1- 1705     	MOVIA	0x0a
                                    1- 1706     	BANKSEL	_shanshuo
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 00rr                      1- 1707     	MOVAR	_shanshuo
                                    1- 1708     	.line	408, "main.c"; 	led2Flag = 0;
                                    1- 1709     	BANKSEL	_LedStatus
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 1Crr                      1- 1710     	BCR	_LedStatus,1
                                    1- 1711     	.line	409, "main.c"; 	led3Flag = 0;
     0091 1Drr                      1- 1712     	BCR	_LedStatus,2
     0092 3rrr                      1- 1713     	LGOTO	_00290_DS_
     0093                           1- 1714     _00278_DS_:
                                    1- 1715     	.line	413, "main.c"; 	shanshuo = 40;
     0093 2128                      1- 1716     	MOVIA	0x28
                                    1- 1717     	BANKSEL	_shanshuo
     0094 rrrr                      3-   71 m1      .banksel ram_address
     0095 00rr                      1- 1718     	MOVAR	_shanshuo
                                    1- 1719     	.line	414, "main.c"; 	timeFlag = 0;
                                    1- 1720     	BANKSEL	_Status2
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 1Drr                      1- 1721     	BCR	_Status2,2
                                    1- 1722     	.line	416, "main.c"; 	break;
     0098 3rrr                      1- 1723     	LGOTO	_00290_DS_
     0099                           1- 1724     _00280_DS_:
                                    1- 1725     	.line	418, "main.c"; 	led2Flag = !led2Flag;
     0099 2102                      1- 1726     	MOVIA	0x02
                                    1- 1727     	BANKSEL	_LedStatus
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 12rr                      1- 1728     	XORAR	_LedStatus,F
                                    1- 1729     	.line	419, "main.c"; 	timeOverFlag = 0;
                                    1- 1730     	BANKSEL	_Status2
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 1Drr                      1- 1731     	BCR	_Status2,3
                                    1- 1732     	.line	420, "main.c"; 	if(led2Flag)
                                    1- 1733     	BANKSEL	_LedStatus
     009E rrrr                      3-   71 m1      .banksel ram_address
     009F 08rr                      1- 1734     	BTRSS	_LedStatus,1
     00A0 3rrr                      1- 1735     	LGOTO	_00282_DS_
                                    1- 1736     	.line	422, "main.c"; 	timeFlag = 1;
                                    1- 1737     	BANKSEL	_Status2
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 19rr                      1- 1738     	BSR	_Status2,2
                                    1- 1739     	.line	423, "main.c"; 	deadTime = 1800;
     00A3 2108                      1- 1740     	MOVIA	0x08
                                    1- 1741     	BANKSEL	_deadTime
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 00rr                      1- 1742     	MOVAR	_deadTime
     00A6 2107                      1- 1743     	MOVIA	0x07
     00A7 00rr                      1- 1744     	MOVAR	(_deadTime + 1)
                                    1- 1745     	.line	424, "main.c"; 	shanshuo = 10;
     00A8 210A                      1- 1746     	MOVIA	0x0a
                                    1- 1747     	BANKSEL	_shanshuo
     00A9 rrrr                      3-   71 m1      .banksel ram_address
     00AA 00rr                      1- 1748     	MOVAR	_shanshuo
                                    1- 1749     	.line	425, "main.c"; 	led1Flag = 0;
                                    1- 1750     	BANKSEL	_LedStatus
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 1Crr                      1- 1751     	BCR	_LedStatus,0
                                    1- 1752     	.line	426, "main.c"; 	led3Flag = 0;
     00AD 1Drr                      1- 1753     	BCR	_LedStatus,2
     00AE 3rrr                      1- 1754     	LGOTO	_00290_DS_
     00AF                           1- 1755     _00282_DS_:
                                    1- 1756     	.line	430, "main.c"; 	shanshuo = 40;
     00AF 2128                      1- 1757     	MOVIA	0x28
                                    1- 1758     	BANKSEL	_shanshuo
     00B0 rrrr                      3-   71 m1      .banksel ram_address
     00B1 00rr                      1- 1759     	MOVAR	_shanshuo
                                    1- 1760     	.line	431, "main.c"; 	timeFlag = 0;
                                    1- 1761     	BANKSEL	_Status2
     00B2 rrrr                      3-   71 m1      .banksel ram_address
     00B3 1Drr                      1- 1762     	BCR	_Status2,2
                                    1- 1763     	.line	433, "main.c"; 	break;
     00B4 3rrr                      1- 1764     	LGOTO	_00290_DS_
     00B5                           1- 1765     _00284_DS_:
                                    1- 1766     	.line	435, "main.c"; 	led3Flag = !led3Flag;
     00B5 2104                      1- 1767     	MOVIA	0x04
                                    1- 1768     	BANKSEL	_LedStatus
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 12rr                      1- 1769     	XORAR	_LedStatus,F
                                    1- 1770     	.line	436, "main.c"; 	timeOverFlag = 0;
                                    1- 1771     	BANKSEL	_Status2
     00B8 rrrr                      3-   71 m1      .banksel ram_address
     00B9 1Drr                      1- 1772     	BCR	_Status2,3
                                    1- 1773     	.line	437, "main.c"; 	if(led3Flag)
                                    1- 1774     	BANKSEL	_LedStatus
     00BA rrrr                      3-   71 m1      .banksel ram_address
     00BB 09rr                      1- 1775     	BTRSS	_LedStatus,2
     00BC 3rrr                      1- 1776     	LGOTO	_00286_DS_
                                    1- 1777     	.line	439, "main.c"; 	timeFlag = 1;
                                    1- 1778     	BANKSEL	_Status2
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 19rr                      1- 1779     	BSR	_Status2,2
                                    1- 1780     	.line	440, "main.c"; 	deadTime = 3600;
     00BF 2110                      1- 1781     	MOVIA	0x10
                                    1- 1782     	BANKSEL	_deadTime
     00C0 rrrr                      3-   71 m1      .banksel ram_address
     00C1 00rr                      1- 1783     	MOVAR	_deadTime
     00C2 210E                      1- 1784     	MOVIA	0x0e
     00C3 00rr                      1- 1785     	MOVAR	(_deadTime + 1)
                                    1- 1786     	.line	441, "main.c"; 	shanshuo = 10;
     00C4 210A                      1- 1787     	MOVIA	0x0a
                                    1- 1788     	BANKSEL	_shanshuo
     00C5 rrrr                      3-   71 m1      .banksel ram_address
     00C6 00rr                      1- 1789     	MOVAR	_shanshuo
                                    1- 1790     	.line	442, "main.c"; 	led1Flag = 0;
                                    1- 1791     	BANKSEL	_LedStatus
     00C7 rrrr                      3-   71 m1      .banksel ram_address
     00C8 1Crr                      1- 1792     	BCR	_LedStatus,0
                                    1- 1793     	.line	443, "main.c"; 	led2Flag = 0;
     00C9 1Crr                      1- 1794     	BCR	_LedStatus,1
     00CA 3rrr                      1- 1795     	LGOTO	_00290_DS_
     00CB                           1- 1796     _00286_DS_:
                                    1- 1797     	.line	447, "main.c"; 	shanshuo = 40;
     00CB 2128                      1- 1798     	MOVIA	0x28
                                    1- 1799     	BANKSEL	_shanshuo
     00CC rrrr                      3-   71 m1      .banksel ram_address
     00CD 00rr                      1- 1800     	MOVAR	_shanshuo
                                    1- 1801     	.line	448, "main.c"; 	timeFlag = 0;
                                    1- 1802     	BANKSEL	_Status2
     00CE rrrr                      3-   71 m1      .banksel ram_address
     00CF 1Drr                      1- 1803     	BCR	_Status2,2
     00D0                           1- 1804     _00290_DS_:
                                    1- 1805     	.line	453, "main.c"; 	ReadOver = 0;
                                    1- 1806     	BANKSEL	_Status
     00D0 rrrr                      3-   71 m1      .banksel ram_address
     00D1 1Err                      1- 1807     	BCR	_Status,4
                                    1- 1808     	.line	454, "main.c"; 	}
                                    1- 1809     	RETURN	
     00D2 0010                      3-   26 m1      ret
                                    1- 1810     ; exit point of _proData
                                    1- 1812     ;***
                                    1- 1813     ;  pBlock Stats: dbName = C
                                    1- 1814     ;***
                                    1- 1815     ;has an exit
                                    1- 1816     ;1 compiler assigned register :
                                    1- 1817     ;   r0x102A
                                    1- 1818     ;; Starting pCode block
                                    1- 1819     .segment "code"; module=main, function=_GetOneByte
                                    1- 1821     ;local variable name mapping:
     0000                           1- 1823     _GetOneByte:
                                    1- 1824     ; 2 exit points
                                    1- 1825     	.line	305, "main.c"; 	void GetOneByte(uint8 bitNub)
                                    1- 1826     	BANKSEL	r0x102A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1827     	MOVAR	r0x102A
                                    1- 1828     	.line	307, "main.c"; 	if(RemoteStart)
                                    1- 1829     	BANKSEL	_Status
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 09rr                      1- 1830     	BTRSS	_Status,3
     0004 3rrr                      1- 1831     	LGOTO	_00251_DS_
                                    1- 1832     	.line	309, "main.c"; 	if(bitIndex == 0)
                                    1- 1833     	BANKSEL	_bitIndex
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1834     	MOVR	_bitIndex,W
     0007 0903                      1- 1835     	BTRSS	STATUS,2
     0008 3rrr                      1- 1836     	LGOTO	_00235_DS_
                                    1- 1837     	.line	311, "main.c"; 	bitIndex = 0;
     0009 02rr                      1- 1838     	CLRR	_bitIndex
                                    1- 1839     	.line	312, "main.c"; 	value = 0;
                                    1- 1840     	BANKSEL	_value
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1- 1841     	CLRR	_value
                                    1- 1842     	.line	313, "main.c"; 	data1 = data2 = data3 = data4 = 0;
                                    1- 1843     	BANKSEL	_data4
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1- 1844     	CLRR	_data4
                                    1- 1845     	BANKSEL	_data3
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 1846     	CLRR	_data3
                                    1- 1847     	BANKSEL	_data2
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1- 1848     	CLRR	_data2
                                    1- 1849     	BANKSEL	_data1
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 02rr                      1- 1850     	CLRR	_data1
     0014                           1- 1851     _00235_DS_:
                                    1- 1852     	.line	315, "main.c"; 	++bitIndex;
                                    1- 1853     	BANKSEL	_bitIndex
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1- 1854     	INCR	_bitIndex,F
                                    1- 1855     	.line	316, "main.c"; 	if(bitNub)
                                    1- 1856     	BANKSEL	r0x102A
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1857     	MOVR	r0x102A,W
     0018 0D03                      1- 1858     	BTRSC	STATUS,2
     0019 3rrr                      1- 1859     	LGOTO	_00005_DS_
                                    1- 1860     	.line	318, "main.c"; 	value |= 0x80;
                                    1- 1861     	BANKSEL	_value
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 1Brr                      1- 1862     	BSR	_value,7
     001C                           1- 1863     _00005_DS_:
                                    1- 1864     	.line	321, "main.c"; 	if(bitIndex == 8)
                                    1- 1865     	BANKSEL	_bitIndex
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 1866     	MOVR	_bitIndex,W
     001E 2408                      1- 1867     	XORIA	0x08
     001F 0903                      1- 1868     	BTRSS	STATUS,2
     0020 3rrr                      1- 1869     	LGOTO	_00247_DS_
                                    1- 1870     	.line	323, "main.c"; 	data1 = value;
                                    1- 1871     	BANKSEL	_value
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1872     	MOVR	_value,W
                                    1- 1873     	BANKSEL	_data1
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1874     	MOVAR	_data1
     0025 3rrr                      1- 1875     	LGOTO	_00248_DS_
     0026                           1- 1876     _00247_DS_:
                                    1- 1877     	.line	325, "main.c"; 	else if(bitIndex == 16)
                                    1- 1878     	BANKSEL	_bitIndex
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1879     	MOVR	_bitIndex,W
     0028 2410                      1- 1880     	XORIA	0x10
     0029 0903                      1- 1881     	BTRSS	STATUS,2
     002A 3rrr                      1- 1882     	LGOTO	_00244_DS_
                                    1- 1883     	.line	327, "main.c"; 	data2 = value;
                                    1- 1884     	BANKSEL	_value
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 1885     	MOVR	_value,W
                                    1- 1886     	BANKSEL	_data2
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 1887     	MOVAR	_data2
     002F 3rrr                      1- 1888     	LGOTO	_00248_DS_
     0030                           1- 1889     _00244_DS_:
                                    1- 1890     	.line	330, "main.c"; 	else if(bitIndex == 24)
                                    1- 1891     	BANKSEL	_bitIndex
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1- 1892     	MOVR	_bitIndex,W
     0032 2418                      1- 1893     	XORIA	0x18
     0033 0903                      1- 1894     	BTRSS	STATUS,2
     0034 3rrr                      1- 1895     	LGOTO	_00241_DS_
                                    1- 1896     	.line	332, "main.c"; 	data3 = value;
                                    1- 1897     	BANKSEL	_value
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1898     	MOVR	_value,W
                                    1- 1899     	BANKSEL	_data3
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 1900     	MOVAR	_data3
     0039 3rrr                      1- 1901     	LGOTO	_00248_DS_
     003A                           1- 1902     _00241_DS_:
                                    1- 1903     	.line	335, "main.c"; 	else if(bitIndex == 32)
                                    1- 1904     	BANKSEL	_bitIndex
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1- 1905     	MOVR	_bitIndex,W
     003C 2420                      1- 1906     	XORIA	0x20
     003D 0903                      1- 1907     	BTRSS	STATUS,2
     003E 3rrr                      1- 1908     	LGOTO	_00248_DS_
                                    1- 1909     	.line	337, "main.c"; 	data4 = value;
                                    1- 1910     	BANKSEL	_value
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1- 1911     	MOVR	_value,W
                                    1- 1912     	BANKSEL	_data4
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 00rr                      1- 1913     	MOVAR	_data4
                                    1- 1914     	.line	338, "main.c"; 	ReadOver = 1;
                                    1- 1915     	BANKSEL	_Status
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 1Arr                      1- 1916     	BSR	_Status,4
                                    1- 1917     	.line	339, "main.c"; 	OneCode = 0;
     0045 1Crr                      1- 1918     	BCR	_Status,1
                                    1- 1919     	.line	340, "main.c"; 	ZeroCode = 0;
     0046 1Crr                      1- 1920     	BCR	_Status,0
                                    1- 1921     	.line	341, "main.c"; 	RemoteStart = 0;
     0047 1Drr                      1- 1922     	BCR	_Status,3
                                    1- 1923     	.line	342, "main.c"; 	bitIndex = 0;
                                    1- 1924     	BANKSEL	_bitIndex
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 02rr                      1- 1925     	CLRR	_bitIndex
                                    1- 1926     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=1, sign=0, same=1, offr=0
     004A                           1- 1927     _00248_DS_:
                                    1- 1928     	.line	345, "main.c"; 	value = value >> 1;
     004A 1C03                      1- 1929     	BCR	STATUS,0
                                    1- 1930     	BANKSEL	_value
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 13rr                      1- 1931     	RRR	_value,F
     004D                           1- 1932     _00251_DS_:
                                    1- 1933     	.line	347, "main.c"; 	}
                                    1- 1934     	RETURN	
     004D 0010                      3-   26 m1      ret
                                    1- 1935     ; exit point of _GetOneByte
                                    1- 1937     ;***
                                    1- 1938     ;  pBlock Stats: dbName = C
                                    1- 1939     ;***
                                    1- 1940     ;has an exit
                                    1- 1941     ;functions called:
                                    1- 1942     ;   _cleanData
                                    1- 1943     ;   _cleanData
                                    1- 1944     ;4 compiler assigned registers:
                                    1- 1945     ;   r0x102A
                                    1- 1946     ;   r0x102B
                                    1- 1947     ;   r0x102C
                                    1- 1948     ;   r0x102D
                                    1- 1949     ;; Starting pCode block
                                    1- 1950     .segment "code"; module=main, function=_proLow
     0000                           1- 1952     _proLow:
                                    1- 1953     ; 2 exit points
                                    1- 1954     	.line	261, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 1955     	CLRA	
     0001 00rr                      1- 1956     	SFUN	_T1CR1
                                    1- 1957     	.line	262, "main.c"; 	T1Counter = accTimeH;
                                    1- 1958     	BANKSEL	_accTimeH
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 01rr                      1- 1959     	MOVR	_accTimeH,W
                                    1- 1960     	BANKSEL	_T1Counter
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 1961     	MOVAR	_T1Counter
     0006 02rr                      1- 1962     	CLRR	(_T1Counter + 1)
                                    1- 1963     	.line	263, "main.c"; 	T1Counter <<= 8;
     0007 01rr                      1- 1964     	MOVR	_T1Counter,W
     0008 00rr                      1- 1965     	MOVAR	(_T1Counter + 1)
     0009 02rr                      1- 1966     	CLRR	_T1Counter
                                    1- 1967     	.line	264, "main.c"; 	T1Counter += (0xFF - TMR1);
     000A 00rr                      1- 1968     	SFUNR	_TMR1
                                    1- 1969     ;;3	MOVAR	r0x102A
                                    1- 1970     	BANKSEL	r0x102B
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1- 1971     	MOVAR	r0x102B
                                    1- 1972     	BANKSEL	r0x102C
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1- 1973     	CLRR	r0x102C
                                    1- 1974     	BANKSEL	r0x102B
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1975     	MOVR	r0x102B,W
     0011 27FF                      1- 1976     	SUBIA	0xff
                                    1- 1977     	BANKSEL	r0x102A
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 1978     	MOVAR	r0x102A
     0014 2100                      1- 1979     	MOVIA	0x00
     0015 0C03                      1- 1980     	BTRSC	STATUS,0
     0016 3rrr                      1- 1981     	LGOTO	_00006_DS_
                                    1- 1982     	BANKSEL	r0x102C
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 05rr                      1- 1983     	INCR	r0x102C,W
     0019                           1- 1984     _00006_DS_:
     0019 2700                      1- 1985     	SUBIA	0x00
                                    1- 1986     	BANKSEL	r0x102C
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1- 1987     	MOVAR	r0x102C
                                    1- 1988     ;;1	MOVAR	r0x102D
                                    1- 1989     	BANKSEL	r0x102A
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 1990     	MOVR	r0x102A,W
                                    1- 1991     	BANKSEL	r0x102B
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1992     	MOVAR	r0x102B
                                    1- 1993     	BANKSEL	_T1Counter
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 03rr                      1- 1994     	ADDAR	_T1Counter,F
                                    1- 1995     	BANKSEL	r0x102C
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1996     	MOVR	r0x102C,W
     0024 0C03                      1- 1997     	BTRSC	STATUS,0
     0025 05rr                      1- 1998     	INCR	r0x102C,W
     0026 0D03                      1- 1999     	BTRSC	STATUS,2
     0027 3rrr                      1- 2000     	LGOTO	_00007_DS_
                                    1- 2001     	BANKSEL	_T1Counter
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 03rr                      1- 2002     	ADDAR	(_T1Counter + 1),F
     002A                           1- 2003     _00007_DS_:
                                    1- 2004     	.line	265, "main.c"; 	accTimeH = 0;
                                    1- 2005     	BANKSEL	_accTimeH
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 02rr                      1- 2006     	CLRR	_accTimeH
                                    1- 2007     	.line	266, "main.c"; 	TMR1 = 0xFF;
     002C 21FF                      1- 2008     	MOVIA	0xff
     002D 00rr                      1- 2009     	SFUN	_TMR1
                                    1- 2010     	.line	267, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload; 
     002E 2103                      1- 2011     	MOVIA	0x03
     002F 00rr                      1- 2012     	SFUN	_T1CR1
                                    1- 2013     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2014     ;;unsigned compare: left >= lit (0x1FD=509), size=2
                                    1- 2015     	.line	268, "main.c"; 	if((T1Counter > (HeadCont_L - (FaultTolerant*FaultTolerantX)))&&(T1Counter < (HeadCont_L + (FaultTolerant*FaultTolerantX))))
     0030 2101                      1- 2016     	MOVIA	0x01
                                    1- 2017     	BANKSEL	_T1Counter
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 04rr                      1- 2018     	SUBAR	(_T1Counter + 1),W
     0033 0903                      1- 2019     	BTRSS	STATUS,2
     0034 3rrr                      1- 2020     	LGOTO	_00226_DS_
     0035 21FD                      1- 2021     	MOVIA	0xfd
     0036 04rr                      1- 2022     	SUBAR	_T1Counter,W
     0037                           1- 2023     _00226_DS_:
     0037 0803                      1- 2024     	BTRSS	STATUS,0
     0038 3rrr                      1- 2025     	LGOTO	_00206_DS_
                                    1- 2026     ;;unsigned compare: left < lit (0x28C=652), size=2
     0039 2102                      1- 2027     	MOVIA	0x02
                                    1- 2028     	BANKSEL	_T1Counter
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 04rr                      1- 2029     	SUBAR	(_T1Counter + 1),W
     003C 0903                      1- 2030     	BTRSS	STATUS,2
     003D 3rrr                      1- 2031     	LGOTO	_00227_DS_
     003E 218C                      1- 2032     	MOVIA	0x8c
     003F 04rr                      1- 2033     	SUBAR	_T1Counter,W
     0040                           1- 2034     _00227_DS_:
     0040 0C03                      1- 2035     	BTRSC	STATUS,0
     0041 3rrr                      1- 2036     	LGOTO	_00206_DS_
                                    1- 2037     	.line	270, "main.c"; 	RemoteStart = 0;       //ң������ͷ
                                    1- 2038     	BANKSEL	_Status
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 1Drr                      1- 2039     	BCR	_Status,3
                                    1- 2040     	.line	271, "main.c"; 	MaybeRemoteStart = 1;		//����ң������ͷ
     0044 19rr                      1- 2041     	BSR	_Status,2
                                    1- 2042     	.line	272, "main.c"; 	sleepFlag = 0;
                                    1- 2043     	BANKSEL	_sleepFlag
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 02rr                      1- 2044     	CLRR	_sleepFlag
                                    1- 2045     	.line	273, "main.c"; 	bitIndex = 0;
                                    1- 2046     	BANKSEL	_bitIndex
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 02rr                      1- 2047     	CLRR	_bitIndex
                                    1- 2048     	.line	274, "main.c"; 	OneCode = 0;
                                    1- 2049     	BANKSEL	_Status
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 1Crr                      1- 2050     	BCR	_Status,1
                                    1- 2051     	.line	275, "main.c"; 	ZeroCode = 0;
     004B 1Crr                      1- 2052     	BCR	_Status,0
                                    1- 2053     	.line	276, "main.c"; 	ReadOver = 0;
     004C 1Err                      1- 2054     	BCR	_Status,4
                                    1- 2055     	.line	276, "main.c"; 	}
     004D 3rrr                      1- 2056     	LGOTO	_00209_DS_
     004E                           1- 2057     _00206_DS_:
                                    1- 2058     	.line	278, "main.c"; 	else if(RemoteStart)
                                    1- 2059     	BANKSEL	_Status
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 09rr                      1- 2060     	BTRSS	_Status,3
     0050 3rrr                      1- 2061     	LGOTO	_00209_DS_
                                    1- 2062     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2063     ;;unsigned compare: left >= lit (0x19=25), size=2
                                    1- 2064     	.line	289, "main.c"; 	if((T1Counter >(OneCode_L - FaultTolerant))&&(T1Counter < (OneCode_L + FaultTolerant)))
     0051 2100                      1- 2065     	MOVIA	0x00
                                    1- 2066     	BANKSEL	_T1Counter
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 04rr                      1- 2067     	SUBAR	(_T1Counter + 1),W
     0054 0903                      1- 2068     	BTRSS	STATUS,2
     0055 3rrr                      1- 2069     	LGOTO	_00228_DS_
     0056 2119                      1- 2070     	MOVIA	0x19
     0057 04rr                      1- 2071     	SUBAR	_T1Counter,W
     0058                           1- 2072     _00228_DS_:
     0058 0803                      1- 2073     	BTRSS	STATUS,0
     0059 3rrr                      1- 2074     	LGOTO	_00200_DS_
                                    1- 2075     ;;unsigned compare: left < lit (0x30=48), size=2
     005A 2100                      1- 2076     	MOVIA	0x00
                                    1- 2077     	BANKSEL	_T1Counter
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 04rr                      1- 2078     	SUBAR	(_T1Counter + 1),W
     005D 0903                      1- 2079     	BTRSS	STATUS,2
     005E 3rrr                      1- 2080     	LGOTO	_00229_DS_
     005F 2130                      1- 2081     	MOVIA	0x30
     0060 04rr                      1- 2082     	SUBAR	_T1Counter,W
     0061                           1- 2083     _00229_DS_:
     0061 0C03                      1- 2084     	BTRSC	STATUS,0
     0062 3rrr                      1- 2085     	LGOTO	_00200_DS_
                                    1- 2086     	.line	292, "main.c"; 	NOP();
     0063 0000                      1- 2087     	nop
     0064 3rrr                      1- 2088     	LGOTO	_00209_DS_
     0065                           1- 2089     _00200_DS_:
                                    1- 2090     	.line	297, "main.c"; 	cleanData();
     0065 2rrr                      1- 2091     	LCALL	_cleanData
     0066                           1- 2092     _00209_DS_:
                                    1- 2093     	.line	302, "main.c"; 	}
                                    1- 2094     	RETURN	
     0066 0010                      3-   26 m1      ret
                                    1- 2095     ; exit point of _proLow
                                    1- 2097     ;***
                                    1- 2098     ;  pBlock Stats: dbName = C
                                    1- 2099     ;***
                                    1- 2100     ;has an exit
                                    1- 2101     ;functions called:
                                    1- 2102     ;   _GetOneByte
                                    1- 2103     ;   _GetOneByte
                                    1- 2104     ;   _GetOneByte
                                    1- 2105     ;   _GetOneByte
                                    1- 2106     ;4 compiler assigned registers:
                                    1- 2107     ;   r0x102B
                                    1- 2108     ;   r0x102C
                                    1- 2109     ;   r0x102D
                                    1- 2110     ;   r0x102E
                                    1- 2111     ;; Starting pCode block
                                    1- 2112     .segment "code"; module=main, function=_proHight
     0000                           1- 2114     _proHight:
                                    1- 2115     ; 2 exit points
                                    1- 2116     	.line	194, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2117     	CLRA	
     0001 00rr                      1- 2118     	SFUN	_T1CR1
                                    1- 2119     	.line	195, "main.c"; 	T1Counter = accTimeH;
                                    1- 2120     	BANKSEL	_accTimeH
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 01rr                      1- 2121     	MOVR	_accTimeH,W
                                    1- 2122     	BANKSEL	_T1Counter
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 2123     	MOVAR	_T1Counter
     0006 02rr                      1- 2124     	CLRR	(_T1Counter + 1)
                                    1- 2125     	.line	196, "main.c"; 	T1Counter <<= 8;
     0007 01rr                      1- 2126     	MOVR	_T1Counter,W
     0008 00rr                      1- 2127     	MOVAR	(_T1Counter + 1)
     0009 02rr                      1- 2128     	CLRR	_T1Counter
                                    1- 2129     	.line	197, "main.c"; 	T1Counter += (0xFF - TMR1);
     000A 00rr                      1- 2130     	SFUNR	_TMR1
                                    1- 2131     ;;3	MOVAR	r0x102B
                                    1- 2132     	BANKSEL	r0x102C
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1- 2133     	MOVAR	r0x102C
                                    1- 2134     	BANKSEL	r0x102D
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1- 2135     	CLRR	r0x102D
                                    1- 2136     	BANKSEL	r0x102C
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 2137     	MOVR	r0x102C,W
     0011 27FF                      1- 2138     	SUBIA	0xff
                                    1- 2139     	BANKSEL	r0x102B
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2140     	MOVAR	r0x102B
     0014 2100                      1- 2141     	MOVIA	0x00
     0015 0C03                      1- 2142     	BTRSC	STATUS,0
     0016 3rrr                      1- 2143     	LGOTO	_00008_DS_
                                    1- 2144     	BANKSEL	r0x102D
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 05rr                      1- 2145     	INCR	r0x102D,W
     0019                           1- 2146     _00008_DS_:
     0019 2700                      1- 2147     	SUBIA	0x00
                                    1- 2148     	BANKSEL	r0x102D
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1- 2149     	MOVAR	r0x102D
                                    1- 2150     ;;1	MOVAR	r0x102E
                                    1- 2151     	BANKSEL	r0x102B
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 2152     	MOVR	r0x102B,W
                                    1- 2153     	BANKSEL	r0x102C
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 2154     	MOVAR	r0x102C
                                    1- 2155     	BANKSEL	_T1Counter
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 03rr                      1- 2156     	ADDAR	_T1Counter,F
                                    1- 2157     	BANKSEL	r0x102D
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 2158     	MOVR	r0x102D,W
     0024 0C03                      1- 2159     	BTRSC	STATUS,0
     0025 05rr                      1- 2160     	INCR	r0x102D,W
     0026 0D03                      1- 2161     	BTRSC	STATUS,2
     0027 3rrr                      1- 2162     	LGOTO	_00009_DS_
                                    1- 2163     	BANKSEL	_T1Counter
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 03rr                      1- 2164     	ADDAR	(_T1Counter + 1),F
     002A                           1- 2165     _00009_DS_:
                                    1- 2166     	.line	198, "main.c"; 	accTimeH = 0;
                                    1- 2167     	BANKSEL	_accTimeH
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 02rr                      1- 2168     	CLRR	_accTimeH
                                    1- 2169     	.line	199, "main.c"; 	TMRH = 0x00;
     002C 02rr                      1- 2170     	CLRR	_TMRH
                                    1- 2171     	.line	200, "main.c"; 	TMR1 = 0xFF;
     002D 21FF                      1- 2172     	MOVIA	0xff
     002E 00rr                      1- 2173     	SFUN	_TMR1
                                    1- 2174     	.line	201, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     002F 2103                      1- 2175     	MOVIA	0x03
     0030 00rr                      1- 2176     	SFUN	_T1CR1
                                    1- 2177     	.line	202, "main.c"; 	if(MaybeRemoteStart && T1Counter > (HeadCont_H - (FaultTolerant*FaultTolerantX)) && T1Counter < (HeadCont_H + (FaultTolerant*FaultTolerantX)))
                                    1- 2178     	BANKSEL	_Status
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 09rr                      1- 2179     	BTRSS	_Status,2
     0033 3rrr                      1- 2180     	LGOTO	_00153_DS_
                                    1- 2181     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2182     ;;unsigned compare: left >= lit (0xCD=205), size=2
     0034 2100                      1- 2183     	MOVIA	0x00
                                    1- 2184     	BANKSEL	_T1Counter
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 04rr                      1- 2185     	SUBAR	(_T1Counter + 1),W
     0037 0903                      1- 2186     	BTRSS	STATUS,2
     0038 3rrr                      1- 2187     	LGOTO	_00189_DS_
     0039 21CD                      1- 2188     	MOVIA	0xcd
     003A 04rr                      1- 2189     	SUBAR	_T1Counter,W
     003B                           1- 2190     _00189_DS_:
     003B 0803                      1- 2191     	BTRSS	STATUS,0
     003C 3rrr                      1- 2192     	LGOTO	_00153_DS_
                                    1- 2193     ;;unsigned compare: left < lit (0x15C=348), size=2
     003D 2101                      1- 2194     	MOVIA	0x01
                                    1- 2195     	BANKSEL	_T1Counter
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 04rr                      1- 2196     	SUBAR	(_T1Counter + 1),W
     0040 0903                      1- 2197     	BTRSS	STATUS,2
     0041 3rrr                      1- 2198     	LGOTO	_00190_DS_
     0042 215C                      1- 2199     	MOVIA	0x5c
     0043 04rr                      1- 2200     	SUBAR	_T1Counter,W
     0044                           1- 2201     _00190_DS_:
     0044 0C03                      1- 2202     	BTRSC	STATUS,0
     0045 3rrr                      1- 2203     	LGOTO	_00153_DS_
                                    1- 2204     	.line	204, "main.c"; 	MaybeRemoteStart = 0;       //ң������ͷ
                                    1- 2205     	BANKSEL	_Status
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 1Drr                      1- 2206     	BCR	_Status,2
                                    1- 2207     	.line	205, "main.c"; 	RemoteStart = 1;
     0048 19rr                      1- 2208     	BSR	_Status,3
                                    1- 2209     	.line	206, "main.c"; 	sleepFlag = 0;
                                    1- 2210     	BANKSEL	_sleepFlag
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 02rr                      1- 2211     	CLRR	_sleepFlag
                                    1- 2212     	.line	207, "main.c"; 	bitIndex = 0;
                                    1- 2213     	BANKSEL	_bitIndex
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 02rr                      1- 2214     	CLRR	_bitIndex
                                    1- 2215     	.line	208, "main.c"; 	OneCode = 0;
                                    1- 2216     	BANKSEL	_Status
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 1Crr                      1- 2217     	BCR	_Status,1
                                    1- 2218     	.line	209, "main.c"; 	ZeroCode = 0;
     004F 1Crr                      1- 2219     	BCR	_Status,0
                                    1- 2220     	.line	210, "main.c"; 	ReadOver = 0;
     0050 1Err                      1- 2221     	BCR	_Status,4
     0051 3rrr                      1- 2222     	LGOTO	_00157_DS_
     0052                           1- 2223     _00153_DS_:
                                    1- 2224     	.line	212, "main.c"; 	else if(RemoteStart)
                                    1- 2225     	BANKSEL	_Status
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 09rr                      1- 2226     	BTRSS	_Status,3
     0054 3rrr                      1- 2227     	LGOTO	_00150_DS_
                                    1- 2228     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2229     ;;unsigned compare: left >= lit (0x5B=91), size=2
                                    1- 2230     	.line	214, "main.c"; 	if((T1Counter> (OneCode_H - FaultTolerant))&&(T1Counter < (OneCode_H + FaultTolerant)))
     0055 2100                      1- 2231     	MOVIA	0x00
                                    1- 2232     	BANKSEL	_T1Counter
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 04rr                      1- 2233     	SUBAR	(_T1Counter + 1),W
     0058 0903                      1- 2234     	BTRSS	STATUS,2
     0059 3rrr                      1- 2235     	LGOTO	_00191_DS_
     005A 215B                      1- 2236     	MOVIA	0x5b
     005B 04rr                      1- 2237     	SUBAR	_T1Counter,W
     005C                           1- 2238     _00191_DS_:
     005C 0803                      1- 2239     	BTRSS	STATUS,0
     005D 3rrr                      1- 2240     	LGOTO	_00141_DS_
                                    1- 2241     ;;unsigned compare: left < lit (0x72=114), size=2
     005E 2100                      1- 2242     	MOVIA	0x00
                                    1- 2243     	BANKSEL	_T1Counter
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 04rr                      1- 2244     	SUBAR	(_T1Counter + 1),W
     0061 0903                      1- 2245     	BTRSS	STATUS,2
     0062 3rrr                      1- 2246     	LGOTO	_00192_DS_
     0063 2172                      1- 2247     	MOVIA	0x72
     0064 04rr                      1- 2248     	SUBAR	_T1Counter,W
     0065                           1- 2249     _00192_DS_:
     0065 0C03                      1- 2250     	BTRSC	STATUS,0
     0066 3rrr                      1- 2251     	LGOTO	_00141_DS_
                                    1- 2252     	.line	216, "main.c"; 	OneCode = 1;
                                    1- 2253     	BANKSEL	_Status
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 18rr                      1- 2254     	BSR	_Status,1
                                    1- 2255     	.line	217, "main.c"; 	ZeroCode = 0;
     0069 1Crr                      1- 2256     	BCR	_Status,0
     006A 3rrr                      1- 2257     	LGOTO	_00142_DS_
                                    1- 2258     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2259     ;;unsigned compare: left >= lit (0x1A=26), size=2
     006B                           1- 2260     _00141_DS_:
                                    1- 2261     	.line	221, "main.c"; 	if((T1Counter > (Zero_H - FaultTolerant))&&(T1Counter < (Zero_H + FaultTolerant)))
     006B 2100                      1- 2262     	MOVIA	0x00
                                    1- 2263     	BANKSEL	_T1Counter
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 04rr                      1- 2264     	SUBAR	(_T1Counter + 1),W
     006E 0903                      1- 2265     	BTRSS	STATUS,2
     006F 3rrr                      1- 2266     	LGOTO	_00193_DS_
     0070 211A                      1- 2267     	MOVIA	0x1a
     0071 04rr                      1- 2268     	SUBAR	_T1Counter,W
     0072                           1- 2269     _00193_DS_:
     0072 0803                      1- 2270     	BTRSS	STATUS,0
     0073 3rrr                      1- 2271     	LGOTO	_00137_DS_
                                    1- 2272     ;;unsigned compare: left < lit (0x31=49), size=2
     0074 2100                      1- 2273     	MOVIA	0x00
                                    1- 2274     	BANKSEL	_T1Counter
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 04rr                      1- 2275     	SUBAR	(_T1Counter + 1),W
     0077 0903                      1- 2276     	BTRSS	STATUS,2
     0078 3rrr                      1- 2277     	LGOTO	_00194_DS_
     0079 2131                      1- 2278     	MOVIA	0x31
     007A 04rr                      1- 2279     	SUBAR	_T1Counter,W
     007B                           1- 2280     _00194_DS_:
     007B 0C03                      1- 2281     	BTRSC	STATUS,0
     007C 3rrr                      1- 2282     	LGOTO	_00137_DS_
                                    1- 2283     	.line	223, "main.c"; 	ZeroCode = 1;
                                    1- 2284     	BANKSEL	_Status
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 18rr                      1- 2285     	BSR	_Status,0
                                    1- 2286     	.line	224, "main.c"; 	OneCode = 0;
     007F 1Crr                      1- 2287     	BCR	_Status,1
     0080 3rrr                      1- 2288     	LGOTO	_00142_DS_
     0081                           1- 2289     _00137_DS_:
                                    1- 2290     	.line	228, "main.c"; 	ZeroCode = 0;
                                    1- 2291     	BANKSEL	_Status
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 1Crr                      1- 2292     	BCR	_Status,0
                                    1- 2293     	.line	229, "main.c"; 	OneCode = 0;
     0083 1Crr                      1- 2294     	BCR	_Status,1
     0084                           1- 2295     _00142_DS_:
                                    1- 2296     	.line	233, "main.c"; 	if(OneCode)
                                    1- 2297     	BANKSEL	_Status
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 08rr                      1- 2298     	BTRSS	_Status,1
     0086 3rrr                      1- 2299     	LGOTO	_00147_DS_
                                    1- 2300     	.line	236, "main.c"; 	GetOneByte(1);
     0087 2101                      1- 2301     	MOVIA	0x01
     0088 2rrr                      1- 2302     	LCALL	_GetOneByte
     0089 3rrr                      1- 2303     	LGOTO	_00157_DS_
     008A                           1- 2304     _00147_DS_:
                                    1- 2305     	.line	238, "main.c"; 	else if(ZeroCode)
                                    1- 2306     	BANKSEL	_Status
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 08rr                      1- 2307     	BTRSS	_Status,0
     008C 3rrr                      1- 2308     	LGOTO	_00157_DS_
                                    1- 2309     	.line	241, "main.c"; 	GetOneByte(0);
     008D 2100                      1- 2310     	MOVIA	0x00
     008E 2rrr                      1- 2311     	LCALL	_GetOneByte
     008F 3rrr                      1- 2312     	LGOTO	_00157_DS_
     0090                           1- 2313     _00150_DS_:
                                    1- 2314     	.line	246, "main.c"; 	MaybeRemoteStart = 0;       //ң������ͷ
                                    1- 2315     	BANKSEL	_Status
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 1Drr                      1- 2316     	BCR	_Status,2
                                    1- 2317     	.line	247, "main.c"; 	RemoteStart = 0;
     0092 1Drr                      1- 2318     	BCR	_Status,3
                                    1- 2319     	.line	248, "main.c"; 	sleepFlag = 0;
                                    1- 2320     	BANKSEL	_sleepFlag
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 02rr                      1- 2321     	CLRR	_sleepFlag
                                    1- 2322     	.line	249, "main.c"; 	bitIndex = 0;
                                    1- 2323     	BANKSEL	_bitIndex
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 02rr                      1- 2324     	CLRR	_bitIndex
                                    1- 2325     	.line	250, "main.c"; 	OneCode = 0;
                                    1- 2326     	BANKSEL	_Status
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 1Crr                      1- 2327     	BCR	_Status,1
                                    1- 2328     	.line	251, "main.c"; 	ZeroCode = 0;
     0099 1Crr                      1- 2329     	BCR	_Status,0
                                    1- 2330     	.line	252, "main.c"; 	ReadOver = 0;
     009A 1Err                      1- 2331     	BCR	_Status,4
     009B                           1- 2332     _00157_DS_:
                                    1- 2333     	.line	257, "main.c"; 	}
                                    1- 2334     	RETURN	
     009B 0010                      3-   26 m1      ret
                                    1- 2335     ; exit point of _proHight
                                    1- 2337     ;***
                                    1- 2338     ;  pBlock Stats: dbName = C
                                    1- 2339     ;***
                                    1- 2340     ;has an exit
                                    1- 2341     ;; Starting pCode block
                                    1- 2342     .segment "code"; module=main, function=_cleanData
     0000                           1- 2344     _cleanData:
                                    1- 2345     ; 2 exit points
                                    1- 2346     	.line	182, "main.c"; 	MaybeRemoteStart = 0;       //ң������ͷ
                                    1- 2347     	BANKSEL	_Status
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Drr                      1- 2348     	BCR	_Status,2
                                    1- 2349     	.line	183, "main.c"; 	RemoteStart = 0;
     0002 1Drr                      1- 2350     	BCR	_Status,3
                                    1- 2351     	.line	184, "main.c"; 	sleepFlag = 0;
                                    1- 2352     	BANKSEL	_sleepFlag
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1- 2353     	CLRR	_sleepFlag
                                    1- 2354     	.line	185, "main.c"; 	bitIndex = 0;
                                    1- 2355     	BANKSEL	_bitIndex
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 2356     	CLRR	_bitIndex
                                    1- 2357     	.line	186, "main.c"; 	OneCode = 0;
                                    1- 2358     	BANKSEL	_Status
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 1Crr                      1- 2359     	BCR	_Status,1
                                    1- 2360     	.line	187, "main.c"; 	ZeroCode = 0;
     0009 1Crr                      1- 2361     	BCR	_Status,0
                                    1- 2362     	.line	188, "main.c"; 	ReadOver = 0;
     000A 1Err                      1- 2363     	BCR	_Status,4
                                    1- 2364     	.line	189, "main.c"; 	}
                                    1- 2365     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 2366     ; exit point of _cleanData
                                    1- 2369     ;	code size estimation:
                                    1- 2370     ;	  879+  227 =  1106 instructions ( 2666 byte)
                                    1- 2372     	end
                                    1- 2372     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    00000017
_00002_DS_              Label    0000003E
_00003_DS_              Label    00000017
_00004_DS_              Label    0000001B
_00005_DS_              Label    0000001C
_00006_DS_              Label    00000019
_00007_DS_              Label    0000002A
_00008_DS_              Label    00000019
_00009_DS_              Label    0000002A
_00010_DS_              Label    00000041
_00110_DS_              Label    00000028
_00112_DS_              Label    0000002A
_00125_DS_              Label    00000055
_00127_DS_              Label    00000059
_00137_DS_              Label    00000081
_00141_DS_              Label    0000006B
_00142_DS_              Label    00000084
_00147_DS_              Label    0000008A
_00150_DS_              Label    00000090
_00153_DS_              Label    00000052
_00157_DS_              Label    0000009B
_00189_DS_              Label    0000003B
_00190_DS_              Label    00000044
_00191_DS_              Label    0000005C
_00192_DS_              Label    00000065
_00193_DS_              Label    00000072
_00194_DS_              Label    0000007B
_00200_DS_              Label    00000065
_00206_DS_              Label    0000004E
_00209_DS_              Label    00000066
_00226_DS_              Label    00000037
_00227_DS_              Label    00000040
_00228_DS_              Label    00000058
_00229_DS_              Label    00000061
_00235_DS_              Label    00000014
_00241_DS_              Label    0000003A
_00244_DS_              Label    00000030
_00247_DS_              Label    00000026
_00248_DS_              Label    0000004A
_00251_DS_              Label    0000004D
_00256_DS_              Label    00000034
_00257_DS_              Label    0000003D
_00258_DS_              Label    0000003F
_00259_DS_              Label    00000043
_00261_DS_              Label    0000004E
_00265_DS_              Label    00000060
_00268_DS_              Label    00000057
_00270_DS_              Label    00000069
_00273_DS_              Label    00000073
_00276_DS_              Label    0000007D
_00278_DS_              Label    00000093
_00280_DS_              Label    00000099
_00282_DS_              Label    000000AF
_00284_DS_              Label    000000B5
_00286_DS_              Label    000000CB
_00290_DS_              Label    000000D0
_00372_DS_              Label    00000030
_00377_DS_              Label    00000038
_00378_DS_              Label    0000003F
_00383_DS_              Label    0000002D
_00393_DS_              Label    00000036
_00398_DS_              Label    0000002B
_00400_DS_              Label    0000003B
_00406_DS_              Label    0000001D
_00408_DS_              Label    0000001E
_00410_DS_              Label    00000007
_00411_DS_              Label    00000008
_00417_DS_              Label    0000001F
_00418_DS_              Label    00000020
_00420_DS_              Label    00000025
_00422_DS_              Label    00000017
_00423_DS_              Label    0000001A
_00426_DS_              Label    00000012
_00428_DS_              Label    00000027
_00433_DS_              Label    00000029
_00441_DS_              Label    00000028
_00449_DS_              Label    00000033
_00450_DS_              Label    00000034
_00461_DS_              Label    00000011
_00472_DS_              Label    00000013
_00482_DS_              Label    00000018
_00484_DS_              Label    0000000A
_00485_DS_              Label    0000001B
_00486_DS_              Label    0000001C
_00494_DS_              Label    00000011
_00506_DS_              Label    0000002E
_00507_DS_              Label    0000003C
_00509_DS_              Label    0000001E
_00510_DS_              Label    00000041
_00511_DS_              Label    00000042
_00528_DS_              Label    00000012
_00529_DS_              Label    00000025
_00530_DS_              Label    00000035
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_accTimeH               Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_bitIndex               Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_cleanData              Label    00000000
_closeTime              Label    00000000
_CMPCR                  Label    00000000
_count                  Label    00000000
_count1s                Label    00000000
_count1S                Label    00000000
_data1                  Label    00000000
_data2                  Label    00000000
_data3                  Label    00000000
_data4                  Label    00000000
_deadTime               Label    00000000
_disPlayMode            Label    00000000
_DPFlag                 Label    00000000
_FSR                    Label    00000000
_genTable               Label    00000000
_GetOneByte             Label    00000000
_gotoSleep              Label    00000000
_hour                   Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_irCode                 Label    00000000
_irCode2                Label    00000000
_IRCR                   Label    00000000
_irpros                 Label    00000000
_irwork                 Label    00000000
_isr                    Label    00000000
_keyCallBack            Label    00000000
_keyCount               Label    00000000
_keyCount2              Label    00000000
_keyCtr                 Label    00000000
_keyNub                 Label    00000000
_keyRead                Label    00000000
_keyRead2               Label    00000000
_keyTime                Label    00000000
_ledCtr                 Label    00000000
_ledDuty                Label    00000000
_LedStatus              Label    00000000
_ledStep                Label    00000000
_lowTime                Label    00000000
_main                   Label    00000000
_min                    Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_powerCtr               Label    00000000
_preKey                 Label    00000000
_proData                Label    00000000
_proHight               Label    00000000
_proLow                 Label    00000000
_proTime                Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_pwCtr                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sec                    Label    00000000
_setHight               Label    00000000
_setLow                 Label    00000000
_setPWMduty             Label    00000000
_shanshuo               Label    00000000
_showNub                Label    00000000
_showTime               Label    00000000
_sleepCount             Label    00000000
_sleepFlag              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_Status2                Label    00000000
_T0MD                   Label    00000000
_T1Counter              Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempCount              Label    00000000
_timeCtr                Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_value                  Label    00000000
_VK1S68C_Disp_AutoAdd1Addr Label    00000000
_VK1S68C_Disp_FixedAddr Label    00000000
_VK1S68C_Disp_Set       Label    00000000
_VK1S68C_Init           Label    00000000
_VK1S68C_KeyScan        Label    00000000
_VK1S68C_Main           Label    00000000
_whiteOFF               Label    00000000
_whiteOn                Label    00000000
_yellowOFF              Label    00000000
_yellowOn               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    0000006A
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a054d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
