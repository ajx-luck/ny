
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A053D,c=on
                                    1-    9     	#include "ny8a053d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_Delay10Us
                                    1-   15     	extern	_SDAOutput
                                    1-   16     	extern	_SDAInput
                                    1-   17     	extern	_Start24C02
                                    1-   18     	extern	_Stop24C02
                                    1-   19     	extern	_SendAck
                                    1-   20     	extern	_SendNoAck
                                    1-   21     	extern	_RecvAck
                                    1-   22     	extern	_SendByte
                                    1-   23     	extern	_ReadByte
                                    1-   24     	extern	_PORTAbits
                                    1-   25     	extern	_PORTBbits
                                    1-   26     	extern	_PCONbits
                                    1-   27     	extern	_BWUCONbits
                                    1-   28     	extern	_ABPLCONbits
                                    1-   29     	extern	_BPHCONbits
                                    1-   30     	extern	_INTEbits
                                    1-   31     	extern	_INTFbits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_TMR1
                                    1-   47     	extern	_T1CR1
                                    1-   48     	extern	_T1CR2
                                    1-   49     	extern	_PWM1DUTY
                                    1-   50     	extern	_PS1CV
                                    1-   51     	extern	_BZ1CR
                                    1-   52     	extern	_IRCR
                                    1-   53     	extern	_TBHP
                                    1-   54     	extern	_TBHD
                                    1-   55     	extern	_OSCCR
                                    1-   56     	extern	_IOSTA
                                    1-   57     	extern	_IOSTB
                                    1-   58     	extern	_PS0CV
                                    1-   59     	extern	_BODCON
                                    1-   60     	extern	_PCON1
                                    1-   61     	extern	_T0MD
                                    1-   62     	extern	___sdcc_saved_fsr
                                    1-   63     	extern	___sdcc_saved_stk00
                                    1-   64     	extern	___sdcc_saved_stk01
                                    1-   65     	extern	__nyc_ny8_startup
                                    1-   66     ;--------------------------------------------------------
                                    1-   67     ; global declarations
                                    1-   68     ;--------------------------------------------------------
                                    1-   69     	extern	_keyRead
                                    1-   70     	extern	_KeyScan
                                    1-   71     	extern	_Led10
                                    1-   72     	extern	_Led9
                                    1-   73     	extern	_Led8
                                    1-   74     	extern	_Led7
                                    1-   75     	extern	_Led6
                                    1-   76     	extern	_Led5
                                    1-   77     	extern	_Led4
                                    1-   78     	extern	_Led3
                                    1-   79     	extern	_Led2
                                    1-   80     	extern	_Led1
                                    1-   81     	extern	_ledCon
                                    1-   82     	extern	_writeWordStep
                                    1-   83     	extern	_readWordStep
                                    1-   84     	extern	_isr
                                    1-   85     	extern	_main
                                    1-   86     	extern	_delay
                                    1-   87     	extern	_KeyStatus
                                    1-   88     	extern	_intCount
                                    1-   89     	extern	_IntFlag
                                    1-   90     	extern	_keyCount
                                    1-   91     	extern	_workStep
                                    1-   92     	extern	_keyClick
                                    1-   93     	extern	_ledCount
                                    1-   94     	extern	_time
                                    1-   96     	extern PSAVE
                                    1-   97     	extern SSAVE
                                    1-   98     	extern WSAVE
                                    1-   99     	extern STK12
                                    1-  100     	extern STK11
                                    1-  101     	extern STK10
                                    1-  102     	extern STK09
                                    1-  103     	extern STK08
                                    1-  104     	extern STK07
                                    1-  105     	extern STK06
                                    1-  106     	extern STK05
                                    1-  107     	extern STK04
                                    1-  108     	extern STK03
                                    1-  109     	extern STK02
                                    1-  110     	extern STK01
                                    1-  111     	extern STK00
                                    1-  113     .segment "uninit", 0x20000020
 20000020                           1-  114     PSAVE:
                                    1-  115     	.res 1
 20000021                           1-  116     SSAVE:
                                    1-  117     	.res 1
 20000022                           1-  118     WSAVE:
                                    1-  119     	.res 1
 20000023                           1-  120     STK12:
                                    1-  121     	.res 1
 20000024                           1-  122     STK11:
                                    1-  123     	.res 1
 20000025                           1-  124     STK10:
                                    1-  125     	.res 1
 20000026                           1-  126     STK09:
                                    1-  127     	.res 1
 20000027                           1-  128     STK08:
                                    1-  129     	.res 1
 20000028                           1-  130     STK07:
                                    1-  131     	.res 1
 20000029                           1-  132     STK06:
                                    1-  133     	.res 1
 2000002A                           1-  134     STK05:
                                    1-  135     	.res 1
 2000002B                           1-  136     STK04:
                                    1-  137     	.res 1
 2000002C                           1-  138     STK03:
                                    1-  139     	.res 1
 2000002D                           1-  140     STK02:
                                    1-  141     	.res 1
 2000002E                           1-  142     STK01:
                                    1-  143     	.res 1
 2000002F                           1-  144     STK00:
                                    1-  145     	.res 1
                                    1-  147     ;--------------------------------------------------------
                                    1-  148     ; global definitions
                                    1-  149     ;--------------------------------------------------------
                                    1-  150     .segment "uninit"
     0000                           1-  151     _KeyStatus:
                                    1-  152     	.res	1
                                    1-  155     ;--------------------------------------------------------
                                    1-  156     ; absolute symbol definitions
                                    1-  157     ;--------------------------------------------------------
                                    1-  158     ;--------------------------------------------------------
                                    1-  159     ; compiler-defined variables
                                    1-  160     ;--------------------------------------------------------
                                    1-  161     .segment "uninit"
     0000                           1-  162     r0x1012:
                                    1-  163     	.res	1
                                    1-  164     .segment "uninit"
     0000                           1-  165     r0x1011:
                                    1-  166     	.res	1
                                    1-  167     .segment "uninit"
     0000                           1-  168     r0x100D:
                                    1-  169     	.res	1
                                    1-  170     .segment "uninit"
     0000                           1-  171     r0x100C:
                                    1-  172     	.res	1
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x100E:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x100F:
                                    1-  178     	.res	1
                                    1-  179     ;--------------------------------------------------------
                                    1-  180     ; initialized data
                                    1-  181     ;--------------------------------------------------------
                                    1-  183     .segment "idata"
     0000                           1-  184     _intCount:
     0000 0000                      1-  185     	dw	0x00
                                    1-  189     .segment "idata"
     0000                           1-  190     _IntFlag:
     0000 0000                      1-  191     	dw	0x00
                                    1-  195     .segment "idata"
     0000                           1-  196     _keyCount:
     0000 0000                      1-  197     	dw	0x00
                                    1-  201     .segment "idata"
     0000                           1-  202     _workStep:
     0000 0001                      1-  203     	dw	0x01
                                    1-  207     .segment "idata"
     0000                           1-  208     _keyClick:
     0000 0000                      1-  209     	dw	0x00
                                    1-  213     .segment "idata"
     0000                           1-  214     _ledCount:
     0000 0000 0000                 1-  215     	dw	0x00, 0x00
                                    1-  219     .segment "idata"
     0000                           1-  220     _time:
     0000 0000                      1-  221     	dw	0x00
                                    1-  224     ;--------------------------------------------------------
                                    1-  225     ; overlayable items in internal ram 
                                    1-  226     ;--------------------------------------------------------
                                    1-  227     ;	udata_ovr
                                    1-  228     ;--------------------------------------------------------
                                    1-  229     ; reset vector 
                                    1-  230     ;--------------------------------------------------------
                                    1-  231     ORG	0x0000
     0000 3rrr                      1-  232     	LGOTO	__nyc_ny8_startup
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ; interrupt and initialization code
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     ORG 0x0008
     0008 3rrr                      1-  237     	lgoto	__sdcc_interrupt
                                    1-  239     .segment "code"
     0000                           1-  240     __sdcc_interrupt:
                                    1-  241     ;***
                                    1-  242     ;  pBlock Stats: dbName = I
                                    1-  243     ;***
                                    1-  244     ;2 compiler assigned registers:
                                    1-  245     ;   STK00
                                    1-  246     ;   STK01
                                    1-  247     ;; Starting pCode block
     0000                           1-  248     _isr:
                                    1-  249     ; 0 exit points
                                    1-  250     	.line	50, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  251     	MOVAR	WSAVE
     0001 1503                      1-  252     	SWAPR	STATUS,W
     0002 0283                      1-  253     	CLRR	STATUS
     0003 00rr                      1-  254     	MOVAR	SSAVE
     0004 010A                      1-  255     	MOVR	PCHBUF,W
     0005 028A                      1-  256     	CLRR	PCHBUF
     0006 00rr                      1-  257     	MOVAR	PSAVE
     0007 0104                      1-  258     	MOVR	FSR,W
                                    1-  259     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  260     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  261     	MOVR	STK00,W
                                    1-  262     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  263     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  264     	MOVR	STK01,W
                                    1-  265     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  266     	MOVAR	___sdcc_saved_stk01
                                    1-  267     	.line	53, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  268     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  269     	LGOTO	_00108_DS_
                                    1-  270     	.line	55, "main.c"; 	TMR0 = 76;
     0012 214C                      1-  271     	MOVIA	0x4c
     0013 00rr                      1-  272     	MOVAR	_TMR0
                                    1-  273     	.line	56, "main.c"; 	intCount++;
                                    1-  274     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  275     	INCR	_intCount,F
                                    1-  276     	.line	57, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  277     	MOVR	_intCount,W
     0017 2464                      1-  278     	XORIA	0x64
     0018 0903                      1-  279     	BTRSS	STATUS,2
     0019 3rrr                      1-  280     	LGOTO	_00108_DS_
                                    1-  281     	.line	59, "main.c"; 	intCount = 0;
     001A 02rr                      1-  282     	CLRR	_intCount
                                    1-  283     	.line	60, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  284     	MOVIA	0x01
                                    1-  285     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  286     	MOVAR	_IntFlag
     001E                           1-  287     _00108_DS_:
                                    1-  288     	.line	64, "main.c"; 	INTF = 0;
     001E 02rr                      1-  289     	CLRR	_INTF
                                    1-  290     	.line	66, "main.c"; 	}
                                    1-  291     	BANKSEL	___sdcc_saved_stk01
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  292     	MOVR	___sdcc_saved_stk01,W
     0021 00rr                      1-  293     	MOVAR	STK01
                                    1-  294     	BANKSEL	___sdcc_saved_stk00
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  295     	MOVR	___sdcc_saved_stk00,W
     0024 00rr                      1-  296     	MOVAR	STK00
                                    1-  297     	BANKSEL	___sdcc_saved_fsr
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1-  298     	MOVR	___sdcc_saved_fsr,W
     0027 0084                      1-  299     	MOVAR	FSR
     0028 01rr                      1-  300     	MOVR	PSAVE,W
     0029 008A                      1-  301     	MOVAR	PCHBUF
     002A 0283                      1-  302     	CLRR	STATUS
     002B 15rr                      1-  303     	SWAPR	SSAVE,W
     002C 0083                      1-  304     	MOVAR	STATUS
     002D 15rr                      1-  305     	SWAPR	WSAVE,F
     002E 15rr                      1-  306     	SWAPR	WSAVE,W
     002F                           1-  307     END_OF_INTERRUPT:
     002F 0011                      1-  308     	RETIE	
                                    1-  310     ;--------------------------------------------------------
                                    1-  311     ; code
                                    1-  312     ;--------------------------------------------------------
                                    1-  313     ;***
                                    1-  314     ;  pBlock Stats: dbName = M
                                    1-  315     ;***
                                    1-  316     ;has an exit
                                    1-  317     ;functions called:
                                    1-  318     ;   _readWordStep
                                    1-  319     ;   _KeyScan
                                    1-  320     ;   _keyRead
                                    1-  321     ;   _writeWordStep
                                    1-  322     ;   _ledCon
                                    1-  323     ;   _readWordStep
                                    1-  324     ;   _KeyScan
                                    1-  325     ;   _keyRead
                                    1-  326     ;   _writeWordStep
                                    1-  327     ;   _ledCon
                                    1-  328     ;1 compiler assigned register :
                                    1-  329     ;   r0x1012
                                    1-  330     ;; Starting pCode block
                                    1-  331     .segment "code"; module=main, function=_main
     0000                           1-  333     _main:
                                    1-  334     ; 2 exit points
                                    1-  335     	.line	72, "main.c"; 	IOSTB =   C_PB0_Input;     // Set PB0 & PB1 to input mode,others set to output mode
     0000 2101                      1-  336     	MOVIA	0x01
     0001 000r                      1-  337     	IOST	_IOSTB
                                    1-  338     	.line	73, "main.c"; 	PORTB = 0x00;                           // PB0、PB1 & PB2 are output High						
     0002 02rr                      1-  339     	CLRR	_PORTB
                                    1-  340     	.line	74, "main.c"; 	ABPLCON = 0xFE;
     0003 21FE                      1-  341     	MOVIA	0xfe
     0004 00rr                      1-  342     	MOVAR	_ABPLCON
                                    1-  343     	.line	75, "main.c"; 	DISI();
     0005 0013                      1-  344     	DISI
                                    1-  345     	.line	77, "main.c"; 	PCON1 = C_TMR0_Dis;						// Disable Timer0
     0006 0200                      1-  346     	CLRA	
     0007 000r                      1-  347     	IOST	_PCON1
                                    1-  348     	.line	78, "main.c"; 	TMR0 = 76;								// Load 0x00 to TMR0 (Initial Timer0 register)
     0008 214C                      1-  349     	MOVIA	0x4c
     0009 00rr                      1-  350     	MOVAR	_TMR0
                                    1-  351     	.line	80, "main.c"; 	T0MD = C_PS0_TMR0 | C_PS0_Div2 ;		// Prescaler0 is assigned to Timer0, Prescaler0 dividing rate = 1:8,clock source is instruction clock
     000A 0200                      1-  352     	CLRA	
     000B 0003                      1-  353     	T0MD	
                                    1-  354     	.line	87, "main.c"; 	INTE = C_INT_TMR0;	// Enable Timer0 interrupt
     000C 2101                      1-  355     	MOVIA	0x01
     000D 00rr                      1-  356     	MOVAR	_INTE
                                    1-  357     	.line	90, "main.c"; 	PCON =  C_LVR_En;				// Enable WDT ,  Enable LVR
     000E 2108                      1-  358     	MOVIA	0x08
     000F 00rr                      1-  359     	MOVAR	_PCON
                                    1-  360     	.line	93, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0010 2101                      1-  361     	MOVIA	0x01
     0011 000r                      1-  362     	IOST	_PCON1
                                    1-  363     	.line	94, "main.c"; 	ENI();									// Enable all unmasked interrupts			
     0012 0004                      1-  364     	ENI
                                    1-  365     	.line	95, "main.c"; 	readWordStep();
     0013 2rrr                      1-  366     	LCALL	_readWordStep
     0014                           1-  367     _00120_DS_:
                                    1-  368     	.line	98, "main.c"; 	CLRWDT();  
     0014 0002                      1-  369     	clrwdt
                                    1-  370     	.line	99, "main.c"; 	if(!IntFlag)
                                    1-  371     	BANKSEL	_IntFlag
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  372     	MOVR	_IntFlag,W
     0017 0D03                      1-  373     	BTRSC	STATUS,2
     0018 3rrr                      1-  374     	LGOTO	_00120_DS_
                                    1-  375     	.line	101, "main.c"; 	IntFlag = 0;
     0019 02rr                      1-  376     	CLRR	_IntFlag
                                    1-  377     	.line	103, "main.c"; 	KeyStatus = KeyScan() & 0x1F;
     001A 2rrr                      1-  378     	LCALL	_KeyScan
                                    1-  379     	BANKSEL	r0x1012
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  380     	MOVAR	r0x1012
     001D 211F                      1-  381     	MOVIA	0x1f
     001E 10rr                      1-  382     	ANDAR	r0x1012,W
                                    1-  383     	BANKSEL	_KeyStatus
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1-  384     	MOVAR	_KeyStatus
                                    1-  385     	.line	104, "main.c"; 	keyClick = keyRead();
     0021 2rrr                      1-  386     	LCALL	_keyRead
                                    1-  387     	BANKSEL	_keyClick
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 00rr                      1-  388     	MOVAR	_keyClick
                                    1-  389     	.line	105, "main.c"; 	if(keyClick == 1)
     0024 2401                      1-  390     	XORIA	0x01
     0025 0903                      1-  391     	BTRSS	STATUS,2
     0026 3rrr                      1-  392     	LGOTO	_00118_DS_
                                    1-  393     	.line	107, "main.c"; 	workStep++;
                                    1-  394     	BANKSEL	_workStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 05rr                      1-  395     	INCR	_workStep,F
                                    1-  396     	.line	108, "main.c"; 	ledCount = 0;
                                    1-  397     	BANKSEL	_ledCount
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 02rr                      1-  398     	CLRR	_ledCount
     002B 02rr                      1-  399     	CLRR	(_ledCount + 1)
                                    1-  400     	.line	109, "main.c"; 	PORTB &= 0xEE;	//关闭LED
     002C 21EE                      1-  401     	MOVIA	0xee
     002D 10rr                      1-  402     	ANDAR	_PORTB,F
                                    1-  403     	.line	110, "main.c"; 	time = 0;
                                    1-  404     	BANKSEL	_time
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 02rr                      1-  405     	CLRR	_time
                                    1-  406     ;;unsigned compare: left < lit (0xB=11), size=1
                                    1-  407     	.line	111, "main.c"; 	if(workStep >= 11)
     0030 210B                      1-  408     	MOVIA	0x0b
                                    1-  409     	BANKSEL	_workStep
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 04rr                      1-  410     	SUBAR	_workStep,W
     0033 0803                      1-  411     	BTRSS	STATUS,0
     0034 3rrr                      1-  412     	LGOTO	_00116_DS_
                                    1-  413     	.line	112, "main.c"; 	workStep = 1;
     0035 2101                      1-  414     	MOVIA	0x01
     0036 00rr                      1-  415     	MOVAR	_workStep
     0037                           1-  416     _00116_DS_:
                                    1-  417     	.line	113, "main.c"; 	writeWordStep();
     0037 2rrr                      1-  418     	LCALL	_writeWordStep
     0038                           1-  419     _00118_DS_:
                                    1-  420     	.line	115, "main.c"; 	ledCon();
     0038 2rrr                      1-  421     	LCALL	_ledCon
     0039 3rrr                      1-  422     	LGOTO	_00120_DS_
                                    1-  423     	.line	117, "main.c"; 	}
                                    1-  424     	RETURN	
     003A 0010                      3-   26 m1      ret
                                    1-  425     ; exit point of _main
                                    1-  427     ;***
                                    1-  428     ;  pBlock Stats: dbName = C
                                    1-  429     ;***
                                    1-  430     ;has an exit
                                    1-  431     ;5 compiler assigned registers:
                                    1-  432     ;   r0x100C
                                    1-  433     ;   STK00
                                    1-  434     ;   r0x100D
                                    1-  435     ;   r0x100E
                                    1-  436     ;   r0x100F
                                    1-  437     ;; Starting pCode block
                                    1-  438     .segment "code"; module=main, function=_delay
                                    1-  440     ;local variable name mapping:
     0000                           1-  445     _delay:
                                    1-  446     ; 2 exit points
                                    1-  447     	.line	469, "main.c"; 	void delay(u16t time)
                                    1-  448     	BANKSEL	r0x100C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  449     	MOVAR	r0x100C
     0002 01rr                      1-  450     	MOVR	STK00,W
                                    1-  451     	BANKSEL	r0x100D
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  452     	MOVAR	r0x100D
                                    1-  453     	.line	471, "main.c"; 	for(u16t i=0;i<time;i++);
                                    1-  454     	BANKSEL	r0x100E
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  455     	CLRR	r0x100E
                                    1-  456     	BANKSEL	r0x100F
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  457     	CLRR	r0x100F
     0009                           1-  458     _00593_DS_:
                                    1-  459     	BANKSEL	r0x100C
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  460     	MOVR	r0x100C,W
                                    1-  461     	BANKSEL	r0x100F
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  462     	SUBAR	r0x100F,W
     000D 0903                      1-  463     	BTRSS	STATUS,2
     000E 3rrr                      1-  464     	LGOTO	_00604_DS_
                                    1-  465     	BANKSEL	r0x100D
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  466     	MOVR	r0x100D,W
                                    1-  467     	BANKSEL	r0x100E
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  468     	SUBAR	r0x100E,W
     0013                           1-  469     _00604_DS_:
     0013 0C03                      1-  470     	BTRSC	STATUS,0
     0014 3rrr                      1-  471     	LGOTO	_00595_DS_
                                    1-  472     	BANKSEL	r0x100E
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  473     	INCR	r0x100E,F
     0017 0903                      1-  474     	BTRSS	STATUS,2
     0018 3rrr                      1-  475     	LGOTO	_00001_DS_
                                    1-  476     	BANKSEL	r0x100F
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  477     	INCR	r0x100F,F
     001B                           1-  478     _00001_DS_:
     001B 3rrr                      1-  479     	LGOTO	_00593_DS_
     001C                           1-  480     _00595_DS_:
                                    1-  481     	.line	472, "main.c"; 	}
                                    1-  482     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  483     ; exit point of _delay
                                    1-  485     ;***
                                    1-  486     ;  pBlock Stats: dbName = C
                                    1-  487     ;***
                                    1-  488     ;has an exit
                                    1-  489     ;; Starting pCode block
                                    1-  490     .segment "code"; module=main, function=_keyRead
     0000                           1-  492     _keyRead:
                                    1-  493     ; 2 exit points
                                    1-  494     	.line	448, "main.c"; 	if (KeyStatus & 0x01)
                                    1-  495     	BANKSEL	_KeyStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 08rr                      1-  496     	BTRSS	_KeyStatus,0
     0002 3rrr                      1-  497     	LGOTO	_00584_DS_
                                    1-  498     	.line	450, "main.c"; 	keyCount++;
                                    1-  499     	BANKSEL	_keyCount
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 05rr                      1-  500     	INCR	_keyCount,F
                                    1-  501     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  502     	.line	451, "main.c"; 	if(keyCount >= 200)
     0005 21C8                      1-  503     	MOVIA	0xc8
     0006 04rr                      1-  504     	SUBAR	_keyCount,W
     0007 0803                      1-  505     	BTRSS	STATUS,0
     0008 3rrr                      1-  506     	LGOTO	_00585_DS_
                                    1-  507     	.line	453, "main.c"; 	keyCount = 200;
     0009 21C8                      1-  508     	MOVIA	0xc8
     000A 00rr                      1-  509     	MOVAR	_keyCount
     000B 3rrr                      1-  510     	LGOTO	_00585_DS_
                                    1-  511     ;;unsigned compare: left < lit (0x8=8), size=1
     000C                           1-  512     _00584_DS_:
                                    1-  513     	.line	459, "main.c"; 	if(keyCount >= 8)
     000C 2108                      1-  514     	MOVIA	0x08
                                    1-  515     	BANKSEL	_keyCount
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  516     	SUBAR	_keyCount,W
     000F 0803                      1-  517     	BTRSS	STATUS,0
     0010 3rrr                      1-  518     	LGOTO	_00582_DS_
                                    1-  519     	.line	461, "main.c"; 	keyCount = 0;
     0011 02rr                      1-  520     	CLRR	_keyCount
                                    1-  521     	.line	462, "main.c"; 	return	1;
     0012 2101                      1-  522     	MOVIA	0x01
     0013 3rrr                      1-  523     	LGOTO	_00586_DS_
     0014                           1-  524     _00582_DS_:
                                    1-  525     	.line	464, "main.c"; 	keyCount = 0;
                                    1-  526     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 02rr                      1-  527     	CLRR	_keyCount
     0016                           1-  528     _00585_DS_:
                                    1-  529     	.line	466, "main.c"; 	return 0;
     0016 2100                      1-  530     	MOVIA	0x00
     0017                           1-  531     _00586_DS_:
                                    1-  532     	.line	467, "main.c"; 	}
                                    1-  533     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1-  534     ; exit point of _keyRead
                                    1-  536     ;***
                                    1-  537     ;  pBlock Stats: dbName = C
                                    1-  538     ;***
                                    1-  539     ;has an exit
                                    1-  540     ;1 compiler assigned register :
                                    1-  541     ;   r0x1010
                                    1-  542     ;; Starting pCode block
                                    1-  543     .segment "code"; module=main, function=_KeyScan
                                    1-  545     ;local variable name mapping:
     0000                           1-  547     _KeyScan:
                                    1-  548     ; 2 exit points
                                    1-  549     	.line	439, "main.c"; 	KeyStatus = PORTB;
     0000 01rr                      1-  550     	MOVR	_PORTB,W
                                    1-  551     ;;1	MOVAR	r0x1010
                                    1-  552     	.line	442, "main.c"; 	}
                                    1-  553     	RETURN	
     0001 0010                      3-   26 m1      ret
                                    1-  554     ; exit point of _KeyScan
                                    1-  556     ;***
                                    1-  557     ;  pBlock Stats: dbName = C
                                    1-  558     ;***
                                    1-  559     ;has an exit
                                    1-  560     ;; Starting pCode block
                                    1-  561     .segment "code"; module=main, function=_Led10
     0000                           1-  563     _Led10:
                                    1-  564     ; 2 exit points
                                    1-  565     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1-  566     	.line	409, "main.c"; 	if(time < 10)
     0000 210A                      1-  567     	MOVIA	0x0a
                                    1-  568     	BANKSEL	_time
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  569     	SUBAR	_time,W
     0003 0C03                      1-  570     	BTRSC	STATUS,0
     0004 3rrr                      1-  571     	LGOTO	_00546_DS_
                                    1-  572     	.line	411, "main.c"; 	if(ledCount == 0)
                                    1-  573     	BANKSEL	_ledCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1-  574     	MOVR	_ledCount,W
     0007 11rr                      1-  575     	IORAR	(_ledCount + 1),W
     0008 0903                      1-  576     	BTRSS	STATUS,2
     0009 3rrr                      1-  577     	LGOTO	_00542_DS_
                                    1-  578     	.line	412, "main.c"; 	PORTB = 0x12;
     000A 2112                      1-  579     	MOVIA	0x12
     000B 00rr                      1-  580     	MOVAR	_PORTB
     000C                           1-  581     _00542_DS_:
                                    1-  582     	.line	413, "main.c"; 	if(ledCount == 3)
                                    1-  583     	BANKSEL	_ledCount
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  584     	MOVR	_ledCount,W
     000E 2403                      1-  585     	XORIA	0x03
     000F 0903                      1-  586     	BTRSS	STATUS,2
     0010 3rrr                      1-  587     	LGOTO	_00547_DS_
     0011 01rr                      1-  588     	MOVR	(_ledCount + 1),W
     0012 2400                      1-  589     	XORIA	0x00
     0013 0903                      1-  590     	BTRSS	STATUS,2
     0014 3rrr                      1-  591     	LGOTO	_00547_DS_
                                    1-  592     	.line	414, "main.c"; 	PORTB = 0x00;
     0015 02rr                      1-  593     	CLRR	_PORTB
     0016 3rrr                      1-  594     	LGOTO	_00547_DS_
     0017                           1-  595     _00546_DS_:
                                    1-  596     	.line	418, "main.c"; 	PORTB = 0x00;
     0017 02rr                      1-  597     	CLRR	_PORTB
     0018                           1-  598     _00547_DS_:
                                    1-  599     	.line	421, "main.c"; 	if(++ledCount > 4)
                                    1-  600     	BANKSEL	_ledCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 05rr                      1-  601     	INCR	_ledCount,F
     001A 0D03                      1-  602     	BTRSC	STATUS,2
     001B 05rr                      1-  603     	INCR	(_ledCount + 1),F
                                    1-  604     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  605     ;;unsigned compare: left >= lit (0x5=5), size=2
     001C 2100                      1-  606     	MOVIA	0x00
     001D 04rr                      1-  607     	SUBAR	(_ledCount + 1),W
     001E 0903                      1-  608     	BTRSS	STATUS,2
     001F 3rrr                      1-  609     	LGOTO	_00570_DS_
     0020 2105                      1-  610     	MOVIA	0x05
     0021 04rr                      1-  611     	SUBAR	_ledCount,W
     0022                           1-  612     _00570_DS_:
     0022 0803                      1-  613     	BTRSS	STATUS,0
     0023 3rrr                      1-  614     	LGOTO	_00552_DS_
                                    1-  615     	.line	423, "main.c"; 	ledCount = 0;
                                    1-  616     	BANKSEL	_ledCount
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1-  617     	CLRR	_ledCount
     0026 02rr                      1-  618     	CLRR	(_ledCount + 1)
                                    1-  619     	.line	424, "main.c"; 	if(++time >= 17)
                                    1-  620     	BANKSEL	_time
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 05rr                      1-  621     	INCR	_time,F
                                    1-  622     ;;unsigned compare: left < lit (0x11=17), size=1
     0029 2111                      1-  623     	MOVIA	0x11
     002A 04rr                      1-  624     	SUBAR	_time,W
     002B 0803                      1-  625     	BTRSS	STATUS,0
     002C 3rrr                      1-  626     	LGOTO	_00552_DS_
                                    1-  627     	.line	426, "main.c"; 	time = 0;
     002D 02rr                      1-  628     	CLRR	_time
                                    1-  629     	.line	427, "main.c"; 	ledCount = 0;
                                    1-  630     	BANKSEL	_ledCount
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 02rr                      1-  631     	CLRR	_ledCount
     0030 02rr                      1-  632     	CLRR	(_ledCount + 1)
                                    1-  633     	.line	428, "main.c"; 	PORTB = 0x00;	//关闭LED
     0031 02rr                      1-  634     	CLRR	_PORTB
     0032                           1-  635     _00552_DS_:
                                    1-  636     	.line	431, "main.c"; 	}
                                    1-  637     	RETURN	
     0032 0010                      3-   26 m1      ret
                                    1-  638     ; exit point of _Led10
                                    1-  640     ;***
                                    1-  641     ;  pBlock Stats: dbName = C
                                    1-  642     ;***
                                    1-  643     ;has an exit
                                    1-  644     ;; Starting pCode block
                                    1-  645     .segment "code"; module=main, function=_Led9
     0000                           1-  647     _Led9:
                                    1-  648     ; 2 exit points
                                    1-  649     ;;unsigned compare: left < lit (0x2C=44), size=2
                                    1-  650     	.line	393, "main.c"; 	if(ledCount < 44)
     0000 2100                      1-  651     	MOVIA	0x00
                                    1-  652     	BANKSEL	_ledCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  653     	SUBAR	(_ledCount + 1),W
     0003 0903                      1-  654     	BTRSS	STATUS,2
     0004 3rrr                      1-  655     	LGOTO	_00531_DS_
     0005 212C                      1-  656     	MOVIA	0x2c
     0006 04rr                      1-  657     	SUBAR	_ledCount,W
     0007                           1-  658     _00531_DS_:
     0007 0C03                      1-  659     	BTRSC	STATUS,0
     0008 3rrr                      1-  660     	LGOTO	_00507_DS_
                                    1-  661     	.line	394, "main.c"; 	PORTB = 0x02;
     0009 2102                      1-  662     	MOVIA	0x02
     000A 00rr                      1-  663     	MOVAR	_PORTB
     000B 3rrr                      1-  664     	LGOTO	_00508_DS_
                                    1-  665     ;;unsigned compare: left < lit (0x39=57), size=2
     000C                           1-  666     _00507_DS_:
                                    1-  667     	.line	395, "main.c"; 	else if(ledCount < 57)
     000C 2100                      1-  668     	MOVIA	0x00
                                    1-  669     	BANKSEL	_ledCount
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  670     	SUBAR	(_ledCount + 1),W
     000F 0903                      1-  671     	BTRSS	STATUS,2
     0010 3rrr                      1-  672     	LGOTO	_00532_DS_
     0011 2139                      1-  673     	MOVIA	0x39
     0012 04rr                      1-  674     	SUBAR	_ledCount,W
     0013                           1-  675     _00532_DS_:
     0013 0C03                      1-  676     	BTRSC	STATUS,0
     0014 3rrr                      1-  677     	LGOTO	_00504_DS_
                                    1-  678     	.line	396, "main.c"; 	PORTB = 0x12;
     0015 2112                      1-  679     	MOVIA	0x12
     0016 00rr                      1-  680     	MOVAR	_PORTB
     0017 3rrr                      1-  681     	LGOTO	_00508_DS_
                                    1-  682     ;;unsigned compare: left < lit (0x46=70), size=2
     0018                           1-  683     _00504_DS_:
                                    1-  684     	.line	397, "main.c"; 	else if(ledCount < 70)
     0018 2100                      1-  685     	MOVIA	0x00
                                    1-  686     	BANKSEL	_ledCount
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 04rr                      1-  687     	SUBAR	(_ledCount + 1),W
     001B 0903                      1-  688     	BTRSS	STATUS,2
     001C 3rrr                      1-  689     	LGOTO	_00533_DS_
     001D 2146                      1-  690     	MOVIA	0x46
     001E 04rr                      1-  691     	SUBAR	_ledCount,W
     001F                           1-  692     _00533_DS_:
     001F 0C03                      1-  693     	BTRSC	STATUS,0
     0020 3rrr                      1-  694     	LGOTO	_00501_DS_
                                    1-  695     	.line	398, "main.c"; 	PORTB = 0x02;
     0021 2102                      1-  696     	MOVIA	0x02
     0022 00rr                      1-  697     	MOVAR	_PORTB
     0023 3rrr                      1-  698     	LGOTO	_00508_DS_
                                    1-  699     ;;unsigned compare: left < lit (0x53=83), size=2
     0024                           1-  700     _00501_DS_:
                                    1-  701     	.line	399, "main.c"; 	else if(ledCount < 83)
     0024 2100                      1-  702     	MOVIA	0x00
                                    1-  703     	BANKSEL	_ledCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 04rr                      1-  704     	SUBAR	(_ledCount + 1),W
     0027 0903                      1-  705     	BTRSS	STATUS,2
     0028 3rrr                      1-  706     	LGOTO	_00534_DS_
     0029 2153                      1-  707     	MOVIA	0x53
     002A 04rr                      1-  708     	SUBAR	_ledCount,W
     002B                           1-  709     _00534_DS_:
     002B 0C03                      1-  710     	BTRSC	STATUS,0
     002C 3rrr                      1-  711     	LGOTO	_00498_DS_
                                    1-  712     	.line	400, "main.c"; 	PORTB = 0x12;
     002D 2112                      1-  713     	MOVIA	0x12
     002E 00rr                      1-  714     	MOVAR	_PORTB
     002F 3rrr                      1-  715     	LGOTO	_00508_DS_
                                    1-  716     ;;unsigned compare: left < lit (0x60=96), size=2
     0030                           1-  717     _00498_DS_:
                                    1-  718     	.line	401, "main.c"; 	else if(ledCount < 96)
     0030 2100                      1-  719     	MOVIA	0x00
                                    1-  720     	BANKSEL	_ledCount
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 04rr                      1-  721     	SUBAR	(_ledCount + 1),W
     0033 0903                      1-  722     	BTRSS	STATUS,2
     0034 3rrr                      1-  723     	LGOTO	_00535_DS_
     0035 2160                      1-  724     	MOVIA	0x60
     0036 04rr                      1-  725     	SUBAR	_ledCount,W
     0037                           1-  726     _00535_DS_:
     0037 0C03                      1-  727     	BTRSC	STATUS,0
     0038 3rrr                      1-  728     	LGOTO	_00508_DS_
                                    1-  729     	.line	402, "main.c"; 	PORTB = 0x02;
     0039 2102                      1-  730     	MOVIA	0x02
     003A 00rr                      1-  731     	MOVAR	_PORTB
     003B                           1-  732     _00508_DS_:
                                    1-  733     	.line	403, "main.c"; 	if(++ledCount >=96)
                                    1-  734     	BANKSEL	_ledCount
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 05rr                      1-  735     	INCR	_ledCount,F
     003D 0D03                      1-  736     	BTRSC	STATUS,2
     003E 05rr                      1-  737     	INCR	(_ledCount + 1),F
                                    1-  738     ;;unsigned compare: left < lit (0x60=96), size=2
     003F 2100                      1-  739     	MOVIA	0x00
     0040 04rr                      1-  740     	SUBAR	(_ledCount + 1),W
     0041 0903                      1-  741     	BTRSS	STATUS,2
     0042 3rrr                      1-  742     	LGOTO	_00536_DS_
     0043 2160                      1-  743     	MOVIA	0x60
     0044 04rr                      1-  744     	SUBAR	_ledCount,W
     0045                           1-  745     _00536_DS_:
     0045 0803                      1-  746     	BTRSS	STATUS,0
     0046 3rrr                      1-  747     	LGOTO	_00511_DS_
                                    1-  748     	.line	404, "main.c"; 	ledCount = 0;
                                    1-  749     	BANKSEL	_ledCount
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 02rr                      1-  750     	CLRR	_ledCount
     0049 02rr                      1-  751     	CLRR	(_ledCount + 1)
     004A                           1-  752     _00511_DS_:
                                    1-  753     	.line	405, "main.c"; 	}
                                    1-  754     	RETURN	
     004A 0010                      3-   26 m1      ret
                                    1-  755     ; exit point of _Led9
                                    1-  757     ;***
                                    1-  758     ;  pBlock Stats: dbName = C
                                    1-  759     ;***
                                    1-  760     ;has an exit
                                    1-  761     ;; Starting pCode block
                                    1-  762     .segment "code"; module=main, function=_Led8
     0000                           1-  764     _Led8:
                                    1-  765     ; 2 exit points
                                    1-  766     ;;unsigned compare: left < lit (0x2C=44), size=2
                                    1-  767     	.line	377, "main.c"; 	if(ledCount < 44)
     0000 2100                      1-  768     	MOVIA	0x00
                                    1-  769     	BANKSEL	_ledCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  770     	SUBAR	(_ledCount + 1),W
     0003 0903                      1-  771     	BTRSS	STATUS,2
     0004 3rrr                      1-  772     	LGOTO	_00485_DS_
     0005 212C                      1-  773     	MOVIA	0x2c
     0006 04rr                      1-  774     	SUBAR	_ledCount,W
     0007                           1-  775     _00485_DS_:
     0007 0C03                      1-  776     	BTRSC	STATUS,0
     0008 3rrr                      1-  777     	LGOTO	_00461_DS_
                                    1-  778     	.line	378, "main.c"; 	PORTB = 0x10;
     0009 2110                      1-  779     	MOVIA	0x10
     000A 00rr                      1-  780     	MOVAR	_PORTB
     000B 3rrr                      1-  781     	LGOTO	_00462_DS_
                                    1-  782     ;;unsigned compare: left < lit (0x39=57), size=2
     000C                           1-  783     _00461_DS_:
                                    1-  784     	.line	379, "main.c"; 	else if(ledCount < 57)
     000C 2100                      1-  785     	MOVIA	0x00
                                    1-  786     	BANKSEL	_ledCount
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  787     	SUBAR	(_ledCount + 1),W
     000F 0903                      1-  788     	BTRSS	STATUS,2
     0010 3rrr                      1-  789     	LGOTO	_00486_DS_
     0011 2139                      1-  790     	MOVIA	0x39
     0012 04rr                      1-  791     	SUBAR	_ledCount,W
     0013                           1-  792     _00486_DS_:
     0013 0C03                      1-  793     	BTRSC	STATUS,0
     0014 3rrr                      1-  794     	LGOTO	_00458_DS_
                                    1-  795     	.line	380, "main.c"; 	PORTB = 0x12;
     0015 2112                      1-  796     	MOVIA	0x12
     0016 00rr                      1-  797     	MOVAR	_PORTB
     0017 3rrr                      1-  798     	LGOTO	_00462_DS_
                                    1-  799     ;;unsigned compare: left < lit (0x46=70), size=2
     0018                           1-  800     _00458_DS_:
                                    1-  801     	.line	381, "main.c"; 	else if(ledCount < 70)
     0018 2100                      1-  802     	MOVIA	0x00
                                    1-  803     	BANKSEL	_ledCount
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 04rr                      1-  804     	SUBAR	(_ledCount + 1),W
     001B 0903                      1-  805     	BTRSS	STATUS,2
     001C 3rrr                      1-  806     	LGOTO	_00487_DS_
     001D 2146                      1-  807     	MOVIA	0x46
     001E 04rr                      1-  808     	SUBAR	_ledCount,W
     001F                           1-  809     _00487_DS_:
     001F 0C03                      1-  810     	BTRSC	STATUS,0
     0020 3rrr                      1-  811     	LGOTO	_00455_DS_
                                    1-  812     	.line	382, "main.c"; 	PORTB = 0x10;
     0021 2110                      1-  813     	MOVIA	0x10
     0022 00rr                      1-  814     	MOVAR	_PORTB
     0023 3rrr                      1-  815     	LGOTO	_00462_DS_
                                    1-  816     ;;unsigned compare: left < lit (0x53=83), size=2
     0024                           1-  817     _00455_DS_:
                                    1-  818     	.line	383, "main.c"; 	else if(ledCount < 83)
     0024 2100                      1-  819     	MOVIA	0x00
                                    1-  820     	BANKSEL	_ledCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 04rr                      1-  821     	SUBAR	(_ledCount + 1),W
     0027 0903                      1-  822     	BTRSS	STATUS,2
     0028 3rrr                      1-  823     	LGOTO	_00488_DS_
     0029 2153                      1-  824     	MOVIA	0x53
     002A 04rr                      1-  825     	SUBAR	_ledCount,W
     002B                           1-  826     _00488_DS_:
     002B 0C03                      1-  827     	BTRSC	STATUS,0
     002C 3rrr                      1-  828     	LGOTO	_00452_DS_
                                    1-  829     	.line	384, "main.c"; 	PORTB = 0x12;
     002D 2112                      1-  830     	MOVIA	0x12
     002E 00rr                      1-  831     	MOVAR	_PORTB
     002F 3rrr                      1-  832     	LGOTO	_00462_DS_
                                    1-  833     ;;unsigned compare: left < lit (0x60=96), size=2
     0030                           1-  834     _00452_DS_:
                                    1-  835     	.line	385, "main.c"; 	else if(ledCount < 96)
     0030 2100                      1-  836     	MOVIA	0x00
                                    1-  837     	BANKSEL	_ledCount
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 04rr                      1-  838     	SUBAR	(_ledCount + 1),W
     0033 0903                      1-  839     	BTRSS	STATUS,2
     0034 3rrr                      1-  840     	LGOTO	_00489_DS_
     0035 2160                      1-  841     	MOVIA	0x60
     0036 04rr                      1-  842     	SUBAR	_ledCount,W
     0037                           1-  843     _00489_DS_:
     0037 0C03                      1-  844     	BTRSC	STATUS,0
     0038 3rrr                      1-  845     	LGOTO	_00462_DS_
                                    1-  846     	.line	386, "main.c"; 	PORTB = 0x10;
     0039 2110                      1-  847     	MOVIA	0x10
     003A 00rr                      1-  848     	MOVAR	_PORTB
     003B                           1-  849     _00462_DS_:
                                    1-  850     	.line	387, "main.c"; 	if(++ledCount >=96)
                                    1-  851     	BANKSEL	_ledCount
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 05rr                      1-  852     	INCR	_ledCount,F
     003D 0D03                      1-  853     	BTRSC	STATUS,2
     003E 05rr                      1-  854     	INCR	(_ledCount + 1),F
                                    1-  855     ;;unsigned compare: left < lit (0x60=96), size=2
     003F 2100                      1-  856     	MOVIA	0x00
     0040 04rr                      1-  857     	SUBAR	(_ledCount + 1),W
     0041 0903                      1-  858     	BTRSS	STATUS,2
     0042 3rrr                      1-  859     	LGOTO	_00490_DS_
     0043 2160                      1-  860     	MOVIA	0x60
     0044 04rr                      1-  861     	SUBAR	_ledCount,W
     0045                           1-  862     _00490_DS_:
     0045 0803                      1-  863     	BTRSS	STATUS,0
     0046 3rrr                      1-  864     	LGOTO	_00465_DS_
                                    1-  865     	.line	388, "main.c"; 	ledCount = 0;
                                    1-  866     	BANKSEL	_ledCount
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 02rr                      1-  867     	CLRR	_ledCount
     0049 02rr                      1-  868     	CLRR	(_ledCount + 1)
     004A                           1-  869     _00465_DS_:
                                    1-  870     	.line	389, "main.c"; 	}
                                    1-  871     	RETURN	
     004A 0010                      3-   26 m1      ret
                                    1-  872     ; exit point of _Led8
                                    1-  874     ;***
                                    1-  875     ;  pBlock Stats: dbName = C
                                    1-  876     ;***
                                    1-  877     ;; Starting pCode block
                                    1-  878     .segment "code"; module=main, function=_Led7
     0000                           1-  880     _Led7:
                                    1-  881     ; 0 exit points
                                    1-  882     ;;unsigned compare: left < lit (0xB=11), size=1
                                    1-  883     	.line	344, "main.c"; 	if(time < 11)
     0000 210B                      1-  884     	MOVIA	0x0b
                                    1-  885     	BANKSEL	_time
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  886     	SUBAR	_time,W
     0003 0C03                      1-  887     	BTRSC	STATUS,0
     0004 3rrr                      1-  888     	LGOTO	_00419_DS_
                                    1-  889     	.line	346, "main.c"; 	if(time%2 == 0)
     0005 0Crr                      1-  890     	BTRSC	_time,0
     0006 3rrr                      1-  891     	LGOTO	_00407_DS_
                                    1-  892     	.line	347, "main.c"; 	PORTB = 0x00;
     0007 02rr                      1-  893     	CLRR	_PORTB
     0008 3rrr                      1-  894     	LGOTO	_00408_DS_
     0009                           1-  895     _00407_DS_:
                                    1-  896     	.line	349, "main.c"; 	PORTB = 0x12;
     0009 2112                      1-  897     	MOVIA	0x12
     000A 00rr                      1-  898     	MOVAR	_PORTB
     000B                           1-  899     _00408_DS_:
                                    1-  900     	.line	350, "main.c"; 	if(++ledCount >= 50)
                                    1-  901     	BANKSEL	_ledCount
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1-  902     	INCR	_ledCount,F
     000D 0D03                      1-  903     	BTRSC	STATUS,2
     000E 05rr                      1-  904     	INCR	(_ledCount + 1),F
                                    1-  905     ;;unsigned compare: left < lit (0x32=50), size=2
     000F 2100                      1-  906     	MOVIA	0x00
     0010 04rr                      1-  907     	SUBAR	(_ledCount + 1),W
     0011 0903                      1-  908     	BTRSS	STATUS,2
     0012 3rrr                      1-  909     	LGOTO	_00442_DS_
     0013 2132                      1-  910     	MOVIA	0x32
     0014 04rr                      1-  911     	SUBAR	_ledCount,W
     0015                           1-  912     _00442_DS_:
     0015 0803                      1-  913     	BTRSS	STATUS,0
     0016 3rrr                      1-  914     	LGOTO	_00421_DS_
                                    1-  915     	.line	352, "main.c"; 	time++;
                                    1-  916     	BANKSEL	_time
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 05rr                      1-  917     	INCR	_time,F
                                    1-  918     	.line	353, "main.c"; 	ledCount = 0;
                                    1-  919     	BANKSEL	_ledCount
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 02rr                      1-  920     	CLRR	_ledCount
     001B 02rr                      1-  921     	CLRR	(_ledCount + 1)
                                    1-  922     	.line	354, "main.c"; 	PORTB = 0x00;
     001C 02rr                      1-  923     	CLRR	_PORTB
     001D 3rrr                      1-  924     	LGOTO	_00421_DS_
                                    1-  925     ;;unsigned compare: left < lit (0x3=3), size=2
     001E                           1-  926     _00419_DS_:
                                    1-  927     	.line	361, "main.c"; 	if(ledCount < 3)
     001E 2100                      1-  928     	MOVIA	0x00
                                    1-  929     	BANKSEL	_ledCount
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1-  930     	SUBAR	(_ledCount + 1),W
     0021 0903                      1-  931     	BTRSS	STATUS,2
     0022 3rrr                      1-  932     	LGOTO	_00443_DS_
     0023 2103                      1-  933     	MOVIA	0x03
     0024 04rr                      1-  934     	SUBAR	_ledCount,W
     0025                           1-  935     _00443_DS_:
     0025 0C03                      1-  936     	BTRSC	STATUS,0
     0026 3rrr                      1-  937     	LGOTO	_00412_DS_
                                    1-  938     	.line	362, "main.c"; 	PORTB = 0x12;
     0027 2112                      1-  939     	MOVIA	0x12
     0028 00rr                      1-  940     	MOVAR	_PORTB
     0029 3rrr                      1-  941     	LGOTO	_00413_DS_
     002A                           1-  942     _00412_DS_:
                                    1-  943     	.line	364, "main.c"; 	PORTB = 0x00;
     002A 02rr                      1-  944     	CLRR	_PORTB
     002B                           1-  945     _00413_DS_:
                                    1-  946     	.line	366, "main.c"; 	if(++ledCount >= 5)
                                    1-  947     	BANKSEL	_ledCount
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 05rr                      1-  948     	INCR	_ledCount,F
     002D 0D03                      1-  949     	BTRSC	STATUS,2
     002E 05rr                      1-  950     	INCR	(_ledCount + 1),F
                                    1-  951     ;;unsigned compare: left < lit (0x5=5), size=2
     002F 2100                      1-  952     	MOVIA	0x00
     0030 04rr                      1-  953     	SUBAR	(_ledCount + 1),W
     0031 0903                      1-  954     	BTRSS	STATUS,2
     0032 3rrr                      1-  955     	LGOTO	_00444_DS_
     0033 2105                      1-  956     	MOVIA	0x05
     0034 04rr                      1-  957     	SUBAR	_ledCount,W
     0035                           1-  958     _00444_DS_:
     0035 0803                      1-  959     	BTRSS	STATUS,0
     0036 3rrr                      1-  960     	LGOTO	_00421_DS_
                                    1-  961     	.line	368, "main.c"; 	ledCount = 0;
                                    1-  962     	BANKSEL	_ledCount
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 02rr                      1-  963     	CLRR	_ledCount
     0039 02rr                      1-  964     	CLRR	(_ledCount + 1)
                                    1-  965     	.line	369, "main.c"; 	if(++time >= 51)
                                    1-  966     	BANKSEL	_time
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 05rr                      1-  967     	INCR	_time,F
                                    1-  968     ;;unsigned compare: left < lit (0x33=51), size=1
     003C 2133                      1-  969     	MOVIA	0x33
     003D 04rr                      1-  970     	SUBAR	_time,W
     003E 0C03                      1-  971     	BTRSC	STATUS,0
                                    1-  972     	.line	370, "main.c"; 	time = 0;
     003F 02rr                      1-  973     	CLRR	_time
     0040                           1-  974     _00421_DS_:
                                    1-  975     	.line	373, "main.c"; 	}
                                    1-  976     	RETURN	
     0040 0010                      3-   26 m1      ret
                                    1-  978     ;***
                                    1-  979     ;  pBlock Stats: dbName = C
                                    1-  980     ;***
                                    1-  981     ;has an exit
                                    1-  982     ;; Starting pCode block
                                    1-  983     .segment "code"; module=main, function=_Led6
     0000                           1-  985     _Led6:
                                    1-  986     ; 2 exit points
                                    1-  987     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1-  988     	.line	318, "main.c"; 	if(time < 6)
     0000 2106                      1-  989     	MOVIA	0x06
                                    1-  990     	BANKSEL	_time
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  991     	SUBAR	_time,W
     0003 0C03                      1-  992     	BTRSC	STATUS,0
     0004 3rrr                      1-  993     	LGOTO	_00377_DS_
                                    1-  994     	.line	320, "main.c"; 	if(ledCount == 0)
                                    1-  995     	BANKSEL	_ledCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1-  996     	MOVR	_ledCount,W
     0007 11rr                      1-  997     	IORAR	(_ledCount + 1),W
     0008 0903                      1-  998     	BTRSS	STATUS,2
     0009 3rrr                      1-  999     	LGOTO	_00373_DS_
                                    1- 1000     	.line	321, "main.c"; 	PORTB = 0x12;
     000A 2112                      1- 1001     	MOVIA	0x12
     000B 00rr                      1- 1002     	MOVAR	_PORTB
     000C                           1- 1003     _00373_DS_:
                                    1- 1004     	.line	322, "main.c"; 	if(ledCount == 5)
                                    1- 1005     	BANKSEL	_ledCount
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 1006     	MOVR	_ledCount,W
     000E 2405                      1- 1007     	XORIA	0x05
     000F 0903                      1- 1008     	BTRSS	STATUS,2
     0010 3rrr                      1- 1009     	LGOTO	_00378_DS_
     0011 01rr                      1- 1010     	MOVR	(_ledCount + 1),W
     0012 2400                      1- 1011     	XORIA	0x00
     0013 0903                      1- 1012     	BTRSS	STATUS,2
     0014 3rrr                      1- 1013     	LGOTO	_00378_DS_
                                    1- 1014     	.line	323, "main.c"; 	PORTB = 0x00;
     0015 02rr                      1- 1015     	CLRR	_PORTB
     0016 3rrr                      1- 1016     	LGOTO	_00378_DS_
     0017                           1- 1017     _00377_DS_:
                                    1- 1018     	.line	327, "main.c"; 	PORTB = 0x00;
     0017 02rr                      1- 1019     	CLRR	_PORTB
     0018                           1- 1020     _00378_DS_:
                                    1- 1021     	.line	330, "main.c"; 	if(++ledCount > 8)
                                    1- 1022     	BANKSEL	_ledCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 05rr                      1- 1023     	INCR	_ledCount,F
     001A 0D03                      1- 1024     	BTRSC	STATUS,2
     001B 05rr                      1- 1025     	INCR	(_ledCount + 1),F
                                    1- 1026     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1027     ;;unsigned compare: left >= lit (0x9=9), size=2
     001C 2100                      1- 1028     	MOVIA	0x00
     001D 04rr                      1- 1029     	SUBAR	(_ledCount + 1),W
     001E 0903                      1- 1030     	BTRSS	STATUS,2
     001F 3rrr                      1- 1031     	LGOTO	_00401_DS_
     0020 2109                      1- 1032     	MOVIA	0x09
     0021 04rr                      1- 1033     	SUBAR	_ledCount,W
     0022                           1- 1034     _00401_DS_:
     0022 0803                      1- 1035     	BTRSS	STATUS,0
     0023 3rrr                      1- 1036     	LGOTO	_00383_DS_
                                    1- 1037     	.line	332, "main.c"; 	ledCount = 0;
                                    1- 1038     	BANKSEL	_ledCount
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1- 1039     	CLRR	_ledCount
     0026 02rr                      1- 1040     	CLRR	(_ledCount + 1)
                                    1- 1041     	.line	333, "main.c"; 	if(++time >= 10)
                                    1- 1042     	BANKSEL	_time
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 05rr                      1- 1043     	INCR	_time,F
                                    1- 1044     ;;unsigned compare: left < lit (0xA=10), size=1
     0029 210A                      1- 1045     	MOVIA	0x0a
     002A 04rr                      1- 1046     	SUBAR	_time,W
     002B 0803                      1- 1047     	BTRSS	STATUS,0
     002C 3rrr                      1- 1048     	LGOTO	_00383_DS_
                                    1- 1049     	.line	335, "main.c"; 	time = 0;
     002D 02rr                      1- 1050     	CLRR	_time
                                    1- 1051     	.line	336, "main.c"; 	ledCount = 0;
                                    1- 1052     	BANKSEL	_ledCount
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 02rr                      1- 1053     	CLRR	_ledCount
     0030 02rr                      1- 1054     	CLRR	(_ledCount + 1)
                                    1- 1055     	.line	337, "main.c"; 	PORTB = 0x00;	//关闭LED
     0031 02rr                      1- 1056     	CLRR	_PORTB
     0032                           1- 1057     _00383_DS_:
                                    1- 1058     	.line	340, "main.c"; 	}
                                    1- 1059     	RETURN	
     0032 0010                      3-   26 m1      ret
                                    1- 1060     ; exit point of _Led6
                                    1- 1062     ;***
                                    1- 1063     ;  pBlock Stats: dbName = C
                                    1- 1064     ;***
                                    1- 1065     ;has an exit
                                    1- 1066     ;; Starting pCode block
                                    1- 1067     .segment "code"; module=main, function=_Led5
     0000                           1- 1069     _Led5:
                                    1- 1070     ; 2 exit points
                                    1- 1071     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1072     	.line	289, "main.c"; 	if(time < 6)
     0000 2106                      1- 1073     	MOVIA	0x06
                                    1- 1074     	BANKSEL	_time
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1075     	SUBAR	_time,W
     0003 0C03                      1- 1076     	BTRSC	STATUS,0
     0004 3rrr                      1- 1077     	LGOTO	_00337_DS_
                                    1- 1078     	.line	291, "main.c"; 	if(ledCount == 0)
                                    1- 1079     	BANKSEL	_ledCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1080     	MOVR	_ledCount,W
     0007 11rr                      1- 1081     	IORAR	(_ledCount + 1),W
     0008 0903                      1- 1082     	BTRSS	STATUS,2
     0009 3rrr                      1- 1083     	LGOTO	_00329_DS_
                                    1- 1084     	.line	292, "main.c"; 	PORTB = 0x10;
     000A 2110                      1- 1085     	MOVIA	0x10
     000B 00rr                      1- 1086     	MOVAR	_PORTB
     000C                           1- 1087     _00329_DS_:
                                    1- 1088     	.line	293, "main.c"; 	if(ledCount == 5)
                                    1- 1089     	BANKSEL	_ledCount
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 1090     	MOVR	_ledCount,W
     000E 2405                      1- 1091     	XORIA	0x05
     000F 0903                      1- 1092     	BTRSS	STATUS,2
     0010 3rrr                      1- 1093     	LGOTO	_00338_DS_
     0011 01rr                      1- 1094     	MOVR	(_ledCount + 1),W
     0012 2400                      1- 1095     	XORIA	0x00
     0013 0903                      1- 1096     	BTRSS	STATUS,2
     0014 3rrr                      1- 1097     	LGOTO	_00338_DS_
                                    1- 1098     	.line	294, "main.c"; 	PORTB = 0x00;
     0015 02rr                      1- 1099     	CLRR	_PORTB
     0016 3rrr                      1- 1100     	LGOTO	_00338_DS_
     0017                           1- 1101     _00337_DS_:
                                    1- 1102     	.line	298, "main.c"; 	if(ledCount == 0)
                                    1- 1103     	BANKSEL	_ledCount
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1- 1104     	MOVR	_ledCount,W
     0019 11rr                      1- 1105     	IORAR	(_ledCount + 1),W
     001A 0903                      1- 1106     	BTRSS	STATUS,2
     001B 3rrr                      1- 1107     	LGOTO	_00333_DS_
                                    1- 1108     	.line	299, "main.c"; 	PORTB = 0x02;
     001C 2102                      1- 1109     	MOVIA	0x02
     001D 00rr                      1- 1110     	MOVAR	_PORTB
     001E                           1- 1111     _00333_DS_:
                                    1- 1112     	.line	300, "main.c"; 	if(ledCount == 5)
                                    1- 1113     	BANKSEL	_ledCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1114     	MOVR	_ledCount,W
     0020 2405                      1- 1115     	XORIA	0x05
     0021 0903                      1- 1116     	BTRSS	STATUS,2
     0022 3rrr                      1- 1117     	LGOTO	_00338_DS_
     0023 01rr                      1- 1118     	MOVR	(_ledCount + 1),W
     0024 2400                      1- 1119     	XORIA	0x00
     0025 0D03                      1- 1120     	BTRSC	STATUS,2
                                    1- 1121     	.line	301, "main.c"; 	PORTB = 0x00;
     0026 02rr                      1- 1122     	CLRR	_PORTB
     0027                           1- 1123     _00338_DS_:
                                    1- 1124     	.line	304, "main.c"; 	if(++ledCount > 8)
                                    1- 1125     	BANKSEL	_ledCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 05rr                      1- 1126     	INCR	_ledCount,F
     0029 0D03                      1- 1127     	BTRSC	STATUS,2
     002A 05rr                      1- 1128     	INCR	(_ledCount + 1),F
                                    1- 1129     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1130     ;;unsigned compare: left >= lit (0x9=9), size=2
     002B 2100                      1- 1131     	MOVIA	0x00
     002C 04rr                      1- 1132     	SUBAR	(_ledCount + 1),W
     002D 0903                      1- 1133     	BTRSS	STATUS,2
     002E 3rrr                      1- 1134     	LGOTO	_00367_DS_
     002F 2109                      1- 1135     	MOVIA	0x09
     0030 04rr                      1- 1136     	SUBAR	_ledCount,W
     0031                           1- 1137     _00367_DS_:
     0031 0803                      1- 1138     	BTRSS	STATUS,0
     0032 3rrr                      1- 1139     	LGOTO	_00343_DS_
                                    1- 1140     	.line	306, "main.c"; 	ledCount = 0;
                                    1- 1141     	BANKSEL	_ledCount
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1- 1142     	CLRR	_ledCount
     0035 02rr                      1- 1143     	CLRR	(_ledCount + 1)
                                    1- 1144     	.line	307, "main.c"; 	if(++time >= 12)
                                    1- 1145     	BANKSEL	_time
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 05rr                      1- 1146     	INCR	_time,F
                                    1- 1147     ;;unsigned compare: left < lit (0xC=12), size=1
     0038 210C                      1- 1148     	MOVIA	0x0c
     0039 04rr                      1- 1149     	SUBAR	_time,W
     003A 0803                      1- 1150     	BTRSS	STATUS,0
     003B 3rrr                      1- 1151     	LGOTO	_00343_DS_
                                    1- 1152     	.line	309, "main.c"; 	time = 0;
     003C 02rr                      1- 1153     	CLRR	_time
                                    1- 1154     	.line	310, "main.c"; 	ledCount = 0;
                                    1- 1155     	BANKSEL	_ledCount
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 02rr                      1- 1156     	CLRR	_ledCount
     003F 02rr                      1- 1157     	CLRR	(_ledCount + 1)
                                    1- 1158     	.line	311, "main.c"; 	PORTB &= 0xEE;	//关闭LED
     0040 21EE                      1- 1159     	MOVIA	0xee
     0041 10rr                      1- 1160     	ANDAR	_PORTB,F
     0042                           1- 1161     _00343_DS_:
                                    1- 1162     	.line	314, "main.c"; 	}
                                    1- 1163     	RETURN	
     0042 0010                      3-   26 m1      ret
                                    1- 1164     ; exit point of _Led5
                                    1- 1166     ;***
                                    1- 1167     ;  pBlock Stats: dbName = C
                                    1- 1168     ;***
                                    1- 1169     ;has an exit
                                    1- 1170     ;; Starting pCode block
                                    1- 1171     .segment "code"; module=main, function=_Led4
     0000                           1- 1173     _Led4:
                                    1- 1174     ; 2 exit points
                                    1- 1175     ;;unsigned compare: left < lit (0xD=13), size=2
                                    1- 1176     	.line	267, "main.c"; 	if(ledCount < 13)
     0000 2100                      1- 1177     	MOVIA	0x00
                                    1- 1178     	BANKSEL	_ledCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1179     	SUBAR	(_ledCount + 1),W
     0003 0903                      1- 1180     	BTRSS	STATUS,2
     0004 3rrr                      1- 1181     	LGOTO	_00315_DS_
     0005 210D                      1- 1182     	MOVIA	0x0d
     0006 04rr                      1- 1183     	SUBAR	_ledCount,W
     0007                           1- 1184     _00315_DS_:
     0007 0C03                      1- 1185     	BTRSC	STATUS,0
     0008 3rrr                      1- 1186     	LGOTO	_00282_DS_
                                    1- 1187     	.line	268, "main.c"; 	PORTB = 0x10;
     0009 2110                      1- 1188     	MOVIA	0x10
     000A 00rr                      1- 1189     	MOVAR	_PORTB
     000B 3rrr                      1- 1190     	LGOTO	_00283_DS_
                                    1- 1191     ;;unsigned compare: left < lit (0x1A=26), size=2
     000C                           1- 1192     _00282_DS_:
                                    1- 1193     	.line	269, "main.c"; 	else if(ledCount < 26)	
     000C 2100                      1- 1194     	MOVIA	0x00
                                    1- 1195     	BANKSEL	_ledCount
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 1196     	SUBAR	(_ledCount + 1),W
     000F 0903                      1- 1197     	BTRSS	STATUS,2
     0010 3rrr                      1- 1198     	LGOTO	_00316_DS_
     0011 211A                      1- 1199     	MOVIA	0x1a
     0012 04rr                      1- 1200     	SUBAR	_ledCount,W
     0013                           1- 1201     _00316_DS_:
     0013 0C03                      1- 1202     	BTRSC	STATUS,0
     0014 3rrr                      1- 1203     	LGOTO	_00279_DS_
                                    1- 1204     	.line	270, "main.c"; 	PORTB = 0x00;
     0015 02rr                      1- 1205     	CLRR	_PORTB
     0016 3rrr                      1- 1206     	LGOTO	_00283_DS_
                                    1- 1207     ;;unsigned compare: left < lit (0x27=39), size=2
     0017                           1- 1208     _00279_DS_:
                                    1- 1209     	.line	271, "main.c"; 	else if(ledCount < 39)
     0017 2100                      1- 1210     	MOVIA	0x00
                                    1- 1211     	BANKSEL	_ledCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1- 1212     	SUBAR	(_ledCount + 1),W
     001A 0903                      1- 1213     	BTRSS	STATUS,2
     001B 3rrr                      1- 1214     	LGOTO	_00317_DS_
     001C 2127                      1- 1215     	MOVIA	0x27
     001D 04rr                      1- 1216     	SUBAR	_ledCount,W
     001E                           1- 1217     _00317_DS_:
     001E 0C03                      1- 1218     	BTRSC	STATUS,0
     001F 3rrr                      1- 1219     	LGOTO	_00276_DS_
                                    1- 1220     	.line	272, "main.c"; 	PORTB = 0x10;
     0020 2110                      1- 1221     	MOVIA	0x10
     0021 00rr                      1- 1222     	MOVAR	_PORTB
     0022 3rrr                      1- 1223     	LGOTO	_00283_DS_
                                    1- 1224     ;;unsigned compare: left < lit (0x34=52), size=2
     0023                           1- 1225     _00276_DS_:
                                    1- 1226     	.line	273, "main.c"; 	else if(ledCount < 52)
     0023 2100                      1- 1227     	MOVIA	0x00
                                    1- 1228     	BANKSEL	_ledCount
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 04rr                      1- 1229     	SUBAR	(_ledCount + 1),W
     0026 0903                      1- 1230     	BTRSS	STATUS,2
     0027 3rrr                      1- 1231     	LGOTO	_00318_DS_
     0028 2134                      1- 1232     	MOVIA	0x34
     0029 04rr                      1- 1233     	SUBAR	_ledCount,W
     002A                           1- 1234     _00318_DS_:
     002A 0C03                      1- 1235     	BTRSC	STATUS,0
     002B 3rrr                      1- 1236     	LGOTO	_00273_DS_
                                    1- 1237     	.line	274, "main.c"; 	PORTB = 0x00;
     002C 02rr                      1- 1238     	CLRR	_PORTB
     002D 3rrr                      1- 1239     	LGOTO	_00283_DS_
                                    1- 1240     ;;unsigned compare: left < lit (0x41=65), size=2
     002E                           1- 1241     _00273_DS_:
                                    1- 1242     	.line	275, "main.c"; 	else if(ledCount < 65)
     002E 2100                      1- 1243     	MOVIA	0x00
                                    1- 1244     	BANKSEL	_ledCount
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 04rr                      1- 1245     	SUBAR	(_ledCount + 1),W
     0031 0903                      1- 1246     	BTRSS	STATUS,2
     0032 3rrr                      1- 1247     	LGOTO	_00319_DS_
     0033 2141                      1- 1248     	MOVIA	0x41
     0034 04rr                      1- 1249     	SUBAR	_ledCount,W
     0035                           1- 1250     _00319_DS_:
     0035 0C03                      1- 1251     	BTRSC	STATUS,0
     0036 3rrr                      1- 1252     	LGOTO	_00270_DS_
                                    1- 1253     	.line	276, "main.c"; 	PORTB = 0x02;
     0037 2102                      1- 1254     	MOVIA	0x02
     0038 00rr                      1- 1255     	MOVAR	_PORTB
     0039 3rrr                      1- 1256     	LGOTO	_00283_DS_
                                    1- 1257     ;;unsigned compare: left < lit (0x4E=78), size=2
     003A                           1- 1258     _00270_DS_:
                                    1- 1259     	.line	277, "main.c"; 	else if(ledCount < 78)
     003A 2100                      1- 1260     	MOVIA	0x00
                                    1- 1261     	BANKSEL	_ledCount
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 04rr                      1- 1262     	SUBAR	(_ledCount + 1),W
     003D 0903                      1- 1263     	BTRSS	STATUS,2
     003E 3rrr                      1- 1264     	LGOTO	_00320_DS_
     003F 214E                      1- 1265     	MOVIA	0x4e
     0040 04rr                      1- 1266     	SUBAR	_ledCount,W
     0041                           1- 1267     _00320_DS_:
     0041 0C03                      1- 1268     	BTRSC	STATUS,0
     0042 3rrr                      1- 1269     	LGOTO	_00267_DS_
                                    1- 1270     	.line	278, "main.c"; 	PORTB = 0x00;
     0043 02rr                      1- 1271     	CLRR	_PORTB
     0044 3rrr                      1- 1272     	LGOTO	_00283_DS_
                                    1- 1273     ;;unsigned compare: left < lit (0x5B=91), size=2
     0045                           1- 1274     _00267_DS_:
                                    1- 1275     	.line	279, "main.c"; 	else if(ledCount < 91)
     0045 2100                      1- 1276     	MOVIA	0x00
                                    1- 1277     	BANKSEL	_ledCount
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 04rr                      1- 1278     	SUBAR	(_ledCount + 1),W
     0048 0903                      1- 1279     	BTRSS	STATUS,2
     0049 3rrr                      1- 1280     	LGOTO	_00321_DS_
     004A 215B                      1- 1281     	MOVIA	0x5b
     004B 04rr                      1- 1282     	SUBAR	_ledCount,W
     004C                           1- 1283     _00321_DS_:
     004C 0C03                      1- 1284     	BTRSC	STATUS,0
     004D 3rrr                      1- 1285     	LGOTO	_00264_DS_
                                    1- 1286     	.line	280, "main.c"; 	PORTB = 0x02;
     004E 2102                      1- 1287     	MOVIA	0x02
     004F 00rr                      1- 1288     	MOVAR	_PORTB
     0050 3rrr                      1- 1289     	LGOTO	_00283_DS_
                                    1- 1290     ;;unsigned compare: left < lit (0x68=104), size=2
     0051                           1- 1291     _00264_DS_:
                                    1- 1292     	.line	281, "main.c"; 	else if(ledCount < 104)
     0051 2100                      1- 1293     	MOVIA	0x00
                                    1- 1294     	BANKSEL	_ledCount
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 04rr                      1- 1295     	SUBAR	(_ledCount + 1),W
     0054 0903                      1- 1296     	BTRSS	STATUS,2
     0055 3rrr                      1- 1297     	LGOTO	_00322_DS_
     0056 2168                      1- 1298     	MOVIA	0x68
     0057 04rr                      1- 1299     	SUBAR	_ledCount,W
     0058                           1- 1300     _00322_DS_:
     0058 0C03                      1- 1301     	BTRSC	STATUS,0
     0059 3rrr                      1- 1302     	LGOTO	_00283_DS_
                                    1- 1303     	.line	282, "main.c"; 	PORTB = 0x00;
     005A 02rr                      1- 1304     	CLRR	_PORTB
     005B                           1- 1305     _00283_DS_:
                                    1- 1306     	.line	283, "main.c"; 	if(++ledCount >=104)
                                    1- 1307     	BANKSEL	_ledCount
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 05rr                      1- 1308     	INCR	_ledCount,F
     005D 0D03                      1- 1309     	BTRSC	STATUS,2
     005E 05rr                      1- 1310     	INCR	(_ledCount + 1),F
                                    1- 1311     ;;unsigned compare: left < lit (0x68=104), size=2
     005F 2100                      1- 1312     	MOVIA	0x00
     0060 04rr                      1- 1313     	SUBAR	(_ledCount + 1),W
     0061 0903                      1- 1314     	BTRSS	STATUS,2
     0062 3rrr                      1- 1315     	LGOTO	_00323_DS_
     0063 2168                      1- 1316     	MOVIA	0x68
     0064 04rr                      1- 1317     	SUBAR	_ledCount,W
     0065                           1- 1318     _00323_DS_:
     0065 0803                      1- 1319     	BTRSS	STATUS,0
     0066 3rrr                      1- 1320     	LGOTO	_00286_DS_
                                    1- 1321     	.line	284, "main.c"; 	ledCount = 0;
                                    1- 1322     	BANKSEL	_ledCount
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 02rr                      1- 1323     	CLRR	_ledCount
     0069 02rr                      1- 1324     	CLRR	(_ledCount + 1)
     006A                           1- 1325     _00286_DS_:
                                    1- 1326     	.line	285, "main.c"; 	}
                                    1- 1327     	RETURN	
     006A 0010                      3-   26 m1      ret
                                    1- 1328     ; exit point of _Led4
                                    1- 1330     ;***
                                    1- 1331     ;  pBlock Stats: dbName = C
                                    1- 1332     ;***
                                    1- 1333     ;; Starting pCode block
                                    1- 1334     .segment "code"; module=main, function=_Led3
     0000                           1- 1336     _Led3:
                                    1- 1337     ; 0 exit points
                                    1- 1338     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1- 1339     	.line	233, "main.c"; 	if(time < 10)
     0000 210A                      1- 1340     	MOVIA	0x0a
                                    1- 1341     	BANKSEL	_time
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1342     	SUBAR	_time,W
     0003 0C03                      1- 1343     	BTRSC	STATUS,0
     0004 3rrr                      1- 1344     	LGOTO	_00230_DS_
                                    1- 1345     ;;unsigned compare: left < lit (0x14=20), size=2
                                    1- 1346     	.line	235, "main.c"; 	if(ledCount < 20)
     0005 2100                      1- 1347     	MOVIA	0x00
                                    1- 1348     	BANKSEL	_ledCount
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 1349     	SUBAR	(_ledCount + 1),W
     0008 0903                      1- 1350     	BTRSS	STATUS,2
     0009 3rrr                      1- 1351     	LGOTO	_00253_DS_
     000A 2114                      1- 1352     	MOVIA	0x14
     000B 04rr                      1- 1353     	SUBAR	_ledCount,W
     000C                           1- 1354     _00253_DS_:
     000C 0C03                      1- 1355     	BTRSC	STATUS,0
     000D 3rrr                      1- 1356     	LGOTO	_00218_DS_
                                    1- 1357     	.line	236, "main.c"; 	PORTB = 0x02;
     000E 2102                      1- 1358     	MOVIA	0x02
     000F 00rr                      1- 1359     	MOVAR	_PORTB
     0010 3rrr                      1- 1360     	LGOTO	_00219_DS_
     0011                           1- 1361     _00218_DS_:
                                    1- 1362     	.line	238, "main.c"; 	PORTB = 0x10;
     0011 2110                      1- 1363     	MOVIA	0x10
     0012 00rr                      1- 1364     	MOVAR	_PORTB
     0013                           1- 1365     _00219_DS_:
                                    1- 1366     	.line	239, "main.c"; 	if(++ledCount >= 41)
                                    1- 1367     	BANKSEL	_ledCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 05rr                      1- 1368     	INCR	_ledCount,F
     0015 0D03                      1- 1369     	BTRSC	STATUS,2
     0016 05rr                      1- 1370     	INCR	(_ledCount + 1),F
                                    1- 1371     ;;unsigned compare: left < lit (0x29=41), size=2
     0017 2100                      1- 1372     	MOVIA	0x00
     0018 04rr                      1- 1373     	SUBAR	(_ledCount + 1),W
     0019 0903                      1- 1374     	BTRSS	STATUS,2
     001A 3rrr                      1- 1375     	LGOTO	_00254_DS_
     001B 2129                      1- 1376     	MOVIA	0x29
     001C 04rr                      1- 1377     	SUBAR	_ledCount,W
     001D                           1- 1378     _00254_DS_:
     001D 0803                      1- 1379     	BTRSS	STATUS,0
     001E 3rrr                      1- 1380     	LGOTO	_00232_DS_
                                    1- 1381     	.line	241, "main.c"; 	time++;
                                    1- 1382     	BANKSEL	_time
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 05rr                      1- 1383     	INCR	_time,F
                                    1- 1384     	.line	242, "main.c"; 	ledCount = 0;
                                    1- 1385     	BANKSEL	_ledCount
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 02rr                      1- 1386     	CLRR	_ledCount
     0023 02rr                      1- 1387     	CLRR	(_ledCount + 1)
                                    1- 1388     	.line	243, "main.c"; 	PORTB = 0x01;
     0024 2101                      1- 1389     	MOVIA	0x01
     0025 00rr                      1- 1390     	MOVAR	_PORTB
     0026 3rrr                      1- 1391     	LGOTO	_00232_DS_
                                    1- 1392     ;;unsigned compare: left < lit (0x6=6), size=2
     0027                           1- 1393     _00230_DS_:
                                    1- 1394     	.line	250, "main.c"; 	if(ledCount < 6)
     0027 2100                      1- 1395     	MOVIA	0x00
                                    1- 1396     	BANKSEL	_ledCount
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 04rr                      1- 1397     	SUBAR	(_ledCount + 1),W
     002A 0903                      1- 1398     	BTRSS	STATUS,2
     002B 3rrr                      1- 1399     	LGOTO	_00255_DS_
     002C 2106                      1- 1400     	MOVIA	0x06
     002D 04rr                      1- 1401     	SUBAR	_ledCount,W
     002E                           1- 1402     _00255_DS_:
     002E 0C03                      1- 1403     	BTRSC	STATUS,0
     002F 3rrr                      1- 1404     	LGOTO	_00223_DS_
                                    1- 1405     	.line	251, "main.c"; 	PORTB = 0x02;
     0030 2102                      1- 1406     	MOVIA	0x02
     0031 00rr                      1- 1407     	MOVAR	_PORTB
     0032 3rrr                      1- 1408     	LGOTO	_00224_DS_
     0033                           1- 1409     _00223_DS_:
                                    1- 1410     	.line	253, "main.c"; 	PORTB = 0x10;
     0033 2110                      1- 1411     	MOVIA	0x10
     0034 00rr                      1- 1412     	MOVAR	_PORTB
     0035                           1- 1413     _00224_DS_:
                                    1- 1414     	.line	255, "main.c"; 	if(++ledCount >= 11)
                                    1- 1415     	BANKSEL	_ledCount
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 05rr                      1- 1416     	INCR	_ledCount,F
     0037 0D03                      1- 1417     	BTRSC	STATUS,2
     0038 05rr                      1- 1418     	INCR	(_ledCount + 1),F
                                    1- 1419     ;;unsigned compare: left < lit (0xB=11), size=2
     0039 2100                      1- 1420     	MOVIA	0x00
     003A 04rr                      1- 1421     	SUBAR	(_ledCount + 1),W
     003B 0903                      1- 1422     	BTRSS	STATUS,2
     003C 3rrr                      1- 1423     	LGOTO	_00256_DS_
     003D 210B                      1- 1424     	MOVIA	0x0b
     003E 04rr                      1- 1425     	SUBAR	_ledCount,W
     003F                           1- 1426     _00256_DS_:
     003F 0803                      1- 1427     	BTRSS	STATUS,0
     0040 3rrr                      1- 1428     	LGOTO	_00232_DS_
                                    1- 1429     	.line	257, "main.c"; 	ledCount = 0;
                                    1- 1430     	BANKSEL	_ledCount
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 02rr                      1- 1431     	CLRR	_ledCount
     0043 02rr                      1- 1432     	CLRR	(_ledCount + 1)
                                    1- 1433     	.line	258, "main.c"; 	if(++time >= 20)
                                    1- 1434     	BANKSEL	_time
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 05rr                      1- 1435     	INCR	_time,F
                                    1- 1436     ;;unsigned compare: left < lit (0x14=20), size=1
     0046 2114                      1- 1437     	MOVIA	0x14
     0047 04rr                      1- 1438     	SUBAR	_time,W
     0048 0C03                      1- 1439     	BTRSC	STATUS,0
                                    1- 1440     	.line	259, "main.c"; 	time = 0;
     0049 02rr                      1- 1441     	CLRR	_time
     004A                           1- 1442     _00232_DS_:
                                    1- 1443     	.line	262, "main.c"; 	}
                                    1- 1444     	RETURN	
     004A 0010                      3-   26 m1      ret
                                    1- 1446     ;***
                                    1- 1447     ;  pBlock Stats: dbName = C
                                    1- 1448     ;***
                                    1- 1449     ;has an exit
                                    1- 1450     ;; Starting pCode block
                                    1- 1451     .segment "code"; module=main, function=_Led2
     0000                           1- 1453     _Led2:
                                    1- 1454     ; 2 exit points
                                    1- 1455     	.line	228, "main.c"; 	PORTB = 0x12;
     0000 2112                      1- 1456     	MOVIA	0x12
     0001 00rr                      1- 1457     	MOVAR	_PORTB
                                    1- 1458     	.line	229, "main.c"; 	}
                                    1- 1459     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1460     ; exit point of _Led2
                                    1- 1462     ;***
                                    1- 1463     ;  pBlock Stats: dbName = C
                                    1- 1464     ;***
                                    1- 1465     ;has an exit
                                    1- 1466     ;; Starting pCode block
                                    1- 1467     .segment "code"; module=main, function=_Led1
     0000                           1- 1469     _Led1:
                                    1- 1470     ; 2 exit points
                                    1- 1471     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1- 1472     	.line	197, "main.c"; 	if(time < 10)
     0000 210A                      1- 1473     	MOVIA	0x0a
                                    1- 1474     	BANKSEL	_time
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1475     	SUBAR	_time,W
     0003 0C03                      1- 1476     	BTRSC	STATUS,0
     0004 3rrr                      1- 1477     	LGOTO	_00174_DS_
                                    1- 1478     	.line	199, "main.c"; 	if(ledCount == 0)	
                                    1- 1479     	BANKSEL	_ledCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1480     	MOVR	_ledCount,W
     0007 11rr                      1- 1481     	IORAR	(_ledCount + 1),W
     0008 0903                      1- 1482     	BTRSS	STATUS,2
     0009 3rrr                      1- 1483     	LGOTO	_00164_DS_
                                    1- 1484     	.line	200, "main.c"; 	PORTB = 0x10;
     000A 2110                      1- 1485     	MOVIA	0x10
     000B 00rr                      1- 1486     	MOVAR	_PORTB
     000C                           1- 1487     _00164_DS_:
                                    1- 1488     	.line	201, "main.c"; 	if(ledCount == 3)
                                    1- 1489     	BANKSEL	_ledCount
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 1490     	MOVR	_ledCount,W
     000E 2403                      1- 1491     	XORIA	0x03
     000F 0903                      1- 1492     	BTRSS	STATUS,2
     0010 3rrr                      1- 1493     	LGOTO	_00175_DS_
     0011 01rr                      1- 1494     	MOVR	(_ledCount + 1),W
     0012 2400                      1- 1495     	XORIA	0x00
     0013 0903                      1- 1496     	BTRSS	STATUS,2
     0014 3rrr                      1- 1497     	LGOTO	_00175_DS_
                                    1- 1498     	.line	202, "main.c"; 	PORTB = 0x00;
     0015 02rr                      1- 1499     	CLRR	_PORTB
     0016 3rrr                      1- 1500     	LGOTO	_00175_DS_
                                    1- 1501     ;;unsigned compare: left < lit (0x14=20), size=1
     0017                           1- 1502     _00174_DS_:
                                    1- 1503     	.line	204, "main.c"; 	else if(time < 20)
     0017 2114                      1- 1504     	MOVIA	0x14
                                    1- 1505     	BANKSEL	_time
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1- 1506     	SUBAR	_time,W
     001A 0C03                      1- 1507     	BTRSC	STATUS,0
     001B 3rrr                      1- 1508     	LGOTO	_00175_DS_
                                    1- 1509     	.line	206, "main.c"; 	if(ledCount == 0)
                                    1- 1510     	BANKSEL	_ledCount
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 1511     	MOVR	_ledCount,W
     001E 11rr                      1- 1512     	IORAR	(_ledCount + 1),W
     001F 0903                      1- 1513     	BTRSS	STATUS,2
     0020 3rrr                      1- 1514     	LGOTO	_00168_DS_
                                    1- 1515     	.line	207, "main.c"; 	PORTB = 0x02;
     0021 2102                      1- 1516     	MOVIA	0x02
     0022 00rr                      1- 1517     	MOVAR	_PORTB
     0023                           1- 1518     _00168_DS_:
                                    1- 1519     	.line	208, "main.c"; 	if(ledCount == 3)
                                    1- 1520     	BANKSEL	_ledCount
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1- 1521     	MOVR	_ledCount,W
     0025 2403                      1- 1522     	XORIA	0x03
     0026 0903                      1- 1523     	BTRSS	STATUS,2
     0027 3rrr                      1- 1524     	LGOTO	_00175_DS_
     0028 01rr                      1- 1525     	MOVR	(_ledCount + 1),W
     0029 2400                      1- 1526     	XORIA	0x00
     002A 0D03                      1- 1527     	BTRSC	STATUS,2
                                    1- 1528     	.line	209, "main.c"; 	PORTB = 0x00;
     002B 02rr                      1- 1529     	CLRR	_PORTB
     002C                           1- 1530     _00175_DS_:
                                    1- 1531     	.line	212, "main.c"; 	if(++ledCount > 4)
                                    1- 1532     	BANKSEL	_ledCount
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1533     	INCR	_ledCount,F
     002E 0D03                      1- 1534     	BTRSC	STATUS,2
     002F 05rr                      1- 1535     	INCR	(_ledCount + 1),F
                                    1- 1536     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1537     ;;unsigned compare: left >= lit (0x5=5), size=2
     0030 2100                      1- 1538     	MOVIA	0x00
     0031 04rr                      1- 1539     	SUBAR	(_ledCount + 1),W
     0032 0903                      1- 1540     	BTRSS	STATUS,2
     0033 3rrr                      1- 1541     	LGOTO	_00208_DS_
     0034 2105                      1- 1542     	MOVIA	0x05
     0035 04rr                      1- 1543     	SUBAR	_ledCount,W
     0036                           1- 1544     _00208_DS_:
     0036 0803                      1- 1545     	BTRSS	STATUS,0
     0037 3rrr                      1- 1546     	LGOTO	_00180_DS_
                                    1- 1547     	.line	214, "main.c"; 	ledCount = 0;
                                    1- 1548     	BANKSEL	_ledCount
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 02rr                      1- 1549     	CLRR	_ledCount
     003A 02rr                      1- 1550     	CLRR	(_ledCount + 1)
                                    1- 1551     	.line	215, "main.c"; 	if(++time >= 20)
                                    1- 1552     	BANKSEL	_time
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 05rr                      1- 1553     	INCR	_time,F
                                    1- 1554     ;;unsigned compare: left < lit (0x14=20), size=1
     003D 2114                      1- 1555     	MOVIA	0x14
     003E 04rr                      1- 1556     	SUBAR	_time,W
     003F 0803                      1- 1557     	BTRSS	STATUS,0
     0040 3rrr                      1- 1558     	LGOTO	_00180_DS_
                                    1- 1559     	.line	217, "main.c"; 	time = 0;
     0041 02rr                      1- 1560     	CLRR	_time
                                    1- 1561     	.line	218, "main.c"; 	ledCount = 0;
                                    1- 1562     	BANKSEL	_ledCount
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 02rr                      1- 1563     	CLRR	_ledCount
     0044 02rr                      1- 1564     	CLRR	(_ledCount + 1)
                                    1- 1565     	.line	219, "main.c"; 	PORTB &= 0xEE;	//关闭LED
     0045 21EE                      1- 1566     	MOVIA	0xee
     0046 10rr                      1- 1567     	ANDAR	_PORTB,F
     0047                           1- 1568     _00180_DS_:
                                    1- 1569     	.line	224, "main.c"; 	}
                                    1- 1570     	RETURN	
     0047 0010                      3-   26 m1      ret
                                    1- 1571     ; exit point of _Led1
                                    1- 1573     ;***
                                    1- 1574     ;  pBlock Stats: dbName = C
                                    1- 1575     ;***
                                    1- 1576     ;has an exit
                                    1- 1577     ;functions called:
                                    1- 1578     ;   _Led1
                                    1- 1579     ;   _Led2
                                    1- 1580     ;   _Led3
                                    1- 1581     ;   _Led4
                                    1- 1582     ;   _Led5
                                    1- 1583     ;   _Led6
                                    1- 1584     ;   _Led7
                                    1- 1585     ;   _Led8
                                    1- 1586     ;   _Led9
                                    1- 1587     ;   _Led10
                                    1- 1588     ;   _Led1
                                    1- 1589     ;   _Led2
                                    1- 1590     ;   _Led3
                                    1- 1591     ;   _Led4
                                    1- 1592     ;   _Led5
                                    1- 1593     ;   _Led6
                                    1- 1594     ;   _Led7
                                    1- 1595     ;   _Led8
                                    1- 1596     ;   _Led9
                                    1- 1597     ;   _Led10
                                    1- 1598     ;1 compiler assigned register :
                                    1- 1599     ;   r0x1011
                                    1- 1600     ;; Starting pCode block
                                    1- 1601     .segment "code"; module=main, function=_ledCon
     0000                           1- 1603     _ledCon:
                                    1- 1604     ; 2 exit points
                                    1- 1605     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1- 1606     	.line	159, "main.c"; 	switch(workStep)
     0000 2101                      1- 1607     	MOVIA	0x01
                                    1- 1608     	BANKSEL	_workStep
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1609     	SUBAR	_workStep,W
     0003 0803                      1- 1610     	BTRSS	STATUS,0
     0004 3rrr                      1- 1611     	LGOTO	_00148_DS_
                                    1- 1612     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1613     ;;unsigned compare: left >= lit (0xB=11), size=1
     0005 210B                      1- 1614     	MOVIA	0x0b
     0006 04rr                      1- 1615     	SUBAR	_workStep,W
     0007 0C03                      1- 1616     	BTRSC	STATUS,0
     0008 3rrr                      1- 1617     	LGOTO	_00148_DS_
     0009 06rr                      1- 1618     	DECR	_workStep,W
                                    1- 1619     	BANKSEL	r0x1011
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1620     	MOVAR	r0x1011
     000C 21rr                      1- 1621     	MOVIA	((_00158_DS_ >> 8) & 0xff)
     000D 008A                      1- 1622     	MOVAR	PCHBUF
     000E 01rr                      1- 1623     	MOVR	r0x1011,W
     000F 25rr                      1- 1624     	ADDIA	_00158_DS_
     0010 0C03                      1- 1625     	BTRSC	STATUS,0
     0011 058A                      1- 1626     	INCR	PCHBUF,F
     0012 0082                      1- 1627     	MOVAR	PCL
     0013                           1- 1628     _00158_DS_:
     0013 3rrr                      1- 1629     	LGOTO	_00137_DS_
     0014 3rrr                      1- 1630     	LGOTO	_00138_DS_
     0015 3rrr                      1- 1631     	LGOTO	_00139_DS_
     0016 3rrr                      1- 1632     	LGOTO	_00140_DS_
     0017 3rrr                      1- 1633     	LGOTO	_00141_DS_
     0018 3rrr                      1- 1634     	LGOTO	_00142_DS_
     0019 3rrr                      1- 1635     	LGOTO	_00143_DS_
     001A 3rrr                      1- 1636     	LGOTO	_00144_DS_
     001B 3rrr                      1- 1637     	LGOTO	_00145_DS_
     001C 3rrr                      1- 1638     	LGOTO	_00146_DS_
     001D                           1- 1639     _00137_DS_:
                                    1- 1640     	.line	162, "main.c"; 	Led1();
     001D 2rrr                      1- 1641     	LCALL	_Led1
                                    1- 1642     	.line	163, "main.c"; 	break;
     001E 3rrr                      1- 1643     	LGOTO	_00148_DS_
     001F                           1- 1644     _00138_DS_:
                                    1- 1645     	.line	165, "main.c"; 	Led2();
     001F 2rrr                      1- 1646     	LCALL	_Led2
                                    1- 1647     	.line	166, "main.c"; 	break;
     0020 3rrr                      1- 1648     	LGOTO	_00148_DS_
     0021                           1- 1649     _00139_DS_:
                                    1- 1650     	.line	168, "main.c"; 	Led3();
     0021 2rrr                      1- 1651     	LCALL	_Led3
                                    1- 1652     	.line	169, "main.c"; 	break;
     0022 3rrr                      1- 1653     	LGOTO	_00148_DS_
     0023                           1- 1654     _00140_DS_:
                                    1- 1655     	.line	171, "main.c"; 	Led4();
     0023 2rrr                      1- 1656     	LCALL	_Led4
                                    1- 1657     	.line	172, "main.c"; 	break;
     0024 3rrr                      1- 1658     	LGOTO	_00148_DS_
     0025                           1- 1659     _00141_DS_:
                                    1- 1660     	.line	174, "main.c"; 	Led5();
     0025 2rrr                      1- 1661     	LCALL	_Led5
                                    1- 1662     	.line	175, "main.c"; 	break;
     0026 3rrr                      1- 1663     	LGOTO	_00148_DS_
     0027                           1- 1664     _00142_DS_:
                                    1- 1665     	.line	177, "main.c"; 	Led6();
     0027 2rrr                      1- 1666     	LCALL	_Led6
                                    1- 1667     	.line	178, "main.c"; 	break;
     0028 3rrr                      1- 1668     	LGOTO	_00148_DS_
     0029                           1- 1669     _00143_DS_:
                                    1- 1670     	.line	180, "main.c"; 	Led7();
     0029 2rrr                      1- 1671     	LCALL	_Led7
                                    1- 1672     	.line	181, "main.c"; 	break;
     002A 3rrr                      1- 1673     	LGOTO	_00148_DS_
     002B                           1- 1674     _00144_DS_:
                                    1- 1675     	.line	183, "main.c"; 	Led8();
     002B 2rrr                      1- 1676     	LCALL	_Led8
                                    1- 1677     	.line	184, "main.c"; 	break;
     002C 3rrr                      1- 1678     	LGOTO	_00148_DS_
     002D                           1- 1679     _00145_DS_:
                                    1- 1680     	.line	186, "main.c"; 	Led9();
     002D 2rrr                      1- 1681     	LCALL	_Led9
                                    1- 1682     	.line	187, "main.c"; 	break;
     002E 3rrr                      1- 1683     	LGOTO	_00148_DS_
     002F                           1- 1684     _00146_DS_:
                                    1- 1685     	.line	189, "main.c"; 	Led10();
     002F 2rrr                      1- 1686     	LCALL	_Led10
     0030                           1- 1687     _00148_DS_:
                                    1- 1688     	.line	193, "main.c"; 	}
                                    1- 1689     	RETURN	
     0030 0010                      3-   26 m1      ret
                                    1- 1690     ; exit point of _ledCon
                                    1- 1692     ;***
                                    1- 1693     ;  pBlock Stats: dbName = C
                                    1- 1694     ;***
                                    1- 1695     ;has an exit
                                    1- 1696     ;functions called:
                                    1- 1697     ;   _Start24C02
                                    1- 1698     ;   _SendByte
                                    1- 1699     ;   _RecvAck
                                    1- 1700     ;   _SendByte
                                    1- 1701     ;   _RecvAck
                                    1- 1702     ;   _SendByte
                                    1- 1703     ;   _RecvAck
                                    1- 1704     ;   _Stop24C02
                                    1- 1705     ;   _Start24C02
                                    1- 1706     ;   _SendByte
                                    1- 1707     ;   _RecvAck
                                    1- 1708     ;   _SendByte
                                    1- 1709     ;   _RecvAck
                                    1- 1710     ;   _SendByte
                                    1- 1711     ;   _RecvAck
                                    1- 1712     ;   _Stop24C02
                                    1- 1713     ;; Starting pCode block
                                    1- 1714     .segment "code"; module=main, function=_writeWordStep
     0000                           1- 1716     _writeWordStep:
                                    1- 1717     ; 2 exit points
                                    1- 1718     	.line	142, "main.c"; 	BPHCON = 0x7F;	//打开PB7的上拉电阻(SDA)
     0000 217F                      1- 1719     	MOVIA	0x7f
     0001 00rr                      1- 1720     	MOVAR	_BPHCON
                                    1- 1721     	.line	143, "main.c"; 	IOSTA = 0;
     0002 0200                      1- 1722     	CLRA	
     0003 000r                      1- 1723     	IOST	_IOSTA
                                    1- 1724     	.line	144, "main.c"; 	IOSTB = C_PB0_Input;
     0004 2101                      1- 1725     	MOVIA	0x01
     0005 000r                      1- 1726     	IOST	_IOSTB
                                    1- 1727     	.line	145, "main.c"; 	SCL = 0;
                                    1- 1728     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Crr                      1- 1729     	BCR	_PORTA,0
                                    1- 1730     	.line	147, "main.c"; 	Start24C02();
     0008 2rrr                      1- 1731     	LCALL	_Start24C02
                                    1- 1732     	.line	148, "main.c"; 	SendByte(0xA0);		//发送器件地址和写动作
     0009 21A0                      1- 1733     	MOVIA	0xa0
     000A 2rrr                      1- 1734     	LCALL	_SendByte
                                    1- 1735     	.line	149, "main.c"; 	RecvAck();
     000B 2rrr                      1- 1736     	LCALL	_RecvAck
                                    1- 1737     	.line	150, "main.c"; 	SendByte(0X00);		//发送写地址
     000C 2100                      1- 1738     	MOVIA	0x00
     000D 2rrr                      1- 1739     	LCALL	_SendByte
                                    1- 1740     	.line	151, "main.c"; 	RecvAck();
     000E 2rrr                      1- 1741     	LCALL	_RecvAck
                                    1- 1742     	.line	152, "main.c"; 	SendByte(workStep);		//发送数据到地址
                                    1- 1743     	BANKSEL	_workStep
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1744     	MOVR	_workStep,W
     0011 2rrr                      1- 1745     	LCALL	_SendByte
                                    1- 1746     	.line	153, "main.c"; 	RecvAck();
     0012 2rrr                      1- 1747     	LCALL	_RecvAck
                                    1- 1748     	.line	154, "main.c"; 	Stop24C02();
     0013 2rrr                      1- 1749     	LCALL	_Stop24C02
                                    1- 1750     	.line	155, "main.c"; 	}
                                    1- 1751     	RETURN	
     0014 0010                      3-   26 m1      ret
                                    1- 1752     ; exit point of _writeWordStep
                                    1- 1754     ;***
                                    1- 1755     ;  pBlock Stats: dbName = C
                                    1- 1756     ;***
                                    1- 1757     ;has an exit
                                    1- 1758     ;functions called:
                                    1- 1759     ;   _Start24C02
                                    1- 1760     ;   _SendByte
                                    1- 1761     ;   _RecvAck
                                    1- 1762     ;   _SendByte
                                    1- 1763     ;   _RecvAck
                                    1- 1764     ;   _Start24C02
                                    1- 1765     ;   _SendByte
                                    1- 1766     ;   _RecvAck
                                    1- 1767     ;   _ReadByte
                                    1- 1768     ;   _SendNoAck
                                    1- 1769     ;   _Stop24C02
                                    1- 1770     ;   _Start24C02
                                    1- 1771     ;   _SendByte
                                    1- 1772     ;   _RecvAck
                                    1- 1773     ;   _SendByte
                                    1- 1774     ;   _RecvAck
                                    1- 1775     ;   _Start24C02
                                    1- 1776     ;   _SendByte
                                    1- 1777     ;   _RecvAck
                                    1- 1778     ;   _ReadByte
                                    1- 1779     ;   _SendNoAck
                                    1- 1780     ;   _Stop24C02
                                    1- 1781     ;; Starting pCode block
                                    1- 1782     .segment "code"; module=main, function=_readWordStep
     0000                           1- 1784     _readWordStep:
                                    1- 1785     ; 2 exit points
                                    1- 1786     	.line	121, "main.c"; 	BPHCON = 0x7F;	//打开PB7的上拉电阻(SDA)
     0000 217F                      1- 1787     	MOVIA	0x7f
     0001 00rr                      1- 1788     	MOVAR	_BPHCON
                                    1- 1789     	.line	122, "main.c"; 	IOSTA = 0;
     0002 0200                      1- 1790     	CLRA	
     0003 000r                      1- 1791     	IOST	_IOSTA
                                    1- 1792     	.line	123, "main.c"; 	IOSTB = C_PB0_Input;
     0004 2101                      1- 1793     	MOVIA	0x01
     0005 000r                      1- 1794     	IOST	_IOSTB
                                    1- 1795     	.line	124, "main.c"; 	SCL = 0;
                                    1- 1796     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Crr                      1- 1797     	BCR	_PORTA,0
                                    1- 1798     	.line	125, "main.c"; 	Start24C02();
     0008 2rrr                      1- 1799     	LCALL	_Start24C02
                                    1- 1800     	.line	126, "main.c"; 	SendByte(0xA0);		//发送器件地址和写动作
     0009 21A0                      1- 1801     	MOVIA	0xa0
     000A 2rrr                      1- 1802     	LCALL	_SendByte
                                    1- 1803     	.line	127, "main.c"; 	RecvAck();
     000B 2rrr                      1- 1804     	LCALL	_RecvAck
                                    1- 1805     	.line	128, "main.c"; 	SendByte(0X00);		//发送读地址
     000C 2100                      1- 1806     	MOVIA	0x00
     000D 2rrr                      1- 1807     	LCALL	_SendByte
                                    1- 1808     	.line	129, "main.c"; 	RecvAck();
     000E 2rrr                      1- 1809     	LCALL	_RecvAck
                                    1- 1810     	.line	130, "main.c"; 	Start24C02();
     000F 2rrr                      1- 1811     	LCALL	_Start24C02
                                    1- 1812     	.line	131, "main.c"; 	SendByte(0xA1);		//发送器件地址和读动作
     0010 21A1                      1- 1813     	MOVIA	0xa1
     0011 2rrr                      1- 1814     	LCALL	_SendByte
                                    1- 1815     	.line	132, "main.c"; 	RecvAck();
     0012 2rrr                      1- 1816     	LCALL	_RecvAck
                                    1- 1817     	.line	133, "main.c"; 	workStep = ReadByte();
     0013 2rrr                      1- 1818     	LCALL	_ReadByte
                                    1- 1819     	BANKSEL	_workStep
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1820     	MOVAR	_workStep
                                    1- 1821     	.line	134, "main.c"; 	SendNoAck();
     0016 2rrr                      1- 1822     	LCALL	_SendNoAck
                                    1- 1823     	.line	135, "main.c"; 	Stop24C02();
     0017 2rrr                      1- 1824     	LCALL	_Stop24C02
                                    1- 1825     ;;unsigned compare: left < lit (0xB=11), size=1
                                    1- 1826     	.line	136, "main.c"; 	if(workStep >= 11 || workStep == 0)
     0018 210B                      1- 1827     	MOVIA	0x0b
                                    1- 1828     	BANKSEL	_workStep
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 04rr                      1- 1829     	SUBAR	_workStep,W
     001B 0C03                      1- 1830     	BTRSC	STATUS,0
     001C 3rrr                      1- 1831     	LGOTO	_00125_DS_
     001D 01rr                      1- 1832     	MOVR	_workStep,W
     001E 0903                      1- 1833     	BTRSS	STATUS,2
     001F 3rrr                      1- 1834     	LGOTO	_00128_DS_
     0020                           1- 1835     _00125_DS_:
                                    1- 1836     	.line	137, "main.c"; 	workStep = 1;
     0020 2101                      1- 1837     	MOVIA	0x01
                                    1- 1838     	BANKSEL	_workStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 00rr                      1- 1839     	MOVAR	_workStep
     0023                           1- 1840     _00128_DS_:
                                    1- 1841     	.line	138, "main.c"; 	}
                                    1- 1842     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1- 1843     ; exit point of _readWordStep
                                    1- 1846     ;	code size estimation:
                                    1- 1847     ;	  794+  112 =   906 instructions ( 2036 byte)
                                    1- 1849     	end
                                    1- 1849     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800533
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00108_DS_              Label    0000001E
_00116_DS_              Label    00000037
_00118_DS_              Label    00000038
_00120_DS_              Label    00000014
_00125_DS_              Label    00000020
_00128_DS_              Label    00000023
_00137_DS_              Label    0000001D
_00138_DS_              Label    0000001F
_00139_DS_              Label    00000021
_00140_DS_              Label    00000023
_00141_DS_              Label    00000025
_00142_DS_              Label    00000027
_00143_DS_              Label    00000029
_00144_DS_              Label    0000002B
_00145_DS_              Label    0000002D
_00146_DS_              Label    0000002F
_00148_DS_              Label    00000030
_00158_DS_              Label    00000013
_00164_DS_              Label    0000000C
_00168_DS_              Label    00000023
_00174_DS_              Label    00000017
_00175_DS_              Label    0000002C
_00180_DS_              Label    00000047
_00208_DS_              Label    00000036
_00218_DS_              Label    00000011
_00219_DS_              Label    00000013
_00223_DS_              Label    00000033
_00224_DS_              Label    00000035
_00230_DS_              Label    00000027
_00232_DS_              Label    0000004A
_00253_DS_              Label    0000000C
_00254_DS_              Label    0000001D
_00255_DS_              Label    0000002E
_00256_DS_              Label    0000003F
_00264_DS_              Label    00000051
_00267_DS_              Label    00000045
_00270_DS_              Label    0000003A
_00273_DS_              Label    0000002E
_00276_DS_              Label    00000023
_00279_DS_              Label    00000017
_00282_DS_              Label    0000000C
_00283_DS_              Label    0000005B
_00286_DS_              Label    0000006A
_00315_DS_              Label    00000007
_00316_DS_              Label    00000013
_00317_DS_              Label    0000001E
_00318_DS_              Label    0000002A
_00319_DS_              Label    00000035
_00320_DS_              Label    00000041
_00321_DS_              Label    0000004C
_00322_DS_              Label    00000058
_00323_DS_              Label    00000065
_00329_DS_              Label    0000000C
_00333_DS_              Label    0000001E
_00337_DS_              Label    00000017
_00338_DS_              Label    00000027
_00343_DS_              Label    00000042
_00367_DS_              Label    00000031
_00373_DS_              Label    0000000C
_00377_DS_              Label    00000017
_00378_DS_              Label    00000018
_00383_DS_              Label    00000032
_00401_DS_              Label    00000022
_00407_DS_              Label    00000009
_00408_DS_              Label    0000000B
_00412_DS_              Label    0000002A
_00413_DS_              Label    0000002B
_00419_DS_              Label    0000001E
_00421_DS_              Label    00000040
_00442_DS_              Label    00000015
_00443_DS_              Label    00000025
_00444_DS_              Label    00000035
_00452_DS_              Label    00000030
_00455_DS_              Label    00000024
_00458_DS_              Label    00000018
_00461_DS_              Label    0000000C
_00462_DS_              Label    0000003B
_00465_DS_              Label    0000004A
_00485_DS_              Label    00000007
_00486_DS_              Label    00000013
_00487_DS_              Label    0000001F
_00488_DS_              Label    0000002B
_00489_DS_              Label    00000037
_00490_DS_              Label    00000045
_00498_DS_              Label    00000030
_00501_DS_              Label    00000024
_00504_DS_              Label    00000018
_00507_DS_              Label    0000000C
_00508_DS_              Label    0000003B
_00511_DS_              Label    0000004A
_00531_DS_              Label    00000007
_00532_DS_              Label    00000013
_00533_DS_              Label    0000001F
_00534_DS_              Label    0000002B
_00535_DS_              Label    00000037
_00536_DS_              Label    00000045
_00542_DS_              Label    0000000C
_00546_DS_              Label    00000017
_00547_DS_              Label    00000018
_00552_DS_              Label    00000032
_00570_DS_              Label    00000022
_00582_DS_              Label    00000014
_00584_DS_              Label    0000000C
_00585_DS_              Label    00000016
_00586_DS_              Label    00000017
_00593_DS_              Label    00000009
_00595_DS_              Label    0000001C
_00604_DS_              Label    00000013
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_delay                  Label    00000000
_Delay10Us              Label    00000000
_FSR                    Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_KeyScan                Label    00000000
_KeyStatus              Label    00000000
_Led1                   Label    00000000
_Led10                  Label    00000000
_Led2                   Label    00000000
_Led3                   Label    00000000
_Led4                   Label    00000000
_Led5                   Label    00000000
_Led6                   Label    00000000
_Led7                   Label    00000000
_Led8                   Label    00000000
_Led9                   Label    00000000
_ledCon                 Label    00000000
_ledCount               Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_ReadByte               Label    00000000
_readWordStep           Label    00000000
_RecvAck                Label    00000000
_SDAInput               Label    00000000
_SDAOutput              Label    00000000
_SendAck                Label    00000000
_SendByte               Label    00000000
_SendNoAck              Label    00000000
_Start24C02             Label    00000000
_STATUS                 Label    00000000
_Stop24C02              Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_time                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_workStep               Label    00000000
_writeWordStep          Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    0000002F
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x100C                 Label    00000000
r0x100D                 Label    00000000
r0x100E                 Label    00000000
r0x100F                 Label    00000000
r0x1011                 Label    00000000
r0x1012                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a053d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A053D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
