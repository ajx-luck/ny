
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_delay
                                    1-   97     	extern	_F_wait_eoc
                                    1-   98     	extern	_F_AIN0_Convert
                                    1-   99     	extern	_F_AIN7_Convert
                                    1-  100     	extern	_checkV
                                    1-  101     	extern	_checkA
                                    1-  102     	extern	_initAD
                                    1-  103     	extern	_ledCon2
                                    1-  104     	extern	_ledCon
                                    1-  105     	extern	_initTimer0
                                    1-  106     	extern	_workCon
                                    1-  107     	extern	_isr
                                    1-  108     	extern	_main
                                    1-  109     	extern	_keyClick
                                    1-  110     	extern	_intCount
                                    1-  111     	extern	_IntFlag
                                    1-  112     	extern	_ledCount
                                    1-  113     	extern	_R_AIN0_DATA
                                    1-  114     	extern	_R_AIN0_DATA_LB
                                    1-  115     	extern	_R_AIN7_DATA
                                    1-  116     	extern	_R_AIN7_DATA_LB
                                    1-  117     	extern	_workStep
                                    1-  118     	extern	_sleepCount
                                    1-  119     	extern	_startFlag
                                    1-  120     	extern	_count1S
                                    1-  121     	extern	_fullFlag
                                    1-  122     	extern	_ledMin
                                    1-  123     	extern	_ledLock
                                    1-  125     	extern PSAVE
                                    1-  126     	extern SSAVE
                                    1-  127     	extern WSAVE
                                    1-  128     	extern STK12
                                    1-  129     	extern STK11
                                    1-  130     	extern STK10
                                    1-  131     	extern STK09
                                    1-  132     	extern STK08
                                    1-  133     	extern STK07
                                    1-  134     	extern STK06
                                    1-  135     	extern STK05
                                    1-  136     	extern STK04
                                    1-  137     	extern STK03
                                    1-  138     	extern STK02
                                    1-  139     	extern STK01
                                    1-  140     	extern STK00
                                    1-  142     .segment "uninit", 0x20000040
 20000040                           1-  143     PSAVE:
                                    1-  144     	.res 1
 20000041                           1-  145     SSAVE:
                                    1-  146     	.res 1
 20000042                           1-  147     WSAVE:
                                    1-  148     	.res 1
 20000043                           1-  149     STK12:
                                    1-  150     	.res 1
 20000044                           1-  151     STK11:
                                    1-  152     	.res 1
 20000045                           1-  153     STK10:
                                    1-  154     	.res 1
 20000046                           1-  155     STK09:
                                    1-  156     	.res 1
 20000047                           1-  157     STK08:
                                    1-  158     	.res 1
 20000048                           1-  159     STK07:
                                    1-  160     	.res 1
 20000049                           1-  161     STK06:
                                    1-  162     	.res 1
 2000004A                           1-  163     STK05:
                                    1-  164     	.res 1
 2000004B                           1-  165     STK04:
                                    1-  166     	.res 1
 2000004C                           1-  167     STK03:
                                    1-  168     	.res 1
 2000004D                           1-  169     STK02:
                                    1-  170     	.res 1
 2000004E                           1-  171     STK01:
                                    1-  172     	.res 1
 2000004F                           1-  173     STK00:
                                    1-  174     	.res 1
                                    1-  176     ;--------------------------------------------------------
                                    1-  177     ; global definitions
                                    1-  178     ;--------------------------------------------------------
                                    1-  179     .segment "uninit"
     0000                           1-  180     _R_AIN0_DATA:
                                    1-  181     	.res	2
                                    1-  184     .segment "uninit"
     0000                           1-  185     _R_AIN0_DATA_LB:
                                    1-  186     	.res	1
                                    1-  189     .segment "uninit"
     0000                           1-  190     _R_AIN7_DATA:
                                    1-  191     	.res	2
                                    1-  194     .segment "uninit"
     0000                           1-  195     _R_AIN7_DATA_LB:
                                    1-  196     	.res	1
                                    1-  199     ;--------------------------------------------------------
                                    1-  200     ; absolute symbol definitions
                                    1-  201     ;--------------------------------------------------------
                                    1-  202     ;--------------------------------------------------------
                                    1-  203     ; compiler-defined variables
                                    1-  204     ;--------------------------------------------------------
                                    1-  205     .segment "uninit"
     0000                           1-  206     r0x102B:
                                    1-  207     	.res	1
                                    1-  208     .segment "uninit"
     0000                           1-  209     r0x102C:
                                    1-  210     	.res	1
                                    1-  211     .segment "uninit"
     0000                           1-  212     r0x1027:
                                    1-  213     	.res	1
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x1028:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x101F:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x1020:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x1021:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x1024:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x1019:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x101A:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x101B:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x101E:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x1016:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1015:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1017:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1018:
                                    1-  252     	.res	1
                                    1-  253     ;--------------------------------------------------------
                                    1-  254     ; initialized data
                                    1-  255     ;--------------------------------------------------------
                                    1-  257     .segment "idata"
     0000                           1-  258     _keyClick:
     0000 0000                      1-  259     	dw	0x00
                                    1-  263     .segment "idata"
     0000                           1-  264     _intCount:
     0000 0000                      1-  265     	dw	0x00
                                    1-  269     .segment "idata"
     0000                           1-  270     _IntFlag:
     0000 0000                      1-  271     	dw	0x00
                                    1-  275     .segment "idata"
     0000                           1-  276     _ledCount:
     0000 0000 0000                 1-  277     	dw	0x00, 0x00
                                    1-  281     .segment "idata"
     0000                           1-  282     _workStep:
     0000 0003                      1-  283     	dw	0x03
                                    1-  287     .segment "idata"
     0000                           1-  288     _sleepCount:
     0000 0000 0000                 1-  289     	dw	0x00, 0x00
                                    1-  293     .segment "idata"
     0000                           1-  294     _startFlag:
     0000 0000                      1-  295     	dw	0x00
                                    1-  299     .segment "idata"
     0000                           1-  300     _count1S:
     0000 0000                      1-  301     	dw	0x00
                                    1-  305     .segment "idata"
     0000                           1-  306     _fullFlag:
     0000 0000                      1-  307     	dw	0x00
                                    1-  311     .segment "idata"
     0000                           1-  312     _ledMin:
     0000 0000                      1-  313     	dw	0x00
                                    1-  317     .segment "idata"
     0000                           1-  318     _ledLock:
     0000 0000                      1-  319     	dw	0x00
                                    1-  322     ;--------------------------------------------------------
                                    1-  323     ; overlayable items in internal ram 
                                    1-  324     ;--------------------------------------------------------
                                    1-  325     ;	udata_ovr
                                    1-  326     ;--------------------------------------------------------
                                    1-  327     ; reset vector 
                                    1-  328     ;--------------------------------------------------------
                                    1-  329     ORG	0x0000
     0000 3rrr                      1-  330     	LGOTO	__nyc_ny8_startup
                                    1-  331     ;--------------------------------------------------------
                                    1-  332     ; interrupt and initialization code
                                    1-  333     ;--------------------------------------------------------
                                    1-  334     ORG 0x0008
     0008 3rrr                      1-  335     	lgoto	__sdcc_interrupt
                                    1-  337     .segment "code"
     0000                           1-  338     __sdcc_interrupt:
                                    1-  339     ;***
                                    1-  340     ;  pBlock Stats: dbName = I
                                    1-  341     ;***
                                    1-  342     ;2 compiler assigned registers:
                                    1-  343     ;   STK00
                                    1-  344     ;   STK01
                                    1-  345     ;; Starting pCode block
     0000                           1-  346     _isr:
                                    1-  347     ; 0 exit points
                                    1-  348     	.line	40, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  349     	MOVAR	WSAVE
     0001 1503                      1-  350     	SWAPR	STATUS,W
     0002 0283                      1-  351     	CLRR	STATUS
     0003 00rr                      1-  352     	MOVAR	SSAVE
     0004 010A                      1-  353     	MOVR	PCHBUF,W
     0005 028A                      1-  354     	CLRR	PCHBUF
     0006 00rr                      1-  355     	MOVAR	PSAVE
     0007 0104                      1-  356     	MOVR	FSR,W
                                    1-  357     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  358     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  359     	MOVR	STK00,W
                                    1-  360     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  361     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  362     	MOVR	STK01,W
                                    1-  363     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  364     	MOVAR	___sdcc_saved_stk01
                                    1-  365     	.line	42, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  366     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  367     	LGOTO	_00113_DS_
                                    1-  368     	.line	44, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  369     	MOVIA	0x37
     0013 03rr                      1-  370     	ADDAR	_TMR0,F
                                    1-  371     	.line	45, "main.c"; 	intCount++;
                                    1-  372     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  373     	INCR	_intCount,F
                                    1-  374     	.line	46, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  375     	MOVR	_intCount,W
     0017 2464                      1-  376     	XORIA	0x64
     0018 0903                      1-  377     	BTRSS	STATUS,2
     0019 3rrr                      1-  378     	LGOTO	_00113_DS_
                                    1-  379     	.line	48, "main.c"; 	intCount = 0;
     001A 02rr                      1-  380     	CLRR	_intCount
                                    1-  381     	.line	49, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  382     	MOVIA	0x01
                                    1-  383     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  384     	MOVAR	_IntFlag
                                    1-  385     	.line	50, "main.c"; 	ledCount++; 
                                    1-  386     	BANKSEL	_ledCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 05rr                      1-  387     	INCR	_ledCount,F
     0020 0D03                      1-  388     	BTRSC	STATUS,2
     0021 05rr                      1-  389     	INCR	(_ledCount + 1),F
                                    1-  390     	.line	51, "main.c"; 	if(++count1S >= 10)
                                    1-  391     	BANKSEL	_count1S
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  392     	INCR	_count1S,F
                                    1-  393     ;;unsigned compare: left < lit (0xA=10), size=1
     0024 210A                      1-  394     	MOVIA	0x0a
     0025 04rr                      1-  395     	SUBAR	_count1S,W
     0026 0803                      1-  396     	BTRSS	STATUS,0
     0027 3rrr                      1-  397     	LGOTO	_00113_DS_
                                    1-  398     	.line	53, "main.c"; 	count1S = 0;
     0028 02rr                      1-  399     	CLRR	_count1S
                                    1-  400     	.line	54, "main.c"; 	if(startFlag)
                                    1-  401     	BANKSEL	_startFlag
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  402     	MOVR	_startFlag,W
     002B 0D03                      1-  403     	BTRSC	STATUS,2
     002C 3rrr                      1-  404     	LGOTO	_00106_DS_
                                    1-  405     	.line	55, "main.c"; 	sleepCount++;
                                    1-  406     	BANKSEL	_sleepCount
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 05rr                      1-  407     	INCR	_sleepCount,F
     002F 0D03                      1-  408     	BTRSC	STATUS,2
     0030 05rr                      1-  409     	INCR	(_sleepCount + 1),F
     0031 3rrr                      1-  410     	LGOTO	_00113_DS_
     0032                           1-  411     _00106_DS_:
                                    1-  412     	.line	57, "main.c"; 	sleepCount = 0;
                                    1-  413     	BANKSEL	_sleepCount
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 02rr                      1-  414     	CLRR	_sleepCount
     0034 02rr                      1-  415     	CLRR	(_sleepCount + 1)
     0035                           1-  416     _00113_DS_:
                                    1-  417     	.line	63, "main.c"; 	INTF = 0;
     0035 02rr                      1-  418     	CLRR	_INTF
                                    1-  419     	.line	65, "main.c"; 	}
                                    1-  420     	BANKSEL	___sdcc_saved_stk01
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1-  421     	MOVR	___sdcc_saved_stk01,W
     0038 00rr                      1-  422     	MOVAR	STK01
                                    1-  423     	BANKSEL	___sdcc_saved_stk00
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  424     	MOVR	___sdcc_saved_stk00,W
     003B 00rr                      1-  425     	MOVAR	STK00
                                    1-  426     	BANKSEL	___sdcc_saved_fsr
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1-  427     	MOVR	___sdcc_saved_fsr,W
     003E 0084                      1-  428     	MOVAR	FSR
     003F 01rr                      1-  429     	MOVR	PSAVE,W
     0040 008A                      1-  430     	MOVAR	PCHBUF
     0041 0283                      1-  431     	CLRR	STATUS
     0042 15rr                      1-  432     	SWAPR	SSAVE,W
     0043 0083                      1-  433     	MOVAR	STATUS
     0044 15rr                      1-  434     	SWAPR	WSAVE,F
     0045 15rr                      1-  435     	SWAPR	WSAVE,W
     0046                           1-  436     END_OF_INTERRUPT:
     0046 0011                      1-  437     	RETIE	
                                    1-  439     ;--------------------------------------------------------
                                    1-  440     ; code
                                    1-  441     ;--------------------------------------------------------
                                    1-  442     ;***
                                    1-  443     ;  pBlock Stats: dbName = M
                                    1-  444     ;***
                                    1-  445     ;has an exit
                                    1-  446     ;functions called:
                                    1-  447     ;   _initTimer0
                                    1-  448     ;   _initAD
                                    1-  449     ;   _workCon
                                    1-  450     ;   _checkA
                                    1-  451     ;   _initTimer0
                                    1-  452     ;   _initAD
                                    1-  453     ;   _workCon
                                    1-  454     ;   _checkA
                                    1-  455     ;; Starting pCode block
                                    1-  456     .segment "code"; module=main, function=_main
     0000                           1-  458     _main:
                                    1-  459     ; 2 exit points
                                    1-  460     	.line	69, "main.c"; 	initTimer0();
     0000 2rrr                      1-  461     	LCALL	_initTimer0
                                    1-  462     	.line	70, "main.c"; 	initAD();
     0001 2rrr                      1-  463     	LCALL	_initAD
     0002                           1-  464     _00121_DS_:
                                    1-  465     	.line	73, "main.c"; 	CLRWDT(); 
     0002 0002                      1-  466     	clrwdt
                                    1-  467     	.line	74, "main.c"; 	if(!IntFlag)
                                    1-  468     	BANKSEL	_IntFlag
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 01rr                      1-  469     	MOVR	_IntFlag,W
     0005 0D03                      1-  470     	BTRSC	STATUS,2
     0006 3rrr                      1-  471     	LGOTO	_00121_DS_
                                    1-  472     	.line	76, "main.c"; 	IntFlag = 0;
     0007 02rr                      1-  473     	CLRR	_IntFlag
                                    1-  474     	.line	77, "main.c"; 	workCon();
     0008 2rrr                      1-  475     	LCALL	_workCon
                                    1-  476     	.line	78, "main.c"; 	checkA();
     0009 2rrr                      1-  477     	LCALL	_checkA
     000A 3rrr                      1-  478     	LGOTO	_00121_DS_
                                    1-  479     	.line	80, "main.c"; 	}
                                    1-  480     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1-  481     ; exit point of _main
                                    1-  483     ;***
                                    1-  484     ;  pBlock Stats: dbName = C
                                    1-  485     ;***
                                    1-  486     ;has an exit
                                    1-  487     ;5 compiler assigned registers:
                                    1-  488     ;   r0x1015
                                    1-  489     ;   STK00
                                    1-  490     ;   r0x1016
                                    1-  491     ;   r0x1017
                                    1-  492     ;   r0x1018
                                    1-  493     ;; Starting pCode block
                                    1-  494     .segment "code"; module=main, function=_delay
                                    1-  496     ;local variable name mapping:
     0000                           1-  501     _delay:
                                    1-  502     ; 2 exit points
                                    1-  503     	.line	365, "main.c"; 	void delay(uint16_t time)
                                    1-  504     	BANKSEL	r0x1015
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  505     	MOVAR	r0x1015
     0002 01rr                      1-  506     	MOVR	STK00,W
                                    1-  507     	BANKSEL	r0x1016
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  508     	MOVAR	r0x1016
                                    1-  509     	.line	367, "main.c"; 	for(uint16_t i=0;i<time;i++);
                                    1-  510     	BANKSEL	r0x1017
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  511     	CLRR	r0x1017
                                    1-  512     	BANKSEL	r0x1018
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  513     	CLRR	r0x1018
     0009                           1-  514     _00370_DS_:
                                    1-  515     	BANKSEL	r0x1015
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  516     	MOVR	r0x1015,W
                                    1-  517     	BANKSEL	r0x1018
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  518     	SUBAR	r0x1018,W
     000D 0903                      1-  519     	BTRSS	STATUS,2
     000E 3rrr                      1-  520     	LGOTO	_00381_DS_
                                    1-  521     	BANKSEL	r0x1016
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  522     	MOVR	r0x1016,W
                                    1-  523     	BANKSEL	r0x1017
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  524     	SUBAR	r0x1017,W
     0013                           1-  525     _00381_DS_:
     0013 0C03                      1-  526     	BTRSC	STATUS,0
     0014 3rrr                      1-  527     	LGOTO	_00372_DS_
                                    1-  528     	BANKSEL	r0x1017
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  529     	INCR	r0x1017,F
     0017 0903                      1-  530     	BTRSS	STATUS,2
     0018 3rrr                      1-  531     	LGOTO	_00001_DS_
                                    1-  532     	BANKSEL	r0x1018
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  533     	INCR	r0x1018,F
     001B                           1-  534     _00001_DS_:
     001B 3rrr                      1-  535     	LGOTO	_00370_DS_
     001C                           1-  536     _00372_DS_:
                                    1-  537     	.line	368, "main.c"; 	}
                                    1-  538     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  539     ; exit point of _delay
                                    1-  541     ;***
                                    1-  542     ;  pBlock Stats: dbName = C
                                    1-  543     ;***
                                    1-  544     ;has an exit
                                    1-  545     ;; Starting pCode block
                                    1-  546     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  548     _F_wait_eoc:
                                    1-  549     ; 2 exit points
     0000                           1-  550     _00363_DS_:
                                    1-  551     	.line	361, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  552     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  553     	LGOTO	_00363_DS_
                                    1-  554     	.line	363, "main.c"; 	}
                                    1-  555     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  556     ; exit point of _F_wait_eoc
                                    1-  558     ;***
                                    1-  559     ;  pBlock Stats: dbName = C
                                    1-  560     ;***
                                    1-  561     ;has an exit
                                    1-  562     ;functions called:
                                    1-  563     ;   _delay
                                    1-  564     ;   _F_wait_eoc
                                    1-  565     ;   _delay
                                    1-  566     ;   _F_wait_eoc
                                    1-  567     ;7 compiler assigned registers:
                                    1-  568     ;   r0x1019
                                    1-  569     ;   STK00
                                    1-  570     ;   r0x101A
                                    1-  571     ;   r0x101B
                                    1-  572     ;   r0x101C
                                    1-  573     ;   r0x101D
                                    1-  574     ;   r0x101E
                                    1-  575     ;; Starting pCode block
                                    1-  576     .segment "code"; module=main, function=_F_AIN0_Convert
                                    1-  578     ;local variable name mapping:
     0000                           1-  581     _F_AIN0_Convert:
                                    1-  582     ; 2 exit points
                                    1-  583     	.line	342, "main.c"; 	void F_AIN0_Convert(char count)
                                    1-  584     	BANKSEL	r0x1019
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  585     	MOVAR	r0x1019
                                    1-  586     	.line	345, "main.c"; 	ADMD  = 0x90 | C_ADC_PA0;				// Select AIN0(PA0) pad as ADC input
     0002 2190                      1-  587     	MOVIA	0x90
     0003 00rr                      1-  588     	MOVAR	_ADMD
                                    1-  589     	.line	346, "main.c"; 	delay(100);
     0004 2164                      1-  590     	MOVIA	0x64
     0005 00rr                      1-  591     	MOVAR	STK00
     0006 2100                      1-  592     	MOVIA	0x00
     0007 2rrr                      1-  593     	LCALL	_delay
                                    1-  594     	.line	347, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  595     	MOVIA	0x01
                                    1-  596     	BANKSEL	r0x101A
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  597     	MOVAR	r0x101A
     000B                           1-  598     _00356_DS_:
                                    1-  599     	BANKSEL	r0x101A
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1-  600     	MOVR	r0x101A,W
                                    1-  601     	BANKSEL	r0x1019
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  602     	SUBAR	r0x1019,W
     000F 0803                      1-  603     	BTRSS	STATUS,0
     0010 3rrr                      1-  604     	LGOTO	_00358_DS_
                                    1-  605     	.line	349, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0011 1Brr                      1-  606     	BSR	_ADMDbits,6
                                    1-  607     	.line	350, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0012 2rrr                      1-  608     	LCALL	_F_wait_eoc
                                    1-  609     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  610     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1-  611     	.line	351, "main.c"; 	if(i>4)
     0013 2105                      1-  612     	MOVIA	0x05
                                    1-  613     	BANKSEL	r0x101A
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1-  614     	SUBAR	r0x101A,W
     0016 0803                      1-  615     	BTRSS	STATUS,0
     0017 3rrr                      1-  616     	LGOTO	_00002_DS_
                                    1-  617     	.line	353, "main.c"; 	R_AIN0_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1-  618     	MOVIA	0x0f
     0019 10rr                      1-  619     	ANDAR	_ADR,W
                                    1-  620     ;;3	MOVAR	r0x101B
                                    1-  621     	BANKSEL	_R_AIN0_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1-  622     	ADDAR	_R_AIN0_DATA_LB,F
                                    1-  623     	.line	354, "main.c"; 	R_AIN0_DATA    += ADD; 
     001C 01rr                      1-  624     	MOVR	_ADD,W
                                    1-  625     	BANKSEL	r0x101B
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  626     	MOVAR	r0x101B
                                    1-  627     ;;1	CLRR	r0x101C
                                    1-  628     ;;106	MOVR	r0x101B,W
                                    1-  629     ;;104	MOVAR	r0x101D
     001F 2100                      1-  630     	MOVIA	0x00
                                    1-  631     	BANKSEL	r0x101E
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1-  632     	MOVAR	r0x101E
                                    1-  633     ;;105	MOVR	r0x101D,W
                                    1-  634     	BANKSEL	r0x101B
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  635     	MOVR	r0x101B,W
                                    1-  636     	BANKSEL	_R_AIN0_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1-  637     	ADDAR	_R_AIN0_DATA,F
                                    1-  638     	BANKSEL	r0x101E
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  639     	MOVR	r0x101E,W
     0028 0C03                      1-  640     	BTRSC	STATUS,0
     0029 05rr                      1-  641     	INCR	r0x101E,W
     002A 0D03                      1-  642     	BTRSC	STATUS,2
     002B 3rrr                      1-  643     	LGOTO	_00002_DS_
                                    1-  644     	BANKSEL	_R_AIN0_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1-  645     	ADDAR	(_R_AIN0_DATA + 1),F
     002E                           1-  646     _00002_DS_:
                                    1-  647     	.line	347, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  648     	BANKSEL	r0x101A
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1-  649     	INCR	r0x101A,F
     0030 3rrr                      1-  650     	LGOTO	_00356_DS_
     0031                           1-  651     _00358_DS_:
                                    1-  652     	.line	357, "main.c"; 	}
                                    1-  653     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1-  654     ; exit point of _F_AIN0_Convert
                                    1-  656     ;***
                                    1-  657     ;  pBlock Stats: dbName = C
                                    1-  658     ;***
                                    1-  659     ;has an exit
                                    1-  660     ;functions called:
                                    1-  661     ;   _delay
                                    1-  662     ;   _F_wait_eoc
                                    1-  663     ;   _delay
                                    1-  664     ;   _F_wait_eoc
                                    1-  665     ;7 compiler assigned registers:
                                    1-  666     ;   r0x101F
                                    1-  667     ;   STK00
                                    1-  668     ;   r0x1020
                                    1-  669     ;   r0x1021
                                    1-  670     ;   r0x1022
                                    1-  671     ;   r0x1023
                                    1-  672     ;   r0x1024
                                    1-  673     ;; Starting pCode block
                                    1-  674     .segment "code"; module=main, function=_F_AIN7_Convert
                                    1-  676     ;local variable name mapping:
     0000                           1-  679     _F_AIN7_Convert:
                                    1-  680     ; 2 exit points
                                    1-  681     	.line	324, "main.c"; 	void F_AIN7_Convert(char count)
                                    1-  682     	BANKSEL	r0x101F
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  683     	MOVAR	r0x101F
                                    1-  684     	.line	327, "main.c"; 	ADMD  = 0x90 | C_ADC_PB2;				// Select AIN0(PA0) pad as ADC input
     0002 2197                      1-  685     	MOVIA	0x97
     0003 00rr                      1-  686     	MOVAR	_ADMD
                                    1-  687     	.line	328, "main.c"; 	delay(100);
     0004 2164                      1-  688     	MOVIA	0x64
     0005 00rr                      1-  689     	MOVAR	STK00
     0006 2100                      1-  690     	MOVIA	0x00
     0007 2rrr                      1-  691     	LCALL	_delay
                                    1-  692     	.line	329, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  693     	MOVIA	0x01
                                    1-  694     	BANKSEL	r0x1020
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  695     	MOVAR	r0x1020
     000B                           1-  696     _00345_DS_:
                                    1-  697     	BANKSEL	r0x1020
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1-  698     	MOVR	r0x1020,W
                                    1-  699     	BANKSEL	r0x101F
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  700     	SUBAR	r0x101F,W
     000F 0803                      1-  701     	BTRSS	STATUS,0
     0010 3rrr                      1-  702     	LGOTO	_00347_DS_
                                    1-  703     	.line	331, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0011 1Brr                      1-  704     	BSR	_ADMDbits,6
                                    1-  705     	.line	332, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0012 2rrr                      1-  706     	LCALL	_F_wait_eoc
                                    1-  707     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  708     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1-  709     	.line	333, "main.c"; 	if(i>4)
     0013 2105                      1-  710     	MOVIA	0x05
                                    1-  711     	BANKSEL	r0x1020
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1-  712     	SUBAR	r0x1020,W
     0016 0803                      1-  713     	BTRSS	STATUS,0
     0017 3rrr                      1-  714     	LGOTO	_00003_DS_
                                    1-  715     	.line	335, "main.c"; 	R_AIN7_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1-  716     	MOVIA	0x0f
     0019 10rr                      1-  717     	ANDAR	_ADR,W
                                    1-  718     ;;3	MOVAR	r0x1021
                                    1-  719     	BANKSEL	_R_AIN7_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1-  720     	ADDAR	_R_AIN7_DATA_LB,F
                                    1-  721     	.line	336, "main.c"; 	R_AIN7_DATA    += ADD; 
     001C 01rr                      1-  722     	MOVR	_ADD,W
                                    1-  723     	BANKSEL	r0x1021
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  724     	MOVAR	r0x1021
                                    1-  725     ;;1	CLRR	r0x1022
                                    1-  726     ;;103	MOVR	r0x1021,W
                                    1-  727     ;;101	MOVAR	r0x1023
     001F 2100                      1-  728     	MOVIA	0x00
                                    1-  729     	BANKSEL	r0x1024
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1-  730     	MOVAR	r0x1024
                                    1-  731     ;;102	MOVR	r0x1023,W
                                    1-  732     	BANKSEL	r0x1021
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  733     	MOVR	r0x1021,W
                                    1-  734     	BANKSEL	_R_AIN7_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1-  735     	ADDAR	_R_AIN7_DATA,F
                                    1-  736     	BANKSEL	r0x1024
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  737     	MOVR	r0x1024,W
     0028 0C03                      1-  738     	BTRSC	STATUS,0
     0029 05rr                      1-  739     	INCR	r0x1024,W
     002A 0D03                      1-  740     	BTRSC	STATUS,2
     002B 3rrr                      1-  741     	LGOTO	_00003_DS_
                                    1-  742     	BANKSEL	_R_AIN7_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1-  743     	ADDAR	(_R_AIN7_DATA + 1),F
     002E                           1-  744     _00003_DS_:
                                    1-  745     	.line	329, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  746     	BANKSEL	r0x1020
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1-  747     	INCR	r0x1020,F
     0030 3rrr                      1-  748     	LGOTO	_00345_DS_
     0031                           1-  749     _00347_DS_:
                                    1-  750     	.line	339, "main.c"; 	}
                                    1-  751     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1-  752     ; exit point of _F_AIN7_Convert
                                    1-  754     ;***
                                    1-  755     ;  pBlock Stats: dbName = C
                                    1-  756     ;***
                                    1-  757     ;has an exit
                                    1-  758     ;functions called:
                                    1-  759     ;   _F_AIN7_Convert
                                    1-  760     ;   _F_AIN7_Convert
                                    1-  761     ;4 compiler assigned registers:
                                    1-  762     ;   r0x1025
                                    1-  763     ;   r0x1026
                                    1-  764     ;   r0x1027
                                    1-  765     ;   r0x1028
                                    1-  766     ;; Starting pCode block
                                    1-  767     .segment "code"; module=main, function=_checkV
     0000                           1-  769     _checkV:
                                    1-  770     ; 2 exit points
                                    1-  771     	.line	251, "main.c"; 	PACON = C_PB2_AIN7;
     0000 2180                      1-  772     	MOVIA	0x80
     0001 00rr                      1-  773     	MOVAR	_PACON
                                    1-  774     	.line	252, "main.c"; 	R_AIN7_DATA=R_AIN7_DATA_LB=0x00;
                                    1-  775     	BANKSEL	_R_AIN7_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  776     	CLRR	_R_AIN7_DATA_LB
                                    1-  777     	BANKSEL	_R_AIN7_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  778     	CLRR	_R_AIN7_DATA
     0006 02rr                      1-  779     	CLRR	(_R_AIN7_DATA + 1)
                                    1-  780     	.line	253, "main.c"; 	F_AIN7_Convert(12);					// execute AIN0 ADC converting 8 times
     0007 210C                      1-  781     	MOVIA	0x0c
     0008 2rrr                      1-  782     	LCALL	_F_AIN7_Convert
                                    1-  783     	.line	254, "main.c"; 	R_AIN7_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  784     	BANKSEL	_R_AIN7_DATA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 15rr                      1-  785     	SWAPR	(_R_AIN7_DATA + 1),W
     000B 22F0                      1-  786     	ANDIA	0xf0
     000C 00rr                      1-  787     	MOVAR	(_R_AIN7_DATA + 1)
     000D 15rr                      1-  788     	SWAPR	_R_AIN7_DATA,W
     000E 00rr                      1-  789     	MOVAR	_R_AIN7_DATA
     000F 220F                      1-  790     	ANDIA	0x0f
     0010 11rr                      1-  791     	IORAR	(_R_AIN7_DATA + 1),F
     0011 12rr                      1-  792     	XORAR	_R_AIN7_DATA,F
                                    1-  793     	.line	255, "main.c"; 	R_AIN7_DATA_LB &= 0xF0;				// Only get Bit7~4
     0012 21F0                      1-  794     	MOVIA	0xf0
                                    1-  795     	BANKSEL	_R_AIN7_DATA_LB
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 10rr                      1-  796     	ANDAR	_R_AIN7_DATA_LB,F
                                    1-  797     	.line	256, "main.c"; 	R_AIN7_DATA += R_AIN7_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0015 01rr                      1-  798     	MOVR	_R_AIN7_DATA_LB,W
                                    1-  799     	BANKSEL	r0x1027
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1-  800     	MOVAR	r0x1027
                                    1-  801     ;;1	MOVAR	r0x1025
                                    1-  802     ;;1	CLRR	r0x1026
                                    1-  803     ;;100	MOVR	r0x1025,W
     0018 2100                      1-  804     	MOVIA	0x00
                                    1-  805     	BANKSEL	r0x1028
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1-  806     	MOVAR	r0x1028
                                    1-  807     	BANKSEL	r0x1027
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1-  808     	MOVR	r0x1027,W
                                    1-  809     	BANKSEL	_R_AIN7_DATA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 03rr                      1-  810     	ADDAR	_R_AIN7_DATA,F
                                    1-  811     	BANKSEL	r0x1028
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  812     	MOVR	r0x1028,W
     0021 0C03                      1-  813     	BTRSC	STATUS,0
     0022 05rr                      1-  814     	INCR	r0x1028,W
     0023 0D03                      1-  815     	BTRSC	STATUS,2
     0024 3rrr                      1-  816     	LGOTO	_00004_DS_
                                    1-  817     	BANKSEL	_R_AIN7_DATA
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 03rr                      1-  818     	ADDAR	(_R_AIN7_DATA + 1),F
                                    1-  819     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0027                           1-  820     _00004_DS_:
                                    1-  821     	.line	257, "main.c"; 	R_AIN7_DATA >>=3;					// R_AIN0_DATA divided 8
     0027 1C03                      1-  822     	BCR	STATUS,0
                                    1-  823     	BANKSEL	_R_AIN7_DATA
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 13rr                      1-  824     	RRR	(_R_AIN7_DATA + 1),F
     002A 13rr                      1-  825     	RRR	_R_AIN7_DATA,F
                                    1-  826     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002B 1C03                      1-  827     	BCR	STATUS,0
     002C 13rr                      1-  828     	RRR	(_R_AIN7_DATA + 1),F
     002D 13rr                      1-  829     	RRR	_R_AIN7_DATA,F
                                    1-  830     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002E 1C03                      1-  831     	BCR	STATUS,0
     002F 13rr                      1-  832     	RRR	(_R_AIN7_DATA + 1),F
     0030 13rr                      1-  833     	RRR	_R_AIN7_DATA,F
                                    1-  834     	.line	258, "main.c"; 	if(ledLock)
                                    1-  835     	BANKSEL	_ledLock
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1-  836     	MOVR	_ledLock,W
     0033 0903                      1-  837     	BTRSS	STATUS,2
                                    1-  838     	.line	260, "main.c"; 	return;
     0034 3rrr                      1-  839     	LGOTO	_00297_DS_
                                    1-  840     	.line	262, "main.c"; 	if(R_AIN7_DATA < 573)	//小于0.8A
     0035 2102                      1-  841     	MOVIA	0x02
                                    1-  842     	BANKSEL	_R_AIN7_DATA
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 04rr                      1-  843     	SUBAR	(_R_AIN7_DATA + 1),W
     0038 0903                      1-  844     	BTRSS	STATUS,2
     0039 3rrr                      1-  845     	LGOTO	_00329_DS_
     003A 213D                      1-  846     	MOVIA	0x3d
     003B 04rr                      1-  847     	SUBAR	_R_AIN7_DATA,W
     003C                           1-  848     _00329_DS_:
     003C 0C03                      1-  849     	BTRSC	STATUS,0
     003D 3rrr                      1-  850     	LGOTO	_00295_DS_
                                    1-  851     	.line	264, "main.c"; 	workStep = 2;
     003E 2102                      1-  852     	MOVIA	0x02
                                    1-  853     	BANKSEL	_workStep
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 00rr                      1-  854     	MOVAR	_workStep
                                    1-  855     	.line	265, "main.c"; 	PORTA |= 0x4C;		//亮4个灯
     0041 214C                      1-  856     	MOVIA	0x4c
     0042 11rr                      1-  857     	IORAR	_PORTA,F
                                    1-  858     	.line	266, "main.c"; 	PORTB |= 0x03;
     0043 2103                      1-  859     	MOVIA	0x03
     0044 11rr                      1-  860     	IORAR	_PORTB,F
                                    1-  861     	.line	267, "main.c"; 	startFlag = 0;
                                    1-  862     	BANKSEL	_startFlag
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 02rr                      1-  863     	CLRR	_startFlag
                                    1-  864     	.line	268, "main.c"; 	resetbit(PORTB,3);			
     0047 1Drr                      1-  865     	BCR	_PORTB,3
                                    1-  866     	.line	269, "main.c"; 	resetbit(PORTA,7);
     0048 1Frr                      1-  867     	BCR	_PORTA,7
                                    1-  868     	.line	270, "main.c"; 	setbit(PORTA,6);	//打开风扇
     0049 1Brr                      1-  869     	BSR	_PORTA,6
                                    1-  870     	.line	271, "main.c"; 	fullFlag = 0;
                                    1-  871     	BANKSEL	_fullFlag
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 02rr                      1-  872     	CLRR	_fullFlag
     004C 3rrr                      1-  873     	LGOTO	_00297_DS_
                                    1-  874     ;;unsigned compare: left < lit (0x629=1577), size=2
     004D                           1-  875     _00295_DS_:
                                    1-  876     	.line	273, "main.c"; 	else if(R_AIN7_DATA < 1577)		//小于2.45A   亮3个，闪2个
     004D 2106                      1-  877     	MOVIA	0x06
                                    1-  878     	BANKSEL	_R_AIN7_DATA
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 04rr                      1-  879     	SUBAR	(_R_AIN7_DATA + 1),W
     0050 0903                      1-  880     	BTRSS	STATUS,2
     0051 3rrr                      1-  881     	LGOTO	_00330_DS_
     0052 2129                      1-  882     	MOVIA	0x29
     0053 04rr                      1-  883     	SUBAR	_R_AIN7_DATA,W
     0054                           1-  884     _00330_DS_:
     0054 0C03                      1-  885     	BTRSC	STATUS,0
     0055 3rrr                      1-  886     	LGOTO	_00292_DS_
                                    1-  887     	.line	275, "main.c"; 	ledMin = 150;
     0056 2196                      1-  888     	MOVIA	0x96
                                    1-  889     	BANKSEL	_ledMin
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1-  890     	MOVAR	_ledMin
                                    1-  891     ;;unsigned compare: left < lit (0x96=150), size=2
                                    1-  892     	.line	276, "main.c"; 	if(ledCount < ledMin)
     0059 2100                      1-  893     	MOVIA	0x00
                                    1-  894     	BANKSEL	_ledCount
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 04rr                      1-  895     	SUBAR	(_ledCount + 1),W
     005C 0903                      1-  896     	BTRSS	STATUS,2
     005D 3rrr                      1-  897     	LGOTO	_00331_DS_
     005E 2196                      1-  898     	MOVIA	0x96
     005F 04rr                      1-  899     	SUBAR	_ledCount,W
     0060                           1-  900     _00331_DS_:
     0060 0C03                      1-  901     	BTRSC	STATUS,0
     0061 3rrr                      1-  902     	LGOTO	_00276_DS_
                                    1-  903     	.line	277, "main.c"; 	ledCount = ledMin;
     0062 2196                      1-  904     	MOVIA	0x96
                                    1-  905     	BANKSEL	_ledCount
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 00rr                      1-  906     	MOVAR	_ledCount
     0065 02rr                      1-  907     	CLRR	(_ledCount + 1)
     0066                           1-  908     _00276_DS_:
                                    1-  909     	.line	278, "main.c"; 	workStep = 1;
     0066 2101                      1-  910     	MOVIA	0x01
                                    1-  911     	BANKSEL	_workStep
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1-  912     	MOVAR	_workStep
                                    1-  913     	.line	279, "main.c"; 	startFlag = 0;
                                    1-  914     	BANKSEL	_startFlag
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 02rr                      1-  915     	CLRR	_startFlag
                                    1-  916     	.line	280, "main.c"; 	resetbit(PORTB,3);		
     006B 1Drr                      1-  917     	BCR	_PORTB,3
                                    1-  918     	.line	281, "main.c"; 	resetbit(PORTA,7);
     006C 1Frr                      1-  919     	BCR	_PORTA,7
                                    1-  920     	.line	282, "main.c"; 	setbit(PORTA,6);	//打开风扇
     006D 1Brr                      1-  921     	BSR	_PORTA,6
                                    1-  922     	.line	283, "main.c"; 	fullFlag = 0;
                                    1-  923     	BANKSEL	_fullFlag
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 02rr                      1-  924     	CLRR	_fullFlag
     0070 3rrr                      1-  925     	LGOTO	_00297_DS_
                                    1-  926     ;;unsigned compare: left < lit (0x866=2150), size=2
     0071                           1-  927     _00292_DS_:
                                    1-  928     	.line	285, "main.c"; 	else if(R_AIN7_DATA < 2150)		//小于2.48A   亮2个，闪3个
     0071 2108                      1-  929     	MOVIA	0x08
                                    1-  930     	BANKSEL	_R_AIN7_DATA
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 04rr                      1-  931     	SUBAR	(_R_AIN7_DATA + 1),W
     0074 0903                      1-  932     	BTRSS	STATUS,2
     0075 3rrr                      1-  933     	LGOTO	_00332_DS_
     0076 2166                      1-  934     	MOVIA	0x66
     0077 04rr                      1-  935     	SUBAR	_R_AIN7_DATA,W
     0078                           1-  936     _00332_DS_:
     0078 0C03                      1-  937     	BTRSC	STATUS,0
     0079 3rrr                      1-  938     	LGOTO	_00289_DS_
                                    1-  939     	.line	287, "main.c"; 	ledMin = 100;
     007A 2164                      1-  940     	MOVIA	0x64
                                    1-  941     	BANKSEL	_ledMin
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 00rr                      1-  942     	MOVAR	_ledMin
                                    1-  943     ;;unsigned compare: left < lit (0x64=100), size=2
                                    1-  944     	.line	288, "main.c"; 	if(ledCount < ledMin)
     007D 2100                      1-  945     	MOVIA	0x00
                                    1-  946     	BANKSEL	_ledCount
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 04rr                      1-  947     	SUBAR	(_ledCount + 1),W
     0080 0903                      1-  948     	BTRSS	STATUS,2
     0081 3rrr                      1-  949     	LGOTO	_00333_DS_
     0082 2164                      1-  950     	MOVIA	0x64
     0083 04rr                      1-  951     	SUBAR	_ledCount,W
     0084                           1-  952     _00333_DS_:
     0084 0C03                      1-  953     	BTRSC	STATUS,0
     0085 3rrr                      1-  954     	LGOTO	_00278_DS_
                                    1-  955     	.line	289, "main.c"; 	ledCount = ledMin;
     0086 2164                      1-  956     	MOVIA	0x64
                                    1-  957     	BANKSEL	_ledCount
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 00rr                      1-  958     	MOVAR	_ledCount
     0089 02rr                      1-  959     	CLRR	(_ledCount + 1)
     008A                           1-  960     _00278_DS_:
                                    1-  961     	.line	290, "main.c"; 	workStep = 1;
     008A 2101                      1-  962     	MOVIA	0x01
                                    1-  963     	BANKSEL	_workStep
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 00rr                      1-  964     	MOVAR	_workStep
                                    1-  965     	.line	291, "main.c"; 	startFlag = 0;
                                    1-  966     	BANKSEL	_startFlag
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 02rr                      1-  967     	CLRR	_startFlag
                                    1-  968     	.line	292, "main.c"; 	resetbit(PORTB,3);		
     008F 1Drr                      1-  969     	BCR	_PORTB,3
                                    1-  970     	.line	293, "main.c"; 	resetbit(PORTA,7);
     0090 1Frr                      1-  971     	BCR	_PORTA,7
                                    1-  972     	.line	294, "main.c"; 	setbit(PORTA,6);	//打开风扇
     0091 1Brr                      1-  973     	BSR	_PORTA,6
                                    1-  974     	.line	295, "main.c"; 	fullFlag = 0;
                                    1-  975     	BANKSEL	_fullFlag
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 02rr                      1-  976     	CLRR	_fullFlag
     0094 3rrr                      1-  977     	LGOTO	_00297_DS_
                                    1-  978     ;;unsigned compare: left < lit (0xA8F=2703), size=2
     0095                           1-  979     _00289_DS_:
                                    1-  980     	.line	297, "main.c"; 	else if(R_AIN7_DATA < 2703)		//大于62.5V  PB2脚 1.32V   亮1个，闪4个
     0095 210A                      1-  981     	MOVIA	0x0a
                                    1-  982     	BANKSEL	_R_AIN7_DATA
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 04rr                      1-  983     	SUBAR	(_R_AIN7_DATA + 1),W
     0098 0903                      1-  984     	BTRSS	STATUS,2
     0099 3rrr                      1-  985     	LGOTO	_00334_DS_
     009A 218F                      1-  986     	MOVIA	0x8f
     009B 04rr                      1-  987     	SUBAR	_R_AIN7_DATA,W
     009C                           1-  988     _00334_DS_:
     009C 0C03                      1-  989     	BTRSC	STATUS,0
     009D 3rrr                      1-  990     	LGOTO	_00286_DS_
                                    1-  991     	.line	299, "main.c"; 	ledMin = 50;
     009E 2132                      1-  992     	MOVIA	0x32
                                    1-  993     	BANKSEL	_ledMin
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 00rr                      1-  994     	MOVAR	_ledMin
                                    1-  995     ;;unsigned compare: left < lit (0x32=50), size=2
                                    1-  996     	.line	300, "main.c"; 	if(ledCount < ledMin)
     00A1 2100                      1-  997     	MOVIA	0x00
                                    1-  998     	BANKSEL	_ledCount
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 04rr                      1-  999     	SUBAR	(_ledCount + 1),W
     00A4 0903                      1- 1000     	BTRSS	STATUS,2
     00A5 3rrr                      1- 1001     	LGOTO	_00335_DS_
     00A6 2132                      1- 1002     	MOVIA	0x32
     00A7 04rr                      1- 1003     	SUBAR	_ledCount,W
     00A8                           1- 1004     _00335_DS_:
     00A8 0C03                      1- 1005     	BTRSC	STATUS,0
     00A9 3rrr                      1- 1006     	LGOTO	_00280_DS_
                                    1- 1007     	.line	301, "main.c"; 	ledCount = ledMin;
     00AA 2132                      1- 1008     	MOVIA	0x32
                                    1- 1009     	BANKSEL	_ledCount
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 00rr                      1- 1010     	MOVAR	_ledCount
     00AD 02rr                      1- 1011     	CLRR	(_ledCount + 1)
     00AE                           1- 1012     _00280_DS_:
                                    1- 1013     	.line	302, "main.c"; 	workStep = 1;
     00AE 2101                      1- 1014     	MOVIA	0x01
                                    1- 1015     	BANKSEL	_workStep
     00AF rrrr                      3-   71 m1      .banksel ram_address
     00B0 00rr                      1- 1016     	MOVAR	_workStep
                                    1- 1017     	.line	303, "main.c"; 	startFlag = 0;
                                    1- 1018     	BANKSEL	_startFlag
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 02rr                      1- 1019     	CLRR	_startFlag
                                    1- 1020     	.line	304, "main.c"; 	resetbit(PORTB,3);		
     00B3 1Drr                      1- 1021     	BCR	_PORTB,3
                                    1- 1022     	.line	305, "main.c"; 	resetbit(PORTA,7);
     00B4 1Frr                      1- 1023     	BCR	_PORTA,7
                                    1- 1024     	.line	306, "main.c"; 	setbit(PORTA,6);	//打开风扇
     00B5 1Brr                      1- 1025     	BSR	_PORTA,6
                                    1- 1026     	.line	307, "main.c"; 	fullFlag = 0;
                                    1- 1027     	BANKSEL	_fullFlag
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 02rr                      1- 1028     	CLRR	_fullFlag
     00B8 3rrr                      1- 1029     	LGOTO	_00297_DS_
                                    1- 1030     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1031     ;;unsigned compare: left >= lit (0xA90=2704), size=2
     00B9                           1- 1032     _00286_DS_:
                                    1- 1033     	.line	309, "main.c"; 	else if(R_AIN7_DATA > 2703)		//小于62.5V  PB2脚 1.32V   亮0个，闪5个
     00B9 210A                      1- 1034     	MOVIA	0x0a
                                    1- 1035     	BANKSEL	_R_AIN7_DATA
     00BA rrrr                      3-   71 m1      .banksel ram_address
     00BB 04rr                      1- 1036     	SUBAR	(_R_AIN7_DATA + 1),W
     00BC 0903                      1- 1037     	BTRSS	STATUS,2
     00BD 3rrr                      1- 1038     	LGOTO	_00336_DS_
     00BE 2190                      1- 1039     	MOVIA	0x90
     00BF 04rr                      1- 1040     	SUBAR	_R_AIN7_DATA,W
     00C0                           1- 1041     _00336_DS_:
     00C0 0803                      1- 1042     	BTRSS	STATUS,0
     00C1 3rrr                      1- 1043     	LGOTO	_00297_DS_
                                    1- 1044     	.line	311, "main.c"; 	ledMin = 0;
                                    1- 1045     	BANKSEL	_ledMin
     00C2 rrrr                      3-   71 m1      .banksel ram_address
     00C3 02rr                      1- 1046     	CLRR	_ledMin
                                    1- 1047     ;;unsigned compare: left < lit (0x0=0), size=2
                                    1- 1048     	.line	312, "main.c"; 	if(ledCount < ledMin)
     00C4 1C03                      1- 1049     	BCR	STATUS,0
     00C5 0803                      1- 1050     	BTRSS	STATUS,0
     00C6 3rrr                      1- 1051     	LGOTO	_00282_DS_
                                    1- 1052     	.line	313, "main.c"; 	ledCount = ledMin;
                                    1- 1053     	BANKSEL	_ledCount
     00C7 rrrr                      3-   71 m1      .banksel ram_address
     00C8 02rr                      1- 1054     	CLRR	_ledCount
     00C9 02rr                      1- 1055     	CLRR	(_ledCount + 1)
     00CA                           1- 1056     _00282_DS_:
                                    1- 1057     	.line	314, "main.c"; 	workStep = 1;
     00CA 2101                      1- 1058     	MOVIA	0x01
                                    1- 1059     	BANKSEL	_workStep
     00CB rrrr                      3-   71 m1      .banksel ram_address
     00CC 00rr                      1- 1060     	MOVAR	_workStep
                                    1- 1061     	.line	315, "main.c"; 	startFlag = 0;
                                    1- 1062     	BANKSEL	_startFlag
     00CD rrrr                      3-   71 m1      .banksel ram_address
     00CE 02rr                      1- 1063     	CLRR	_startFlag
                                    1- 1064     	.line	316, "main.c"; 	resetbit(PORTB,3);		
     00CF 1Drr                      1- 1065     	BCR	_PORTB,3
                                    1- 1066     	.line	317, "main.c"; 	resetbit(PORTA,7);
     00D0 1Frr                      1- 1067     	BCR	_PORTA,7
                                    1- 1068     	.line	318, "main.c"; 	setbit(PORTA,6);	//打开风扇
     00D1 1Brr                      1- 1069     	BSR	_PORTA,6
                                    1- 1070     	.line	319, "main.c"; 	fullFlag = 0;
                                    1- 1071     	BANKSEL	_fullFlag
     00D2 rrrr                      3-   71 m1      .banksel ram_address
     00D3 02rr                      1- 1072     	CLRR	_fullFlag
     00D4                           1- 1073     _00297_DS_:
                                    1- 1074     	.line	322, "main.c"; 	}
                                    1- 1075     	RETURN	
     00D4 0010                      3-   26 m1      ret
                                    1- 1076     ; exit point of _checkV
                                    1- 1078     ;***
                                    1- 1079     ;  pBlock Stats: dbName = C
                                    1- 1080     ;***
                                    1- 1081     ;has an exit
                                    1- 1082     ;functions called:
                                    1- 1083     ;   _F_AIN0_Convert
                                    1- 1084     ;   _checkV
                                    1- 1085     ;   _F_AIN0_Convert
                                    1- 1086     ;   _checkV
                                    1- 1087     ;4 compiler assigned registers:
                                    1- 1088     ;   r0x1029
                                    1- 1089     ;   r0x102A
                                    1- 1090     ;   r0x102B
                                    1- 1091     ;   r0x102C
                                    1- 1092     ;; Starting pCode block
                                    1- 1093     .segment "code"; module=main, function=_checkA
     0000                           1- 1095     _checkA:
                                    1- 1096     ; 2 exit points
                                    1- 1097     	.line	208, "main.c"; 	PACON = C_PA0_AIN0;
     0000 2101                      1- 1098     	MOVIA	0x01
     0001 00rr                      1- 1099     	MOVAR	_PACON
                                    1- 1100     	.line	209, "main.c"; 	R_AIN0_DATA=R_AIN0_DATA_LB=0x00;
                                    1- 1101     	BANKSEL	_R_AIN0_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1102     	CLRR	_R_AIN0_DATA_LB
                                    1- 1103     	BANKSEL	_R_AIN0_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1104     	CLRR	_R_AIN0_DATA
     0006 02rr                      1- 1105     	CLRR	(_R_AIN0_DATA + 1)
                                    1- 1106     	.line	210, "main.c"; 	F_AIN0_Convert(12);					// execute AIN0 ADC converting 8 times
     0007 210C                      1- 1107     	MOVIA	0x0c
     0008 2rrr                      1- 1108     	LCALL	_F_AIN0_Convert
                                    1- 1109     	.line	211, "main.c"; 	R_AIN0_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1110     	BANKSEL	_R_AIN0_DATA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 15rr                      1- 1111     	SWAPR	(_R_AIN0_DATA + 1),W
     000B 22F0                      1- 1112     	ANDIA	0xf0
     000C 00rr                      1- 1113     	MOVAR	(_R_AIN0_DATA + 1)
     000D 15rr                      1- 1114     	SWAPR	_R_AIN0_DATA,W
     000E 00rr                      1- 1115     	MOVAR	_R_AIN0_DATA
     000F 220F                      1- 1116     	ANDIA	0x0f
     0010 11rr                      1- 1117     	IORAR	(_R_AIN0_DATA + 1),F
     0011 12rr                      1- 1118     	XORAR	_R_AIN0_DATA,F
                                    1- 1119     	.line	212, "main.c"; 	R_AIN0_DATA_LB &= 0xF0;				// Only get Bit7~4
     0012 21F0                      1- 1120     	MOVIA	0xf0
                                    1- 1121     	BANKSEL	_R_AIN0_DATA_LB
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 10rr                      1- 1122     	ANDAR	_R_AIN0_DATA_LB,F
                                    1- 1123     	.line	213, "main.c"; 	R_AIN0_DATA += R_AIN0_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0015 01rr                      1- 1124     	MOVR	_R_AIN0_DATA_LB,W
                                    1- 1125     	BANKSEL	r0x102B
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1126     	MOVAR	r0x102B
                                    1- 1127     ;;1	MOVAR	r0x1029
                                    1- 1128     ;;1	CLRR	r0x102A
                                    1- 1129     ;;99	MOVR	r0x1029,W
     0018 2100                      1- 1130     	MOVIA	0x00
                                    1- 1131     	BANKSEL	r0x102C
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 1132     	MOVAR	r0x102C
                                    1- 1133     	BANKSEL	r0x102B
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 1134     	MOVR	r0x102B,W
                                    1- 1135     	BANKSEL	_R_AIN0_DATA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 03rr                      1- 1136     	ADDAR	_R_AIN0_DATA,F
                                    1- 1137     	BANKSEL	r0x102C
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 1138     	MOVR	r0x102C,W
     0021 0C03                      1- 1139     	BTRSC	STATUS,0
     0022 05rr                      1- 1140     	INCR	r0x102C,W
     0023 0D03                      1- 1141     	BTRSC	STATUS,2
     0024 3rrr                      1- 1142     	LGOTO	_00005_DS_
                                    1- 1143     	BANKSEL	_R_AIN0_DATA
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 03rr                      1- 1144     	ADDAR	(_R_AIN0_DATA + 1),F
                                    1- 1145     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0027                           1- 1146     _00005_DS_:
                                    1- 1147     	.line	214, "main.c"; 	R_AIN0_DATA >>=3;					// R_AIN0_DATA divided 8
     0027 1C03                      1- 1148     	BCR	STATUS,0
                                    1- 1149     	BANKSEL	_R_AIN0_DATA
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 13rr                      1- 1150     	RRR	(_R_AIN0_DATA + 1),F
     002A 13rr                      1- 1151     	RRR	_R_AIN0_DATA,F
                                    1- 1152     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002B 1C03                      1- 1153     	BCR	STATUS,0
     002C 13rr                      1- 1154     	RRR	(_R_AIN0_DATA + 1),F
     002D 13rr                      1- 1155     	RRR	_R_AIN0_DATA,F
                                    1- 1156     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002E 1C03                      1- 1157     	BCR	STATUS,0
     002F 13rr                      1- 1158     	RRR	(_R_AIN0_DATA + 1),F
     0030 13rr                      1- 1159     	RRR	_R_AIN0_DATA,F
                                    1- 1160     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1161     ;;unsigned compare: left >= lit (0x15=21), size=2
                                    1- 1162     	.line	215, "main.c"; 	if(R_AIN0_DATA <= 20)				//未充电
     0031 2100                      1- 1163     	MOVIA	0x00
     0032 04rr                      1- 1164     	SUBAR	(_R_AIN0_DATA + 1),W
     0033 0903                      1- 1165     	BTRSS	STATUS,2
     0034 3rrr                      1- 1166     	LGOTO	_00267_DS_
     0035 2115                      1- 1167     	MOVIA	0x15
     0036 04rr                      1- 1168     	SUBAR	_R_AIN0_DATA,W
     0037                           1- 1169     _00267_DS_:
     0037 0C03                      1- 1170     	BTRSC	STATUS,0
     0038 3rrr                      1- 1171     	LGOTO	_00251_DS_
                                    1- 1172     	.line	218, "main.c"; 	startFlag = 0;
                                    1- 1173     	BANKSEL	_startFlag
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1- 1174     	CLRR	_startFlag
                                    1- 1175     	.line	221, "main.c"; 	PORTA |= 0x5C;			//灯全亮
     003B 215C                      1- 1176     	MOVIA	0x5c
     003C 11rr                      1- 1177     	IORAR	_PORTA,F
                                    1- 1178     	.line	222, "main.c"; 	PORTB |= 0x03;
     003D 2103                      1- 1179     	MOVIA	0x03
     003E 11rr                      1- 1180     	IORAR	_PORTB,F
                                    1- 1181     	.line	223, "main.c"; 	resetbit(PORTA,6);	//关闭风扇
     003F 1Frr                      1- 1182     	BCR	_PORTA,6
     0040 3rrr                      1- 1183     	LGOTO	_00253_DS_
                                    1- 1184     ;;unsigned compare: left < lit (0x7B=123), size=2
     0041                           1- 1185     _00251_DS_:
                                    1- 1186     	.line	225, "main.c"; 	else if(R_AIN0_DATA < 123)		//小于0.6A
     0041 2100                      1- 1187     	MOVIA	0x00
                                    1- 1188     	BANKSEL	_R_AIN0_DATA
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 04rr                      1- 1189     	SUBAR	(_R_AIN0_DATA + 1),W
     0044 0903                      1- 1190     	BTRSS	STATUS,2
     0045 3rrr                      1- 1191     	LGOTO	_00268_DS_
     0046 217B                      1- 1192     	MOVIA	0x7b
     0047 04rr                      1- 1193     	SUBAR	_R_AIN0_DATA,W
     0048                           1- 1194     _00268_DS_:
     0048 0C03                      1- 1195     	BTRSC	STATUS,0
     0049 3rrr                      1- 1196     	LGOTO	_00248_DS_
                                    1- 1197     	.line	227, "main.c"; 	if(fullFlag)
                                    1- 1198     	BANKSEL	_fullFlag
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 01rr                      1- 1199     	MOVR	_fullFlag,W
     004C 0903                      1- 1200     	BTRSS	STATUS,2
                                    1- 1201     	.line	228, "main.c"; 	return;
     004D 3rrr                      1- 1202     	LGOTO	_00253_DS_
                                    1- 1203     	.line	229, "main.c"; 	workStep = 3;
     004E 2103                      1- 1204     	MOVIA	0x03
                                    1- 1205     	BANKSEL	_workStep
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1- 1206     	MOVAR	_workStep
                                    1- 1207     	.line	230, "main.c"; 	setbit(PORTB,3);		//5脚高电平，降压涓充	
     0051 19rr                      1- 1208     	BSR	_PORTB,3
                                    1- 1209     	.line	231, "main.c"; 	resetbit(PORTA,7);
     0052 1Frr                      1- 1210     	BCR	_PORTA,7
                                    1- 1211     	.line	232, "main.c"; 	PORTA |= 0x5C;			//灯全亮
     0053 215C                      1- 1212     	MOVIA	0x5c
     0054 11rr                      1- 1213     	IORAR	_PORTA,F
                                    1- 1214     	.line	233, "main.c"; 	PORTB |= 0x03;
     0055 2103                      1- 1215     	MOVIA	0x03
     0056 11rr                      1- 1216     	IORAR	_PORTB,F
                                    1- 1217     	.line	234, "main.c"; 	setbit(PORTA,6);	//打开风扇
     0057 1Brr                      1- 1218     	BSR	_PORTA,6
                                    1- 1219     	.line	235, "main.c"; 	if(startFlag == 0)
                                    1- 1220     	BANKSEL	_startFlag
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 01rr                      1- 1221     	MOVR	_startFlag,W
     005A 0903                      1- 1222     	BTRSS	STATUS,2
     005B 3rrr                      1- 1223     	LGOTO	_00253_DS_
                                    1- 1224     	.line	237, "main.c"; 	startFlag = 1;
     005C 2101                      1- 1225     	MOVIA	0x01
     005D 00rr                      1- 1226     	MOVAR	_startFlag
                                    1- 1227     	.line	238, "main.c"; 	sleepCount = 0;
                                    1- 1228     	BANKSEL	_sleepCount
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 02rr                      1- 1229     	CLRR	_sleepCount
     0060 02rr                      1- 1230     	CLRR	(_sleepCount + 1)
     0061 3rrr                      1- 1231     	LGOTO	_00253_DS_
     0062                           1- 1232     _00248_DS_:
                                    1- 1233     	.line	243, "main.c"; 	fullFlag = 0;
                                    1- 1234     	BANKSEL	_fullFlag
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 02rr                      1- 1235     	CLRR	_fullFlag
                                    1- 1236     	.line	244, "main.c"; 	checkV();
     0064 2rrr                      1- 1237     	LCALL	_checkV
     0065                           1- 1238     _00253_DS_:
                                    1- 1239     	.line	247, "main.c"; 	}
                                    1- 1240     	RETURN	
     0065 0010                      3-   26 m1      ret
                                    1- 1241     ; exit point of _checkA
                                    1- 1243     ;***
                                    1- 1244     ;  pBlock Stats: dbName = C
                                    1- 1245     ;***
                                    1- 1246     ;has an exit
                                    1- 1247     ;functions called:
                                    1- 1248     ;   _delay
                                    1- 1249     ;   _delay
                                    1- 1250     ;1 compiler assigned register :
                                    1- 1251     ;   STK00
                                    1- 1252     ;; Starting pCode block
                                    1- 1253     .segment "code"; module=main, function=_initAD
     0000                           1- 1255     _initAD:
                                    1- 1256     ; 2 exit points
                                    1- 1257     	.line	184, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA0 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1258     	MOVIA	0x80
     0001 00rr                      1- 1259     	MOVAR	_ADMD
                                    1- 1260     	.line	187, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 02rr                      1- 1261     	CLRR	_ADVREFH
                                    1- 1262     	.line	194, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1263     	MOVIA	0x10
     0004 00rr                      1- 1264     	MOVAR	_ADR
                                    1- 1265     	.line	196, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1266     	MOVIA	0x03
     0006 00rr                      1- 1267     	MOVAR	_ADCR
                                    1- 1268     	.line	198, "main.c"; 	PACON = C_PB2_AIN7 ;						// 
     0007 2180                      1- 1269     	MOVIA	0x80
     0008 00rr                      1- 1270     	MOVAR	_PACON
                                    1- 1271     	.line	199, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 1272     	BSR	_ADMDbits,4
                                    1- 1273     	.line	200, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 1274     	MOVIA	0x64
     000B 00rr                      1- 1275     	MOVAR	STK00
     000C 2100                      1- 1276     	MOVIA	0x00
     000D 2rrr                      1- 1277     	LCALL	_delay
                                    1- 1278     	.line	203, "main.c"; 	}
                                    1- 1279     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1280     ; exit point of _initAD
                                    1- 1282     ;***
                                    1- 1283     ;  pBlock Stats: dbName = C
                                    1- 1284     ;***
                                    1- 1285     ;has an exit
                                    1- 1286     ;; Starting pCode block
                                    1- 1287     .segment "code"; module=main, function=_ledCon2
     0000                           1- 1289     _ledCon2:
                                    1- 1290     ; 2 exit points
                                    1- 1291     	.line	164, "main.c"; 	ledLock = 1;		//锁定
     0000 2101                      1- 1292     	MOVIA	0x01
                                    1- 1293     	BANKSEL	_ledLock
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1294     	MOVAR	_ledLock
                                    1- 1295     ;;unsigned compare: left < lit (0x32=50), size=2
                                    1- 1296     	.line	165, "main.c"; 	if(ledCount < 50)
     0003 2100                      1- 1297     	MOVIA	0x00
                                    1- 1298     	BANKSEL	_ledCount
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 04rr                      1- 1299     	SUBAR	(_ledCount + 1),W
     0006 0903                      1- 1300     	BTRSS	STATUS,2
     0007 3rrr                      1- 1301     	LGOTO	_00232_DS_
     0008 2132                      1- 1302     	MOVIA	0x32
     0009 04rr                      1- 1303     	SUBAR	_ledCount,W
     000A                           1- 1304     _00232_DS_:
     000A 0C03                      1- 1305     	BTRSC	STATUS,0
     000B 3rrr                      1- 1306     	LGOTO	_00219_DS_
                                    1- 1307     	.line	167, "main.c"; 	setbit(PORTA,4);
     000C 1Arr                      1- 1308     	BSR	_PORTA,4
     000D 3rrr                      1- 1309     	LGOTO	_00221_DS_
                                    1- 1310     ;;unsigned compare: left < lit (0x64=100), size=2
     000E                           1- 1311     _00219_DS_:
                                    1- 1312     	.line	169, "main.c"; 	else if(ledCount < 100)
     000E 2100                      1- 1313     	MOVIA	0x00
                                    1- 1314     	BANKSEL	_ledCount
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1- 1315     	SUBAR	(_ledCount + 1),W
     0011 0903                      1- 1316     	BTRSS	STATUS,2
     0012 3rrr                      1- 1317     	LGOTO	_00233_DS_
     0013 2164                      1- 1318     	MOVIA	0x64
     0014 04rr                      1- 1319     	SUBAR	_ledCount,W
     0015                           1- 1320     _00233_DS_:
     0015 0C03                      1- 1321     	BTRSC	STATUS,0
     0016 3rrr                      1- 1322     	LGOTO	_00216_DS_
                                    1- 1323     	.line	171, "main.c"; 	resetbit(PORTA,4);
     0017 1Err                      1- 1324     	BCR	_PORTA,4
     0018 3rrr                      1- 1325     	LGOTO	_00221_DS_
                                    1- 1326     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1327     ;;unsigned compare: left >= lit (0x67=103), size=2
     0019                           1- 1328     _00216_DS_:
                                    1- 1329     	.line	175, "main.c"; 	if(ledCount > 102)
     0019 2100                      1- 1330     	MOVIA	0x00
                                    1- 1331     	BANKSEL	_ledCount
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 04rr                      1- 1332     	SUBAR	(_ledCount + 1),W
     001C 0903                      1- 1333     	BTRSS	STATUS,2
     001D 3rrr                      1- 1334     	LGOTO	_00234_DS_
     001E 2167                      1- 1335     	MOVIA	0x67
     001F 04rr                      1- 1336     	SUBAR	_ledCount,W
     0020                           1- 1337     _00234_DS_:
     0020 0803                      1- 1338     	BTRSS	STATUS,0
     0021 3rrr                      1- 1339     	LGOTO	_00214_DS_
                                    1- 1340     	.line	176, "main.c"; 	ledCount = 0;
                                    1- 1341     	BANKSEL	_ledCount
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 02rr                      1- 1342     	CLRR	_ledCount
     0024 02rr                      1- 1343     	CLRR	(_ledCount + 1)
     0025                           1- 1344     _00214_DS_:
                                    1- 1345     	.line	177, "main.c"; 	ledLock = 0;		//解锁
                                    1- 1346     	BANKSEL	_ledLock
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 1347     	CLRR	_ledLock
     0027                           1- 1348     _00221_DS_:
                                    1- 1349     	.line	179, "main.c"; 	}
                                    1- 1350     	RETURN	
     0027 0010                      3-   26 m1      ret
                                    1- 1351     ; exit point of _ledCon2
                                    1- 1353     ;***
                                    1- 1354     ;  pBlock Stats: dbName = C
                                    1- 1355     ;***
                                    1- 1356     ;has an exit
                                    1- 1357     ;; Starting pCode block
                                    1- 1358     .segment "code"; module=main, function=_ledCon
     0000                           1- 1360     _ledCon:
                                    1- 1361     ; 2 exit points
                                    1- 1362     	.line	146, "main.c"; 	ledLock = 1;		//锁定
     0000 2101                      1- 1363     	MOVIA	0x01
                                    1- 1364     	BANKSEL	_ledLock
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1365     	MOVAR	_ledLock
                                    1- 1366     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1367     ;;unsigned compare: left >= lit (0x33=51), size=2
                                    1- 1368     	.line	147, "main.c"; 	ledCount > 50 ? (setbit(PORTB,1)) : (resetbit(PORTB,1));
     0003 2100                      1- 1369     	MOVIA	0x00
                                    1- 1370     	BANKSEL	_ledCount
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 04rr                      1- 1371     	SUBAR	(_ledCount + 1),W
     0006 0903                      1- 1372     	BTRSS	STATUS,2
     0007 3rrr                      1- 1373     	LGOTO	_00202_DS_
     0008 2133                      1- 1374     	MOVIA	0x33
     0009 04rr                      1- 1375     	SUBAR	_ledCount,W
     000A                           1- 1376     _00202_DS_:
     000A 0803                      1- 1377     	BTRSS	STATUS,0
     000B 3rrr                      1- 1378     	LGOTO	_00171_DS_
     000C 18rr                      1- 1379     	BSR	_PORTB,1
     000D 3rrr                      1- 1380     	LGOTO	_00172_DS_
     000E                           1- 1381     _00171_DS_:
     000E 1Crr                      1- 1382     	BCR	_PORTB,1
                                    1- 1383     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1384     ;;unsigned compare: left >= lit (0x65=101), size=2
     000F                           1- 1385     _00172_DS_:
                                    1- 1386     	.line	148, "main.c"; 	ledCount > 100 ? (setbit(PORTB,0)) : (resetbit(PORTB,0));
     000F 2100                      1- 1387     	MOVIA	0x00
                                    1- 1388     	BANKSEL	_ledCount
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1389     	SUBAR	(_ledCount + 1),W
     0012 0903                      1- 1390     	BTRSS	STATUS,2
     0013 3rrr                      1- 1391     	LGOTO	_00203_DS_
     0014 2165                      1- 1392     	MOVIA	0x65
     0015 04rr                      1- 1393     	SUBAR	_ledCount,W
     0016                           1- 1394     _00203_DS_:
     0016 0803                      1- 1395     	BTRSS	STATUS,0
     0017 3rrr                      1- 1396     	LGOTO	_00173_DS_
     0018 18rr                      1- 1397     	BSR	_PORTB,0
     0019 3rrr                      1- 1398     	LGOTO	_00174_DS_
     001A                           1- 1399     _00173_DS_:
     001A 1Crr                      1- 1400     	BCR	_PORTB,0
                                    1- 1401     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1402     ;;unsigned compare: left >= lit (0x97=151), size=2
     001B                           1- 1403     _00174_DS_:
                                    1- 1404     	.line	149, "main.c"; 	ledCount > 150 ? (setbit(PORTA,2)) : (resetbit(PORTA,2));
     001B 2100                      1- 1405     	MOVIA	0x00
                                    1- 1406     	BANKSEL	_ledCount
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 04rr                      1- 1407     	SUBAR	(_ledCount + 1),W
     001E 0903                      1- 1408     	BTRSS	STATUS,2
     001F 3rrr                      1- 1409     	LGOTO	_00204_DS_
     0020 2197                      1- 1410     	MOVIA	0x97
     0021 04rr                      1- 1411     	SUBAR	_ledCount,W
     0022                           1- 1412     _00204_DS_:
     0022 0803                      1- 1413     	BTRSS	STATUS,0
     0023 3rrr                      1- 1414     	LGOTO	_00175_DS_
     0024 19rr                      1- 1415     	BSR	_PORTA,2
     0025 3rrr                      1- 1416     	LGOTO	_00176_DS_
     0026                           1- 1417     _00175_DS_:
     0026 1Drr                      1- 1418     	BCR	_PORTA,2
                                    1- 1419     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1420     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0027                           1- 1421     _00176_DS_:
                                    1- 1422     	.line	150, "main.c"; 	ledCount > 200 ? (setbit(PORTA,3)) : (resetbit(PORTA,3));
     0027 2100                      1- 1423     	MOVIA	0x00
                                    1- 1424     	BANKSEL	_ledCount
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 04rr                      1- 1425     	SUBAR	(_ledCount + 1),W
     002A 0903                      1- 1426     	BTRSS	STATUS,2
     002B 3rrr                      1- 1427     	LGOTO	_00205_DS_
     002C 21C9                      1- 1428     	MOVIA	0xc9
     002D 04rr                      1- 1429     	SUBAR	_ledCount,W
     002E                           1- 1430     _00205_DS_:
     002E 0803                      1- 1431     	BTRSS	STATUS,0
     002F 3rrr                      1- 1432     	LGOTO	_00177_DS_
     0030 19rr                      1- 1433     	BSR	_PORTA,3
     0031 3rrr                      1- 1434     	LGOTO	_00178_DS_
     0032                           1- 1435     _00177_DS_:
     0032 1Drr                      1- 1436     	BCR	_PORTA,3
                                    1- 1437     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1438     ;;unsigned compare: left >= lit (0xFB=251), size=2
     0033                           1- 1439     _00178_DS_:
                                    1- 1440     	.line	151, "main.c"; 	ledCount > 250 ? (setbit(PORTA,4)) : (resetbit(PORTA,4));
     0033 2100                      1- 1441     	MOVIA	0x00
                                    1- 1442     	BANKSEL	_ledCount
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 04rr                      1- 1443     	SUBAR	(_ledCount + 1),W
     0036 0903                      1- 1444     	BTRSS	STATUS,2
     0037 3rrr                      1- 1445     	LGOTO	_00206_DS_
     0038 21FB                      1- 1446     	MOVIA	0xfb
     0039 04rr                      1- 1447     	SUBAR	_ledCount,W
     003A                           1- 1448     _00206_DS_:
     003A 0803                      1- 1449     	BTRSS	STATUS,0
     003B 3rrr                      1- 1450     	LGOTO	_00179_DS_
     003C 1Arr                      1- 1451     	BSR	_PORTA,4
     003D 3rrr                      1- 1452     	LGOTO	_00180_DS_
     003E                           1- 1453     _00179_DS_:
     003E 1Err                      1- 1454     	BCR	_PORTA,4
                                    1- 1455     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1456     ;;unsigned compare: left >= lit (0x12D=301), size=2
     003F                           1- 1457     _00180_DS_:
                                    1- 1458     	.line	152, "main.c"; 	if(ledCount > 300)
     003F 2101                      1- 1459     	MOVIA	0x01
                                    1- 1460     	BANKSEL	_ledCount
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 04rr                      1- 1461     	SUBAR	(_ledCount + 1),W
     0042 0903                      1- 1462     	BTRSS	STATUS,2
     0043 3rrr                      1- 1463     	LGOTO	_00207_DS_
     0044 212D                      1- 1464     	MOVIA	0x2d
     0045 04rr                      1- 1465     	SUBAR	_ledCount,W
     0046                           1- 1466     _00207_DS_:
     0046 0803                      1- 1467     	BTRSS	STATUS,0
     0047 3rrr                      1- 1468     	LGOTO	_00169_DS_
                                    1- 1469     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1470     ;;unsigned compare: left >= lit (0x137=311), size=2
                                    1- 1471     	.line	154, "main.c"; 	if(ledCount > 310)
     0048 2101                      1- 1472     	MOVIA	0x01
                                    1- 1473     	BANKSEL	_ledCount
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 04rr                      1- 1474     	SUBAR	(_ledCount + 1),W
     004B 0903                      1- 1475     	BTRSS	STATUS,2
     004C 3rrr                      1- 1476     	LGOTO	_00208_DS_
     004D 2137                      1- 1477     	MOVIA	0x37
     004E 04rr                      1- 1478     	SUBAR	_ledCount,W
     004F                           1- 1479     _00208_DS_:
     004F 0803                      1- 1480     	BTRSS	STATUS,0
     0050 3rrr                      1- 1481     	LGOTO	_00166_DS_
                                    1- 1482     	.line	155, "main.c"; 	ledCount = ledMin;
                                    1- 1483     	BANKSEL	_ledMin
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 01rr                      1- 1484     	MOVR	_ledMin,W
                                    1- 1485     	BANKSEL	_ledCount
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1- 1486     	MOVAR	_ledCount
     0055 02rr                      1- 1487     	CLRR	(_ledCount + 1)
     0056                           1- 1488     _00166_DS_:
                                    1- 1489     	.line	156, "main.c"; 	ledLock = 0;		//解锁
                                    1- 1490     	BANKSEL	_ledLock
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 02rr                      1- 1491     	CLRR	_ledLock
     0058                           1- 1492     _00169_DS_:
                                    1- 1493     	.line	158, "main.c"; 	}
                                    1- 1494     	RETURN	
     0058 0010                      3-   26 m1      ret
                                    1- 1495     ; exit point of _ledCon
                                    1- 1497     ;***
                                    1- 1498     ;  pBlock Stats: dbName = C
                                    1- 1499     ;***
                                    1- 1500     ;has an exit
                                    1- 1501     ;; Starting pCode block
                                    1- 1502     .segment "code"; module=main, function=_initTimer0
     0000                           1- 1504     _initTimer0:
                                    1- 1505     ; 2 exit points
                                    1- 1506     	.line	117, "main.c"; 	PORTA = 0x23;
     0000 2123                      1- 1507     	MOVIA	0x23
     0001 00rr                      1- 1508     	MOVAR	_PORTA
                                    1- 1509     	.line	118, "main.c"; 	PORTB = 0xF8;
     0002 21F8                      1- 1510     	MOVIA	0xf8
     0003 00rr                      1- 1511     	MOVAR	_PORTB
                                    1- 1512     	.line	119, "main.c"; 	BPHCON = 0xFE;
     0004 21FE                      1- 1513     	MOVIA	0xfe
     0005 00rr                      1- 1514     	MOVAR	_BPHCON
                                    1- 1515     	.line	121, "main.c"; 	IOSTA = C_PA0_Input;
     0006 2101                      1- 1516     	MOVIA	0x01
     0007 000r                      1- 1517     	IOST	_IOSTA
                                    1- 1518     	.line	122, "main.c"; 	IOSTB =  C_PB2_Input;	
     0008 2104                      1- 1519     	MOVIA	0x04
     0009 000r                      1- 1520     	IOST	_IOSTB
                                    1- 1521     	.line	123, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     000A 21A8                      1- 1522     	MOVIA	0xa8
     000B 00rr                      1- 1523     	MOVAR	_PCON
                                    1- 1524     	.line	124, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 1525     	MOVIA	0x01
     000D 00rr                      1- 1526     	MOVAR	_INTE
                                    1- 1527     	.line	125, "main.c"; 	INTF = 0;
     000E 02rr                      1- 1528     	CLRR	_INTF
                                    1- 1529     	.line	128, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1- 1530     	CLRA	
     0010 000r                      1- 1531     	IOST	_PCON1
                                    1- 1532     	.line	130, "main.c"; 	TMR0 = 55;
     0011 2137                      1- 1533     	MOVIA	0x37
     0012 00rr                      1- 1534     	MOVAR	_TMR0
                                    1- 1535     	.line	131, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0013 0200                      1- 1536     	CLRA	
     0014 0003                      1- 1537     	T0MD	
                                    1- 1538     	.line	133, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0015 2111                      1- 1539     	MOVIA	0x11
     0016 000r                      1- 1540     	IOST	_PCON1
                                    1- 1541     	.line	135, "main.c"; 	PORTA &= 0x23;
     0017 2123                      1- 1542     	MOVIA	0x23
     0018 10rr                      1- 1543     	ANDAR	_PORTA,F
                                    1- 1544     	.line	136, "main.c"; 	PORTB &= 0xF8;
     0019 21F8                      1- 1545     	MOVIA	0xf8
     001A 10rr                      1- 1546     	ANDAR	_PORTB,F
                                    1- 1547     	.line	137, "main.c"; 	resetbit(PORTB,3);		
     001B 1Drr                      1- 1548     	BCR	_PORTB,3
                                    1- 1549     	.line	138, "main.c"; 	resetbit(PORTA,7);
     001C 1Frr                      1- 1550     	BCR	_PORTA,7
                                    1- 1551     	.line	139, "main.c"; 	resetbit(PORTA,6);	//关闭风扇
     001D 1Frr                      1- 1552     	BCR	_PORTA,6
                                    1- 1553     	.line	140, "main.c"; 	ENI();	
     001E 0004                      1- 1554     	ENI
                                    1- 1555     	.line	142, "main.c"; 	}
                                    1- 1556     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1- 1557     ; exit point of _initTimer0
                                    1- 1559     ;***
                                    1- 1560     ;  pBlock Stats: dbName = C
                                    1- 1561     ;***
                                    1- 1562     ;has an exit
                                    1- 1563     ;functions called:
                                    1- 1564     ;   _ledCon
                                    1- 1565     ;   _ledCon2
                                    1- 1566     ;   _ledCon
                                    1- 1567     ;   _ledCon2
                                    1- 1568     ;; Starting pCode block
                                    1- 1569     .segment "code"; module=main, function=_workCon
     0000                           1- 1571     _workCon:
                                    1- 1572     ; 2 exit points
                                    1- 1573     	.line	85, "main.c"; 	if(workStep == 1)
                                    1- 1574     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1575     	MOVR	_workStep,W
     0002 2401                      1- 1576     	XORIA	0x01
     0003 0903                      1- 1577     	BTRSS	STATUS,2
     0004 3rrr                      1- 1578     	LGOTO	_00137_DS_
                                    1- 1579     	.line	86, "main.c"; 	ledCon();
     0005 2rrr                      1- 1580     	LCALL	_ledCon
     0006 3rrr                      1- 1581     	LGOTO	_00139_DS_
     0007                           1- 1582     _00137_DS_:
                                    1- 1583     	.line	87, "main.c"; 	else if(workStep == 2)
                                    1- 1584     	BANKSEL	_workStep
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1- 1585     	MOVR	_workStep,W
     0009 2402                      1- 1586     	XORIA	0x02
     000A 0903                      1- 1587     	BTRSS	STATUS,2
     000B 3rrr                      1- 1588     	LGOTO	_00134_DS_
                                    1- 1589     	.line	88, "main.c"; 	ledCon2();
     000C 2rrr                      1- 1590     	LCALL	_ledCon2
     000D 3rrr                      1- 1591     	LGOTO	_00139_DS_
     000E                           1- 1592     _00134_DS_:
                                    1- 1593     	.line	89, "main.c"; 	else if(workStep == 0)
                                    1- 1594     	BANKSEL	_workStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1595     	MOVR	_workStep,W
     0010 0903                      1- 1596     	BTRSS	STATUS,2
     0011 3rrr                      1- 1597     	LGOTO	_00131_DS_
                                    1- 1598     	.line	91, "main.c"; 	PORTA &= 0xA3;
     0012 21A3                      1- 1599     	MOVIA	0xa3
     0013 10rr                      1- 1600     	ANDAR	_PORTA,F
                                    1- 1601     	.line	92, "main.c"; 	PORTB &= 0xFC;
     0014 21FC                      1- 1602     	MOVIA	0xfc
     0015 10rr                      1- 1603     	ANDAR	_PORTB,F
     0016 3rrr                      1- 1604     	LGOTO	_00139_DS_
     0017                           1- 1605     _00131_DS_:
                                    1- 1606     	.line	94, "main.c"; 	else if(workStep == 3 && sleepCount > 10800)
                                    1- 1607     	BANKSEL	_workStep
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1- 1608     	MOVR	_workStep,W
     0019 2403                      1- 1609     	XORIA	0x03
     001A 0903                      1- 1610     	BTRSS	STATUS,2
     001B 3rrr                      1- 1611     	LGOTO	_00127_DS_
                                    1- 1612     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1613     ;;unsigned compare: left >= lit (0x2A31=10801), size=2
     001C 212A                      1- 1614     	MOVIA	0x2a
                                    1- 1615     	BANKSEL	_sleepCount
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 04rr                      1- 1616     	SUBAR	(_sleepCount + 1),W
     001F 0903                      1- 1617     	BTRSS	STATUS,2
     0020 3rrr                      1- 1618     	LGOTO	_00156_DS_
     0021 2131                      1- 1619     	MOVIA	0x31
     0022 04rr                      1- 1620     	SUBAR	_sleepCount,W
     0023                           1- 1621     _00156_DS_:
     0023 0803                      1- 1622     	BTRSS	STATUS,0
     0024 3rrr                      1- 1623     	LGOTO	_00127_DS_
                                    1- 1624     	.line	96, "main.c"; 	sleepCount = 0;
                                    1- 1625     	BANKSEL	_sleepCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 1626     	CLRR	_sleepCount
     0027 02rr                      1- 1627     	CLRR	(_sleepCount + 1)
                                    1- 1628     	.line	97, "main.c"; 	workStep = 0;
                                    1- 1629     	BANKSEL	_workStep
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 1630     	CLRR	_workStep
                                    1- 1631     	.line	98, "main.c"; 	resetbit(PORTA,6);		//关闭风扇
     002A 1Frr                      1- 1632     	BCR	_PORTA,6
                                    1- 1633     	.line	99, "main.c"; 	fullFlag = 1;
     002B 2101                      1- 1634     	MOVIA	0x01
                                    1- 1635     	BANKSEL	_fullFlag
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 1636     	MOVAR	_fullFlag
     002E 3rrr                      1- 1637     	LGOTO	_00139_DS_
     002F                           1- 1638     _00127_DS_:
                                    1- 1639     	.line	103, "main.c"; 	fullFlag = 0;
                                    1- 1640     	BANKSEL	_fullFlag
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1- 1641     	CLRR	_fullFlag
                                    1- 1642     	.line	104, "main.c"; 	ledLock = 0;
                                    1- 1643     	BANKSEL	_ledLock
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 02rr                      1- 1644     	CLRR	_ledLock
                                    1- 1645     	.line	105, "main.c"; 	PORTA |= 0x5C;			//灯全亮
     0033 215C                      1- 1646     	MOVIA	0x5c
     0034 11rr                      1- 1647     	IORAR	_PORTA,F
                                    1- 1648     	.line	106, "main.c"; 	PORTB |= 0x03;
     0035 2103                      1- 1649     	MOVIA	0x03
     0036 11rr                      1- 1650     	IORAR	_PORTB,F
     0037                           1- 1651     _00139_DS_:
                                    1- 1652     	.line	112, "main.c"; 	}
                                    1- 1653     	RETURN	
     0037 0010                      3-   26 m1      ret
                                    1- 1654     ; exit point of _workCon
                                    1- 1657     ;	code size estimation:
                                    1- 1658     ;	  622+  138 =   760 instructions ( 1796 byte)
                                    1- 1660     	end
                                    1- 1660     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    0000002E
_00003_DS_              Label    0000002E
_00004_DS_              Label    00000027
_00005_DS_              Label    00000027
_00106_DS_              Label    00000032
_00113_DS_              Label    00000035
_00121_DS_              Label    00000002
_00127_DS_              Label    0000002F
_00131_DS_              Label    00000017
_00134_DS_              Label    0000000E
_00137_DS_              Label    00000007
_00139_DS_              Label    00000037
_00156_DS_              Label    00000023
_00166_DS_              Label    00000056
_00169_DS_              Label    00000058
_00171_DS_              Label    0000000E
_00172_DS_              Label    0000000F
_00173_DS_              Label    0000001A
_00174_DS_              Label    0000001B
_00175_DS_              Label    00000026
_00176_DS_              Label    00000027
_00177_DS_              Label    00000032
_00178_DS_              Label    00000033
_00179_DS_              Label    0000003E
_00180_DS_              Label    0000003F
_00202_DS_              Label    0000000A
_00203_DS_              Label    00000016
_00204_DS_              Label    00000022
_00205_DS_              Label    0000002E
_00206_DS_              Label    0000003A
_00207_DS_              Label    00000046
_00208_DS_              Label    0000004F
_00214_DS_              Label    00000025
_00216_DS_              Label    00000019
_00219_DS_              Label    0000000E
_00221_DS_              Label    00000027
_00232_DS_              Label    0000000A
_00233_DS_              Label    00000015
_00234_DS_              Label    00000020
_00248_DS_              Label    00000062
_00251_DS_              Label    00000041
_00253_DS_              Label    00000065
_00267_DS_              Label    00000037
_00268_DS_              Label    00000048
_00276_DS_              Label    00000066
_00278_DS_              Label    0000008A
_00280_DS_              Label    000000AE
_00282_DS_              Label    000000CA
_00286_DS_              Label    000000B9
_00289_DS_              Label    00000095
_00292_DS_              Label    00000071
_00295_DS_              Label    0000004D
_00297_DS_              Label    000000D4
_00329_DS_              Label    0000003C
_00330_DS_              Label    00000054
_00331_DS_              Label    00000060
_00332_DS_              Label    00000078
_00333_DS_              Label    00000084
_00334_DS_              Label    0000009C
_00335_DS_              Label    000000A8
_00336_DS_              Label    000000C0
_00345_DS_              Label    0000000B
_00347_DS_              Label    00000031
_00356_DS_              Label    0000000B
_00358_DS_              Label    00000031
_00363_DS_              Label    00000000
_00370_DS_              Label    00000009
_00372_DS_              Label    0000001C
_00381_DS_              Label    00000013
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkA                 Label    00000000
_checkV                 Label    00000000
_CMPCR                  Label    00000000
_count1S                Label    00000000
_delay                  Label    00000000
_F_AIN0_Convert         Label    00000000
_F_AIN7_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_FSR                    Label    00000000
_fullFlag               Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initTimer0             Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_ledCon                 Label    00000000
_ledCon2                Label    00000000
_ledCount               Label    00000000
_ledLock                Label    00000000
_ledMin                 Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN0_DATA            Label    00000000
_R_AIN0_DATA_LB         Label    00000000
_R_AIN7_DATA            Label    00000000
_R_AIN7_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepCount             Label    00000000
_startFlag              Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCon                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000046
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
r0x101A                 Label    00000000
r0x101B                 Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1024                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
