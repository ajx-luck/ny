
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_workCon
                                    1-   15     	extern	_checkV
                                    1-   16     	extern	_F_AIN7_Convert
                                    1-   17     	extern	__moduchar
                                    1-   18     	extern	__divuint
                                    1-   19     	extern	_PORTAbits
                                    1-   20     	extern	_PORTBbits
                                    1-   21     	extern	_PCONbits
                                    1-   22     	extern	_BWUCONbits
                                    1-   23     	extern	_ABPLCONbits
                                    1-   24     	extern	_BPHCONbits
                                    1-   25     	extern	_INTEbits
                                    1-   26     	extern	_INTFbits
                                    1-   27     	extern	_ADMDbits
                                    1-   28     	extern	_ADRbits
                                    1-   29     	extern	_ADVREFHbits
                                    1-   30     	extern	_ADCRbits
                                    1-   31     	extern	_AWUCONbits
                                    1-   32     	extern	_PACONbits
                                    1-   33     	extern	_INTEDGbits
                                    1-   34     	extern	_ANAENbits
                                    1-   35     	extern	_RFCbits
                                    1-   36     	extern	_INTE2bits
                                    1-   37     	extern	_INDF
                                    1-   38     	extern	_TMR0
                                    1-   39     	extern	_PCL
                                    1-   40     	extern	_STATUS
                                    1-   41     	extern	_FSR
                                    1-   42     	extern	_PORTA
                                    1-   43     	extern	_PORTB
                                    1-   44     	extern	_PCON
                                    1-   45     	extern	_BWUCON
                                    1-   46     	extern	_PCHBUF
                                    1-   47     	extern	_ABPLCON
                                    1-   48     	extern	_BPHCON
                                    1-   49     	extern	_INTE
                                    1-   50     	extern	_INTF
                                    1-   51     	extern	_ADMD
                                    1-   52     	extern	_ADR
                                    1-   53     	extern	_ADD
                                    1-   54     	extern	_ADVREFH
                                    1-   55     	extern	_ADCR
                                    1-   56     	extern	_AWUCON
                                    1-   57     	extern	_PACON
                                    1-   58     	extern	_INTEDG
                                    1-   59     	extern	_TMRH
                                    1-   60     	extern	_ANAEN
                                    1-   61     	extern	_RFC
                                    1-   62     	extern	_TM3RH
                                    1-   63     	extern	_INTE2
                                    1-   64     	extern	_TMR1
                                    1-   65     	extern	_T1CR1
                                    1-   66     	extern	_T1CR2
                                    1-   67     	extern	_PWM1DUTY
                                    1-   68     	extern	_PS1CV
                                    1-   69     	extern	_BZ1CR
                                    1-   70     	extern	_IRCR
                                    1-   71     	extern	_TBHP
                                    1-   72     	extern	_TBHD
                                    1-   73     	extern	_TMR2
                                    1-   74     	extern	_T2CR1
                                    1-   75     	extern	_T2CR2
                                    1-   76     	extern	_PWM2DUTY
                                    1-   77     	extern	_PS2CV
                                    1-   78     	extern	_BZ2CR
                                    1-   79     	extern	_OSCCR
                                    1-   80     	extern	_TMR3
                                    1-   81     	extern	_T3CR1
                                    1-   82     	extern	_T3CR2
                                    1-   83     	extern	_PWM3DUTY
                                    1-   84     	extern	_PS3CV
                                    1-   85     	extern	_BZ3CR
                                    1-   86     	extern	_IOSTA
                                    1-   87     	extern	_IOSTB
                                    1-   88     	extern	_APHCON
                                    1-   89     	extern	_PS0CV
                                    1-   90     	extern	_BODCON
                                    1-   91     	extern	_CMPCR
                                    1-   92     	extern	_PCON1
                                    1-   93     	extern	_T0MD
                                    1-   94     	extern	___sdcc_saved_fsr
                                    1-   95     	extern	___sdcc_saved_stk00
                                    1-   96     	extern	___sdcc_saved_stk01
                                    1-   97     	extern	__nyc_ny8_startup
                                    1-   98     ;--------------------------------------------------------
                                    1-   99     ; global declarations
                                    1-  100     ;--------------------------------------------------------
                                    1-  101     	extern	_closeChrg
                                    1-  102     	extern	_halfChrg
                                    1-  103     	extern	_fullChrg
                                    1-  104     	extern	_delay
                                    1-  105     	extern	_F_wait_eoc
                                    1-  106     	extern	_F_AIN0_Convert
                                    1-  107     	extern	_checkA
                                    1-  108     	extern	_initAD
                                    1-  109     	extern	_ledCtr
                                    1-  110     	extern	_pwmStart
                                    1-  111     	extern	_ledCon
                                    1-  112     	extern	_initTimer0
                                    1-  113     	extern	_setDuty
                                    1-  114     	extern	_isr
                                    1-  115     	extern	_main
                                    1-  116     	extern	_pwmStop
                                    1-  117     	extern	_keyClick
                                    1-  118     	extern	_intCount
                                    1-  119     	extern	_IntFlag
                                    1-  120     	extern	_ledCount
                                    1-  121     	extern	_R_AIN0_DATA
                                    1-  122     	extern	_R_AIN0_DATA_LB
                                    1-  123     	extern	_R_AIN7_DATA
                                    1-  124     	extern	_R_AIN7_DATA_LB
                                    1-  125     	extern	_workStep
                                    1-  126     	extern	_ledStep
                                    1-  127     	extern	_sleepCount
                                    1-  128     	extern	_chrgCount
                                    1-  129     	extern	_startFlag
                                    1-  130     	extern	_count1S
                                    1-  131     	extern	_fullFlag
                                    1-  132     	extern	_fullCount
                                    1-  133     	extern	_ledMin
                                    1-  134     	extern	_ledMax
                                    1-  135     	extern	_ledLock
                                    1-  136     	extern	_sumA
                                    1-  137     	extern	_avaA
                                    1-  138     	extern	_duty
                                    1-  139     	extern	_addFlag
                                    1-  140     	extern	_dutyFlag
                                    1-  141     	extern	_adTime
                                    1-  142     	extern	_maxDuty
                                    1-  143     	extern	_sumDuty
                                    1-  144     	extern	_dutyTime
                                    1-  145     	extern	_avaDuty
                                    1-  146     	extern	_tempDuty
                                    1-  148     	extern PSAVE
                                    1-  149     	extern SSAVE
                                    1-  150     	extern WSAVE
                                    1-  151     	extern STK12
                                    1-  152     	extern STK11
                                    1-  153     	extern STK10
                                    1-  154     	extern STK09
                                    1-  155     	extern STK08
                                    1-  156     	extern STK07
                                    1-  157     	extern STK06
                                    1-  158     	extern STK05
                                    1-  159     	extern STK04
                                    1-  160     	extern STK03
                                    1-  161     	extern STK02
                                    1-  162     	extern STK01
                                    1-  163     	extern STK00
                                    1-  165     .segment "uninit", 0x20000040
 20000040                           1-  166     PSAVE:
                                    1-  167     	.res 1
 20000041                           1-  168     SSAVE:
                                    1-  169     	.res 1
 20000042                           1-  170     WSAVE:
                                    1-  171     	.res 1
 20000043                           1-  172     STK12:
                                    1-  173     	.res 1
 20000044                           1-  174     STK11:
                                    1-  175     	.res 1
 20000045                           1-  176     STK10:
                                    1-  177     	.res 1
 20000046                           1-  178     STK09:
                                    1-  179     	.res 1
 20000047                           1-  180     STK08:
                                    1-  181     	.res 1
 20000048                           1-  182     STK07:
                                    1-  183     	.res 1
 20000049                           1-  184     STK06:
                                    1-  185     	.res 1
 2000004A                           1-  186     STK05:
                                    1-  187     	.res 1
 2000004B                           1-  188     STK04:
                                    1-  189     	.res 1
 2000004C                           1-  190     STK03:
                                    1-  191     	.res 1
 2000004D                           1-  192     STK02:
                                    1-  193     	.res 1
 2000004E                           1-  194     STK01:
                                    1-  195     	.res 1
 2000004F                           1-  196     STK00:
                                    1-  197     	.res 1
                                    1-  199     ;--------------------------------------------------------
                                    1-  200     ; global definitions
                                    1-  201     ;--------------------------------------------------------
                                    1-  202     .segment "uninit"
     0000                           1-  203     _R_AIN0_DATA:
                                    1-  204     	.res	2
                                    1-  207     .segment "uninit"
     0000                           1-  208     _R_AIN0_DATA_LB:
                                    1-  209     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     _R_AIN7_DATA:
                                    1-  214     	.res	2
                                    1-  217     .segment "uninit"
     0000                           1-  218     _R_AIN7_DATA_LB:
                                    1-  219     	.res	1
                                    1-  222     ;--------------------------------------------------------
                                    1-  223     ; absolute symbol definitions
                                    1-  224     ;--------------------------------------------------------
                                    1-  225     ;--------------------------------------------------------
                                    1-  226     ; compiler-defined variables
                                    1-  227     ;--------------------------------------------------------
                                    1-  228     .segment "uninit"
     0000                           1-  229     r0x103C:
                                    1-  230     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     r0x1038:
                                    1-  233     	.res	1
                                    1-  234     .segment "uninit"
     0000                           1-  235     r0x1039:
                                    1-  236     	.res	1
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x103B:
                                    1-  239     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     r0x1036:
                                    1-  242     	.res	1
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x1037:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x1034:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x1035:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x1032:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x1033:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x102A:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x102B:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x102C:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x102F:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x1027:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x1026:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x1028:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x1029:
                                    1-  281     	.res	1
                                    1-  282     ;--------------------------------------------------------
                                    1-  283     ; initialized data
                                    1-  284     ;--------------------------------------------------------
                                    1-  286     .segment "idata"
     0000                           1-  287     _keyClick:
     0000 0000                      1-  288     	dw	0x00
                                    1-  292     .segment "idata"
     0000                           1-  293     _intCount:
     0000 0000                      1-  294     	dw	0x00
                                    1-  298     .segment "idata"
     0000                           1-  299     _IntFlag:
     0000 0000                      1-  300     	dw	0x00
                                    1-  304     .segment "idata"
     0000                           1-  305     _ledCount:
     0000 0000 0000                 1-  306     	dw	0x00, 0x00
                                    1-  310     .segment "idata"
     0000                           1-  311     _workStep:
     0000 0003                      1-  312     	dw	0x03
                                    1-  316     .segment "idata"
     0000                           1-  317     _ledStep:
     0000 0000                      1-  318     	dw	0x00
                                    1-  322     .segment "idata"
     0000                           1-  323     _sleepCount:
     0000 0000 0000                 1-  324     	dw	0x00, 0x00
                                    1-  328     .segment "idata"
     0000                           1-  329     _chrgCount:
     0000 0000 0000                 1-  330     	dw	0x00, 0x00
                                    1-  334     .segment "idata"
     0000                           1-  335     _startFlag:
     0000 0000                      1-  336     	dw	0x00
                                    1-  340     .segment "idata"
     0000                           1-  341     _count1S:
     0000 0000                      1-  342     	dw	0x00
                                    1-  346     .segment "idata"
     0000                           1-  347     _fullFlag:
     0000 0000                      1-  348     	dw	0x00
                                    1-  352     .segment "idata"
     0000                           1-  353     _fullCount:
     0000 0000                      1-  354     	dw	0x00
                                    1-  358     .segment "idata"
     0000                           1-  359     _ledMin:
     0000 0000                      1-  360     	dw	0x00
                                    1-  364     .segment "idata"
     0000                           1-  365     _ledMax:
     0000 0036 0001                 1-  366     	dw	0x36, 0x01
                                    1-  370     .segment "idata"
     0000                           1-  371     _ledLock:
     0000 0000                      1-  372     	dw	0x00
                                    1-  376     .segment "idata"
     0000                           1-  377     _sumA:
     0000 0000 0000                 1-  378     	dw	0x00, 0x00
                                    1-  382     .segment "idata"
     0000                           1-  383     _avaA:
     0000 0000 0000                 1-  384     	dw	0x00, 0x00
                                    1-  388     .segment "idata"
     0000                           1-  389     _duty:
     0000 0001                      1-  390     	dw	0x01
                                    1-  394     .segment "idata"
     0000                           1-  395     _addFlag:
     0000 0000                      1-  396     	dw	0x00
                                    1-  400     .segment "idata"
     0000                           1-  401     _dutyFlag:
     0000 0000                      1-  402     	dw	0x00
                                    1-  406     .segment "idata"
     0000                           1-  407     _adTime:
     0000 0000                      1-  408     	dw	0x00
                                    1-  412     .segment "idata"
     0000                           1-  413     _maxDuty:
     0000 0028                      1-  414     	dw	0x28
                                    1-  418     .segment "idata"
     0000                           1-  419     _sumDuty:
     0000 0000 0000                 1-  420     	dw	0x00, 0x00
                                    1-  424     .segment "idata"
     0000                           1-  425     _dutyTime:
     0000 0000                      1-  426     	dw	0x00
                                    1-  430     .segment "idata"
     0000                           1-  431     _avaDuty:
     0000 0000                      1-  432     	dw	0x00
                                    1-  436     .segment "idata"
     0000                           1-  437     _tempDuty:
     0000 0000                      1-  438     	dw	0x00
                                    1-  441     ;--------------------------------------------------------
                                    1-  442     ; overlayable items in internal ram 
                                    1-  443     ;--------------------------------------------------------
                                    1-  444     ;	udata_ovr
                                    1-  445     ;--------------------------------------------------------
                                    1-  446     ; reset vector 
                                    1-  447     ;--------------------------------------------------------
                                    1-  448     ORG	0x0000
     0000 3rrr                      1-  449     	LGOTO	__nyc_ny8_startup
                                    1-  450     ;--------------------------------------------------------
                                    1-  451     ; interrupt and initialization code
                                    1-  452     ;--------------------------------------------------------
                                    1-  453     ORG 0x0008
     0008 3rrr                      1-  454     	lgoto	__sdcc_interrupt
                                    1-  456     .segment "code"
     0000                           1-  457     __sdcc_interrupt:
                                    1-  458     ;***
                                    1-  459     ;  pBlock Stats: dbName = I
                                    1-  460     ;***
                                    1-  461     ;2 compiler assigned registers:
                                    1-  462     ;   STK00
                                    1-  463     ;   STK01
                                    1-  464     ;; Starting pCode block
     0000                           1-  465     _isr:
                                    1-  466     ; 0 exit points
                                    1-  467     	.line	62, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  468     	MOVAR	WSAVE
     0001 1503                      1-  469     	SWAPR	STATUS,W
     0002 0283                      1-  470     	CLRR	STATUS
     0003 00rr                      1-  471     	MOVAR	SSAVE
     0004 010A                      1-  472     	MOVR	PCHBUF,W
     0005 028A                      1-  473     	CLRR	PCHBUF
     0006 00rr                      1-  474     	MOVAR	PSAVE
     0007 0104                      1-  475     	MOVR	FSR,W
                                    1-  476     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  477     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  478     	MOVR	STK00,W
                                    1-  479     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  480     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  481     	MOVR	STK01,W
                                    1-  482     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  483     	MOVAR	___sdcc_saved_stk01
                                    1-  484     	.line	64, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  485     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  486     	LGOTO	_00113_DS_
                                    1-  487     	.line	66, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  488     	MOVIA	0x37
     0013 03rr                      1-  489     	ADDAR	_TMR0,F
                                    1-  490     	.line	67, "main.c"; 	intCount++;
                                    1-  491     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  492     	INCR	_intCount,F
                                    1-  493     	.line	68, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  494     	MOVR	_intCount,W
     0017 2464                      1-  495     	XORIA	0x64
     0018 0903                      1-  496     	BTRSS	STATUS,2
     0019 3rrr                      1-  497     	LGOTO	_00113_DS_
                                    1-  498     	.line	70, "main.c"; 	intCount = 0;
     001A 02rr                      1-  499     	CLRR	_intCount
                                    1-  500     	.line	71, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  501     	MOVIA	0x01
                                    1-  502     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  503     	MOVAR	_IntFlag
                                    1-  504     	.line	72, "main.c"; 	ledCount++; 
                                    1-  505     	BANKSEL	_ledCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 05rr                      1-  506     	INCR	_ledCount,F
     0020 0D03                      1-  507     	BTRSC	STATUS,2
     0021 05rr                      1-  508     	INCR	(_ledCount + 1),F
                                    1-  509     	.line	73, "main.c"; 	if(++count1S >= 100)
                                    1-  510     	BANKSEL	_count1S
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  511     	INCR	_count1S,F
                                    1-  512     ;;unsigned compare: left < lit (0x64=100), size=1
     0024 2164                      1-  513     	MOVIA	0x64
     0025 04rr                      1-  514     	SUBAR	_count1S,W
     0026 0803                      1-  515     	BTRSS	STATUS,0
     0027 3rrr                      1-  516     	LGOTO	_00113_DS_
                                    1-  517     	.line	75, "main.c"; 	count1S = 0;
     0028 02rr                      1-  518     	CLRR	_count1S
                                    1-  519     	.line	76, "main.c"; 	chrgCount++;
                                    1-  520     	BANKSEL	_chrgCount
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 05rr                      1-  521     	INCR	_chrgCount,F
     002B 0D03                      1-  522     	BTRSC	STATUS,2
     002C 05rr                      1-  523     	INCR	(_chrgCount + 1),F
                                    1-  524     	.line	77, "main.c"; 	if(startFlag)
                                    1-  525     	BANKSEL	_startFlag
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  526     	MOVR	_startFlag,W
     002F 0D03                      1-  527     	BTRSC	STATUS,2
     0030 3rrr                      1-  528     	LGOTO	_00106_DS_
                                    1-  529     	.line	79, "main.c"; 	sleepCount++;
                                    1-  530     	BANKSEL	_sleepCount
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 05rr                      1-  531     	INCR	_sleepCount,F
     0033 0D03                      1-  532     	BTRSC	STATUS,2
     0034 05rr                      1-  533     	INCR	(_sleepCount + 1),F
     0035 3rrr                      1-  534     	LGOTO	_00113_DS_
     0036                           1-  535     _00106_DS_:
                                    1-  536     	.line	82, "main.c"; 	sleepCount = 0;
                                    1-  537     	BANKSEL	_sleepCount
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 02rr                      1-  538     	CLRR	_sleepCount
     0038 02rr                      1-  539     	CLRR	(_sleepCount + 1)
     0039                           1-  540     _00113_DS_:
                                    1-  541     	.line	88, "main.c"; 	INTF = 0;
     0039 02rr                      1-  542     	CLRR	_INTF
                                    1-  543     	.line	90, "main.c"; 	}
                                    1-  544     	BANKSEL	___sdcc_saved_stk01
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1-  545     	MOVR	___sdcc_saved_stk01,W
     003C 00rr                      1-  546     	MOVAR	STK01
                                    1-  547     	BANKSEL	___sdcc_saved_stk00
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1-  548     	MOVR	___sdcc_saved_stk00,W
     003F 00rr                      1-  549     	MOVAR	STK00
                                    1-  550     	BANKSEL	___sdcc_saved_fsr
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1-  551     	MOVR	___sdcc_saved_fsr,W
     0042 0084                      1-  552     	MOVAR	FSR
     0043 01rr                      1-  553     	MOVR	PSAVE,W
     0044 008A                      1-  554     	MOVAR	PCHBUF
     0045 0283                      1-  555     	CLRR	STATUS
     0046 15rr                      1-  556     	SWAPR	SSAVE,W
     0047 0083                      1-  557     	MOVAR	STATUS
     0048 15rr                      1-  558     	SWAPR	WSAVE,F
     0049 15rr                      1-  559     	SWAPR	WSAVE,W
     004A                           1-  560     END_OF_INTERRUPT:
     004A 0011                      1-  561     	RETIE	
                                    1-  563     ;--------------------------------------------------------
                                    1-  564     ; code
                                    1-  565     ;--------------------------------------------------------
                                    1-  566     ;***
                                    1-  567     ;  pBlock Stats: dbName = M
                                    1-  568     ;***
                                    1-  569     ;has an exit
                                    1-  570     ;functions called:
                                    1-  571     ;   _initTimer0
                                    1-  572     ;   _initAD
                                    1-  573     ;   _pwmStart
                                    1-  574     ;   _closeChrg
                                    1-  575     ;   _closeChrg
                                    1-  576     ;   _checkA
                                    1-  577     ;   __moduchar
                                    1-  578     ;   __divuint
                                    1-  579     ;   _setDuty
                                    1-  580     ;   _ledCtr
                                    1-  581     ;   _ledCon
                                    1-  582     ;   _initTimer0
                                    1-  583     ;   _initAD
                                    1-  584     ;   _pwmStart
                                    1-  585     ;   _closeChrg
                                    1-  586     ;   _closeChrg
                                    1-  587     ;   _checkA
                                    1-  588     ;   __moduchar
                                    1-  589     ;   __divuint
                                    1-  590     ;   _setDuty
                                    1-  591     ;   _ledCtr
                                    1-  592     ;   _ledCon
                                    1-  593     ;5 compiler assigned registers:
                                    1-  594     ;   r0x103C
                                    1-  595     ;   STK00
                                    1-  596     ;   r0x103D
                                    1-  597     ;   STK02
                                    1-  598     ;   STK01
                                    1-  599     ;; Starting pCode block
                                    1-  600     .segment "code"; module=main, function=_main
     0000                           1-  602     _main:
                                    1-  603     ; 2 exit points
                                    1-  604     	.line	94, "main.c"; 	initTimer0();
     0000 2rrr                      1-  605     	LCALL	_initTimer0
                                    1-  606     	.line	95, "main.c"; 	initAD();
     0001 2rrr                      1-  607     	LCALL	_initAD
                                    1-  608     	.line	96, "main.c"; 	pwmStart();
     0002 2rrr                      1-  609     	LCALL	_pwmStart
     0003                           1-  610     _00143_DS_:
                                    1-  611     	.line	99, "main.c"; 	CLRWDT(); 
     0003 0002                      1-  612     	clrwdt
                                    1-  613     	.line	100, "main.c"; 	if(!IntFlag)
                                    1-  614     	BANKSEL	_IntFlag
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1-  615     	MOVR	_IntFlag,W
     0006 0D03                      1-  616     	BTRSC	STATUS,2
     0007 3rrr                      1-  617     	LGOTO	_00143_DS_
                                    1-  618     	.line	102, "main.c"; 	IntFlag = 0;
     0008 02rr                      1-  619     	CLRR	_IntFlag
                                    1-  620     	.line	103, "main.c"; 	if(fullFlag)
                                    1-  621     	BANKSEL	_fullFlag
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  622     	MOVR	_fullFlag,W
     000B 0D03                      1-  623     	BTRSC	STATUS,2
     000C 3rrr                      1-  624     	LGOTO	_00121_DS_
                                    1-  625     	.line	105, "main.c"; 	PORTA &= (~0x5C);			//灯全灭
     000D 21A3                      1-  626     	MOVIA	0xa3
     000E 10rr                      1-  627     	ANDAR	_PORTA,F
                                    1-  628     	.line	106, "main.c"; 	PORTB &= (~0x03);
     000F 21FC                      1-  629     	MOVIA	0xfc
     0010 10rr                      1-  630     	ANDAR	_PORTB,F
                                    1-  631     	.line	107, "main.c"; 	closeChrg();
     0011 2rrr                      1-  632     	LCALL	_closeChrg
                                    1-  633     	.line	108, "main.c"; 	resetbit(PORTA,6);		//关闭风扇
     0012 1Frr                      1-  634     	BCR	_PORTA,6
                                    1-  635     	.line	109, "main.c"; 	continue;
     0013 3rrr                      1-  636     	LGOTO	_00143_DS_
                                    1-  637     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  638     ;;unsigned compare: left >= lit (0x2A31=10801), size=2
     0014                           1-  639     _00121_DS_:
                                    1-  640     	.line	112, "main.c"; 	if(sleepCount > 10800)
     0014 212A                      1-  641     	MOVIA	0x2a
                                    1-  642     	BANKSEL	_sleepCount
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 04rr                      1-  643     	SUBAR	(_sleepCount + 1),W
     0017 0903                      1-  644     	BTRSS	STATUS,2
     0018 3rrr                      1-  645     	LGOTO	_00180_DS_
     0019 2131                      1-  646     	MOVIA	0x31
     001A 04rr                      1-  647     	SUBAR	_sleepCount,W
     001B                           1-  648     _00180_DS_:
     001B 0803                      1-  649     	BTRSS	STATUS,0
     001C 3rrr                      1-  650     	LGOTO	_00123_DS_
                                    1-  651     	.line	114, "main.c"; 	sleepCount = 10900;
     001D 2194                      1-  652     	MOVIA	0x94
                                    1-  653     	BANKSEL	_sleepCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  654     	MOVAR	_sleepCount
     0020 212A                      1-  655     	MOVIA	0x2a
     0021 00rr                      1-  656     	MOVAR	(_sleepCount + 1)
                                    1-  657     	.line	115, "main.c"; 	fullFlag = 1;
     0022 2101                      1-  658     	MOVIA	0x01
                                    1-  659     	BANKSEL	_fullFlag
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1-  660     	MOVAR	_fullFlag
                                    1-  661     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  662     ;;unsigned compare: left >= lit (0x7E91=32401), size=2
     0025                           1-  663     _00123_DS_:
                                    1-  664     	.line	118, "main.c"; 	if(chrgCount > 32400)
     0025 217E                      1-  665     	MOVIA	0x7e
                                    1-  666     	BANKSEL	_chrgCount
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 04rr                      1-  667     	SUBAR	(_chrgCount + 1),W
     0028 0903                      1-  668     	BTRSS	STATUS,2
     0029 3rrr                      1-  669     	LGOTO	_00181_DS_
     002A 2191                      1-  670     	MOVIA	0x91
     002B 04rr                      1-  671     	SUBAR	_chrgCount,W
     002C                           1-  672     _00181_DS_:
     002C 0803                      1-  673     	BTRSS	STATUS,0
     002D 3rrr                      1-  674     	LGOTO	_00125_DS_
                                    1-  675     	.line	120, "main.c"; 	chrgCount = 32500;
     002E 21F4                      1-  676     	MOVIA	0xf4
                                    1-  677     	BANKSEL	_chrgCount
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 00rr                      1-  678     	MOVAR	_chrgCount
     0031 217E                      1-  679     	MOVIA	0x7e
     0032 00rr                      1-  680     	MOVAR	(_chrgCount + 1)
                                    1-  681     	.line	121, "main.c"; 	fullFlag = 0;
                                    1-  682     	BANKSEL	_fullFlag
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1-  683     	CLRR	_fullFlag
                                    1-  684     	.line	122, "main.c"; 	PORTA |= 0x1C;			//灯全亮
     0035 211C                      1-  685     	MOVIA	0x1c
     0036 11rr                      1-  686     	IORAR	_PORTA,F
                                    1-  687     	.line	123, "main.c"; 	PORTB |= 0x03;
     0037 2103                      1-  688     	MOVIA	0x03
     0038 11rr                      1-  689     	IORAR	_PORTB,F
                                    1-  690     	.line	124, "main.c"; 	closeChrg();
     0039 2rrr                      1-  691     	LCALL	_closeChrg
                                    1-  692     	.line	125, "main.c"; 	resetbit(PORTA,6);		//关闭风扇
     003A 1Frr                      1-  693     	BCR	_PORTA,6
                                    1-  694     	.line	126, "main.c"; 	continue;
     003B 3rrr                      1-  695     	LGOTO	_00143_DS_
     003C                           1-  696     _00125_DS_:
                                    1-  697     	.line	128, "main.c"; 	checkA();
     003C 2rrr                      1-  698     	LCALL	_checkA
                                    1-  699     ;;unsigned compare: left < lit (0x1=1), size=2
                                    1-  700     	.line	130, "main.c"; 	if(chrgCount < 1)
     003D 2100                      1-  701     	MOVIA	0x00
                                    1-  702     	BANKSEL	_chrgCount
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 04rr                      1-  703     	SUBAR	(_chrgCount + 1),W
     0040 0903                      1-  704     	BTRSS	STATUS,2
     0041 3rrr                      1-  705     	LGOTO	_00182_DS_
     0042 2101                      1-  706     	MOVIA	0x01
     0043 04rr                      1-  707     	SUBAR	_chrgCount,W
     0044                           1-  708     _00182_DS_:
     0044 0C03                      1-  709     	BTRSC	STATUS,0
     0045 3rrr                      1-  710     	LGOTO	_00127_DS_
                                    1-  711     	.line	132, "main.c"; 	maxDuty = 66;
     0046 2142                      1-  712     	MOVIA	0x42
                                    1-  713     	BANKSEL	_maxDuty
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1-  714     	MOVAR	_maxDuty
     0049 3rrr                      1-  715     	LGOTO	_00128_DS_
     004A                           1-  716     _00127_DS_:
                                    1-  717     	.line	136, "main.c"; 	maxDuty = 126;
     004A 217E                      1-  718     	MOVIA	0x7e
                                    1-  719     	BANKSEL	_maxDuty
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1-  720     	MOVAR	_maxDuty
     004D                           1-  721     _00128_DS_:
                                    1-  722     	.line	139, "main.c"; 	if(tempDuty < duty)
                                    1-  723     	BANKSEL	_duty
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1-  724     	MOVR	_duty,W
                                    1-  725     	BANKSEL	_tempDuty
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 04rr                      1-  726     	SUBAR	_tempDuty,W
     0051 0C03                      1-  727     	BTRSC	STATUS,0
     0052 3rrr                      1-  728     	LGOTO	_00132_DS_
                                    1-  729     	.line	141, "main.c"; 	tempDuty++;
     0053 05rr                      1-  730     	INCR	_tempDuty,F
     0054 3rrr                      1-  731     	LGOTO	_00006_DS_
     0055                           1-  732     _00132_DS_:
                                    1-  733     	.line	143, "main.c"; 	else if(tempDuty > duty)
                                    1-  734     	BANKSEL	_tempDuty
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1-  735     	MOVR	_tempDuty,W
                                    1-  736     	BANKSEL	_duty
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 04rr                      1-  737     	SUBAR	_duty,W
     0059 0C03                      1-  738     	BTRSC	STATUS,0
     005A 3rrr                      1-  739     	LGOTO	_00006_DS_
                                    1-  740     	.line	145, "main.c"; 	tempDuty--;
                                    1-  741     	BANKSEL	_tempDuty
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 06rr                      1-  742     	DECR	_tempDuty,F
     005D                           1-  743     _00006_DS_:
                                    1-  744     	.line	147, "main.c"; 	PWM2DUTY = tempDuty - 1;
                                    1-  745     	BANKSEL	_tempDuty
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 06rr                      1-  746     	DECR	_tempDuty,W
                                    1-  747     	BANKSEL	r0x103C
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 00rr                      1-  748     	MOVAR	r0x103C
     0061 00rr                      1-  749     	SFUN	_PWM2DUTY
                                    1-  750     	.line	150, "main.c"; 	if(count1S % 5 == 0)
     0062 2105                      1-  751     	MOVIA	0x05
     0063 00rr                      1-  752     	MOVAR	STK00
                                    1-  753     	BANKSEL	_count1S
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 01rr                      1-  754     	MOVR	_count1S,W
     0066 2rrr                      1-  755     	LCALL	__moduchar
                                    1-  756     	BANKSEL	r0x103C
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1-  757     	MOVAR	r0x103C
     0069 01rr                      1-  758     	MOVR	r0x103C,W
     006A 0903                      1-  759     	BTRSS	STATUS,2
     006B 3rrr                      1-  760     	LGOTO	_00141_DS_
                                    1-  761     	.line	152, "main.c"; 	dutyFlag = 0;
                                    1-  762     	BANKSEL	_dutyFlag
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 02rr                      1-  763     	CLRR	_dutyFlag
                                    1-  764     	.line	153, "main.c"; 	avaA = sumA/adTime;
                                    1-  765     	BANKSEL	_adTime
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 01rr                      1-  766     	MOVR	_adTime,W
                                    1-  767     	BANKSEL	r0x103C
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 00rr                      1-  768     	MOVAR	r0x103C
     0072 00rr                      1-  769     	MOVAR	STK02
     0073 2100                      1-  770     	MOVIA	0x00
     0074 00rr                      1-  771     	MOVAR	STK01
                                    1-  772     	BANKSEL	_sumA
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 01rr                      1-  773     	MOVR	_sumA,W
     0077 00rr                      1-  774     	MOVAR	STK00
     0078 01rr                      1-  775     	MOVR	(_sumA + 1),W
     0079 2rrr                      1-  776     	LCALL	__divuint
                                    1-  777     	BANKSEL	_avaA
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 00rr                      1-  778     	MOVAR	(_avaA + 1)
     007C 01rr                      1-  779     	MOVR	STK00,W
     007D 00rr                      1-  780     	MOVAR	_avaA
                                    1-  781     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  782     ;;unsigned compare: left >= lit (0xCD=205), size=2
                                    1-  783     	.line	154, "main.c"; 	if(avaA > 204)				//电流大于2.76A
     007E 2100                      1-  784     	MOVIA	0x00
     007F 04rr                      1-  785     	SUBAR	(_avaA + 1),W
     0080 0903                      1-  786     	BTRSS	STATUS,2
     0081 3rrr                      1-  787     	LGOTO	_00185_DS_
     0082 21CD                      1-  788     	MOVIA	0xcd
     0083 04rr                      1-  789     	SUBAR	_avaA,W
     0084                           1-  790     _00185_DS_:
     0084 0803                      1-  791     	BTRSS	STATUS,0
     0085 3rrr                      1-  792     	LGOTO	_00138_DS_
                                    1-  793     	.line	156, "main.c"; 	addFlag = 2;
     0086 2102                      1-  794     	MOVIA	0x02
                                    1-  795     	BANKSEL	_addFlag
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 00rr                      1-  796     	MOVAR	_addFlag
     0089 3rrr                      1-  797     	LGOTO	_00139_DS_
                                    1-  798     ;;unsigned compare: left < lit (0xBE=190), size=2
     008A                           1-  799     _00138_DS_:
                                    1-  800     	.line	158, "main.c"; 	else if(avaA < 190)
     008A 2100                      1-  801     	MOVIA	0x00
                                    1-  802     	BANKSEL	_avaA
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 04rr                      1-  803     	SUBAR	(_avaA + 1),W
     008D 0903                      1-  804     	BTRSS	STATUS,2
     008E 3rrr                      1-  805     	LGOTO	_00186_DS_
     008F 21BE                      1-  806     	MOVIA	0xbe
     0090 04rr                      1-  807     	SUBAR	_avaA,W
     0091                           1-  808     _00186_DS_:
     0091 0C03                      1-  809     	BTRSC	STATUS,0
     0092 3rrr                      1-  810     	LGOTO	_00135_DS_
                                    1-  811     	.line	160, "main.c"; 	addFlag = 1;
     0093 2101                      1-  812     	MOVIA	0x01
                                    1-  813     	BANKSEL	_addFlag
     0094 rrrr                      3-   71 m1      .banksel ram_address
     0095 00rr                      1-  814     	MOVAR	_addFlag
     0096 3rrr                      1-  815     	LGOTO	_00139_DS_
     0097                           1-  816     _00135_DS_:
                                    1-  817     	.line	164, "main.c"; 	addFlag = 0;
                                    1-  818     	BANKSEL	_addFlag
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 02rr                      1-  819     	CLRR	_addFlag
     0099                           1-  820     _00139_DS_:
                                    1-  821     	.line	166, "main.c"; 	setDuty();
     0099 2rrr                      1-  822     	LCALL	_setDuty
                                    1-  823     	.line	167, "main.c"; 	sumA = 0;
                                    1-  824     	BANKSEL	_sumA
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 02rr                      1-  825     	CLRR	_sumA
     009C 02rr                      1-  826     	CLRR	(_sumA + 1)
                                    1-  827     	.line	168, "main.c"; 	adTime = 0;		//重置采样次数
                                    1-  828     	BANKSEL	_adTime
     009D rrrr                      3-   71 m1      .banksel ram_address
     009E 02rr                      1-  829     	CLRR	_adTime
     009F                           1-  830     _00141_DS_:
                                    1-  831     	.line	172, "main.c"; 	ledCtr();
     009F 2rrr                      1-  832     	LCALL	_ledCtr
                                    1-  833     	.line	173, "main.c"; 	ledCon();
     00A0 2rrr                      1-  834     	LCALL	_ledCon
     00A1 3rrr                      1-  835     	LGOTO	_00143_DS_
                                    1-  836     	.line	175, "main.c"; 	}
                                    1-  837     	RETURN	
     00A2 0010                      3-   26 m1      ret
                                    1-  838     ; exit point of _main
                                    1-  840     ;***
                                    1-  841     ;  pBlock Stats: dbName = C
                                    1-  842     ;***
                                    1-  843     ;has an exit
                                    1-  844     ;; Starting pCode block
                                    1-  845     .segment "code"; module=main, function=_closeChrg
     0000                           1-  847     _closeChrg:
                                    1-  848     ; 2 exit points
                                    1-  849     	.line	444, "main.c"; 	BPHCON |= 0x08;		
     0000 19rr                      1-  850     	BSR	_BPHCON,3
                                    1-  851     	.line	445, "main.c"; 	ABPLCON |= 0x80;
     0001 1Brr                      1-  852     	BSR	_ABPLCON,7
                                    1-  853     	.line	446, "main.c"; 	setbit(PORTB,3);		//3 5脚高电平，关闭充电
     0002 19rr                      1-  854     	BSR	_PORTB,3
                                    1-  855     	.line	447, "main.c"; 	setbit(PORTA,7);
     0003 1Brr                      1-  856     	BSR	_PORTA,7
                                    1-  857     	.line	448, "main.c"; 	}
                                    1-  858     	RETURN	
     0004 0010                      3-   26 m1      ret
                                    1-  859     ; exit point of _closeChrg
                                    1-  861     ;***
                                    1-  862     ;  pBlock Stats: dbName = C
                                    1-  863     ;***
                                    1-  864     ;has an exit
                                    1-  865     ;; Starting pCode block
                                    1-  866     .segment "code"; module=main, function=_halfChrg
     0000                           1-  868     _halfChrg:
                                    1-  869     ; 2 exit points
                                    1-  870     	.line	436, "main.c"; 	BPHCON &= 0xF7;		//PB3上拉
     0000 1Drr                      1-  871     	BCR	_BPHCON,3
                                    1-  872     	.line	437, "main.c"; 	ABPLCON &= 0x7F;
     0001 1Frr                      1-  873     	BCR	_ABPLCON,7
                                    1-  874     	.line	438, "main.c"; 	IOSTB =  C_PB3_Input;	
     0002 2108                      1-  875     	MOVIA	0x08
     0003 000r                      1-  876     	IOST	_IOSTB
                                    1-  877     	.line	439, "main.c"; 	setbit(PORTB,3);		//5脚高电平，降压涓充
     0004 19rr                      1-  878     	BSR	_PORTB,3
                                    1-  879     	.line	440, "main.c"; 	resetbit(PORTA,7);
     0005 1Frr                      1-  880     	BCR	_PORTA,7
                                    1-  881     	.line	441, "main.c"; 	}
                                    1-  882     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  883     ; exit point of _halfChrg
                                    1-  885     ;***
                                    1-  886     ;  pBlock Stats: dbName = C
                                    1-  887     ;***
                                    1-  888     ;has an exit
                                    1-  889     ;; Starting pCode block
                                    1-  890     .segment "code"; module=main, function=_fullChrg
     0000                           1-  892     _fullChrg:
                                    1-  893     ; 2 exit points
                                    1-  894     	.line	428, "main.c"; 	BPHCON |= 0x08;		
     0000 19rr                      1-  895     	BSR	_BPHCON,3
                                    1-  896     	.line	429, "main.c"; 	ABPLCON |= 0x80;
     0001 1Brr                      1-  897     	BSR	_ABPLCON,7
                                    1-  898     	.line	430, "main.c"; 	IOSTB =  0;	
     0002 0200                      1-  899     	CLRA	
     0003 000r                      1-  900     	IOST	_IOSTB
                                    1-  901     	.line	431, "main.c"; 	resetbit(PORTB,3);
     0004 1Drr                      1-  902     	BCR	_PORTB,3
                                    1-  903     	.line	432, "main.c"; 	resetbit(PORTA,7);
     0005 1Frr                      1-  904     	BCR	_PORTA,7
                                    1-  905     	.line	433, "main.c"; 	}
                                    1-  906     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1-  907     ; exit point of _fullChrg
                                    1-  909     ;***
                                    1-  910     ;  pBlock Stats: dbName = C
                                    1-  911     ;***
                                    1-  912     ;has an exit
                                    1-  913     ;5 compiler assigned registers:
                                    1-  914     ;   r0x1026
                                    1-  915     ;   STK00
                                    1-  916     ;   r0x1027
                                    1-  917     ;   r0x1028
                                    1-  918     ;   r0x1029
                                    1-  919     ;; Starting pCode block
                                    1-  920     .segment "code"; module=main, function=_delay
                                    1-  922     ;local variable name mapping:
     0000                           1-  927     _delay:
                                    1-  928     ; 2 exit points
                                    1-  929     	.line	420, "main.c"; 	void delay(uint16_t time)
                                    1-  930     	BANKSEL	r0x1026
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  931     	MOVAR	r0x1026
     0002 01rr                      1-  932     	MOVR	STK00,W
                                    1-  933     	BANKSEL	r0x1027
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  934     	MOVAR	r0x1027
                                    1-  935     	.line	422, "main.c"; 	for(uint16_t i=0;i<time;i++);
                                    1-  936     	BANKSEL	r0x1028
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  937     	CLRR	r0x1028
                                    1-  938     	BANKSEL	r0x1029
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  939     	CLRR	r0x1029
     0009                           1-  940     _00389_DS_:
                                    1-  941     	BANKSEL	r0x1026
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  942     	MOVR	r0x1026,W
                                    1-  943     	BANKSEL	r0x1029
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  944     	SUBAR	r0x1029,W
     000D 0903                      1-  945     	BTRSS	STATUS,2
     000E 3rrr                      1-  946     	LGOTO	_00400_DS_
                                    1-  947     	BANKSEL	r0x1027
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  948     	MOVR	r0x1027,W
                                    1-  949     	BANKSEL	r0x1028
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  950     	SUBAR	r0x1028,W
     0013                           1-  951     _00400_DS_:
     0013 0C03                      1-  952     	BTRSC	STATUS,0
     0014 3rrr                      1-  953     	LGOTO	_00391_DS_
                                    1-  954     	BANKSEL	r0x1028
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  955     	INCR	r0x1028,F
     0017 0903                      1-  956     	BTRSS	STATUS,2
     0018 3rrr                      1-  957     	LGOTO	_00001_DS_
                                    1-  958     	BANKSEL	r0x1029
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  959     	INCR	r0x1029,F
     001B                           1-  960     _00001_DS_:
     001B 3rrr                      1-  961     	LGOTO	_00389_DS_
     001C                           1-  962     _00391_DS_:
                                    1-  963     	.line	423, "main.c"; 	}
                                    1-  964     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  965     ; exit point of _delay
                                    1-  967     ;***
                                    1-  968     ;  pBlock Stats: dbName = C
                                    1-  969     ;***
                                    1-  970     ;has an exit
                                    1-  971     ;; Starting pCode block
                                    1-  972     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  974     _F_wait_eoc:
                                    1-  975     ; 2 exit points
     0000                           1-  976     _00382_DS_:
                                    1-  977     	.line	416, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  978     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  979     	LGOTO	_00382_DS_
                                    1-  980     	.line	418, "main.c"; 	}
                                    1-  981     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  982     ; exit point of _F_wait_eoc
                                    1-  984     ;***
                                    1-  985     ;  pBlock Stats: dbName = C
                                    1-  986     ;***
                                    1-  987     ;has an exit
                                    1-  988     ;functions called:
                                    1-  989     ;   _delay
                                    1-  990     ;   _F_wait_eoc
                                    1-  991     ;   _delay
                                    1-  992     ;   _F_wait_eoc
                                    1-  993     ;7 compiler assigned registers:
                                    1-  994     ;   r0x102A
                                    1-  995     ;   STK00
                                    1-  996     ;   r0x102B
                                    1-  997     ;   r0x102C
                                    1-  998     ;   r0x102D
                                    1-  999     ;   r0x102E
                                    1- 1000     ;   r0x102F
                                    1- 1001     ;; Starting pCode block
                                    1- 1002     .segment "code"; module=main, function=_F_AIN0_Convert
                                    1- 1004     ;local variable name mapping:
     0000                           1- 1007     _F_AIN0_Convert:
                                    1- 1008     ; 2 exit points
                                    1- 1009     	.line	400, "main.c"; 	void F_AIN0_Convert(char count)
                                    1- 1010     	BANKSEL	r0x102A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1011     	MOVAR	r0x102A
                                    1- 1012     	.line	404, "main.c"; 	delay(100);
     0002 2164                      1- 1013     	MOVIA	0x64
     0003 00rr                      1- 1014     	MOVAR	STK00
     0004 2100                      1- 1015     	MOVIA	0x00
     0005 2rrr                      1- 1016     	LCALL	_delay
                                    1- 1017     	.line	405, "main.c"; 	for(i=1;i<=count;i++)
     0006 2101                      1- 1018     	MOVIA	0x01
                                    1- 1019     	BANKSEL	r0x102B
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 1020     	MOVAR	r0x102B
     0009                           1- 1021     _00375_DS_:
                                    1- 1022     	BANKSEL	r0x102B
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1- 1023     	MOVR	r0x102B,W
                                    1- 1024     	BANKSEL	r0x102A
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1- 1025     	SUBAR	r0x102A,W
     000D 0803                      1- 1026     	BTRSS	STATUS,0
     000E 3rrr                      1- 1027     	LGOTO	_00377_DS_
                                    1- 1028     	.line	407, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000F 1Brr                      1- 1029     	BSR	_ADMDbits,6
                                    1- 1030     	.line	408, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0010 2rrr                      1- 1031     	LCALL	_F_wait_eoc
                                    1- 1032     	.line	409, "main.c"; 	R_AIN0_DATA_LB += ( 0x0F & ADR); 
     0011 210F                      1- 1033     	MOVIA	0x0f
     0012 10rr                      1- 1034     	ANDAR	_ADR,W
                                    1- 1035     ;;3	MOVAR	r0x102C
                                    1- 1036     	BANKSEL	_R_AIN0_DATA_LB
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 03rr                      1- 1037     	ADDAR	_R_AIN0_DATA_LB,F
                                    1- 1038     	.line	410, "main.c"; 	R_AIN0_DATA    += ADD; 
     0015 01rr                      1- 1039     	MOVR	_ADD,W
                                    1- 1040     	BANKSEL	r0x102C
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1041     	MOVAR	r0x102C
                                    1- 1042     ;;1	CLRR	r0x102D
                                    1- 1043     ;;105	MOVR	r0x102C,W
                                    1- 1044     ;;103	MOVAR	r0x102E
     0018 2100                      1- 1045     	MOVIA	0x00
                                    1- 1046     	BANKSEL	r0x102F
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 1047     	MOVAR	r0x102F
                                    1- 1048     ;;104	MOVR	r0x102E,W
                                    1- 1049     	BANKSEL	r0x102C
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 1050     	MOVR	r0x102C,W
                                    1- 1051     	BANKSEL	_R_AIN0_DATA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 03rr                      1- 1052     	ADDAR	_R_AIN0_DATA,F
                                    1- 1053     	BANKSEL	r0x102F
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 1054     	MOVR	r0x102F,W
     0021 0C03                      1- 1055     	BTRSC	STATUS,0
     0022 05rr                      1- 1056     	INCR	r0x102F,W
     0023 0D03                      1- 1057     	BTRSC	STATUS,2
     0024 3rrr                      1- 1058     	LGOTO	_00002_DS_
                                    1- 1059     	BANKSEL	_R_AIN0_DATA
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 03rr                      1- 1060     	ADDAR	(_R_AIN0_DATA + 1),F
     0027                           1- 1061     _00002_DS_:
                                    1- 1062     	.line	405, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1063     	BANKSEL	r0x102B
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 05rr                      1- 1064     	INCR	r0x102B,F
     0029 3rrr                      1- 1065     	LGOTO	_00375_DS_
     002A                           1- 1066     _00377_DS_:
                                    1- 1067     	.line	412, "main.c"; 	}
                                    1- 1068     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1- 1069     ; exit point of _F_AIN0_Convert
                                    1- 1071     ;***
                                    1- 1072     ;  pBlock Stats: dbName = C
                                    1- 1073     ;***
                                    1- 1074     ;has an exit
                                    1- 1075     ;functions called:
                                    1- 1076     ;   _F_AIN0_Convert
                                    1- 1077     ;   _F_AIN0_Convert
                                    1- 1078     ;4 compiler assigned registers:
                                    1- 1079     ;   r0x1030
                                    1- 1080     ;   r0x1031
                                    1- 1081     ;   r0x1032
                                    1- 1082     ;   r0x1033
                                    1- 1083     ;; Starting pCode block
                                    1- 1084     .segment "code"; module=main, function=_checkA
     0000                           1- 1086     _checkA:
                                    1- 1087     ; 2 exit points
                                    1- 1088     	.line	386, "main.c"; 	PACON = C_PA0_AIN0;
     0000 2101                      1- 1089     	MOVIA	0x01
     0001 00rr                      1- 1090     	MOVAR	_PACON
                                    1- 1091     	.line	387, "main.c"; 	R_AIN0_DATA=R_AIN0_DATA_LB=0x00;
                                    1- 1092     	BANKSEL	_R_AIN0_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1093     	CLRR	_R_AIN0_DATA_LB
                                    1- 1094     	BANKSEL	_R_AIN0_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1095     	CLRR	_R_AIN0_DATA
     0006 02rr                      1- 1096     	CLRR	(_R_AIN0_DATA + 1)
                                    1- 1097     	.line	388, "main.c"; 	F_AIN0_Convert(8);					// execute AIN0 ADC converting 8 times
     0007 2108                      1- 1098     	MOVIA	0x08
     0008 2rrr                      1- 1099     	LCALL	_F_AIN0_Convert
                                    1- 1100     	.line	389, "main.c"; 	R_AIN0_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1101     	BANKSEL	_R_AIN0_DATA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 15rr                      1- 1102     	SWAPR	(_R_AIN0_DATA + 1),W
     000B 22F0                      1- 1103     	ANDIA	0xf0
     000C 00rr                      1- 1104     	MOVAR	(_R_AIN0_DATA + 1)
     000D 15rr                      1- 1105     	SWAPR	_R_AIN0_DATA,W
     000E 00rr                      1- 1106     	MOVAR	_R_AIN0_DATA
     000F 220F                      1- 1107     	ANDIA	0x0f
     0010 11rr                      1- 1108     	IORAR	(_R_AIN0_DATA + 1),F
     0011 12rr                      1- 1109     	XORAR	_R_AIN0_DATA,F
                                    1- 1110     	.line	390, "main.c"; 	R_AIN0_DATA_LB &= 0xF0;				// Only get Bit7~4
     0012 21F0                      1- 1111     	MOVIA	0xf0
                                    1- 1112     	BANKSEL	_R_AIN0_DATA_LB
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 10rr                      1- 1113     	ANDAR	_R_AIN0_DATA_LB,F
                                    1- 1114     	.line	391, "main.c"; 	R_AIN0_DATA += R_AIN0_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0015 01rr                      1- 1115     	MOVR	_R_AIN0_DATA_LB,W
                                    1- 1116     	BANKSEL	r0x1032
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1117     	MOVAR	r0x1032
                                    1- 1118     ;;1	MOVAR	r0x1030
                                    1- 1119     ;;1	CLRR	r0x1031
                                    1- 1120     ;;102	MOVR	r0x1030,W
     0018 2100                      1- 1121     	MOVIA	0x00
                                    1- 1122     	BANKSEL	r0x1033
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 1123     	MOVAR	r0x1033
                                    1- 1124     	BANKSEL	r0x1032
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 1125     	MOVR	r0x1032,W
                                    1- 1126     	BANKSEL	_R_AIN0_DATA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 03rr                      1- 1127     	ADDAR	_R_AIN0_DATA,F
                                    1- 1128     	BANKSEL	r0x1033
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 1129     	MOVR	r0x1033,W
     0021 0C03                      1- 1130     	BTRSC	STATUS,0
     0022 05rr                      1- 1131     	INCR	r0x1033,W
     0023 0D03                      1- 1132     	BTRSC	STATUS,2
     0024 3rrr                      1- 1133     	LGOTO	_00003_DS_
                                    1- 1134     	BANKSEL	_R_AIN0_DATA
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 03rr                      1- 1135     	ADDAR	(_R_AIN0_DATA + 1),F
                                    1- 1136     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0027                           1- 1137     _00003_DS_:
                                    1- 1138     	.line	392, "main.c"; 	R_AIN0_DATA >>=3;					// R_AIN0_DATA divided 8
     0027 1C03                      1- 1139     	BCR	STATUS,0
                                    1- 1140     	BANKSEL	_R_AIN0_DATA
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 13rr                      1- 1141     	RRR	(_R_AIN0_DATA + 1),F
     002A 13rr                      1- 1142     	RRR	_R_AIN0_DATA,F
                                    1- 1143     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002B 1C03                      1- 1144     	BCR	STATUS,0
     002C 13rr                      1- 1145     	RRR	(_R_AIN0_DATA + 1),F
     002D 13rr                      1- 1146     	RRR	_R_AIN0_DATA,F
                                    1- 1147     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002E 1C03                      1- 1148     	BCR	STATUS,0
     002F 13rr                      1- 1149     	RRR	(_R_AIN0_DATA + 1),F
     0030 13rr                      1- 1150     	RRR	_R_AIN0_DATA,F
                                    1- 1151     	.line	393, "main.c"; 	sumA += R_AIN0_DATA;
     0031 01rr                      1- 1152     	MOVR	_R_AIN0_DATA,W
                                    1- 1153     	BANKSEL	_sumA
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 03rr                      1- 1154     	ADDAR	_sumA,F
                                    1- 1155     	BANKSEL	_R_AIN0_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 1156     	MOVR	(_R_AIN0_DATA + 1),W
     0036 0C03                      1- 1157     	BTRSC	STATUS,0
     0037 05rr                      1- 1158     	INCR	(_R_AIN0_DATA + 1),W
     0038 0D03                      1- 1159     	BTRSC	STATUS,2
     0039 3rrr                      1- 1160     	LGOTO	_00004_DS_
                                    1- 1161     	BANKSEL	_sumA
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 03rr                      1- 1162     	ADDAR	(_sumA + 1),F
     003C                           1- 1163     _00004_DS_:
                                    1- 1164     	.line	394, "main.c"; 	adTime++;    
                                    1- 1165     	BANKSEL	_adTime
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 05rr                      1- 1166     	INCR	_adTime,F
                                    1- 1167     	.line	395, "main.c"; 	}
                                    1- 1168     	RETURN	
     003E 0010                      3-   26 m1      ret
                                    1- 1169     ; exit point of _checkA
                                    1- 1171     ;***
                                    1- 1172     ;  pBlock Stats: dbName = C
                                    1- 1173     ;***
                                    1- 1174     ;has an exit
                                    1- 1175     ;functions called:
                                    1- 1176     ;   _delay
                                    1- 1177     ;   _delay
                                    1- 1178     ;1 compiler assigned register :
                                    1- 1179     ;   STK00
                                    1- 1180     ;; Starting pCode block
                                    1- 1181     .segment "code"; module=main, function=_initAD
     0000                           1- 1183     _initAD:
                                    1- 1184     ; 2 exit points
                                    1- 1185     	.line	362, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA0 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1186     	MOVIA	0x80
     0001 00rr                      1- 1187     	MOVAR	_ADMD
                                    1- 1188     	.line	365, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 02rr                      1- 1189     	CLRR	_ADVREFH
                                    1- 1190     	.line	372, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1191     	MOVIA	0x10
     0004 00rr                      1- 1192     	MOVAR	_ADR
                                    1- 1193     	.line	374, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1194     	MOVIA	0x03
     0006 00rr                      1- 1195     	MOVAR	_ADCR
                                    1- 1196     	.line	377, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1197     	BSR	_ADMDbits,4
                                    1- 1198     	.line	378, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1199     	MOVIA	0x64
     0009 00rr                      1- 1200     	MOVAR	STK00
     000A 2100                      1- 1201     	MOVIA	0x00
     000B 2rrr                      1- 1202     	LCALL	_delay
                                    1- 1203     	.line	381, "main.c"; 	}
                                    1- 1204     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 1205     ; exit point of _initAD
                                    1- 1207     ;***
                                    1- 1208     ;  pBlock Stats: dbName = C
                                    1- 1209     ;***
                                    1- 1210     ;has an exit
                                    1- 1211     ;2 compiler assigned registers:
                                    1- 1212     ;   r0x1034
                                    1- 1213     ;   r0x1035
                                    1- 1214     ;; Starting pCode block
                                    1- 1215     .segment "code"; module=main, function=_ledCtr
     0000                           1- 1217     _ledCtr:
                                    1- 1218     ; 2 exit points
                                    1- 1219     	.line	330, "main.c"; 	if(ledLock)
                                    1- 1220     	BANKSEL	_ledLock
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1221     	MOVR	_ledLock,W
     0002 0903                      1- 1222     	BTRSS	STATUS,2
                                    1- 1223     	.line	332, "main.c"; 	return;
     0003 3rrr                      1- 1224     	LGOTO	_00347_DS_
                                    1- 1225     	.line	334, "main.c"; 	switch(ledStep)
     0004 2106                      1- 1226     	MOVIA	0x06
                                    1- 1227     	BANKSEL	_ledStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 04rr                      1- 1228     	SUBAR	_ledStep,W
     0007 0C03                      1- 1229     	BTRSC	STATUS,0
     0008 3rrr                      1- 1230     	LGOTO	_00344_DS_
     0009 21rr                      1- 1231     	MOVIA	((_00359_DS_ >> 8) & 0xff)
     000A 008A                      1- 1232     	MOVAR	PCHBUF
     000B 01rr                      1- 1233     	MOVR	_ledStep,W
     000C 25rr                      1- 1234     	ADDIA	_00359_DS_
     000D 0C03                      1- 1235     	BTRSC	STATUS,0
     000E 058A                      1- 1236     	INCR	PCHBUF,F
     000F 0082                      1- 1237     	MOVAR	PCL
     0010                           1- 1238     _00359_DS_:
     0010 3rrr                      1- 1239     	LGOTO	_00338_DS_
     0011 3rrr                      1- 1240     	LGOTO	_00339_DS_
     0012 3rrr                      1- 1241     	LGOTO	_00340_DS_
     0013 3rrr                      1- 1242     	LGOTO	_00341_DS_
     0014 3rrr                      1- 1243     	LGOTO	_00342_DS_
     0015 3rrr                      1- 1244     	LGOTO	_00343_DS_
     0016                           1- 1245     _00338_DS_:
                                    1- 1246     	.line	337, "main.c"; 	ledMin = 250;
     0016 21FA                      1- 1247     	MOVIA	0xfa
                                    1- 1248     	BANKSEL	_ledMin
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1249     	MOVAR	_ledMin
                                    1- 1250     	.line	338, "main.c"; 	break;
     0019 3rrr                      1- 1251     	LGOTO	_00344_DS_
     001A                           1- 1252     _00339_DS_:
                                    1- 1253     	.line	340, "main.c"; 	ledMin = 200;
     001A 21C8                      1- 1254     	MOVIA	0xc8
                                    1- 1255     	BANKSEL	_ledMin
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1256     	MOVAR	_ledMin
                                    1- 1257     	.line	341, "main.c"; 	break;
     001D 3rrr                      1- 1258     	LGOTO	_00344_DS_
     001E                           1- 1259     _00340_DS_:
                                    1- 1260     	.line	343, "main.c"; 	ledMin = 150;
     001E 2196                      1- 1261     	MOVIA	0x96
                                    1- 1262     	BANKSEL	_ledMin
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 1263     	MOVAR	_ledMin
                                    1- 1264     	.line	344, "main.c"; 	break;
     0021 3rrr                      1- 1265     	LGOTO	_00344_DS_
     0022                           1- 1266     _00341_DS_:
                                    1- 1267     	.line	346, "main.c"; 	ledMin = 100;
     0022 2164                      1- 1268     	MOVIA	0x64
                                    1- 1269     	BANKSEL	_ledMin
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1270     	MOVAR	_ledMin
                                    1- 1271     	.line	347, "main.c"; 	break;
     0025 3rrr                      1- 1272     	LGOTO	_00344_DS_
     0026                           1- 1273     _00342_DS_:
                                    1- 1274     	.line	349, "main.c"; 	ledMin = 50;
     0026 2132                      1- 1275     	MOVIA	0x32
                                    1- 1276     	BANKSEL	_ledMin
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1- 1277     	MOVAR	_ledMin
                                    1- 1278     	.line	350, "main.c"; 	break;
     0029 3rrr                      1- 1279     	LGOTO	_00344_DS_
     002A                           1- 1280     _00343_DS_:
                                    1- 1281     	.line	352, "main.c"; 	ledMin = 0;
                                    1- 1282     	BANKSEL	_ledMin
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 02rr                      1- 1283     	CLRR	_ledMin
     002C                           1- 1284     _00344_DS_:
                                    1- 1285     	.line	355, "main.c"; 	if(ledCount < ledMin)
                                    1- 1286     	BANKSEL	_ledMin
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1- 1287     	MOVR	_ledMin,W
                                    1- 1288     	BANKSEL	r0x1034
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1- 1289     	MOVAR	r0x1034
                                    1- 1290     	BANKSEL	r0x1035
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 02rr                      1- 1291     	CLRR	r0x1035
     0032 2100                      1- 1292     	MOVIA	0x00
                                    1- 1293     	BANKSEL	_ledCount
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 04rr                      1- 1294     	SUBAR	(_ledCount + 1),W
     0035 0903                      1- 1295     	BTRSS	STATUS,2
     0036 3rrr                      1- 1296     	LGOTO	_00360_DS_
                                    1- 1297     	BANKSEL	r0x1034
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1- 1298     	MOVR	r0x1034,W
                                    1- 1299     	BANKSEL	_ledCount
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1300     	SUBAR	_ledCount,W
     003B                           1- 1301     _00360_DS_:
     003B 0C03                      1- 1302     	BTRSC	STATUS,0
     003C 3rrr                      1- 1303     	LGOTO	_00347_DS_
                                    1- 1304     	.line	356, "main.c"; 	ledCount = ledMin;
                                    1- 1305     	BANKSEL	r0x1034
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1- 1306     	MOVR	r0x1034,W
                                    1- 1307     	BANKSEL	_ledCount
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 00rr                      1- 1308     	MOVAR	_ledCount
                                    1- 1309     	BANKSEL	r0x1035
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 1310     	MOVR	r0x1035,W
                                    1- 1311     	BANKSEL	_ledCount
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 00rr                      1- 1312     	MOVAR	(_ledCount + 1)
     0045                           1- 1313     _00347_DS_:
                                    1- 1314     	.line	357, "main.c"; 	}
                                    1- 1315     	RETURN	
     0045 0010                      3-   26 m1      ret
                                    1- 1316     ; exit point of _ledCtr
                                    1- 1318     ;***
                                    1- 1319     ;  pBlock Stats: dbName = C
                                    1- 1320     ;***
                                    1- 1321     ;has an exit
                                    1- 1322     ;; Starting pCode block
                                    1- 1323     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1325     _pwmStop:
                                    1- 1326     ; 2 exit points
                                    1- 1327     	.line	325, "main.c"; 	PWM2DUTY = 0;
     0000 0200                      1- 1328     	CLRA	
     0001 00rr                      1- 1329     	SFUN	_PWM2DUTY
                                    1- 1330     	.line	326, "main.c"; 	}
                                    1- 1331     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1332     ; exit point of _pwmStop
                                    1- 1334     ;***
                                    1- 1335     ;  pBlock Stats: dbName = C
                                    1- 1336     ;***
                                    1- 1337     ;has an exit
                                    1- 1338     ;; Starting pCode block
                                    1- 1339     .segment "code"; module=main, function=_pwmStart
     0000                           1- 1341     _pwmStart:
                                    1- 1342     ; 2 exit points
                                    1- 1343     	.line	316, "main.c"; 	TMRH = 0;
     0000 02rr                      1- 1344     	CLRR	_TMRH
                                    1- 1345     	.line	317, "main.c"; 	TMR2 = 127;
     0001 217F                      1- 1346     	MOVIA	0x7f
     0002 00rr                      1- 1347     	SFUN	_TMR2
                                    1- 1348     	.line	318, "main.c"; 	PWM2DUTY = 1;
     0003 2101                      1- 1349     	MOVIA	0x01
     0004 00rr                      1- 1350     	SFUN	_PWM2DUTY
                                    1- 1351     	.line	319, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	    //reloaded from TMR2, non-stop mode
     0005 2183                      1- 1352     	MOVIA	0x83
     0006 00rr                      1- 1353     	SFUN	_T2CR1
                                    1- 1354     	.line	320, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler2, Prescaler2 dividing rate = 1:2, Timer2 clock source is instruction clock 
     0007 0200                      1- 1355     	CLRA	
     0008 00rr                      1- 1356     	SFUN	_T2CR2
                                    1- 1357     	.line	321, "main.c"; 	}
                                    1- 1358     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1- 1359     ; exit point of _pwmStart
                                    1- 1361     ;***
                                    1- 1362     ;  pBlock Stats: dbName = C
                                    1- 1363     ;***
                                    1- 1364     ;has an exit
                                    1- 1365     ;2 compiler assigned registers:
                                    1- 1366     ;   r0x1036
                                    1- 1367     ;   r0x1037
                                    1- 1368     ;; Starting pCode block
                                    1- 1369     .segment "code"; module=main, function=_ledCon
     0000                           1- 1371     _ledCon:
                                    1- 1372     ; 2 exit points
                                    1- 1373     	.line	297, "main.c"; 	if(ledCount < ledMin)
                                    1- 1374     	BANKSEL	_ledMin
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1375     	MOVR	_ledMin,W
                                    1- 1376     	BANKSEL	r0x1036
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1- 1377     	MOVAR	r0x1036
                                    1- 1378     	BANKSEL	r0x1037
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1379     	CLRR	r0x1037
     0006 2100                      1- 1380     	MOVIA	0x00
                                    1- 1381     	BANKSEL	_ledCount
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 04rr                      1- 1382     	SUBAR	(_ledCount + 1),W
     0009 0903                      1- 1383     	BTRSS	STATUS,2
     000A 3rrr                      1- 1384     	LGOTO	_00316_DS_
                                    1- 1385     	BANKSEL	r0x1036
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1386     	MOVR	r0x1036,W
                                    1- 1387     	BANKSEL	_ledCount
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 1388     	SUBAR	_ledCount,W
     000F                           1- 1389     _00316_DS_:
     000F 0C03                      1- 1390     	BTRSC	STATUS,0
     0010 3rrr                      1- 1391     	LGOTO	_00275_DS_
                                    1- 1392     	.line	298, "main.c"; 	ledCount = ledMin;
                                    1- 1393     	BANKSEL	r0x1036
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 1394     	MOVR	r0x1036,W
                                    1- 1395     	BANKSEL	_ledCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1- 1396     	MOVAR	_ledCount
                                    1- 1397     	BANKSEL	r0x1037
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 1398     	MOVR	r0x1037,W
                                    1- 1399     	BANKSEL	_ledCount
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1400     	MOVAR	(_ledCount + 1)
     0019                           1- 1401     _00275_DS_:
                                    1- 1402     	.line	299, "main.c"; 	ledLock = 1;		//锁定
     0019 2101                      1- 1403     	MOVIA	0x01
                                    1- 1404     	BANKSEL	_ledLock
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1- 1405     	MOVAR	_ledLock
                                    1- 1406     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1407     ;;unsigned compare: left >= lit (0x33=51), size=2
                                    1- 1408     	.line	300, "main.c"; 	ledCount > 50 ? (setbit(PORTB,1)) : (resetbit(PORTB,1));
     001C 2100                      1- 1409     	MOVIA	0x00
                                    1- 1410     	BANKSEL	_ledCount
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 04rr                      1- 1411     	SUBAR	(_ledCount + 1),W
     001F 0903                      1- 1412     	BTRSS	STATUS,2
     0020 3rrr                      1- 1413     	LGOTO	_00317_DS_
     0021 2133                      1- 1414     	MOVIA	0x33
     0022 04rr                      1- 1415     	SUBAR	_ledCount,W
     0023                           1- 1416     _00317_DS_:
     0023 0803                      1- 1417     	BTRSS	STATUS,0
     0024 3rrr                      1- 1418     	LGOTO	_00282_DS_
     0025 18rr                      1- 1419     	BSR	_PORTB,1
     0026 3rrr                      1- 1420     	LGOTO	_00283_DS_
     0027                           1- 1421     _00282_DS_:
     0027 1Crr                      1- 1422     	BCR	_PORTB,1
                                    1- 1423     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1424     ;;unsigned compare: left >= lit (0x65=101), size=2
     0028                           1- 1425     _00283_DS_:
                                    1- 1426     	.line	301, "main.c"; 	ledCount > 100 ? (setbit(PORTB,0)) : (resetbit(PORTB,0));
     0028 2100                      1- 1427     	MOVIA	0x00
                                    1- 1428     	BANKSEL	_ledCount
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 04rr                      1- 1429     	SUBAR	(_ledCount + 1),W
     002B 0903                      1- 1430     	BTRSS	STATUS,2
     002C 3rrr                      1- 1431     	LGOTO	_00318_DS_
     002D 2165                      1- 1432     	MOVIA	0x65
     002E 04rr                      1- 1433     	SUBAR	_ledCount,W
     002F                           1- 1434     _00318_DS_:
     002F 0803                      1- 1435     	BTRSS	STATUS,0
     0030 3rrr                      1- 1436     	LGOTO	_00284_DS_
     0031 18rr                      1- 1437     	BSR	_PORTB,0
     0032 3rrr                      1- 1438     	LGOTO	_00285_DS_
     0033                           1- 1439     _00284_DS_:
     0033 1Crr                      1- 1440     	BCR	_PORTB,0
                                    1- 1441     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1442     ;;unsigned compare: left >= lit (0x97=151), size=2
     0034                           1- 1443     _00285_DS_:
                                    1- 1444     	.line	302, "main.c"; 	ledCount > 150 ? (setbit(PORTA,2)) : (resetbit(PORTA,2));
     0034 2100                      1- 1445     	MOVIA	0x00
                                    1- 1446     	BANKSEL	_ledCount
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 04rr                      1- 1447     	SUBAR	(_ledCount + 1),W
     0037 0903                      1- 1448     	BTRSS	STATUS,2
     0038 3rrr                      1- 1449     	LGOTO	_00319_DS_
     0039 2197                      1- 1450     	MOVIA	0x97
     003A 04rr                      1- 1451     	SUBAR	_ledCount,W
     003B                           1- 1452     _00319_DS_:
     003B 0803                      1- 1453     	BTRSS	STATUS,0
     003C 3rrr                      1- 1454     	LGOTO	_00286_DS_
     003D 19rr                      1- 1455     	BSR	_PORTA,2
     003E 3rrr                      1- 1456     	LGOTO	_00287_DS_
     003F                           1- 1457     _00286_DS_:
     003F 1Drr                      1- 1458     	BCR	_PORTA,2
                                    1- 1459     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1460     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0040                           1- 1461     _00287_DS_:
                                    1- 1462     	.line	303, "main.c"; 	ledCount > 200 ? (setbit(PORTA,3)) : (resetbit(PORTA,3));
     0040 2100                      1- 1463     	MOVIA	0x00
                                    1- 1464     	BANKSEL	_ledCount
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 04rr                      1- 1465     	SUBAR	(_ledCount + 1),W
     0043 0903                      1- 1466     	BTRSS	STATUS,2
     0044 3rrr                      1- 1467     	LGOTO	_00320_DS_
     0045 21C9                      1- 1468     	MOVIA	0xc9
     0046 04rr                      1- 1469     	SUBAR	_ledCount,W
     0047                           1- 1470     _00320_DS_:
     0047 0803                      1- 1471     	BTRSS	STATUS,0
     0048 3rrr                      1- 1472     	LGOTO	_00288_DS_
     0049 19rr                      1- 1473     	BSR	_PORTA,3
     004A 3rrr                      1- 1474     	LGOTO	_00289_DS_
     004B                           1- 1475     _00288_DS_:
     004B 1Drr                      1- 1476     	BCR	_PORTA,3
                                    1- 1477     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1478     ;;unsigned compare: left >= lit (0xFB=251), size=2
     004C                           1- 1479     _00289_DS_:
                                    1- 1480     	.line	304, "main.c"; 	ledCount > 250 ? (setbit(PORTA,4)) : (resetbit(PORTA,4));
     004C 2100                      1- 1481     	MOVIA	0x00
                                    1- 1482     	BANKSEL	_ledCount
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 04rr                      1- 1483     	SUBAR	(_ledCount + 1),W
     004F 0903                      1- 1484     	BTRSS	STATUS,2
     0050 3rrr                      1- 1485     	LGOTO	_00321_DS_
     0051 21FB                      1- 1486     	MOVIA	0xfb
     0052 04rr                      1- 1487     	SUBAR	_ledCount,W
     0053                           1- 1488     _00321_DS_:
     0053 0803                      1- 1489     	BTRSS	STATUS,0
     0054 3rrr                      1- 1490     	LGOTO	_00290_DS_
     0055 1Arr                      1- 1491     	BSR	_PORTA,4
     0056 3rrr                      1- 1492     	LGOTO	_00291_DS_
     0057                           1- 1493     _00290_DS_:
     0057 1Err                      1- 1494     	BCR	_PORTA,4
                                    1- 1495     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1496     ;;unsigned compare: left >= lit (0x12D=301), size=2
     0058                           1- 1497     _00291_DS_:
                                    1- 1498     	.line	305, "main.c"; 	if(ledCount > 300)
     0058 2101                      1- 1499     	MOVIA	0x01
                                    1- 1500     	BANKSEL	_ledCount
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 04rr                      1- 1501     	SUBAR	(_ledCount + 1),W
     005B 0903                      1- 1502     	BTRSS	STATUS,2
     005C 3rrr                      1- 1503     	LGOTO	_00322_DS_
     005D 212D                      1- 1504     	MOVIA	0x2d
     005E 04rr                      1- 1505     	SUBAR	_ledCount,W
     005F                           1- 1506     _00322_DS_:
     005F 0803                      1- 1507     	BTRSS	STATUS,0
     0060 3rrr                      1- 1508     	LGOTO	_00280_DS_
                                    1- 1509     	.line	307, "main.c"; 	if(ledCount > ledMax)
                                    1- 1510     	BANKSEL	_ledCount
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 01rr                      1- 1511     	MOVR	(_ledCount + 1),W
                                    1- 1512     	BANKSEL	_ledMax
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 04rr                      1- 1513     	SUBAR	(_ledMax + 1),W
     0065 0903                      1- 1514     	BTRSS	STATUS,2
     0066 3rrr                      1- 1515     	LGOTO	_00323_DS_
                                    1- 1516     	BANKSEL	_ledCount
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 01rr                      1- 1517     	MOVR	_ledCount,W
                                    1- 1518     	BANKSEL	_ledMax
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 04rr                      1- 1519     	SUBAR	_ledMax,W
     006B                           1- 1520     _00323_DS_:
     006B 0C03                      1- 1521     	BTRSC	STATUS,0
     006C 3rrr                      1- 1522     	LGOTO	_00277_DS_
                                    1- 1523     	.line	308, "main.c"; 	ledCount = ledMin;
                                    1- 1524     	BANKSEL	r0x1036
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1- 1525     	MOVR	r0x1036,W
                                    1- 1526     	BANKSEL	_ledCount
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 00rr                      1- 1527     	MOVAR	_ledCount
                                    1- 1528     	BANKSEL	r0x1037
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 01rr                      1- 1529     	MOVR	r0x1037,W
                                    1- 1530     	BANKSEL	_ledCount
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 00rr                      1- 1531     	MOVAR	(_ledCount + 1)
     0075                           1- 1532     _00277_DS_:
                                    1- 1533     	.line	309, "main.c"; 	ledLock = 0;		//解锁
                                    1- 1534     	BANKSEL	_ledLock
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 02rr                      1- 1535     	CLRR	_ledLock
     0077                           1- 1536     _00280_DS_:
                                    1- 1537     	.line	311, "main.c"; 	}
                                    1- 1538     	RETURN	
     0077 0010                      3-   26 m1      ret
                                    1- 1539     ; exit point of _ledCon
                                    1- 1541     ;***
                                    1- 1542     ;  pBlock Stats: dbName = C
                                    1- 1543     ;***
                                    1- 1544     ;has an exit
                                    1- 1545     ;; Starting pCode block
                                    1- 1546     .segment "code"; module=main, function=_initTimer0
     0000                           1- 1548     _initTimer0:
                                    1- 1549     ; 2 exit points
                                    1- 1550     	.line	269, "main.c"; 	PORTA = 0x23;
     0000 2123                      1- 1551     	MOVIA	0x23
     0001 00rr                      1- 1552     	MOVAR	_PORTA
                                    1- 1553     	.line	270, "main.c"; 	PORTB = 0xF8;
     0002 21F8                      1- 1554     	MOVIA	0xf8
     0003 00rr                      1- 1555     	MOVAR	_PORTB
                                    1- 1556     	.line	271, "main.c"; 	BPHCON = 0xFE;
     0004 21FE                      1- 1557     	MOVIA	0xfe
     0005 00rr                      1- 1558     	MOVAR	_BPHCON
                                    1- 1559     	.line	273, "main.c"; 	IOSTA = C_PA0_Input;
     0006 2101                      1- 1560     	MOVIA	0x01
     0007 000r                      1- 1561     	IOST	_IOSTA
                                    1- 1562     	.line	274, "main.c"; 	IOSTB =  0;	
     0008 0200                      1- 1563     	CLRA	
     0009 000r                      1- 1564     	IOST	_IOSTB
                                    1- 1565     	.line	275, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     000A 21A8                      1- 1566     	MOVIA	0xa8
     000B 00rr                      1- 1567     	MOVAR	_PCON
                                    1- 1568     	.line	276, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 1569     	MOVIA	0x01
     000D 00rr                      1- 1570     	MOVAR	_INTE
                                    1- 1571     	.line	277, "main.c"; 	INTF = 0;
     000E 02rr                      1- 1572     	CLRR	_INTF
                                    1- 1573     	.line	280, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1- 1574     	CLRA	
     0010 000r                      1- 1575     	IOST	_PCON1
                                    1- 1576     	.line	282, "main.c"; 	TMR0 = 55;
     0011 2137                      1- 1577     	MOVIA	0x37
     0012 00rr                      1- 1578     	MOVAR	_TMR0
                                    1- 1579     	.line	283, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0013 0200                      1- 1580     	CLRA	
     0014 0003                      1- 1581     	T0MD	
                                    1- 1582     	.line	285, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0015 2111                      1- 1583     	MOVIA	0x11
     0016 000r                      1- 1584     	IOST	_PCON1
                                    1- 1585     	.line	287, "main.c"; 	PORTA &= 0x23;
     0017 2123                      1- 1586     	MOVIA	0x23
     0018 10rr                      1- 1587     	ANDAR	_PORTA,F
                                    1- 1588     	.line	288, "main.c"; 	PORTB &= 0xF0;
     0019 21F0                      1- 1589     	MOVIA	0xf0
     001A 10rr                      1- 1590     	ANDAR	_PORTB,F
                                    1- 1591     	.line	289, "main.c"; 	resetbit(PORTB,3);		
     001B 1Drr                      1- 1592     	BCR	_PORTB,3
                                    1- 1593     	.line	290, "main.c"; 	resetbit(PORTA,7);
     001C 1Frr                      1- 1594     	BCR	_PORTA,7
                                    1- 1595     	.line	291, "main.c"; 	ENI();	
     001D 0004                      1- 1596     	ENI
                                    1- 1597     	.line	293, "main.c"; 	}
                                    1- 1598     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1- 1599     ; exit point of _initTimer0
                                    1- 1601     ;***
                                    1- 1602     ;  pBlock Stats: dbName = C
                                    1- 1603     ;***
                                    1- 1604     ;has an exit
                                    1- 1605     ;functions called:
                                    1- 1606     ;   _fullChrg
                                    1- 1607     ;   _halfChrg
                                    1- 1608     ;   _fullChrg
                                    1- 1609     ;   __divuint
                                    1- 1610     ;   _fullChrg
                                    1- 1611     ;   _halfChrg
                                    1- 1612     ;   _fullChrg
                                    1- 1613     ;   __divuint
                                    1- 1614     ;7 compiler assigned registers:
                                    1- 1615     ;   r0x1038
                                    1- 1616     ;   r0x1039
                                    1- 1617     ;   r0x103A
                                    1- 1618     ;   r0x103B
                                    1- 1619     ;   STK02
                                    1- 1620     ;   STK01
                                    1- 1621     ;   STK00
                                    1- 1622     ;; Starting pCode block
                                    1- 1623     .segment "code"; module=main, function=_setDuty
     0000                           1- 1625     _setDuty:
                                    1- 1626     ; 2 exit points
                                    1- 1627     	.line	180, "main.c"; 	if(dutyFlag == 0)
                                    1- 1628     	BANKSEL	_dutyFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1629     	MOVR	_dutyFlag,W
     0002 0903                      1- 1630     	BTRSS	STATUS,2
     0003 3rrr                      1- 1631     	LGOTO	_00223_DS_
                                    1- 1632     	.line	182, "main.c"; 	dutyFlag = 1;
     0004 2101                      1- 1633     	MOVIA	0x01
     0005 00rr                      1- 1634     	MOVAR	_dutyFlag
                                    1- 1635     	.line	183, "main.c"; 	if(addFlag == 1)
                                    1- 1636     	BANKSEL	_addFlag
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1- 1637     	MOVR	_addFlag,W
     0008 2401                      1- 1638     	XORIA	0x01
     0009 0903                      1- 1639     	BTRSS	STATUS,2
     000A 3rrr                      1- 1640     	LGOTO	_00198_DS_
                                    1- 1641     	.line	186, "main.c"; 	if(--duty == 0)
                                    1- 1642     	BANKSEL	_duty
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 17rr                      1- 1643     	DECRSZ	_duty,F
     000D 3rrr                      1- 1644     	LGOTO	_00199_DS_
                                    1- 1645     	.line	188, "main.c"; 	duty = 1;
     000E 2101                      1- 1646     	MOVIA	0x01
     000F 00rr                      1- 1647     	MOVAR	_duty
     0010 3rrr                      1- 1648     	LGOTO	_00199_DS_
     0011                           1- 1649     _00198_DS_:
                                    1- 1650     	.line	191, "main.c"; 	else if(addFlag == 2)
                                    1- 1651     	BANKSEL	_addFlag
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 1652     	MOVR	_addFlag,W
     0013 2402                      1- 1653     	XORIA	0x02
     0014 0903                      1- 1654     	BTRSS	STATUS,2
     0015 3rrr                      1- 1655     	LGOTO	_00199_DS_
                                    1- 1656     	.line	194, "main.c"; 	if(++duty > maxDuty)
                                    1- 1657     	BANKSEL	_duty
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 05rr                      1- 1658     	INCR	_duty,F
     0018 01rr                      1- 1659     	MOVR	_duty,W
                                    1- 1660     	BANKSEL	_maxDuty
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 04rr                      1- 1661     	SUBAR	_maxDuty,W
     001B 0C03                      1- 1662     	BTRSC	STATUS,0
     001C 3rrr                      1- 1663     	LGOTO	_00199_DS_
                                    1- 1664     	.line	196, "main.c"; 	duty = maxDuty;
     001D 01rr                      1- 1665     	MOVR	_maxDuty,W
                                    1- 1666     	BANKSEL	_duty
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1667     	MOVAR	_duty
                                    1- 1668     ;;unsigned compare: left < lit (0x41=65), size=2
     0020                           1- 1669     _00199_DS_:
                                    1- 1670     	.line	200, "main.c"; 	if(avaA < 65)
     0020 2100                      1- 1671     	MOVIA	0x00
                                    1- 1672     	BANKSEL	_avaA
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 04rr                      1- 1673     	SUBAR	(_avaA + 1),W
     0023 0903                      1- 1674     	BTRSS	STATUS,2
     0024 3rrr                      1- 1675     	LGOTO	_00265_DS_
     0025 2141                      1- 1676     	MOVIA	0x41
     0026 04rr                      1- 1677     	SUBAR	_avaA,W
     0027                           1- 1678     _00265_DS_:
     0027 0C03                      1- 1679     	BTRSC	STATUS,0
     0028 3rrr                      1- 1680     	LGOTO	_00219_DS_
                                    1- 1681     	.line	202, "main.c"; 	if(duty == 126 && (++fullCount > 200))		//未充电
                                    1- 1682     	BANKSEL	_duty
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 1683     	MOVR	_duty,W
     002B 247E                      1- 1684     	XORIA	0x7e
     002C 0903                      1- 1685     	BTRSS	STATUS,2
     002D 3rrr                      1- 1686     	LGOTO	_00201_DS_
                                    1- 1687     	BANKSEL	_fullCount
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1688     	INCR	_fullCount,F
                                    1- 1689     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1690     ;;unsigned compare: left >= lit (0xC9=201), size=1
     0030 21C9                      1- 1691     	MOVIA	0xc9
     0031 04rr                      1- 1692     	SUBAR	_fullCount,W
     0032 0803                      1- 1693     	BTRSS	STATUS,0
     0033 3rrr                      1- 1694     	LGOTO	_00201_DS_
                                    1- 1695     	.line	204, "main.c"; 	fullChrg();
     0034 2rrr                      1- 1696     	LCALL	_fullChrg
                                    1- 1697     	.line	205, "main.c"; 	workStep = 2;
     0035 2102                      1- 1698     	MOVIA	0x02
                                    1- 1699     	BANKSEL	_workStep
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 1700     	MOVAR	_workStep
                                    1- 1701     	.line	206, "main.c"; 	resetbit(PORTA,6);		//关闭风扇
     0038 1Frr                      1- 1702     	BCR	_PORTA,6
                                    1- 1703     	.line	207, "main.c"; 	startFlag = 0;
                                    1- 1704     	BANKSEL	_startFlag
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1- 1705     	CLRR	_startFlag
                                    1- 1706     	.line	208, "main.c"; 	ledStep = 0;
                                    1- 1707     	BANKSEL	_ledStep
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 02rr                      1- 1708     	CLRR	_ledStep
                                    1- 1709     	.line	209, "main.c"; 	chrgCount = 0;
                                    1- 1710     	BANKSEL	_chrgCount
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 02rr                      1- 1711     	CLRR	_chrgCount
     003F 02rr                      1- 1712     	CLRR	(_chrgCount + 1)
                                    1- 1713     	.line	210, "main.c"; 	sleepCount = 0;
                                    1- 1714     	BANKSEL	_sleepCount
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 02rr                      1- 1715     	CLRR	_sleepCount
     0042 02rr                      1- 1716     	CLRR	(_sleepCount + 1)
     0043 3rrr                      1- 1717     	LGOTO	_00223_DS_
     0044                           1- 1718     _00201_DS_:
                                    1- 1719     	.line	214, "main.c"; 	startFlag = 1;
     0044 2101                      1- 1720     	MOVIA	0x01
                                    1- 1721     	BANKSEL	_startFlag
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 00rr                      1- 1722     	MOVAR	_startFlag
                                    1- 1723     	.line	215, "main.c"; 	halfChrg();
     0047 2rrr                      1- 1724     	LCALL	_halfChrg
                                    1- 1725     	.line	216, "main.c"; 	duty = 1;
     0048 2101                      1- 1726     	MOVIA	0x01
                                    1- 1727     	BANKSEL	_duty
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 00rr                      1- 1728     	MOVAR	_duty
                                    1- 1729     	.line	217, "main.c"; 	resetbit(PORTA,6);		//关闭风扇,涓流充电
     004B 1Frr                      1- 1730     	BCR	_PORTA,6
                                    1- 1731     	.line	218, "main.c"; 	workStep = 3;
     004C 2103                      1- 1732     	MOVIA	0x03
                                    1- 1733     	BANKSEL	_workStep
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1- 1734     	MOVAR	_workStep
                                    1- 1735     	.line	219, "main.c"; 	ledStep = 0;
                                    1- 1736     	BANKSEL	_ledStep
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 02rr                      1- 1737     	CLRR	_ledStep
     0051 3rrr                      1- 1738     	LGOTO	_00223_DS_
     0052                           1- 1739     _00219_DS_:
                                    1- 1740     	.line	225, "main.c"; 	setbit(PORTA,6);		//打开风扇
     0052 1Brr                      1- 1741     	BSR	_PORTA,6
                                    1- 1742     	.line	226, "main.c"; 	fullChrg();
     0053 2rrr                      1- 1743     	LCALL	_fullChrg
                                    1- 1744     	.line	227, "main.c"; 	sleepCount = 0;
                                    1- 1745     	BANKSEL	_sleepCount
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 02rr                      1- 1746     	CLRR	_sleepCount
     0056 02rr                      1- 1747     	CLRR	(_sleepCount + 1)
                                    1- 1748     	.line	228, "main.c"; 	fullCount = 0;
                                    1- 1749     	BANKSEL	_fullCount
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 02rr                      1- 1750     	CLRR	_fullCount
                                    1- 1751     	.line	229, "main.c"; 	workStep = 1;
     0059 2101                      1- 1752     	MOVIA	0x01
                                    1- 1753     	BANKSEL	_workStep
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1- 1754     	MOVAR	_workStep
                                    1- 1755     	.line	230, "main.c"; 	sumDuty += duty;
                                    1- 1756     	BANKSEL	_duty
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 1757     	MOVR	_duty,W
                                    1- 1758     	BANKSEL	r0x1038
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 00rr                      1- 1759     	MOVAR	r0x1038
                                    1- 1760     	BANKSEL	r0x1039
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 02rr                      1- 1761     	CLRR	r0x1039
                                    1- 1762     ;;101	MOVR	r0x1038,W
                                    1- 1763     ;;99	MOVAR	r0x103A
     0062 2100                      1- 1764     	MOVIA	0x00
                                    1- 1765     	BANKSEL	r0x103B
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 00rr                      1- 1766     	MOVAR	r0x103B
                                    1- 1767     ;;100	MOVR	r0x103A,W
                                    1- 1768     	BANKSEL	r0x1038
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 01rr                      1- 1769     	MOVR	r0x1038,W
                                    1- 1770     	BANKSEL	_sumDuty
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 03rr                      1- 1771     	ADDAR	_sumDuty,F
                                    1- 1772     	BANKSEL	r0x103B
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 01rr                      1- 1773     	MOVR	r0x103B,W
     006B 0C03                      1- 1774     	BTRSC	STATUS,0
     006C 05rr                      1- 1775     	INCR	r0x103B,W
     006D 0D03                      1- 1776     	BTRSC	STATUS,2
     006E 3rrr                      1- 1777     	LGOTO	_00005_DS_
                                    1- 1778     	BANKSEL	_sumDuty
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 03rr                      1- 1779     	ADDAR	(_sumDuty + 1),F
     0071                           1- 1780     _00005_DS_:
                                    1- 1781     	.line	231, "main.c"; 	if(++dutyTime >=10)
                                    1- 1782     	BANKSEL	_dutyTime
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 05rr                      1- 1783     	INCR	_dutyTime,F
                                    1- 1784     ;;unsigned compare: left < lit (0xA=10), size=1
     0073 210A                      1- 1785     	MOVIA	0x0a
     0074 04rr                      1- 1786     	SUBAR	_dutyTime,W
     0075 0803                      1- 1787     	BTRSS	STATUS,0
     0076 3rrr                      1- 1788     	LGOTO	_00223_DS_
                                    1- 1789     	.line	233, "main.c"; 	avaDuty = sumDuty/dutyTime;
     0077 01rr                      1- 1790     	MOVR	_dutyTime,W
                                    1- 1791     	BANKSEL	r0x1038
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 00rr                      1- 1792     	MOVAR	r0x1038
                                    1- 1793     	BANKSEL	r0x1039
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 02rr                      1- 1794     	CLRR	r0x1039
                                    1- 1795     	BANKSEL	r0x1038
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 01rr                      1- 1796     	MOVR	r0x1038,W
     007E 00rr                      1- 1797     	MOVAR	STK02
     007F 2100                      1- 1798     	MOVIA	0x00
     0080 00rr                      1- 1799     	MOVAR	STK01
                                    1- 1800     	BANKSEL	_sumDuty
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 01rr                      1- 1801     	MOVR	_sumDuty,W
     0083 00rr                      1- 1802     	MOVAR	STK00
     0084 01rr                      1- 1803     	MOVR	(_sumDuty + 1),W
     0085 2rrr                      1- 1804     	LCALL	__divuint
                                    1- 1805     	BANKSEL	r0x1039
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 00rr                      1- 1806     	MOVAR	r0x1039
     0088 01rr                      1- 1807     	MOVR	STK00,W
                                    1- 1808     	BANKSEL	r0x1038
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 00rr                      1- 1809     	MOVAR	r0x1038
                                    1- 1810     	BANKSEL	_avaDuty
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 00rr                      1- 1811     	MOVAR	_avaDuty
                                    1- 1812     	.line	234, "main.c"; 	dutyTime = 0;
                                    1- 1813     	BANKSEL	_dutyTime
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 02rr                      1- 1814     	CLRR	_dutyTime
                                    1- 1815     	.line	235, "main.c"; 	sumDuty = 0;
                                    1- 1816     	BANKSEL	_sumDuty
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 02rr                      1- 1817     	CLRR	_sumDuty
     0091 02rr                      1- 1818     	CLRR	(_sumDuty + 1)
                                    1- 1819     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 1820     	.line	236, "main.c"; 	if(avaDuty < 8)
     0092 2108                      1- 1821     	MOVIA	0x08
                                    1- 1822     	BANKSEL	_avaDuty
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 04rr                      1- 1823     	SUBAR	_avaDuty,W
     0095 0C03                      1- 1824     	BTRSC	STATUS,0
     0096 3rrr                      1- 1825     	LGOTO	_00214_DS_
                                    1- 1826     	.line	238, "main.c"; 	ledStep = 1;
     0097 2101                      1- 1827     	MOVIA	0x01
                                    1- 1828     	BANKSEL	_ledStep
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 00rr                      1- 1829     	MOVAR	_ledStep
     009A 3rrr                      1- 1830     	LGOTO	_00223_DS_
                                    1- 1831     ;;unsigned compare: left < lit (0x18=24), size=1
     009B                           1- 1832     _00214_DS_:
                                    1- 1833     	.line	240, "main.c"; 	else if(avaDuty < 24)
     009B 2118                      1- 1834     	MOVIA	0x18
                                    1- 1835     	BANKSEL	_avaDuty
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 04rr                      1- 1836     	SUBAR	_avaDuty,W
     009E 0C03                      1- 1837     	BTRSC	STATUS,0
     009F 3rrr                      1- 1838     	LGOTO	_00211_DS_
                                    1- 1839     	.line	242, "main.c"; 	ledStep = 2;
     00A0 2102                      1- 1840     	MOVIA	0x02
                                    1- 1841     	BANKSEL	_ledStep
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 00rr                      1- 1842     	MOVAR	_ledStep
     00A3 3rrr                      1- 1843     	LGOTO	_00223_DS_
                                    1- 1844     ;;unsigned compare: left < lit (0x20=32), size=1
     00A4                           1- 1845     _00211_DS_:
                                    1- 1846     	.line	244, "main.c"; 	else if(avaDuty < 32)
     00A4 2120                      1- 1847     	MOVIA	0x20
                                    1- 1848     	BANKSEL	_avaDuty
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 04rr                      1- 1849     	SUBAR	_avaDuty,W
     00A7 0C03                      1- 1850     	BTRSC	STATUS,0
     00A8 3rrr                      1- 1851     	LGOTO	_00208_DS_
                                    1- 1852     	.line	246, "main.c"; 	ledStep = 3;
     00A9 2103                      1- 1853     	MOVIA	0x03
                                    1- 1854     	BANKSEL	_ledStep
     00AA rrrr                      3-   71 m1      .banksel ram_address
     00AB 00rr                      1- 1855     	MOVAR	_ledStep
     00AC 3rrr                      1- 1856     	LGOTO	_00223_DS_
                                    1- 1857     ;;unsigned compare: left < lit (0x24=36), size=1
     00AD                           1- 1858     _00208_DS_:
                                    1- 1859     	.line	248, "main.c"; 	else if(avaDuty < 36)
     00AD 2124                      1- 1860     	MOVIA	0x24
                                    1- 1861     	BANKSEL	_avaDuty
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 04rr                      1- 1862     	SUBAR	_avaDuty,W
     00B0 0C03                      1- 1863     	BTRSC	STATUS,0
     00B1 3rrr                      1- 1864     	LGOTO	_00205_DS_
                                    1- 1865     	.line	250, "main.c"; 	ledStep = 4;
     00B2 2104                      1- 1866     	MOVIA	0x04
                                    1- 1867     	BANKSEL	_ledStep
     00B3 rrrr                      3-   71 m1      .banksel ram_address
     00B4 00rr                      1- 1868     	MOVAR	_ledStep
     00B5 3rrr                      1- 1869     	LGOTO	_00223_DS_
     00B6                           1- 1870     _00205_DS_:
                                    1- 1871     	.line	254, "main.c"; 	ledStep = 5;
     00B6 2105                      1- 1872     	MOVIA	0x05
                                    1- 1873     	BANKSEL	_ledStep
     00B7 rrrr                      3-   71 m1      .banksel ram_address
     00B8 00rr                      1- 1874     	MOVAR	_ledStep
     00B9                           1- 1875     _00223_DS_:
                                    1- 1876     	.line	263, "main.c"; 	}
                                    1- 1877     	RETURN	
     00B9 0010                      3-   26 m1      ret
                                    1- 1878     ; exit point of _setDuty
                                    1- 1881     ;	code size estimation:
                                    1- 1882     ;	  651+  175 =   826 instructions ( 2002 byte)
                                    1- 1884     	end
                                    1- 1884     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuint               Label    00000000
__moduchar              Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    00000027
_00003_DS_              Label    00000027
_00004_DS_              Label    0000003C
_00005_DS_              Label    00000071
_00006_DS_              Label    0000005D
_00106_DS_              Label    00000036
_00113_DS_              Label    00000039
_00121_DS_              Label    00000014
_00123_DS_              Label    00000025
_00125_DS_              Label    0000003C
_00127_DS_              Label    0000004A
_00128_DS_              Label    0000004D
_00132_DS_              Label    00000055
_00135_DS_              Label    00000097
_00138_DS_              Label    0000008A
_00139_DS_              Label    00000099
_00141_DS_              Label    0000009F
_00143_DS_              Label    00000003
_00180_DS_              Label    0000001B
_00181_DS_              Label    0000002C
_00182_DS_              Label    00000044
_00185_DS_              Label    00000084
_00186_DS_              Label    00000091
_00198_DS_              Label    00000011
_00199_DS_              Label    00000020
_00201_DS_              Label    00000044
_00205_DS_              Label    000000B6
_00208_DS_              Label    000000AD
_00211_DS_              Label    000000A4
_00214_DS_              Label    0000009B
_00219_DS_              Label    00000052
_00223_DS_              Label    000000B9
_00265_DS_              Label    00000027
_00275_DS_              Label    00000019
_00277_DS_              Label    00000075
_00280_DS_              Label    00000077
_00282_DS_              Label    00000027
_00283_DS_              Label    00000028
_00284_DS_              Label    00000033
_00285_DS_              Label    00000034
_00286_DS_              Label    0000003F
_00287_DS_              Label    00000040
_00288_DS_              Label    0000004B
_00289_DS_              Label    0000004C
_00290_DS_              Label    00000057
_00291_DS_              Label    00000058
_00316_DS_              Label    0000000F
_00317_DS_              Label    00000023
_00318_DS_              Label    0000002F
_00319_DS_              Label    0000003B
_00320_DS_              Label    00000047
_00321_DS_              Label    00000053
_00322_DS_              Label    0000005F
_00323_DS_              Label    0000006B
_00338_DS_              Label    00000016
_00339_DS_              Label    0000001A
_00340_DS_              Label    0000001E
_00341_DS_              Label    00000022
_00342_DS_              Label    00000026
_00343_DS_              Label    0000002A
_00344_DS_              Label    0000002C
_00347_DS_              Label    00000045
_00359_DS_              Label    00000010
_00360_DS_              Label    0000003B
_00375_DS_              Label    00000009
_00377_DS_              Label    0000002A
_00382_DS_              Label    00000000
_00389_DS_              Label    00000009
_00391_DS_              Label    0000001C
_00400_DS_              Label    00000013
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_addFlag                Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_adTime                 Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_avaA                   Label    00000000
_avaDuty                Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkA                 Label    00000000
_checkV                 Label    00000000
_chrgCount              Label    00000000
_closeChrg              Label    00000000
_CMPCR                  Label    00000000
_count1S                Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_dutyFlag               Label    00000000
_dutyTime               Label    00000000
_F_AIN0_Convert         Label    00000000
_F_AIN7_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_FSR                    Label    00000000
_fullChrg               Label    00000000
_fullCount              Label    00000000
_fullFlag               Label    00000000
_halfChrg               Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initTimer0             Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_ledCon                 Label    00000000
_ledCount               Label    00000000
_ledCtr                 Label    00000000
_ledLock                Label    00000000
_ledMax                 Label    00000000
_ledMin                 Label    00000000
_ledStep                Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmStart               Label    00000000
_pwmStop                Label    00000000
_R_AIN0_DATA            Label    00000000
_R_AIN0_DATA_LB         Label    00000000
_R_AIN7_DATA            Label    00000000
_R_AIN7_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_setDuty                Label    00000000
_sleepCount             Label    00000000
_startFlag              Label    00000000
_STATUS                 Label    00000000
_sumA                   Label    00000000
_sumDuty                Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempDuty               Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCon                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    0000004A
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102F                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1035                 Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
