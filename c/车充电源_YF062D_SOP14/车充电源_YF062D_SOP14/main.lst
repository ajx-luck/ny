
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_delay
                                    1-   97     	extern	_F_wait_eoc
                                    1-   98     	extern	_F_AIN0_Convert
                                    1-   99     	extern	_F_AIN7_Convert
                                    1-  100     	extern	_checkV
                                    1-  101     	extern	_checkA
                                    1-  102     	extern	_initAD
                                    1-  103     	extern	_ledCon2
                                    1-  104     	extern	_ledCon
                                    1-  105     	extern	_initTimer0
                                    1-  106     	extern	_workCon
                                    1-  107     	extern	_isr
                                    1-  108     	extern	_main
                                    1-  109     	extern	_keyClick
                                    1-  110     	extern	_intCount
                                    1-  111     	extern	_IntFlag
                                    1-  112     	extern	_ledCount
                                    1-  113     	extern	_R_AIN0_DATA
                                    1-  114     	extern	_R_AIN0_DATA_LB
                                    1-  115     	extern	_R_AIN7_DATA
                                    1-  116     	extern	_R_AIN7_DATA_LB
                                    1-  117     	extern	_workStep
                                    1-  118     	extern	_sleepCount
                                    1-  119     	extern	_startFlag
                                    1-  120     	extern	_count1S
                                    1-  121     	extern	_fullFlag
                                    1-  122     	extern	_fullCount
                                    1-  123     	extern	_ledMin
                                    1-  124     	extern	_ledLock
                                    1-  126     	extern PSAVE
                                    1-  127     	extern SSAVE
                                    1-  128     	extern WSAVE
                                    1-  129     	extern STK12
                                    1-  130     	extern STK11
                                    1-  131     	extern STK10
                                    1-  132     	extern STK09
                                    1-  133     	extern STK08
                                    1-  134     	extern STK07
                                    1-  135     	extern STK06
                                    1-  136     	extern STK05
                                    1-  137     	extern STK04
                                    1-  138     	extern STK03
                                    1-  139     	extern STK02
                                    1-  140     	extern STK01
                                    1-  141     	extern STK00
                                    1-  143     .segment "uninit", 0x20000040
 20000040                           1-  144     PSAVE:
                                    1-  145     	.res 1
 20000041                           1-  146     SSAVE:
                                    1-  147     	.res 1
 20000042                           1-  148     WSAVE:
                                    1-  149     	.res 1
 20000043                           1-  150     STK12:
                                    1-  151     	.res 1
 20000044                           1-  152     STK11:
                                    1-  153     	.res 1
 20000045                           1-  154     STK10:
                                    1-  155     	.res 1
 20000046                           1-  156     STK09:
                                    1-  157     	.res 1
 20000047                           1-  158     STK08:
                                    1-  159     	.res 1
 20000048                           1-  160     STK07:
                                    1-  161     	.res 1
 20000049                           1-  162     STK06:
                                    1-  163     	.res 1
 2000004A                           1-  164     STK05:
                                    1-  165     	.res 1
 2000004B                           1-  166     STK04:
                                    1-  167     	.res 1
 2000004C                           1-  168     STK03:
                                    1-  169     	.res 1
 2000004D                           1-  170     STK02:
                                    1-  171     	.res 1
 2000004E                           1-  172     STK01:
                                    1-  173     	.res 1
 2000004F                           1-  174     STK00:
                                    1-  175     	.res 1
                                    1-  177     ;--------------------------------------------------------
                                    1-  178     ; global definitions
                                    1-  179     ;--------------------------------------------------------
                                    1-  180     .segment "uninit"
     0000                           1-  181     _R_AIN0_DATA:
                                    1-  182     	.res	2
                                    1-  185     .segment "uninit"
     0000                           1-  186     _R_AIN0_DATA_LB:
                                    1-  187     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     _R_AIN7_DATA:
                                    1-  192     	.res	2
                                    1-  195     .segment "uninit"
     0000                           1-  196     _R_AIN7_DATA_LB:
                                    1-  197     	.res	1
                                    1-  200     ;--------------------------------------------------------
                                    1-  201     ; absolute symbol definitions
                                    1-  202     ;--------------------------------------------------------
                                    1-  203     ;--------------------------------------------------------
                                    1-  204     ; compiler-defined variables
                                    1-  205     ;--------------------------------------------------------
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x102C:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x102D:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1028:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1029:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x1020:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x1021:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1022:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1025:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x101A:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x101B:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x101C:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x101F:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1017:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1016:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x1018:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1019:
                                    1-  253     	.res	1
                                    1-  254     ;--------------------------------------------------------
                                    1-  255     ; initialized data
                                    1-  256     ;--------------------------------------------------------
                                    1-  258     .segment "idata"
     0000                           1-  259     _keyClick:
     0000 0000                      1-  260     	dw	0x00
                                    1-  264     .segment "idata"
     0000                           1-  265     _intCount:
     0000 0000                      1-  266     	dw	0x00
                                    1-  270     .segment "idata"
     0000                           1-  271     _IntFlag:
     0000 0000                      1-  272     	dw	0x00
                                    1-  276     .segment "idata"
     0000                           1-  277     _ledCount:
     0000 0000 0000                 1-  278     	dw	0x00, 0x00
                                    1-  282     .segment "idata"
     0000                           1-  283     _workStep:
     0000 0003                      1-  284     	dw	0x03
                                    1-  288     .segment "idata"
     0000                           1-  289     _sleepCount:
     0000 0000 0000                 1-  290     	dw	0x00, 0x00
                                    1-  294     .segment "idata"
     0000                           1-  295     _startFlag:
     0000 0000                      1-  296     	dw	0x00
                                    1-  300     .segment "idata"
     0000                           1-  301     _count1S:
     0000 0000                      1-  302     	dw	0x00
                                    1-  306     .segment "idata"
     0000                           1-  307     _fullFlag:
     0000 0000                      1-  308     	dw	0x00
                                    1-  312     .segment "idata"
     0000                           1-  313     _fullCount:
     0000 0000                      1-  314     	dw	0x00
                                    1-  318     .segment "idata"
     0000                           1-  319     _ledMin:
     0000 0000                      1-  320     	dw	0x00
                                    1-  324     .segment "idata"
     0000                           1-  325     _ledLock:
     0000 0000                      1-  326     	dw	0x00
                                    1-  329     ;--------------------------------------------------------
                                    1-  330     ; overlayable items in internal ram 
                                    1-  331     ;--------------------------------------------------------
                                    1-  332     ;	udata_ovr
                                    1-  333     ;--------------------------------------------------------
                                    1-  334     ; reset vector 
                                    1-  335     ;--------------------------------------------------------
                                    1-  336     ORG	0x0000
     0000 3rrr                      1-  337     	LGOTO	__nyc_ny8_startup
                                    1-  338     ;--------------------------------------------------------
                                    1-  339     ; interrupt and initialization code
                                    1-  340     ;--------------------------------------------------------
                                    1-  341     ORG 0x0008
     0008 3rrr                      1-  342     	lgoto	__sdcc_interrupt
                                    1-  344     .segment "code"
     0000                           1-  345     __sdcc_interrupt:
                                    1-  346     ;***
                                    1-  347     ;  pBlock Stats: dbName = I
                                    1-  348     ;***
                                    1-  349     ;2 compiler assigned registers:
                                    1-  350     ;   STK00
                                    1-  351     ;   STK01
                                    1-  352     ;; Starting pCode block
     0000                           1-  353     _isr:
                                    1-  354     ; 0 exit points
                                    1-  355     	.line	41, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  356     	MOVAR	WSAVE
     0001 1503                      1-  357     	SWAPR	STATUS,W
     0002 0283                      1-  358     	CLRR	STATUS
     0003 00rr                      1-  359     	MOVAR	SSAVE
     0004 010A                      1-  360     	MOVR	PCHBUF,W
     0005 028A                      1-  361     	CLRR	PCHBUF
     0006 00rr                      1-  362     	MOVAR	PSAVE
     0007 0104                      1-  363     	MOVR	FSR,W
                                    1-  364     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  365     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  366     	MOVR	STK00,W
                                    1-  367     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  368     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  369     	MOVR	STK01,W
                                    1-  370     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  371     	MOVAR	___sdcc_saved_stk01
                                    1-  372     	.line	43, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  373     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  374     	LGOTO	_00113_DS_
                                    1-  375     	.line	45, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  376     	MOVIA	0x37
     0013 03rr                      1-  377     	ADDAR	_TMR0,F
                                    1-  378     	.line	46, "main.c"; 	intCount++;
                                    1-  379     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  380     	INCR	_intCount,F
                                    1-  381     	.line	47, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  382     	MOVR	_intCount,W
     0017 2464                      1-  383     	XORIA	0x64
     0018 0903                      1-  384     	BTRSS	STATUS,2
     0019 3rrr                      1-  385     	LGOTO	_00113_DS_
                                    1-  386     	.line	49, "main.c"; 	intCount = 0;
     001A 02rr                      1-  387     	CLRR	_intCount
                                    1-  388     	.line	50, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  389     	MOVIA	0x01
                                    1-  390     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  391     	MOVAR	_IntFlag
                                    1-  392     	.line	51, "main.c"; 	ledCount++; 
                                    1-  393     	BANKSEL	_ledCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 05rr                      1-  394     	INCR	_ledCount,F
     0020 0D03                      1-  395     	BTRSC	STATUS,2
     0021 05rr                      1-  396     	INCR	(_ledCount + 1),F
                                    1-  397     	.line	52, "main.c"; 	if(++count1S >= 10)
                                    1-  398     	BANKSEL	_count1S
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  399     	INCR	_count1S,F
                                    1-  400     ;;unsigned compare: left < lit (0xA=10), size=1
     0024 210A                      1-  401     	MOVIA	0x0a
     0025 04rr                      1-  402     	SUBAR	_count1S,W
     0026 0803                      1-  403     	BTRSS	STATUS,0
     0027 3rrr                      1-  404     	LGOTO	_00113_DS_
                                    1-  405     	.line	54, "main.c"; 	count1S = 0;
     0028 02rr                      1-  406     	CLRR	_count1S
                                    1-  407     	.line	55, "main.c"; 	if(startFlag)
                                    1-  408     	BANKSEL	_startFlag
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  409     	MOVR	_startFlag,W
     002B 0D03                      1-  410     	BTRSC	STATUS,2
     002C 3rrr                      1-  411     	LGOTO	_00106_DS_
                                    1-  412     	.line	56, "main.c"; 	sleepCount++;
                                    1-  413     	BANKSEL	_sleepCount
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 05rr                      1-  414     	INCR	_sleepCount,F
     002F 0D03                      1-  415     	BTRSC	STATUS,2
     0030 05rr                      1-  416     	INCR	(_sleepCount + 1),F
     0031 3rrr                      1-  417     	LGOTO	_00113_DS_
     0032                           1-  418     _00106_DS_:
                                    1-  419     	.line	58, "main.c"; 	sleepCount = 0;
                                    1-  420     	BANKSEL	_sleepCount
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 02rr                      1-  421     	CLRR	_sleepCount
     0034 02rr                      1-  422     	CLRR	(_sleepCount + 1)
     0035                           1-  423     _00113_DS_:
                                    1-  424     	.line	64, "main.c"; 	INTF = 0;
     0035 02rr                      1-  425     	CLRR	_INTF
                                    1-  426     	.line	66, "main.c"; 	}
                                    1-  427     	BANKSEL	___sdcc_saved_stk01
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1-  428     	MOVR	___sdcc_saved_stk01,W
     0038 00rr                      1-  429     	MOVAR	STK01
                                    1-  430     	BANKSEL	___sdcc_saved_stk00
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  431     	MOVR	___sdcc_saved_stk00,W
     003B 00rr                      1-  432     	MOVAR	STK00
                                    1-  433     	BANKSEL	___sdcc_saved_fsr
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1-  434     	MOVR	___sdcc_saved_fsr,W
     003E 0084                      1-  435     	MOVAR	FSR
     003F 01rr                      1-  436     	MOVR	PSAVE,W
     0040 008A                      1-  437     	MOVAR	PCHBUF
     0041 0283                      1-  438     	CLRR	STATUS
     0042 15rr                      1-  439     	SWAPR	SSAVE,W
     0043 0083                      1-  440     	MOVAR	STATUS
     0044 15rr                      1-  441     	SWAPR	WSAVE,F
     0045 15rr                      1-  442     	SWAPR	WSAVE,W
     0046                           1-  443     END_OF_INTERRUPT:
     0046 0011                      1-  444     	RETIE	
                                    1-  446     ;--------------------------------------------------------
                                    1-  447     ; code
                                    1-  448     ;--------------------------------------------------------
                                    1-  449     ;***
                                    1-  450     ;  pBlock Stats: dbName = M
                                    1-  451     ;***
                                    1-  452     ;has an exit
                                    1-  453     ;functions called:
                                    1-  454     ;   _initTimer0
                                    1-  455     ;   _initAD
                                    1-  456     ;   _workCon
                                    1-  457     ;   _checkA
                                    1-  458     ;   _initTimer0
                                    1-  459     ;   _initAD
                                    1-  460     ;   _workCon
                                    1-  461     ;   _checkA
                                    1-  462     ;; Starting pCode block
                                    1-  463     .segment "code"; module=main, function=_main
     0000                           1-  465     _main:
                                    1-  466     ; 2 exit points
                                    1-  467     	.line	70, "main.c"; 	initTimer0();
     0000 2rrr                      1-  468     	LCALL	_initTimer0
                                    1-  469     	.line	71, "main.c"; 	initAD();
     0001 2rrr                      1-  470     	LCALL	_initAD
     0002                           1-  471     _00121_DS_:
                                    1-  472     	.line	74, "main.c"; 	CLRWDT(); 
     0002 0002                      1-  473     	clrwdt
                                    1-  474     	.line	75, "main.c"; 	if(!IntFlag)
                                    1-  475     	BANKSEL	_IntFlag
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 01rr                      1-  476     	MOVR	_IntFlag,W
     0005 0D03                      1-  477     	BTRSC	STATUS,2
     0006 3rrr                      1-  478     	LGOTO	_00121_DS_
                                    1-  479     	.line	77, "main.c"; 	IntFlag = 0;
     0007 02rr                      1-  480     	CLRR	_IntFlag
                                    1-  481     	.line	78, "main.c"; 	workCon();
     0008 2rrr                      1-  482     	LCALL	_workCon
                                    1-  483     	.line	79, "main.c"; 	checkA();
     0009 2rrr                      1-  484     	LCALL	_checkA
     000A 3rrr                      1-  485     	LGOTO	_00121_DS_
                                    1-  486     	.line	81, "main.c"; 	}
                                    1-  487     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1-  488     ; exit point of _main
                                    1-  490     ;***
                                    1-  491     ;  pBlock Stats: dbName = C
                                    1-  492     ;***
                                    1-  493     ;has an exit
                                    1-  494     ;5 compiler assigned registers:
                                    1-  495     ;   r0x1016
                                    1-  496     ;   STK00
                                    1-  497     ;   r0x1017
                                    1-  498     ;   r0x1018
                                    1-  499     ;   r0x1019
                                    1-  500     ;; Starting pCode block
                                    1-  501     .segment "code"; module=main, function=_delay
                                    1-  503     ;local variable name mapping:
     0000                           1-  508     _delay:
                                    1-  509     ; 2 exit points
                                    1-  510     	.line	370, "main.c"; 	void delay(uint16_t time)
                                    1-  511     	BANKSEL	r0x1016
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  512     	MOVAR	r0x1016
     0002 01rr                      1-  513     	MOVR	STK00,W
                                    1-  514     	BANKSEL	r0x1017
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  515     	MOVAR	r0x1017
                                    1-  516     	.line	372, "main.c"; 	for(uint16_t i=0;i<time;i++);
                                    1-  517     	BANKSEL	r0x1018
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  518     	CLRR	r0x1018
                                    1-  519     	BANKSEL	r0x1019
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  520     	CLRR	r0x1019
     0009                           1-  521     _00375_DS_:
                                    1-  522     	BANKSEL	r0x1016
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  523     	MOVR	r0x1016,W
                                    1-  524     	BANKSEL	r0x1019
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  525     	SUBAR	r0x1019,W
     000D 0903                      1-  526     	BTRSS	STATUS,2
     000E 3rrr                      1-  527     	LGOTO	_00386_DS_
                                    1-  528     	BANKSEL	r0x1017
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  529     	MOVR	r0x1017,W
                                    1-  530     	BANKSEL	r0x1018
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  531     	SUBAR	r0x1018,W
     0013                           1-  532     _00386_DS_:
     0013 0C03                      1-  533     	BTRSC	STATUS,0
     0014 3rrr                      1-  534     	LGOTO	_00377_DS_
                                    1-  535     	BANKSEL	r0x1018
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  536     	INCR	r0x1018,F
     0017 0903                      1-  537     	BTRSS	STATUS,2
     0018 3rrr                      1-  538     	LGOTO	_00001_DS_
                                    1-  539     	BANKSEL	r0x1019
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  540     	INCR	r0x1019,F
     001B                           1-  541     _00001_DS_:
     001B 3rrr                      1-  542     	LGOTO	_00375_DS_
     001C                           1-  543     _00377_DS_:
                                    1-  544     	.line	373, "main.c"; 	}
                                    1-  545     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  546     ; exit point of _delay
                                    1-  548     ;***
                                    1-  549     ;  pBlock Stats: dbName = C
                                    1-  550     ;***
                                    1-  551     ;has an exit
                                    1-  552     ;; Starting pCode block
                                    1-  553     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  555     _F_wait_eoc:
                                    1-  556     ; 2 exit points
     0000                           1-  557     _00368_DS_:
                                    1-  558     	.line	366, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  559     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  560     	LGOTO	_00368_DS_
                                    1-  561     	.line	368, "main.c"; 	}
                                    1-  562     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  563     ; exit point of _F_wait_eoc
                                    1-  565     ;***
                                    1-  566     ;  pBlock Stats: dbName = C
                                    1-  567     ;***
                                    1-  568     ;has an exit
                                    1-  569     ;functions called:
                                    1-  570     ;   _delay
                                    1-  571     ;   _F_wait_eoc
                                    1-  572     ;   _delay
                                    1-  573     ;   _F_wait_eoc
                                    1-  574     ;7 compiler assigned registers:
                                    1-  575     ;   r0x101A
                                    1-  576     ;   STK00
                                    1-  577     ;   r0x101B
                                    1-  578     ;   r0x101C
                                    1-  579     ;   r0x101D
                                    1-  580     ;   r0x101E
                                    1-  581     ;   r0x101F
                                    1-  582     ;; Starting pCode block
                                    1-  583     .segment "code"; module=main, function=_F_AIN0_Convert
                                    1-  585     ;local variable name mapping:
     0000                           1-  588     _F_AIN0_Convert:
                                    1-  589     ; 2 exit points
                                    1-  590     	.line	347, "main.c"; 	void F_AIN0_Convert(char count)
                                    1-  591     	BANKSEL	r0x101A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  592     	MOVAR	r0x101A
                                    1-  593     	.line	350, "main.c"; 	ADMD  = 0x90 | C_ADC_PA0;				// Select AIN0(PA0) pad as ADC input
     0002 2190                      1-  594     	MOVIA	0x90
     0003 00rr                      1-  595     	MOVAR	_ADMD
                                    1-  596     	.line	351, "main.c"; 	delay(100);
     0004 2164                      1-  597     	MOVIA	0x64
     0005 00rr                      1-  598     	MOVAR	STK00
     0006 2100                      1-  599     	MOVIA	0x00
     0007 2rrr                      1-  600     	LCALL	_delay
                                    1-  601     	.line	352, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  602     	MOVIA	0x01
                                    1-  603     	BANKSEL	r0x101B
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  604     	MOVAR	r0x101B
     000B                           1-  605     _00361_DS_:
                                    1-  606     	BANKSEL	r0x101B
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1-  607     	MOVR	r0x101B,W
                                    1-  608     	BANKSEL	r0x101A
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  609     	SUBAR	r0x101A,W
     000F 0803                      1-  610     	BTRSS	STATUS,0
     0010 3rrr                      1-  611     	LGOTO	_00363_DS_
                                    1-  612     	.line	354, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0011 1Brr                      1-  613     	BSR	_ADMDbits,6
                                    1-  614     	.line	355, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0012 2rrr                      1-  615     	LCALL	_F_wait_eoc
                                    1-  616     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  617     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1-  618     	.line	356, "main.c"; 	if(i>4)
     0013 2105                      1-  619     	MOVIA	0x05
                                    1-  620     	BANKSEL	r0x101B
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1-  621     	SUBAR	r0x101B,W
     0016 0803                      1-  622     	BTRSS	STATUS,0
     0017 3rrr                      1-  623     	LGOTO	_00002_DS_
                                    1-  624     	.line	358, "main.c"; 	R_AIN0_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1-  625     	MOVIA	0x0f
     0019 10rr                      1-  626     	ANDAR	_ADR,W
                                    1-  627     ;;3	MOVAR	r0x101C
                                    1-  628     	BANKSEL	_R_AIN0_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1-  629     	ADDAR	_R_AIN0_DATA_LB,F
                                    1-  630     	.line	359, "main.c"; 	R_AIN0_DATA    += ADD; 
     001C 01rr                      1-  631     	MOVR	_ADD,W
                                    1-  632     	BANKSEL	r0x101C
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  633     	MOVAR	r0x101C
                                    1-  634     ;;1	CLRR	r0x101D
                                    1-  635     ;;106	MOVR	r0x101C,W
                                    1-  636     ;;104	MOVAR	r0x101E
     001F 2100                      1-  637     	MOVIA	0x00
                                    1-  638     	BANKSEL	r0x101F
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1-  639     	MOVAR	r0x101F
                                    1-  640     ;;105	MOVR	r0x101E,W
                                    1-  641     	BANKSEL	r0x101C
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  642     	MOVR	r0x101C,W
                                    1-  643     	BANKSEL	_R_AIN0_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1-  644     	ADDAR	_R_AIN0_DATA,F
                                    1-  645     	BANKSEL	r0x101F
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  646     	MOVR	r0x101F,W
     0028 0C03                      1-  647     	BTRSC	STATUS,0
     0029 05rr                      1-  648     	INCR	r0x101F,W
     002A 0D03                      1-  649     	BTRSC	STATUS,2
     002B 3rrr                      1-  650     	LGOTO	_00002_DS_
                                    1-  651     	BANKSEL	_R_AIN0_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1-  652     	ADDAR	(_R_AIN0_DATA + 1),F
     002E                           1-  653     _00002_DS_:
                                    1-  654     	.line	352, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  655     	BANKSEL	r0x101B
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1-  656     	INCR	r0x101B,F
     0030 3rrr                      1-  657     	LGOTO	_00361_DS_
     0031                           1-  658     _00363_DS_:
                                    1-  659     	.line	362, "main.c"; 	}
                                    1-  660     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1-  661     ; exit point of _F_AIN0_Convert
                                    1-  663     ;***
                                    1-  664     ;  pBlock Stats: dbName = C
                                    1-  665     ;***
                                    1-  666     ;has an exit
                                    1-  667     ;functions called:
                                    1-  668     ;   _delay
                                    1-  669     ;   _F_wait_eoc
                                    1-  670     ;   _delay
                                    1-  671     ;   _F_wait_eoc
                                    1-  672     ;7 compiler assigned registers:
                                    1-  673     ;   r0x1020
                                    1-  674     ;   STK00
                                    1-  675     ;   r0x1021
                                    1-  676     ;   r0x1022
                                    1-  677     ;   r0x1023
                                    1-  678     ;   r0x1024
                                    1-  679     ;   r0x1025
                                    1-  680     ;; Starting pCode block
                                    1-  681     .segment "code"; module=main, function=_F_AIN7_Convert
                                    1-  683     ;local variable name mapping:
     0000                           1-  686     _F_AIN7_Convert:
                                    1-  687     ; 2 exit points
                                    1-  688     	.line	329, "main.c"; 	void F_AIN7_Convert(char count)
                                    1-  689     	BANKSEL	r0x1020
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  690     	MOVAR	r0x1020
                                    1-  691     	.line	332, "main.c"; 	ADMD  = 0x90 | C_ADC_PB2;				// Select AIN0(PA0) pad as ADC input
     0002 2197                      1-  692     	MOVIA	0x97
     0003 00rr                      1-  693     	MOVAR	_ADMD
                                    1-  694     	.line	333, "main.c"; 	delay(100);
     0004 2164                      1-  695     	MOVIA	0x64
     0005 00rr                      1-  696     	MOVAR	STK00
     0006 2100                      1-  697     	MOVIA	0x00
     0007 2rrr                      1-  698     	LCALL	_delay
                                    1-  699     	.line	334, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  700     	MOVIA	0x01
                                    1-  701     	BANKSEL	r0x1021
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  702     	MOVAR	r0x1021
     000B                           1-  703     _00350_DS_:
                                    1-  704     	BANKSEL	r0x1021
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1-  705     	MOVR	r0x1021,W
                                    1-  706     	BANKSEL	r0x1020
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  707     	SUBAR	r0x1020,W
     000F 0803                      1-  708     	BTRSS	STATUS,0
     0010 3rrr                      1-  709     	LGOTO	_00352_DS_
                                    1-  710     	.line	336, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0011 1Brr                      1-  711     	BSR	_ADMDbits,6
                                    1-  712     	.line	337, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0012 2rrr                      1-  713     	LCALL	_F_wait_eoc
                                    1-  714     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  715     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1-  716     	.line	338, "main.c"; 	if(i>4)
     0013 2105                      1-  717     	MOVIA	0x05
                                    1-  718     	BANKSEL	r0x1021
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1-  719     	SUBAR	r0x1021,W
     0016 0803                      1-  720     	BTRSS	STATUS,0
     0017 3rrr                      1-  721     	LGOTO	_00003_DS_
                                    1-  722     	.line	340, "main.c"; 	R_AIN7_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1-  723     	MOVIA	0x0f
     0019 10rr                      1-  724     	ANDAR	_ADR,W
                                    1-  725     ;;3	MOVAR	r0x1022
                                    1-  726     	BANKSEL	_R_AIN7_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1-  727     	ADDAR	_R_AIN7_DATA_LB,F
                                    1-  728     	.line	341, "main.c"; 	R_AIN7_DATA    += ADD; 
     001C 01rr                      1-  729     	MOVR	_ADD,W
                                    1-  730     	BANKSEL	r0x1022
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  731     	MOVAR	r0x1022
                                    1-  732     ;;1	CLRR	r0x1023
                                    1-  733     ;;103	MOVR	r0x1022,W
                                    1-  734     ;;101	MOVAR	r0x1024
     001F 2100                      1-  735     	MOVIA	0x00
                                    1-  736     	BANKSEL	r0x1025
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1-  737     	MOVAR	r0x1025
                                    1-  738     ;;102	MOVR	r0x1024,W
                                    1-  739     	BANKSEL	r0x1022
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  740     	MOVR	r0x1022,W
                                    1-  741     	BANKSEL	_R_AIN7_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1-  742     	ADDAR	_R_AIN7_DATA,F
                                    1-  743     	BANKSEL	r0x1025
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  744     	MOVR	r0x1025,W
     0028 0C03                      1-  745     	BTRSC	STATUS,0
     0029 05rr                      1-  746     	INCR	r0x1025,W
     002A 0D03                      1-  747     	BTRSC	STATUS,2
     002B 3rrr                      1-  748     	LGOTO	_00003_DS_
                                    1-  749     	BANKSEL	_R_AIN7_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1-  750     	ADDAR	(_R_AIN7_DATA + 1),F
     002E                           1-  751     _00003_DS_:
                                    1-  752     	.line	334, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  753     	BANKSEL	r0x1021
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1-  754     	INCR	r0x1021,F
     0030 3rrr                      1-  755     	LGOTO	_00350_DS_
     0031                           1-  756     _00352_DS_:
                                    1-  757     	.line	344, "main.c"; 	}
                                    1-  758     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1-  759     ; exit point of _F_AIN7_Convert
                                    1-  761     ;***
                                    1-  762     ;  pBlock Stats: dbName = C
                                    1-  763     ;***
                                    1-  764     ;has an exit
                                    1-  765     ;functions called:
                                    1-  766     ;   _F_AIN7_Convert
                                    1-  767     ;   _F_AIN7_Convert
                                    1-  768     ;4 compiler assigned registers:
                                    1-  769     ;   r0x1026
                                    1-  770     ;   r0x1027
                                    1-  771     ;   r0x1028
                                    1-  772     ;   r0x1029
                                    1-  773     ;; Starting pCode block
                                    1-  774     .segment "code"; module=main, function=_checkV
     0000                           1-  776     _checkV:
                                    1-  777     ; 2 exit points
                                    1-  778     	.line	256, "main.c"; 	PACON = C_PB2_AIN7;
     0000 2180                      1-  779     	MOVIA	0x80
     0001 00rr                      1-  780     	MOVAR	_PACON
                                    1-  781     	.line	257, "main.c"; 	R_AIN7_DATA=R_AIN7_DATA_LB=0x00;
                                    1-  782     	BANKSEL	_R_AIN7_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  783     	CLRR	_R_AIN7_DATA_LB
                                    1-  784     	BANKSEL	_R_AIN7_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  785     	CLRR	_R_AIN7_DATA
     0006 02rr                      1-  786     	CLRR	(_R_AIN7_DATA + 1)
                                    1-  787     	.line	258, "main.c"; 	F_AIN7_Convert(12);					// execute AIN0 ADC converting 8 times
     0007 210C                      1-  788     	MOVIA	0x0c
     0008 2rrr                      1-  789     	LCALL	_F_AIN7_Convert
                                    1-  790     	.line	259, "main.c"; 	R_AIN7_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  791     	BANKSEL	_R_AIN7_DATA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 15rr                      1-  792     	SWAPR	(_R_AIN7_DATA + 1),W
     000B 22F0                      1-  793     	ANDIA	0xf0
     000C 00rr                      1-  794     	MOVAR	(_R_AIN7_DATA + 1)
     000D 15rr                      1-  795     	SWAPR	_R_AIN7_DATA,W
     000E 00rr                      1-  796     	MOVAR	_R_AIN7_DATA
     000F 220F                      1-  797     	ANDIA	0x0f
     0010 11rr                      1-  798     	IORAR	(_R_AIN7_DATA + 1),F
     0011 12rr                      1-  799     	XORAR	_R_AIN7_DATA,F
                                    1-  800     	.line	260, "main.c"; 	R_AIN7_DATA_LB &= 0xF0;				// Only get Bit7~4
     0012 21F0                      1-  801     	MOVIA	0xf0
                                    1-  802     	BANKSEL	_R_AIN7_DATA_LB
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 10rr                      1-  803     	ANDAR	_R_AIN7_DATA_LB,F
                                    1-  804     	.line	261, "main.c"; 	R_AIN7_DATA += R_AIN7_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0015 01rr                      1-  805     	MOVR	_R_AIN7_DATA_LB,W
                                    1-  806     	BANKSEL	r0x1028
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1-  807     	MOVAR	r0x1028
                                    1-  808     ;;1	MOVAR	r0x1026
                                    1-  809     ;;1	CLRR	r0x1027
                                    1-  810     ;;100	MOVR	r0x1026,W
     0018 2100                      1-  811     	MOVIA	0x00
                                    1-  812     	BANKSEL	r0x1029
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1-  813     	MOVAR	r0x1029
                                    1-  814     	BANKSEL	r0x1028
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1-  815     	MOVR	r0x1028,W
                                    1-  816     	BANKSEL	_R_AIN7_DATA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 03rr                      1-  817     	ADDAR	_R_AIN7_DATA,F
                                    1-  818     	BANKSEL	r0x1029
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  819     	MOVR	r0x1029,W
     0021 0C03                      1-  820     	BTRSC	STATUS,0
     0022 05rr                      1-  821     	INCR	r0x1029,W
     0023 0D03                      1-  822     	BTRSC	STATUS,2
     0024 3rrr                      1-  823     	LGOTO	_00004_DS_
                                    1-  824     	BANKSEL	_R_AIN7_DATA
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 03rr                      1-  825     	ADDAR	(_R_AIN7_DATA + 1),F
                                    1-  826     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0027                           1-  827     _00004_DS_:
                                    1-  828     	.line	262, "main.c"; 	R_AIN7_DATA >>=3;					// R_AIN0_DATA divided 8
     0027 1C03                      1-  829     	BCR	STATUS,0
                                    1-  830     	BANKSEL	_R_AIN7_DATA
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 13rr                      1-  831     	RRR	(_R_AIN7_DATA + 1),F
     002A 13rr                      1-  832     	RRR	_R_AIN7_DATA,F
                                    1-  833     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002B 1C03                      1-  834     	BCR	STATUS,0
     002C 13rr                      1-  835     	RRR	(_R_AIN7_DATA + 1),F
     002D 13rr                      1-  836     	RRR	_R_AIN7_DATA,F
                                    1-  837     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002E 1C03                      1-  838     	BCR	STATUS,0
     002F 13rr                      1-  839     	RRR	(_R_AIN7_DATA + 1),F
     0030 13rr                      1-  840     	RRR	_R_AIN7_DATA,F
                                    1-  841     	.line	263, "main.c"; 	if(ledLock)
                                    1-  842     	BANKSEL	_ledLock
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1-  843     	MOVR	_ledLock,W
     0033 0903                      1-  844     	BTRSS	STATUS,2
                                    1-  845     	.line	265, "main.c"; 	return;
     0034 3rrr                      1-  846     	LGOTO	_00302_DS_
                                    1-  847     	.line	267, "main.c"; 	if(R_AIN7_DATA < 573)	//小于0.8A
     0035 2102                      1-  848     	MOVIA	0x02
                                    1-  849     	BANKSEL	_R_AIN7_DATA
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 04rr                      1-  850     	SUBAR	(_R_AIN7_DATA + 1),W
     0038 0903                      1-  851     	BTRSS	STATUS,2
     0039 3rrr                      1-  852     	LGOTO	_00334_DS_
     003A 213D                      1-  853     	MOVIA	0x3d
     003B 04rr                      1-  854     	SUBAR	_R_AIN7_DATA,W
     003C                           1-  855     _00334_DS_:
     003C 0C03                      1-  856     	BTRSC	STATUS,0
     003D 3rrr                      1-  857     	LGOTO	_00300_DS_
                                    1-  858     	.line	269, "main.c"; 	workStep = 2;
     003E 2102                      1-  859     	MOVIA	0x02
                                    1-  860     	BANKSEL	_workStep
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 00rr                      1-  861     	MOVAR	_workStep
                                    1-  862     	.line	270, "main.c"; 	PORTA |= 0x4C;		//亮4个灯
     0041 214C                      1-  863     	MOVIA	0x4c
     0042 11rr                      1-  864     	IORAR	_PORTA,F
                                    1-  865     	.line	271, "main.c"; 	PORTB |= 0x03;
     0043 2103                      1-  866     	MOVIA	0x03
     0044 11rr                      1-  867     	IORAR	_PORTB,F
                                    1-  868     	.line	272, "main.c"; 	startFlag = 0;
                                    1-  869     	BANKSEL	_startFlag
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 02rr                      1-  870     	CLRR	_startFlag
                                    1-  871     	.line	273, "main.c"; 	resetbit(PORTB,3);			
     0047 1Drr                      1-  872     	BCR	_PORTB,3
                                    1-  873     	.line	274, "main.c"; 	resetbit(PORTA,7);
     0048 1Frr                      1-  874     	BCR	_PORTA,7
                                    1-  875     	.line	275, "main.c"; 	setbit(PORTA,6);	//打开风扇
     0049 1Brr                      1-  876     	BSR	_PORTA,6
                                    1-  877     	.line	276, "main.c"; 	fullFlag = 0;
                                    1-  878     	BANKSEL	_fullFlag
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 02rr                      1-  879     	CLRR	_fullFlag
     004C 3rrr                      1-  880     	LGOTO	_00302_DS_
                                    1-  881     ;;unsigned compare: left < lit (0x629=1577), size=2
     004D                           1-  882     _00300_DS_:
                                    1-  883     	.line	278, "main.c"; 	else if(R_AIN7_DATA < 1577)		//小于2.45A   亮3个，闪2个
     004D 2106                      1-  884     	MOVIA	0x06
                                    1-  885     	BANKSEL	_R_AIN7_DATA
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 04rr                      1-  886     	SUBAR	(_R_AIN7_DATA + 1),W
     0050 0903                      1-  887     	BTRSS	STATUS,2
     0051 3rrr                      1-  888     	LGOTO	_00335_DS_
     0052 2129                      1-  889     	MOVIA	0x29
     0053 04rr                      1-  890     	SUBAR	_R_AIN7_DATA,W
     0054                           1-  891     _00335_DS_:
     0054 0C03                      1-  892     	BTRSC	STATUS,0
     0055 3rrr                      1-  893     	LGOTO	_00297_DS_
                                    1-  894     	.line	280, "main.c"; 	ledMin = 150;
     0056 2196                      1-  895     	MOVIA	0x96
                                    1-  896     	BANKSEL	_ledMin
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1-  897     	MOVAR	_ledMin
                                    1-  898     ;;unsigned compare: left < lit (0x96=150), size=2
                                    1-  899     	.line	281, "main.c"; 	if(ledCount < ledMin)
     0059 2100                      1-  900     	MOVIA	0x00
                                    1-  901     	BANKSEL	_ledCount
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 04rr                      1-  902     	SUBAR	(_ledCount + 1),W
     005C 0903                      1-  903     	BTRSS	STATUS,2
     005D 3rrr                      1-  904     	LGOTO	_00336_DS_
     005E 2196                      1-  905     	MOVIA	0x96
     005F 04rr                      1-  906     	SUBAR	_ledCount,W
     0060                           1-  907     _00336_DS_:
     0060 0C03                      1-  908     	BTRSC	STATUS,0
     0061 3rrr                      1-  909     	LGOTO	_00281_DS_
                                    1-  910     	.line	282, "main.c"; 	ledCount = ledMin;
     0062 2196                      1-  911     	MOVIA	0x96
                                    1-  912     	BANKSEL	_ledCount
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 00rr                      1-  913     	MOVAR	_ledCount
     0065 02rr                      1-  914     	CLRR	(_ledCount + 1)
     0066                           1-  915     _00281_DS_:
                                    1-  916     	.line	283, "main.c"; 	workStep = 1;
     0066 2101                      1-  917     	MOVIA	0x01
                                    1-  918     	BANKSEL	_workStep
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1-  919     	MOVAR	_workStep
                                    1-  920     	.line	284, "main.c"; 	startFlag = 0;
                                    1-  921     	BANKSEL	_startFlag
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 02rr                      1-  922     	CLRR	_startFlag
                                    1-  923     	.line	285, "main.c"; 	resetbit(PORTB,3);		
     006B 1Drr                      1-  924     	BCR	_PORTB,3
                                    1-  925     	.line	286, "main.c"; 	resetbit(PORTA,7);
     006C 1Frr                      1-  926     	BCR	_PORTA,7
                                    1-  927     	.line	287, "main.c"; 	setbit(PORTA,6);	//打开风扇
     006D 1Brr                      1-  928     	BSR	_PORTA,6
                                    1-  929     	.line	288, "main.c"; 	fullFlag = 0;
                                    1-  930     	BANKSEL	_fullFlag
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 02rr                      1-  931     	CLRR	_fullFlag
     0070 3rrr                      1-  932     	LGOTO	_00302_DS_
                                    1-  933     ;;unsigned compare: left < lit (0x866=2150), size=2
     0071                           1-  934     _00297_DS_:
                                    1-  935     	.line	290, "main.c"; 	else if(R_AIN7_DATA < 2150)		//小于2.48A   亮2个，闪3个
     0071 2108                      1-  936     	MOVIA	0x08
                                    1-  937     	BANKSEL	_R_AIN7_DATA
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 04rr                      1-  938     	SUBAR	(_R_AIN7_DATA + 1),W
     0074 0903                      1-  939     	BTRSS	STATUS,2
     0075 3rrr                      1-  940     	LGOTO	_00337_DS_
     0076 2166                      1-  941     	MOVIA	0x66
     0077 04rr                      1-  942     	SUBAR	_R_AIN7_DATA,W
     0078                           1-  943     _00337_DS_:
     0078 0C03                      1-  944     	BTRSC	STATUS,0
     0079 3rrr                      1-  945     	LGOTO	_00294_DS_
                                    1-  946     	.line	292, "main.c"; 	ledMin = 100;
     007A 2164                      1-  947     	MOVIA	0x64
                                    1-  948     	BANKSEL	_ledMin
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 00rr                      1-  949     	MOVAR	_ledMin
                                    1-  950     ;;unsigned compare: left < lit (0x64=100), size=2
                                    1-  951     	.line	293, "main.c"; 	if(ledCount < ledMin)
     007D 2100                      1-  952     	MOVIA	0x00
                                    1-  953     	BANKSEL	_ledCount
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 04rr                      1-  954     	SUBAR	(_ledCount + 1),W
     0080 0903                      1-  955     	BTRSS	STATUS,2
     0081 3rrr                      1-  956     	LGOTO	_00338_DS_
     0082 2164                      1-  957     	MOVIA	0x64
     0083 04rr                      1-  958     	SUBAR	_ledCount,W
     0084                           1-  959     _00338_DS_:
     0084 0C03                      1-  960     	BTRSC	STATUS,0
     0085 3rrr                      1-  961     	LGOTO	_00283_DS_
                                    1-  962     	.line	294, "main.c"; 	ledCount = ledMin;
     0086 2164                      1-  963     	MOVIA	0x64
                                    1-  964     	BANKSEL	_ledCount
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 00rr                      1-  965     	MOVAR	_ledCount
     0089 02rr                      1-  966     	CLRR	(_ledCount + 1)
     008A                           1-  967     _00283_DS_:
                                    1-  968     	.line	295, "main.c"; 	workStep = 1;
     008A 2101                      1-  969     	MOVIA	0x01
                                    1-  970     	BANKSEL	_workStep
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 00rr                      1-  971     	MOVAR	_workStep
                                    1-  972     	.line	296, "main.c"; 	startFlag = 0;
                                    1-  973     	BANKSEL	_startFlag
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 02rr                      1-  974     	CLRR	_startFlag
                                    1-  975     	.line	297, "main.c"; 	resetbit(PORTB,3);		
     008F 1Drr                      1-  976     	BCR	_PORTB,3
                                    1-  977     	.line	298, "main.c"; 	resetbit(PORTA,7);
     0090 1Frr                      1-  978     	BCR	_PORTA,7
                                    1-  979     	.line	299, "main.c"; 	setbit(PORTA,6);	//打开风扇
     0091 1Brr                      1-  980     	BSR	_PORTA,6
                                    1-  981     	.line	300, "main.c"; 	fullFlag = 0;
                                    1-  982     	BANKSEL	_fullFlag
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 02rr                      1-  983     	CLRR	_fullFlag
     0094 3rrr                      1-  984     	LGOTO	_00302_DS_
                                    1-  985     ;;unsigned compare: left < lit (0xA8F=2703), size=2
     0095                           1-  986     _00294_DS_:
                                    1-  987     	.line	302, "main.c"; 	else if(R_AIN7_DATA < 2703)		//大于62.5V  PB2脚 1.32V   亮1个，闪4个
     0095 210A                      1-  988     	MOVIA	0x0a
                                    1-  989     	BANKSEL	_R_AIN7_DATA
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 04rr                      1-  990     	SUBAR	(_R_AIN7_DATA + 1),W
     0098 0903                      1-  991     	BTRSS	STATUS,2
     0099 3rrr                      1-  992     	LGOTO	_00339_DS_
     009A 218F                      1-  993     	MOVIA	0x8f
     009B 04rr                      1-  994     	SUBAR	_R_AIN7_DATA,W
     009C                           1-  995     _00339_DS_:
     009C 0C03                      1-  996     	BTRSC	STATUS,0
     009D 3rrr                      1-  997     	LGOTO	_00291_DS_
                                    1-  998     	.line	304, "main.c"; 	ledMin = 50;
     009E 2132                      1-  999     	MOVIA	0x32
                                    1- 1000     	BANKSEL	_ledMin
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 00rr                      1- 1001     	MOVAR	_ledMin
                                    1- 1002     ;;unsigned compare: left < lit (0x32=50), size=2
                                    1- 1003     	.line	305, "main.c"; 	if(ledCount < ledMin)
     00A1 2100                      1- 1004     	MOVIA	0x00
                                    1- 1005     	BANKSEL	_ledCount
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 04rr                      1- 1006     	SUBAR	(_ledCount + 1),W
     00A4 0903                      1- 1007     	BTRSS	STATUS,2
     00A5 3rrr                      1- 1008     	LGOTO	_00340_DS_
     00A6 2132                      1- 1009     	MOVIA	0x32
     00A7 04rr                      1- 1010     	SUBAR	_ledCount,W
     00A8                           1- 1011     _00340_DS_:
     00A8 0C03                      1- 1012     	BTRSC	STATUS,0
     00A9 3rrr                      1- 1013     	LGOTO	_00285_DS_
                                    1- 1014     	.line	306, "main.c"; 	ledCount = ledMin;
     00AA 2132                      1- 1015     	MOVIA	0x32
                                    1- 1016     	BANKSEL	_ledCount
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 00rr                      1- 1017     	MOVAR	_ledCount
     00AD 02rr                      1- 1018     	CLRR	(_ledCount + 1)
     00AE                           1- 1019     _00285_DS_:
                                    1- 1020     	.line	307, "main.c"; 	workStep = 1;
     00AE 2101                      1- 1021     	MOVIA	0x01
                                    1- 1022     	BANKSEL	_workStep
     00AF rrrr                      3-   71 m1      .banksel ram_address
     00B0 00rr                      1- 1023     	MOVAR	_workStep
                                    1- 1024     	.line	308, "main.c"; 	startFlag = 0;
                                    1- 1025     	BANKSEL	_startFlag
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 02rr                      1- 1026     	CLRR	_startFlag
                                    1- 1027     	.line	309, "main.c"; 	resetbit(PORTB,3);		
     00B3 1Drr                      1- 1028     	BCR	_PORTB,3
                                    1- 1029     	.line	310, "main.c"; 	resetbit(PORTA,7);
     00B4 1Frr                      1- 1030     	BCR	_PORTA,7
                                    1- 1031     	.line	311, "main.c"; 	setbit(PORTA,6);	//打开风扇
     00B5 1Brr                      1- 1032     	BSR	_PORTA,6
                                    1- 1033     	.line	312, "main.c"; 	fullFlag = 0;
                                    1- 1034     	BANKSEL	_fullFlag
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 02rr                      1- 1035     	CLRR	_fullFlag
     00B8 3rrr                      1- 1036     	LGOTO	_00302_DS_
                                    1- 1037     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1038     ;;unsigned compare: left >= lit (0xA90=2704), size=2
     00B9                           1- 1039     _00291_DS_:
                                    1- 1040     	.line	314, "main.c"; 	else if(R_AIN7_DATA > 2703)		//小于62.5V  PB2脚 1.32V   亮0个，闪5个
     00B9 210A                      1- 1041     	MOVIA	0x0a
                                    1- 1042     	BANKSEL	_R_AIN7_DATA
     00BA rrrr                      3-   71 m1      .banksel ram_address
     00BB 04rr                      1- 1043     	SUBAR	(_R_AIN7_DATA + 1),W
     00BC 0903                      1- 1044     	BTRSS	STATUS,2
     00BD 3rrr                      1- 1045     	LGOTO	_00341_DS_
     00BE 2190                      1- 1046     	MOVIA	0x90
     00BF 04rr                      1- 1047     	SUBAR	_R_AIN7_DATA,W
     00C0                           1- 1048     _00341_DS_:
     00C0 0803                      1- 1049     	BTRSS	STATUS,0
     00C1 3rrr                      1- 1050     	LGOTO	_00302_DS_
                                    1- 1051     	.line	316, "main.c"; 	ledMin = 0;
                                    1- 1052     	BANKSEL	_ledMin
     00C2 rrrr                      3-   71 m1      .banksel ram_address
     00C3 02rr                      1- 1053     	CLRR	_ledMin
                                    1- 1054     ;;unsigned compare: left < lit (0x0=0), size=2
                                    1- 1055     	.line	317, "main.c"; 	if(ledCount < ledMin)
     00C4 1C03                      1- 1056     	BCR	STATUS,0
     00C5 0803                      1- 1057     	BTRSS	STATUS,0
     00C6 3rrr                      1- 1058     	LGOTO	_00287_DS_
                                    1- 1059     	.line	318, "main.c"; 	ledCount = ledMin;
                                    1- 1060     	BANKSEL	_ledCount
     00C7 rrrr                      3-   71 m1      .banksel ram_address
     00C8 02rr                      1- 1061     	CLRR	_ledCount
     00C9 02rr                      1- 1062     	CLRR	(_ledCount + 1)
     00CA                           1- 1063     _00287_DS_:
                                    1- 1064     	.line	319, "main.c"; 	workStep = 1;
     00CA 2101                      1- 1065     	MOVIA	0x01
                                    1- 1066     	BANKSEL	_workStep
     00CB rrrr                      3-   71 m1      .banksel ram_address
     00CC 00rr                      1- 1067     	MOVAR	_workStep
                                    1- 1068     	.line	320, "main.c"; 	startFlag = 0;
                                    1- 1069     	BANKSEL	_startFlag
     00CD rrrr                      3-   71 m1      .banksel ram_address
     00CE 02rr                      1- 1070     	CLRR	_startFlag
                                    1- 1071     	.line	321, "main.c"; 	resetbit(PORTB,3);		
     00CF 1Drr                      1- 1072     	BCR	_PORTB,3
                                    1- 1073     	.line	322, "main.c"; 	resetbit(PORTA,7);
     00D0 1Frr                      1- 1074     	BCR	_PORTA,7
                                    1- 1075     	.line	323, "main.c"; 	setbit(PORTA,6);	//打开风扇
     00D1 1Brr                      1- 1076     	BSR	_PORTA,6
                                    1- 1077     	.line	324, "main.c"; 	fullFlag = 0;
                                    1- 1078     	BANKSEL	_fullFlag
     00D2 rrrr                      3-   71 m1      .banksel ram_address
     00D3 02rr                      1- 1079     	CLRR	_fullFlag
     00D4                           1- 1080     _00302_DS_:
                                    1- 1081     	.line	327, "main.c"; 	}
                                    1- 1082     	RETURN	
     00D4 0010                      3-   26 m1      ret
                                    1- 1083     ; exit point of _checkV
                                    1- 1085     ;***
                                    1- 1086     ;  pBlock Stats: dbName = C
                                    1- 1087     ;***
                                    1- 1088     ;has an exit
                                    1- 1089     ;functions called:
                                    1- 1090     ;   _F_AIN0_Convert
                                    1- 1091     ;   _checkV
                                    1- 1092     ;   _F_AIN0_Convert
                                    1- 1093     ;   _checkV
                                    1- 1094     ;4 compiler assigned registers:
                                    1- 1095     ;   r0x102A
                                    1- 1096     ;   r0x102B
                                    1- 1097     ;   r0x102C
                                    1- 1098     ;   r0x102D
                                    1- 1099     ;; Starting pCode block
                                    1- 1100     .segment "code"; module=main, function=_checkA
     0000                           1- 1102     _checkA:
                                    1- 1103     ; 2 exit points
                                    1- 1104     	.line	209, "main.c"; 	PACON = C_PA0_AIN0;
     0000 2101                      1- 1105     	MOVIA	0x01
     0001 00rr                      1- 1106     	MOVAR	_PACON
                                    1- 1107     	.line	210, "main.c"; 	R_AIN0_DATA=R_AIN0_DATA_LB=0x00;
                                    1- 1108     	BANKSEL	_R_AIN0_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1109     	CLRR	_R_AIN0_DATA_LB
                                    1- 1110     	BANKSEL	_R_AIN0_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1111     	CLRR	_R_AIN0_DATA
     0006 02rr                      1- 1112     	CLRR	(_R_AIN0_DATA + 1)
                                    1- 1113     	.line	211, "main.c"; 	F_AIN0_Convert(12);					// execute AIN0 ADC converting 8 times
     0007 210C                      1- 1114     	MOVIA	0x0c
     0008 2rrr                      1- 1115     	LCALL	_F_AIN0_Convert
                                    1- 1116     	.line	212, "main.c"; 	R_AIN0_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1117     	BANKSEL	_R_AIN0_DATA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 15rr                      1- 1118     	SWAPR	(_R_AIN0_DATA + 1),W
     000B 22F0                      1- 1119     	ANDIA	0xf0
     000C 00rr                      1- 1120     	MOVAR	(_R_AIN0_DATA + 1)
     000D 15rr                      1- 1121     	SWAPR	_R_AIN0_DATA,W
     000E 00rr                      1- 1122     	MOVAR	_R_AIN0_DATA
     000F 220F                      1- 1123     	ANDIA	0x0f
     0010 11rr                      1- 1124     	IORAR	(_R_AIN0_DATA + 1),F
     0011 12rr                      1- 1125     	XORAR	_R_AIN0_DATA,F
                                    1- 1126     	.line	213, "main.c"; 	R_AIN0_DATA_LB &= 0xF0;				// Only get Bit7~4
     0012 21F0                      1- 1127     	MOVIA	0xf0
                                    1- 1128     	BANKSEL	_R_AIN0_DATA_LB
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 10rr                      1- 1129     	ANDAR	_R_AIN0_DATA_LB,F
                                    1- 1130     	.line	214, "main.c"; 	R_AIN0_DATA += R_AIN0_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0015 01rr                      1- 1131     	MOVR	_R_AIN0_DATA_LB,W
                                    1- 1132     	BANKSEL	r0x102C
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1133     	MOVAR	r0x102C
                                    1- 1134     ;;1	MOVAR	r0x102A
                                    1- 1135     ;;1	CLRR	r0x102B
                                    1- 1136     ;;99	MOVR	r0x102A,W
     0018 2100                      1- 1137     	MOVIA	0x00
                                    1- 1138     	BANKSEL	r0x102D
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 1139     	MOVAR	r0x102D
                                    1- 1140     	BANKSEL	r0x102C
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 1141     	MOVR	r0x102C,W
                                    1- 1142     	BANKSEL	_R_AIN0_DATA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 03rr                      1- 1143     	ADDAR	_R_AIN0_DATA,F
                                    1- 1144     	BANKSEL	r0x102D
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 1145     	MOVR	r0x102D,W
     0021 0C03                      1- 1146     	BTRSC	STATUS,0
     0022 05rr                      1- 1147     	INCR	r0x102D,W
     0023 0D03                      1- 1148     	BTRSC	STATUS,2
     0024 3rrr                      1- 1149     	LGOTO	_00005_DS_
                                    1- 1150     	BANKSEL	_R_AIN0_DATA
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 03rr                      1- 1151     	ADDAR	(_R_AIN0_DATA + 1),F
                                    1- 1152     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0027                           1- 1153     _00005_DS_:
                                    1- 1154     	.line	215, "main.c"; 	R_AIN0_DATA >>=3;					// R_AIN0_DATA divided 8
     0027 1C03                      1- 1155     	BCR	STATUS,0
                                    1- 1156     	BANKSEL	_R_AIN0_DATA
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 13rr                      1- 1157     	RRR	(_R_AIN0_DATA + 1),F
     002A 13rr                      1- 1158     	RRR	_R_AIN0_DATA,F
                                    1- 1159     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002B 1C03                      1- 1160     	BCR	STATUS,0
     002C 13rr                      1- 1161     	RRR	(_R_AIN0_DATA + 1),F
     002D 13rr                      1- 1162     	RRR	_R_AIN0_DATA,F
                                    1- 1163     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002E 1C03                      1- 1164     	BCR	STATUS,0
     002F 13rr                      1- 1165     	RRR	(_R_AIN0_DATA + 1),F
     0030 13rr                      1- 1166     	RRR	_R_AIN0_DATA,F
                                    1- 1167     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1168     ;;unsigned compare: left >= lit (0xB=11), size=2
                                    1- 1169     	.line	216, "main.c"; 	if(R_AIN0_DATA <= 10)				//未充电
     0031 2100                      1- 1170     	MOVIA	0x00
     0032 04rr                      1- 1171     	SUBAR	(_R_AIN0_DATA + 1),W
     0033 0903                      1- 1172     	BTRSS	STATUS,2
     0034 3rrr                      1- 1173     	LGOTO	_00272_DS_
     0035 210B                      1- 1174     	MOVIA	0x0b
     0036 04rr                      1- 1175     	SUBAR	_R_AIN0_DATA,W
     0037                           1- 1176     _00272_DS_:
     0037 0C03                      1- 1177     	BTRSC	STATUS,0
     0038 3rrr                      1- 1178     	LGOTO	_00253_DS_
                                    1- 1179     	.line	219, "main.c"; 	startFlag = 0;
                                    1- 1180     	BANKSEL	_startFlag
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 02rr                      1- 1181     	CLRR	_startFlag
                                    1- 1182     	.line	222, "main.c"; 	PORTA |= 0x5C;			//灯全亮
     003B 215C                      1- 1183     	MOVIA	0x5c
     003C 11rr                      1- 1184     	IORAR	_PORTA,F
                                    1- 1185     	.line	223, "main.c"; 	PORTB |= 0x03;
     003D 2103                      1- 1186     	MOVIA	0x03
     003E 11rr                      1- 1187     	IORAR	_PORTB,F
                                    1- 1188     	.line	224, "main.c"; 	resetbit(PORTA,6);	//关闭风扇
     003F 1Frr                      1- 1189     	BCR	_PORTA,6
     0040 3rrr                      1- 1190     	LGOTO	_00255_DS_
                                    1- 1191     ;;unsigned compare: left < lit (0x7B=123), size=2
     0041                           1- 1192     _00253_DS_:
                                    1- 1193     	.line	226, "main.c"; 	else if(R_AIN0_DATA < 123)		//小于0.6A
     0041 2100                      1- 1194     	MOVIA	0x00
                                    1- 1195     	BANKSEL	_R_AIN0_DATA
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 04rr                      1- 1196     	SUBAR	(_R_AIN0_DATA + 1),W
     0044 0903                      1- 1197     	BTRSS	STATUS,2
     0045 3rrr                      1- 1198     	LGOTO	_00273_DS_
     0046 217B                      1- 1199     	MOVIA	0x7b
     0047 04rr                      1- 1200     	SUBAR	_R_AIN0_DATA,W
     0048                           1- 1201     _00273_DS_:
     0048 0C03                      1- 1202     	BTRSC	STATUS,0
     0049 3rrr                      1- 1203     	LGOTO	_00250_DS_
                                    1- 1204     	.line	228, "main.c"; 	if(fullFlag)
                                    1- 1205     	BANKSEL	_fullFlag
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 01rr                      1- 1206     	MOVR	_fullFlag,W
     004C 0903                      1- 1207     	BTRSS	STATUS,2
                                    1- 1208     	.line	229, "main.c"; 	return;
     004D 3rrr                      1- 1209     	LGOTO	_00255_DS_
                                    1- 1210     	.line	230, "main.c"; 	if(++fullCount > 200)
                                    1- 1211     	BANKSEL	_fullCount
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 05rr                      1- 1212     	INCR	_fullCount,F
     0050 21C9                      1- 1213     	MOVIA	0xc9
     0051 04rr                      1- 1214     	SUBAR	_fullCount,W
     0052 0803                      1- 1215     	BTRSS	STATUS,0
     0053 3rrr                      1- 1216     	LGOTO	_00255_DS_
                                    1- 1217     	.line	232, "main.c"; 	workStep = 3;
     0054 2103                      1- 1218     	MOVIA	0x03
                                    1- 1219     	BANKSEL	_workStep
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 00rr                      1- 1220     	MOVAR	_workStep
                                    1- 1221     	.line	233, "main.c"; 	setbit(PORTB,3);		//5脚高电平，降压涓充	
     0057 19rr                      1- 1222     	BSR	_PORTB,3
                                    1- 1223     	.line	234, "main.c"; 	resetbit(PORTA,7);
     0058 1Frr                      1- 1224     	BCR	_PORTA,7
                                    1- 1225     	.line	235, "main.c"; 	PORTA |= 0x5C;			//灯全亮
     0059 215C                      1- 1226     	MOVIA	0x5c
     005A 11rr                      1- 1227     	IORAR	_PORTA,F
                                    1- 1228     	.line	236, "main.c"; 	PORTB |= 0x03;
     005B 2103                      1- 1229     	MOVIA	0x03
     005C 11rr                      1- 1230     	IORAR	_PORTB,F
                                    1- 1231     	.line	237, "main.c"; 	setbit(PORTA,6);	//打开风扇
     005D 1Brr                      1- 1232     	BSR	_PORTA,6
                                    1- 1233     	.line	238, "main.c"; 	if(startFlag == 0)
                                    1- 1234     	BANKSEL	_startFlag
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 01rr                      1- 1235     	MOVR	_startFlag,W
     0060 0903                      1- 1236     	BTRSS	STATUS,2
     0061 3rrr                      1- 1237     	LGOTO	_00255_DS_
                                    1- 1238     	.line	240, "main.c"; 	startFlag = 1;
     0062 2101                      1- 1239     	MOVIA	0x01
     0063 00rr                      1- 1240     	MOVAR	_startFlag
                                    1- 1241     	.line	241, "main.c"; 	sleepCount = 0;
                                    1- 1242     	BANKSEL	_sleepCount
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 02rr                      1- 1243     	CLRR	_sleepCount
     0066 02rr                      1- 1244     	CLRR	(_sleepCount + 1)
     0067 3rrr                      1- 1245     	LGOTO	_00255_DS_
     0068                           1- 1246     _00250_DS_:
                                    1- 1247     	.line	247, "main.c"; 	fullFlag = 0;
                                    1- 1248     	BANKSEL	_fullFlag
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 02rr                      1- 1249     	CLRR	_fullFlag
                                    1- 1250     	.line	248, "main.c"; 	fullCount = 0;
                                    1- 1251     	BANKSEL	_fullCount
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 02rr                      1- 1252     	CLRR	_fullCount
                                    1- 1253     	.line	249, "main.c"; 	checkV();
     006C 2rrr                      1- 1254     	LCALL	_checkV
     006D                           1- 1255     _00255_DS_:
                                    1- 1256     	.line	252, "main.c"; 	}
                                    1- 1257     	RETURN	
     006D 0010                      3-   26 m1      ret
                                    1- 1258     ; exit point of _checkA
                                    1- 1260     ;***
                                    1- 1261     ;  pBlock Stats: dbName = C
                                    1- 1262     ;***
                                    1- 1263     ;has an exit
                                    1- 1264     ;functions called:
                                    1- 1265     ;   _delay
                                    1- 1266     ;   _delay
                                    1- 1267     ;1 compiler assigned register :
                                    1- 1268     ;   STK00
                                    1- 1269     ;; Starting pCode block
                                    1- 1270     .segment "code"; module=main, function=_initAD
     0000                           1- 1272     _initAD:
                                    1- 1273     ; 2 exit points
                                    1- 1274     	.line	185, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA0 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1275     	MOVIA	0x80
     0001 00rr                      1- 1276     	MOVAR	_ADMD
                                    1- 1277     	.line	188, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 02rr                      1- 1278     	CLRR	_ADVREFH
                                    1- 1279     	.line	195, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1280     	MOVIA	0x10
     0004 00rr                      1- 1281     	MOVAR	_ADR
                                    1- 1282     	.line	197, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1283     	MOVIA	0x03
     0006 00rr                      1- 1284     	MOVAR	_ADCR
                                    1- 1285     	.line	199, "main.c"; 	PACON = C_PB2_AIN7 ;						// 
     0007 2180                      1- 1286     	MOVIA	0x80
     0008 00rr                      1- 1287     	MOVAR	_PACON
                                    1- 1288     	.line	200, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 1289     	BSR	_ADMDbits,4
                                    1- 1290     	.line	201, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 1291     	MOVIA	0x64
     000B 00rr                      1- 1292     	MOVAR	STK00
     000C 2100                      1- 1293     	MOVIA	0x00
     000D 2rrr                      1- 1294     	LCALL	_delay
                                    1- 1295     	.line	204, "main.c"; 	}
                                    1- 1296     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1297     ; exit point of _initAD
                                    1- 1299     ;***
                                    1- 1300     ;  pBlock Stats: dbName = C
                                    1- 1301     ;***
                                    1- 1302     ;has an exit
                                    1- 1303     ;; Starting pCode block
                                    1- 1304     .segment "code"; module=main, function=_ledCon2
     0000                           1- 1306     _ledCon2:
                                    1- 1307     ; 2 exit points
                                    1- 1308     	.line	165, "main.c"; 	ledLock = 1;		//锁定
     0000 2101                      1- 1309     	MOVIA	0x01
                                    1- 1310     	BANKSEL	_ledLock
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1311     	MOVAR	_ledLock
                                    1- 1312     ;;unsigned compare: left < lit (0x32=50), size=2
                                    1- 1313     	.line	166, "main.c"; 	if(ledCount < 50)
     0003 2100                      1- 1314     	MOVIA	0x00
                                    1- 1315     	BANKSEL	_ledCount
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 04rr                      1- 1316     	SUBAR	(_ledCount + 1),W
     0006 0903                      1- 1317     	BTRSS	STATUS,2
     0007 3rrr                      1- 1318     	LGOTO	_00232_DS_
     0008 2132                      1- 1319     	MOVIA	0x32
     0009 04rr                      1- 1320     	SUBAR	_ledCount,W
     000A                           1- 1321     _00232_DS_:
     000A 0C03                      1- 1322     	BTRSC	STATUS,0
     000B 3rrr                      1- 1323     	LGOTO	_00219_DS_
                                    1- 1324     	.line	168, "main.c"; 	setbit(PORTA,4);
     000C 1Arr                      1- 1325     	BSR	_PORTA,4
     000D 3rrr                      1- 1326     	LGOTO	_00221_DS_
                                    1- 1327     ;;unsigned compare: left < lit (0x64=100), size=2
     000E                           1- 1328     _00219_DS_:
                                    1- 1329     	.line	170, "main.c"; 	else if(ledCount < 100)
     000E 2100                      1- 1330     	MOVIA	0x00
                                    1- 1331     	BANKSEL	_ledCount
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1- 1332     	SUBAR	(_ledCount + 1),W
     0011 0903                      1- 1333     	BTRSS	STATUS,2
     0012 3rrr                      1- 1334     	LGOTO	_00233_DS_
     0013 2164                      1- 1335     	MOVIA	0x64
     0014 04rr                      1- 1336     	SUBAR	_ledCount,W
     0015                           1- 1337     _00233_DS_:
     0015 0C03                      1- 1338     	BTRSC	STATUS,0
     0016 3rrr                      1- 1339     	LGOTO	_00216_DS_
                                    1- 1340     	.line	172, "main.c"; 	resetbit(PORTA,4);
     0017 1Err                      1- 1341     	BCR	_PORTA,4
     0018 3rrr                      1- 1342     	LGOTO	_00221_DS_
                                    1- 1343     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1344     ;;unsigned compare: left >= lit (0x67=103), size=2
     0019                           1- 1345     _00216_DS_:
                                    1- 1346     	.line	176, "main.c"; 	if(ledCount > 102)
     0019 2100                      1- 1347     	MOVIA	0x00
                                    1- 1348     	BANKSEL	_ledCount
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 04rr                      1- 1349     	SUBAR	(_ledCount + 1),W
     001C 0903                      1- 1350     	BTRSS	STATUS,2
     001D 3rrr                      1- 1351     	LGOTO	_00234_DS_
     001E 2167                      1- 1352     	MOVIA	0x67
     001F 04rr                      1- 1353     	SUBAR	_ledCount,W
     0020                           1- 1354     _00234_DS_:
     0020 0803                      1- 1355     	BTRSS	STATUS,0
     0021 3rrr                      1- 1356     	LGOTO	_00214_DS_
                                    1- 1357     	.line	177, "main.c"; 	ledCount = 0;
                                    1- 1358     	BANKSEL	_ledCount
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 02rr                      1- 1359     	CLRR	_ledCount
     0024 02rr                      1- 1360     	CLRR	(_ledCount + 1)
     0025                           1- 1361     _00214_DS_:
                                    1- 1362     	.line	178, "main.c"; 	ledLock = 0;		//解锁
                                    1- 1363     	BANKSEL	_ledLock
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 1364     	CLRR	_ledLock
     0027                           1- 1365     _00221_DS_:
                                    1- 1366     	.line	180, "main.c"; 	}
                                    1- 1367     	RETURN	
     0027 0010                      3-   26 m1      ret
                                    1- 1368     ; exit point of _ledCon2
                                    1- 1370     ;***
                                    1- 1371     ;  pBlock Stats: dbName = C
                                    1- 1372     ;***
                                    1- 1373     ;has an exit
                                    1- 1374     ;; Starting pCode block
                                    1- 1375     .segment "code"; module=main, function=_ledCon
     0000                           1- 1377     _ledCon:
                                    1- 1378     ; 2 exit points
                                    1- 1379     	.line	147, "main.c"; 	ledLock = 1;		//锁定
     0000 2101                      1- 1380     	MOVIA	0x01
                                    1- 1381     	BANKSEL	_ledLock
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1382     	MOVAR	_ledLock
                                    1- 1383     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1384     ;;unsigned compare: left >= lit (0x33=51), size=2
                                    1- 1385     	.line	148, "main.c"; 	ledCount > 50 ? (setbit(PORTB,1)) : (resetbit(PORTB,1));
     0003 2100                      1- 1386     	MOVIA	0x00
                                    1- 1387     	BANKSEL	_ledCount
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 04rr                      1- 1388     	SUBAR	(_ledCount + 1),W
     0006 0903                      1- 1389     	BTRSS	STATUS,2
     0007 3rrr                      1- 1390     	LGOTO	_00202_DS_
     0008 2133                      1- 1391     	MOVIA	0x33
     0009 04rr                      1- 1392     	SUBAR	_ledCount,W
     000A                           1- 1393     _00202_DS_:
     000A 0803                      1- 1394     	BTRSS	STATUS,0
     000B 3rrr                      1- 1395     	LGOTO	_00171_DS_
     000C 18rr                      1- 1396     	BSR	_PORTB,1
     000D 3rrr                      1- 1397     	LGOTO	_00172_DS_
     000E                           1- 1398     _00171_DS_:
     000E 1Crr                      1- 1399     	BCR	_PORTB,1
                                    1- 1400     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1401     ;;unsigned compare: left >= lit (0x65=101), size=2
     000F                           1- 1402     _00172_DS_:
                                    1- 1403     	.line	149, "main.c"; 	ledCount > 100 ? (setbit(PORTB,0)) : (resetbit(PORTB,0));
     000F 2100                      1- 1404     	MOVIA	0x00
                                    1- 1405     	BANKSEL	_ledCount
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1406     	SUBAR	(_ledCount + 1),W
     0012 0903                      1- 1407     	BTRSS	STATUS,2
     0013 3rrr                      1- 1408     	LGOTO	_00203_DS_
     0014 2165                      1- 1409     	MOVIA	0x65
     0015 04rr                      1- 1410     	SUBAR	_ledCount,W
     0016                           1- 1411     _00203_DS_:
     0016 0803                      1- 1412     	BTRSS	STATUS,0
     0017 3rrr                      1- 1413     	LGOTO	_00173_DS_
     0018 18rr                      1- 1414     	BSR	_PORTB,0
     0019 3rrr                      1- 1415     	LGOTO	_00174_DS_
     001A                           1- 1416     _00173_DS_:
     001A 1Crr                      1- 1417     	BCR	_PORTB,0
                                    1- 1418     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1419     ;;unsigned compare: left >= lit (0x97=151), size=2
     001B                           1- 1420     _00174_DS_:
                                    1- 1421     	.line	150, "main.c"; 	ledCount > 150 ? (setbit(PORTA,2)) : (resetbit(PORTA,2));
     001B 2100                      1- 1422     	MOVIA	0x00
                                    1- 1423     	BANKSEL	_ledCount
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 04rr                      1- 1424     	SUBAR	(_ledCount + 1),W
     001E 0903                      1- 1425     	BTRSS	STATUS,2
     001F 3rrr                      1- 1426     	LGOTO	_00204_DS_
     0020 2197                      1- 1427     	MOVIA	0x97
     0021 04rr                      1- 1428     	SUBAR	_ledCount,W
     0022                           1- 1429     _00204_DS_:
     0022 0803                      1- 1430     	BTRSS	STATUS,0
     0023 3rrr                      1- 1431     	LGOTO	_00175_DS_
     0024 19rr                      1- 1432     	BSR	_PORTA,2
     0025 3rrr                      1- 1433     	LGOTO	_00176_DS_
     0026                           1- 1434     _00175_DS_:
     0026 1Drr                      1- 1435     	BCR	_PORTA,2
                                    1- 1436     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1437     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0027                           1- 1438     _00176_DS_:
                                    1- 1439     	.line	151, "main.c"; 	ledCount > 200 ? (setbit(PORTA,3)) : (resetbit(PORTA,3));
     0027 2100                      1- 1440     	MOVIA	0x00
                                    1- 1441     	BANKSEL	_ledCount
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 04rr                      1- 1442     	SUBAR	(_ledCount + 1),W
     002A 0903                      1- 1443     	BTRSS	STATUS,2
     002B 3rrr                      1- 1444     	LGOTO	_00205_DS_
     002C 21C9                      1- 1445     	MOVIA	0xc9
     002D 04rr                      1- 1446     	SUBAR	_ledCount,W
     002E                           1- 1447     _00205_DS_:
     002E 0803                      1- 1448     	BTRSS	STATUS,0
     002F 3rrr                      1- 1449     	LGOTO	_00177_DS_
     0030 19rr                      1- 1450     	BSR	_PORTA,3
     0031 3rrr                      1- 1451     	LGOTO	_00178_DS_
     0032                           1- 1452     _00177_DS_:
     0032 1Drr                      1- 1453     	BCR	_PORTA,3
                                    1- 1454     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1455     ;;unsigned compare: left >= lit (0xFB=251), size=2
     0033                           1- 1456     _00178_DS_:
                                    1- 1457     	.line	152, "main.c"; 	ledCount > 250 ? (setbit(PORTA,4)) : (resetbit(PORTA,4));
     0033 2100                      1- 1458     	MOVIA	0x00
                                    1- 1459     	BANKSEL	_ledCount
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 04rr                      1- 1460     	SUBAR	(_ledCount + 1),W
     0036 0903                      1- 1461     	BTRSS	STATUS,2
     0037 3rrr                      1- 1462     	LGOTO	_00206_DS_
     0038 21FB                      1- 1463     	MOVIA	0xfb
     0039 04rr                      1- 1464     	SUBAR	_ledCount,W
     003A                           1- 1465     _00206_DS_:
     003A 0803                      1- 1466     	BTRSS	STATUS,0
     003B 3rrr                      1- 1467     	LGOTO	_00179_DS_
     003C 1Arr                      1- 1468     	BSR	_PORTA,4
     003D 3rrr                      1- 1469     	LGOTO	_00180_DS_
     003E                           1- 1470     _00179_DS_:
     003E 1Err                      1- 1471     	BCR	_PORTA,4
                                    1- 1472     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1473     ;;unsigned compare: left >= lit (0x12D=301), size=2
     003F                           1- 1474     _00180_DS_:
                                    1- 1475     	.line	153, "main.c"; 	if(ledCount > 300)
     003F 2101                      1- 1476     	MOVIA	0x01
                                    1- 1477     	BANKSEL	_ledCount
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 04rr                      1- 1478     	SUBAR	(_ledCount + 1),W
     0042 0903                      1- 1479     	BTRSS	STATUS,2
     0043 3rrr                      1- 1480     	LGOTO	_00207_DS_
     0044 212D                      1- 1481     	MOVIA	0x2d
     0045 04rr                      1- 1482     	SUBAR	_ledCount,W
     0046                           1- 1483     _00207_DS_:
     0046 0803                      1- 1484     	BTRSS	STATUS,0
     0047 3rrr                      1- 1485     	LGOTO	_00169_DS_
                                    1- 1486     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1487     ;;unsigned compare: left >= lit (0x137=311), size=2
                                    1- 1488     	.line	155, "main.c"; 	if(ledCount > 310)
     0048 2101                      1- 1489     	MOVIA	0x01
                                    1- 1490     	BANKSEL	_ledCount
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 04rr                      1- 1491     	SUBAR	(_ledCount + 1),W
     004B 0903                      1- 1492     	BTRSS	STATUS,2
     004C 3rrr                      1- 1493     	LGOTO	_00208_DS_
     004D 2137                      1- 1494     	MOVIA	0x37
     004E 04rr                      1- 1495     	SUBAR	_ledCount,W
     004F                           1- 1496     _00208_DS_:
     004F 0803                      1- 1497     	BTRSS	STATUS,0
     0050 3rrr                      1- 1498     	LGOTO	_00166_DS_
                                    1- 1499     	.line	156, "main.c"; 	ledCount = ledMin;
                                    1- 1500     	BANKSEL	_ledMin
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 01rr                      1- 1501     	MOVR	_ledMin,W
                                    1- 1502     	BANKSEL	_ledCount
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1- 1503     	MOVAR	_ledCount
     0055 02rr                      1- 1504     	CLRR	(_ledCount + 1)
     0056                           1- 1505     _00166_DS_:
                                    1- 1506     	.line	157, "main.c"; 	ledLock = 0;		//解锁
                                    1- 1507     	BANKSEL	_ledLock
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 02rr                      1- 1508     	CLRR	_ledLock
     0058                           1- 1509     _00169_DS_:
                                    1- 1510     	.line	159, "main.c"; 	}
                                    1- 1511     	RETURN	
     0058 0010                      3-   26 m1      ret
                                    1- 1512     ; exit point of _ledCon
                                    1- 1514     ;***
                                    1- 1515     ;  pBlock Stats: dbName = C
                                    1- 1516     ;***
                                    1- 1517     ;has an exit
                                    1- 1518     ;; Starting pCode block
                                    1- 1519     .segment "code"; module=main, function=_initTimer0
     0000                           1- 1521     _initTimer0:
                                    1- 1522     ; 2 exit points
                                    1- 1523     	.line	118, "main.c"; 	PORTA = 0x23;
     0000 2123                      1- 1524     	MOVIA	0x23
     0001 00rr                      1- 1525     	MOVAR	_PORTA
                                    1- 1526     	.line	119, "main.c"; 	PORTB = 0xF8;
     0002 21F8                      1- 1527     	MOVIA	0xf8
     0003 00rr                      1- 1528     	MOVAR	_PORTB
                                    1- 1529     	.line	120, "main.c"; 	BPHCON = 0xFE;
     0004 21FE                      1- 1530     	MOVIA	0xfe
     0005 00rr                      1- 1531     	MOVAR	_BPHCON
                                    1- 1532     	.line	122, "main.c"; 	IOSTA = C_PA0_Input;
     0006 2101                      1- 1533     	MOVIA	0x01
     0007 000r                      1- 1534     	IOST	_IOSTA
                                    1- 1535     	.line	123, "main.c"; 	IOSTB =  C_PB2_Input;	
     0008 2104                      1- 1536     	MOVIA	0x04
     0009 000r                      1- 1537     	IOST	_IOSTB
                                    1- 1538     	.line	124, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     000A 21A8                      1- 1539     	MOVIA	0xa8
     000B 00rr                      1- 1540     	MOVAR	_PCON
                                    1- 1541     	.line	125, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 1542     	MOVIA	0x01
     000D 00rr                      1- 1543     	MOVAR	_INTE
                                    1- 1544     	.line	126, "main.c"; 	INTF = 0;
     000E 02rr                      1- 1545     	CLRR	_INTF
                                    1- 1546     	.line	129, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1- 1547     	CLRA	
     0010 000r                      1- 1548     	IOST	_PCON1
                                    1- 1549     	.line	131, "main.c"; 	TMR0 = 55;
     0011 2137                      1- 1550     	MOVIA	0x37
     0012 00rr                      1- 1551     	MOVAR	_TMR0
                                    1- 1552     	.line	132, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0013 0200                      1- 1553     	CLRA	
     0014 0003                      1- 1554     	T0MD	
                                    1- 1555     	.line	134, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0015 2111                      1- 1556     	MOVIA	0x11
     0016 000r                      1- 1557     	IOST	_PCON1
                                    1- 1558     	.line	136, "main.c"; 	PORTA &= 0x23;
     0017 2123                      1- 1559     	MOVIA	0x23
     0018 10rr                      1- 1560     	ANDAR	_PORTA,F
                                    1- 1561     	.line	137, "main.c"; 	PORTB &= 0xF8;
     0019 21F8                      1- 1562     	MOVIA	0xf8
     001A 10rr                      1- 1563     	ANDAR	_PORTB,F
                                    1- 1564     	.line	138, "main.c"; 	resetbit(PORTB,3);		
     001B 1Drr                      1- 1565     	BCR	_PORTB,3
                                    1- 1566     	.line	139, "main.c"; 	resetbit(PORTA,7);
     001C 1Frr                      1- 1567     	BCR	_PORTA,7
                                    1- 1568     	.line	140, "main.c"; 	resetbit(PORTA,6);	//关闭风扇
     001D 1Frr                      1- 1569     	BCR	_PORTA,6
                                    1- 1570     	.line	141, "main.c"; 	ENI();	
     001E 0004                      1- 1571     	ENI
                                    1- 1572     	.line	143, "main.c"; 	}
                                    1- 1573     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1- 1574     ; exit point of _initTimer0
                                    1- 1576     ;***
                                    1- 1577     ;  pBlock Stats: dbName = C
                                    1- 1578     ;***
                                    1- 1579     ;has an exit
                                    1- 1580     ;functions called:
                                    1- 1581     ;   _ledCon
                                    1- 1582     ;   _ledCon2
                                    1- 1583     ;   _ledCon
                                    1- 1584     ;   _ledCon2
                                    1- 1585     ;; Starting pCode block
                                    1- 1586     .segment "code"; module=main, function=_workCon
     0000                           1- 1588     _workCon:
                                    1- 1589     ; 2 exit points
                                    1- 1590     	.line	86, "main.c"; 	if(workStep == 1)
                                    1- 1591     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1592     	MOVR	_workStep,W
     0002 2401                      1- 1593     	XORIA	0x01
     0003 0903                      1- 1594     	BTRSS	STATUS,2
     0004 3rrr                      1- 1595     	LGOTO	_00137_DS_
                                    1- 1596     	.line	87, "main.c"; 	ledCon();
     0005 2rrr                      1- 1597     	LCALL	_ledCon
     0006 3rrr                      1- 1598     	LGOTO	_00139_DS_
     0007                           1- 1599     _00137_DS_:
                                    1- 1600     	.line	88, "main.c"; 	else if(workStep == 2)
                                    1- 1601     	BANKSEL	_workStep
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1- 1602     	MOVR	_workStep,W
     0009 2402                      1- 1603     	XORIA	0x02
     000A 0903                      1- 1604     	BTRSS	STATUS,2
     000B 3rrr                      1- 1605     	LGOTO	_00134_DS_
                                    1- 1606     	.line	89, "main.c"; 	ledCon2();
     000C 2rrr                      1- 1607     	LCALL	_ledCon2
     000D 3rrr                      1- 1608     	LGOTO	_00139_DS_
     000E                           1- 1609     _00134_DS_:
                                    1- 1610     	.line	90, "main.c"; 	else if(workStep == 0)
                                    1- 1611     	BANKSEL	_workStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1612     	MOVR	_workStep,W
     0010 0903                      1- 1613     	BTRSS	STATUS,2
     0011 3rrr                      1- 1614     	LGOTO	_00131_DS_
                                    1- 1615     	.line	92, "main.c"; 	PORTA &= 0xA3;
     0012 21A3                      1- 1616     	MOVIA	0xa3
     0013 10rr                      1- 1617     	ANDAR	_PORTA,F
                                    1- 1618     	.line	93, "main.c"; 	PORTB &= 0xFC;
     0014 21FC                      1- 1619     	MOVIA	0xfc
     0015 10rr                      1- 1620     	ANDAR	_PORTB,F
     0016 3rrr                      1- 1621     	LGOTO	_00139_DS_
     0017                           1- 1622     _00131_DS_:
                                    1- 1623     	.line	95, "main.c"; 	else if(workStep == 3 && sleepCount > 10800)
                                    1- 1624     	BANKSEL	_workStep
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1- 1625     	MOVR	_workStep,W
     0019 2403                      1- 1626     	XORIA	0x03
     001A 0903                      1- 1627     	BTRSS	STATUS,2
     001B 3rrr                      1- 1628     	LGOTO	_00127_DS_
                                    1- 1629     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1630     ;;unsigned compare: left >= lit (0x2A31=10801), size=2
     001C 212A                      1- 1631     	MOVIA	0x2a
                                    1- 1632     	BANKSEL	_sleepCount
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 04rr                      1- 1633     	SUBAR	(_sleepCount + 1),W
     001F 0903                      1- 1634     	BTRSS	STATUS,2
     0020 3rrr                      1- 1635     	LGOTO	_00156_DS_
     0021 2131                      1- 1636     	MOVIA	0x31
     0022 04rr                      1- 1637     	SUBAR	_sleepCount,W
     0023                           1- 1638     _00156_DS_:
     0023 0803                      1- 1639     	BTRSS	STATUS,0
     0024 3rrr                      1- 1640     	LGOTO	_00127_DS_
                                    1- 1641     	.line	97, "main.c"; 	sleepCount = 0;
                                    1- 1642     	BANKSEL	_sleepCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 1643     	CLRR	_sleepCount
     0027 02rr                      1- 1644     	CLRR	(_sleepCount + 1)
                                    1- 1645     	.line	98, "main.c"; 	workStep = 0;
                                    1- 1646     	BANKSEL	_workStep
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 1647     	CLRR	_workStep
                                    1- 1648     	.line	99, "main.c"; 	resetbit(PORTA,6);		//关闭风扇
     002A 1Frr                      1- 1649     	BCR	_PORTA,6
                                    1- 1650     	.line	100, "main.c"; 	fullFlag = 1;
     002B 2101                      1- 1651     	MOVIA	0x01
                                    1- 1652     	BANKSEL	_fullFlag
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 1653     	MOVAR	_fullFlag
     002E 3rrr                      1- 1654     	LGOTO	_00139_DS_
     002F                           1- 1655     _00127_DS_:
                                    1- 1656     	.line	104, "main.c"; 	fullFlag = 0;
                                    1- 1657     	BANKSEL	_fullFlag
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1- 1658     	CLRR	_fullFlag
                                    1- 1659     	.line	105, "main.c"; 	ledLock = 0;
                                    1- 1660     	BANKSEL	_ledLock
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 02rr                      1- 1661     	CLRR	_ledLock
                                    1- 1662     	.line	106, "main.c"; 	PORTA |= 0x5C;			//灯全亮
     0033 215C                      1- 1663     	MOVIA	0x5c
     0034 11rr                      1- 1664     	IORAR	_PORTA,F
                                    1- 1665     	.line	107, "main.c"; 	PORTB |= 0x03;
     0035 2103                      1- 1666     	MOVIA	0x03
     0036 11rr                      1- 1667     	IORAR	_PORTB,F
     0037                           1- 1668     _00139_DS_:
                                    1- 1669     	.line	113, "main.c"; 	}
                                    1- 1670     	RETURN	
     0037 0010                      3-   26 m1      ret
                                    1- 1671     ; exit point of _workCon
                                    1- 1674     ;	code size estimation:
                                    1- 1675     ;	  628+  140 =   768 instructions ( 1816 byte)
                                    1- 1677     	end
                                    1- 1677     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    0000002E
_00003_DS_              Label    0000002E
_00004_DS_              Label    00000027
_00005_DS_              Label    00000027
_00106_DS_              Label    00000032
_00113_DS_              Label    00000035
_00121_DS_              Label    00000002
_00127_DS_              Label    0000002F
_00131_DS_              Label    00000017
_00134_DS_              Label    0000000E
_00137_DS_              Label    00000007
_00139_DS_              Label    00000037
_00156_DS_              Label    00000023
_00166_DS_              Label    00000056
_00169_DS_              Label    00000058
_00171_DS_              Label    0000000E
_00172_DS_              Label    0000000F
_00173_DS_              Label    0000001A
_00174_DS_              Label    0000001B
_00175_DS_              Label    00000026
_00176_DS_              Label    00000027
_00177_DS_              Label    00000032
_00178_DS_              Label    00000033
_00179_DS_              Label    0000003E
_00180_DS_              Label    0000003F
_00202_DS_              Label    0000000A
_00203_DS_              Label    00000016
_00204_DS_              Label    00000022
_00205_DS_              Label    0000002E
_00206_DS_              Label    0000003A
_00207_DS_              Label    00000046
_00208_DS_              Label    0000004F
_00214_DS_              Label    00000025
_00216_DS_              Label    00000019
_00219_DS_              Label    0000000E
_00221_DS_              Label    00000027
_00232_DS_              Label    0000000A
_00233_DS_              Label    00000015
_00234_DS_              Label    00000020
_00250_DS_              Label    00000068
_00253_DS_              Label    00000041
_00255_DS_              Label    0000006D
_00272_DS_              Label    00000037
_00273_DS_              Label    00000048
_00281_DS_              Label    00000066
_00283_DS_              Label    0000008A
_00285_DS_              Label    000000AE
_00287_DS_              Label    000000CA
_00291_DS_              Label    000000B9
_00294_DS_              Label    00000095
_00297_DS_              Label    00000071
_00300_DS_              Label    0000004D
_00302_DS_              Label    000000D4
_00334_DS_              Label    0000003C
_00335_DS_              Label    00000054
_00336_DS_              Label    00000060
_00337_DS_              Label    00000078
_00338_DS_              Label    00000084
_00339_DS_              Label    0000009C
_00340_DS_              Label    000000A8
_00341_DS_              Label    000000C0
_00350_DS_              Label    0000000B
_00352_DS_              Label    00000031
_00361_DS_              Label    0000000B
_00363_DS_              Label    00000031
_00368_DS_              Label    00000000
_00375_DS_              Label    00000009
_00377_DS_              Label    0000001C
_00386_DS_              Label    00000013
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkA                 Label    00000000
_checkV                 Label    00000000
_CMPCR                  Label    00000000
_count1S                Label    00000000
_delay                  Label    00000000
_F_AIN0_Convert         Label    00000000
_F_AIN7_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_FSR                    Label    00000000
_fullCount              Label    00000000
_fullFlag               Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initTimer0             Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_ledCon                 Label    00000000
_ledCon2                Label    00000000
_ledCount               Label    00000000
_ledLock                Label    00000000
_ledMin                 Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN0_DATA            Label    00000000
_R_AIN0_DATA_LB         Label    00000000
_R_AIN7_DATA            Label    00000000
_R_AIN7_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepCount             Label    00000000
_startFlag              Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCon                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000046
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
r0x101A                 Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1025                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
