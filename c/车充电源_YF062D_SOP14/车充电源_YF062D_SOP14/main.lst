
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_closeChrg
                                    1-   97     	extern	_halfChrg
                                    1-   98     	extern	_fullChrg
                                    1-   99     	extern	_delay
                                    1-  100     	extern	_F_wait_eoc
                                    1-  101     	extern	_F_AIN0_Convert
                                    1-  102     	extern	_F_AIN7_Convert
                                    1-  103     	extern	_checkV
                                    1-  104     	extern	_checkA
                                    1-  105     	extern	_initAD
                                    1-  106     	extern	_ledCtr
                                    1-  107     	extern	_ledCon
                                    1-  108     	extern	_initTimer0
                                    1-  109     	extern	_workCon
                                    1-  110     	extern	_isr
                                    1-  111     	extern	_main
                                    1-  112     	extern	_keyClick
                                    1-  113     	extern	_intCount
                                    1-  114     	extern	_IntFlag
                                    1-  115     	extern	_ledCount
                                    1-  116     	extern	_R_AIN0_DATA
                                    1-  117     	extern	_R_AIN0_DATA_LB
                                    1-  118     	extern	_R_AIN7_DATA
                                    1-  119     	extern	_R_AIN7_DATA_LB
                                    1-  120     	extern	_workStep
                                    1-  121     	extern	_ledStep
                                    1-  122     	extern	_sleepCount
                                    1-  123     	extern	_chrgCount
                                    1-  124     	extern	_startFlag
                                    1-  125     	extern	_count1S
                                    1-  126     	extern	_fullFlag
                                    1-  127     	extern	_fullCount
                                    1-  128     	extern	_ledMin
                                    1-  129     	extern	_ledLock
                                    1-  130     	extern	_preV
                                    1-  131     	extern	_preA
                                    1-  133     	extern PSAVE
                                    1-  134     	extern SSAVE
                                    1-  135     	extern WSAVE
                                    1-  136     	extern STK12
                                    1-  137     	extern STK11
                                    1-  138     	extern STK10
                                    1-  139     	extern STK09
                                    1-  140     	extern STK08
                                    1-  141     	extern STK07
                                    1-  142     	extern STK06
                                    1-  143     	extern STK05
                                    1-  144     	extern STK04
                                    1-  145     	extern STK03
                                    1-  146     	extern STK02
                                    1-  147     	extern STK01
                                    1-  148     	extern STK00
                                    1-  150     .segment "uninit", 0x20000040
 20000040                           1-  151     PSAVE:
                                    1-  152     	.res 1
 20000041                           1-  153     SSAVE:
                                    1-  154     	.res 1
 20000042                           1-  155     WSAVE:
                                    1-  156     	.res 1
 20000043                           1-  157     STK12:
                                    1-  158     	.res 1
 20000044                           1-  159     STK11:
                                    1-  160     	.res 1
 20000045                           1-  161     STK10:
                                    1-  162     	.res 1
 20000046                           1-  163     STK09:
                                    1-  164     	.res 1
 20000047                           1-  165     STK08:
                                    1-  166     	.res 1
 20000048                           1-  167     STK07:
                                    1-  168     	.res 1
 20000049                           1-  169     STK06:
                                    1-  170     	.res 1
 2000004A                           1-  171     STK05:
                                    1-  172     	.res 1
 2000004B                           1-  173     STK04:
                                    1-  174     	.res 1
 2000004C                           1-  175     STK03:
                                    1-  176     	.res 1
 2000004D                           1-  177     STK02:
                                    1-  178     	.res 1
 2000004E                           1-  179     STK01:
                                    1-  180     	.res 1
 2000004F                           1-  181     STK00:
                                    1-  182     	.res 1
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     ; global definitions
                                    1-  186     ;--------------------------------------------------------
                                    1-  187     .segment "uninit"
     0000                           1-  188     _R_AIN0_DATA:
                                    1-  189     	.res	2
                                    1-  192     .segment "uninit"
     0000                           1-  193     _R_AIN0_DATA_LB:
                                    1-  194     	.res	1
                                    1-  197     .segment "uninit"
     0000                           1-  198     _R_AIN7_DATA:
                                    1-  199     	.res	2
                                    1-  202     .segment "uninit"
     0000                           1-  203     _R_AIN7_DATA_LB:
                                    1-  204     	.res	1
                                    1-  207     .segment "uninit"
     0000                           1-  208     _preV:
                                    1-  209     	.res	2
                                    1-  212     .segment "uninit"
     0000                           1-  213     _preA:
                                    1-  214     	.res	2
                                    1-  217     ;--------------------------------------------------------
                                    1-  218     ; absolute symbol definitions
                                    1-  219     ;--------------------------------------------------------
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     ; compiler-defined variables
                                    1-  222     ;--------------------------------------------------------
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x1038:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x1039:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x1036:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x1037:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x1034:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x1035:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x1030:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1031:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1028:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1029:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x102A:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x102D:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x1022:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1023:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x1024:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1027:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x101F:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x101E:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1020:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1021:
                                    1-  282     	.res	1
                                    1-  283     ;--------------------------------------------------------
                                    1-  284     ; initialized data
                                    1-  285     ;--------------------------------------------------------
                                    1-  287     .segment "idata"
     0000                           1-  288     _keyClick:
     0000 0000                      1-  289     	dw	0x00
                                    1-  293     .segment "idata"
     0000                           1-  294     _intCount:
     0000 0000                      1-  295     	dw	0x00
                                    1-  299     .segment "idata"
     0000                           1-  300     _IntFlag:
     0000 0000                      1-  301     	dw	0x00
                                    1-  305     .segment "idata"
     0000                           1-  306     _ledCount:
     0000 0000 0000                 1-  307     	dw	0x00, 0x00
                                    1-  311     .segment "idata"
     0000                           1-  312     _workStep:
     0000 0003                      1-  313     	dw	0x03
                                    1-  317     .segment "idata"
     0000                           1-  318     _ledStep:
     0000 0000                      1-  319     	dw	0x00
                                    1-  323     .segment "idata"
     0000                           1-  324     _sleepCount:
     0000 0000 0000                 1-  325     	dw	0x00, 0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _chrgCount:
     0000 0000 0000                 1-  331     	dw	0x00, 0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _startFlag:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _count1S:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _fullFlag:
     0000 0000                      1-  349     	dw	0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _fullCount:
     0000 0000 0000                 1-  355     	dw	0x00, 0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _ledMin:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _ledLock:
     0000 0000                      1-  367     	dw	0x00
                                    1-  370     ;--------------------------------------------------------
                                    1-  371     ; overlayable items in internal ram 
                                    1-  372     ;--------------------------------------------------------
                                    1-  373     ;	udata_ovr
                                    1-  374     ;--------------------------------------------------------
                                    1-  375     ; reset vector 
                                    1-  376     ;--------------------------------------------------------
                                    1-  377     ORG	0x0000
     0000 3rrr                      1-  378     	LGOTO	__nyc_ny8_startup
                                    1-  379     ;--------------------------------------------------------
                                    1-  380     ; interrupt and initialization code
                                    1-  381     ;--------------------------------------------------------
                                    1-  382     ORG 0x0008
     0008 3rrr                      1-  383     	lgoto	__sdcc_interrupt
                                    1-  385     .segment "code"
     0000                           1-  386     __sdcc_interrupt:
                                    1-  387     ;***
                                    1-  388     ;  pBlock Stats: dbName = I
                                    1-  389     ;***
                                    1-  390     ;2 compiler assigned registers:
                                    1-  391     ;   STK00
                                    1-  392     ;   STK01
                                    1-  393     ;; Starting pCode block
     0000                           1-  394     _isr:
                                    1-  395     ; 0 exit points
                                    1-  396     	.line	50, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  397     	MOVAR	WSAVE
     0001 1503                      1-  398     	SWAPR	STATUS,W
     0002 0283                      1-  399     	CLRR	STATUS
     0003 00rr                      1-  400     	MOVAR	SSAVE
     0004 010A                      1-  401     	MOVR	PCHBUF,W
     0005 028A                      1-  402     	CLRR	PCHBUF
     0006 00rr                      1-  403     	MOVAR	PSAVE
     0007 0104                      1-  404     	MOVR	FSR,W
                                    1-  405     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  406     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  407     	MOVR	STK00,W
                                    1-  408     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  409     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  410     	MOVR	STK01,W
                                    1-  411     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  412     	MOVAR	___sdcc_saved_stk01
                                    1-  413     	.line	52, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  414     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  415     	LGOTO	_00113_DS_
                                    1-  416     	.line	54, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  417     	MOVIA	0x37
     0013 03rr                      1-  418     	ADDAR	_TMR0,F
                                    1-  419     	.line	55, "main.c"; 	intCount++;
                                    1-  420     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  421     	INCR	_intCount,F
                                    1-  422     	.line	56, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  423     	MOVR	_intCount,W
     0017 2464                      1-  424     	XORIA	0x64
     0018 0903                      1-  425     	BTRSS	STATUS,2
     0019 3rrr                      1-  426     	LGOTO	_00113_DS_
                                    1-  427     	.line	58, "main.c"; 	intCount = 0;
     001A 02rr                      1-  428     	CLRR	_intCount
                                    1-  429     	.line	59, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  430     	MOVIA	0x01
                                    1-  431     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  432     	MOVAR	_IntFlag
                                    1-  433     	.line	60, "main.c"; 	ledCount++; 
                                    1-  434     	BANKSEL	_ledCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 05rr                      1-  435     	INCR	_ledCount,F
     0020 0D03                      1-  436     	BTRSC	STATUS,2
     0021 05rr                      1-  437     	INCR	(_ledCount + 1),F
                                    1-  438     	.line	61, "main.c"; 	if(++count1S >= 100)
                                    1-  439     	BANKSEL	_count1S
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  440     	INCR	_count1S,F
                                    1-  441     ;;unsigned compare: left < lit (0x64=100), size=1
     0024 2164                      1-  442     	MOVIA	0x64
     0025 04rr                      1-  443     	SUBAR	_count1S,W
     0026 0803                      1-  444     	BTRSS	STATUS,0
     0027 3rrr                      1-  445     	LGOTO	_00113_DS_
                                    1-  446     	.line	63, "main.c"; 	count1S = 0;
     0028 02rr                      1-  447     	CLRR	_count1S
                                    1-  448     	.line	64, "main.c"; 	chrgCount++;
                                    1-  449     	BANKSEL	_chrgCount
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 05rr                      1-  450     	INCR	_chrgCount,F
     002B 0D03                      1-  451     	BTRSC	STATUS,2
     002C 05rr                      1-  452     	INCR	(_chrgCount + 1),F
                                    1-  453     	.line	65, "main.c"; 	if(startFlag)
                                    1-  454     	BANKSEL	_startFlag
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  455     	MOVR	_startFlag,W
     002F 0D03                      1-  456     	BTRSC	STATUS,2
     0030 3rrr                      1-  457     	LGOTO	_00106_DS_
                                    1-  458     	.line	67, "main.c"; 	sleepCount++;
                                    1-  459     	BANKSEL	_sleepCount
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 05rr                      1-  460     	INCR	_sleepCount,F
     0033 0D03                      1-  461     	BTRSC	STATUS,2
     0034 05rr                      1-  462     	INCR	(_sleepCount + 1),F
     0035 3rrr                      1-  463     	LGOTO	_00113_DS_
     0036                           1-  464     _00106_DS_:
                                    1-  465     	.line	70, "main.c"; 	sleepCount = 0;
                                    1-  466     	BANKSEL	_sleepCount
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 02rr                      1-  467     	CLRR	_sleepCount
     0038 02rr                      1-  468     	CLRR	(_sleepCount + 1)
     0039                           1-  469     _00113_DS_:
                                    1-  470     	.line	76, "main.c"; 	INTF = 0;
     0039 02rr                      1-  471     	CLRR	_INTF
                                    1-  472     	.line	78, "main.c"; 	}
                                    1-  473     	BANKSEL	___sdcc_saved_stk01
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1-  474     	MOVR	___sdcc_saved_stk01,W
     003C 00rr                      1-  475     	MOVAR	STK01
                                    1-  476     	BANKSEL	___sdcc_saved_stk00
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1-  477     	MOVR	___sdcc_saved_stk00,W
     003F 00rr                      1-  478     	MOVAR	STK00
                                    1-  479     	BANKSEL	___sdcc_saved_fsr
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1-  480     	MOVR	___sdcc_saved_fsr,W
     0042 0084                      1-  481     	MOVAR	FSR
     0043 01rr                      1-  482     	MOVR	PSAVE,W
     0044 008A                      1-  483     	MOVAR	PCHBUF
     0045 0283                      1-  484     	CLRR	STATUS
     0046 15rr                      1-  485     	SWAPR	SSAVE,W
     0047 0083                      1-  486     	MOVAR	STATUS
     0048 15rr                      1-  487     	SWAPR	WSAVE,F
     0049 15rr                      1-  488     	SWAPR	WSAVE,W
     004A                           1-  489     END_OF_INTERRUPT:
     004A 0011                      1-  490     	RETIE	
                                    1-  492     ;--------------------------------------------------------
                                    1-  493     ; code
                                    1-  494     ;--------------------------------------------------------
                                    1-  495     ;***
                                    1-  496     ;  pBlock Stats: dbName = M
                                    1-  497     ;***
                                    1-  498     ;has an exit
                                    1-  499     ;functions called:
                                    1-  500     ;   _initTimer0
                                    1-  501     ;   _initAD
                                    1-  502     ;   _closeChrg
                                    1-  503     ;   _checkA
                                    1-  504     ;   _checkV
                                    1-  505     ;   _workCon
                                    1-  506     ;   _ledCtr
                                    1-  507     ;   _ledCon
                                    1-  508     ;   _initTimer0
                                    1-  509     ;   _initAD
                                    1-  510     ;   _closeChrg
                                    1-  511     ;   _checkA
                                    1-  512     ;   _checkV
                                    1-  513     ;   _workCon
                                    1-  514     ;   _ledCtr
                                    1-  515     ;   _ledCon
                                    1-  516     ;; Starting pCode block
                                    1-  517     .segment "code"; module=main, function=_main
     0000                           1-  519     _main:
                                    1-  520     ; 2 exit points
                                    1-  521     	.line	82, "main.c"; 	initTimer0();
     0000 2rrr                      1-  522     	LCALL	_initTimer0
                                    1-  523     	.line	83, "main.c"; 	initAD();
     0001 2rrr                      1-  524     	LCALL	_initAD
     0002                           1-  525     _00126_DS_:
                                    1-  526     	.line	86, "main.c"; 	CLRWDT(); 
     0002 0002                      1-  527     	clrwdt
                                    1-  528     	.line	87, "main.c"; 	if(!IntFlag)
                                    1-  529     	BANKSEL	_IntFlag
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 01rr                      1-  530     	MOVR	_IntFlag,W
     0005 0D03                      1-  531     	BTRSC	STATUS,2
     0006 3rrr                      1-  532     	LGOTO	_00126_DS_
                                    1-  533     	.line	89, "main.c"; 	IntFlag = 0;
     0007 02rr                      1-  534     	CLRR	_IntFlag
                                    1-  535     	.line	90, "main.c"; 	if(fullFlag)
                                    1-  536     	BANKSEL	_fullFlag
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1-  537     	MOVR	_fullFlag,W
     000A 0D03                      1-  538     	BTRSC	STATUS,2
     000B 3rrr                      1-  539     	LGOTO	_00121_DS_
                                    1-  540     	.line	92, "main.c"; 	PORTA &= (~0x5C);			//灯全灭
     000C 21A3                      1-  541     	MOVIA	0xa3
     000D 10rr                      1-  542     	ANDAR	_PORTA,F
                                    1-  543     	.line	93, "main.c"; 	PORTB &= (~0x03);
     000E 21FC                      1-  544     	MOVIA	0xfc
     000F 10rr                      1-  545     	ANDAR	_PORTB,F
                                    1-  546     	.line	94, "main.c"; 	closeChrg();
     0010 2rrr                      1-  547     	LCALL	_closeChrg
                                    1-  548     	.line	95, "main.c"; 	resetbit(PORTA,6);		//关闭风扇
     0011 1Frr                      1-  549     	BCR	_PORTA,6
                                    1-  550     	.line	96, "main.c"; 	continue;
     0012 3rrr                      1-  551     	LGOTO	_00126_DS_
                                    1-  552     ;;unsigned compare: left < lit (0x32=50), size=1
     0013                           1-  553     _00121_DS_:
                                    1-  554     	.line	98, "main.c"; 	if(count1S < 50)
     0013 2132                      1-  555     	MOVIA	0x32
                                    1-  556     	BANKSEL	_count1S
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1-  557     	SUBAR	_count1S,W
     0016 0C03                      1-  558     	BTRSC	STATUS,0
     0017 3rrr                      1-  559     	LGOTO	_00123_DS_
                                    1-  560     	.line	99, "main.c"; 	checkA();
     0018 2rrr                      1-  561     	LCALL	_checkA
     0019 3rrr                      1-  562     	LGOTO	_00124_DS_
     001A                           1-  563     _00123_DS_:
                                    1-  564     	.line	101, "main.c"; 	checkV();
     001A 2rrr                      1-  565     	LCALL	_checkV
     001B                           1-  566     _00124_DS_:
                                    1-  567     	.line	102, "main.c"; 	workCon();
     001B 2rrr                      1-  568     	LCALL	_workCon
                                    1-  569     	.line	103, "main.c"; 	ledCtr();
     001C 2rrr                      1-  570     	LCALL	_ledCtr
                                    1-  571     	.line	104, "main.c"; 	ledCon();
     001D 2rrr                      1-  572     	LCALL	_ledCon
     001E 3rrr                      1-  573     	LGOTO	_00126_DS_
                                    1-  574     	.line	106, "main.c"; 	}
                                    1-  575     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1-  576     ; exit point of _main
                                    1-  578     ;***
                                    1-  579     ;  pBlock Stats: dbName = C
                                    1-  580     ;***
                                    1-  581     ;has an exit
                                    1-  582     ;; Starting pCode block
                                    1-  583     .segment "code"; module=main, function=_closeChrg
     0000                           1-  585     _closeChrg:
                                    1-  586     ; 2 exit points
                                    1-  587     	.line	392, "main.c"; 	setbit(PORTB,3);		//5脚高电平，降压涓充
     0000 19rr                      1-  588     	BSR	_PORTB,3
                                    1-  589     	.line	393, "main.c"; 	setbit(PORTA,7);
     0001 1Brr                      1-  590     	BSR	_PORTA,7
                                    1-  591     	.line	394, "main.c"; 	}
                                    1-  592     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  593     ; exit point of _closeChrg
                                    1-  595     ;***
                                    1-  596     ;  pBlock Stats: dbName = C
                                    1-  597     ;***
                                    1-  598     ;has an exit
                                    1-  599     ;; Starting pCode block
                                    1-  600     .segment "code"; module=main, function=_halfChrg
     0000                           1-  602     _halfChrg:
                                    1-  603     ; 2 exit points
                                    1-  604     	.line	387, "main.c"; 	setbit(PORTB,3);		//5脚高电平，降压涓充
     0000 19rr                      1-  605     	BSR	_PORTB,3
                                    1-  606     	.line	388, "main.c"; 	resetbit(PORTA,7);
     0001 1Frr                      1-  607     	BCR	_PORTA,7
                                    1-  608     	.line	389, "main.c"; 	}
                                    1-  609     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  610     ; exit point of _halfChrg
                                    1-  612     ;***
                                    1-  613     ;  pBlock Stats: dbName = C
                                    1-  614     ;***
                                    1-  615     ;has an exit
                                    1-  616     ;; Starting pCode block
                                    1-  617     .segment "code"; module=main, function=_fullChrg
     0000                           1-  619     _fullChrg:
                                    1-  620     ; 2 exit points
                                    1-  621     	.line	382, "main.c"; 	resetbit(PORTB,3);		
     0000 1Drr                      1-  622     	BCR	_PORTB,3
                                    1-  623     	.line	383, "main.c"; 	resetbit(PORTA,7);
     0001 1Frr                      1-  624     	BCR	_PORTA,7
                                    1-  625     	.line	384, "main.c"; 	}
                                    1-  626     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  627     ; exit point of _fullChrg
                                    1-  629     ;***
                                    1-  630     ;  pBlock Stats: dbName = C
                                    1-  631     ;***
                                    1-  632     ;has an exit
                                    1-  633     ;5 compiler assigned registers:
                                    1-  634     ;   r0x101E
                                    1-  635     ;   STK00
                                    1-  636     ;   r0x101F
                                    1-  637     ;   r0x1020
                                    1-  638     ;   r0x1021
                                    1-  639     ;; Starting pCode block
                                    1-  640     .segment "code"; module=main, function=_delay
                                    1-  642     ;local variable name mapping:
     0000                           1-  647     _delay:
                                    1-  648     ; 2 exit points
                                    1-  649     	.line	374, "main.c"; 	void delay(uint16_t time)
                                    1-  650     	BANKSEL	r0x101E
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  651     	MOVAR	r0x101E
     0002 01rr                      1-  652     	MOVR	STK00,W
                                    1-  653     	BANKSEL	r0x101F
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  654     	MOVAR	r0x101F
                                    1-  655     	.line	376, "main.c"; 	for(uint16_t i=0;i<time;i++);
                                    1-  656     	BANKSEL	r0x1020
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  657     	CLRR	r0x1020
                                    1-  658     	BANKSEL	r0x1021
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  659     	CLRR	r0x1021
     0009                           1-  660     _00352_DS_:
                                    1-  661     	BANKSEL	r0x101E
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  662     	MOVR	r0x101E,W
                                    1-  663     	BANKSEL	r0x1021
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  664     	SUBAR	r0x1021,W
     000D 0903                      1-  665     	BTRSS	STATUS,2
     000E 3rrr                      1-  666     	LGOTO	_00363_DS_
                                    1-  667     	BANKSEL	r0x101F
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  668     	MOVR	r0x101F,W
                                    1-  669     	BANKSEL	r0x1020
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  670     	SUBAR	r0x1020,W
     0013                           1-  671     _00363_DS_:
     0013 0C03                      1-  672     	BTRSC	STATUS,0
     0014 3rrr                      1-  673     	LGOTO	_00354_DS_
                                    1-  674     	BANKSEL	r0x1020
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  675     	INCR	r0x1020,F
     0017 0903                      1-  676     	BTRSS	STATUS,2
     0018 3rrr                      1-  677     	LGOTO	_00001_DS_
                                    1-  678     	BANKSEL	r0x1021
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  679     	INCR	r0x1021,F
     001B                           1-  680     _00001_DS_:
     001B 3rrr                      1-  681     	LGOTO	_00352_DS_
     001C                           1-  682     _00354_DS_:
                                    1-  683     	.line	377, "main.c"; 	}
                                    1-  684     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  685     ; exit point of _delay
                                    1-  687     ;***
                                    1-  688     ;  pBlock Stats: dbName = C
                                    1-  689     ;***
                                    1-  690     ;has an exit
                                    1-  691     ;; Starting pCode block
                                    1-  692     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  694     _F_wait_eoc:
                                    1-  695     ; 2 exit points
     0000                           1-  696     _00345_DS_:
                                    1-  697     	.line	370, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  698     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  699     	LGOTO	_00345_DS_
                                    1-  700     	.line	372, "main.c"; 	}
                                    1-  701     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  702     ; exit point of _F_wait_eoc
                                    1-  704     ;***
                                    1-  705     ;  pBlock Stats: dbName = C
                                    1-  706     ;***
                                    1-  707     ;has an exit
                                    1-  708     ;functions called:
                                    1-  709     ;   _delay
                                    1-  710     ;   _F_wait_eoc
                                    1-  711     ;   _delay
                                    1-  712     ;   _F_wait_eoc
                                    1-  713     ;7 compiler assigned registers:
                                    1-  714     ;   r0x1022
                                    1-  715     ;   STK00
                                    1-  716     ;   r0x1023
                                    1-  717     ;   r0x1024
                                    1-  718     ;   r0x1025
                                    1-  719     ;   r0x1026
                                    1-  720     ;   r0x1027
                                    1-  721     ;; Starting pCode block
                                    1-  722     .segment "code"; module=main, function=_F_AIN0_Convert
                                    1-  724     ;local variable name mapping:
     0000                           1-  727     _F_AIN0_Convert:
                                    1-  728     ; 2 exit points
                                    1-  729     	.line	351, "main.c"; 	void F_AIN0_Convert(char count)
                                    1-  730     	BANKSEL	r0x1022
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  731     	MOVAR	r0x1022
                                    1-  732     	.line	354, "main.c"; 	ADMD  = 0x90 | C_ADC_PA0;				// Select AIN0(PA0) pad as ADC input
     0002 2190                      1-  733     	MOVIA	0x90
     0003 00rr                      1-  734     	MOVAR	_ADMD
                                    1-  735     	.line	355, "main.c"; 	delay(100);
     0004 2164                      1-  736     	MOVIA	0x64
     0005 00rr                      1-  737     	MOVAR	STK00
     0006 2100                      1-  738     	MOVIA	0x00
     0007 2rrr                      1-  739     	LCALL	_delay
                                    1-  740     	.line	356, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  741     	MOVIA	0x01
                                    1-  742     	BANKSEL	r0x1023
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  743     	MOVAR	r0x1023
     000B                           1-  744     _00338_DS_:
                                    1-  745     	BANKSEL	r0x1023
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1-  746     	MOVR	r0x1023,W
                                    1-  747     	BANKSEL	r0x1022
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  748     	SUBAR	r0x1022,W
     000F 0803                      1-  749     	BTRSS	STATUS,0
     0010 3rrr                      1-  750     	LGOTO	_00340_DS_
                                    1-  751     	.line	358, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0011 1Brr                      1-  752     	BSR	_ADMDbits,6
                                    1-  753     	.line	359, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0012 2rrr                      1-  754     	LCALL	_F_wait_eoc
                                    1-  755     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  756     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1-  757     	.line	360, "main.c"; 	if(i>4)
     0013 2105                      1-  758     	MOVIA	0x05
                                    1-  759     	BANKSEL	r0x1023
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1-  760     	SUBAR	r0x1023,W
     0016 0803                      1-  761     	BTRSS	STATUS,0
     0017 3rrr                      1-  762     	LGOTO	_00002_DS_
                                    1-  763     	.line	362, "main.c"; 	R_AIN0_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1-  764     	MOVIA	0x0f
     0019 10rr                      1-  765     	ANDAR	_ADR,W
                                    1-  766     ;;3	MOVAR	r0x1024
                                    1-  767     	BANKSEL	_R_AIN0_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1-  768     	ADDAR	_R_AIN0_DATA_LB,F
                                    1-  769     	.line	363, "main.c"; 	R_AIN0_DATA    += ADD; 
     001C 01rr                      1-  770     	MOVR	_ADD,W
                                    1-  771     	BANKSEL	r0x1024
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  772     	MOVAR	r0x1024
                                    1-  773     ;;1	CLRR	r0x1025
                                    1-  774     ;;106	MOVR	r0x1024,W
                                    1-  775     ;;104	MOVAR	r0x1026
     001F 2100                      1-  776     	MOVIA	0x00
                                    1-  777     	BANKSEL	r0x1027
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1-  778     	MOVAR	r0x1027
                                    1-  779     ;;105	MOVR	r0x1026,W
                                    1-  780     	BANKSEL	r0x1024
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  781     	MOVR	r0x1024,W
                                    1-  782     	BANKSEL	_R_AIN0_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1-  783     	ADDAR	_R_AIN0_DATA,F
                                    1-  784     	BANKSEL	r0x1027
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  785     	MOVR	r0x1027,W
     0028 0C03                      1-  786     	BTRSC	STATUS,0
     0029 05rr                      1-  787     	INCR	r0x1027,W
     002A 0D03                      1-  788     	BTRSC	STATUS,2
     002B 3rrr                      1-  789     	LGOTO	_00002_DS_
                                    1-  790     	BANKSEL	_R_AIN0_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1-  791     	ADDAR	(_R_AIN0_DATA + 1),F
     002E                           1-  792     _00002_DS_:
                                    1-  793     	.line	356, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  794     	BANKSEL	r0x1023
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1-  795     	INCR	r0x1023,F
     0030 3rrr                      1-  796     	LGOTO	_00338_DS_
     0031                           1-  797     _00340_DS_:
                                    1-  798     	.line	366, "main.c"; 	}
                                    1-  799     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1-  800     ; exit point of _F_AIN0_Convert
                                    1-  802     ;***
                                    1-  803     ;  pBlock Stats: dbName = C
                                    1-  804     ;***
                                    1-  805     ;has an exit
                                    1-  806     ;functions called:
                                    1-  807     ;   _delay
                                    1-  808     ;   _F_wait_eoc
                                    1-  809     ;   _delay
                                    1-  810     ;   _F_wait_eoc
                                    1-  811     ;7 compiler assigned registers:
                                    1-  812     ;   r0x1028
                                    1-  813     ;   STK00
                                    1-  814     ;   r0x1029
                                    1-  815     ;   r0x102A
                                    1-  816     ;   r0x102B
                                    1-  817     ;   r0x102C
                                    1-  818     ;   r0x102D
                                    1-  819     ;; Starting pCode block
                                    1-  820     .segment "code"; module=main, function=_F_AIN7_Convert
                                    1-  822     ;local variable name mapping:
     0000                           1-  825     _F_AIN7_Convert:
                                    1-  826     ; 2 exit points
                                    1-  827     	.line	335, "main.c"; 	void F_AIN7_Convert(char count)
                                    1-  828     	BANKSEL	r0x1028
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  829     	MOVAR	r0x1028
                                    1-  830     	.line	338, "main.c"; 	ADMD  = 0x90 | C_ADC_PB2;				// Select AIN0(PA0) pad as ADC input
     0002 2197                      1-  831     	MOVIA	0x97
     0003 00rr                      1-  832     	MOVAR	_ADMD
                                    1-  833     	.line	339, "main.c"; 	delay(100);
     0004 2164                      1-  834     	MOVIA	0x64
     0005 00rr                      1-  835     	MOVAR	STK00
     0006 2100                      1-  836     	MOVIA	0x00
     0007 2rrr                      1-  837     	LCALL	_delay
                                    1-  838     	.line	340, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  839     	MOVIA	0x01
                                    1-  840     	BANKSEL	r0x1029
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  841     	MOVAR	r0x1029
     000B                           1-  842     _00327_DS_:
                                    1-  843     	BANKSEL	r0x1029
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1-  844     	MOVR	r0x1029,W
                                    1-  845     	BANKSEL	r0x1028
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  846     	SUBAR	r0x1028,W
     000F 0803                      1-  847     	BTRSS	STATUS,0
     0010 3rrr                      1-  848     	LGOTO	_00329_DS_
                                    1-  849     	.line	342, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0011 1Brr                      1-  850     	BSR	_ADMDbits,6
                                    1-  851     	.line	343, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0012 2rrr                      1-  852     	LCALL	_F_wait_eoc
                                    1-  853     	.line	344, "main.c"; 	R_AIN7_DATA_LB += ( 0x0F & ADR); 
     0013 210F                      1-  854     	MOVIA	0x0f
     0014 10rr                      1-  855     	ANDAR	_ADR,W
                                    1-  856     ;;3	MOVAR	r0x102A
                                    1-  857     	BANKSEL	_R_AIN7_DATA_LB
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 03rr                      1-  858     	ADDAR	_R_AIN7_DATA_LB,F
                                    1-  859     	.line	345, "main.c"; 	R_AIN7_DATA    += ADD; 
     0017 01rr                      1-  860     	MOVR	_ADD,W
                                    1-  861     	BANKSEL	r0x102A
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1-  862     	MOVAR	r0x102A
                                    1-  863     ;;1	CLRR	r0x102B
                                    1-  864     ;;103	MOVR	r0x102A,W
                                    1-  865     ;;101	MOVAR	r0x102C
     001A 2100                      1-  866     	MOVIA	0x00
                                    1-  867     	BANKSEL	r0x102D
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  868     	MOVAR	r0x102D
                                    1-  869     ;;102	MOVR	r0x102C,W
                                    1-  870     	BANKSEL	r0x102A
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  871     	MOVR	r0x102A,W
                                    1-  872     	BANKSEL	_R_AIN7_DATA
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 03rr                      1-  873     	ADDAR	_R_AIN7_DATA,F
                                    1-  874     	BANKSEL	r0x102D
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1-  875     	MOVR	r0x102D,W
     0023 0C03                      1-  876     	BTRSC	STATUS,0
     0024 05rr                      1-  877     	INCR	r0x102D,W
     0025 0D03                      1-  878     	BTRSC	STATUS,2
     0026 3rrr                      1-  879     	LGOTO	_00003_DS_
                                    1-  880     	BANKSEL	_R_AIN7_DATA
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 03rr                      1-  881     	ADDAR	(_R_AIN7_DATA + 1),F
     0029                           1-  882     _00003_DS_:
                                    1-  883     	.line	340, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  884     	BANKSEL	r0x1029
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 05rr                      1-  885     	INCR	r0x1029,F
     002B 3rrr                      1-  886     	LGOTO	_00327_DS_
     002C                           1-  887     _00329_DS_:
                                    1-  888     	.line	348, "main.c"; 	}
                                    1-  889     	RETURN	
     002C 0010                      3-   26 m1      ret
                                    1-  890     ; exit point of _F_AIN7_Convert
                                    1-  892     ;***
                                    1-  893     ;  pBlock Stats: dbName = C
                                    1-  894     ;***
                                    1-  895     ;has an exit
                                    1-  896     ;functions called:
                                    1-  897     ;   _F_AIN7_Convert
                                    1-  898     ;   _F_AIN7_Convert
                                    1-  899     ;4 compiler assigned registers:
                                    1-  900     ;   r0x102E
                                    1-  901     ;   r0x102F
                                    1-  902     ;   r0x1030
                                    1-  903     ;   r0x1031
                                    1-  904     ;; Starting pCode block
                                    1-  905     .segment "code"; module=main, function=_checkV
     0000                           1-  907     _checkV:
                                    1-  908     ; 2 exit points
                                    1-  909     	.line	264, "main.c"; 	PACON = C_PB2_AIN7;
     0000 2180                      1-  910     	MOVIA	0x80
     0001 00rr                      1-  911     	MOVAR	_PACON
                                    1-  912     	.line	265, "main.c"; 	R_AIN7_DATA=R_AIN7_DATA_LB=0x00;
                                    1-  913     	BANKSEL	_R_AIN7_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  914     	CLRR	_R_AIN7_DATA_LB
                                    1-  915     	BANKSEL	_R_AIN7_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  916     	CLRR	_R_AIN7_DATA
     0006 02rr                      1-  917     	CLRR	(_R_AIN7_DATA + 1)
                                    1-  918     	.line	266, "main.c"; 	F_AIN7_Convert(8);					// execute AIN0 ADC converting 8 times
     0007 2108                      1-  919     	MOVIA	0x08
     0008 2rrr                      1-  920     	LCALL	_F_AIN7_Convert
                                    1-  921     	.line	267, "main.c"; 	R_AIN7_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  922     	BANKSEL	_R_AIN7_DATA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 15rr                      1-  923     	SWAPR	(_R_AIN7_DATA + 1),W
     000B 22F0                      1-  924     	ANDIA	0xf0
     000C 00rr                      1-  925     	MOVAR	(_R_AIN7_DATA + 1)
     000D 15rr                      1-  926     	SWAPR	_R_AIN7_DATA,W
     000E 00rr                      1-  927     	MOVAR	_R_AIN7_DATA
     000F 220F                      1-  928     	ANDIA	0x0f
     0010 11rr                      1-  929     	IORAR	(_R_AIN7_DATA + 1),F
     0011 12rr                      1-  930     	XORAR	_R_AIN7_DATA,F
                                    1-  931     	.line	268, "main.c"; 	R_AIN7_DATA_LB &= 0xF0;				// Only get Bit7~4
     0012 21F0                      1-  932     	MOVIA	0xf0
                                    1-  933     	BANKSEL	_R_AIN7_DATA_LB
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 10rr                      1-  934     	ANDAR	_R_AIN7_DATA_LB,F
                                    1-  935     	.line	269, "main.c"; 	R_AIN7_DATA += R_AIN7_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0015 01rr                      1-  936     	MOVR	_R_AIN7_DATA_LB,W
                                    1-  937     	BANKSEL	r0x1030
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1-  938     	MOVAR	r0x1030
                                    1-  939     ;;1	MOVAR	r0x102E
                                    1-  940     ;;1	CLRR	r0x102F
                                    1-  941     ;;100	MOVR	r0x102E,W
     0018 2100                      1-  942     	MOVIA	0x00
                                    1-  943     	BANKSEL	r0x1031
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1-  944     	MOVAR	r0x1031
                                    1-  945     	BANKSEL	r0x1030
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1-  946     	MOVR	r0x1030,W
                                    1-  947     	BANKSEL	_R_AIN7_DATA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 03rr                      1-  948     	ADDAR	_R_AIN7_DATA,F
                                    1-  949     	BANKSEL	r0x1031
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  950     	MOVR	r0x1031,W
     0021 0C03                      1-  951     	BTRSC	STATUS,0
     0022 05rr                      1-  952     	INCR	r0x1031,W
     0023 0D03                      1-  953     	BTRSC	STATUS,2
     0024 3rrr                      1-  954     	LGOTO	_00004_DS_
                                    1-  955     	BANKSEL	_R_AIN7_DATA
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 03rr                      1-  956     	ADDAR	(_R_AIN7_DATA + 1),F
                                    1-  957     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0027                           1-  958     _00004_DS_:
                                    1-  959     	.line	270, "main.c"; 	R_AIN7_DATA >>=3;					// R_AIN0_DATA divided 8
     0027 1C03                      1-  960     	BCR	STATUS,0
                                    1-  961     	BANKSEL	_R_AIN7_DATA
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 13rr                      1-  962     	RRR	(_R_AIN7_DATA + 1),F
     002A 13rr                      1-  963     	RRR	_R_AIN7_DATA,F
                                    1-  964     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002B 1C03                      1-  965     	BCR	STATUS,0
     002C 13rr                      1-  966     	RRR	(_R_AIN7_DATA + 1),F
     002D 13rr                      1-  967     	RRR	_R_AIN7_DATA,F
                                    1-  968     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002E 1C03                      1-  969     	BCR	STATUS,0
     002F 13rr                      1-  970     	RRR	(_R_AIN7_DATA + 1),F
     0030 13rr                      1-  971     	RRR	_R_AIN7_DATA,F
                                    1-  972     	.line	271, "main.c"; 	preV = R_AIN7_DATA;
     0031 01rr                      1-  973     	MOVR	_R_AIN7_DATA,W
                                    1-  974     	BANKSEL	_preV
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1-  975     	MOVAR	_preV
                                    1-  976     	BANKSEL	_R_AIN7_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1-  977     	MOVR	(_R_AIN7_DATA + 1),W
                                    1-  978     	BANKSEL	_preV
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1-  979     	MOVAR	(_preV + 1)
                                    1-  980     ;;unsigned compare: left < lit (0xA=10), size=2
                                    1-  981     	.line	274, "main.c"; 	if(R_AIN7_DATA < 10 && preA <= 10)	//小于0.8A
     0038 2100                      1-  982     	MOVIA	0x00
                                    1-  983     	BANKSEL	_R_AIN7_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1-  984     	SUBAR	(_R_AIN7_DATA + 1),W
     003B 0903                      1-  985     	BTRSS	STATUS,2
     003C 3rrr                      1-  986     	LGOTO	_00310_DS_
     003D 210A                      1-  987     	MOVIA	0x0a
     003E 04rr                      1-  988     	SUBAR	_R_AIN7_DATA,W
     003F                           1-  989     _00310_DS_:
     003F 0C03                      1-  990     	BTRSC	STATUS,0
     0040 3rrr                      1-  991     	LGOTO	_00251_DS_
                                    1-  992     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  993     ;;unsigned compare: left >= lit (0xB=11), size=2
     0041 2100                      1-  994     	MOVIA	0x00
                                    1-  995     	BANKSEL	_preA
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 04rr                      1-  996     	SUBAR	(_preA + 1),W
     0044 0903                      1-  997     	BTRSS	STATUS,2
     0045 3rrr                      1-  998     	LGOTO	_00311_DS_
     0046 210B                      1-  999     	MOVIA	0x0b
     0047 04rr                      1- 1000     	SUBAR	_preA,W
     0048                           1- 1001     _00311_DS_:
     0048 0C03                      1- 1002     	BTRSC	STATUS,0
     0049 3rrr                      1- 1003     	LGOTO	_00251_DS_
                                    1- 1004     	.line	276, "main.c"; 	startFlag = 0;
                                    1- 1005     	BANKSEL	_startFlag
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 02rr                      1- 1006     	CLRR	_startFlag
                                    1- 1007     	.line	277, "main.c"; 	ledStep = 1;
     004C 2101                      1- 1008     	MOVIA	0x01
                                    1- 1009     	BANKSEL	_ledStep
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1- 1010     	MOVAR	_ledStep
                                    1- 1011     	.line	278, "main.c"; 	chrgCount = 0;
                                    1- 1012     	BANKSEL	_chrgCount
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 02rr                      1- 1013     	CLRR	_chrgCount
     0051 02rr                      1- 1014     	CLRR	(_chrgCount + 1)
                                    1- 1015     	.line	279, "main.c"; 	sleepCount = 0;
                                    1- 1016     	BANKSEL	_sleepCount
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 02rr                      1- 1017     	CLRR	_sleepCount
     0054 02rr                      1- 1018     	CLRR	(_sleepCount + 1)
                                    1- 1019     	.line	280, "main.c"; 	workStep = 2;
     0055 2102                      1- 1020     	MOVIA	0x02
                                    1- 1021     	BANKSEL	_workStep
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 00rr                      1- 1022     	MOVAR	_workStep
                                    1- 1023     	.line	281, "main.c"; 	return;
     0058 3rrr                      1- 1024     	LGOTO	_00275_DS_
                                    1- 1025     ;;unsigned compare: left < lit (0x23D=573), size=2
     0059                           1- 1026     _00251_DS_:
                                    1- 1027     	.line	283, "main.c"; 	if(R_AIN7_DATA < 573)	//71V - 73V 小于0.8A
     0059 2102                      1- 1028     	MOVIA	0x02
                                    1- 1029     	BANKSEL	_R_AIN7_DATA
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 04rr                      1- 1030     	SUBAR	(_R_AIN7_DATA + 1),W
     005C 0903                      1- 1031     	BTRSS	STATUS,2
     005D 3rrr                      1- 1032     	LGOTO	_00312_DS_
     005E 213D                      1- 1033     	MOVIA	0x3d
     005F 04rr                      1- 1034     	SUBAR	_R_AIN7_DATA,W
     0060                           1- 1035     _00312_DS_:
     0060 0C03                      1- 1036     	BTRSC	STATUS,0
     0061 3rrr                      1- 1037     	LGOTO	_00273_DS_
                                    1- 1038     ;;unsigned compare: left < lit (0x7B=123), size=2
                                    1- 1039     	.line	285, "main.c"; 	if(preA < 123 && (++fullCount > 1000))		//小于0.6A
     0062 2100                      1- 1040     	MOVIA	0x00
                                    1- 1041     	BANKSEL	_preA
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 04rr                      1- 1042     	SUBAR	(_preA + 1),W
     0065 0903                      1- 1043     	BTRSS	STATUS,2
     0066 3rrr                      1- 1044     	LGOTO	_00313_DS_
     0067 217B                      1- 1045     	MOVIA	0x7b
     0068 04rr                      1- 1046     	SUBAR	_preA,W
     0069                           1- 1047     _00313_DS_:
     0069 0C03                      1- 1048     	BTRSC	STATUS,0
     006A 3rrr                      1- 1049     	LGOTO	_00254_DS_
                                    1- 1050     	BANKSEL	_fullCount
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 05rr                      1- 1051     	INCR	_fullCount,F
     006D 0D03                      1- 1052     	BTRSC	STATUS,2
     006E 05rr                      1- 1053     	INCR	(_fullCount + 1),F
                                    1- 1054     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1055     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     006F 2103                      1- 1056     	MOVIA	0x03
     0070 04rr                      1- 1057     	SUBAR	(_fullCount + 1),W
     0071 0903                      1- 1058     	BTRSS	STATUS,2
     0072 3rrr                      1- 1059     	LGOTO	_00314_DS_
     0073 21E9                      1- 1060     	MOVIA	0xe9
     0074 04rr                      1- 1061     	SUBAR	_fullCount,W
     0075                           1- 1062     _00314_DS_:
     0075 0803                      1- 1063     	BTRSS	STATUS,0
     0076 3rrr                      1- 1064     	LGOTO	_00254_DS_
                                    1- 1065     	.line	287, "main.c"; 	fullCount = 1001;
     0077 21E9                      1- 1066     	MOVIA	0xe9
                                    1- 1067     	BANKSEL	_fullCount
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 00rr                      1- 1068     	MOVAR	_fullCount
     007A 2103                      1- 1069     	MOVIA	0x03
     007B 00rr                      1- 1070     	MOVAR	(_fullCount + 1)
                                    1- 1071     	.line	288, "main.c"; 	workStep = 3;
                                    1- 1072     	BANKSEL	_workStep
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 00rr                      1- 1073     	MOVAR	_workStep
                                    1- 1074     	.line	289, "main.c"; 	ledStep = 2;
     007E 2102                      1- 1075     	MOVIA	0x02
                                    1- 1076     	BANKSEL	_ledStep
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 00rr                      1- 1077     	MOVAR	_ledStep
     0081 3rrr                      1- 1078     	LGOTO	_00275_DS_
     0082                           1- 1079     _00254_DS_:
                                    1- 1080     	.line	293, "main.c"; 	sleepCount = 0;
                                    1- 1081     	BANKSEL	_sleepCount
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 02rr                      1- 1082     	CLRR	_sleepCount
     0084 02rr                      1- 1083     	CLRR	(_sleepCount + 1)
                                    1- 1084     	.line	294, "main.c"; 	fullCount = 0;
                                    1- 1085     	BANKSEL	_fullCount
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 02rr                      1- 1086     	CLRR	_fullCount
     0087 02rr                      1- 1087     	CLRR	(_fullCount + 1)
                                    1- 1088     	.line	295, "main.c"; 	workStep = 1;
     0088 2101                      1- 1089     	MOVIA	0x01
                                    1- 1090     	BANKSEL	_workStep
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 00rr                      1- 1091     	MOVAR	_workStep
                                    1- 1092     	.line	296, "main.c"; 	ledStep = 1;
                                    1- 1093     	BANKSEL	_ledStep
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 00rr                      1- 1094     	MOVAR	_ledStep
     008D 3rrr                      1- 1095     	LGOTO	_00275_DS_
                                    1- 1096     ;;unsigned compare: left < lit (0x629=1577), size=2
     008E                           1- 1097     _00273_DS_:
                                    1- 1098     	.line	299, "main.c"; 	else if(R_AIN7_DATA < 1577)		//67V - 71V       小于2.45A   亮3个，闪2个
     008E 2106                      1- 1099     	MOVIA	0x06
                                    1- 1100     	BANKSEL	_R_AIN7_DATA
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 04rr                      1- 1101     	SUBAR	(_R_AIN7_DATA + 1),W
     0091 0903                      1- 1102     	BTRSS	STATUS,2
     0092 3rrr                      1- 1103     	LGOTO	_00315_DS_
     0093 2129                      1- 1104     	MOVIA	0x29
     0094 04rr                      1- 1105     	SUBAR	_R_AIN7_DATA,W
     0095                           1- 1106     _00315_DS_:
     0095 0C03                      1- 1107     	BTRSC	STATUS,0
     0096 3rrr                      1- 1108     	LGOTO	_00270_DS_
                                    1- 1109     ;;unsigned compare: left < lit (0x7B=123), size=2
                                    1- 1110     	.line	301, "main.c"; 	if(preA < 123 && (++fullCount > 1000))		//小于0.6A
     0097 2100                      1- 1111     	MOVIA	0x00
                                    1- 1112     	BANKSEL	_preA
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 04rr                      1- 1113     	SUBAR	(_preA + 1),W
     009A 0903                      1- 1114     	BTRSS	STATUS,2
     009B 3rrr                      1- 1115     	LGOTO	_00316_DS_
     009C 217B                      1- 1116     	MOVIA	0x7b
     009D 04rr                      1- 1117     	SUBAR	_preA,W
     009E                           1- 1118     _00316_DS_:
     009E 0C03                      1- 1119     	BTRSC	STATUS,0
     009F 3rrr                      1- 1120     	LGOTO	_00258_DS_
                                    1- 1121     	BANKSEL	_fullCount
     00A0 rrrr                      3-   71 m1      .banksel ram_address
     00A1 05rr                      1- 1122     	INCR	_fullCount,F
     00A2 0D03                      1- 1123     	BTRSC	STATUS,2
     00A3 05rr                      1- 1124     	INCR	(_fullCount + 1),F
                                    1- 1125     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1126     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     00A4 2103                      1- 1127     	MOVIA	0x03
     00A5 04rr                      1- 1128     	SUBAR	(_fullCount + 1),W
     00A6 0903                      1- 1129     	BTRSS	STATUS,2
     00A7 3rrr                      1- 1130     	LGOTO	_00317_DS_
     00A8 21E9                      1- 1131     	MOVIA	0xe9
     00A9 04rr                      1- 1132     	SUBAR	_fullCount,W
     00AA                           1- 1133     _00317_DS_:
     00AA 0803                      1- 1134     	BTRSS	STATUS,0
     00AB 3rrr                      1- 1135     	LGOTO	_00258_DS_
                                    1- 1136     	.line	303, "main.c"; 	sleepCount = 0;
                                    1- 1137     	BANKSEL	_sleepCount
     00AC rrrr                      3-   71 m1      .banksel ram_address
     00AD 02rr                      1- 1138     	CLRR	_sleepCount
     00AE 02rr                      1- 1139     	CLRR	(_sleepCount + 1)
                                    1- 1140     	.line	304, "main.c"; 	fullCount = 1001;
     00AF 21E9                      1- 1141     	MOVIA	0xe9
                                    1- 1142     	BANKSEL	_fullCount
     00B0 rrrr                      3-   71 m1      .banksel ram_address
     00B1 00rr                      1- 1143     	MOVAR	_fullCount
     00B2 2103                      1- 1144     	MOVIA	0x03
     00B3 00rr                      1- 1145     	MOVAR	(_fullCount + 1)
                                    1- 1146     	.line	305, "main.c"; 	workStep = 3;
                                    1- 1147     	BANKSEL	_workStep
     00B4 rrrr                      3-   71 m1      .banksel ram_address
     00B5 00rr                      1- 1148     	MOVAR	_workStep
                                    1- 1149     	.line	306, "main.c"; 	ledStep = 3;
                                    1- 1150     	BANKSEL	_ledStep
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 00rr                      1- 1151     	MOVAR	_ledStep
     00B8 3rrr                      1- 1152     	LGOTO	_00275_DS_
     00B9                           1- 1153     _00258_DS_:
                                    1- 1154     	.line	310, "main.c"; 	fullCount = 0;
                                    1- 1155     	BANKSEL	_fullCount
     00B9 rrrr                      3-   71 m1      .banksel ram_address
     00BA 02rr                      1- 1156     	CLRR	_fullCount
     00BB 02rr                      1- 1157     	CLRR	(_fullCount + 1)
                                    1- 1158     	.line	311, "main.c"; 	workStep = 1;
     00BC 2101                      1- 1159     	MOVIA	0x01
                                    1- 1160     	BANKSEL	_workStep
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 00rr                      1- 1161     	MOVAR	_workStep
                                    1- 1162     	.line	312, "main.c"; 	ledStep = 2;
     00BF 2102                      1- 1163     	MOVIA	0x02
                                    1- 1164     	BANKSEL	_ledStep
     00C0 rrrr                      3-   71 m1      .banksel ram_address
     00C1 00rr                      1- 1165     	MOVAR	_ledStep
     00C2 3rrr                      1- 1166     	LGOTO	_00275_DS_
                                    1- 1167     ;;unsigned compare: left < lit (0x866=2150), size=2
     00C3                           1- 1168     _00270_DS_:
                                    1- 1169     	.line	316, "main.c"; 	else if(R_AIN7_DATA < 2150)		//64.8V - 67V  小于2.48A   亮2个，闪3个
     00C3 2108                      1- 1170     	MOVIA	0x08
                                    1- 1171     	BANKSEL	_R_AIN7_DATA
     00C4 rrrr                      3-   71 m1      .banksel ram_address
     00C5 04rr                      1- 1172     	SUBAR	(_R_AIN7_DATA + 1),W
     00C6 0903                      1- 1173     	BTRSS	STATUS,2
     00C7 3rrr                      1- 1174     	LGOTO	_00318_DS_
     00C8 2166                      1- 1175     	MOVIA	0x66
     00C9 04rr                      1- 1176     	SUBAR	_R_AIN7_DATA,W
     00CA                           1- 1177     _00318_DS_:
     00CA 0C03                      1- 1178     	BTRSC	STATUS,0
     00CB 3rrr                      1- 1179     	LGOTO	_00267_DS_
                                    1- 1180     	.line	318, "main.c"; 	fullCount = 0;
                                    1- 1181     	BANKSEL	_fullCount
     00CC rrrr                      3-   71 m1      .banksel ram_address
     00CD 02rr                      1- 1182     	CLRR	_fullCount
     00CE 02rr                      1- 1183     	CLRR	(_fullCount + 1)
                                    1- 1184     	.line	319, "main.c"; 	workStep = 1;
     00CF 2101                      1- 1185     	MOVIA	0x01
                                    1- 1186     	BANKSEL	_workStep
     00D0 rrrr                      3-   71 m1      .banksel ram_address
     00D1 00rr                      1- 1187     	MOVAR	_workStep
                                    1- 1188     	.line	320, "main.c"; 	ledStep = 3;
     00D2 2103                      1- 1189     	MOVIA	0x03
                                    1- 1190     	BANKSEL	_ledStep
     00D3 rrrr                      3-   71 m1      .banksel ram_address
     00D4 00rr                      1- 1191     	MOVAR	_ledStep
     00D5 3rrr                      1- 1192     	LGOTO	_00275_DS_
                                    1- 1193     ;;unsigned compare: left < lit (0xA8F=2703), size=2
     00D6                           1- 1194     _00267_DS_:
                                    1- 1195     	.line	322, "main.c"; 	else if(R_AIN7_DATA < 2703)		//62.5V - 64.8V  PB2脚 1.32V   亮1个，闪4个
     00D6 210A                      1- 1196     	MOVIA	0x0a
                                    1- 1197     	BANKSEL	_R_AIN7_DATA
     00D7 rrrr                      3-   71 m1      .banksel ram_address
     00D8 04rr                      1- 1198     	SUBAR	(_R_AIN7_DATA + 1),W
     00D9 0903                      1- 1199     	BTRSS	STATUS,2
     00DA 3rrr                      1- 1200     	LGOTO	_00319_DS_
     00DB 218F                      1- 1201     	MOVIA	0x8f
     00DC 04rr                      1- 1202     	SUBAR	_R_AIN7_DATA,W
     00DD                           1- 1203     _00319_DS_:
     00DD 0C03                      1- 1204     	BTRSC	STATUS,0
     00DE 3rrr                      1- 1205     	LGOTO	_00264_DS_
                                    1- 1206     	.line	324, "main.c"; 	workStep = 1;
     00DF 2101                      1- 1207     	MOVIA	0x01
                                    1- 1208     	BANKSEL	_workStep
     00E0 rrrr                      3-   71 m1      .banksel ram_address
     00E1 00rr                      1- 1209     	MOVAR	_workStep
                                    1- 1210     	.line	325, "main.c"; 	ledStep = 4;
     00E2 2104                      1- 1211     	MOVIA	0x04
                                    1- 1212     	BANKSEL	_ledStep
     00E3 rrrr                      3-   71 m1      .banksel ram_address
     00E4 00rr                      1- 1213     	MOVAR	_ledStep
     00E5 3rrr                      1- 1214     	LGOTO	_00275_DS_
                                    1- 1215     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1216     ;;unsigned compare: left >= lit (0xA90=2704), size=2
     00E6                           1- 1217     _00264_DS_:
                                    1- 1218     	.line	327, "main.c"; 	else if(R_AIN7_DATA > 2703)		//小于62.5V  PB2脚 1.32V   亮0个，闪5个
     00E6 210A                      1- 1219     	MOVIA	0x0a
                                    1- 1220     	BANKSEL	_R_AIN7_DATA
     00E7 rrrr                      3-   71 m1      .banksel ram_address
     00E8 04rr                      1- 1221     	SUBAR	(_R_AIN7_DATA + 1),W
     00E9 0903                      1- 1222     	BTRSS	STATUS,2
     00EA 3rrr                      1- 1223     	LGOTO	_00320_DS_
     00EB 2190                      1- 1224     	MOVIA	0x90
     00EC 04rr                      1- 1225     	SUBAR	_R_AIN7_DATA,W
     00ED                           1- 1226     _00320_DS_:
     00ED 0803                      1- 1227     	BTRSS	STATUS,0
     00EE 3rrr                      1- 1228     	LGOTO	_00275_DS_
                                    1- 1229     	.line	329, "main.c"; 	workStep = 1;
     00EF 2101                      1- 1230     	MOVIA	0x01
                                    1- 1231     	BANKSEL	_workStep
     00F0 rrrr                      3-   71 m1      .banksel ram_address
     00F1 00rr                      1- 1232     	MOVAR	_workStep
                                    1- 1233     	.line	330, "main.c"; 	ledStep = 5;
     00F2 2105                      1- 1234     	MOVIA	0x05
                                    1- 1235     	BANKSEL	_ledStep
     00F3 rrrr                      3-   71 m1      .banksel ram_address
     00F4 00rr                      1- 1236     	MOVAR	_ledStep
     00F5                           1- 1237     _00275_DS_:
                                    1- 1238     	.line	333, "main.c"; 	}
                                    1- 1239     	RETURN	
     00F5 0010                      3-   26 m1      ret
                                    1- 1240     ; exit point of _checkV
                                    1- 1242     ;***
                                    1- 1243     ;  pBlock Stats: dbName = C
                                    1- 1244     ;***
                                    1- 1245     ;has an exit
                                    1- 1246     ;functions called:
                                    1- 1247     ;   _F_AIN0_Convert
                                    1- 1248     ;   _F_AIN0_Convert
                                    1- 1249     ;4 compiler assigned registers:
                                    1- 1250     ;   r0x1032
                                    1- 1251     ;   r0x1033
                                    1- 1252     ;   r0x1034
                                    1- 1253     ;   r0x1035
                                    1- 1254     ;; Starting pCode block
                                    1- 1255     .segment "code"; module=main, function=_checkA
     0000                           1- 1257     _checkA:
                                    1- 1258     ; 2 exit points
                                    1- 1259     	.line	251, "main.c"; 	PACON = C_PA0_AIN0;
     0000 2101                      1- 1260     	MOVIA	0x01
     0001 00rr                      1- 1261     	MOVAR	_PACON
                                    1- 1262     	.line	252, "main.c"; 	R_AIN0_DATA=R_AIN0_DATA_LB=0x00;
                                    1- 1263     	BANKSEL	_R_AIN0_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1264     	CLRR	_R_AIN0_DATA_LB
                                    1- 1265     	BANKSEL	_R_AIN0_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1266     	CLRR	_R_AIN0_DATA
     0006 02rr                      1- 1267     	CLRR	(_R_AIN0_DATA + 1)
                                    1- 1268     	.line	253, "main.c"; 	F_AIN0_Convert(8);					// execute AIN0 ADC converting 8 times
     0007 2108                      1- 1269     	MOVIA	0x08
     0008 2rrr                      1- 1270     	LCALL	_F_AIN0_Convert
                                    1- 1271     	.line	254, "main.c"; 	R_AIN0_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1272     	BANKSEL	_R_AIN0_DATA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 15rr                      1- 1273     	SWAPR	(_R_AIN0_DATA + 1),W
     000B 22F0                      1- 1274     	ANDIA	0xf0
     000C 00rr                      1- 1275     	MOVAR	(_R_AIN0_DATA + 1)
     000D 15rr                      1- 1276     	SWAPR	_R_AIN0_DATA,W
     000E 00rr                      1- 1277     	MOVAR	_R_AIN0_DATA
     000F 220F                      1- 1278     	ANDIA	0x0f
     0010 11rr                      1- 1279     	IORAR	(_R_AIN0_DATA + 1),F
     0011 12rr                      1- 1280     	XORAR	_R_AIN0_DATA,F
                                    1- 1281     	.line	255, "main.c"; 	R_AIN0_DATA_LB &= 0xF0;				// Only get Bit7~4
     0012 21F0                      1- 1282     	MOVIA	0xf0
                                    1- 1283     	BANKSEL	_R_AIN0_DATA_LB
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 10rr                      1- 1284     	ANDAR	_R_AIN0_DATA_LB,F
                                    1- 1285     	.line	256, "main.c"; 	R_AIN0_DATA += R_AIN0_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0015 01rr                      1- 1286     	MOVR	_R_AIN0_DATA_LB,W
                                    1- 1287     	BANKSEL	r0x1034
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1288     	MOVAR	r0x1034
                                    1- 1289     ;;1	MOVAR	r0x1032
                                    1- 1290     ;;1	CLRR	r0x1033
                                    1- 1291     ;;99	MOVR	r0x1032,W
     0018 2100                      1- 1292     	MOVIA	0x00
                                    1- 1293     	BANKSEL	r0x1035
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 1294     	MOVAR	r0x1035
                                    1- 1295     	BANKSEL	r0x1034
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1- 1296     	MOVR	r0x1034,W
                                    1- 1297     	BANKSEL	_R_AIN0_DATA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 03rr                      1- 1298     	ADDAR	_R_AIN0_DATA,F
                                    1- 1299     	BANKSEL	r0x1035
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1- 1300     	MOVR	r0x1035,W
     0021 0C03                      1- 1301     	BTRSC	STATUS,0
     0022 05rr                      1- 1302     	INCR	r0x1035,W
     0023 0D03                      1- 1303     	BTRSC	STATUS,2
     0024 3rrr                      1- 1304     	LGOTO	_00005_DS_
                                    1- 1305     	BANKSEL	_R_AIN0_DATA
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 03rr                      1- 1306     	ADDAR	(_R_AIN0_DATA + 1),F
                                    1- 1307     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0027                           1- 1308     _00005_DS_:
                                    1- 1309     	.line	257, "main.c"; 	R_AIN0_DATA >>=3;					// R_AIN0_DATA divided 8
     0027 1C03                      1- 1310     	BCR	STATUS,0
                                    1- 1311     	BANKSEL	_R_AIN0_DATA
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 13rr                      1- 1312     	RRR	(_R_AIN0_DATA + 1),F
     002A 13rr                      1- 1313     	RRR	_R_AIN0_DATA,F
                                    1- 1314     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002B 1C03                      1- 1315     	BCR	STATUS,0
     002C 13rr                      1- 1316     	RRR	(_R_AIN0_DATA + 1),F
     002D 13rr                      1- 1317     	RRR	_R_AIN0_DATA,F
                                    1- 1318     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002E 1C03                      1- 1319     	BCR	STATUS,0
     002F 13rr                      1- 1320     	RRR	(_R_AIN0_DATA + 1),F
     0030 13rr                      1- 1321     	RRR	_R_AIN0_DATA,F
                                    1- 1322     	.line	258, "main.c"; 	preA = R_AIN0_DATA;
     0031 01rr                      1- 1323     	MOVR	_R_AIN0_DATA,W
                                    1- 1324     	BANKSEL	_preA
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1- 1325     	MOVAR	_preA
                                    1- 1326     	BANKSEL	_R_AIN0_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 1327     	MOVR	(_R_AIN0_DATA + 1),W
                                    1- 1328     	BANKSEL	_preA
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 1329     	MOVAR	(_preA + 1)
                                    1- 1330     	.line	259, "main.c"; 	}
                                    1- 1331     	RETURN	
     0038 0010                      3-   26 m1      ret
                                    1- 1332     ; exit point of _checkA
                                    1- 1334     ;***
                                    1- 1335     ;  pBlock Stats: dbName = C
                                    1- 1336     ;***
                                    1- 1337     ;has an exit
                                    1- 1338     ;functions called:
                                    1- 1339     ;   _delay
                                    1- 1340     ;   _delay
                                    1- 1341     ;1 compiler assigned register :
                                    1- 1342     ;   STK00
                                    1- 1343     ;; Starting pCode block
                                    1- 1344     .segment "code"; module=main, function=_initAD
     0000                           1- 1346     _initAD:
                                    1- 1347     ; 2 exit points
                                    1- 1348     	.line	227, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA0 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2180                      1- 1349     	MOVIA	0x80
     0001 00rr                      1- 1350     	MOVAR	_ADMD
                                    1- 1351     	.line	230, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 02rr                      1- 1352     	CLRR	_ADVREFH
                                    1- 1353     	.line	237, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1354     	MOVIA	0x10
     0004 00rr                      1- 1355     	MOVAR	_ADR
                                    1- 1356     	.line	239, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1357     	MOVIA	0x03
     0006 00rr                      1- 1358     	MOVAR	_ADCR
                                    1- 1359     	.line	241, "main.c"; 	PACON = C_PB2_AIN7 ;						// 
     0007 2180                      1- 1360     	MOVIA	0x80
     0008 00rr                      1- 1361     	MOVAR	_PACON
                                    1- 1362     	.line	242, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 1363     	BSR	_ADMDbits,4
                                    1- 1364     	.line	243, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 1365     	MOVIA	0x64
     000B 00rr                      1- 1366     	MOVAR	STK00
     000C 2100                      1- 1367     	MOVIA	0x00
     000D 2rrr                      1- 1368     	LCALL	_delay
                                    1- 1369     	.line	246, "main.c"; 	}
                                    1- 1370     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1371     ; exit point of _initAD
                                    1- 1373     ;***
                                    1- 1374     ;  pBlock Stats: dbName = C
                                    1- 1375     ;***
                                    1- 1376     ;has an exit
                                    1- 1377     ;2 compiler assigned registers:
                                    1- 1378     ;   r0x1036
                                    1- 1379     ;   r0x1037
                                    1- 1380     ;; Starting pCode block
                                    1- 1381     .segment "code"; module=main, function=_ledCtr
     0000                           1- 1383     _ledCtr:
                                    1- 1384     ; 2 exit points
                                    1- 1385     	.line	195, "main.c"; 	if(ledLock)
                                    1- 1386     	BANKSEL	_ledLock
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1387     	MOVR	_ledLock,W
     0002 0903                      1- 1388     	BTRSS	STATUS,2
                                    1- 1389     	.line	197, "main.c"; 	return;
     0003 3rrr                      1- 1390     	LGOTO	_00224_DS_
                                    1- 1391     	.line	199, "main.c"; 	switch(ledStep)
     0004 2106                      1- 1392     	MOVIA	0x06
                                    1- 1393     	BANKSEL	_ledStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 04rr                      1- 1394     	SUBAR	_ledStep,W
     0007 0C03                      1- 1395     	BTRSC	STATUS,0
     0008 3rrr                      1- 1396     	LGOTO	_00221_DS_
     0009 21rr                      1- 1397     	MOVIA	((_00236_DS_ >> 8) & 0xff)
     000A 008A                      1- 1398     	MOVAR	PCHBUF
     000B 01rr                      1- 1399     	MOVR	_ledStep,W
     000C 25rr                      1- 1400     	ADDIA	_00236_DS_
     000D 0C03                      1- 1401     	BTRSC	STATUS,0
     000E 058A                      1- 1402     	INCR	PCHBUF,F
     000F 0082                      1- 1403     	MOVAR	PCL
     0010                           1- 1404     _00236_DS_:
     0010 3rrr                      1- 1405     	LGOTO	_00215_DS_
     0011 3rrr                      1- 1406     	LGOTO	_00216_DS_
     0012 3rrr                      1- 1407     	LGOTO	_00217_DS_
     0013 3rrr                      1- 1408     	LGOTO	_00218_DS_
     0014 3rrr                      1- 1409     	LGOTO	_00219_DS_
     0015 3rrr                      1- 1410     	LGOTO	_00220_DS_
     0016                           1- 1411     _00215_DS_:
                                    1- 1412     	.line	202, "main.c"; 	ledMin = 250;
     0016 21FA                      1- 1413     	MOVIA	0xfa
                                    1- 1414     	BANKSEL	_ledMin
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1415     	MOVAR	_ledMin
                                    1- 1416     	.line	203, "main.c"; 	break;
     0019 3rrr                      1- 1417     	LGOTO	_00221_DS_
     001A                           1- 1418     _00216_DS_:
                                    1- 1419     	.line	205, "main.c"; 	ledMin = 200;
     001A 21C8                      1- 1420     	MOVIA	0xc8
                                    1- 1421     	BANKSEL	_ledMin
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1422     	MOVAR	_ledMin
                                    1- 1423     	.line	206, "main.c"; 	break;
     001D 3rrr                      1- 1424     	LGOTO	_00221_DS_
     001E                           1- 1425     _00217_DS_:
                                    1- 1426     	.line	208, "main.c"; 	ledMin = 150;
     001E 2196                      1- 1427     	MOVIA	0x96
                                    1- 1428     	BANKSEL	_ledMin
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 1429     	MOVAR	_ledMin
                                    1- 1430     	.line	209, "main.c"; 	break;
     0021 3rrr                      1- 1431     	LGOTO	_00221_DS_
     0022                           1- 1432     _00218_DS_:
                                    1- 1433     	.line	211, "main.c"; 	ledMin = 100;
     0022 2164                      1- 1434     	MOVIA	0x64
                                    1- 1435     	BANKSEL	_ledMin
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1436     	MOVAR	_ledMin
                                    1- 1437     	.line	212, "main.c"; 	break;
     0025 3rrr                      1- 1438     	LGOTO	_00221_DS_
     0026                           1- 1439     _00219_DS_:
                                    1- 1440     	.line	214, "main.c"; 	ledMin = 50;
     0026 2132                      1- 1441     	MOVIA	0x32
                                    1- 1442     	BANKSEL	_ledMin
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1- 1443     	MOVAR	_ledMin
                                    1- 1444     	.line	215, "main.c"; 	break;
     0029 3rrr                      1- 1445     	LGOTO	_00221_DS_
     002A                           1- 1446     _00220_DS_:
                                    1- 1447     	.line	217, "main.c"; 	ledMin = 0;
                                    1- 1448     	BANKSEL	_ledMin
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 02rr                      1- 1449     	CLRR	_ledMin
     002C                           1- 1450     _00221_DS_:
                                    1- 1451     	.line	220, "main.c"; 	if(ledCount < ledMin)
                                    1- 1452     	BANKSEL	_ledMin
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1- 1453     	MOVR	_ledMin,W
                                    1- 1454     	BANKSEL	r0x1036
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1- 1455     	MOVAR	r0x1036
                                    1- 1456     	BANKSEL	r0x1037
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 02rr                      1- 1457     	CLRR	r0x1037
     0032 2100                      1- 1458     	MOVIA	0x00
                                    1- 1459     	BANKSEL	_ledCount
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 04rr                      1- 1460     	SUBAR	(_ledCount + 1),W
     0035 0903                      1- 1461     	BTRSS	STATUS,2
     0036 3rrr                      1- 1462     	LGOTO	_00237_DS_
                                    1- 1463     	BANKSEL	r0x1036
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1- 1464     	MOVR	r0x1036,W
                                    1- 1465     	BANKSEL	_ledCount
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1466     	SUBAR	_ledCount,W
     003B                           1- 1467     _00237_DS_:
     003B 0C03                      1- 1468     	BTRSC	STATUS,0
     003C 3rrr                      1- 1469     	LGOTO	_00224_DS_
                                    1- 1470     	.line	221, "main.c"; 	ledCount = ledMin;
                                    1- 1471     	BANKSEL	r0x1036
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1- 1472     	MOVR	r0x1036,W
                                    1- 1473     	BANKSEL	_ledCount
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 00rr                      1- 1474     	MOVAR	_ledCount
                                    1- 1475     	BANKSEL	r0x1037
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 1476     	MOVR	r0x1037,W
                                    1- 1477     	BANKSEL	_ledCount
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 00rr                      1- 1478     	MOVAR	(_ledCount + 1)
     0045                           1- 1479     _00224_DS_:
                                    1- 1480     	.line	222, "main.c"; 	}
                                    1- 1481     	RETURN	
     0045 0010                      3-   26 m1      ret
                                    1- 1482     ; exit point of _ledCtr
                                    1- 1484     ;***
                                    1- 1485     ;  pBlock Stats: dbName = C
                                    1- 1486     ;***
                                    1- 1487     ;has an exit
                                    1- 1488     ;2 compiler assigned registers:
                                    1- 1489     ;   r0x1038
                                    1- 1490     ;   r0x1039
                                    1- 1491     ;; Starting pCode block
                                    1- 1492     .segment "code"; module=main, function=_ledCon
     0000                           1- 1494     _ledCon:
                                    1- 1495     ; 2 exit points
                                    1- 1496     	.line	173, "main.c"; 	if(ledCount < ledMin)
                                    1- 1497     	BANKSEL	_ledMin
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1498     	MOVR	_ledMin,W
                                    1- 1499     	BANKSEL	r0x1038
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1- 1500     	MOVAR	r0x1038
                                    1- 1501     	BANKSEL	r0x1039
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1502     	CLRR	r0x1039
     0006 2100                      1- 1503     	MOVIA	0x00
                                    1- 1504     	BANKSEL	_ledCount
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 04rr                      1- 1505     	SUBAR	(_ledCount + 1),W
     0009 0903                      1- 1506     	BTRSS	STATUS,2
     000A 3rrr                      1- 1507     	LGOTO	_00201_DS_
                                    1- 1508     	BANKSEL	r0x1038
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1509     	MOVR	r0x1038,W
                                    1- 1510     	BANKSEL	_ledCount
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 1511     	SUBAR	_ledCount,W
     000F                           1- 1512     _00201_DS_:
     000F 0C03                      1- 1513     	BTRSC	STATUS,0
     0010 3rrr                      1- 1514     	LGOTO	_00160_DS_
                                    1- 1515     	.line	174, "main.c"; 	ledCount = ledMin;
                                    1- 1516     	BANKSEL	r0x1038
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 1517     	MOVR	r0x1038,W
                                    1- 1518     	BANKSEL	_ledCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1- 1519     	MOVAR	_ledCount
                                    1- 1520     	BANKSEL	r0x1039
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 1521     	MOVR	r0x1039,W
                                    1- 1522     	BANKSEL	_ledCount
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1523     	MOVAR	(_ledCount + 1)
     0019                           1- 1524     _00160_DS_:
                                    1- 1525     	.line	175, "main.c"; 	ledLock = 1;		//锁定
     0019 2101                      1- 1526     	MOVIA	0x01
                                    1- 1527     	BANKSEL	_ledLock
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1- 1528     	MOVAR	_ledLock
                                    1- 1529     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1530     ;;unsigned compare: left >= lit (0x33=51), size=2
                                    1- 1531     	.line	176, "main.c"; 	ledCount > 50 ? (setbit(PORTB,1)) : (resetbit(PORTB,1));
     001C 2100                      1- 1532     	MOVIA	0x00
                                    1- 1533     	BANKSEL	_ledCount
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 04rr                      1- 1534     	SUBAR	(_ledCount + 1),W
     001F 0903                      1- 1535     	BTRSS	STATUS,2
     0020 3rrr                      1- 1536     	LGOTO	_00202_DS_
     0021 2133                      1- 1537     	MOVIA	0x33
     0022 04rr                      1- 1538     	SUBAR	_ledCount,W
     0023                           1- 1539     _00202_DS_:
     0023 0803                      1- 1540     	BTRSS	STATUS,0
     0024 3rrr                      1- 1541     	LGOTO	_00167_DS_
     0025 18rr                      1- 1542     	BSR	_PORTB,1
     0026 3rrr                      1- 1543     	LGOTO	_00168_DS_
     0027                           1- 1544     _00167_DS_:
     0027 1Crr                      1- 1545     	BCR	_PORTB,1
                                    1- 1546     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1547     ;;unsigned compare: left >= lit (0x65=101), size=2
     0028                           1- 1548     _00168_DS_:
                                    1- 1549     	.line	177, "main.c"; 	ledCount > 100 ? (setbit(PORTB,0)) : (resetbit(PORTB,0));
     0028 2100                      1- 1550     	MOVIA	0x00
                                    1- 1551     	BANKSEL	_ledCount
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 04rr                      1- 1552     	SUBAR	(_ledCount + 1),W
     002B 0903                      1- 1553     	BTRSS	STATUS,2
     002C 3rrr                      1- 1554     	LGOTO	_00203_DS_
     002D 2165                      1- 1555     	MOVIA	0x65
     002E 04rr                      1- 1556     	SUBAR	_ledCount,W
     002F                           1- 1557     _00203_DS_:
     002F 0803                      1- 1558     	BTRSS	STATUS,0
     0030 3rrr                      1- 1559     	LGOTO	_00169_DS_
     0031 18rr                      1- 1560     	BSR	_PORTB,0
     0032 3rrr                      1- 1561     	LGOTO	_00170_DS_
     0033                           1- 1562     _00169_DS_:
     0033 1Crr                      1- 1563     	BCR	_PORTB,0
                                    1- 1564     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1565     ;;unsigned compare: left >= lit (0x97=151), size=2
     0034                           1- 1566     _00170_DS_:
                                    1- 1567     	.line	178, "main.c"; 	ledCount > 150 ? (setbit(PORTA,2)) : (resetbit(PORTA,2));
     0034 2100                      1- 1568     	MOVIA	0x00
                                    1- 1569     	BANKSEL	_ledCount
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 04rr                      1- 1570     	SUBAR	(_ledCount + 1),W
     0037 0903                      1- 1571     	BTRSS	STATUS,2
     0038 3rrr                      1- 1572     	LGOTO	_00204_DS_
     0039 2197                      1- 1573     	MOVIA	0x97
     003A 04rr                      1- 1574     	SUBAR	_ledCount,W
     003B                           1- 1575     _00204_DS_:
     003B 0803                      1- 1576     	BTRSS	STATUS,0
     003C 3rrr                      1- 1577     	LGOTO	_00171_DS_
     003D 19rr                      1- 1578     	BSR	_PORTA,2
     003E 3rrr                      1- 1579     	LGOTO	_00172_DS_
     003F                           1- 1580     _00171_DS_:
     003F 1Drr                      1- 1581     	BCR	_PORTA,2
                                    1- 1582     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1583     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0040                           1- 1584     _00172_DS_:
                                    1- 1585     	.line	179, "main.c"; 	ledCount > 200 ? (setbit(PORTA,3)) : (resetbit(PORTA,3));
     0040 2100                      1- 1586     	MOVIA	0x00
                                    1- 1587     	BANKSEL	_ledCount
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 04rr                      1- 1588     	SUBAR	(_ledCount + 1),W
     0043 0903                      1- 1589     	BTRSS	STATUS,2
     0044 3rrr                      1- 1590     	LGOTO	_00205_DS_
     0045 21C9                      1- 1591     	MOVIA	0xc9
     0046 04rr                      1- 1592     	SUBAR	_ledCount,W
     0047                           1- 1593     _00205_DS_:
     0047 0803                      1- 1594     	BTRSS	STATUS,0
     0048 3rrr                      1- 1595     	LGOTO	_00173_DS_
     0049 19rr                      1- 1596     	BSR	_PORTA,3
     004A 3rrr                      1- 1597     	LGOTO	_00174_DS_
     004B                           1- 1598     _00173_DS_:
     004B 1Drr                      1- 1599     	BCR	_PORTA,3
                                    1- 1600     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1601     ;;unsigned compare: left >= lit (0xFB=251), size=2
     004C                           1- 1602     _00174_DS_:
                                    1- 1603     	.line	180, "main.c"; 	ledCount > 250 ? (setbit(PORTA,4)) : (resetbit(PORTA,4));
     004C 2100                      1- 1604     	MOVIA	0x00
                                    1- 1605     	BANKSEL	_ledCount
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 04rr                      1- 1606     	SUBAR	(_ledCount + 1),W
     004F 0903                      1- 1607     	BTRSS	STATUS,2
     0050 3rrr                      1- 1608     	LGOTO	_00206_DS_
     0051 21FB                      1- 1609     	MOVIA	0xfb
     0052 04rr                      1- 1610     	SUBAR	_ledCount,W
     0053                           1- 1611     _00206_DS_:
     0053 0803                      1- 1612     	BTRSS	STATUS,0
     0054 3rrr                      1- 1613     	LGOTO	_00175_DS_
     0055 1Arr                      1- 1614     	BSR	_PORTA,4
     0056 3rrr                      1- 1615     	LGOTO	_00176_DS_
     0057                           1- 1616     _00175_DS_:
     0057 1Err                      1- 1617     	BCR	_PORTA,4
                                    1- 1618     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1619     ;;unsigned compare: left >= lit (0x12D=301), size=2
     0058                           1- 1620     _00176_DS_:
                                    1- 1621     	.line	181, "main.c"; 	if(ledCount > 300)
     0058 2101                      1- 1622     	MOVIA	0x01
                                    1- 1623     	BANKSEL	_ledCount
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 04rr                      1- 1624     	SUBAR	(_ledCount + 1),W
     005B 0903                      1- 1625     	BTRSS	STATUS,2
     005C 3rrr                      1- 1626     	LGOTO	_00207_DS_
     005D 212D                      1- 1627     	MOVIA	0x2d
     005E 04rr                      1- 1628     	SUBAR	_ledCount,W
     005F                           1- 1629     _00207_DS_:
     005F 0803                      1- 1630     	BTRSS	STATUS,0
     0060 3rrr                      1- 1631     	LGOTO	_00165_DS_
                                    1- 1632     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1633     ;;unsigned compare: left >= lit (0x137=311), size=2
                                    1- 1634     	.line	183, "main.c"; 	if(ledCount > 310)
     0061 2101                      1- 1635     	MOVIA	0x01
                                    1- 1636     	BANKSEL	_ledCount
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 04rr                      1- 1637     	SUBAR	(_ledCount + 1),W
     0064 0903                      1- 1638     	BTRSS	STATUS,2
     0065 3rrr                      1- 1639     	LGOTO	_00208_DS_
     0066 2137                      1- 1640     	MOVIA	0x37
     0067 04rr                      1- 1641     	SUBAR	_ledCount,W
     0068                           1- 1642     _00208_DS_:
     0068 0803                      1- 1643     	BTRSS	STATUS,0
     0069 3rrr                      1- 1644     	LGOTO	_00162_DS_
                                    1- 1645     	.line	184, "main.c"; 	ledCount = ledMin;
                                    1- 1646     	BANKSEL	r0x1038
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 01rr                      1- 1647     	MOVR	r0x1038,W
                                    1- 1648     	BANKSEL	_ledCount
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 00rr                      1- 1649     	MOVAR	_ledCount
                                    1- 1650     	BANKSEL	r0x1039
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 01rr                      1- 1651     	MOVR	r0x1039,W
                                    1- 1652     	BANKSEL	_ledCount
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 00rr                      1- 1653     	MOVAR	(_ledCount + 1)
     0072                           1- 1654     _00162_DS_:
                                    1- 1655     	.line	185, "main.c"; 	ledLock = 0;		//解锁
                                    1- 1656     	BANKSEL	_ledLock
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 02rr                      1- 1657     	CLRR	_ledLock
     0074                           1- 1658     _00165_DS_:
                                    1- 1659     	.line	187, "main.c"; 	}
                                    1- 1660     	RETURN	
     0074 0010                      3-   26 m1      ret
                                    1- 1661     ; exit point of _ledCon
                                    1- 1663     ;***
                                    1- 1664     ;  pBlock Stats: dbName = C
                                    1- 1665     ;***
                                    1- 1666     ;has an exit
                                    1- 1667     ;; Starting pCode block
                                    1- 1668     .segment "code"; module=main, function=_initTimer0
     0000                           1- 1670     _initTimer0:
                                    1- 1671     ; 2 exit points
                                    1- 1672     	.line	144, "main.c"; 	PORTA = 0x23;
     0000 2123                      1- 1673     	MOVIA	0x23
     0001 00rr                      1- 1674     	MOVAR	_PORTA
                                    1- 1675     	.line	145, "main.c"; 	PORTB = 0xF8;
     0002 21F8                      1- 1676     	MOVIA	0xf8
     0003 00rr                      1- 1677     	MOVAR	_PORTB
                                    1- 1678     	.line	146, "main.c"; 	BPHCON = 0xFE;
     0004 21FE                      1- 1679     	MOVIA	0xfe
     0005 00rr                      1- 1680     	MOVAR	_BPHCON
                                    1- 1681     	.line	148, "main.c"; 	IOSTA = C_PA0_Input;
     0006 2101                      1- 1682     	MOVIA	0x01
     0007 000r                      1- 1683     	IOST	_IOSTA
                                    1- 1684     	.line	149, "main.c"; 	IOSTB =  C_PB2_Input;	
     0008 2104                      1- 1685     	MOVIA	0x04
     0009 000r                      1- 1686     	IOST	_IOSTB
                                    1- 1687     	.line	150, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     000A 21A8                      1- 1688     	MOVIA	0xa8
     000B 00rr                      1- 1689     	MOVAR	_PCON
                                    1- 1690     	.line	151, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 1691     	MOVIA	0x01
     000D 00rr                      1- 1692     	MOVAR	_INTE
                                    1- 1693     	.line	152, "main.c"; 	INTF = 0;
     000E 02rr                      1- 1694     	CLRR	_INTF
                                    1- 1695     	.line	155, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1- 1696     	CLRA	
     0010 000r                      1- 1697     	IOST	_PCON1
                                    1- 1698     	.line	157, "main.c"; 	TMR0 = 55;
     0011 2137                      1- 1699     	MOVIA	0x37
     0012 00rr                      1- 1700     	MOVAR	_TMR0
                                    1- 1701     	.line	158, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0013 0200                      1- 1702     	CLRA	
     0014 0003                      1- 1703     	T0MD	
                                    1- 1704     	.line	160, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0015 2111                      1- 1705     	MOVIA	0x11
     0016 000r                      1- 1706     	IOST	_PCON1
                                    1- 1707     	.line	162, "main.c"; 	PORTA &= 0x23;
     0017 2123                      1- 1708     	MOVIA	0x23
     0018 10rr                      1- 1709     	ANDAR	_PORTA,F
                                    1- 1710     	.line	163, "main.c"; 	PORTB &= 0xF8;
     0019 21F8                      1- 1711     	MOVIA	0xf8
     001A 10rr                      1- 1712     	ANDAR	_PORTB,F
                                    1- 1713     	.line	164, "main.c"; 	resetbit(PORTB,3);		
     001B 1Drr                      1- 1714     	BCR	_PORTB,3
                                    1- 1715     	.line	165, "main.c"; 	resetbit(PORTA,7);
     001C 1Frr                      1- 1716     	BCR	_PORTA,7
                                    1- 1717     	.line	166, "main.c"; 	resetbit(PORTA,6);	//关闭风扇
     001D 1Frr                      1- 1718     	BCR	_PORTA,6
                                    1- 1719     	.line	167, "main.c"; 	ENI();	
     001E 0004                      1- 1720     	ENI
                                    1- 1721     	.line	169, "main.c"; 	}
                                    1- 1722     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1- 1723     ; exit point of _initTimer0
                                    1- 1725     ;***
                                    1- 1726     ;  pBlock Stats: dbName = C
                                    1- 1727     ;***
                                    1- 1728     ;has an exit
                                    1- 1729     ;functions called:
                                    1- 1730     ;   _fullChrg
                                    1- 1731     ;   _fullChrg
                                    1- 1732     ;   _fullChrg
                                    1- 1733     ;   _fullChrg
                                    1- 1734     ;   _fullChrg
                                    1- 1735     ;   _fullChrg
                                    1- 1736     ;; Starting pCode block
                                    1- 1737     .segment "code"; module=main, function=_workCon
     0000                           1- 1739     _workCon:
                                    1- 1740     ; 2 exit points
                                    1- 1741     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1742     ;;unsigned compare: left >= lit (0x4=4), size=1
                                    1- 1743     	.line	112, "main.c"; 	switch(workStep)
     0000 2104                      1- 1744     	MOVIA	0x04
                                    1- 1745     	BANKSEL	_workStep
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1746     	SUBAR	_workStep,W
     0003 0C03                      1- 1747     	BTRSC	STATUS,0
     0004 3rrr                      1- 1748     	LGOTO	_00135_DS_
     0005 21rr                      1- 1749     	MOVIA	((_00148_DS_ >> 8) & 0xff)
     0006 008A                      1- 1750     	MOVAR	PCHBUF
     0007 01rr                      1- 1751     	MOVR	_workStep,W
     0008 25rr                      1- 1752     	ADDIA	_00148_DS_
     0009 0C03                      1- 1753     	BTRSC	STATUS,0
     000A 058A                      1- 1754     	INCR	PCHBUF,F
     000B 0082                      1- 1755     	MOVAR	PCL
     000C                           1- 1756     _00148_DS_:
     000C 3rrr                      1- 1757     	LGOTO	_00131_DS_
     000D 3rrr                      1- 1758     	LGOTO	_00132_DS_
     000E 3rrr                      1- 1759     	LGOTO	_00133_DS_
     000F 3rrr                      1- 1760     	LGOTO	_00134_DS_
     0010                           1- 1761     _00131_DS_:
                                    1- 1762     	.line	115, "main.c"; 	ledStep = 0;
                                    1- 1763     	BANKSEL	_ledStep
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1- 1764     	CLRR	_ledStep
                                    1- 1765     	.line	116, "main.c"; 	break;
     0012 3rrr                      1- 1766     	LGOTO	_00135_DS_
     0013                           1- 1767     _00132_DS_:
                                    1- 1768     	.line	118, "main.c"; 	sleepCount = 0;
                                    1- 1769     	BANKSEL	_sleepCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1- 1770     	CLRR	_sleepCount
     0015 02rr                      1- 1771     	CLRR	(_sleepCount + 1)
                                    1- 1772     	.line	119, "main.c"; 	fullChrg();
     0016 2rrr                      1- 1773     	LCALL	_fullChrg
                                    1- 1774     	.line	120, "main.c"; 	setbit(PORTA,6);		//开启风扇
     0017 1Brr                      1- 1775     	BSR	_PORTA,6
                                    1- 1776     	.line	121, "main.c"; 	break;
     0018 3rrr                      1- 1777     	LGOTO	_00135_DS_
     0019                           1- 1778     _00133_DS_:
                                    1- 1779     	.line	123, "main.c"; 	fullChrg();
     0019 2rrr                      1- 1780     	LCALL	_fullChrg
                                    1- 1781     	.line	124, "main.c"; 	resetbit(PORTA,6);		//关闭风扇
     001A 1Frr                      1- 1782     	BCR	_PORTA,6
                                    1- 1783     	.line	125, "main.c"; 	break;
     001B 3rrr                      1- 1784     	LGOTO	_00135_DS_
     001C                           1- 1785     _00134_DS_:
                                    1- 1786     	.line	127, "main.c"; 	fullChrg();
     001C 2rrr                      1- 1787     	LCALL	_fullChrg
                                    1- 1788     	.line	128, "main.c"; 	setbit(PORTA,6);		//开启风扇
     001D 1Brr                      1- 1789     	BSR	_PORTA,6
                                    1- 1790     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1791     ;;unsigned compare: left >= lit (0x7E91=32401), size=2
     001E                           1- 1792     _00135_DS_:
                                    1- 1793     	.line	134, "main.c"; 	if(chrgCount > 32400 || sleepCount > 10800)
     001E 217E                      1- 1794     	MOVIA	0x7e
                                    1- 1795     	BANKSEL	_chrgCount
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1- 1796     	SUBAR	(_chrgCount + 1),W
     0021 0903                      1- 1797     	BTRSS	STATUS,2
     0022 3rrr                      1- 1798     	LGOTO	_00149_DS_
     0023 2191                      1- 1799     	MOVIA	0x91
     0024 04rr                      1- 1800     	SUBAR	_chrgCount,W
     0025                           1- 1801     _00149_DS_:
     0025 0C03                      1- 1802     	BTRSC	STATUS,0
     0026 3rrr                      1- 1803     	LGOTO	_00136_DS_
                                    1- 1804     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1805     ;;unsigned compare: left >= lit (0x2A31=10801), size=2
     0027 212A                      1- 1806     	MOVIA	0x2a
                                    1- 1807     	BANKSEL	_sleepCount
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 04rr                      1- 1808     	SUBAR	(_sleepCount + 1),W
     002A 0903                      1- 1809     	BTRSS	STATUS,2
     002B 3rrr                      1- 1810     	LGOTO	_00150_DS_
     002C 2131                      1- 1811     	MOVIA	0x31
     002D 04rr                      1- 1812     	SUBAR	_sleepCount,W
     002E                           1- 1813     _00150_DS_:
     002E 0803                      1- 1814     	BTRSS	STATUS,0
     002F 3rrr                      1- 1815     	LGOTO	_00139_DS_
     0030                           1- 1816     _00136_DS_:
                                    1- 1817     	.line	136, "main.c"; 	fullFlag = 1;
     0030 2101                      1- 1818     	MOVIA	0x01
                                    1- 1819     	BANKSEL	_fullFlag
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 00rr                      1- 1820     	MOVAR	_fullFlag
     0033                           1- 1821     _00139_DS_:
                                    1- 1822     	.line	139, "main.c"; 	}
                                    1- 1823     	RETURN	
     0033 0010                      3-   26 m1      ret
                                    1- 1824     ; exit point of _workCon
                                    1- 1827     ;	code size estimation:
                                    1- 1828     ;	  666+  164 =   830 instructions ( 1988 byte)
                                    1- 1830     	end
                                    1- 1830     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    0000002E
_00003_DS_              Label    00000029
_00004_DS_              Label    00000027
_00005_DS_              Label    00000027
_00106_DS_              Label    00000036
_00113_DS_              Label    00000039
_00121_DS_              Label    00000013
_00123_DS_              Label    0000001A
_00124_DS_              Label    0000001B
_00126_DS_              Label    00000002
_00131_DS_              Label    00000010
_00132_DS_              Label    00000013
_00133_DS_              Label    00000019
_00134_DS_              Label    0000001C
_00135_DS_              Label    0000001E
_00136_DS_              Label    00000030
_00139_DS_              Label    00000033
_00148_DS_              Label    0000000C
_00149_DS_              Label    00000025
_00150_DS_              Label    0000002E
_00160_DS_              Label    00000019
_00162_DS_              Label    00000072
_00165_DS_              Label    00000074
_00167_DS_              Label    00000027
_00168_DS_              Label    00000028
_00169_DS_              Label    00000033
_00170_DS_              Label    00000034
_00171_DS_              Label    0000003F
_00172_DS_              Label    00000040
_00173_DS_              Label    0000004B
_00174_DS_              Label    0000004C
_00175_DS_              Label    00000057
_00176_DS_              Label    00000058
_00201_DS_              Label    0000000F
_00202_DS_              Label    00000023
_00203_DS_              Label    0000002F
_00204_DS_              Label    0000003B
_00205_DS_              Label    00000047
_00206_DS_              Label    00000053
_00207_DS_              Label    0000005F
_00208_DS_              Label    00000068
_00215_DS_              Label    00000016
_00216_DS_              Label    0000001A
_00217_DS_              Label    0000001E
_00218_DS_              Label    00000022
_00219_DS_              Label    00000026
_00220_DS_              Label    0000002A
_00221_DS_              Label    0000002C
_00224_DS_              Label    00000045
_00236_DS_              Label    00000010
_00237_DS_              Label    0000003B
_00251_DS_              Label    00000059
_00254_DS_              Label    00000082
_00258_DS_              Label    000000B9
_00264_DS_              Label    000000E6
_00267_DS_              Label    000000D6
_00270_DS_              Label    000000C3
_00273_DS_              Label    0000008E
_00275_DS_              Label    000000F5
_00310_DS_              Label    0000003F
_00311_DS_              Label    00000048
_00312_DS_              Label    00000060
_00313_DS_              Label    00000069
_00314_DS_              Label    00000075
_00315_DS_              Label    00000095
_00316_DS_              Label    0000009E
_00317_DS_              Label    000000AA
_00318_DS_              Label    000000CA
_00319_DS_              Label    000000DD
_00320_DS_              Label    000000ED
_00327_DS_              Label    0000000B
_00329_DS_              Label    0000002C
_00338_DS_              Label    0000000B
_00340_DS_              Label    00000031
_00345_DS_              Label    00000000
_00352_DS_              Label    00000009
_00354_DS_              Label    0000001C
_00363_DS_              Label    00000013
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkA                 Label    00000000
_checkV                 Label    00000000
_chrgCount              Label    00000000
_closeChrg              Label    00000000
_CMPCR                  Label    00000000
_count1S                Label    00000000
_delay                  Label    00000000
_F_AIN0_Convert         Label    00000000
_F_AIN7_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_FSR                    Label    00000000
_fullChrg               Label    00000000
_fullCount              Label    00000000
_fullFlag               Label    00000000
_halfChrg               Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initTimer0             Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_ledCon                 Label    00000000
_ledCount               Label    00000000
_ledCtr                 Label    00000000
_ledLock                Label    00000000
_ledMin                 Label    00000000
_ledStep                Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_preA                   Label    00000000
_preV                   Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN0_DATA            Label    00000000
_R_AIN0_DATA_LB         Label    00000000
_R_AIN7_DATA            Label    00000000
_R_AIN7_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepCount             Label    00000000
_startFlag              Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCon                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    0000004A
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x101E                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102D                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1034                 Label    00000000
r0x1035                 Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
