
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_AWUCONbits
                                    1-   23     	extern	_INTEDGbits
                                    1-   24     	extern	_RFCbits
                                    1-   25     	extern	_INTE2bits
                                    1-   26     	extern	_INDF
                                    1-   27     	extern	_TMR0
                                    1-   28     	extern	_PCL
                                    1-   29     	extern	_STATUS
                                    1-   30     	extern	_FSR
                                    1-   31     	extern	_PORTA
                                    1-   32     	extern	_PORTB
                                    1-   33     	extern	_PCON
                                    1-   34     	extern	_BWUCON
                                    1-   35     	extern	_PCHBUF
                                    1-   36     	extern	_ABPLCON
                                    1-   37     	extern	_BPHCON
                                    1-   38     	extern	_INTE
                                    1-   39     	extern	_INTF
                                    1-   40     	extern	_AWUCON
                                    1-   41     	extern	_INTEDG
                                    1-   42     	extern	_TMRH
                                    1-   43     	extern	_RFC
                                    1-   44     	extern	_TM34RH
                                    1-   45     	extern	_INTE2
                                    1-   46     	extern	_TMR1
                                    1-   47     	extern	_T1CR1
                                    1-   48     	extern	_T1CR2
                                    1-   49     	extern	_PWM1DUTY
                                    1-   50     	extern	_PS1CV
                                    1-   51     	extern	_BZ1CR
                                    1-   52     	extern	_IRCR
                                    1-   53     	extern	_TBHP
                                    1-   54     	extern	_TBHD
                                    1-   55     	extern	_P2CR1
                                    1-   56     	extern	_PWM2DUTY
                                    1-   57     	extern	_OSCCR
                                    1-   58     	extern	_TMR3
                                    1-   59     	extern	_T3CR1
                                    1-   60     	extern	_T3CR2
                                    1-   61     	extern	_PWM3DUTY
                                    1-   62     	extern	_PS3CV
                                    1-   63     	extern	_P4CR1
                                    1-   64     	extern	_PWM4DUTY
                                    1-   65     	extern	_P5CR1
                                    1-   66     	extern	_PWM5DUTY
                                    1-   67     	extern	_PWM5RH
                                    1-   68     	extern	_IOSTA
                                    1-   69     	extern	_IOSTB
                                    1-   70     	extern	_APHCON
                                    1-   71     	extern	_PS0CV
                                    1-   72     	extern	_BODCON
                                    1-   73     	extern	_CMPCR
                                    1-   74     	extern	_PCON1
                                    1-   75     	extern	_T0MD
                                    1-   76     	extern	___sdcc_saved_fsr
                                    1-   77     	extern	___sdcc_saved_stk00
                                    1-   78     	extern	___sdcc_saved_stk01
                                    1-   79     	extern	__nyc_ny8_startup
                                    1-   80     ;--------------------------------------------------------
                                    1-   81     ; global declarations
                                    1-   82     ;--------------------------------------------------------
                                    1-   83     	extern	_delay
                                    1-   84     	extern	_WByte
                                    1-   85     	extern	_WaitTF0
                                    1-   86     	extern	_RByte
                                    1-   87     	extern	_isr
                                    1-   88     	extern	_main
                                    1-   89     	extern	_TM0_FLAG
                                    1-   90     	extern	_REC_FLAG
                                    1-   91     	extern	_SEND_FLAG
                                    1-   92     	extern	_intCount
                                    1-   93     	extern	_IntFlag
                                    1-   94     	extern	_data
                                    1-   95     	extern	_recData
                                    1-   96     	extern	_Hcount
                                    1-   98     	extern PSAVE
                                    1-   99     	extern SSAVE
                                    1-  100     	extern WSAVE
                                    1-  101     	extern STK12
                                    1-  102     	extern STK11
                                    1-  103     	extern STK10
                                    1-  104     	extern STK09
                                    1-  105     	extern STK08
                                    1-  106     	extern STK07
                                    1-  107     	extern STK06
                                    1-  108     	extern STK05
                                    1-  109     	extern STK04
                                    1-  110     	extern STK03
                                    1-  111     	extern STK02
                                    1-  112     	extern STK01
                                    1-  113     	extern STK00
                                    1-  115     .segment "uninit", 0x20000040
 20000040                           1-  116     PSAVE:
                                    1-  117     	.res 1
 20000041                           1-  118     SSAVE:
                                    1-  119     	.res 1
 20000042                           1-  120     WSAVE:
                                    1-  121     	.res 1
 20000043                           1-  122     STK12:
                                    1-  123     	.res 1
 20000044                           1-  124     STK11:
                                    1-  125     	.res 1
 20000045                           1-  126     STK10:
                                    1-  127     	.res 1
 20000046                           1-  128     STK09:
                                    1-  129     	.res 1
 20000047                           1-  130     STK08:
                                    1-  131     	.res 1
 20000048                           1-  132     STK07:
                                    1-  133     	.res 1
 20000049                           1-  134     STK06:
                                    1-  135     	.res 1
 2000004A                           1-  136     STK05:
                                    1-  137     	.res 1
 2000004B                           1-  138     STK04:
                                    1-  139     	.res 1
 2000004C                           1-  140     STK03:
                                    1-  141     	.res 1
 2000004D                           1-  142     STK02:
                                    1-  143     	.res 1
 2000004E                           1-  144     STK01:
                                    1-  145     	.res 1
 2000004F                           1-  146     STK00:
                                    1-  147     	.res 1
                                    1-  149     ;--------------------------------------------------------
                                    1-  150     ; global definitions
                                    1-  151     ;--------------------------------------------------------
                                    1-  152     ;--------------------------------------------------------
                                    1-  153     ; absolute symbol definitions
                                    1-  154     ;--------------------------------------------------------
                                    1-  155     ;--------------------------------------------------------
                                    1-  156     ; compiler-defined variables
                                    1-  157     ;--------------------------------------------------------
                                    1-  158     .segment "uninit"
     0000                           1-  159     r0x100E:
                                    1-  160     	.res	1
                                    1-  161     .segment "uninit"
     0000                           1-  162     r0x100F:
                                    1-  163     	.res	1
                                    1-  164     .segment "uninit"
     0000                           1-  165     r0x1010:
                                    1-  166     	.res	1
                                    1-  167     .segment "uninit"
     0000                           1-  168     r0x100B:
                                    1-  169     	.res	1
                                    1-  170     .segment "uninit"
     0000                           1-  171     r0x100C:
                                    1-  172     	.res	1
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x100D:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x1009:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x100A:
                                    1-  181     	.res	1
                                    1-  182     ;--------------------------------------------------------
                                    1-  183     ; initialized data
                                    1-  184     ;--------------------------------------------------------
                                    1-  186     .segment "idata"
     0000                           1-  187     _TM0_FLAG:
     0000 0000                      1-  188     	dw	0x00
                                    1-  192     .segment "idata"
     0000                           1-  193     _REC_FLAG:
     0000 0000                      1-  194     	dw	0x00
                                    1-  198     .segment "idata"
     0000                           1-  199     _SEND_FLAG:
     0000 0000                      1-  200     	dw	0x00
                                    1-  204     .segment "idata"
     0000                           1-  205     _intCount:
     0000 0000                      1-  206     	dw	0x00
                                    1-  210     .segment "idata"
     0000                           1-  211     _IntFlag:
     0000 0000                      1-  212     	dw	0x00
                                    1-  216     .segment "idata"
     0000                           1-  217     _data:
     0000 0025                      1-  218     	dw	0x25
                                    1-  222     .segment "idata"
     0000                           1-  223     _recData:
     0000 0000                      1-  224     	dw	0x00
                                    1-  228     .segment "idata"
     0000                           1-  229     _Hcount:
     0000 0000                      1-  230     	dw	0x00
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ; overlayable items in internal ram 
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     ;	udata_ovr
                                    1-  237     ;--------------------------------------------------------
                                    1-  238     ; reset vector 
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ORG	0x0000
     0000 3rrr                      1-  241     	LGOTO	__nyc_ny8_startup
                                    1-  242     ;--------------------------------------------------------
                                    1-  243     ; interrupt and initialization code
                                    1-  244     ;--------------------------------------------------------
                                    1-  245     ORG 0x0008
     0008 3rrr                      1-  246     	lgoto	__sdcc_interrupt
                                    1-  248     .segment "code"
     0000                           1-  249     __sdcc_interrupt:
                                    1-  250     ;***
                                    1-  251     ;  pBlock Stats: dbName = I
                                    1-  252     ;***
                                    1-  253     ;2 compiler assigned registers:
                                    1-  254     ;   STK00
                                    1-  255     ;   STK01
                                    1-  256     ;; Starting pCode block
     0000                           1-  257     _isr:
                                    1-  258     ; 0 exit points
                                    1-  259     	.line	43, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  260     	MOVAR	WSAVE
     0001 1503                      1-  261     	SWAPR	STATUS,W
     0002 0283                      1-  262     	CLRR	STATUS
     0003 00rr                      1-  263     	MOVAR	SSAVE
     0004 010A                      1-  264     	MOVR	PCHBUF,W
     0005 028A                      1-  265     	CLRR	PCHBUF
     0006 00rr                      1-  266     	MOVAR	PSAVE
     0007 0104                      1-  267     	MOVR	FSR,W
                                    1-  268     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  269     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  270     	MOVR	STK00,W
                                    1-  271     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  272     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  273     	MOVR	STK01,W
                                    1-  274     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  275     	MOVAR	___sdcc_saved_stk01
                                    1-  276     	.line	45, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  277     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  278     	LGOTO	_00108_DS_
                                    1-  279     	.line	48, "main.c"; 	TMR0 += 65;
     0012 2141                      1-  280     	MOVIA	0x41
     0013 03rr                      1-  281     	ADDAR	_TMR0,F
                                    1-  282     	.line	49, "main.c"; 	intCount++;
                                    1-  283     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  284     	INCR	_intCount,F
                                    1-  285     	.line	50, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  286     	MOVR	_intCount,W
     0017 2464                      1-  287     	XORIA	0x64
     0018 0903                      1-  288     	BTRSS	STATUS,2
     0019 3rrr                      1-  289     	LGOTO	_00108_DS_
                                    1-  290     	.line	52, "main.c"; 	intCount = 0;
     001A 02rr                      1-  291     	CLRR	_intCount
                                    1-  292     	.line	53, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  293     	MOVIA	0x01
                                    1-  294     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  295     	MOVAR	_IntFlag
     001E                           1-  296     _00108_DS_:
                                    1-  297     	.line	56, "main.c"; 	if(INTFbits.T1IF)
     001E 09rr                      1-  298     	BTRSS	_INTFbits,3
     001F 3rrr                      1-  299     	LGOTO	_00110_DS_
                                    1-  300     	.line	58, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR1);	// Clear PABIF(PortB input change interrupt flag bit)
     0020 21F7                      1-  301     	MOVIA	0xf7
     0021 00rr                      1-  302     	MOVAR	_INTF
                                    1-  303     	.line	59, "main.c"; 	TM0_FLAG=1; //设置标志位。
     0022 2101                      1-  304     	MOVIA	0x01
                                    1-  305     	BANKSEL	_TM0_FLAG
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1-  306     	MOVAR	_TM0_FLAG
     0025                           1-  307     _00110_DS_:
                                    1-  308     	.line	61, "main.c"; 	if(INTFbits.PABIF)
     0025 08rr                      1-  309     	BTRSS	_INTFbits,1
     0026 3rrr                      1-  310     	LGOTO	_00112_DS_
                                    1-  311     	.line	63, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)	
     0027 21FD                      1-  312     	MOVIA	0xfd
     0028 00rr                      1-  313     	MOVAR	_INTF
     0029                           1-  314     _00112_DS_:
                                    1-  315     	.line	66, "main.c"; 	INTF = 0;
     0029 02rr                      1-  316     	CLRR	_INTF
                                    1-  317     	.line	68, "main.c"; 	}
                                    1-  318     	BANKSEL	___sdcc_saved_stk01
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  319     	MOVR	___sdcc_saved_stk01,W
     002C 00rr                      1-  320     	MOVAR	STK01
                                    1-  321     	BANKSEL	___sdcc_saved_stk00
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  322     	MOVR	___sdcc_saved_stk00,W
     002F 00rr                      1-  323     	MOVAR	STK00
                                    1-  324     	BANKSEL	___sdcc_saved_fsr
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1-  325     	MOVR	___sdcc_saved_fsr,W
     0032 0084                      1-  326     	MOVAR	FSR
     0033 01rr                      1-  327     	MOVR	PSAVE,W
     0034 008A                      1-  328     	MOVAR	PCHBUF
     0035 0283                      1-  329     	CLRR	STATUS
     0036 15rr                      1-  330     	SWAPR	SSAVE,W
     0037 0083                      1-  331     	MOVAR	STATUS
     0038 15rr                      1-  332     	SWAPR	WSAVE,F
     0039 15rr                      1-  333     	SWAPR	WSAVE,W
     003A                           1-  334     END_OF_INTERRUPT:
     003A 0011                      1-  335     	RETIE	
                                    1-  337     ;--------------------------------------------------------
                                    1-  338     ; code
                                    1-  339     ;--------------------------------------------------------
                                    1-  340     ;***
                                    1-  341     ;  pBlock Stats: dbName = M
                                    1-  342     ;***
                                    1-  343     ;has an exit
                                    1-  344     ;functions called:
                                    1-  345     ;   _RByte
                                    1-  346     ;   _WByte
                                    1-  347     ;   _RByte
                                    1-  348     ;   _WByte
                                    1-  349     ;; Starting pCode block
                                    1-  350     .segment "code"; module=main, function=_main
     0000                           1-  352     _main:
                                    1-  353     ; 2 exit points
                                    1-  354     	.line	73, "main.c"; 	PORTA = 0x00;
     0000 02rr                      1-  355     	CLRR	_PORTA
                                    1-  356     	.line	74, "main.c"; 	APHCON = 0xDF;		//PA5下拉
     0001 21DF                      1-  357     	MOVIA	0xdf
     0002 000r                      1-  358     	IOST	_APHCON
                                    1-  359     	.line	76, "main.c"; 	IOSTA =  C_PA5_Input;					//PA5输入
     0003 2120                      1-  360     	MOVIA	0x20
     0004 000r                      1-  361     	IOST	_IOSTA
                                    1-  362     	.line	77, "main.c"; 	IOSTB =  C_PB0_Input;					//PB0输入
     0005 2101                      1-  363     	MOVIA	0x01
     0006 000r                      1-  364     	IOST	_IOSTB
                                    1-  365     	.line	78, "main.c"; 	PORTA = 0x00;  
     0007 02rr                      1-  366     	CLRR	_PORTA
                                    1-  367     	.line	79, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     0008 21A8                      1-  368     	MOVIA	0xa8
     0009 00rr                      1-  369     	MOVAR	_PCON
                                    1-  370     	.line	81, "main.c"; 	PCON1 = C_TMR0_Dis;
     000A 0200                      1-  371     	CLRA	
     000B 000r                      1-  372     	IOST	_PCON1
                                    1-  373     	.line	83, "main.c"; 	TMR0 = 55;
     000C 2137                      1-  374     	MOVIA	0x37
     000D 00rr                      1-  375     	MOVAR	_TMR0
                                    1-  376     	.line	84, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     000E 0200                      1-  377     	CLRA	
     000F 0003                      1-  378     	T0MD	
                                    1-  379     	.line	85, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0010 210B                      1-  380     	MOVIA	0x0b
     0011 00rr                      1-  381     	MOVAR	_INTE
                                    1-  382     	.line	86, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0012 2111                      1-  383     	MOVIA	0x11
     0013 000r                      1-  384     	IOST	_PCON1
                                    1-  385     	.line	89, "main.c"; 	TMRH = 0;
     0014 02rr                      1-  386     	CLRR	_TMRH
                                    1-  387     	.line	90, "main.c"; 	TMR1 = 104;
     0015 2168                      1-  388     	MOVIA	0x68
     0016 00rr                      1-  389     	SFUN	_TMR1
                                    1-  390     	.line	91, "main.c"; 	T1CR2 = C_PS1_Div4 | C_PS1_EN | C_TMR1_ClkSrc_Inst;
     0017 2101                      1-  391     	MOVIA	0x01
     0018 00rr                      1-  392     	SFUN	_T1CR2
                                    1-  393     	.line	92, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     0019 2103                      1-  394     	MOVIA	0x03
     001A 00rr                      1-  395     	SFUN	_T1CR1
                                    1-  396     	.line	96, "main.c"; 	ENI();
     001B 0004                      1-  397     	ENI
     001C                           1-  398     _00128_DS_:
                                    1-  399     	.line	100, "main.c"; 	CLRWDT();
     001C 0002                      1-  400     	clrwdt
                                    1-  401     	.line	101, "main.c"; 	if(REC_FLAG == 0 && (PORTB & 0x01) == 0)
                                    1-  402     	BANKSEL	_REC_FLAG
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  403     	MOVR	_REC_FLAG,W
     001F 0903                      1-  404     	BTRSS	STATUS,2
     0020 3rrr                      1-  405     	LGOTO	_00121_DS_
                                    1-  406     	BANKSEL	_PORTB
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 0Crr                      1-  407     	BTRSC	_PORTB,0
     0023 3rrr                      1-  408     	LGOTO	_00121_DS_
                                    1-  409     	.line	103, "main.c"; 	REC_FLAG = 1;
     0024 2101                      1-  410     	MOVIA	0x01
                                    1-  411     	BANKSEL	_REC_FLAG
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 00rr                      1-  412     	MOVAR	_REC_FLAG
                                    1-  413     	.line	104, "main.c"; 	if(!SEND_FLAG)
                                    1-  414     	BANKSEL	_SEND_FLAG
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  415     	MOVR	_SEND_FLAG,W
     0029 0903                      1-  416     	BTRSS	STATUS,2
     002A 3rrr                      1-  417     	LGOTO	_00118_DS_
                                    1-  418     	.line	106, "main.c"; 	recData = RByte();
     002B 2rrr                      1-  419     	LCALL	_RByte
                                    1-  420     	BANKSEL	_recData
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1-  421     	MOVAR	_recData
     002E 3rrr                      1-  422     	LGOTO	_00121_DS_
     002F                           1-  423     _00118_DS_:
                                    1-  424     	.line	110, "main.c"; 	REC_FLAG = 0;
                                    1-  425     	BANKSEL	_REC_FLAG
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1-  426     	CLRR	_REC_FLAG
     0031                           1-  427     _00121_DS_:
                                    1-  428     	.line	115, "main.c"; 	if(!IntFlag)
                                    1-  429     	BANKSEL	_IntFlag
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1-  430     	MOVR	_IntFlag,W
     0033 0D03                      1-  431     	BTRSC	STATUS,2
     0034 3rrr                      1-  432     	LGOTO	_00128_DS_
                                    1-  433     	.line	117, "main.c"; 	IntFlag = 0;
     0035 02rr                      1-  434     	CLRR	_IntFlag
                                    1-  435     	.line	127, "main.c"; 	if(!REC_FLAG)
                                    1-  436     	BANKSEL	_REC_FLAG
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1-  437     	MOVR	_REC_FLAG,W
     0038 0903                      1-  438     	BTRSS	STATUS,2
     0039 3rrr                      1-  439     	LGOTO	_00128_DS_
                                    1-  440     	.line	128, "main.c"; 	WByte(recData);
                                    1-  441     	BANKSEL	_recData
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1-  442     	MOVR	_recData,W
     003C 2rrr                      1-  443     	LCALL	_WByte
     003D 3rrr                      1-  444     	LGOTO	_00128_DS_
                                    1-  445     	.line	130, "main.c"; 	}
                                    1-  446     	RETURN	
     003E 0010                      3-   26 m1      ret
                                    1-  447     ; exit point of _main
                                    1-  449     ;***
                                    1-  450     ;  pBlock Stats: dbName = C
                                    1-  451     ;***
                                    1-  452     ;has an exit
                                    1-  453     ;2 compiler assigned registers:
                                    1-  454     ;   r0x1009
                                    1-  455     ;   r0x100A
                                    1-  456     ;; Starting pCode block
                                    1-  457     .segment "code"; module=main, function=_delay
                                    1-  459     ;local variable name mapping:
     0000                           1-  461     _delay:
                                    1-  462     ; 2 exit points
                                    1-  463     	.line	230, "main.c"; 	void delay(uchar time)
                                    1-  464     	BANKSEL	r0x1009
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  465     	MOVAR	r0x1009
     0002                           1-  466     _00159_DS_:
                                    1-  467     	.line	232, "main.c"; 	while(--time);
                                    1-  468     	BANKSEL	r0x1009
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 06rr                      1-  469     	DECR	r0x1009,W
                                    1-  470     	BANKSEL	r0x100A
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  471     	MOVAR	r0x100A
                                    1-  472     	BANKSEL	r0x1009
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  473     	MOVAR	r0x1009
                                    1-  474     	BANKSEL	r0x100A
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1-  475     	MOVR	r0x100A,W
     000A 0903                      1-  476     	BTRSS	STATUS,2
     000B 3rrr                      1-  477     	LGOTO	_00159_DS_
                                    1-  478     	.line	233, "main.c"; 	}
                                    1-  479     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1-  480     ; exit point of _delay
                                    1-  482     ;***
                                    1-  483     ;  pBlock Stats: dbName = C
                                    1-  484     ;***
                                    1-  485     ;has an exit
                                    1-  486     ;functions called:
                                    1-  487     ;   _WaitTF0
                                    1-  488     ;   _WaitTF0
                                    1-  489     ;   _WaitTF0
                                    1-  490     ;   _WaitTF0
                                    1-  491     ;   _WaitTF0
                                    1-  492     ;   _WaitTF0
                                    1-  493     ;3 compiler assigned registers:
                                    1-  494     ;   r0x100B
                                    1-  495     ;   r0x100C
                                    1-  496     ;   r0x100D
                                    1-  497     ;; Starting pCode block
                                    1-  498     .segment "code"; module=main, function=_WByte
                                    1-  500     ;local variable name mapping:
     0000                           1-  503     _WByte:
                                    1-  504     ; 2 exit points
                                    1-  505     	.line	190, "main.c"; 	void WByte(uchar input) {
                                    1-  506     	BANKSEL	r0x100B
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  507     	MOVAR	r0x100B
                                    1-  508     	.line	193, "main.c"; 	SEND_FLAG = 1;
     0002 2101                      1-  509     	MOVIA	0x01
                                    1-  510     	BANKSEL	_SEND_FLAG
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  511     	MOVAR	_SEND_FLAG
                                    1-  512     	.line	195, "main.c"; 	TMRH = 0;
     0005 02rr                      1-  513     	CLRR	_TMRH
                                    1-  514     	.line	196, "main.c"; 	TMR1 = 104;
     0006 2168                      1-  515     	MOVIA	0x68
     0007 00rr                      1-  516     	SFUN	_TMR1
                                    1-  517     	.line	197, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload; //启动Timer1
     0008 2103                      1-  518     	MOVIA	0x03
     0009 00rr                      1-  519     	SFUN	_T1CR1
                                    1-  520     	.line	198, "main.c"; 	PCON1 = C_TMR0_Dis;
     000A 0200                      1-  521     	CLRA	
     000B 000r                      1-  522     	IOST	_PCON1
                                    1-  523     	.line	199, "main.c"; 	TXD = 0;
                                    1-  524     	BANKSEL	_PORTB
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1-  525     	BCR	_PORTB,1
                                    1-  526     	.line	201, "main.c"; 	WaitTF0();
     000E 2rrr                      1-  527     	LCALL	_WaitTF0
                                    1-  528     	.line	205, "main.c"; 	while (i--) {
     000F 2108                      1-  529     	MOVIA	0x08
                                    1-  530     	BANKSEL	r0x100C
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1-  531     	MOVAR	r0x100C
     0012                           1-  532     _00152_DS_:
                                    1-  533     	BANKSEL	r0x100C
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1-  534     	MOVR	r0x100C,W
                                    1-  535     	BANKSEL	r0x100D
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1-  536     	MOVAR	r0x100D
                                    1-  537     	BANKSEL	r0x100C
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 06rr                      1-  538     	DECR	r0x100C,F
                                    1-  539     	BANKSEL	r0x100D
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1-  540     	MOVR	r0x100D,W
     001A 0D03                      1-  541     	BTRSC	STATUS,2
     001B 3rrr                      1-  542     	LGOTO	_00154_DS_
                                    1-  543     	.line	207, "main.c"; 	TXD = (input & 0x01);//先传低位
                                    1-  544     	BANKSEL	r0x100B
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1-  545     	MOVR	r0x100B,W
     001E 2201                      1-  546     	ANDIA	0x01
                                    1-  547     	BANKSEL	r0x100D
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1-  548     	MOVAR	r0x100D
     0021 13rr                      1-  549     	RRR	r0x100D,W
     0022 0C03                      1-  550     	BTRSC	STATUS,0
     0023 3rrr                      1-  551     	LGOTO	_00001_DS_
                                    1-  552     	BANKSEL	_PORTB
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 1Crr                      1-  553     	BCR	_PORTB,1
     0026                           1-  554     _00001_DS_:
     0026 0803                      1-  555     	BTRSS	STATUS,0
     0027 3rrr                      1-  556     	LGOTO	_00002_DS_
                                    1-  557     	BANKSEL	_PORTB
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 18rr                      1-  558     	BSR	_PORTB,1
     002A                           1-  559     _00002_DS_:
                                    1-  560     	.line	209, "main.c"; 	WaitTF0();
     002A 2rrr                      1-  561     	LCALL	_WaitTF0
                                    1-  562     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=1, sign=0, same=1, offr=0
                                    1-  563     	.line	211, "main.c"; 	input = input >> 1;
     002B 1C03                      1-  564     	BCR	STATUS,0
                                    1-  565     	BANKSEL	r0x100B
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 13rr                      1-  566     	RRR	r0x100B,F
     002E 3rrr                      1-  567     	LGOTO	_00152_DS_
     002F                           1-  568     _00154_DS_:
                                    1-  569     	.line	219, "main.c"; 	TXD =  1;
                                    1-  570     	BANKSEL	_PORTB
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 18rr                      1-  571     	BSR	_PORTB,1
                                    1-  572     	.line	221, "main.c"; 	WaitTF0();
     0031 2rrr                      1-  573     	LCALL	_WaitTF0
                                    1-  574     	.line	223, "main.c"; 	T1CR1 = C_TMR1_Dis; //停止Timer1
     0032 0200                      1-  575     	CLRA	
     0033 00rr                      1-  576     	SFUN	_T1CR1
                                    1-  577     	.line	224, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0034 2111                      1-  578     	MOVIA	0x11
     0035 000r                      1-  579     	IOST	_PCON1
                                    1-  580     	.line	225, "main.c"; 	SEND_FLAG = 0;
                                    1-  581     	BANKSEL	_SEND_FLAG
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 02rr                      1-  582     	CLRR	_SEND_FLAG
                                    1-  583     	.line	228, "main.c"; 	}
                                    1-  584     	RETURN	
     0038 0010                      3-   26 m1      ret
                                    1-  585     ; exit point of _WByte
                                    1-  587     ;***
                                    1-  588     ;  pBlock Stats: dbName = C
                                    1-  589     ;***
                                    1-  590     ;has an exit
                                    1-  591     ;; Starting pCode block
                                    1-  592     .segment "code"; module=main, function=_WaitTF0
     0000                           1-  594     _WaitTF0:
                                    1-  595     ; 2 exit points
     0000                           1-  596     _00147_DS_:
                                    1-  597     	.line	176, "main.c"; 	while (!TM0_FLAG);
                                    1-  598     	BANKSEL	_TM0_FLAG
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1-  599     	MOVR	_TM0_FLAG,W
     0002 0D03                      1-  600     	BTRSC	STATUS,2
     0003 3rrr                      1-  601     	LGOTO	_00147_DS_
                                    1-  602     	.line	178, "main.c"; 	TM0_FLAG = 0; //清标志位
     0004 02rr                      1-  603     	CLRR	_TM0_FLAG
                                    1-  604     	.line	180, "main.c"; 	}
                                    1-  605     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1-  606     ; exit point of _WaitTF0
                                    1-  608     ;***
                                    1-  609     ;  pBlock Stats: dbName = C
                                    1-  610     ;***
                                    1-  611     ;has an exit
                                    1-  612     ;functions called:
                                    1-  613     ;   _WaitTF0
                                    1-  614     ;   _WaitTF0
                                    1-  615     ;   _WaitTF0
                                    1-  616     ;   _WaitTF0
                                    1-  617     ;3 compiler assigned registers:
                                    1-  618     ;   r0x100E
                                    1-  619     ;   r0x100F
                                    1-  620     ;   r0x1010
                                    1-  621     ;; Starting pCode block
                                    1-  622     .segment "code"; module=main, function=_RByte
                                    1-  624     ;local variable name mapping:
     0000                           1-  627     _RByte:
                                    1-  628     ; 2 exit points
                                    1-  629     	.line	139, "main.c"; 	REC_FLAG = 1;
     0000 2101                      1-  630     	MOVIA	0x01
                                    1-  631     	BANKSEL	_REC_FLAG
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1-  632     	MOVAR	_REC_FLAG
                                    1-  633     	.line	140, "main.c"; 	uchar Output = 0;
                                    1-  634     	BANKSEL	r0x100E
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1-  635     	CLRR	r0x100E
                                    1-  636     	.line	143, "main.c"; 	TMRH = 0;
     0005 02rr                      1-  637     	CLRR	_TMRH
                                    1-  638     	.line	144, "main.c"; 	TMR1 = 105;
     0006 2169                      1-  639     	MOVIA	0x69
     0007 00rr                      1-  640     	SFUN	_TMR1
                                    1-  641     	.line	145, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload; //启动Timer1
     0008 2103                      1-  642     	MOVIA	0x03
     0009 00rr                      1-  643     	SFUN	_T1CR1
                                    1-  644     	.line	146, "main.c"; 	PCON1 = C_TMR0_Dis;
     000A 0200                      1-  645     	CLRA	
     000B 000r                      1-  646     	IOST	_PCON1
                                    1-  647     	.line	148, "main.c"; 	WaitTF0(); //等过起始位
     000C 2rrr                      1-  648     	LCALL	_WaitTF0
                                    1-  649     	.line	152, "main.c"; 	while (i--) {
     000D 2108                      1-  650     	MOVIA	0x08
                                    1-  651     	BANKSEL	r0x100F
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  652     	MOVAR	r0x100F
     0010                           1-  653     _00135_DS_:
                                    1-  654     	BANKSEL	r0x100F
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1-  655     	MOVR	r0x100F,W
                                    1-  656     	BANKSEL	r0x1010
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1-  657     	MOVAR	r0x1010
                                    1-  658     	BANKSEL	r0x100F
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 06rr                      1-  659     	DECR	r0x100F,F
                                    1-  660     	BANKSEL	r0x1010
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1-  661     	MOVR	r0x1010,W
     0018 0D03                      1-  662     	BTRSC	STATUS,2
     0019 3rrr                      1-  663     	LGOTO	_00140_DS_
                                    1-  664     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=1, sign=0, same=1, offr=0
                                    1-  665     	.line	154, "main.c"; 	Output >>= 1;
     001A 1C03                      1-  666     	BCR	STATUS,0
                                    1-  667     	BANKSEL	r0x100E
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 13rr                      1-  668     	RRR	r0x100E,F
                                    1-  669     	.line	156, "main.c"; 	if (RXD) Output |= 0x80; //先收低位
                                    1-  670     	BANKSEL	_PORTB
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 08rr                      1-  671     	BTRSS	_PORTB,0
     001F 3rrr                      1-  672     	LGOTO	_00003_DS_
                                    1-  673     	BANKSEL	r0x100E
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 1Brr                      1-  674     	BSR	r0x100E,7
     0022                           1-  675     _00003_DS_:
                                    1-  676     	.line	158, "main.c"; 	WaitTF0(); //位间延时
     0022 2rrr                      1-  677     	LCALL	_WaitTF0
     0023 3rrr                      1-  678     	LGOTO	_00135_DS_
     0024                           1-  679     _00140_DS_:
                                    1-  680     	.line	162, "main.c"; 	while (!TM0_FLAG) if (RXD) break;
                                    1-  681     	BANKSEL	_TM0_FLAG
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  682     	MOVR	_TM0_FLAG,W
     0026 0903                      1-  683     	BTRSS	STATUS,2
     0027 3rrr                      1-  684     	LGOTO	_00142_DS_
                                    1-  685     	BANKSEL	_PORTB
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 08rr                      1-  686     	BTRSS	_PORTB,0
     002A 3rrr                      1-  687     	LGOTO	_00140_DS_
     002B                           1-  688     _00142_DS_:
                                    1-  689     	.line	164, "main.c"; 	T1CR1 = C_TMR1_Dis; //停止Timer1
     002B 0200                      1-  690     	CLRA	
     002C 00rr                      1-  691     	SFUN	_T1CR1
                                    1-  692     	.line	165, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     002D 2111                      1-  693     	MOVIA	0x11
     002E 000r                      1-  694     	IOST	_PCON1
                                    1-  695     	.line	166, "main.c"; 	REC_FLAG = 0;
                                    1-  696     	BANKSEL	_REC_FLAG
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1-  697     	CLRR	_REC_FLAG
                                    1-  698     	.line	167, "main.c"; 	return Output;
                                    1-  699     	BANKSEL	r0x100E
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1-  700     	MOVR	r0x100E,W
                                    1-  701     	.line	169, "main.c"; 	}
                                    1-  702     	RETURN	
     0033 0010                      3-   26 m1      ret
                                    1-  703     ; exit point of _RByte
                                    1-  706     ;	code size estimation:
                                    1-  707     ;	  195+   53 =   248 instructions (  602 byte)
                                    1-  709     	end
                                    1-  709     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    00000026
_00002_DS_              Label    0000002A
_00003_DS_              Label    00000022
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000025
_00112_DS_              Label    00000029
_00118_DS_              Label    0000002F
_00121_DS_              Label    00000031
_00128_DS_              Label    0000001C
_00135_DS_              Label    00000010
_00140_DS_              Label    00000024
_00142_DS_              Label    0000002B
_00147_DS_              Label    00000000
_00152_DS_              Label    00000012
_00154_DS_              Label    0000002F
_00159_DS_              Label    00000002
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_CMPCR                  Label    00000000
_data                   Label    00000000
_delay                  Label    00000000
_FSR                    Label    00000000
_Hcount                 Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_RByte                  Label    00000000
_REC_FLAG               Label    00000000
_recData                Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_SEND_FLAG              Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM0_FLAG               Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_WaitTF0                Label    00000000
_WByte                  Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    0000003A
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1009                 Label    00000000
r0x100A                 Label    00000000
r0x100B                 Label    00000000
r0x100C                 Label    00000000
r0x100D                 Label    00000000
r0x100E                 Label    00000000
r0x100F                 Label    00000000
r0x1010                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a054d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
