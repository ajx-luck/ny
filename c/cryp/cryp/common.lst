
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"common.c"
                                    1-    8     	list	p=NY8A051F,c=on
                                    1-    9     	#include "ny8a051f.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTBbits
                                    1-   15     	extern	_PCONbits
                                    1-   16     	extern	_BWUCONbits
                                    1-   17     	extern	_BPLCONbits
                                    1-   18     	extern	_BPHCONbits
                                    1-   19     	extern	_INTEbits
                                    1-   20     	extern	_INTFbits
                                    1-   21     	extern	_sleepCount
                                    1-   22     	extern	_INDF
                                    1-   23     	extern	_TMR0
                                    1-   24     	extern	_PCL
                                    1-   25     	extern	_STATUS
                                    1-   26     	extern	_FSR
                                    1-   27     	extern	_PORTB
                                    1-   28     	extern	_PCON
                                    1-   29     	extern	_BWUCON
                                    1-   30     	extern	_PCHBUF
                                    1-   31     	extern	_BPLCON
                                    1-   32     	extern	_BPHCON
                                    1-   33     	extern	_INTE
                                    1-   34     	extern	_INTF
                                    1-   35     	extern	_TMR1
                                    1-   36     	extern	_T1CR1
                                    1-   37     	extern	_T1CR2
                                    1-   38     	extern	_PWM1DUTY
                                    1-   39     	extern	_PS1CV
                                    1-   40     	extern	_BZ1CR
                                    1-   41     	extern	_IRCR
                                    1-   42     	extern	_TBHP
                                    1-   43     	extern	_TBHD
                                    1-   44     	extern	_OSCCR
                                    1-   45     	extern	_IOSTB
                                    1-   46     	extern	_PS0CV
                                    1-   47     	extern	_BODCON
                                    1-   48     	extern	_PCON1
                                    1-   49     	extern	_T0MD
                                    1-   51     	extern PSAVE
                                    1-   52     	extern SSAVE
                                    1-   53     	extern WSAVE
                                    1-   54     	extern STK04
                                    1-   55     	extern STK03
                                    1-   56     	extern STK02
                                    1-   57     	extern STK01
                                    1-   58     	extern STK00
                                    1-   59     ;--------------------------------------------------------
                                    1-   60     ; global declarations
                                    1-   61     ;--------------------------------------------------------
                                    1-   62     	extern	_checkLVD
                                    1-   63     	extern	_gotoSleep
                                    1-   64     	extern	_delay
                                    1-   65     	extern	_keyRead
                                    1-   66     	extern	_initTimer0
                                    1-   67     	extern	_keyCount
                                    1-   68     	extern	_longPressFlag
                                    1-   70     ;--------------------------------------------------------
                                    1-   71     ; global definitions
                                    1-   72     ;--------------------------------------------------------
                                    1-   73     ;--------------------------------------------------------
                                    1-   74     ; absolute symbol definitions
                                    1-   75     ;--------------------------------------------------------
                                    1-   76     ;--------------------------------------------------------
                                    1-   77     ; compiler-defined variables
                                    1-   78     ;--------------------------------------------------------
                                    1-   79     .segment "uninit"
     0000                           1-   80     r0x1009:
                                    1-   81     	.res	1
                                    1-   82     .segment "uninit"
     0000                           1-   83     r0x1004:
                                    1-   84     	.res	1
                                    1-   85     .segment "uninit"
     0000                           1-   86     r0x1005:
                                    1-   87     	.res	1
                                    1-   88     .segment "uninit"
     0000                           1-   89     r0x1008:
                                    1-   90     	.res	1
                                    1-   91     .segment "uninit"
     0000                           1-   92     r0x1006:
                                    1-   93     	.res	1
                                    1-   94     .segment "uninit"
     0000                           1-   95     r0x1007:
                                    1-   96     	.res	1
                                    1-   97     ;--------------------------------------------------------
                                    1-   98     ; initialized data
                                    1-   99     ;--------------------------------------------------------
                                    1-  101     .segment "idata"
     0000                           1-  102     _keyCount:
     0000 0000 0000                 1-  103     	dw	0x00, 0x00
                                    1-  107     .segment "idata"
     0000                           1-  108     _longPressFlag:
     0000 0000                      1-  109     	dw	0x00
                                    1-  112     ;--------------------------------------------------------
                                    1-  113     ; overlayable items in internal ram 
                                    1-  114     ;--------------------------------------------------------
                                    1-  115     ;	udata_ovr
                                    1-  116     ;--------------------------------------------------------
                                    1-  117     ; code
                                    1-  118     ;--------------------------------------------------------
                                    1-  119     ;***
                                    1-  120     ;  pBlock Stats: dbName = C
                                    1-  121     ;***
                                    1-  122     ;has an exit
                                    1-  123     ;functions called:
                                    1-  124     ;   _delay
                                    1-  125     ;   _delay
                                    1-  126     ;2 compiler assigned registers:
                                    1-  127     ;   r0x1006
                                    1-  128     ;   r0x1007
                                    1-  129     ;; Starting pCode block
                                    1-  130     .segment "code"; module=common, function=_checkLVD
                                    1-  132     ;local variable name mapping:
     0000                           1-  134     _checkLVD:
                                    1-  135     ; 2 exit points
                                    1-  136     	.line	125, "common.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0000 2115                      1-  137     	MOVIA	0x15
     0001 000r                      1-  138     	IOST	_PCON1
                                    1-  139     	.line	126, "common.c"; 	delay(80);
     0002 2150                      1-  140     	MOVIA	0x50
     0003 2rrr                      1-  141     	LCALL	_delay
                                    1-  142     	.line	127, "common.c"; 	if((PCON1 >> 6)&1)
     0004 001r                      1-  143     	IOSTR	_PCON1
     0005 00rr                      1-  144     	MOVAR	r0x1006
     0006 2240                      1-  145     	ANDIA	0x40
     0007 0903                      1-  146     	BTRSS	STATUS,2
     0008 2101                      1-  147     	MOVIA	0x01
     0009 00rr                      1-  148     	MOVAR	r0x1007
     000A 01rr                      1-  149     	MOVR	r0x1007,W
     000B 0D03                      1-  150     	BTRSC	STATUS,2
     000C 3rrr                      1-  151     	LGOTO	_00159_DS_
                                    1-  152     	.line	129, "common.c"; 	lvdFlag = 0;
     000D 02rr                      1-  153     	CLRR	r0x1006
     000E 3rrr                      1-  154     	LGOTO	_00160_DS_
     000F                           1-  155     _00159_DS_:
                                    1-  156     	.line	133, "common.c"; 	lvdFlag = 1;
     000F 2101                      1-  157     	MOVIA	0x01
     0010 00rr                      1-  158     	MOVAR	r0x1006
     0011                           1-  159     _00160_DS_:
                                    1-  160     	.line	135, "common.c"; 	return lvdFlag;
     0011 01rr                      1-  161     	MOVR	r0x1006,W
                                    1-  162     	.line	136, "common.c"; 	}	
                                    1-  163     	RETURN	
     0012 0010                      3-   26 m1      ret
                                    1-  164     ; exit point of _checkLVD
                                    1-  166     ;***
                                    1-  167     ;  pBlock Stats: dbName = C
                                    1-  168     ;***
                                    1-  169     ;has an exit
                                    1-  170     ;1 compiler assigned register :
                                    1-  171     ;   r0x1008
                                    1-  172     ;; Starting pCode block
                                    1-  173     .segment "code"; module=common, function=_gotoSleep
                                    1-  175     ;local variable name mapping:
     0000                           1-  177     _gotoSleep:
                                    1-  178     ; 2 exit points
                                    1-  179     	.line	98, "common.c"; 	void gotoSleep(char wakeKey)
     0000 00rr                      1-  180     	MOVAR	r0x1008
                                    1-  181     	.line	101, "common.c"; 	T1CR1 = C_TMR1_Dis;
     0001 0200                      1-  182     	CLRA	
     0002 002r                      1-  183     	SFUN	_T1CR1
                                    1-  184     	.line	103, "common.c"; 	PWM1DUTY = 0;
     0003 002r                      1-  185     	SFUN	_PWM1DUTY
                                    1-  186     	.line	104, "common.c"; 	PORTB = 0x08;
     0004 2108                      1-  187     	MOVIA	0x08
     0005 00rr                      1-  188     	MOVAR	_PORTB
                                    1-  189     	.line	105, "common.c"; 	keyCount = 0;
     0006 02rr                      1-  190     	CLRR	_keyCount
     0007 02rr                      1-  191     	CLRR	(_keyCount + 1)
                                    1-  192     	.line	106, "common.c"; 	sleepCount = 0;
     0008 02rr                      1-  193     	CLRR	_sleepCount
                                    1-  194     	.line	108, "common.c"; 	BWUCON = wakeKey;
     0009 01rr                      1-  195     	MOVR	r0x1008,W
     000A 00rr                      1-  196     	MOVAR	_BWUCON
                                    1-  197     	.line	109, "common.c"; 	INTE =  C_INT_TMR0 | C_INT_PBKey;
     000B 2103                      1-  198     	MOVIA	0x03
     000C 00rr                      1-  199     	MOVAR	_INTE
                                    1-  200     	.line	110, "common.c"; 	PCON =  C_LVR_En | C_LVR_En;	
     000D 2108                      1-  201     	MOVIA	0x08
     000E 00rr                      1-  202     	MOVAR	_PCON
                                    1-  203     	.line	111, "common.c"; 	INTF = 0;								// Clear all interrupt flags
     000F 02rr                      1-  204     	CLRR	_INTF
                                    1-  205     	.line	112, "common.c"; 	CLRWDT();
     0010 0002                      1-  206     	clrwdt
                                    1-  207     	.line	113, "common.c"; 	SLEEP();
     0011 0001                      1-  208     	sleep
                                    1-  209     	.line	114, "common.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0012 2101                      1-  210     	MOVIA	0x01
     0013 00rr                      1-  211     	MOVAR	_INTE
                                    1-  212     	.line	115, "common.c"; 	INTF = 0;
     0014 02rr                      1-  213     	CLRR	_INTF
                                    1-  214     	.line	117, "common.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0015 21A8                      1-  215     	MOVIA	0xa8
     0016 00rr                      1-  216     	MOVAR	_PCON
                                    1-  217     	.line	118, "common.c"; 	}
                                    1-  218     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1-  219     ; exit point of _gotoSleep
                                    1-  221     ;***
                                    1-  222     ;  pBlock Stats: dbName = C
                                    1-  223     ;***
                                    1-  224     ;has an exit
                                    1-  225     ;2 compiler assigned registers:
                                    1-  226     ;   r0x1004
                                    1-  227     ;   r0x1005
                                    1-  228     ;; Starting pCode block
                                    1-  229     .segment "code"; module=common, function=_delay
                                    1-  231     ;local variable name mapping:
     0000                           1-  234     _delay:
                                    1-  235     ; 2 exit points
                                    1-  236     	.line	92, "common.c"; 	void delay(u8t time)
     0000 00rr                      1-  237     	MOVAR	r0x1004
                                    1-  238     	.line	94, "common.c"; 	for(u8t i=0;i<time;i++);
     0001 02rr                      1-  239     	CLRR	r0x1005
     0002                           1-  240     _00147_DS_:
     0002 01rr                      1-  241     	MOVR	r0x1004,W
     0003 04rr                      1-  242     	SUBAR	r0x1005,W
     0004 0C03                      1-  243     	BTRSC	STATUS,0
     0005 3rrr                      1-  244     	LGOTO	_00149_DS_
     0006 05rr                      1-  245     	INCR	r0x1005,F
     0007 3rrr                      1-  246     	LGOTO	_00147_DS_
     0008                           1-  247     _00149_DS_:
                                    1-  248     	.line	95, "common.c"; 	}
                                    1-  249     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1-  250     ; exit point of _delay
                                    1-  252     ;***
                                    1-  253     ;  pBlock Stats: dbName = C
                                    1-  254     ;***
                                    1-  255     ;has an exit
                                    1-  256     ;1 compiler assigned register :
                                    1-  257     ;   r0x1009
                                    1-  258     ;; Starting pCode block
                                    1-  259     .segment "code"; module=common, function=_keyRead
                                    1-  261     ;local variable name mapping:
     0000                           1-  263     _keyRead:
                                    1-  264     ; 2 exit points
                                    1-  265     	.line	56, "common.c"; 	char keyRead(char KeyStatus)	
     0000 00rr                      1-  266     	MOVAR	r0x1009
                                    1-  267     	.line	58, "common.c"; 	if (KeyStatus)
     0001 01rr                      1-  268     	MOVR	r0x1009,W
     0002 0D03                      1-  269     	BTRSC	STATUS,2
     0003 3rrr                      1-  270     	LGOTO	_00119_DS_
                                    1-  271     	.line	60, "common.c"; 	keyCount++;
     0004 05rr                      1-  272     	INCR	_keyCount,F
     0005 0D03                      1-  273     	BTRSC	STATUS,2
     0006 05rr                      1-  274     	INCR	(_keyCount + 1),F
                                    1-  275     ;;unsigned compare: left < lit (0x7D0=2000), size=2
                                    1-  276     	.line	61, "common.c"; 	if(keyCount >= 2000)
     0007 2107                      1-  277     	MOVIA	0x07
     0008 04rr                      1-  278     	SUBAR	(_keyCount + 1),W
     0009 0903                      1-  279     	BTRSS	STATUS,2
     000A 3rrr                      1-  280     	LGOTO	_00138_DS_
     000B 21D0                      1-  281     	MOVIA	0xd0
     000C 04rr                      1-  282     	SUBAR	_keyCount,W
     000D                           1-  283     _00138_DS_:
     000D 0803                      1-  284     	BTRSS	STATUS,0
     000E 3rrr                      1-  285     	LGOTO	_00120_DS_
                                    1-  286     	.line	63, "common.c"; 	keyCount = 2000;
     000F 21D0                      1-  287     	MOVIA	0xd0
     0010 00rr                      1-  288     	MOVAR	_keyCount
     0011 2107                      1-  289     	MOVIA	0x07
     0012 00rr                      1-  290     	MOVAR	(_keyCount + 1)
                                    1-  291     	.line	64, "common.c"; 	if(!longPressFlag)
     0013 01rr                      1-  292     	MOVR	_longPressFlag,W
     0014 0903                      1-  293     	BTRSS	STATUS,2
     0015 3rrr                      1-  294     	LGOTO	_00120_DS_
                                    1-  295     	.line	66, "common.c"; 	longPressFlag = 1;
     0016 2101                      1-  296     	MOVIA	0x01
     0017 00rr                      1-  297     	MOVAR	_longPressFlag
                                    1-  298     	.line	67, "common.c"; 	return 2;
     0018 2102                      1-  299     	MOVIA	0x02
     0019 3rrr                      1-  300     	LGOTO	_00121_DS_
                                    1-  301     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     001A                           1-  302     _00119_DS_:
                                    1-  303     	.line	75, "common.c"; 	if(keyCount >= 2000)
     001A 2107                      1-  304     	MOVIA	0x07
     001B 04rr                      1-  305     	SUBAR	(_keyCount + 1),W
     001C 0903                      1-  306     	BTRSS	STATUS,2
     001D 3rrr                      1-  307     	LGOTO	_00139_DS_
     001E 21D0                      1-  308     	MOVIA	0xd0
     001F 04rr                      1-  309     	SUBAR	_keyCount,W
     0020                           1-  310     _00139_DS_:
     0020 0803                      1-  311     	BTRSS	STATUS,0
     0021 3rrr                      1-  312     	LGOTO	_00116_DS_
                                    1-  313     	.line	77, "common.c"; 	keyCount = 0;
     0022 02rr                      1-  314     	CLRR	_keyCount
     0023 02rr                      1-  315     	CLRR	(_keyCount + 1)
                                    1-  316     	.line	78, "common.c"; 	longPressFlag = 0;
     0024 02rr                      1-  317     	CLRR	_longPressFlag
                                    1-  318     	.line	79, "common.c"; 	return	0;
     0025 2100                      1-  319     	MOVIA	0x00
     0026 3rrr                      1-  320     	LGOTO	_00121_DS_
                                    1-  321     ;;unsigned compare: left < lit (0x50=80), size=2
     0027                           1-  322     _00116_DS_:
                                    1-  323     	.line	81, "common.c"; 	else if(keyCount >= 80)
     0027 2100                      1-  324     	MOVIA	0x00
     0028 04rr                      1-  325     	SUBAR	(_keyCount + 1),W
     0029 0903                      1-  326     	BTRSS	STATUS,2
     002A 3rrr                      1-  327     	LGOTO	_00140_DS_
     002B 2150                      1-  328     	MOVIA	0x50
     002C 04rr                      1-  329     	SUBAR	_keyCount,W
     002D                           1-  330     _00140_DS_:
     002D 0803                      1-  331     	BTRSS	STATUS,0
     002E 3rrr                      1-  332     	LGOTO	_00117_DS_
                                    1-  333     	.line	83, "common.c"; 	keyCount = 0;
     002F 02rr                      1-  334     	CLRR	_keyCount
     0030 02rr                      1-  335     	CLRR	(_keyCount + 1)
                                    1-  336     	.line	84, "common.c"; 	return	1;
     0031 2101                      1-  337     	MOVIA	0x01
     0032 3rrr                      1-  338     	LGOTO	_00121_DS_
     0033                           1-  339     _00117_DS_:
                                    1-  340     	.line	86, "common.c"; 	keyCount = 0;
     0033 02rr                      1-  341     	CLRR	_keyCount
     0034 02rr                      1-  342     	CLRR	(_keyCount + 1)
     0035                           1-  343     _00120_DS_:
                                    1-  344     	.line	88, "common.c"; 	return 0;
     0035 2100                      1-  345     	MOVIA	0x00
     0036                           1-  346     _00121_DS_:
                                    1-  347     	.line	89, "common.c"; 	}
                                    1-  348     	RETURN	
     0036 0010                      3-   26 m1      ret
                                    1-  349     ; exit point of _keyRead
                                    1-  351     ;***
                                    1-  352     ;  pBlock Stats: dbName = C
                                    1-  353     ;***
                                    1-  354     ;has an exit
                                    1-  355     ;functions called:
                                    1-  356     ;   _gotoSleep
                                    1-  357     ;   _gotoSleep
                                    1-  358     ;; Starting pCode block
                                    1-  359     .segment "code"; module=common, function=_initTimer0
     0000                           1-  361     _initTimer0:
                                    1-  362     ; 2 exit points
                                    1-  363     	.line	23, "common.c"; 	PORTB = 0xFB;
     0000 21FB                      1-  364     	MOVIA	0xfb
     0001 00rr                      1-  365     	MOVAR	_PORTB
                                    1-  366     	.line	24, "common.c"; 	BPHCON = 0xDC;
     0002 21DC                      1-  367     	MOVIA	0xdc
     0003 00rr                      1-  368     	MOVAR	_BPHCON
                                    1-  369     	.line	26, "common.c"; 	IOSTB =  C_PB0_Input | C_PB1_Input | C_PB5_Input;	
     0004 2123                      1-  370     	MOVIA	0x23
     0005 000r                      1-  371     	IOST	_IOSTB
                                    1-  372     	.line	27, "common.c"; 	PORTB = 0xFB;                        	// PortB Data Register = 0x00
     0006 21FB                      1-  373     	MOVIA	0xfb
     0007 00rr                      1-  374     	MOVAR	_PORTB
                                    1-  375     	.line	28, "common.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     0008 21A8                      1-  376     	MOVIA	0xa8
     0009 00rr                      1-  377     	MOVAR	_PCON
                                    1-  378     	.line	29, "common.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     000A 2101                      1-  379     	MOVIA	0x01
     000B 00rr                      1-  380     	MOVAR	_INTE
                                    1-  381     	.line	30, "common.c"; 	INTF = 0;
     000C 02rr                      1-  382     	CLRR	_INTF
                                    1-  383     	.line	33, "common.c"; 	PCON1 = C_TMR0_Dis;
     000D 0200                      1-  384     	CLRA	
     000E 000r                      1-  385     	IOST	_PCON1
                                    1-  386     	.line	35, "common.c"; 	TMR0 = 55;
     000F 2137                      1-  387     	MOVIA	0x37
     0010 00rr                      1-  388     	MOVAR	_TMR0
                                    1-  389     	.line	36, "common.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0011 0200                      1-  390     	CLRA	
     0012 0003                      1-  391     	T0MD	
                                    1-  392     	.line	38, "common.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0013 2115                      1-  393     	MOVIA	0x15
     0014 000r                      1-  394     	IOST	_PCON1
                                    1-  395     	.line	42, "common.c"; 	ENI();	
     0015 0004                      1-  396     	ENI
                                    1-  397     	.line	44, "common.c"; 	gotoSleep(0x23);
     0016 2123                      1-  398     	MOVIA	0x23
     0017 2rrr                      1-  399     	LCALL	_gotoSleep
                                    1-  400     	.line	45, "common.c"; 	}
                                    1-  401     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1-  402     ; exit point of _initTimer0
                                    1-  405     ;	code size estimation:
                                    1-  406     ;	  129+    0 =   129 instructions (  258 byte)
                                    1-  408     	end
                                    1-  408     	end

SYMBOL TABLE            TYPE     VALUE
__CHECKSUM_ADDR__       Label    00000000
__PIN_COUNT__           Constant 00000006
__PROCESSOR__           Constant 00800515
_00116_DS_              Label    00000027
_00117_DS_              Label    00000033
_00119_DS_              Label    0000001A
_00120_DS_              Label    00000035
_00121_DS_              Label    00000036
_00138_DS_              Label    0000000D
_00139_DS_              Label    00000020
_00140_DS_              Label    0000002D
_00147_DS_              Label    00000002
_00149_DS_              Label    00000008
_00159_DS_              Label    0000000F
_00160_DS_              Label    00000011
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BPLCON                 Label    00000000
_BPLCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_checkLVD               Label    00000000
_delay                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initTimer0             Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_longPressFlag          Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_sleepCount             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
ENABLE_RAM_BANK         Variable 00000000
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1004                 Label    00000000
r0x1005                 Label    00000000
r0x1006                 Label    00000000
r0x1007                 Label    00000000
r0x1008                 Label    00000000
r0x1009                 Label    00000000
SSAVE                   Label    00000000
STATUS                  Constant 00000003
STK00                   Label    00000000
STK01                   Label    00000000
STK02                   Label    00000000
STK03                   Label    00000000
STK04                   Label    00000000
W                       Constant 00000000
WSAVE                   Label    00000000


SOURCE FILE TABLE
001 common.s
002 ny8a051f.inc
003 common.inc
004 common.c

PROCESSOR    = NY8A051F (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
