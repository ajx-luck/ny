
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A051F,c=on
                                    1-    9     	#include "ny8a051f.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_delay
                                    1-   15     	extern	_keyRead
                                    1-   16     	extern	_gotoSleep
                                    1-   17     	extern	_checkLVD
                                    1-   18     	extern	_initTimer0
                                    1-   19     	extern	_PORTBbits
                                    1-   20     	extern	_PCONbits
                                    1-   21     	extern	_BWUCONbits
                                    1-   22     	extern	_BPLCONbits
                                    1-   23     	extern	_BPHCONbits
                                    1-   24     	extern	_INTEbits
                                    1-   25     	extern	_INTFbits
                                    1-   26     	extern	_keyCount
                                    1-   27     	extern	_INDF
                                    1-   28     	extern	_TMR0
                                    1-   29     	extern	_PCL
                                    1-   30     	extern	_STATUS
                                    1-   31     	extern	_FSR
                                    1-   32     	extern	_PORTB
                                    1-   33     	extern	_PCON
                                    1-   34     	extern	_BWUCON
                                    1-   35     	extern	_PCHBUF
                                    1-   36     	extern	_BPLCON
                                    1-   37     	extern	_BPHCON
                                    1-   38     	extern	_INTE
                                    1-   39     	extern	_INTF
                                    1-   40     	extern	_TMR1
                                    1-   41     	extern	_T1CR1
                                    1-   42     	extern	_T1CR2
                                    1-   43     	extern	_PWM1DUTY
                                    1-   44     	extern	_PS1CV
                                    1-   45     	extern	_BZ1CR
                                    1-   46     	extern	_IRCR
                                    1-   47     	extern	_TBHP
                                    1-   48     	extern	_TBHD
                                    1-   49     	extern	_OSCCR
                                    1-   50     	extern	_IOSTB
                                    1-   51     	extern	_PS0CV
                                    1-   52     	extern	_BODCON
                                    1-   53     	extern	_PCON1
                                    1-   54     	extern	_T0MD
                                    1-   55     	extern	___sdcc_saved_fsr
                                    1-   56     	extern	___sdcc_saved_stk00
                                    1-   57     	extern	___sdcc_saved_stk01
                                    1-   58     	extern	__mulchar
                                    1-   59     	extern	__nyc_ny8_startup
                                    1-   60     ;--------------------------------------------------------
                                    1-   61     ; global declarations
                                    1-   62     ;--------------------------------------------------------
                                    1-   63     	extern	_keyCon
                                    1-   64     	extern	_setPWMduty
                                    1-   65     	extern	_Led6
                                    1-   66     	extern	_Led9
                                    1-   67     	extern	_Led10
                                    1-   68     	extern	_outCon
                                    1-   69     	extern	_ledCon
                                    1-   70     	extern	_isr
                                    1-   71     	extern	_main
                                    1-   72     	extern	_intCount
                                    1-   73     	extern	_IntFlag
                                    1-   74     	extern	_workStep
                                    1-   75     	extern	_keyClick
                                    1-   76     	extern	_ledCount
                                    1-   77     	extern	_pwmDuty
                                    1-   78     	extern	_chrgDuty
                                    1-   79     	extern	_count100
                                    1-   80     	extern	_addFlag
                                    1-   81     	extern	_waitCount
                                    1-   82     	extern	_chrgCount
                                    1-   83     	extern	_sleepCount
                                    1-   85     	extern PSAVE
                                    1-   86     	extern SSAVE
                                    1-   87     	extern WSAVE
                                    1-   88     	extern STK04
                                    1-   89     	extern STK03
                                    1-   90     	extern STK02
                                    1-   91     	extern STK01
                                    1-   92     	extern STK00
                                    1-   94     .segment "uninit", 0x20000010
 20000010                           1-   95     PSAVE:
                                    1-   96     	.res 1
 20000011                           1-   97     SSAVE:
                                    1-   98     	.res 1
 20000012                           1-   99     WSAVE:
                                    1-  100     	.res 1
 20000013                           1-  101     STK04:
                                    1-  102     	.res 1
 20000014                           1-  103     STK03:
                                    1-  104     	.res 1
 20000015                           1-  105     STK02:
                                    1-  106     	.res 1
 20000016                           1-  107     STK01:
                                    1-  108     	.res 1
 20000017                           1-  109     STK00:
                                    1-  110     	.res 1
                                    1-  112     ;--------------------------------------------------------
                                    1-  113     ; global definitions
                                    1-  114     ;--------------------------------------------------------
                                    1-  115     ;--------------------------------------------------------
                                    1-  116     ; absolute symbol definitions
                                    1-  117     ;--------------------------------------------------------
                                    1-  118     ;--------------------------------------------------------
                                    1-  119     ; compiler-defined variables
                                    1-  120     ;--------------------------------------------------------
                                    1-  121     .segment "uninit"
     0000                           1-  122     r0x101C:
                                    1-  123     	.res	1
                                    1-  124     .segment "uninit"
     0000                           1-  125     r0x101B:
                                    1-  126     	.res	1
                                    1-  127     .segment "uninit"
     0000                           1-  128     r0x1016:
                                    1-  129     	.res	1
                                    1-  130     .segment "uninit"
     0000                           1-  131     r0x1018:
                                    1-  132     	.res	1
                                    1-  133     .segment "uninit"
     0000                           1-  134     r0x1017:
                                    1-  135     	.res	1
                                    1-  136     .segment "uninit"
     0000                           1-  137     r0x1019:
                                    1-  138     	.res	1
                                    1-  139     .segment "uninit"
     0000                           1-  140     r0x1015:
                                    1-  141     	.res	1
                                    1-  142     ;--------------------------------------------------------
                                    1-  143     ; initialized data
                                    1-  144     ;--------------------------------------------------------
                                    1-  146     .segment "idata"
     0000                           1-  147     _intCount:
     0000 0000 0000                 1-  148     	dw	0x00, 0x00
                                    1-  152     .segment "idata"
     0000                           1-  153     _IntFlag:
     0000 0000                      1-  154     	dw	0x00
                                    1-  158     .segment "idata"
     0000                           1-  159     _workStep:
     0000 0000                      1-  160     	dw	0x00
                                    1-  164     .segment "idata"
     0000                           1-  165     _keyClick:
     0000 0000                      1-  166     	dw	0x00
                                    1-  170     .segment "idata"
     0000                           1-  171     _ledCount:
     0000 0000 0000                 1-  172     	dw	0x00, 0x00
                                    1-  176     .segment "idata"
     0000                           1-  177     _pwmDuty:
     0000 0001                      1-  178     	dw	0x01
                                    1-  182     .segment "idata"
     0000                           1-  183     _chrgDuty:
     0000 0000                      1-  184     	dw	0x00
                                    1-  188     .segment "idata"
     0000                           1-  189     _count100:
     0000 0000                      1-  190     	dw	0x00
                                    1-  194     .segment "idata"
     0000                           1-  195     _addFlag:
     0000 0000                      1-  196     	dw	0x00
                                    1-  200     .segment "idata"
     0000                           1-  201     _waitCount:
     0000 0000 0000                 1-  202     	dw	0x00, 0x00
                                    1-  206     .segment "idata"
     0000                           1-  207     _chrgCount:
     0000 0000 0000                 1-  208     	dw	0x00, 0x00
                                    1-  212     .segment "idata"
     0000                           1-  213     _sleepCount:
     0000 0000                      1-  214     	dw	0x00
                                    1-  217     ;--------------------------------------------------------
                                    1-  218     ; overlayable items in internal ram 
                                    1-  219     ;--------------------------------------------------------
                                    1-  220     ;	udata_ovr
                                    1-  221     ;--------------------------------------------------------
                                    1-  222     ; reset vector 
                                    1-  223     ;--------------------------------------------------------
                                    1-  224     ORG	0x0000
     0000 3rrr                      1-  225     	LGOTO	__nyc_ny8_startup
                                    1-  226     ;--------------------------------------------------------
                                    1-  227     ; interrupt and initialization code
                                    1-  228     ;--------------------------------------------------------
                                    1-  229     ORG 0x0008
     0008 3rrr                      1-  230     	lgoto	__sdcc_interrupt
                                    1-  232     .segment "code"
     0000                           1-  233     __sdcc_interrupt:
                                    1-  234     ;***
                                    1-  235     ;  pBlock Stats: dbName = I
                                    1-  236     ;***
                                    1-  237     ;2 compiler assigned registers:
                                    1-  238     ;   STK00
                                    1-  239     ;   STK01
                                    1-  240     ;; Starting pCode block
     0000                           1-  241     _isr:
                                    1-  242     ; 0 exit points
                                    1-  243     	.line	30, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  244     	MOVAR	WSAVE
     0001 1503                      1-  245     	SWAPR	STATUS,W
     0002 0283                      1-  246     	CLRR	STATUS
     0003 00rr                      1-  247     	MOVAR	SSAVE
     0004 010A                      1-  248     	MOVR	PCHBUF,W
     0005 028A                      1-  249     	CLRR	PCHBUF
     0006 00rr                      1-  250     	MOVAR	PSAVE
     0007 0104                      1-  251     	MOVR	FSR,W
     0008 00rr                      1-  252     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  253     	MOVR	STK00,W
     000A 00rr                      1-  254     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  255     	MOVR	STK01,W
     000C 00rr                      1-  256     	MOVAR	___sdcc_saved_stk01
                                    1-  257     	.line	32, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  258     	BTRSS	_INTFbits,0
     000E 3rrr                      1-  259     	LGOTO	_00115_DS_
                                    1-  260     	.line	34, "main.c"; 	TMR0 = 68;
     000F 2144                      1-  261     	MOVIA	0x44
     0010 00rr                      1-  262     	MOVAR	_TMR0
                                    1-  263     	.line	35, "main.c"; 	intCount++;
     0011 05rr                      1-  264     	INCR	_intCount,F
     0012 0D03                      1-  265     	BTRSC	STATUS,2
     0013 05rr                      1-  266     	INCR	(_intCount + 1),F
                                    1-  267     	.line	36, "main.c"; 	if(intCount == 10)
     0014 01rr                      1-  268     	MOVR	_intCount,W
     0015 240A                      1-  269     	XORIA	0x0a
     0016 0903                      1-  270     	BTRSS	STATUS,2
     0017 3rrr                      1-  271     	LGOTO	_00106_DS_
     0018 01rr                      1-  272     	MOVR	(_intCount + 1),W
     0019 2400                      1-  273     	XORIA	0x00
     001A 0903                      1-  274     	BTRSS	STATUS,2
     001B 3rrr                      1-  275     	LGOTO	_00106_DS_
                                    1-  276     	.line	38, "main.c"; 	intCount = 0;
     001C 02rr                      1-  277     	CLRR	_intCount
     001D 02rr                      1-  278     	CLRR	(_intCount + 1)
                                    1-  279     	.line	39, "main.c"; 	IntFlag = 1;
     001E 2101                      1-  280     	MOVIA	0x01
     001F 00rr                      1-  281     	MOVAR	_IntFlag
     0020                           1-  282     _00106_DS_:
                                    1-  283     	.line	42, "main.c"; 	if(chrgCount)
     0020 01rr                      1-  284     	MOVR	_chrgCount,W
     0021 11rr                      1-  285     	IORAR	(_chrgCount + 1),W
     0022 0D03                      1-  286     	BTRSC	STATUS,2
     0023 3rrr                      1-  287     	LGOTO	_00115_DS_
                                    1-  288     	.line	44, "main.c"; 	if(count100 < chrgDuty)
     0024 01rr                      1-  289     	MOVR	_chrgDuty,W
     0025 04rr                      1-  290     	SUBAR	_count100,W
     0026 0C03                      1-  291     	BTRSC	STATUS,0
     0027 3rrr                      1-  292     	LGOTO	_00108_DS_
                                    1-  293     	.line	45, "main.c"; 	PORTB &= 0xF7;
     0028 1Drr                      1-  294     	BCR	_PORTB,3
     0029 3rrr                      1-  295     	LGOTO	_00109_DS_
     002A                           1-  296     _00108_DS_:
                                    1-  297     	.line	47, "main.c"; 	PORTB |= 0x08;
     002A 19rr                      1-  298     	BSR	_PORTB,3
     002B                           1-  299     _00109_DS_:
                                    1-  300     	.line	48, "main.c"; 	if(++count100 == 100)
     002B 05rr                      1-  301     	INCR	_count100,F
     002C 01rr                      1-  302     	MOVR	_count100,W
     002D 2464                      1-  303     	XORIA	0x64
     002E 0D03                      1-  304     	BTRSC	STATUS,2
                                    1-  305     	.line	49, "main.c"; 	count100 = 0;
     002F 02rr                      1-  306     	CLRR	_count100
     0030                           1-  307     _00115_DS_:
                                    1-  308     	.line	52, "main.c"; 	if(INTFbits.PBIF)
     0030 08rr                      1-  309     	BTRSS	_INTFbits,1
     0031 3rrr                      1-  310     	LGOTO	_00117_DS_
                                    1-  311     	.line	54, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0032 21FD                      1-  312     	MOVIA	0xfd
     0033 00rr                      1-  313     	MOVAR	_INTF
     0034                           1-  314     _00117_DS_:
                                    1-  315     	.line	57, "main.c"; 	INTF = 0;
     0034 02rr                      1-  316     	CLRR	_INTF
                                    1-  317     	.line	59, "main.c"; 	}
     0035 01rr                      1-  318     	MOVR	___sdcc_saved_stk01,W
     0036 00rr                      1-  319     	MOVAR	STK01
     0037 01rr                      1-  320     	MOVR	___sdcc_saved_stk00,W
     0038 00rr                      1-  321     	MOVAR	STK00
     0039 01rr                      1-  322     	MOVR	___sdcc_saved_fsr,W
     003A 0084                      1-  323     	MOVAR	FSR
     003B 01rr                      1-  324     	MOVR	PSAVE,W
     003C 008A                      1-  325     	MOVAR	PCHBUF
     003D 0283                      1-  326     	CLRR	STATUS
     003E 15rr                      1-  327     	SWAPR	SSAVE,W
     003F 0083                      1-  328     	MOVAR	STATUS
     0040 15rr                      1-  329     	SWAPR	WSAVE,F
     0041 15rr                      1-  330     	SWAPR	WSAVE,W
     0042                           1-  331     END_OF_INTERRUPT:
     0042 0011                      1-  332     	RETIE	
                                    1-  334     ;--------------------------------------------------------
                                    1-  335     ; code
                                    1-  336     ;--------------------------------------------------------
                                    1-  337     ;***
                                    1-  338     ;  pBlock Stats: dbName = M
                                    1-  339     ;***
                                    1-  340     ;has an exit
                                    1-  341     ;functions called:
                                    1-  342     ;   _initTimer0
                                    1-  343     ;   _keyCon
                                    1-  344     ;   _ledCon
                                    1-  345     ;   _checkLVD
                                    1-  346     ;   _gotoSleep
                                    1-  347     ;   _outCon
                                    1-  348     ;   _initTimer0
                                    1-  349     ;   _keyCon
                                    1-  350     ;   _ledCon
                                    1-  351     ;   _checkLVD
                                    1-  352     ;   _gotoSleep
                                    1-  353     ;   _outCon
                                    1-  354     ;1 compiler assigned register :
                                    1-  355     ;   r0x101C
                                    1-  356     ;; Starting pCode block
                                    1-  357     .segment "code"; module=main, function=_main
     0000                           1-  359     _main:
                                    1-  360     ; 2 exit points
                                    1-  361     	.line	64, "main.c"; 	initTimer0();
     0000 2rrr                      1-  362     	LCALL	_initTimer0
     0001                           1-  363     _00135_DS_:
                                    1-  364     	.line	67, "main.c"; 	CLRWDT(); 
     0001 0002                      1-  365     	clrwdt
                                    1-  366     	.line	68, "main.c"; 	if(!IntFlag)
     0002 01rr                      1-  367     	MOVR	_IntFlag,W
     0003 0D03                      1-  368     	BTRSC	STATUS,2
     0004 3rrr                      1-  369     	LGOTO	_00135_DS_
                                    1-  370     	.line	70, "main.c"; 	IntFlag = 0;
     0005 02rr                      1-  371     	CLRR	_IntFlag
                                    1-  372     	.line	71, "main.c"; 	keyCon();
     0006 2rrr                      1-  373     	LCALL	_keyCon
                                    1-  374     	.line	72, "main.c"; 	ledCon();	
     0007 2rrr                      1-  375     	LCALL	_ledCon
                                    1-  376     	.line	73, "main.c"; 	if(checkLVD())
     0008 2rrr                      1-  377     	LCALL	_checkLVD
     0009 00rr                      1-  378     	MOVAR	r0x101C
     000A 01rr                      1-  379     	MOVR	r0x101C,W
     000B 0D03                      1-  380     	BTRSC	STATUS,2
     000C 3rrr                      1-  381     	LGOTO	_00132_DS_
                                    1-  382     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1-  383     	.line	75, "main.c"; 	if(count100 < 50)
     000D 2132                      1-  384     	MOVIA	0x32
     000E 04rr                      1-  385     	SUBAR	_count100,W
     000F 0C03                      1-  386     	BTRSC	STATUS,0
     0010 3rrr                      1-  387     	LGOTO	_00125_DS_
                                    1-  388     	.line	76, "main.c"; 	PORTB &= 0xF7;
     0011 1Drr                      1-  389     	BCR	_PORTB,3
     0012 3rrr                      1-  390     	LGOTO	_00126_DS_
     0013                           1-  391     _00125_DS_:
                                    1-  392     	.line	78, "main.c"; 	PORTB |= 0x08;
     0013 19rr                      1-  393     	BSR	_PORTB,3
     0014                           1-  394     _00126_DS_:
                                    1-  395     	.line	79, "main.c"; 	if(++count100 == 100)	//100ms
     0014 05rr                      1-  396     	INCR	_count100,F
     0015 01rr                      1-  397     	MOVR	_count100,W
     0016 2464                      1-  398     	XORIA	0x64
     0017 0903                      1-  399     	BTRSS	STATUS,2
     0018 3rrr                      1-  400     	LGOTO	_00135_DS_
                                    1-  401     	.line	81, "main.c"; 	count100 = 0;
     0019 02rr                      1-  402     	CLRR	_count100
                                    1-  403     	.line	82, "main.c"; 	if(++sleepCount >= 35)
     001A 05rr                      1-  404     	INCR	_sleepCount,F
                                    1-  405     ;;unsigned compare: left < lit (0x23=35), size=1
     001B 2123                      1-  406     	MOVIA	0x23
     001C 04rr                      1-  407     	SUBAR	_sleepCount,W
     001D 0803                      1-  408     	BTRSS	STATUS,0
     001E 3rrr                      1-  409     	LGOTO	_00135_DS_
                                    1-  410     	.line	83, "main.c"; 	gotoSleep(0x23);
     001F 2123                      1-  411     	MOVIA	0x23
     0020 2rrr                      1-  412     	LCALL	_gotoSleep
     0021 3rrr                      1-  413     	LGOTO	_00135_DS_
     0022                           1-  414     _00132_DS_:
                                    1-  415     	.line	89, "main.c"; 	outCon();
     0022 2rrr                      1-  416     	LCALL	_outCon
     0023 3rrr                      1-  417     	LGOTO	_00135_DS_
                                    1-  418     	.line	94, "main.c"; 	}
                                    1-  419     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1-  420     ; exit point of _main
                                    1-  422     ;***
                                    1-  423     ;  pBlock Stats: dbName = C
                                    1-  424     ;***
                                    1-  425     ;has an exit
                                    1-  426     ;functions called:
                                    1-  427     ;   _keyRead
                                    1-  428     ;   _keyRead
                                    1-  429     ;1 compiler assigned register :
                                    1-  430     ;   r0x1015
                                    1-  431     ;; Starting pCode block
                                    1-  432     .segment "code"; module=main, function=_keyCon
                                    1-  434     ;local variable name mapping:
     0000                           1-  436     _keyCon:
                                    1-  437     ; 2 exit points
                                    1-  438     	.line	263, "main.c"; 	char keyStatus = ~PORTB;
     0000 07rr                      1-  439     	COMR	_PORTB,W
     0001 00rr                      1-  440     	MOVAR	r0x1015
                                    1-  441     	.line	264, "main.c"; 	keyStatus &= 0x01;
     0002 2101                      1-  442     	MOVIA	0x01
     0003 10rr                      1-  443     	ANDAR	r0x1015,F
                                    1-  444     	.line	265, "main.c"; 	keyClick = keyRead(keyStatus);
     0004 01rr                      1-  445     	MOVR	r0x1015,W
     0005 2rrr                      1-  446     	LCALL	_keyRead
     0006 00rr                      1-  447     	MOVAR	_keyClick
                                    1-  448     	.line	266, "main.c"; 	if(keyClick == 1 && workStep)
     0007 2401                      1-  449     	XORIA	0x01
     0008 0903                      1-  450     	BTRSS	STATUS,2
     0009 3rrr                      1-  451     	LGOTO	_00352_DS_
     000A 01rr                      1-  452     	MOVR	_workStep,W
     000B 0D03                      1-  453     	BTRSC	STATUS,2
     000C 3rrr                      1-  454     	LGOTO	_00352_DS_
                                    1-  455     	.line	268, "main.c"; 	ledCount = 0;
     000D 02rr                      1-  456     	CLRR	_ledCount
     000E 02rr                      1-  457     	CLRR	(_ledCount + 1)
                                    1-  458     	.line	269, "main.c"; 	workStep++;
     000F 05rr                      1-  459     	INCR	_workStep,F
                                    1-  460     ;;unsigned compare: left < lit (0xB=11), size=1
                                    1-  461     	.line	270, "main.c"; 	if(workStep >= 11)
     0010 210B                      1-  462     	MOVIA	0x0b
     0011 04rr                      1-  463     	SUBAR	_workStep,W
     0012 0803                      1-  464     	BTRSS	STATUS,0
     0013 3rrr                      1-  465     	LGOTO	_00355_DS_
                                    1-  466     	.line	271, "main.c"; 	workStep = 1;
     0014 2101                      1-  467     	MOVIA	0x01
     0015 00rr                      1-  468     	MOVAR	_workStep
     0016 3rrr                      1-  469     	LGOTO	_00355_DS_
     0017                           1-  470     _00352_DS_:
                                    1-  471     	.line	273, "main.c"; 	else if(keyClick == 2)
     0017 01rr                      1-  472     	MOVR	_keyClick,W
     0018 2402                      1-  473     	XORIA	0x02
     0019 0903                      1-  474     	BTRSS	STATUS,2
     001A 3rrr                      1-  475     	LGOTO	_00355_DS_
                                    1-  476     	.line	275, "main.c"; 	if(workStep)
     001B 01rr                      1-  477     	MOVR	_workStep,W
     001C 0D03                      1-  478     	BTRSC	STATUS,2
     001D 3rrr                      1-  479     	LGOTO	_00347_DS_
                                    1-  480     	.line	277, "main.c"; 	workStep = 0;
     001E 02rr                      1-  481     	CLRR	_workStep
     001F 3rrr                      1-  482     	LGOTO	_00355_DS_
     0020                           1-  483     _00347_DS_:
                                    1-  484     	.line	281, "main.c"; 	workStep = 1;
     0020 2101                      1-  485     	MOVIA	0x01
     0021 00rr                      1-  486     	MOVAR	_workStep
     0022                           1-  487     _00355_DS_:
                                    1-  488     	.line	284, "main.c"; 	}
                                    1-  489     	RETURN	
     0022 0010                      3-   26 m1      ret
                                    1-  490     ; exit point of _keyCon
                                    1-  492     ;***
                                    1-  493     ;  pBlock Stats: dbName = C
                                    1-  494     ;***
                                    1-  495     ;has an exit
                                    1-  496     ;7 compiler assigned registers:
                                    1-  497     ;   r0x1016
                                    1-  498     ;   STK00
                                    1-  499     ;   r0x1017
                                    1-  500     ;   STK01
                                    1-  501     ;   r0x1018
                                    1-  502     ;   r0x1019
                                    1-  503     ;   r0x101A
                                    1-  504     ;; Starting pCode block
                                    1-  505     .segment "code"; module=main, function=_setPWMduty
                                    1-  507     ;local variable name mapping:
     0000                           1-  511     _setPWMduty:
                                    1-  512     ; 2 exit points
     0000 00rr                      1-  513     	MOVAR	r0x1019
                                    1-  514     	.line	248, "main.c"; 	void setPWMduty(char duty,int prd)
     0001 00rr                      1-  515     	MOVAR	r0x1016
     0002 01rr                      1-  516     	MOVR	STK00,W
     0003 00rr                      1-  517     	MOVAR	r0x1017
     0004 01rr                      1-  518     	MOVR	STK01,W
     0005 00rr                      1-  519     	MOVAR	r0x1018
                                    1-  520     ;;100	MOVR	r0x1016,W
                                    1-  521     ;;1	CLRR	r0x101A
                                    1-  522     	.line	250, "main.c"; 	if(ledCount < duty)
     0006 2100                      1-  523     	MOVIA	0x00
     0007 04rr                      1-  524     	SUBAR	(_ledCount + 1),W
     0008 0903                      1-  525     	BTRSS	STATUS,2
     0009 3rrr                      1-  526     	LGOTO	_00339_DS_
     000A 01rr                      1-  527     	MOVR	r0x1019,W
     000B 04rr                      1-  528     	SUBAR	_ledCount,W
     000C                           1-  529     _00339_DS_:
     000C 0C03                      1-  530     	BTRSC	STATUS,0
     000D 3rrr                      1-  531     	LGOTO	_00327_DS_
                                    1-  532     	.line	251, "main.c"; 	PORTB |= 0x04;
     000E 19rr                      1-  533     	BSR	_PORTB,2
     000F 3rrr                      1-  534     	LGOTO	_00328_DS_
     0010                           1-  535     _00327_DS_:
                                    1-  536     	.line	253, "main.c"; 	PORTB &= 0xFB;
     0010 1Drr                      1-  537     	BCR	_PORTB,2
     0011                           1-  538     _00328_DS_:
                                    1-  539     	.line	254, "main.c"; 	if(++ledCount == prd)
     0011 05rr                      1-  540     	INCR	_ledCount,F
     0012 0D03                      1-  541     	BTRSC	STATUS,2
     0013 05rr                      1-  542     	INCR	(_ledCount + 1),F
     0014 01rr                      1-  543     	MOVR	r0x1017,W
     0015 00rr                      1-  544     	MOVAR	r0x1019
                                    1-  545     ;;99	MOVR	r0x1016,W
     0016 01rr                      1-  546     	MOVR	r0x1018,W
     0017 00rr                      1-  547     	MOVAR	r0x1016
     0018 12rr                      1-  548     	XORAR	_ledCount,W
     0019 0903                      1-  549     	BTRSS	STATUS,2
     001A 3rrr                      1-  550     	LGOTO	_00331_DS_
     001B 01rr                      1-  551     	MOVR	r0x1019,W
     001C 12rr                      1-  552     	XORAR	(_ledCount + 1),W
     001D 0903                      1-  553     	BTRSS	STATUS,2
     001E 3rrr                      1-  554     	LGOTO	_00331_DS_
                                    1-  555     	.line	255, "main.c"; 	ledCount = 0;
     001F 02rr                      1-  556     	CLRR	_ledCount
     0020 02rr                      1-  557     	CLRR	(_ledCount + 1)
     0021                           1-  558     _00331_DS_:
                                    1-  559     	.line	256, "main.c"; 	}
                                    1-  560     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1-  561     ; exit point of _setPWMduty
                                    1-  563     ;***
                                    1-  564     ;  pBlock Stats: dbName = C
                                    1-  565     ;***
                                    1-  566     ;has an exit
                                    1-  567     ;functions called:
                                    1-  568     ;   __mulchar
                                    1-  569     ;   _setPWMduty
                                    1-  570     ;   __mulchar
                                    1-  571     ;   _setPWMduty
                                    1-  572     ;3 compiler assigned registers:
                                    1-  573     ;   STK00
                                    1-  574     ;   r0x101B
                                    1-  575     ;   STK01
                                    1-  576     ;; Starting pCode block
                                    1-  577     .segment "code"; module=main, function=_Led6
     0000                           1-  579     _Led6:
                                    1-  580     ; 2 exit points
                                    1-  581     	.line	242, "main.c"; 	setPWMduty(4*pwmDuty,120);
     0000 2104                      1-  582     	MOVIA	0x04
     0001 00rr                      1-  583     	MOVAR	STK00
     0002 01rr                      1-  584     	MOVR	_pwmDuty,W
     0003 2rrr                      1-  585     	LCALL	__mulchar
     0004 00rr                      1-  586     	MOVAR	r0x101B
     0005 2178                      1-  587     	MOVIA	0x78
     0006 00rr                      1-  588     	MOVAR	STK01
     0007 2100                      1-  589     	MOVIA	0x00
     0008 00rr                      1-  590     	MOVAR	STK00
     0009 01rr                      1-  591     	MOVR	r0x101B,W
     000A 2rrr                      1-  592     	LCALL	_setPWMduty
                                    1-  593     	.line	243, "main.c"; 	if(ledCount == 0)
     000B 01rr                      1-  594     	MOVR	_ledCount,W
     000C 11rr                      1-  595     	IORAR	(_ledCount + 1),W
     000D 0903                      1-  596     	BTRSS	STATUS,2
     000E 3rrr                      1-  597     	LGOTO	_00321_DS_
                                    1-  598     	.line	244, "main.c"; 	if(++pwmDuty == 28)
     000F 05rr                      1-  599     	INCR	_pwmDuty,F
     0010 01rr                      1-  600     	MOVR	_pwmDuty,W
     0011 241C                      1-  601     	XORIA	0x1c
     0012 0903                      1-  602     	BTRSS	STATUS,2
     0013 3rrr                      1-  603     	LGOTO	_00321_DS_
                                    1-  604     	.line	245, "main.c"; 	pwmDuty = 1;
     0014 2101                      1-  605     	MOVIA	0x01
     0015 00rr                      1-  606     	MOVAR	_pwmDuty
     0016                           1-  607     _00321_DS_:
                                    1-  608     	.line	246, "main.c"; 	}
                                    1-  609     	RETURN	
     0016 0010                      3-   26 m1      ret
                                    1-  610     ; exit point of _Led6
                                    1-  612     ;***
                                    1-  613     ;  pBlock Stats: dbName = C
                                    1-  614     ;***
                                    1-  615     ;has an exit
                                    1-  616     ;; Starting pCode block
                                    1-  617     .segment "code"; module=main, function=_Led9
     0000                           1-  619     _Led9:
                                    1-  620     ; 2 exit points
                                    1-  621     ;;unsigned compare: left < lit (0x329=809), size=2
                                    1-  622     	.line	218, "main.c"; 	if(ledCount < 809)
     0000 2103                      1-  623     	MOVIA	0x03
     0001 04rr                      1-  624     	SUBAR	(_ledCount + 1),W
     0002 0903                      1-  625     	BTRSS	STATUS,2
     0003 3rrr                      1-  626     	LGOTO	_00305_DS_
     0004 2129                      1-  627     	MOVIA	0x29
     0005 04rr                      1-  628     	SUBAR	_ledCount,W
     0006                           1-  629     _00305_DS_:
     0006 0C03                      1-  630     	BTRSC	STATUS,0
     0007 3rrr                      1-  631     	LGOTO	_00272_DS_
                                    1-  632     	.line	219, "main.c"; 	PORTB |= 0x04;
     0008 19rr                      1-  633     	BSR	_PORTB,2
     0009 3rrr                      1-  634     	LGOTO	_00273_DS_
                                    1-  635     ;;unsigned compare: left < lit (0x3C8=968), size=2
     000A                           1-  636     _00272_DS_:
                                    1-  637     	.line	220, "main.c"; 	else if(ledCount < 968)
     000A 2103                      1-  638     	MOVIA	0x03
     000B 04rr                      1-  639     	SUBAR	(_ledCount + 1),W
     000C 0903                      1-  640     	BTRSS	STATUS,2
     000D 3rrr                      1-  641     	LGOTO	_00306_DS_
     000E 21C8                      1-  642     	MOVIA	0xc8
     000F 04rr                      1-  643     	SUBAR	_ledCount,W
     0010                           1-  644     _00306_DS_:
     0010 0C03                      1-  645     	BTRSC	STATUS,0
     0011 3rrr                      1-  646     	LGOTO	_00269_DS_
                                    1-  647     	.line	221, "main.c"; 	PORTB &= 0xFB;
     0012 1Drr                      1-  648     	BCR	_PORTB,2
     0013 3rrr                      1-  649     	LGOTO	_00273_DS_
                                    1-  650     ;;unsigned compare: left < lit (0x47A=1146), size=2
     0014                           1-  651     _00269_DS_:
                                    1-  652     	.line	222, "main.c"; 	else if(ledCount < 1146)
     0014 2104                      1-  653     	MOVIA	0x04
     0015 04rr                      1-  654     	SUBAR	(_ledCount + 1),W
     0016 0903                      1-  655     	BTRSS	STATUS,2
     0017 3rrr                      1-  656     	LGOTO	_00307_DS_
     0018 217A                      1-  657     	MOVIA	0x7a
     0019 04rr                      1-  658     	SUBAR	_ledCount,W
     001A                           1-  659     _00307_DS_:
     001A 0C03                      1-  660     	BTRSC	STATUS,0
     001B 3rrr                      1-  661     	LGOTO	_00266_DS_
                                    1-  662     	.line	223, "main.c"; 	PORTB |= 0x04;
     001C 19rr                      1-  663     	BSR	_PORTB,2
     001D 3rrr                      1-  664     	LGOTO	_00273_DS_
                                    1-  665     ;;unsigned compare: left < lit (0x53E=1342), size=2
     001E                           1-  666     _00266_DS_:
                                    1-  667     	.line	224, "main.c"; 	else if(ledCount < 1342)
     001E 2105                      1-  668     	MOVIA	0x05
     001F 04rr                      1-  669     	SUBAR	(_ledCount + 1),W
     0020 0903                      1-  670     	BTRSS	STATUS,2
     0021 3rrr                      1-  671     	LGOTO	_00308_DS_
     0022 213E                      1-  672     	MOVIA	0x3e
     0023 04rr                      1-  673     	SUBAR	_ledCount,W
     0024                           1-  674     _00308_DS_:
     0024 0C03                      1-  675     	BTRSC	STATUS,0
     0025 3rrr                      1-  676     	LGOTO	_00263_DS_
                                    1-  677     	.line	225, "main.c"; 	PORTB &= 0xFB;
     0026 1Drr                      1-  678     	BCR	_PORTB,2
     0027 3rrr                      1-  679     	LGOTO	_00273_DS_
                                    1-  680     ;;unsigned compare: left < lit (0x5F0=1520), size=2
     0028                           1-  681     _00263_DS_:
                                    1-  682     	.line	226, "main.c"; 	else if(ledCount < 1520)
     0028 2105                      1-  683     	MOVIA	0x05
     0029 04rr                      1-  684     	SUBAR	(_ledCount + 1),W
     002A 0903                      1-  685     	BTRSS	STATUS,2
     002B 3rrr                      1-  686     	LGOTO	_00309_DS_
     002C 21F0                      1-  687     	MOVIA	0xf0
     002D 04rr                      1-  688     	SUBAR	_ledCount,W
     002E                           1-  689     _00309_DS_:
     002E 0C03                      1-  690     	BTRSC	STATUS,0
     002F 3rrr                      1-  691     	LGOTO	_00260_DS_
                                    1-  692     	.line	227, "main.c"; 	PORTB |= 0x04;
     0030 19rr                      1-  693     	BSR	_PORTB,2
     0031 3rrr                      1-  694     	LGOTO	_00273_DS_
                                    1-  695     ;;unsigned compare: left < lit (0x6B4=1716), size=2
     0032                           1-  696     _00260_DS_:
                                    1-  697     	.line	228, "main.c"; 	else if(ledCount < 1716)
     0032 2106                      1-  698     	MOVIA	0x06
     0033 04rr                      1-  699     	SUBAR	(_ledCount + 1),W
     0034 0903                      1-  700     	BTRSS	STATUS,2
     0035 3rrr                      1-  701     	LGOTO	_00310_DS_
     0036 21B4                      1-  702     	MOVIA	0xb4
     0037 04rr                      1-  703     	SUBAR	_ledCount,W
     0038                           1-  704     _00310_DS_:
     0038 0C03                      1-  705     	BTRSC	STATUS,0
     0039 3rrr                      1-  706     	LGOTO	_00257_DS_
                                    1-  707     	.line	229, "main.c"; 	PORTB &= 0xFB;
     003A 1Drr                      1-  708     	BCR	_PORTB,2
     003B 3rrr                      1-  709     	LGOTO	_00273_DS_
                                    1-  710     ;;unsigned compare: left < lit (0x766=1894), size=2
     003C                           1-  711     _00257_DS_:
                                    1-  712     	.line	230, "main.c"; 	else if(ledCount < 1894)
     003C 2107                      1-  713     	MOVIA	0x07
     003D 04rr                      1-  714     	SUBAR	(_ledCount + 1),W
     003E 0903                      1-  715     	BTRSS	STATUS,2
     003F 3rrr                      1-  716     	LGOTO	_00311_DS_
     0040 2166                      1-  717     	MOVIA	0x66
     0041 04rr                      1-  718     	SUBAR	_ledCount,W
     0042                           1-  719     _00311_DS_:
     0042 0C03                      1-  720     	BTRSC	STATUS,0
     0043 3rrr                      1-  721     	LGOTO	_00254_DS_
                                    1-  722     	.line	231, "main.c"; 	PORTB |= 0x04;
     0044 19rr                      1-  723     	BSR	_PORTB,2
     0045 3rrr                      1-  724     	LGOTO	_00273_DS_
                                    1-  725     ;;unsigned compare: left < lit (0x82A=2090), size=2
     0046                           1-  726     _00254_DS_:
                                    1-  727     	.line	232, "main.c"; 	else if(ledCount < 2090)
     0046 2108                      1-  728     	MOVIA	0x08
     0047 04rr                      1-  729     	SUBAR	(_ledCount + 1),W
     0048 0903                      1-  730     	BTRSS	STATUS,2
     0049 3rrr                      1-  731     	LGOTO	_00312_DS_
     004A 212A                      1-  732     	MOVIA	0x2a
     004B 04rr                      1-  733     	SUBAR	_ledCount,W
     004C                           1-  734     _00312_DS_:
     004C 0C03                      1-  735     	BTRSC	STATUS,0
     004D 3rrr                      1-  736     	LGOTO	_00273_DS_
                                    1-  737     	.line	233, "main.c"; 	PORTB &= 0xFB;
     004E 1Drr                      1-  738     	BCR	_PORTB,2
     004F                           1-  739     _00273_DS_:
                                    1-  740     	.line	234, "main.c"; 	if(++ledCount == 2090)
     004F 05rr                      1-  741     	INCR	_ledCount,F
     0050 0D03                      1-  742     	BTRSC	STATUS,2
     0051 05rr                      1-  743     	INCR	(_ledCount + 1),F
     0052 01rr                      1-  744     	MOVR	_ledCount,W
     0053 242A                      1-  745     	XORIA	0x2a
     0054 0903                      1-  746     	BTRSS	STATUS,2
     0055 3rrr                      1-  747     	LGOTO	_00276_DS_
     0056 01rr                      1-  748     	MOVR	(_ledCount + 1),W
     0057 2408                      1-  749     	XORIA	0x08
     0058 0903                      1-  750     	BTRSS	STATUS,2
     0059 3rrr                      1-  751     	LGOTO	_00276_DS_
                                    1-  752     	.line	235, "main.c"; 	ledCount = 0;
     005A 02rr                      1-  753     	CLRR	_ledCount
     005B 02rr                      1-  754     	CLRR	(_ledCount + 1)
     005C                           1-  755     _00276_DS_:
                                    1-  756     	.line	236, "main.c"; 	}
                                    1-  757     	RETURN	
     005C 0010                      3-   26 m1      ret
                                    1-  758     ; exit point of _Led9
                                    1-  760     ;***
                                    1-  761     ;  pBlock Stats: dbName = C
                                    1-  762     ;***
                                    1-  763     ;has an exit
                                    1-  764     ;functions called:
                                    1-  765     ;   _setPWMduty
                                    1-  766     ;   _setPWMduty
                                    1-  767     ;2 compiler assigned registers:
                                    1-  768     ;   STK01
                                    1-  769     ;   STK00
                                    1-  770     ;; Starting pCode block
                                    1-  771     .segment "code"; module=main, function=_Led10
     0000                           1-  773     _Led10:
                                    1-  774     ; 2 exit points
                                    1-  775     ;;unsigned compare: left < lit (0x7D0=2000), size=2
                                    1-  776     	.line	206, "main.c"; 	if(waitCount < 2000)
     0000 2107                      1-  777     	MOVIA	0x07
     0001 04rr                      1-  778     	SUBAR	(_waitCount + 1),W
     0002 0903                      1-  779     	BTRSS	STATUS,2
     0003 3rrr                      1-  780     	LGOTO	_00246_DS_
     0004 21D0                      1-  781     	MOVIA	0xd0
     0005 04rr                      1-  782     	SUBAR	_waitCount,W
     0006                           1-  783     _00246_DS_:
     0006 0C03                      1-  784     	BTRSC	STATUS,0
     0007 3rrr                      1-  785     	LGOTO	_00234_DS_
                                    1-  786     	.line	207, "main.c"; 	PORTB |= 0x04;
     0008 19rr                      1-  787     	BSR	_PORTB,2
     0009 3rrr                      1-  788     	LGOTO	_00235_DS_
     000A                           1-  789     _00234_DS_:
                                    1-  790     	.line	209, "main.c"; 	setPWMduty(14,20);
     000A 2114                      1-  791     	MOVIA	0x14
     000B 00rr                      1-  792     	MOVAR	STK01
     000C 2100                      1-  793     	MOVIA	0x00
     000D 00rr                      1-  794     	MOVAR	STK00
     000E 210E                      1-  795     	MOVIA	0x0e
     000F 2rrr                      1-  796     	LCALL	_setPWMduty
     0010                           1-  797     _00235_DS_:
                                    1-  798     	.line	210, "main.c"; 	if(++waitCount == 3000)
     0010 05rr                      1-  799     	INCR	_waitCount,F
     0011 0D03                      1-  800     	BTRSC	STATUS,2
     0012 05rr                      1-  801     	INCR	(_waitCount + 1),F
     0013 01rr                      1-  802     	MOVR	_waitCount,W
     0014 24B8                      1-  803     	XORIA	0xb8
     0015 0903                      1-  804     	BTRSS	STATUS,2
     0016 3rrr                      1-  805     	LGOTO	_00238_DS_
     0017 01rr                      1-  806     	MOVR	(_waitCount + 1),W
     0018 240B                      1-  807     	XORIA	0x0b
     0019 0903                      1-  808     	BTRSS	STATUS,2
     001A 3rrr                      1-  809     	LGOTO	_00238_DS_
                                    1-  810     	.line	211, "main.c"; 	waitCount = 0;
     001B 02rr                      1-  811     	CLRR	_waitCount
     001C 02rr                      1-  812     	CLRR	(_waitCount + 1)
     001D                           1-  813     _00238_DS_:
                                    1-  814     	.line	212, "main.c"; 	}
                                    1-  815     	RETURN	
     001D 0010                      3-   26 m1      ret
                                    1-  816     ; exit point of _Led10
                                    1-  818     ;***
                                    1-  819     ;  pBlock Stats: dbName = C
                                    1-  820     ;***
                                    1-  821     ;has an exit
                                    1-  822     ;functions called:
                                    1-  823     ;   _setPWMduty
                                    1-  824     ;   _setPWMduty
                                    1-  825     ;   _setPWMduty
                                    1-  826     ;   _setPWMduty
                                    1-  827     ;   _Led6
                                    1-  828     ;   _setPWMduty
                                    1-  829     ;   _setPWMduty
                                    1-  830     ;   _Led9
                                    1-  831     ;   _Led10
                                    1-  832     ;   _setPWMduty
                                    1-  833     ;   _setPWMduty
                                    1-  834     ;   _setPWMduty
                                    1-  835     ;   _setPWMduty
                                    1-  836     ;   _Led6
                                    1-  837     ;   _setPWMduty
                                    1-  838     ;   _setPWMduty
                                    1-  839     ;   _Led9
                                    1-  840     ;   _Led10
                                    1-  841     ;2 compiler assigned registers:
                                    1-  842     ;   STK01
                                    1-  843     ;   STK00
                                    1-  844     ;; Starting pCode block
                                    1-  845     .segment "code"; module=main, function=_outCon
     0000                           1-  847     _outCon:
                                    1-  848     ; 2 exit points
                                    1-  849     	.line	159, "main.c"; 	if(workStep)
     0000 01rr                      1-  850     	MOVR	_workStep,W
     0001 0D03                      1-  851     	BTRSC	STATUS,2
     0002 3rrr                      1-  852     	LGOTO	_00205_DS_
                                    1-  853     	.line	160, "main.c"; 	PORTB &= 0xF7;
     0003 1Drr                      1-  854     	BCR	_PORTB,3
     0004 3rrr                      1-  855     	LGOTO	_00206_DS_
     0005                           1-  856     _00205_DS_:
                                    1-  857     	.line	162, "main.c"; 	PORTB |= 0x08;
     0005 19rr                      1-  858     	BSR	_PORTB,3
                                    1-  859     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  860     ;;unsigned compare: left >= lit (0xB=11), size=1
     0006                           1-  861     _00206_DS_:
                                    1-  862     	.line	164, "main.c"; 	switch(workStep)
     0006 210B                      1-  863     	MOVIA	0x0b
     0007 04rr                      1-  864     	SUBAR	_workStep,W
     0008 0C03                      1-  865     	BTRSC	STATUS,0
     0009 3rrr                      1-  866     	LGOTO	_00219_DS_
     000A 21rr                      1-  867     	MOVIA	((_00228_DS_ >> 8) & 0xff)
     000B 008A                      1-  868     	MOVAR	PCHBUF
     000C 01rr                      1-  869     	MOVR	_workStep,W
     000D 25rr                      1-  870     	ADDIA	_00228_DS_
     000E 0C03                      1-  871     	BTRSC	STATUS,0
     000F 058A                      1-  872     	INCR	PCHBUF,F
     0010 0082                      1-  873     	MOVAR	PCL
     0011                           1-  874     _00228_DS_:
     0011 3rrr                      1-  875     	LGOTO	_00207_DS_
     0012 3rrr                      1-  876     	LGOTO	_00208_DS_
     0013 3rrr                      1-  877     	LGOTO	_00209_DS_
     0014 3rrr                      1-  878     	LGOTO	_00210_DS_
     0015 3rrr                      1-  879     	LGOTO	_00211_DS_
     0016 3rrr                      1-  880     	LGOTO	_00212_DS_
     0017 3rrr                      1-  881     	LGOTO	_00213_DS_
     0018 3rrr                      1-  882     	LGOTO	_00214_DS_
     0019 3rrr                      1-  883     	LGOTO	_00215_DS_
     001A 3rrr                      1-  884     	LGOTO	_00216_DS_
     001B 3rrr                      1-  885     	LGOTO	_00217_DS_
     001C                           1-  886     _00207_DS_:
                                    1-  887     	.line	167, "main.c"; 	PORTB &= 0xFB;
     001C 1Drr                      1-  888     	BCR	_PORTB,2
                                    1-  889     	.line	168, "main.c"; 	break;
     001D 3rrr                      1-  890     	LGOTO	_00219_DS_
     001E                           1-  891     _00208_DS_:
                                    1-  892     	.line	170, "main.c"; 	setPWMduty(8,20);
     001E 2114                      1-  893     	MOVIA	0x14
     001F 00rr                      1-  894     	MOVAR	STK01
     0020 2100                      1-  895     	MOVIA	0x00
     0021 00rr                      1-  896     	MOVAR	STK00
     0022 2108                      1-  897     	MOVIA	0x08
     0023 2rrr                      1-  898     	LCALL	_setPWMduty
                                    1-  899     	.line	171, "main.c"; 	break;
     0024 3rrr                      1-  900     	LGOTO	_00219_DS_
     0025                           1-  901     _00209_DS_:
                                    1-  902     	.line	173, "main.c"; 	setPWMduty(10,20);
     0025 2114                      1-  903     	MOVIA	0x14
     0026 00rr                      1-  904     	MOVAR	STK01
     0027 2100                      1-  905     	MOVIA	0x00
     0028 00rr                      1-  906     	MOVAR	STK00
     0029 210A                      1-  907     	MOVIA	0x0a
     002A 2rrr                      1-  908     	LCALL	_setPWMduty
                                    1-  909     	.line	174, "main.c"; 	break;
     002B 3rrr                      1-  910     	LGOTO	_00219_DS_
     002C                           1-  911     _00210_DS_:
                                    1-  912     	.line	176, "main.c"; 	setPWMduty(13,20);
     002C 2114                      1-  913     	MOVIA	0x14
     002D 00rr                      1-  914     	MOVAR	STK01
     002E 2100                      1-  915     	MOVIA	0x00
     002F 00rr                      1-  916     	MOVAR	STK00
     0030 210D                      1-  917     	MOVIA	0x0d
     0031 2rrr                      1-  918     	LCALL	_setPWMduty
                                    1-  919     	.line	177, "main.c"; 	break;
     0032 3rrr                      1-  920     	LGOTO	_00219_DS_
     0033                           1-  921     _00211_DS_:
                                    1-  922     	.line	179, "main.c"; 	setPWMduty(16,20);
     0033 2114                      1-  923     	MOVIA	0x14
     0034 00rr                      1-  924     	MOVAR	STK01
     0035 2100                      1-  925     	MOVIA	0x00
     0036 00rr                      1-  926     	MOVAR	STK00
     0037 2110                      1-  927     	MOVIA	0x10
     0038 2rrr                      1-  928     	LCALL	_setPWMduty
                                    1-  929     	.line	180, "main.c"; 	break;
     0039 3rrr                      1-  930     	LGOTO	_00219_DS_
     003A                           1-  931     _00212_DS_:
                                    1-  932     	.line	182, "main.c"; 	PORTB |= 0x04;
     003A 19rr                      1-  933     	BSR	_PORTB,2
                                    1-  934     	.line	183, "main.c"; 	break;
     003B 3rrr                      1-  935     	LGOTO	_00219_DS_
     003C                           1-  936     _00213_DS_:
                                    1-  937     	.line	185, "main.c"; 	Led6();
     003C 2rrr                      1-  938     	LCALL	_Led6
                                    1-  939     	.line	186, "main.c"; 	break;
     003D 3rrr                      1-  940     	LGOTO	_00219_DS_
     003E                           1-  941     _00214_DS_:
                                    1-  942     	.line	188, "main.c"; 	setPWMduty(255,516);
     003E 2104                      1-  943     	MOVIA	0x04
     003F 00rr                      1-  944     	MOVAR	STK01
     0040 2102                      1-  945     	MOVIA	0x02
     0041 00rr                      1-  946     	MOVAR	STK00
     0042 21FF                      1-  947     	MOVIA	0xff
     0043 2rrr                      1-  948     	LCALL	_setPWMduty
                                    1-  949     	.line	189, "main.c"; 	break;
     0044 3rrr                      1-  950     	LGOTO	_00219_DS_
     0045                           1-  951     _00215_DS_:
                                    1-  952     	.line	191, "main.c"; 	setPWMduty(159,318);
     0045 213E                      1-  953     	MOVIA	0x3e
     0046 00rr                      1-  954     	MOVAR	STK01
     0047 2101                      1-  955     	MOVIA	0x01
     0048 00rr                      1-  956     	MOVAR	STK00
     0049 219F                      1-  957     	MOVIA	0x9f
     004A 2rrr                      1-  958     	LCALL	_setPWMduty
                                    1-  959     	.line	192, "main.c"; 	break;
     004B 3rrr                      1-  960     	LGOTO	_00219_DS_
     004C                           1-  961     _00216_DS_:
                                    1-  962     	.line	194, "main.c"; 	Led9();
     004C 2rrr                      1-  963     	LCALL	_Led9
                                    1-  964     	.line	195, "main.c"; 	break;
     004D 3rrr                      1-  965     	LGOTO	_00219_DS_
     004E                           1-  966     _00217_DS_:
                                    1-  967     	.line	197, "main.c"; 	Led10();
     004E 2rrr                      1-  968     	LCALL	_Led10
     004F                           1-  969     _00219_DS_:
                                    1-  970     	.line	202, "main.c"; 	}
                                    1-  971     	RETURN	
     004F 0010                      3-   26 m1      ret
                                    1-  972     ; exit point of _outCon
                                    1-  974     ;***
                                    1-  975     ;  pBlock Stats: dbName = C
                                    1-  976     ;***
                                    1-  977     ;has an exit
                                    1-  978     ;functions called:
                                    1-  979     ;   _gotoSleep
                                    1-  980     ;   _gotoSleep
                                    1-  981     ;; Starting pCode block
                                    1-  982     .segment "code"; module=main, function=_ledCon
     0000                           1-  984     _ledCon:
                                    1-  985     ; 2 exit points
                                    1-  986     	.line	99, "main.c"; 	if(PORTB & 0x02 )
     0000 08rr                      1-  987     	BTRSS	_PORTB,1
     0001 3rrr                      1-  988     	LGOTO	_00161_DS_
                                    1-  989     	.line	103, "main.c"; 	if(PORTB & 0x20)
     0002 0Arr                      1-  990     	BTRSS	_PORTB,5
     0003 3rrr                      1-  991     	LGOTO	_00148_DS_
                                    1-  992     	.line	105, "main.c"; 	chrgCount = 0;
     0004 02rr                      1-  993     	CLRR	_chrgCount
     0005 02rr                      1-  994     	CLRR	(_chrgCount + 1)
                                    1-  995     	.line	106, "main.c"; 	addFlag = 0;
     0006 02rr                      1-  996     	CLRR	_addFlag
                                    1-  997     	.line	107, "main.c"; 	chrgDuty = 0;
     0007 02rr                      1-  998     	CLRR	_chrgDuty
                                    1-  999     	.line	108, "main.c"; 	if(!workStep)
     0008 01rr                      1- 1000     	MOVR	_workStep,W
     0009 0903                      1- 1001     	BTRSS	STATUS,2
     000A 3rrr                      1- 1002     	LGOTO	_00163_DS_
                                    1- 1003     	.line	110, "main.c"; 	if(++count100 == 100)	//100ms
     000B 05rr                      1- 1004     	INCR	_count100,F
     000C 01rr                      1- 1005     	MOVR	_count100,W
     000D 2464                      1- 1006     	XORIA	0x64
     000E 0903                      1- 1007     	BTRSS	STATUS,2
     000F 3rrr                      1- 1008     	LGOTO	_00163_DS_
                                    1- 1009     	.line	112, "main.c"; 	count100 = 0;
     0010 02rr                      1- 1010     	CLRR	_count100
                                    1- 1011     	.line	113, "main.c"; 	if(++sleepCount >= 35 && keyCount == 0)
     0011 05rr                      1- 1012     	INCR	_sleepCount,F
                                    1- 1013     ;;unsigned compare: left < lit (0x23=35), size=1
     0012 2123                      1- 1014     	MOVIA	0x23
     0013 04rr                      1- 1015     	SUBAR	_sleepCount,W
     0014 0803                      1- 1016     	BTRSS	STATUS,0
     0015 3rrr                      1- 1017     	LGOTO	_00163_DS_
     0016 01rr                      1- 1018     	MOVR	_keyCount,W
     0017 11rr                      1- 1019     	IORAR	(_keyCount + 1),W
     0018 0903                      1- 1020     	BTRSS	STATUS,2
     0019 3rrr                      1- 1021     	LGOTO	_00163_DS_
                                    1- 1022     	.line	114, "main.c"; 	gotoSleep(0x23);
     001A 2123                      1- 1023     	MOVIA	0x23
     001B 2rrr                      1- 1024     	LCALL	_gotoSleep
     001C 3rrr                      1- 1025     	LGOTO	_00163_DS_
     001D                           1- 1026     _00148_DS_:
                                    1- 1027     	.line	121, "main.c"; 	PORTB &= 0xF7;
     001D 1Drr                      1- 1028     	BCR	_PORTB,3
                                    1- 1029     	.line	122, "main.c"; 	chrgCount = 0;
     001E 02rr                      1- 1030     	CLRR	_chrgCount
     001F 02rr                      1- 1031     	CLRR	(_chrgCount + 1)
                                    1- 1032     	.line	123, "main.c"; 	addFlag = 0;
     0020 02rr                      1- 1033     	CLRR	_addFlag
                                    1- 1034     	.line	124, "main.c"; 	chrgDuty = 0;
     0021 02rr                      1- 1035     	CLRR	_chrgDuty
                                    1- 1036     	.line	125, "main.c"; 	workStep = 0;
     0022 02rr                      1- 1037     	CLRR	_workStep
     0023 3rrr                      1- 1038     	LGOTO	_00163_DS_
     0024                           1- 1039     _00161_DS_:
                                    1- 1040     	.line	130, "main.c"; 	if(PORTB & 0x20)
     0024 0Arr                      1- 1041     	BTRSS	_PORTB,5
     0025 3rrr                      1- 1042     	LGOTO	_00163_DS_
                                    1- 1043     	.line	132, "main.c"; 	workStep = 0;
     0026 02rr                      1- 1044     	CLRR	_workStep
                                    1- 1045     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1046     ;;unsigned compare: left >= lit (0x5B=91), size=2
                                    1- 1047     	.line	134, "main.c"; 	if(chrgCount > 90 && chrgCount%32 == 0)
     0027 2100                      1- 1048     	MOVIA	0x00
     0028 04rr                      1- 1049     	SUBAR	(_chrgCount + 1),W
     0029 0903                      1- 1050     	BTRSS	STATUS,2
     002A 3rrr                      1- 1051     	LGOTO	_00199_DS_
     002B 215B                      1- 1052     	MOVIA	0x5b
     002C 04rr                      1- 1053     	SUBAR	_chrgCount,W
     002D                           1- 1054     _00199_DS_:
     002D 0803                      1- 1055     	BTRSS	STATUS,0
     002E 3rrr                      1- 1056     	LGOTO	_00154_DS_
     002F 01rr                      1- 1057     	MOVR	_chrgCount,W
     0030 221F                      1- 1058     	ANDIA	0x1f
     0031 0903                      1- 1059     	BTRSS	STATUS,2
     0032 3rrr                      1- 1060     	LGOTO	_00154_DS_
                                    1- 1061     	.line	136, "main.c"; 	if(addFlag)
     0033 01rr                      1- 1062     	MOVR	_addFlag,W
     0034 0D03                      1- 1063     	BTRSC	STATUS,2
     0035 3rrr                      1- 1064     	LGOTO	_00151_DS_
                                    1- 1065     	.line	138, "main.c"; 	--chrgDuty;
     0036 06rr                      1- 1066     	DECR	_chrgDuty,F
     0037 3rrr                      1- 1067     	LGOTO	_00154_DS_
     0038                           1- 1068     _00151_DS_:
                                    1- 1069     	.line	142, "main.c"; 	++chrgDuty;
     0038 05rr                      1- 1070     	INCR	_chrgDuty,F
     0039                           1- 1071     _00154_DS_:
                                    1- 1072     	.line	145, "main.c"; 	if(++chrgCount == 3232)
     0039 05rr                      1- 1073     	INCR	_chrgCount,F
     003A 0D03                      1- 1074     	BTRSC	STATUS,2
     003B 05rr                      1- 1075     	INCR	(_chrgCount + 1),F
     003C 01rr                      1- 1076     	MOVR	_chrgCount,W
     003D 24A0                      1- 1077     	XORIA	0xa0
     003E 0903                      1- 1078     	BTRSS	STATUS,2
     003F 3rrr                      1- 1079     	LGOTO	_00163_DS_
     0040 01rr                      1- 1080     	MOVR	(_chrgCount + 1),W
     0041 240C                      1- 1081     	XORIA	0x0c
     0042 0903                      1- 1082     	BTRSS	STATUS,2
     0043 3rrr                      1- 1083     	LGOTO	_00163_DS_
                                    1- 1084     	.line	147, "main.c"; 	chrgCount = 0;
     0044 02rr                      1- 1085     	CLRR	_chrgCount
     0045 02rr                      1- 1086     	CLRR	(_chrgCount + 1)
                                    1- 1087     	.line	148, "main.c"; 	addFlag = ~addFlag;
     0046 07rr                      1- 1088     	COMR	_addFlag,W
     0047 00rr                      1- 1089     	MOVAR	_addFlag
     0048                           1- 1090     _00163_DS_:
                                    1- 1091     	.line	154, "main.c"; 	}
                                    1- 1092     	RETURN	
     0048 0010                      3-   26 m1      ret
                                    1- 1093     ; exit point of _ledCon
                                    1- 1096     ;	code size estimation:
                                    1- 1097     ;	  471+    0 =   471 instructions (  942 byte)
                                    1- 1099     	end
                                    1- 1099     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__mulchar               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 00000006
__PROCESSOR__           Constant 00800515
__sdcc_interrupt        Label    00000000
_00106_DS_              Label    00000020
_00108_DS_              Label    0000002A
_00109_DS_              Label    0000002B
_00115_DS_              Label    00000030
_00117_DS_              Label    00000034
_00125_DS_              Label    00000013
_00126_DS_              Label    00000014
_00132_DS_              Label    00000022
_00135_DS_              Label    00000001
_00148_DS_              Label    0000001D
_00151_DS_              Label    00000038
_00154_DS_              Label    00000039
_00161_DS_              Label    00000024
_00163_DS_              Label    00000048
_00199_DS_              Label    0000002D
_00205_DS_              Label    00000005
_00206_DS_              Label    00000006
_00207_DS_              Label    0000001C
_00208_DS_              Label    0000001E
_00209_DS_              Label    00000025
_00210_DS_              Label    0000002C
_00211_DS_              Label    00000033
_00212_DS_              Label    0000003A
_00213_DS_              Label    0000003C
_00214_DS_              Label    0000003E
_00215_DS_              Label    00000045
_00216_DS_              Label    0000004C
_00217_DS_              Label    0000004E
_00219_DS_              Label    0000004F
_00228_DS_              Label    00000011
_00234_DS_              Label    0000000A
_00235_DS_              Label    00000010
_00238_DS_              Label    0000001D
_00246_DS_              Label    00000006
_00254_DS_              Label    00000046
_00257_DS_              Label    0000003C
_00260_DS_              Label    00000032
_00263_DS_              Label    00000028
_00266_DS_              Label    0000001E
_00269_DS_              Label    00000014
_00272_DS_              Label    0000000A
_00273_DS_              Label    0000004F
_00276_DS_              Label    0000005C
_00305_DS_              Label    00000006
_00306_DS_              Label    00000010
_00307_DS_              Label    0000001A
_00308_DS_              Label    00000024
_00309_DS_              Label    0000002E
_00310_DS_              Label    00000038
_00311_DS_              Label    00000042
_00312_DS_              Label    0000004C
_00321_DS_              Label    00000016
_00327_DS_              Label    00000010
_00328_DS_              Label    00000011
_00331_DS_              Label    00000021
_00339_DS_              Label    0000000C
_00347_DS_              Label    00000020
_00352_DS_              Label    00000017
_00355_DS_              Label    00000022
_addFlag                Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BPLCON                 Label    00000000
_BPLCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_checkLVD               Label    00000000
_chrgCount              Label    00000000
_chrgDuty               Label    00000000
_count100               Label    00000000
_delay                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initTimer0             Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCon                 Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_Led10                  Label    00000000
_Led6                   Label    00000000
_Led9                   Label    00000000
_ledCon                 Label    00000000
_ledCount               Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_outCon                 Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_pwmDuty                Label    00000000
_setPWMduty             Label    00000000
_sleepCount             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_waitCount              Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    00000042
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000007
STK01                   Label    00000006
STK02                   Label    00000005
STK03                   Label    00000004
STK04                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a051f.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A051F (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
