
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A051F,c=on
                                    1-    9     	#include "ny8a051f.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_delay
                                    1-   15     	extern	_keyRead
                                    1-   16     	extern	_gotoSleep
                                    1-   17     	extern	_checkLVD
                                    1-   18     	extern	_initTimer0
                                    1-   19     	extern	_PORTBbits
                                    1-   20     	extern	_PCONbits
                                    1-   21     	extern	_BWUCONbits
                                    1-   22     	extern	_BPLCONbits
                                    1-   23     	extern	_BPHCONbits
                                    1-   24     	extern	_INTEbits
                                    1-   25     	extern	_INTFbits
                                    1-   26     	extern	_keyCount
                                    1-   27     	extern	_lvdFlag
                                    1-   28     	extern	_INDF
                                    1-   29     	extern	_TMR0
                                    1-   30     	extern	_PCL
                                    1-   31     	extern	_STATUS
                                    1-   32     	extern	_FSR
                                    1-   33     	extern	_PORTB
                                    1-   34     	extern	_PCON
                                    1-   35     	extern	_BWUCON
                                    1-   36     	extern	_PCHBUF
                                    1-   37     	extern	_BPLCON
                                    1-   38     	extern	_BPHCON
                                    1-   39     	extern	_INTE
                                    1-   40     	extern	_INTF
                                    1-   41     	extern	_TMR1
                                    1-   42     	extern	_T1CR1
                                    1-   43     	extern	_T1CR2
                                    1-   44     	extern	_PWM1DUTY
                                    1-   45     	extern	_PS1CV
                                    1-   46     	extern	_BZ1CR
                                    1-   47     	extern	_IRCR
                                    1-   48     	extern	_TBHP
                                    1-   49     	extern	_TBHD
                                    1-   50     	extern	_OSCCR
                                    1-   51     	extern	_IOSTB
                                    1-   52     	extern	_PS0CV
                                    1-   53     	extern	_BODCON
                                    1-   54     	extern	_PCON1
                                    1-   55     	extern	_T0MD
                                    1-   56     	extern	___sdcc_saved_fsr
                                    1-   57     	extern	___sdcc_saved_stk00
                                    1-   58     	extern	___sdcc_saved_stk01
                                    1-   59     	extern	__mulchar
                                    1-   60     	extern	__nyc_ny8_startup
                                    1-   61     ;--------------------------------------------------------
                                    1-   62     ; global declarations
                                    1-   63     ;--------------------------------------------------------
                                    1-   64     	extern	_keyCon
                                    1-   65     	extern	_setPWMduty
                                    1-   66     	extern	_Led6
                                    1-   67     	extern	_Led9
                                    1-   68     	extern	_Led10
                                    1-   69     	extern	_outCon
                                    1-   70     	extern	_ledCon
                                    1-   71     	extern	_isr
                                    1-   72     	extern	_main
                                    1-   73     	extern	_intCount
                                    1-   74     	extern	_IntFlag
                                    1-   75     	extern	_workStep
                                    1-   76     	extern	_keyClick
                                    1-   77     	extern	_ledCount
                                    1-   78     	extern	_pwmDuty
                                    1-   79     	extern	_chrgDuty
                                    1-   80     	extern	_count100
                                    1-   81     	extern	_addFlag
                                    1-   82     	extern	_waitCount
                                    1-   83     	extern	_chrgCount
                                    1-   84     	extern	_sleepCount
                                    1-   86     	extern PSAVE
                                    1-   87     	extern SSAVE
                                    1-   88     	extern WSAVE
                                    1-   89     	extern STK04
                                    1-   90     	extern STK03
                                    1-   91     	extern STK02
                                    1-   92     	extern STK01
                                    1-   93     	extern STK00
                                    1-   95     .segment "uninit", 0x20000010
 20000010                           1-   96     PSAVE:
                                    1-   97     	.res 1
 20000011                           1-   98     SSAVE:
                                    1-   99     	.res 1
 20000012                           1-  100     WSAVE:
                                    1-  101     	.res 1
 20000013                           1-  102     STK04:
                                    1-  103     	.res 1
 20000014                           1-  104     STK03:
                                    1-  105     	.res 1
 20000015                           1-  106     STK02:
                                    1-  107     	.res 1
 20000016                           1-  108     STK01:
                                    1-  109     	.res 1
 20000017                           1-  110     STK00:
                                    1-  111     	.res 1
                                    1-  113     ;--------------------------------------------------------
                                    1-  114     ; global definitions
                                    1-  115     ;--------------------------------------------------------
                                    1-  116     ;--------------------------------------------------------
                                    1-  117     ; absolute symbol definitions
                                    1-  118     ;--------------------------------------------------------
                                    1-  119     ;--------------------------------------------------------
                                    1-  120     ; compiler-defined variables
                                    1-  121     ;--------------------------------------------------------
                                    1-  122     .segment "uninit"
     0000                           1-  123     r0x101C:
                                    1-  124     	.res	1
                                    1-  125     .segment "uninit"
     0000                           1-  126     r0x101B:
                                    1-  127     	.res	1
                                    1-  128     .segment "uninit"
     0000                           1-  129     r0x1016:
                                    1-  130     	.res	1
                                    1-  131     .segment "uninit"
     0000                           1-  132     r0x1018:
                                    1-  133     	.res	1
                                    1-  134     .segment "uninit"
     0000                           1-  135     r0x1017:
                                    1-  136     	.res	1
                                    1-  137     .segment "uninit"
     0000                           1-  138     r0x1019:
                                    1-  139     	.res	1
                                    1-  140     .segment "uninit"
     0000                           1-  141     r0x1015:
                                    1-  142     	.res	1
                                    1-  143     ;--------------------------------------------------------
                                    1-  144     ; initialized data
                                    1-  145     ;--------------------------------------------------------
                                    1-  147     .segment "idata"
     0000                           1-  148     _intCount:
     0000 0000 0000                 1-  149     	dw	0x00, 0x00
                                    1-  153     .segment "idata"
     0000                           1-  154     _IntFlag:
     0000 0000                      1-  155     	dw	0x00
                                    1-  159     .segment "idata"
     0000                           1-  160     _workStep:
     0000 0000                      1-  161     	dw	0x00
                                    1-  165     .segment "idata"
     0000                           1-  166     _keyClick:
     0000 0000                      1-  167     	dw	0x00
                                    1-  171     .segment "idata"
     0000                           1-  172     _ledCount:
     0000 0000 0000                 1-  173     	dw	0x00, 0x00
                                    1-  177     .segment "idata"
     0000                           1-  178     _pwmDuty:
     0000 0001                      1-  179     	dw	0x01
                                    1-  183     .segment "idata"
     0000                           1-  184     _chrgDuty:
     0000 0000                      1-  185     	dw	0x00
                                    1-  189     .segment "idata"
     0000                           1-  190     _count100:
     0000 0000                      1-  191     	dw	0x00
                                    1-  195     .segment "idata"
     0000                           1-  196     _addFlag:
     0000 0000                      1-  197     	dw	0x00
                                    1-  201     .segment "idata"
     0000                           1-  202     _waitCount:
     0000 0000 0000                 1-  203     	dw	0x00, 0x00
                                    1-  207     .segment "idata"
     0000                           1-  208     _chrgCount:
     0000 0000 0000                 1-  209     	dw	0x00, 0x00
                                    1-  213     .segment "idata"
     0000                           1-  214     _sleepCount:
     0000 0000                      1-  215     	dw	0x00
                                    1-  218     ;--------------------------------------------------------
                                    1-  219     ; overlayable items in internal ram 
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     ;	udata_ovr
                                    1-  222     ;--------------------------------------------------------
                                    1-  223     ; reset vector 
                                    1-  224     ;--------------------------------------------------------
                                    1-  225     ORG	0x0000
     0000 3rrr                      1-  226     	LGOTO	__nyc_ny8_startup
                                    1-  227     ;--------------------------------------------------------
                                    1-  228     ; interrupt and initialization code
                                    1-  229     ;--------------------------------------------------------
                                    1-  230     ORG 0x0008
     0008 3rrr                      1-  231     	lgoto	__sdcc_interrupt
                                    1-  233     .segment "code"
     0000                           1-  234     __sdcc_interrupt:
                                    1-  235     ;***
                                    1-  236     ;  pBlock Stats: dbName = I
                                    1-  237     ;***
                                    1-  238     ;2 compiler assigned registers:
                                    1-  239     ;   STK00
                                    1-  240     ;   STK01
                                    1-  241     ;; Starting pCode block
     0000                           1-  242     _isr:
                                    1-  243     ; 0 exit points
                                    1-  244     	.line	31, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  245     	MOVAR	WSAVE
     0001 1503                      1-  246     	SWAPR	STATUS,W
     0002 0283                      1-  247     	CLRR	STATUS
     0003 00rr                      1-  248     	MOVAR	SSAVE
     0004 010A                      1-  249     	MOVR	PCHBUF,W
     0005 028A                      1-  250     	CLRR	PCHBUF
     0006 00rr                      1-  251     	MOVAR	PSAVE
     0007 0104                      1-  252     	MOVR	FSR,W
     0008 00rr                      1-  253     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  254     	MOVR	STK00,W
     000A 00rr                      1-  255     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  256     	MOVR	STK01,W
     000C 00rr                      1-  257     	MOVAR	___sdcc_saved_stk01
                                    1-  258     	.line	33, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  259     	BTRSS	_INTFbits,0
     000E 3rrr                      1-  260     	LGOTO	_00115_DS_
                                    1-  261     	.line	35, "main.c"; 	TMR0 = 68;
     000F 2144                      1-  262     	MOVIA	0x44
     0010 00rr                      1-  263     	MOVAR	_TMR0
                                    1-  264     	.line	36, "main.c"; 	intCount++;
     0011 05rr                      1-  265     	INCR	_intCount,F
     0012 0D03                      1-  266     	BTRSC	STATUS,2
     0013 05rr                      1-  267     	INCR	(_intCount + 1),F
                                    1-  268     	.line	37, "main.c"; 	if(intCount == 10)
     0014 01rr                      1-  269     	MOVR	_intCount,W
     0015 240A                      1-  270     	XORIA	0x0a
     0016 0903                      1-  271     	BTRSS	STATUS,2
     0017 3rrr                      1-  272     	LGOTO	_00106_DS_
     0018 01rr                      1-  273     	MOVR	(_intCount + 1),W
     0019 2400                      1-  274     	XORIA	0x00
     001A 0903                      1-  275     	BTRSS	STATUS,2
     001B 3rrr                      1-  276     	LGOTO	_00106_DS_
                                    1-  277     	.line	39, "main.c"; 	intCount = 0;
     001C 02rr                      1-  278     	CLRR	_intCount
     001D 02rr                      1-  279     	CLRR	(_intCount + 1)
                                    1-  280     	.line	40, "main.c"; 	IntFlag = 1;
     001E 2101                      1-  281     	MOVIA	0x01
     001F 00rr                      1-  282     	MOVAR	_IntFlag
     0020                           1-  283     _00106_DS_:
                                    1-  284     	.line	43, "main.c"; 	if(chrgCount)
     0020 01rr                      1-  285     	MOVR	_chrgCount,W
     0021 11rr                      1-  286     	IORAR	(_chrgCount + 1),W
     0022 0D03                      1-  287     	BTRSC	STATUS,2
     0023 3rrr                      1-  288     	LGOTO	_00115_DS_
                                    1-  289     	.line	45, "main.c"; 	if(count100 < chrgDuty)
     0024 01rr                      1-  290     	MOVR	_chrgDuty,W
     0025 04rr                      1-  291     	SUBAR	_count100,W
     0026 0C03                      1-  292     	BTRSC	STATUS,0
     0027 3rrr                      1-  293     	LGOTO	_00108_DS_
                                    1-  294     	.line	46, "main.c"; 	PORTB &= 0xF7;
     0028 1Drr                      1-  295     	BCR	_PORTB,3
     0029 3rrr                      1-  296     	LGOTO	_00109_DS_
     002A                           1-  297     _00108_DS_:
                                    1-  298     	.line	48, "main.c"; 	PORTB |= 0x08;
     002A 19rr                      1-  299     	BSR	_PORTB,3
     002B                           1-  300     _00109_DS_:
                                    1-  301     	.line	49, "main.c"; 	if(++count100 == 100)
     002B 05rr                      1-  302     	INCR	_count100,F
     002C 01rr                      1-  303     	MOVR	_count100,W
     002D 2464                      1-  304     	XORIA	0x64
     002E 0D03                      1-  305     	BTRSC	STATUS,2
                                    1-  306     	.line	50, "main.c"; 	count100 = 0;
     002F 02rr                      1-  307     	CLRR	_count100
     0030                           1-  308     _00115_DS_:
                                    1-  309     	.line	53, "main.c"; 	if(INTFbits.PBIF)
     0030 08rr                      1-  310     	BTRSS	_INTFbits,1
     0031 3rrr                      1-  311     	LGOTO	_00117_DS_
                                    1-  312     	.line	55, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0032 21FD                      1-  313     	MOVIA	0xfd
     0033 00rr                      1-  314     	MOVAR	_INTF
     0034                           1-  315     _00117_DS_:
                                    1-  316     	.line	58, "main.c"; 	INTF = 0;
     0034 02rr                      1-  317     	CLRR	_INTF
                                    1-  318     	.line	60, "main.c"; 	}
     0035 01rr                      1-  319     	MOVR	___sdcc_saved_stk01,W
     0036 00rr                      1-  320     	MOVAR	STK01
     0037 01rr                      1-  321     	MOVR	___sdcc_saved_stk00,W
     0038 00rr                      1-  322     	MOVAR	STK00
     0039 01rr                      1-  323     	MOVR	___sdcc_saved_fsr,W
     003A 0084                      1-  324     	MOVAR	FSR
     003B 01rr                      1-  325     	MOVR	PSAVE,W
     003C 008A                      1-  326     	MOVAR	PCHBUF
     003D 0283                      1-  327     	CLRR	STATUS
     003E 15rr                      1-  328     	SWAPR	SSAVE,W
     003F 0083                      1-  329     	MOVAR	STATUS
     0040 15rr                      1-  330     	SWAPR	WSAVE,F
     0041 15rr                      1-  331     	SWAPR	WSAVE,W
     0042                           1-  332     END_OF_INTERRUPT:
     0042 0011                      1-  333     	RETIE	
                                    1-  335     ;--------------------------------------------------------
                                    1-  336     ; code
                                    1-  337     ;--------------------------------------------------------
                                    1-  338     ;***
                                    1-  339     ;  pBlock Stats: dbName = M
                                    1-  340     ;***
                                    1-  341     ;has an exit
                                    1-  342     ;functions called:
                                    1-  343     ;   _initTimer0
                                    1-  344     ;   _keyCon
                                    1-  345     ;   _ledCon
                                    1-  346     ;   _outCon
                                    1-  347     ;   _checkLVD
                                    1-  348     ;   _gotoSleep
                                    1-  349     ;   _initTimer0
                                    1-  350     ;   _keyCon
                                    1-  351     ;   _ledCon
                                    1-  352     ;   _outCon
                                    1-  353     ;   _checkLVD
                                    1-  354     ;   _gotoSleep
                                    1-  355     ;1 compiler assigned register :
                                    1-  356     ;   r0x101C
                                    1-  357     ;; Starting pCode block
                                    1-  358     .segment "code"; module=main, function=_main
     0000                           1-  360     _main:
                                    1-  361     ; 2 exit points
                                    1-  362     	.line	65, "main.c"; 	initTimer0();
     0000 2rrr                      1-  363     	LCALL	_initTimer0
     0001                           1-  364     _00133_DS_:
                                    1-  365     	.line	68, "main.c"; 	CLRWDT(); 
     0001 0002                      1-  366     	clrwdt
                                    1-  367     	.line	69, "main.c"; 	if(!IntFlag)
     0002 01rr                      1-  368     	MOVR	_IntFlag,W
     0003 0D03                      1-  369     	BTRSC	STATUS,2
     0004 3rrr                      1-  370     	LGOTO	_00133_DS_
                                    1-  371     	.line	71, "main.c"; 	IntFlag = 0;
     0005 02rr                      1-  372     	CLRR	_IntFlag
                                    1-  373     	.line	72, "main.c"; 	keyCon();
     0006 2rrr                      1-  374     	LCALL	_keyCon
                                    1-  375     	.line	73, "main.c"; 	ledCon();	
     0007 2rrr                      1-  376     	LCALL	_ledCon
                                    1-  377     	.line	74, "main.c"; 	outCon();
     0008 2rrr                      1-  378     	LCALL	_outCon
                                    1-  379     	.line	75, "main.c"; 	if(checkLVD() >= 200)
     0009 2rrr                      1-  380     	LCALL	_checkLVD
     000A 00rr                      1-  381     	MOVAR	r0x101C
                                    1-  382     ;;unsigned compare: left < lit (0xC8=200), size=1
     000B 21C8                      1-  383     	MOVIA	0xc8
     000C 04rr                      1-  384     	SUBAR	r0x101C,W
     000D 0803                      1-  385     	BTRSS	STATUS,0
     000E 3rrr                      1-  386     	LGOTO	_00133_DS_
                                    1-  387     	.line	77, "main.c"; 	if(++count100 >= 250)	//100ms
     000F 05rr                      1-  388     	INCR	_count100,F
                                    1-  389     ;;unsigned compare: left < lit (0xFA=250), size=1
     0010 21FA                      1-  390     	MOVIA	0xfa
     0011 04rr                      1-  391     	SUBAR	_count100,W
     0012 0803                      1-  392     	BTRSS	STATUS,0
     0013 3rrr                      1-  393     	LGOTO	_00133_DS_
                                    1-  394     	.line	79, "main.c"; 	count100 = 0;
     0014 02rr                      1-  395     	CLRR	_count100
                                    1-  396     	.line	80, "main.c"; 	if(sleepCount % 4 == 0)
     0015 01rr                      1-  397     	MOVR	_sleepCount,W
     0016 2203                      1-  398     	ANDIA	0x03
     0017 0903                      1-  399     	BTRSS	STATUS,2
     0018 3rrr                      1-  400     	LGOTO	_00125_DS_
                                    1-  401     	.line	81, "main.c"; 	PORTB ^= 0x08;
     0019 2108                      1-  402     	MOVIA	0x08
     001A 12rr                      1-  403     	XORAR	_PORTB,F
     001B                           1-  404     _00125_DS_:
                                    1-  405     	.line	82, "main.c"; 	if(++sleepCount >= 35)
     001B 05rr                      1-  406     	INCR	_sleepCount,F
                                    1-  407     ;;unsigned compare: left < lit (0x23=35), size=1
     001C 2123                      1-  408     	MOVIA	0x23
     001D 04rr                      1-  409     	SUBAR	_sleepCount,W
     001E 0803                      1-  410     	BTRSS	STATUS,0
     001F 3rrr                      1-  411     	LGOTO	_00133_DS_
                                    1-  412     	.line	83, "main.c"; 	gotoSleep(0x23);
     0020 2123                      1-  413     	MOVIA	0x23
     0021 2rrr                      1-  414     	LCALL	_gotoSleep
     0022 3rrr                      1-  415     	LGOTO	_00133_DS_
                                    1-  416     	.line	90, "main.c"; 	}
                                    1-  417     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1-  418     ; exit point of _main
                                    1-  420     ;***
                                    1-  421     ;  pBlock Stats: dbName = C
                                    1-  422     ;***
                                    1-  423     ;has an exit
                                    1-  424     ;functions called:
                                    1-  425     ;   _keyRead
                                    1-  426     ;   _keyRead
                                    1-  427     ;1 compiler assigned register :
                                    1-  428     ;   r0x1015
                                    1-  429     ;; Starting pCode block
                                    1-  430     .segment "code"; module=main, function=_keyCon
                                    1-  432     ;local variable name mapping:
     0000                           1-  434     _keyCon:
                                    1-  435     ; 2 exit points
                                    1-  436     	.line	259, "main.c"; 	char keyStatus = ~PORTB;
     0000 07rr                      1-  437     	COMR	_PORTB,W
     0001 00rr                      1-  438     	MOVAR	r0x1015
                                    1-  439     	.line	260, "main.c"; 	keyStatus &= 0x01;
     0002 2101                      1-  440     	MOVIA	0x01
     0003 10rr                      1-  441     	ANDAR	r0x1015,F
                                    1-  442     	.line	261, "main.c"; 	keyClick = keyRead(keyStatus);
     0004 01rr                      1-  443     	MOVR	r0x1015,W
     0005 2rrr                      1-  444     	LCALL	_keyRead
     0006 00rr                      1-  445     	MOVAR	_keyClick
                                    1-  446     	.line	262, "main.c"; 	if(keyClick == 1 && workStep)
     0007 2401                      1-  447     	XORIA	0x01
     0008 0903                      1-  448     	BTRSS	STATUS,2
     0009 3rrr                      1-  449     	LGOTO	_00350_DS_
     000A 01rr                      1-  450     	MOVR	_workStep,W
     000B 0D03                      1-  451     	BTRSC	STATUS,2
     000C 3rrr                      1-  452     	LGOTO	_00350_DS_
                                    1-  453     	.line	264, "main.c"; 	ledCount = 0;
     000D 02rr                      1-  454     	CLRR	_ledCount
     000E 02rr                      1-  455     	CLRR	(_ledCount + 1)
                                    1-  456     	.line	265, "main.c"; 	workStep++;
     000F 05rr                      1-  457     	INCR	_workStep,F
                                    1-  458     ;;unsigned compare: left < lit (0xB=11), size=1
                                    1-  459     	.line	266, "main.c"; 	if(workStep >= 11)
     0010 210B                      1-  460     	MOVIA	0x0b
     0011 04rr                      1-  461     	SUBAR	_workStep,W
     0012 0803                      1-  462     	BTRSS	STATUS,0
     0013 3rrr                      1-  463     	LGOTO	_00353_DS_
                                    1-  464     	.line	267, "main.c"; 	workStep = 1;
     0014 2101                      1-  465     	MOVIA	0x01
     0015 00rr                      1-  466     	MOVAR	_workStep
     0016 3rrr                      1-  467     	LGOTO	_00353_DS_
     0017                           1-  468     _00350_DS_:
                                    1-  469     	.line	269, "main.c"; 	else if(keyClick == 2)
     0017 01rr                      1-  470     	MOVR	_keyClick,W
     0018 2402                      1-  471     	XORIA	0x02
     0019 0903                      1-  472     	BTRSS	STATUS,2
     001A 3rrr                      1-  473     	LGOTO	_00353_DS_
                                    1-  474     	.line	271, "main.c"; 	if(workStep)
     001B 01rr                      1-  475     	MOVR	_workStep,W
     001C 0D03                      1-  476     	BTRSC	STATUS,2
     001D 3rrr                      1-  477     	LGOTO	_00345_DS_
                                    1-  478     	.line	273, "main.c"; 	workStep = 0;
     001E 02rr                      1-  479     	CLRR	_workStep
     001F 3rrr                      1-  480     	LGOTO	_00353_DS_
     0020                           1-  481     _00345_DS_:
                                    1-  482     	.line	277, "main.c"; 	workStep = 1;
     0020 2101                      1-  483     	MOVIA	0x01
     0021 00rr                      1-  484     	MOVAR	_workStep
     0022                           1-  485     _00353_DS_:
                                    1-  486     	.line	280, "main.c"; 	}
                                    1-  487     	RETURN	
     0022 0010                      3-   26 m1      ret
                                    1-  488     ; exit point of _keyCon
                                    1-  490     ;***
                                    1-  491     ;  pBlock Stats: dbName = C
                                    1-  492     ;***
                                    1-  493     ;has an exit
                                    1-  494     ;7 compiler assigned registers:
                                    1-  495     ;   r0x1016
                                    1-  496     ;   STK00
                                    1-  497     ;   r0x1017
                                    1-  498     ;   STK01
                                    1-  499     ;   r0x1018
                                    1-  500     ;   r0x1019
                                    1-  501     ;   r0x101A
                                    1-  502     ;; Starting pCode block
                                    1-  503     .segment "code"; module=main, function=_setPWMduty
                                    1-  505     ;local variable name mapping:
     0000                           1-  509     _setPWMduty:
                                    1-  510     ; 2 exit points
     0000 00rr                      1-  511     	MOVAR	r0x1019
                                    1-  512     	.line	244, "main.c"; 	void setPWMduty(char duty,int prd)
     0001 00rr                      1-  513     	MOVAR	r0x1016
     0002 01rr                      1-  514     	MOVR	STK00,W
     0003 00rr                      1-  515     	MOVAR	r0x1017
     0004 01rr                      1-  516     	MOVR	STK01,W
     0005 00rr                      1-  517     	MOVAR	r0x1018
                                    1-  518     ;;100	MOVR	r0x1016,W
                                    1-  519     ;;1	CLRR	r0x101A
                                    1-  520     	.line	246, "main.c"; 	if(ledCount < duty)
     0006 2100                      1-  521     	MOVIA	0x00
     0007 04rr                      1-  522     	SUBAR	(_ledCount + 1),W
     0008 0903                      1-  523     	BTRSS	STATUS,2
     0009 3rrr                      1-  524     	LGOTO	_00337_DS_
     000A 01rr                      1-  525     	MOVR	r0x1019,W
     000B 04rr                      1-  526     	SUBAR	_ledCount,W
     000C                           1-  527     _00337_DS_:
     000C 0C03                      1-  528     	BTRSC	STATUS,0
     000D 3rrr                      1-  529     	LGOTO	_00325_DS_
                                    1-  530     	.line	247, "main.c"; 	PORTB |= 0x04;
     000E 19rr                      1-  531     	BSR	_PORTB,2
     000F 3rrr                      1-  532     	LGOTO	_00326_DS_
     0010                           1-  533     _00325_DS_:
                                    1-  534     	.line	249, "main.c"; 	PORTB &= 0xFB;
     0010 1Drr                      1-  535     	BCR	_PORTB,2
     0011                           1-  536     _00326_DS_:
                                    1-  537     	.line	250, "main.c"; 	if(++ledCount == prd)
     0011 05rr                      1-  538     	INCR	_ledCount,F
     0012 0D03                      1-  539     	BTRSC	STATUS,2
     0013 05rr                      1-  540     	INCR	(_ledCount + 1),F
     0014 01rr                      1-  541     	MOVR	r0x1017,W
     0015 00rr                      1-  542     	MOVAR	r0x1019
                                    1-  543     ;;99	MOVR	r0x1016,W
     0016 01rr                      1-  544     	MOVR	r0x1018,W
     0017 00rr                      1-  545     	MOVAR	r0x1016
     0018 12rr                      1-  546     	XORAR	_ledCount,W
     0019 0903                      1-  547     	BTRSS	STATUS,2
     001A 3rrr                      1-  548     	LGOTO	_00329_DS_
     001B 01rr                      1-  549     	MOVR	r0x1019,W
     001C 12rr                      1-  550     	XORAR	(_ledCount + 1),W
     001D 0903                      1-  551     	BTRSS	STATUS,2
     001E 3rrr                      1-  552     	LGOTO	_00329_DS_
                                    1-  553     	.line	251, "main.c"; 	ledCount = 0;
     001F 02rr                      1-  554     	CLRR	_ledCount
     0020 02rr                      1-  555     	CLRR	(_ledCount + 1)
     0021                           1-  556     _00329_DS_:
                                    1-  557     	.line	252, "main.c"; 	}
                                    1-  558     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1-  559     ; exit point of _setPWMduty
                                    1-  561     ;***
                                    1-  562     ;  pBlock Stats: dbName = C
                                    1-  563     ;***
                                    1-  564     ;has an exit
                                    1-  565     ;functions called:
                                    1-  566     ;   __mulchar
                                    1-  567     ;   _setPWMduty
                                    1-  568     ;   __mulchar
                                    1-  569     ;   _setPWMduty
                                    1-  570     ;3 compiler assigned registers:
                                    1-  571     ;   STK00
                                    1-  572     ;   r0x101B
                                    1-  573     ;   STK01
                                    1-  574     ;; Starting pCode block
                                    1-  575     .segment "code"; module=main, function=_Led6
     0000                           1-  577     _Led6:
                                    1-  578     ; 2 exit points
                                    1-  579     	.line	238, "main.c"; 	setPWMduty(4*pwmDuty,120);
     0000 2104                      1-  580     	MOVIA	0x04
     0001 00rr                      1-  581     	MOVAR	STK00
     0002 01rr                      1-  582     	MOVR	_pwmDuty,W
     0003 2rrr                      1-  583     	LCALL	__mulchar
     0004 00rr                      1-  584     	MOVAR	r0x101B
     0005 2178                      1-  585     	MOVIA	0x78
     0006 00rr                      1-  586     	MOVAR	STK01
     0007 2100                      1-  587     	MOVIA	0x00
     0008 00rr                      1-  588     	MOVAR	STK00
     0009 01rr                      1-  589     	MOVR	r0x101B,W
     000A 2rrr                      1-  590     	LCALL	_setPWMduty
                                    1-  591     	.line	239, "main.c"; 	if(ledCount == 0)
     000B 01rr                      1-  592     	MOVR	_ledCount,W
     000C 11rr                      1-  593     	IORAR	(_ledCount + 1),W
     000D 0903                      1-  594     	BTRSS	STATUS,2
     000E 3rrr                      1-  595     	LGOTO	_00319_DS_
                                    1-  596     	.line	240, "main.c"; 	if(++pwmDuty == 28)
     000F 05rr                      1-  597     	INCR	_pwmDuty,F
     0010 01rr                      1-  598     	MOVR	_pwmDuty,W
     0011 241C                      1-  599     	XORIA	0x1c
     0012 0903                      1-  600     	BTRSS	STATUS,2
     0013 3rrr                      1-  601     	LGOTO	_00319_DS_
                                    1-  602     	.line	241, "main.c"; 	pwmDuty = 1;
     0014 2101                      1-  603     	MOVIA	0x01
     0015 00rr                      1-  604     	MOVAR	_pwmDuty
     0016                           1-  605     _00319_DS_:
                                    1-  606     	.line	242, "main.c"; 	}
                                    1-  607     	RETURN	
     0016 0010                      3-   26 m1      ret
                                    1-  608     ; exit point of _Led6
                                    1-  610     ;***
                                    1-  611     ;  pBlock Stats: dbName = C
                                    1-  612     ;***
                                    1-  613     ;has an exit
                                    1-  614     ;; Starting pCode block
                                    1-  615     .segment "code"; module=main, function=_Led9
     0000                           1-  617     _Led9:
                                    1-  618     ; 2 exit points
                                    1-  619     ;;unsigned compare: left < lit (0x329=809), size=2
                                    1-  620     	.line	214, "main.c"; 	if(ledCount < 809)
     0000 2103                      1-  621     	MOVIA	0x03
     0001 04rr                      1-  622     	SUBAR	(_ledCount + 1),W
     0002 0903                      1-  623     	BTRSS	STATUS,2
     0003 3rrr                      1-  624     	LGOTO	_00303_DS_
     0004 2129                      1-  625     	MOVIA	0x29
     0005 04rr                      1-  626     	SUBAR	_ledCount,W
     0006                           1-  627     _00303_DS_:
     0006 0C03                      1-  628     	BTRSC	STATUS,0
     0007 3rrr                      1-  629     	LGOTO	_00270_DS_
                                    1-  630     	.line	215, "main.c"; 	PORTB |= 0x04;
     0008 19rr                      1-  631     	BSR	_PORTB,2
     0009 3rrr                      1-  632     	LGOTO	_00271_DS_
                                    1-  633     ;;unsigned compare: left < lit (0x3C8=968), size=2
     000A                           1-  634     _00270_DS_:
                                    1-  635     	.line	216, "main.c"; 	else if(ledCount < 968)
     000A 2103                      1-  636     	MOVIA	0x03
     000B 04rr                      1-  637     	SUBAR	(_ledCount + 1),W
     000C 0903                      1-  638     	BTRSS	STATUS,2
     000D 3rrr                      1-  639     	LGOTO	_00304_DS_
     000E 21C8                      1-  640     	MOVIA	0xc8
     000F 04rr                      1-  641     	SUBAR	_ledCount,W
     0010                           1-  642     _00304_DS_:
     0010 0C03                      1-  643     	BTRSC	STATUS,0
     0011 3rrr                      1-  644     	LGOTO	_00267_DS_
                                    1-  645     	.line	217, "main.c"; 	PORTB &= 0xFB;
     0012 1Drr                      1-  646     	BCR	_PORTB,2
     0013 3rrr                      1-  647     	LGOTO	_00271_DS_
                                    1-  648     ;;unsigned compare: left < lit (0x47A=1146), size=2
     0014                           1-  649     _00267_DS_:
                                    1-  650     	.line	218, "main.c"; 	else if(ledCount < 1146)
     0014 2104                      1-  651     	MOVIA	0x04
     0015 04rr                      1-  652     	SUBAR	(_ledCount + 1),W
     0016 0903                      1-  653     	BTRSS	STATUS,2
     0017 3rrr                      1-  654     	LGOTO	_00305_DS_
     0018 217A                      1-  655     	MOVIA	0x7a
     0019 04rr                      1-  656     	SUBAR	_ledCount,W
     001A                           1-  657     _00305_DS_:
     001A 0C03                      1-  658     	BTRSC	STATUS,0
     001B 3rrr                      1-  659     	LGOTO	_00264_DS_
                                    1-  660     	.line	219, "main.c"; 	PORTB |= 0x04;
     001C 19rr                      1-  661     	BSR	_PORTB,2
     001D 3rrr                      1-  662     	LGOTO	_00271_DS_
                                    1-  663     ;;unsigned compare: left < lit (0x53E=1342), size=2
     001E                           1-  664     _00264_DS_:
                                    1-  665     	.line	220, "main.c"; 	else if(ledCount < 1342)
     001E 2105                      1-  666     	MOVIA	0x05
     001F 04rr                      1-  667     	SUBAR	(_ledCount + 1),W
     0020 0903                      1-  668     	BTRSS	STATUS,2
     0021 3rrr                      1-  669     	LGOTO	_00306_DS_
     0022 213E                      1-  670     	MOVIA	0x3e
     0023 04rr                      1-  671     	SUBAR	_ledCount,W
     0024                           1-  672     _00306_DS_:
     0024 0C03                      1-  673     	BTRSC	STATUS,0
     0025 3rrr                      1-  674     	LGOTO	_00261_DS_
                                    1-  675     	.line	221, "main.c"; 	PORTB &= 0xFB;
     0026 1Drr                      1-  676     	BCR	_PORTB,2
     0027 3rrr                      1-  677     	LGOTO	_00271_DS_
                                    1-  678     ;;unsigned compare: left < lit (0x5F0=1520), size=2
     0028                           1-  679     _00261_DS_:
                                    1-  680     	.line	222, "main.c"; 	else if(ledCount < 1520)
     0028 2105                      1-  681     	MOVIA	0x05
     0029 04rr                      1-  682     	SUBAR	(_ledCount + 1),W
     002A 0903                      1-  683     	BTRSS	STATUS,2
     002B 3rrr                      1-  684     	LGOTO	_00307_DS_
     002C 21F0                      1-  685     	MOVIA	0xf0
     002D 04rr                      1-  686     	SUBAR	_ledCount,W
     002E                           1-  687     _00307_DS_:
     002E 0C03                      1-  688     	BTRSC	STATUS,0
     002F 3rrr                      1-  689     	LGOTO	_00258_DS_
                                    1-  690     	.line	223, "main.c"; 	PORTB |= 0x04;
     0030 19rr                      1-  691     	BSR	_PORTB,2
     0031 3rrr                      1-  692     	LGOTO	_00271_DS_
                                    1-  693     ;;unsigned compare: left < lit (0x6B4=1716), size=2
     0032                           1-  694     _00258_DS_:
                                    1-  695     	.line	224, "main.c"; 	else if(ledCount < 1716)
     0032 2106                      1-  696     	MOVIA	0x06
     0033 04rr                      1-  697     	SUBAR	(_ledCount + 1),W
     0034 0903                      1-  698     	BTRSS	STATUS,2
     0035 3rrr                      1-  699     	LGOTO	_00308_DS_
     0036 21B4                      1-  700     	MOVIA	0xb4
     0037 04rr                      1-  701     	SUBAR	_ledCount,W
     0038                           1-  702     _00308_DS_:
     0038 0C03                      1-  703     	BTRSC	STATUS,0
     0039 3rrr                      1-  704     	LGOTO	_00255_DS_
                                    1-  705     	.line	225, "main.c"; 	PORTB &= 0xFB;
     003A 1Drr                      1-  706     	BCR	_PORTB,2
     003B 3rrr                      1-  707     	LGOTO	_00271_DS_
                                    1-  708     ;;unsigned compare: left < lit (0x766=1894), size=2
     003C                           1-  709     _00255_DS_:
                                    1-  710     	.line	226, "main.c"; 	else if(ledCount < 1894)
     003C 2107                      1-  711     	MOVIA	0x07
     003D 04rr                      1-  712     	SUBAR	(_ledCount + 1),W
     003E 0903                      1-  713     	BTRSS	STATUS,2
     003F 3rrr                      1-  714     	LGOTO	_00309_DS_
     0040 2166                      1-  715     	MOVIA	0x66
     0041 04rr                      1-  716     	SUBAR	_ledCount,W
     0042                           1-  717     _00309_DS_:
     0042 0C03                      1-  718     	BTRSC	STATUS,0
     0043 3rrr                      1-  719     	LGOTO	_00252_DS_
                                    1-  720     	.line	227, "main.c"; 	PORTB |= 0x04;
     0044 19rr                      1-  721     	BSR	_PORTB,2
     0045 3rrr                      1-  722     	LGOTO	_00271_DS_
                                    1-  723     ;;unsigned compare: left < lit (0x82A=2090), size=2
     0046                           1-  724     _00252_DS_:
                                    1-  725     	.line	228, "main.c"; 	else if(ledCount < 2090)
     0046 2108                      1-  726     	MOVIA	0x08
     0047 04rr                      1-  727     	SUBAR	(_ledCount + 1),W
     0048 0903                      1-  728     	BTRSS	STATUS,2
     0049 3rrr                      1-  729     	LGOTO	_00310_DS_
     004A 212A                      1-  730     	MOVIA	0x2a
     004B 04rr                      1-  731     	SUBAR	_ledCount,W
     004C                           1-  732     _00310_DS_:
     004C 0C03                      1-  733     	BTRSC	STATUS,0
     004D 3rrr                      1-  734     	LGOTO	_00271_DS_
                                    1-  735     	.line	229, "main.c"; 	PORTB &= 0xFB;
     004E 1Drr                      1-  736     	BCR	_PORTB,2
     004F                           1-  737     _00271_DS_:
                                    1-  738     	.line	230, "main.c"; 	if(++ledCount == 2090)
     004F 05rr                      1-  739     	INCR	_ledCount,F
     0050 0D03                      1-  740     	BTRSC	STATUS,2
     0051 05rr                      1-  741     	INCR	(_ledCount + 1),F
     0052 01rr                      1-  742     	MOVR	_ledCount,W
     0053 242A                      1-  743     	XORIA	0x2a
     0054 0903                      1-  744     	BTRSS	STATUS,2
     0055 3rrr                      1-  745     	LGOTO	_00274_DS_
     0056 01rr                      1-  746     	MOVR	(_ledCount + 1),W
     0057 2408                      1-  747     	XORIA	0x08
     0058 0903                      1-  748     	BTRSS	STATUS,2
     0059 3rrr                      1-  749     	LGOTO	_00274_DS_
                                    1-  750     	.line	231, "main.c"; 	ledCount = 0;
     005A 02rr                      1-  751     	CLRR	_ledCount
     005B 02rr                      1-  752     	CLRR	(_ledCount + 1)
     005C                           1-  753     _00274_DS_:
                                    1-  754     	.line	232, "main.c"; 	}
                                    1-  755     	RETURN	
     005C 0010                      3-   26 m1      ret
                                    1-  756     ; exit point of _Led9
                                    1-  758     ;***
                                    1-  759     ;  pBlock Stats: dbName = C
                                    1-  760     ;***
                                    1-  761     ;has an exit
                                    1-  762     ;functions called:
                                    1-  763     ;   _setPWMduty
                                    1-  764     ;   _setPWMduty
                                    1-  765     ;2 compiler assigned registers:
                                    1-  766     ;   STK01
                                    1-  767     ;   STK00
                                    1-  768     ;; Starting pCode block
                                    1-  769     .segment "code"; module=main, function=_Led10
     0000                           1-  771     _Led10:
                                    1-  772     ; 2 exit points
                                    1-  773     ;;unsigned compare: left < lit (0x7D0=2000), size=2
                                    1-  774     	.line	202, "main.c"; 	if(waitCount < 2000)
     0000 2107                      1-  775     	MOVIA	0x07
     0001 04rr                      1-  776     	SUBAR	(_waitCount + 1),W
     0002 0903                      1-  777     	BTRSS	STATUS,2
     0003 3rrr                      1-  778     	LGOTO	_00244_DS_
     0004 21D0                      1-  779     	MOVIA	0xd0
     0005 04rr                      1-  780     	SUBAR	_waitCount,W
     0006                           1-  781     _00244_DS_:
     0006 0C03                      1-  782     	BTRSC	STATUS,0
     0007 3rrr                      1-  783     	LGOTO	_00232_DS_
                                    1-  784     	.line	203, "main.c"; 	PORTB |= 0x04;
     0008 19rr                      1-  785     	BSR	_PORTB,2
     0009 3rrr                      1-  786     	LGOTO	_00233_DS_
     000A                           1-  787     _00232_DS_:
                                    1-  788     	.line	205, "main.c"; 	setPWMduty(14,20);
     000A 2114                      1-  789     	MOVIA	0x14
     000B 00rr                      1-  790     	MOVAR	STK01
     000C 2100                      1-  791     	MOVIA	0x00
     000D 00rr                      1-  792     	MOVAR	STK00
     000E 210E                      1-  793     	MOVIA	0x0e
     000F 2rrr                      1-  794     	LCALL	_setPWMduty
     0010                           1-  795     _00233_DS_:
                                    1-  796     	.line	206, "main.c"; 	if(++waitCount == 3000)
     0010 05rr                      1-  797     	INCR	_waitCount,F
     0011 0D03                      1-  798     	BTRSC	STATUS,2
     0012 05rr                      1-  799     	INCR	(_waitCount + 1),F
     0013 01rr                      1-  800     	MOVR	_waitCount,W
     0014 24B8                      1-  801     	XORIA	0xb8
     0015 0903                      1-  802     	BTRSS	STATUS,2
     0016 3rrr                      1-  803     	LGOTO	_00236_DS_
     0017 01rr                      1-  804     	MOVR	(_waitCount + 1),W
     0018 240B                      1-  805     	XORIA	0x0b
     0019 0903                      1-  806     	BTRSS	STATUS,2
     001A 3rrr                      1-  807     	LGOTO	_00236_DS_
                                    1-  808     	.line	207, "main.c"; 	waitCount = 0;
     001B 02rr                      1-  809     	CLRR	_waitCount
     001C 02rr                      1-  810     	CLRR	(_waitCount + 1)
     001D                           1-  811     _00236_DS_:
                                    1-  812     	.line	208, "main.c"; 	}
                                    1-  813     	RETURN	
     001D 0010                      3-   26 m1      ret
                                    1-  814     ; exit point of _Led10
                                    1-  816     ;***
                                    1-  817     ;  pBlock Stats: dbName = C
                                    1-  818     ;***
                                    1-  819     ;has an exit
                                    1-  820     ;functions called:
                                    1-  821     ;   _setPWMduty
                                    1-  822     ;   _setPWMduty
                                    1-  823     ;   _setPWMduty
                                    1-  824     ;   _setPWMduty
                                    1-  825     ;   _Led6
                                    1-  826     ;   _setPWMduty
                                    1-  827     ;   _setPWMduty
                                    1-  828     ;   _Led9
                                    1-  829     ;   _Led10
                                    1-  830     ;   _setPWMduty
                                    1-  831     ;   _setPWMduty
                                    1-  832     ;   _setPWMduty
                                    1-  833     ;   _setPWMduty
                                    1-  834     ;   _Led6
                                    1-  835     ;   _setPWMduty
                                    1-  836     ;   _setPWMduty
                                    1-  837     ;   _Led9
                                    1-  838     ;   _Led10
                                    1-  839     ;2 compiler assigned registers:
                                    1-  840     ;   STK01
                                    1-  841     ;   STK00
                                    1-  842     ;; Starting pCode block
                                    1-  843     .segment "code"; module=main, function=_outCon
     0000                           1-  845     _outCon:
                                    1-  846     ; 2 exit points
                                    1-  847     	.line	155, "main.c"; 	if(workStep)
     0000 01rr                      1-  848     	MOVR	_workStep,W
     0001 0D03                      1-  849     	BTRSC	STATUS,2
     0002 3rrr                      1-  850     	LGOTO	_00203_DS_
                                    1-  851     	.line	156, "main.c"; 	PORTB &= 0xF7;
     0003 1Drr                      1-  852     	BCR	_PORTB,3
     0004 3rrr                      1-  853     	LGOTO	_00204_DS_
     0005                           1-  854     _00203_DS_:
                                    1-  855     	.line	158, "main.c"; 	PORTB |= 0x08;
     0005 19rr                      1-  856     	BSR	_PORTB,3
                                    1-  857     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  858     ;;unsigned compare: left >= lit (0xB=11), size=1
     0006                           1-  859     _00204_DS_:
                                    1-  860     	.line	160, "main.c"; 	switch(workStep)
     0006 210B                      1-  861     	MOVIA	0x0b
     0007 04rr                      1-  862     	SUBAR	_workStep,W
     0008 0C03                      1-  863     	BTRSC	STATUS,0
     0009 3rrr                      1-  864     	LGOTO	_00217_DS_
     000A 21rr                      1-  865     	MOVIA	((_00226_DS_ >> 8) & 0xff)
     000B 008A                      1-  866     	MOVAR	PCHBUF
     000C 01rr                      1-  867     	MOVR	_workStep,W
     000D 25rr                      1-  868     	ADDIA	_00226_DS_
     000E 0C03                      1-  869     	BTRSC	STATUS,0
     000F 058A                      1-  870     	INCR	PCHBUF,F
     0010 0082                      1-  871     	MOVAR	PCL
     0011                           1-  872     _00226_DS_:
     0011 3rrr                      1-  873     	LGOTO	_00205_DS_
     0012 3rrr                      1-  874     	LGOTO	_00206_DS_
     0013 3rrr                      1-  875     	LGOTO	_00207_DS_
     0014 3rrr                      1-  876     	LGOTO	_00208_DS_
     0015 3rrr                      1-  877     	LGOTO	_00209_DS_
     0016 3rrr                      1-  878     	LGOTO	_00210_DS_
     0017 3rrr                      1-  879     	LGOTO	_00211_DS_
     0018 3rrr                      1-  880     	LGOTO	_00212_DS_
     0019 3rrr                      1-  881     	LGOTO	_00213_DS_
     001A 3rrr                      1-  882     	LGOTO	_00214_DS_
     001B 3rrr                      1-  883     	LGOTO	_00215_DS_
     001C                           1-  884     _00205_DS_:
                                    1-  885     	.line	163, "main.c"; 	PORTB &= 0xFB;
     001C 1Drr                      1-  886     	BCR	_PORTB,2
                                    1-  887     	.line	164, "main.c"; 	break;
     001D 3rrr                      1-  888     	LGOTO	_00217_DS_
     001E                           1-  889     _00206_DS_:
                                    1-  890     	.line	166, "main.c"; 	setPWMduty(8,20);
     001E 2114                      1-  891     	MOVIA	0x14
     001F 00rr                      1-  892     	MOVAR	STK01
     0020 2100                      1-  893     	MOVIA	0x00
     0021 00rr                      1-  894     	MOVAR	STK00
     0022 2108                      1-  895     	MOVIA	0x08
     0023 2rrr                      1-  896     	LCALL	_setPWMduty
                                    1-  897     	.line	167, "main.c"; 	break;
     0024 3rrr                      1-  898     	LGOTO	_00217_DS_
     0025                           1-  899     _00207_DS_:
                                    1-  900     	.line	169, "main.c"; 	setPWMduty(10,20);
     0025 2114                      1-  901     	MOVIA	0x14
     0026 00rr                      1-  902     	MOVAR	STK01
     0027 2100                      1-  903     	MOVIA	0x00
     0028 00rr                      1-  904     	MOVAR	STK00
     0029 210A                      1-  905     	MOVIA	0x0a
     002A 2rrr                      1-  906     	LCALL	_setPWMduty
                                    1-  907     	.line	170, "main.c"; 	break;
     002B 3rrr                      1-  908     	LGOTO	_00217_DS_
     002C                           1-  909     _00208_DS_:
                                    1-  910     	.line	172, "main.c"; 	setPWMduty(13,20);
     002C 2114                      1-  911     	MOVIA	0x14
     002D 00rr                      1-  912     	MOVAR	STK01
     002E 2100                      1-  913     	MOVIA	0x00
     002F 00rr                      1-  914     	MOVAR	STK00
     0030 210D                      1-  915     	MOVIA	0x0d
     0031 2rrr                      1-  916     	LCALL	_setPWMduty
                                    1-  917     	.line	173, "main.c"; 	break;
     0032 3rrr                      1-  918     	LGOTO	_00217_DS_
     0033                           1-  919     _00209_DS_:
                                    1-  920     	.line	175, "main.c"; 	setPWMduty(16,20);
     0033 2114                      1-  921     	MOVIA	0x14
     0034 00rr                      1-  922     	MOVAR	STK01
     0035 2100                      1-  923     	MOVIA	0x00
     0036 00rr                      1-  924     	MOVAR	STK00
     0037 2110                      1-  925     	MOVIA	0x10
     0038 2rrr                      1-  926     	LCALL	_setPWMduty
                                    1-  927     	.line	176, "main.c"; 	break;
     0039 3rrr                      1-  928     	LGOTO	_00217_DS_
     003A                           1-  929     _00210_DS_:
                                    1-  930     	.line	178, "main.c"; 	PORTB |= 0x04;
     003A 19rr                      1-  931     	BSR	_PORTB,2
                                    1-  932     	.line	179, "main.c"; 	break;
     003B 3rrr                      1-  933     	LGOTO	_00217_DS_
     003C                           1-  934     _00211_DS_:
                                    1-  935     	.line	181, "main.c"; 	Led6();
     003C 2rrr                      1-  936     	LCALL	_Led6
                                    1-  937     	.line	182, "main.c"; 	break;
     003D 3rrr                      1-  938     	LGOTO	_00217_DS_
     003E                           1-  939     _00212_DS_:
                                    1-  940     	.line	184, "main.c"; 	setPWMduty(255,516);
     003E 2104                      1-  941     	MOVIA	0x04
     003F 00rr                      1-  942     	MOVAR	STK01
     0040 2102                      1-  943     	MOVIA	0x02
     0041 00rr                      1-  944     	MOVAR	STK00
     0042 21FF                      1-  945     	MOVIA	0xff
     0043 2rrr                      1-  946     	LCALL	_setPWMduty
                                    1-  947     	.line	185, "main.c"; 	break;
     0044 3rrr                      1-  948     	LGOTO	_00217_DS_
     0045                           1-  949     _00213_DS_:
                                    1-  950     	.line	187, "main.c"; 	setPWMduty(159,318);
     0045 213E                      1-  951     	MOVIA	0x3e
     0046 00rr                      1-  952     	MOVAR	STK01
     0047 2101                      1-  953     	MOVIA	0x01
     0048 00rr                      1-  954     	MOVAR	STK00
     0049 219F                      1-  955     	MOVIA	0x9f
     004A 2rrr                      1-  956     	LCALL	_setPWMduty
                                    1-  957     	.line	188, "main.c"; 	break;
     004B 3rrr                      1-  958     	LGOTO	_00217_DS_
     004C                           1-  959     _00214_DS_:
                                    1-  960     	.line	190, "main.c"; 	Led9();
     004C 2rrr                      1-  961     	LCALL	_Led9
                                    1-  962     	.line	191, "main.c"; 	break;
     004D 3rrr                      1-  963     	LGOTO	_00217_DS_
     004E                           1-  964     _00215_DS_:
                                    1-  965     	.line	193, "main.c"; 	Led10();
     004E 2rrr                      1-  966     	LCALL	_Led10
     004F                           1-  967     _00217_DS_:
                                    1-  968     	.line	198, "main.c"; 	}
                                    1-  969     	RETURN	
     004F 0010                      3-   26 m1      ret
                                    1-  970     ; exit point of _outCon
                                    1-  972     ;***
                                    1-  973     ;  pBlock Stats: dbName = C
                                    1-  974     ;***
                                    1-  975     ;has an exit
                                    1-  976     ;functions called:
                                    1-  977     ;   _gotoSleep
                                    1-  978     ;   _gotoSleep
                                    1-  979     ;; Starting pCode block
                                    1-  980     .segment "code"; module=main, function=_ledCon
     0000                           1-  982     _ledCon:
                                    1-  983     ; 2 exit points
                                    1-  984     	.line	95, "main.c"; 	if(PORTB & 0x02 )
     0000 08rr                      1-  985     	BTRSS	_PORTB,1
     0001 3rrr                      1-  986     	LGOTO	_00159_DS_
                                    1-  987     	.line	99, "main.c"; 	if(PORTB & 0x20)
     0002 0Arr                      1-  988     	BTRSS	_PORTB,5
     0003 3rrr                      1-  989     	LGOTO	_00146_DS_
                                    1-  990     	.line	101, "main.c"; 	chrgCount = 0;
     0004 02rr                      1-  991     	CLRR	_chrgCount
     0005 02rr                      1-  992     	CLRR	(_chrgCount + 1)
                                    1-  993     	.line	102, "main.c"; 	addFlag = 0;
     0006 02rr                      1-  994     	CLRR	_addFlag
                                    1-  995     	.line	103, "main.c"; 	chrgDuty = 0;
     0007 02rr                      1-  996     	CLRR	_chrgDuty
                                    1-  997     	.line	104, "main.c"; 	if(!workStep)
     0008 01rr                      1-  998     	MOVR	_workStep,W
     0009 0903                      1-  999     	BTRSS	STATUS,2
     000A 3rrr                      1- 1000     	LGOTO	_00161_DS_
                                    1- 1001     	.line	106, "main.c"; 	if(++count100 == 100)	//100ms
     000B 05rr                      1- 1002     	INCR	_count100,F
     000C 01rr                      1- 1003     	MOVR	_count100,W
     000D 2464                      1- 1004     	XORIA	0x64
     000E 0903                      1- 1005     	BTRSS	STATUS,2
     000F 3rrr                      1- 1006     	LGOTO	_00161_DS_
                                    1- 1007     	.line	108, "main.c"; 	count100 = 0;
     0010 02rr                      1- 1008     	CLRR	_count100
                                    1- 1009     	.line	109, "main.c"; 	if(++sleepCount >= 35 && keyCount == 0)
     0011 05rr                      1- 1010     	INCR	_sleepCount,F
                                    1- 1011     ;;unsigned compare: left < lit (0x23=35), size=1
     0012 2123                      1- 1012     	MOVIA	0x23
     0013 04rr                      1- 1013     	SUBAR	_sleepCount,W
     0014 0803                      1- 1014     	BTRSS	STATUS,0
     0015 3rrr                      1- 1015     	LGOTO	_00161_DS_
     0016 01rr                      1- 1016     	MOVR	_keyCount,W
     0017 11rr                      1- 1017     	IORAR	(_keyCount + 1),W
     0018 0903                      1- 1018     	BTRSS	STATUS,2
     0019 3rrr                      1- 1019     	LGOTO	_00161_DS_
                                    1- 1020     	.line	110, "main.c"; 	gotoSleep(0x23);
     001A 2123                      1- 1021     	MOVIA	0x23
     001B 2rrr                      1- 1022     	LCALL	_gotoSleep
     001C 3rrr                      1- 1023     	LGOTO	_00161_DS_
     001D                           1- 1024     _00146_DS_:
                                    1- 1025     	.line	117, "main.c"; 	PORTB &= 0xF7;
     001D 1Drr                      1- 1026     	BCR	_PORTB,3
                                    1- 1027     	.line	118, "main.c"; 	chrgCount = 0;
     001E 02rr                      1- 1028     	CLRR	_chrgCount
     001F 02rr                      1- 1029     	CLRR	(_chrgCount + 1)
                                    1- 1030     	.line	119, "main.c"; 	addFlag = 0;
     0020 02rr                      1- 1031     	CLRR	_addFlag
                                    1- 1032     	.line	120, "main.c"; 	chrgDuty = 0;
     0021 02rr                      1- 1033     	CLRR	_chrgDuty
                                    1- 1034     	.line	121, "main.c"; 	workStep = 0;
     0022 02rr                      1- 1035     	CLRR	_workStep
     0023 3rrr                      1- 1036     	LGOTO	_00161_DS_
     0024                           1- 1037     _00159_DS_:
                                    1- 1038     	.line	126, "main.c"; 	if(PORTB & 0x20)
     0024 0Arr                      1- 1039     	BTRSS	_PORTB,5
     0025 3rrr                      1- 1040     	LGOTO	_00161_DS_
                                    1- 1041     	.line	128, "main.c"; 	workStep = 0;
     0026 02rr                      1- 1042     	CLRR	_workStep
                                    1- 1043     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1044     ;;unsigned compare: left >= lit (0x5B=91), size=2
                                    1- 1045     	.line	130, "main.c"; 	if(chrgCount > 90 && chrgCount%32 == 0)
     0027 2100                      1- 1046     	MOVIA	0x00
     0028 04rr                      1- 1047     	SUBAR	(_chrgCount + 1),W
     0029 0903                      1- 1048     	BTRSS	STATUS,2
     002A 3rrr                      1- 1049     	LGOTO	_00197_DS_
     002B 215B                      1- 1050     	MOVIA	0x5b
     002C 04rr                      1- 1051     	SUBAR	_chrgCount,W
     002D                           1- 1052     _00197_DS_:
     002D 0803                      1- 1053     	BTRSS	STATUS,0
     002E 3rrr                      1- 1054     	LGOTO	_00152_DS_
     002F 01rr                      1- 1055     	MOVR	_chrgCount,W
     0030 221F                      1- 1056     	ANDIA	0x1f
     0031 0903                      1- 1057     	BTRSS	STATUS,2
     0032 3rrr                      1- 1058     	LGOTO	_00152_DS_
                                    1- 1059     	.line	132, "main.c"; 	if(addFlag)
     0033 01rr                      1- 1060     	MOVR	_addFlag,W
     0034 0D03                      1- 1061     	BTRSC	STATUS,2
     0035 3rrr                      1- 1062     	LGOTO	_00149_DS_
                                    1- 1063     	.line	134, "main.c"; 	--chrgDuty;
     0036 06rr                      1- 1064     	DECR	_chrgDuty,F
     0037 3rrr                      1- 1065     	LGOTO	_00152_DS_
     0038                           1- 1066     _00149_DS_:
                                    1- 1067     	.line	138, "main.c"; 	++chrgDuty;
     0038 05rr                      1- 1068     	INCR	_chrgDuty,F
     0039                           1- 1069     _00152_DS_:
                                    1- 1070     	.line	141, "main.c"; 	if(++chrgCount == 3232)
     0039 05rr                      1- 1071     	INCR	_chrgCount,F
     003A 0D03                      1- 1072     	BTRSC	STATUS,2
     003B 05rr                      1- 1073     	INCR	(_chrgCount + 1),F
     003C 01rr                      1- 1074     	MOVR	_chrgCount,W
     003D 24A0                      1- 1075     	XORIA	0xa0
     003E 0903                      1- 1076     	BTRSS	STATUS,2
     003F 3rrr                      1- 1077     	LGOTO	_00161_DS_
     0040 01rr                      1- 1078     	MOVR	(_chrgCount + 1),W
     0041 240C                      1- 1079     	XORIA	0x0c
     0042 0903                      1- 1080     	BTRSS	STATUS,2
     0043 3rrr                      1- 1081     	LGOTO	_00161_DS_
                                    1- 1082     	.line	143, "main.c"; 	chrgCount = 0;
     0044 02rr                      1- 1083     	CLRR	_chrgCount
     0045 02rr                      1- 1084     	CLRR	(_chrgCount + 1)
                                    1- 1085     	.line	144, "main.c"; 	addFlag = ~addFlag;
     0046 07rr                      1- 1086     	COMR	_addFlag,W
     0047 00rr                      1- 1087     	MOVAR	_addFlag
     0048                           1- 1088     _00161_DS_:
                                    1- 1089     	.line	150, "main.c"; 	}
                                    1- 1090     	RETURN	
     0048 0010                      3-   26 m1      ret
                                    1- 1091     ; exit point of _ledCon
                                    1- 1094     ;	code size estimation:
                                    1- 1095     ;	  470+    0 =   470 instructions (  940 byte)
                                    1- 1097     	end
                                    1- 1097     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__mulchar               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 00000006
__PROCESSOR__           Constant 00800515
__sdcc_interrupt        Label    00000000
_00106_DS_              Label    00000020
_00108_DS_              Label    0000002A
_00109_DS_              Label    0000002B
_00115_DS_              Label    00000030
_00117_DS_              Label    00000034
_00125_DS_              Label    0000001B
_00133_DS_              Label    00000001
_00146_DS_              Label    0000001D
_00149_DS_              Label    00000038
_00152_DS_              Label    00000039
_00159_DS_              Label    00000024
_00161_DS_              Label    00000048
_00197_DS_              Label    0000002D
_00203_DS_              Label    00000005
_00204_DS_              Label    00000006
_00205_DS_              Label    0000001C
_00206_DS_              Label    0000001E
_00207_DS_              Label    00000025
_00208_DS_              Label    0000002C
_00209_DS_              Label    00000033
_00210_DS_              Label    0000003A
_00211_DS_              Label    0000003C
_00212_DS_              Label    0000003E
_00213_DS_              Label    00000045
_00214_DS_              Label    0000004C
_00215_DS_              Label    0000004E
_00217_DS_              Label    0000004F
_00226_DS_              Label    00000011
_00232_DS_              Label    0000000A
_00233_DS_              Label    00000010
_00236_DS_              Label    0000001D
_00244_DS_              Label    00000006
_00252_DS_              Label    00000046
_00255_DS_              Label    0000003C
_00258_DS_              Label    00000032
_00261_DS_              Label    00000028
_00264_DS_              Label    0000001E
_00267_DS_              Label    00000014
_00270_DS_              Label    0000000A
_00271_DS_              Label    0000004F
_00274_DS_              Label    0000005C
_00303_DS_              Label    00000006
_00304_DS_              Label    00000010
_00305_DS_              Label    0000001A
_00306_DS_              Label    00000024
_00307_DS_              Label    0000002E
_00308_DS_              Label    00000038
_00309_DS_              Label    00000042
_00310_DS_              Label    0000004C
_00319_DS_              Label    00000016
_00325_DS_              Label    00000010
_00326_DS_              Label    00000011
_00329_DS_              Label    00000021
_00337_DS_              Label    0000000C
_00345_DS_              Label    00000020
_00350_DS_              Label    00000017
_00353_DS_              Label    00000022
_addFlag                Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BPLCON                 Label    00000000
_BPLCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_checkLVD               Label    00000000
_chrgCount              Label    00000000
_chrgDuty               Label    00000000
_count100               Label    00000000
_delay                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initTimer0             Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCon                 Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_Led10                  Label    00000000
_Led6                   Label    00000000
_Led9                   Label    00000000
_ledCon                 Label    00000000
_ledCount               Label    00000000
_lvdFlag                Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_outCon                 Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_pwmDuty                Label    00000000
_setPWMduty             Label    00000000
_sleepCount             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_waitCount              Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    00000042
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000007
STK01                   Label    00000006
STK02                   Label    00000005
STK03                   Label    00000004
STK04                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a051f.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A051F (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
