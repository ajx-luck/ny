
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A051F,c=on
                                    1-    9     	#include "ny8a051f.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_delay
                                    1-   15     	extern	_keyRead
                                    1-   16     	extern	_gotoSleep
                                    1-   17     	extern	_checkLVD
                                    1-   18     	extern	_initTimer0
                                    1-   19     	extern	_PORTBbits
                                    1-   20     	extern	_PCONbits
                                    1-   21     	extern	_BWUCONbits
                                    1-   22     	extern	_BPLCONbits
                                    1-   23     	extern	_BPHCONbits
                                    1-   24     	extern	_INTEbits
                                    1-   25     	extern	_INTFbits
                                    1-   26     	extern	_INDF
                                    1-   27     	extern	_TMR0
                                    1-   28     	extern	_PCL
                                    1-   29     	extern	_STATUS
                                    1-   30     	extern	_FSR
                                    1-   31     	extern	_PORTB
                                    1-   32     	extern	_PCON
                                    1-   33     	extern	_BWUCON
                                    1-   34     	extern	_PCHBUF
                                    1-   35     	extern	_BPLCON
                                    1-   36     	extern	_BPHCON
                                    1-   37     	extern	_INTE
                                    1-   38     	extern	_INTF
                                    1-   39     	extern	_TMR1
                                    1-   40     	extern	_T1CR1
                                    1-   41     	extern	_T1CR2
                                    1-   42     	extern	_PWM1DUTY
                                    1-   43     	extern	_PS1CV
                                    1-   44     	extern	_BZ1CR
                                    1-   45     	extern	_IRCR
                                    1-   46     	extern	_TBHP
                                    1-   47     	extern	_TBHD
                                    1-   48     	extern	_OSCCR
                                    1-   49     	extern	_IOSTB
                                    1-   50     	extern	_PS0CV
                                    1-   51     	extern	_BODCON
                                    1-   52     	extern	_PCON1
                                    1-   53     	extern	_T0MD
                                    1-   54     	extern	___sdcc_saved_fsr
                                    1-   55     	extern	___sdcc_saved_stk00
                                    1-   56     	extern	___sdcc_saved_stk01
                                    1-   57     	extern	__mulchar
                                    1-   58     	extern	__nyc_ny8_startup
                                    1-   59     ;--------------------------------------------------------
                                    1-   60     ; global declarations
                                    1-   61     ;--------------------------------------------------------
                                    1-   62     	extern	_keyCon
                                    1-   63     	extern	_setPWMduty
                                    1-   64     	extern	_Led6
                                    1-   65     	extern	_Led9
                                    1-   66     	extern	_Led10
                                    1-   67     	extern	_outCon
                                    1-   68     	extern	_ledCon
                                    1-   69     	extern	_isr
                                    1-   70     	extern	_main
                                    1-   71     	extern	_intCount
                                    1-   72     	extern	_IntFlag
                                    1-   73     	extern	_workStep
                                    1-   74     	extern	_keyClick
                                    1-   75     	extern	_ledCount
                                    1-   76     	extern	_pwmDuty
                                    1-   77     	extern	_chrgDuty
                                    1-   78     	extern	_count100
                                    1-   79     	extern	_addFlag
                                    1-   80     	extern	_waitCount
                                    1-   81     	extern	_chrgCount
                                    1-   83     	extern PSAVE
                                    1-   84     	extern SSAVE
                                    1-   85     	extern WSAVE
                                    1-   86     	extern STK04
                                    1-   87     	extern STK03
                                    1-   88     	extern STK02
                                    1-   89     	extern STK01
                                    1-   90     	extern STK00
                                    1-   92     .segment "uninit", 0x20000010
 20000010                           1-   93     PSAVE:
                                    1-   94     	.res 1
 20000011                           1-   95     SSAVE:
                                    1-   96     	.res 1
 20000012                           1-   97     WSAVE:
                                    1-   98     	.res 1
 20000013                           1-   99     STK04:
                                    1-  100     	.res 1
 20000014                           1-  101     STK03:
                                    1-  102     	.res 1
 20000015                           1-  103     STK02:
                                    1-  104     	.res 1
 20000016                           1-  105     STK01:
                                    1-  106     	.res 1
 20000017                           1-  107     STK00:
                                    1-  108     	.res 1
                                    1-  110     ;--------------------------------------------------------
                                    1-  111     ; global definitions
                                    1-  112     ;--------------------------------------------------------
                                    1-  113     ;--------------------------------------------------------
                                    1-  114     ; absolute symbol definitions
                                    1-  115     ;--------------------------------------------------------
                                    1-  116     ;--------------------------------------------------------
                                    1-  117     ; compiler-defined variables
                                    1-  118     ;--------------------------------------------------------
                                    1-  119     .segment "uninit"
     0000                           1-  120     r0x1019:
                                    1-  121     	.res	1
                                    1-  122     .segment "uninit"
     0000                           1-  123     r0x1018:
                                    1-  124     	.res	1
                                    1-  125     .segment "uninit"
     0000                           1-  126     r0x1013:
                                    1-  127     	.res	1
                                    1-  128     .segment "uninit"
     0000                           1-  129     r0x1015:
                                    1-  130     	.res	1
                                    1-  131     .segment "uninit"
     0000                           1-  132     r0x1014:
                                    1-  133     	.res	1
                                    1-  134     .segment "uninit"
     0000                           1-  135     r0x1016:
                                    1-  136     	.res	1
                                    1-  137     .segment "uninit"
     0000                           1-  138     r0x1012:
                                    1-  139     	.res	1
                                    1-  140     ;--------------------------------------------------------
                                    1-  141     ; initialized data
                                    1-  142     ;--------------------------------------------------------
                                    1-  144     .segment "idata"
     0000                           1-  145     _intCount:
     0000 0000 0000                 1-  146     	dw	0x00, 0x00
                                    1-  150     .segment "idata"
     0000                           1-  151     _IntFlag:
     0000 0000                      1-  152     	dw	0x00
                                    1-  156     .segment "idata"
     0000                           1-  157     _workStep:
     0000 0000                      1-  158     	dw	0x00
                                    1-  162     .segment "idata"
     0000                           1-  163     _keyClick:
     0000 0000                      1-  164     	dw	0x00
                                    1-  168     .segment "idata"
     0000                           1-  169     _ledCount:
     0000 0000 0000                 1-  170     	dw	0x00, 0x00
                                    1-  174     .segment "idata"
     0000                           1-  175     _pwmDuty:
     0000 0001                      1-  176     	dw	0x01
                                    1-  180     .segment "idata"
     0000                           1-  181     _chrgDuty:
     0000 0000                      1-  182     	dw	0x00
                                    1-  186     .segment "idata"
     0000                           1-  187     _count100:
     0000 0000                      1-  188     	dw	0x00
                                    1-  192     .segment "idata"
     0000                           1-  193     _addFlag:
     0000 0000                      1-  194     	dw	0x00
                                    1-  198     .segment "idata"
     0000                           1-  199     _waitCount:
     0000 0000 0000                 1-  200     	dw	0x00, 0x00
                                    1-  204     .segment "idata"
     0000                           1-  205     _chrgCount:
     0000 0000 0000                 1-  206     	dw	0x00, 0x00
                                    1-  209     ;--------------------------------------------------------
                                    1-  210     ; overlayable items in internal ram 
                                    1-  211     ;--------------------------------------------------------
                                    1-  212     ;	udata_ovr
                                    1-  213     ;--------------------------------------------------------
                                    1-  214     ; reset vector 
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     ORG	0x0000
     0000 3rrr                      1-  217     	LGOTO	__nyc_ny8_startup
                                    1-  218     ;--------------------------------------------------------
                                    1-  219     ; interrupt and initialization code
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     ORG 0x0008
     0008 3rrr                      1-  222     	lgoto	__sdcc_interrupt
                                    1-  224     .segment "code"
     0000                           1-  225     __sdcc_interrupt:
                                    1-  226     ;***
                                    1-  227     ;  pBlock Stats: dbName = I
                                    1-  228     ;***
                                    1-  229     ;2 compiler assigned registers:
                                    1-  230     ;   STK00
                                    1-  231     ;   STK01
                                    1-  232     ;; Starting pCode block
     0000                           1-  233     _isr:
                                    1-  234     ; 0 exit points
                                    1-  235     	.line	27, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  236     	MOVAR	WSAVE
     0001 1503                      1-  237     	SWAPR	STATUS,W
     0002 0283                      1-  238     	CLRR	STATUS
     0003 00rr                      1-  239     	MOVAR	SSAVE
     0004 010A                      1-  240     	MOVR	PCHBUF,W
     0005 028A                      1-  241     	CLRR	PCHBUF
     0006 00rr                      1-  242     	MOVAR	PSAVE
     0007 0104                      1-  243     	MOVR	FSR,W
     0008 00rr                      1-  244     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  245     	MOVR	STK00,W
     000A 00rr                      1-  246     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  247     	MOVR	STK01,W
     000C 00rr                      1-  248     	MOVAR	___sdcc_saved_stk01
                                    1-  249     	.line	29, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  250     	BTRSS	_INTFbits,0
     000E 3rrr                      1-  251     	LGOTO	_00115_DS_
                                    1-  252     	.line	31, "main.c"; 	TMR0 = 68;
     000F 2144                      1-  253     	MOVIA	0x44
     0010 00rr                      1-  254     	MOVAR	_TMR0
                                    1-  255     	.line	32, "main.c"; 	intCount++;
     0011 05rr                      1-  256     	INCR	_intCount,F
     0012 0D03                      1-  257     	BTRSC	STATUS,2
     0013 05rr                      1-  258     	INCR	(_intCount + 1),F
                                    1-  259     	.line	33, "main.c"; 	if(intCount == 10)
     0014 01rr                      1-  260     	MOVR	_intCount,W
     0015 240A                      1-  261     	XORIA	0x0a
     0016 0903                      1-  262     	BTRSS	STATUS,2
     0017 3rrr                      1-  263     	LGOTO	_00106_DS_
     0018 01rr                      1-  264     	MOVR	(_intCount + 1),W
     0019 2400                      1-  265     	XORIA	0x00
     001A 0903                      1-  266     	BTRSS	STATUS,2
     001B 3rrr                      1-  267     	LGOTO	_00106_DS_
                                    1-  268     	.line	35, "main.c"; 	intCount = 0;
     001C 02rr                      1-  269     	CLRR	_intCount
     001D 02rr                      1-  270     	CLRR	(_intCount + 1)
                                    1-  271     	.line	36, "main.c"; 	IntFlag = 1;
     001E 2101                      1-  272     	MOVIA	0x01
     001F 00rr                      1-  273     	MOVAR	_IntFlag
     0020                           1-  274     _00106_DS_:
                                    1-  275     	.line	39, "main.c"; 	if(chrgCount)
     0020 01rr                      1-  276     	MOVR	_chrgCount,W
     0021 11rr                      1-  277     	IORAR	(_chrgCount + 1),W
     0022 0D03                      1-  278     	BTRSC	STATUS,2
     0023 3rrr                      1-  279     	LGOTO	_00115_DS_
                                    1-  280     	.line	41, "main.c"; 	if(count100 < chrgDuty)
     0024 01rr                      1-  281     	MOVR	_chrgDuty,W
     0025 04rr                      1-  282     	SUBAR	_count100,W
     0026 0C03                      1-  283     	BTRSC	STATUS,0
     0027 3rrr                      1-  284     	LGOTO	_00108_DS_
                                    1-  285     	.line	42, "main.c"; 	PORTB &= 0xF7;
     0028 1Drr                      1-  286     	BCR	_PORTB,3
     0029 3rrr                      1-  287     	LGOTO	_00109_DS_
     002A                           1-  288     _00108_DS_:
                                    1-  289     	.line	44, "main.c"; 	PORTB |= 0x08;
     002A 19rr                      1-  290     	BSR	_PORTB,3
     002B                           1-  291     _00109_DS_:
                                    1-  292     	.line	45, "main.c"; 	if(++count100 == 100)
     002B 05rr                      1-  293     	INCR	_count100,F
     002C 01rr                      1-  294     	MOVR	_count100,W
     002D 2464                      1-  295     	XORIA	0x64
     002E 0D03                      1-  296     	BTRSC	STATUS,2
                                    1-  297     	.line	46, "main.c"; 	count100 = 0;
     002F 02rr                      1-  298     	CLRR	_count100
     0030                           1-  299     _00115_DS_:
                                    1-  300     	.line	49, "main.c"; 	if(INTFbits.PBIF)
     0030 08rr                      1-  301     	BTRSS	_INTFbits,1
     0031 3rrr                      1-  302     	LGOTO	_00117_DS_
                                    1-  303     	.line	51, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0032 21FD                      1-  304     	MOVIA	0xfd
     0033 00rr                      1-  305     	MOVAR	_INTF
     0034                           1-  306     _00117_DS_:
                                    1-  307     	.line	54, "main.c"; 	INTF = 0;
     0034 02rr                      1-  308     	CLRR	_INTF
                                    1-  309     	.line	56, "main.c"; 	}
     0035 01rr                      1-  310     	MOVR	___sdcc_saved_stk01,W
     0036 00rr                      1-  311     	MOVAR	STK01
     0037 01rr                      1-  312     	MOVR	___sdcc_saved_stk00,W
     0038 00rr                      1-  313     	MOVAR	STK00
     0039 01rr                      1-  314     	MOVR	___sdcc_saved_fsr,W
     003A 0084                      1-  315     	MOVAR	FSR
     003B 01rr                      1-  316     	MOVR	PSAVE,W
     003C 008A                      1-  317     	MOVAR	PCHBUF
     003D 0283                      1-  318     	CLRR	STATUS
     003E 15rr                      1-  319     	SWAPR	SSAVE,W
     003F 0083                      1-  320     	MOVAR	STATUS
     0040 15rr                      1-  321     	SWAPR	WSAVE,F
     0041 15rr                      1-  322     	SWAPR	WSAVE,W
     0042                           1-  323     END_OF_INTERRUPT:
     0042 0011                      1-  324     	RETIE	
                                    1-  326     ;--------------------------------------------------------
                                    1-  327     ; code
                                    1-  328     ;--------------------------------------------------------
                                    1-  329     ;***
                                    1-  330     ;  pBlock Stats: dbName = M
                                    1-  331     ;***
                                    1-  332     ;has an exit
                                    1-  333     ;functions called:
                                    1-  334     ;   _initTimer0
                                    1-  335     ;   _keyCon
                                    1-  336     ;   _outCon
                                    1-  337     ;   _ledCon
                                    1-  338     ;   _checkLVD
                                    1-  339     ;   _gotoSleep
                                    1-  340     ;   _initTimer0
                                    1-  341     ;   _keyCon
                                    1-  342     ;   _outCon
                                    1-  343     ;   _ledCon
                                    1-  344     ;   _checkLVD
                                    1-  345     ;   _gotoSleep
                                    1-  346     ;1 compiler assigned register :
                                    1-  347     ;   r0x1019
                                    1-  348     ;; Starting pCode block
                                    1-  349     .segment "code"; module=main, function=_main
     0000                           1-  351     _main:
                                    1-  352     ; 2 exit points
                                    1-  353     	.line	61, "main.c"; 	initTimer0();
     0000 2rrr                      1-  354     	LCALL	_initTimer0
     0001                           1-  355     _00127_DS_:
                                    1-  356     	.line	64, "main.c"; 	CLRWDT(); 
     0001 0002                      1-  357     	clrwdt
                                    1-  358     	.line	65, "main.c"; 	if(!IntFlag)
     0002 01rr                      1-  359     	MOVR	_IntFlag,W
     0003 0D03                      1-  360     	BTRSC	STATUS,2
     0004 3rrr                      1-  361     	LGOTO	_00127_DS_
                                    1-  362     	.line	67, "main.c"; 	IntFlag = 0;
     0005 02rr                      1-  363     	CLRR	_IntFlag
                                    1-  364     	.line	68, "main.c"; 	keyCon();
     0006 2rrr                      1-  365     	LCALL	_keyCon
                                    1-  366     	.line	69, "main.c"; 	outCon();
     0007 2rrr                      1-  367     	LCALL	_outCon
                                    1-  368     	.line	70, "main.c"; 	ledCon();
     0008 2rrr                      1-  369     	LCALL	_ledCon
                                    1-  370     	.line	71, "main.c"; 	if(checkLVD())
     0009 2rrr                      1-  371     	LCALL	_checkLVD
     000A 00rr                      1-  372     	MOVAR	r0x1019
     000B 01rr                      1-  373     	MOVR	r0x1019,W
     000C 0D03                      1-  374     	BTRSC	STATUS,2
     000D 3rrr                      1-  375     	LGOTO	_00127_DS_
                                    1-  376     	.line	72, "main.c"; 	gotoSleep(0x23);
     000E 2123                      1-  377     	MOVIA	0x23
     000F 2rrr                      1-  378     	LCALL	_gotoSleep
     0010 3rrr                      1-  379     	LGOTO	_00127_DS_
                                    1-  380     	.line	76, "main.c"; 	}
                                    1-  381     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1-  382     ; exit point of _main
                                    1-  384     ;***
                                    1-  385     ;  pBlock Stats: dbName = C
                                    1-  386     ;***
                                    1-  387     ;has an exit
                                    1-  388     ;functions called:
                                    1-  389     ;   _keyRead
                                    1-  390     ;   _keyRead
                                    1-  391     ;1 compiler assigned register :
                                    1-  392     ;   r0x1012
                                    1-  393     ;; Starting pCode block
                                    1-  394     .segment "code"; module=main, function=_keyCon
                                    1-  396     ;local variable name mapping:
     0000                           1-  398     _keyCon:
                                    1-  399     ; 2 exit points
                                    1-  400     	.line	231, "main.c"; 	char keyStatus = ~PORTB;
     0000 07rr                      1-  401     	COMR	_PORTB,W
     0001 00rr                      1-  402     	MOVAR	r0x1012
                                    1-  403     	.line	232, "main.c"; 	keyStatus &= 0x01;
     0002 2101                      1-  404     	MOVIA	0x01
     0003 10rr                      1-  405     	ANDAR	r0x1012,F
                                    1-  406     	.line	233, "main.c"; 	keyClick = keyRead(keyStatus);
     0004 01rr                      1-  407     	MOVR	r0x1012,W
     0005 2rrr                      1-  408     	LCALL	_keyRead
     0006 00rr                      1-  409     	MOVAR	_keyClick
                                    1-  410     	.line	234, "main.c"; 	if(keyClick == 1 && workStep)
     0007 2401                      1-  411     	XORIA	0x01
     0008 0903                      1-  412     	BTRSS	STATUS,2
     0009 3rrr                      1-  413     	LGOTO	_00324_DS_
     000A 01rr                      1-  414     	MOVR	_workStep,W
     000B 0D03                      1-  415     	BTRSC	STATUS,2
     000C 3rrr                      1-  416     	LGOTO	_00324_DS_
                                    1-  417     	.line	236, "main.c"; 	ledCount = 0;
     000D 02rr                      1-  418     	CLRR	_ledCount
     000E 02rr                      1-  419     	CLRR	(_ledCount + 1)
                                    1-  420     	.line	237, "main.c"; 	workStep++;
     000F 05rr                      1-  421     	INCR	_workStep,F
                                    1-  422     ;;unsigned compare: left < lit (0xB=11), size=1
                                    1-  423     	.line	238, "main.c"; 	if(workStep >= 11)
     0010 210B                      1-  424     	MOVIA	0x0b
     0011 04rr                      1-  425     	SUBAR	_workStep,W
     0012 0803                      1-  426     	BTRSS	STATUS,0
     0013 3rrr                      1-  427     	LGOTO	_00327_DS_
                                    1-  428     	.line	239, "main.c"; 	workStep = 1;
     0014 2101                      1-  429     	MOVIA	0x01
     0015 00rr                      1-  430     	MOVAR	_workStep
     0016 3rrr                      1-  431     	LGOTO	_00327_DS_
     0017                           1-  432     _00324_DS_:
                                    1-  433     	.line	241, "main.c"; 	else if(keyClick == 2)
     0017 01rr                      1-  434     	MOVR	_keyClick,W
     0018 2402                      1-  435     	XORIA	0x02
     0019 0903                      1-  436     	BTRSS	STATUS,2
     001A 3rrr                      1-  437     	LGOTO	_00327_DS_
                                    1-  438     	.line	243, "main.c"; 	if(workStep)
     001B 01rr                      1-  439     	MOVR	_workStep,W
     001C 0D03                      1-  440     	BTRSC	STATUS,2
     001D 3rrr                      1-  441     	LGOTO	_00319_DS_
                                    1-  442     	.line	245, "main.c"; 	workStep = 0;
     001E 02rr                      1-  443     	CLRR	_workStep
     001F 3rrr                      1-  444     	LGOTO	_00327_DS_
     0020                           1-  445     _00319_DS_:
                                    1-  446     	.line	249, "main.c"; 	workStep = 1;
     0020 2101                      1-  447     	MOVIA	0x01
     0021 00rr                      1-  448     	MOVAR	_workStep
     0022                           1-  449     _00327_DS_:
                                    1-  450     	.line	252, "main.c"; 	}
                                    1-  451     	RETURN	
     0022 0010                      3-   26 m1      ret
                                    1-  452     ; exit point of _keyCon
                                    1-  454     ;***
                                    1-  455     ;  pBlock Stats: dbName = C
                                    1-  456     ;***
                                    1-  457     ;has an exit
                                    1-  458     ;7 compiler assigned registers:
                                    1-  459     ;   r0x1013
                                    1-  460     ;   STK00
                                    1-  461     ;   r0x1014
                                    1-  462     ;   STK01
                                    1-  463     ;   r0x1015
                                    1-  464     ;   r0x1016
                                    1-  465     ;   r0x1017
                                    1-  466     ;; Starting pCode block
                                    1-  467     .segment "code"; module=main, function=_setPWMduty
                                    1-  469     ;local variable name mapping:
     0000                           1-  473     _setPWMduty:
                                    1-  474     ; 2 exit points
     0000 00rr                      1-  475     	MOVAR	r0x1016
                                    1-  476     	.line	216, "main.c"; 	void setPWMduty(char duty,int prd)
     0001 00rr                      1-  477     	MOVAR	r0x1013
     0002 01rr                      1-  478     	MOVR	STK00,W
     0003 00rr                      1-  479     	MOVAR	r0x1014
     0004 01rr                      1-  480     	MOVR	STK01,W
     0005 00rr                      1-  481     	MOVAR	r0x1015
                                    1-  482     ;;100	MOVR	r0x1013,W
                                    1-  483     ;;1	CLRR	r0x1017
                                    1-  484     	.line	218, "main.c"; 	if(ledCount < duty)
     0006 2100                      1-  485     	MOVIA	0x00
     0007 04rr                      1-  486     	SUBAR	(_ledCount + 1),W
     0008 0903                      1-  487     	BTRSS	STATUS,2
     0009 3rrr                      1-  488     	LGOTO	_00311_DS_
     000A 01rr                      1-  489     	MOVR	r0x1016,W
     000B 04rr                      1-  490     	SUBAR	_ledCount,W
     000C                           1-  491     _00311_DS_:
     000C 0C03                      1-  492     	BTRSC	STATUS,0
     000D 3rrr                      1-  493     	LGOTO	_00299_DS_
                                    1-  494     	.line	219, "main.c"; 	PORTB |= 0x04;
     000E 19rr                      1-  495     	BSR	_PORTB,2
     000F 3rrr                      1-  496     	LGOTO	_00300_DS_
     0010                           1-  497     _00299_DS_:
                                    1-  498     	.line	221, "main.c"; 	PORTB &= 0xFB;
     0010 1Drr                      1-  499     	BCR	_PORTB,2
     0011                           1-  500     _00300_DS_:
                                    1-  501     	.line	222, "main.c"; 	if(++ledCount == prd)
     0011 05rr                      1-  502     	INCR	_ledCount,F
     0012 0D03                      1-  503     	BTRSC	STATUS,2
     0013 05rr                      1-  504     	INCR	(_ledCount + 1),F
     0014 01rr                      1-  505     	MOVR	r0x1014,W
     0015 00rr                      1-  506     	MOVAR	r0x1016
                                    1-  507     ;;99	MOVR	r0x1013,W
     0016 01rr                      1-  508     	MOVR	r0x1015,W
     0017 00rr                      1-  509     	MOVAR	r0x1013
     0018 12rr                      1-  510     	XORAR	_ledCount,W
     0019 0903                      1-  511     	BTRSS	STATUS,2
     001A 3rrr                      1-  512     	LGOTO	_00303_DS_
     001B 01rr                      1-  513     	MOVR	r0x1016,W
     001C 12rr                      1-  514     	XORAR	(_ledCount + 1),W
     001D 0903                      1-  515     	BTRSS	STATUS,2
     001E 3rrr                      1-  516     	LGOTO	_00303_DS_
                                    1-  517     	.line	223, "main.c"; 	ledCount = 0;
     001F 02rr                      1-  518     	CLRR	_ledCount
     0020 02rr                      1-  519     	CLRR	(_ledCount + 1)
     0021                           1-  520     _00303_DS_:
                                    1-  521     	.line	224, "main.c"; 	}
                                    1-  522     	RETURN	
     0021 0010                      3-   26 m1      ret
                                    1-  523     ; exit point of _setPWMduty
                                    1-  525     ;***
                                    1-  526     ;  pBlock Stats: dbName = C
                                    1-  527     ;***
                                    1-  528     ;has an exit
                                    1-  529     ;functions called:
                                    1-  530     ;   __mulchar
                                    1-  531     ;   _setPWMduty
                                    1-  532     ;   __mulchar
                                    1-  533     ;   _setPWMduty
                                    1-  534     ;3 compiler assigned registers:
                                    1-  535     ;   STK00
                                    1-  536     ;   r0x1018
                                    1-  537     ;   STK01
                                    1-  538     ;; Starting pCode block
                                    1-  539     .segment "code"; module=main, function=_Led6
     0000                           1-  541     _Led6:
                                    1-  542     ; 2 exit points
                                    1-  543     	.line	210, "main.c"; 	setPWMduty(4*pwmDuty,120);
     0000 2104                      1-  544     	MOVIA	0x04
     0001 00rr                      1-  545     	MOVAR	STK00
     0002 01rr                      1-  546     	MOVR	_pwmDuty,W
     0003 2rrr                      1-  547     	LCALL	__mulchar
     0004 00rr                      1-  548     	MOVAR	r0x1018
     0005 2178                      1-  549     	MOVIA	0x78
     0006 00rr                      1-  550     	MOVAR	STK01
     0007 2100                      1-  551     	MOVIA	0x00
     0008 00rr                      1-  552     	MOVAR	STK00
     0009 01rr                      1-  553     	MOVR	r0x1018,W
     000A 2rrr                      1-  554     	LCALL	_setPWMduty
                                    1-  555     	.line	211, "main.c"; 	if(ledCount == 0)
     000B 01rr                      1-  556     	MOVR	_ledCount,W
     000C 11rr                      1-  557     	IORAR	(_ledCount + 1),W
     000D 0903                      1-  558     	BTRSS	STATUS,2
     000E 3rrr                      1-  559     	LGOTO	_00293_DS_
                                    1-  560     	.line	212, "main.c"; 	if(++pwmDuty == 28)
     000F 05rr                      1-  561     	INCR	_pwmDuty,F
     0010 01rr                      1-  562     	MOVR	_pwmDuty,W
     0011 241C                      1-  563     	XORIA	0x1c
     0012 0903                      1-  564     	BTRSS	STATUS,2
     0013 3rrr                      1-  565     	LGOTO	_00293_DS_
                                    1-  566     	.line	213, "main.c"; 	pwmDuty = 1;
     0014 2101                      1-  567     	MOVIA	0x01
     0015 00rr                      1-  568     	MOVAR	_pwmDuty
     0016                           1-  569     _00293_DS_:
                                    1-  570     	.line	214, "main.c"; 	}
                                    1-  571     	RETURN	
     0016 0010                      3-   26 m1      ret
                                    1-  572     ; exit point of _Led6
                                    1-  574     ;***
                                    1-  575     ;  pBlock Stats: dbName = C
                                    1-  576     ;***
                                    1-  577     ;has an exit
                                    1-  578     ;; Starting pCode block
                                    1-  579     .segment "code"; module=main, function=_Led9
     0000                           1-  581     _Led9:
                                    1-  582     ; 2 exit points
                                    1-  583     ;;unsigned compare: left < lit (0x329=809), size=2
                                    1-  584     	.line	186, "main.c"; 	if(ledCount < 809)
     0000 2103                      1-  585     	MOVIA	0x03
     0001 04rr                      1-  586     	SUBAR	(_ledCount + 1),W
     0002 0903                      1-  587     	BTRSS	STATUS,2
     0003 3rrr                      1-  588     	LGOTO	_00277_DS_
     0004 2129                      1-  589     	MOVIA	0x29
     0005 04rr                      1-  590     	SUBAR	_ledCount,W
     0006                           1-  591     _00277_DS_:
     0006 0C03                      1-  592     	BTRSC	STATUS,0
     0007 3rrr                      1-  593     	LGOTO	_00244_DS_
                                    1-  594     	.line	187, "main.c"; 	PORTB |= 0x04;
     0008 19rr                      1-  595     	BSR	_PORTB,2
     0009 3rrr                      1-  596     	LGOTO	_00245_DS_
                                    1-  597     ;;unsigned compare: left < lit (0x3C8=968), size=2
     000A                           1-  598     _00244_DS_:
                                    1-  599     	.line	188, "main.c"; 	else if(ledCount < 968)
     000A 2103                      1-  600     	MOVIA	0x03
     000B 04rr                      1-  601     	SUBAR	(_ledCount + 1),W
     000C 0903                      1-  602     	BTRSS	STATUS,2
     000D 3rrr                      1-  603     	LGOTO	_00278_DS_
     000E 21C8                      1-  604     	MOVIA	0xc8
     000F 04rr                      1-  605     	SUBAR	_ledCount,W
     0010                           1-  606     _00278_DS_:
     0010 0C03                      1-  607     	BTRSC	STATUS,0
     0011 3rrr                      1-  608     	LGOTO	_00241_DS_
                                    1-  609     	.line	189, "main.c"; 	PORTB &= 0xFB;
     0012 1Drr                      1-  610     	BCR	_PORTB,2
     0013 3rrr                      1-  611     	LGOTO	_00245_DS_
                                    1-  612     ;;unsigned compare: left < lit (0x47A=1146), size=2
     0014                           1-  613     _00241_DS_:
                                    1-  614     	.line	190, "main.c"; 	else if(ledCount < 1146)
     0014 2104                      1-  615     	MOVIA	0x04
     0015 04rr                      1-  616     	SUBAR	(_ledCount + 1),W
     0016 0903                      1-  617     	BTRSS	STATUS,2
     0017 3rrr                      1-  618     	LGOTO	_00279_DS_
     0018 217A                      1-  619     	MOVIA	0x7a
     0019 04rr                      1-  620     	SUBAR	_ledCount,W
     001A                           1-  621     _00279_DS_:
     001A 0C03                      1-  622     	BTRSC	STATUS,0
     001B 3rrr                      1-  623     	LGOTO	_00238_DS_
                                    1-  624     	.line	191, "main.c"; 	PORTB |= 0x04;
     001C 19rr                      1-  625     	BSR	_PORTB,2
     001D 3rrr                      1-  626     	LGOTO	_00245_DS_
                                    1-  627     ;;unsigned compare: left < lit (0x53E=1342), size=2
     001E                           1-  628     _00238_DS_:
                                    1-  629     	.line	192, "main.c"; 	else if(ledCount < 1342)
     001E 2105                      1-  630     	MOVIA	0x05
     001F 04rr                      1-  631     	SUBAR	(_ledCount + 1),W
     0020 0903                      1-  632     	BTRSS	STATUS,2
     0021 3rrr                      1-  633     	LGOTO	_00280_DS_
     0022 213E                      1-  634     	MOVIA	0x3e
     0023 04rr                      1-  635     	SUBAR	_ledCount,W
     0024                           1-  636     _00280_DS_:
     0024 0C03                      1-  637     	BTRSC	STATUS,0
     0025 3rrr                      1-  638     	LGOTO	_00235_DS_
                                    1-  639     	.line	193, "main.c"; 	PORTB &= 0xFB;
     0026 1Drr                      1-  640     	BCR	_PORTB,2
     0027 3rrr                      1-  641     	LGOTO	_00245_DS_
                                    1-  642     ;;unsigned compare: left < lit (0x5F0=1520), size=2
     0028                           1-  643     _00235_DS_:
                                    1-  644     	.line	194, "main.c"; 	else if(ledCount < 1520)
     0028 2105                      1-  645     	MOVIA	0x05
     0029 04rr                      1-  646     	SUBAR	(_ledCount + 1),W
     002A 0903                      1-  647     	BTRSS	STATUS,2
     002B 3rrr                      1-  648     	LGOTO	_00281_DS_
     002C 21F0                      1-  649     	MOVIA	0xf0
     002D 04rr                      1-  650     	SUBAR	_ledCount,W
     002E                           1-  651     _00281_DS_:
     002E 0C03                      1-  652     	BTRSC	STATUS,0
     002F 3rrr                      1-  653     	LGOTO	_00232_DS_
                                    1-  654     	.line	195, "main.c"; 	PORTB |= 0x04;
     0030 19rr                      1-  655     	BSR	_PORTB,2
     0031 3rrr                      1-  656     	LGOTO	_00245_DS_
                                    1-  657     ;;unsigned compare: left < lit (0x6B4=1716), size=2
     0032                           1-  658     _00232_DS_:
                                    1-  659     	.line	196, "main.c"; 	else if(ledCount < 1716)
     0032 2106                      1-  660     	MOVIA	0x06
     0033 04rr                      1-  661     	SUBAR	(_ledCount + 1),W
     0034 0903                      1-  662     	BTRSS	STATUS,2
     0035 3rrr                      1-  663     	LGOTO	_00282_DS_
     0036 21B4                      1-  664     	MOVIA	0xb4
     0037 04rr                      1-  665     	SUBAR	_ledCount,W
     0038                           1-  666     _00282_DS_:
     0038 0C03                      1-  667     	BTRSC	STATUS,0
     0039 3rrr                      1-  668     	LGOTO	_00229_DS_
                                    1-  669     	.line	197, "main.c"; 	PORTB &= 0xFB;
     003A 1Drr                      1-  670     	BCR	_PORTB,2
     003B 3rrr                      1-  671     	LGOTO	_00245_DS_
                                    1-  672     ;;unsigned compare: left < lit (0x766=1894), size=2
     003C                           1-  673     _00229_DS_:
                                    1-  674     	.line	198, "main.c"; 	else if(ledCount < 1894)
     003C 2107                      1-  675     	MOVIA	0x07
     003D 04rr                      1-  676     	SUBAR	(_ledCount + 1),W
     003E 0903                      1-  677     	BTRSS	STATUS,2
     003F 3rrr                      1-  678     	LGOTO	_00283_DS_
     0040 2166                      1-  679     	MOVIA	0x66
     0041 04rr                      1-  680     	SUBAR	_ledCount,W
     0042                           1-  681     _00283_DS_:
     0042 0C03                      1-  682     	BTRSC	STATUS,0
     0043 3rrr                      1-  683     	LGOTO	_00226_DS_
                                    1-  684     	.line	199, "main.c"; 	PORTB |= 0x04;
     0044 19rr                      1-  685     	BSR	_PORTB,2
     0045 3rrr                      1-  686     	LGOTO	_00245_DS_
                                    1-  687     ;;unsigned compare: left < lit (0x82A=2090), size=2
     0046                           1-  688     _00226_DS_:
                                    1-  689     	.line	200, "main.c"; 	else if(ledCount < 2090)
     0046 2108                      1-  690     	MOVIA	0x08
     0047 04rr                      1-  691     	SUBAR	(_ledCount + 1),W
     0048 0903                      1-  692     	BTRSS	STATUS,2
     0049 3rrr                      1-  693     	LGOTO	_00284_DS_
     004A 212A                      1-  694     	MOVIA	0x2a
     004B 04rr                      1-  695     	SUBAR	_ledCount,W
     004C                           1-  696     _00284_DS_:
     004C 0C03                      1-  697     	BTRSC	STATUS,0
     004D 3rrr                      1-  698     	LGOTO	_00245_DS_
                                    1-  699     	.line	201, "main.c"; 	PORTB &= 0xFB;
     004E 1Drr                      1-  700     	BCR	_PORTB,2
     004F                           1-  701     _00245_DS_:
                                    1-  702     	.line	202, "main.c"; 	if(++ledCount == 2090)
     004F 05rr                      1-  703     	INCR	_ledCount,F
     0050 0D03                      1-  704     	BTRSC	STATUS,2
     0051 05rr                      1-  705     	INCR	(_ledCount + 1),F
     0052 01rr                      1-  706     	MOVR	_ledCount,W
     0053 242A                      1-  707     	XORIA	0x2a
     0054 0903                      1-  708     	BTRSS	STATUS,2
     0055 3rrr                      1-  709     	LGOTO	_00248_DS_
     0056 01rr                      1-  710     	MOVR	(_ledCount + 1),W
     0057 2408                      1-  711     	XORIA	0x08
     0058 0903                      1-  712     	BTRSS	STATUS,2
     0059 3rrr                      1-  713     	LGOTO	_00248_DS_
                                    1-  714     	.line	203, "main.c"; 	ledCount = 0;
     005A 02rr                      1-  715     	CLRR	_ledCount
     005B 02rr                      1-  716     	CLRR	(_ledCount + 1)
     005C                           1-  717     _00248_DS_:
                                    1-  718     	.line	204, "main.c"; 	}
                                    1-  719     	RETURN	
     005C 0010                      3-   26 m1      ret
                                    1-  720     ; exit point of _Led9
                                    1-  722     ;***
                                    1-  723     ;  pBlock Stats: dbName = C
                                    1-  724     ;***
                                    1-  725     ;has an exit
                                    1-  726     ;functions called:
                                    1-  727     ;   _setPWMduty
                                    1-  728     ;   _setPWMduty
                                    1-  729     ;2 compiler assigned registers:
                                    1-  730     ;   STK01
                                    1-  731     ;   STK00
                                    1-  732     ;; Starting pCode block
                                    1-  733     .segment "code"; module=main, function=_Led10
     0000                           1-  735     _Led10:
                                    1-  736     ; 2 exit points
                                    1-  737     ;;unsigned compare: left < lit (0x7D0=2000), size=2
                                    1-  738     	.line	174, "main.c"; 	if(waitCount < 2000)
     0000 2107                      1-  739     	MOVIA	0x07
     0001 04rr                      1-  740     	SUBAR	(_waitCount + 1),W
     0002 0903                      1-  741     	BTRSS	STATUS,2
     0003 3rrr                      1-  742     	LGOTO	_00218_DS_
     0004 21D0                      1-  743     	MOVIA	0xd0
     0005 04rr                      1-  744     	SUBAR	_waitCount,W
     0006                           1-  745     _00218_DS_:
     0006 0C03                      1-  746     	BTRSC	STATUS,0
     0007 3rrr                      1-  747     	LGOTO	_00206_DS_
                                    1-  748     	.line	175, "main.c"; 	PORTB |= 0x04;
     0008 19rr                      1-  749     	BSR	_PORTB,2
     0009 3rrr                      1-  750     	LGOTO	_00207_DS_
     000A                           1-  751     _00206_DS_:
                                    1-  752     	.line	177, "main.c"; 	setPWMduty(14,20);
     000A 2114                      1-  753     	MOVIA	0x14
     000B 00rr                      1-  754     	MOVAR	STK01
     000C 2100                      1-  755     	MOVIA	0x00
     000D 00rr                      1-  756     	MOVAR	STK00
     000E 210E                      1-  757     	MOVIA	0x0e
     000F 2rrr                      1-  758     	LCALL	_setPWMduty
     0010                           1-  759     _00207_DS_:
                                    1-  760     	.line	178, "main.c"; 	if(++waitCount == 3000)
     0010 05rr                      1-  761     	INCR	_waitCount,F
     0011 0D03                      1-  762     	BTRSC	STATUS,2
     0012 05rr                      1-  763     	INCR	(_waitCount + 1),F
     0013 01rr                      1-  764     	MOVR	_waitCount,W
     0014 24B8                      1-  765     	XORIA	0xb8
     0015 0903                      1-  766     	BTRSS	STATUS,2
     0016 3rrr                      1-  767     	LGOTO	_00210_DS_
     0017 01rr                      1-  768     	MOVR	(_waitCount + 1),W
     0018 240B                      1-  769     	XORIA	0x0b
     0019 0903                      1-  770     	BTRSS	STATUS,2
     001A 3rrr                      1-  771     	LGOTO	_00210_DS_
                                    1-  772     	.line	179, "main.c"; 	waitCount = 0;
     001B 02rr                      1-  773     	CLRR	_waitCount
     001C 02rr                      1-  774     	CLRR	(_waitCount + 1)
     001D                           1-  775     _00210_DS_:
                                    1-  776     	.line	180, "main.c"; 	}
                                    1-  777     	RETURN	
     001D 0010                      3-   26 m1      ret
                                    1-  778     ; exit point of _Led10
                                    1-  780     ;***
                                    1-  781     ;  pBlock Stats: dbName = C
                                    1-  782     ;***
                                    1-  783     ;has an exit
                                    1-  784     ;functions called:
                                    1-  785     ;   _setPWMduty
                                    1-  786     ;   _setPWMduty
                                    1-  787     ;   _setPWMduty
                                    1-  788     ;   _setPWMduty
                                    1-  789     ;   _Led6
                                    1-  790     ;   _setPWMduty
                                    1-  791     ;   _setPWMduty
                                    1-  792     ;   _Led9
                                    1-  793     ;   _Led10
                                    1-  794     ;   _setPWMduty
                                    1-  795     ;   _setPWMduty
                                    1-  796     ;   _setPWMduty
                                    1-  797     ;   _setPWMduty
                                    1-  798     ;   _Led6
                                    1-  799     ;   _setPWMduty
                                    1-  800     ;   _setPWMduty
                                    1-  801     ;   _Led9
                                    1-  802     ;   _Led10
                                    1-  803     ;2 compiler assigned registers:
                                    1-  804     ;   STK01
                                    1-  805     ;   STK00
                                    1-  806     ;; Starting pCode block
                                    1-  807     .segment "code"; module=main, function=_outCon
     0000                           1-  809     _outCon:
                                    1-  810     ; 2 exit points
                                    1-  811     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  812     ;;unsigned compare: left >= lit (0xB=11), size=1
                                    1-  813     	.line	129, "main.c"; 	switch(workStep)
     0000 210B                      1-  814     	MOVIA	0x0b
     0001 04rr                      1-  815     	SUBAR	_workStep,W
     0002 0C03                      1-  816     	BTRSC	STATUS,0
     0003 3rrr                      1-  817     	LGOTO	_00187_DS_
     0004 21rr                      1-  818     	MOVIA	((_00200_DS_ >> 8) & 0xff)
     0005 008A                      1-  819     	MOVAR	PCHBUF
     0006 01rr                      1-  820     	MOVR	_workStep,W
     0007 25rr                      1-  821     	ADDIA	_00200_DS_
     0008 0C03                      1-  822     	BTRSC	STATUS,0
     0009 058A                      1-  823     	INCR	PCHBUF,F
     000A 0082                      1-  824     	MOVAR	PCL
     000B                           1-  825     _00200_DS_:
     000B 3rrr                      1-  826     	LGOTO	_00176_DS_
     000C 3rrr                      1-  827     	LGOTO	_00177_DS_
     000D 3rrr                      1-  828     	LGOTO	_00178_DS_
     000E 3rrr                      1-  829     	LGOTO	_00179_DS_
     000F 3rrr                      1-  830     	LGOTO	_00180_DS_
     0010 3rrr                      1-  831     	LGOTO	_00181_DS_
     0011 3rrr                      1-  832     	LGOTO	_00182_DS_
     0012 3rrr                      1-  833     	LGOTO	_00183_DS_
     0013 3rrr                      1-  834     	LGOTO	_00184_DS_
     0014 3rrr                      1-  835     	LGOTO	_00185_DS_
     0015 3rrr                      1-  836     	LGOTO	_00186_DS_
     0016                           1-  837     _00176_DS_:
                                    1-  838     	.line	132, "main.c"; 	PORTB &= 0xFB;
     0016 1Drr                      1-  839     	BCR	_PORTB,2
                                    1-  840     	.line	133, "main.c"; 	break;
     0017 3rrr                      1-  841     	LGOTO	_00187_DS_
     0018                           1-  842     _00177_DS_:
                                    1-  843     	.line	135, "main.c"; 	setPWMduty(8,20);
     0018 2114                      1-  844     	MOVIA	0x14
     0019 00rr                      1-  845     	MOVAR	STK01
     001A 2100                      1-  846     	MOVIA	0x00
     001B 00rr                      1-  847     	MOVAR	STK00
     001C 2108                      1-  848     	MOVIA	0x08
     001D 2rrr                      1-  849     	LCALL	_setPWMduty
                                    1-  850     	.line	136, "main.c"; 	break;
     001E 3rrr                      1-  851     	LGOTO	_00187_DS_
     001F                           1-  852     _00178_DS_:
                                    1-  853     	.line	138, "main.c"; 	setPWMduty(10,20);
     001F 2114                      1-  854     	MOVIA	0x14
     0020 00rr                      1-  855     	MOVAR	STK01
     0021 2100                      1-  856     	MOVIA	0x00
     0022 00rr                      1-  857     	MOVAR	STK00
     0023 210A                      1-  858     	MOVIA	0x0a
     0024 2rrr                      1-  859     	LCALL	_setPWMduty
                                    1-  860     	.line	139, "main.c"; 	break;
     0025 3rrr                      1-  861     	LGOTO	_00187_DS_
     0026                           1-  862     _00179_DS_:
                                    1-  863     	.line	141, "main.c"; 	setPWMduty(13,20);
     0026 2114                      1-  864     	MOVIA	0x14
     0027 00rr                      1-  865     	MOVAR	STK01
     0028 2100                      1-  866     	MOVIA	0x00
     0029 00rr                      1-  867     	MOVAR	STK00
     002A 210D                      1-  868     	MOVIA	0x0d
     002B 2rrr                      1-  869     	LCALL	_setPWMduty
                                    1-  870     	.line	142, "main.c"; 	break;
     002C 3rrr                      1-  871     	LGOTO	_00187_DS_
     002D                           1-  872     _00180_DS_:
                                    1-  873     	.line	144, "main.c"; 	setPWMduty(16,20);
     002D 2114                      1-  874     	MOVIA	0x14
     002E 00rr                      1-  875     	MOVAR	STK01
     002F 2100                      1-  876     	MOVIA	0x00
     0030 00rr                      1-  877     	MOVAR	STK00
     0031 2110                      1-  878     	MOVIA	0x10
     0032 2rrr                      1-  879     	LCALL	_setPWMduty
                                    1-  880     	.line	145, "main.c"; 	break;
     0033 3rrr                      1-  881     	LGOTO	_00187_DS_
     0034                           1-  882     _00181_DS_:
                                    1-  883     	.line	147, "main.c"; 	PORTB |= 0x04;
     0034 19rr                      1-  884     	BSR	_PORTB,2
                                    1-  885     	.line	148, "main.c"; 	break;
     0035 3rrr                      1-  886     	LGOTO	_00187_DS_
     0036                           1-  887     _00182_DS_:
                                    1-  888     	.line	150, "main.c"; 	Led6();
     0036 2rrr                      1-  889     	LCALL	_Led6
                                    1-  890     	.line	151, "main.c"; 	break;
     0037 3rrr                      1-  891     	LGOTO	_00187_DS_
     0038                           1-  892     _00183_DS_:
                                    1-  893     	.line	153, "main.c"; 	setPWMduty(255,516);
     0038 2104                      1-  894     	MOVIA	0x04
     0039 00rr                      1-  895     	MOVAR	STK01
     003A 2102                      1-  896     	MOVIA	0x02
     003B 00rr                      1-  897     	MOVAR	STK00
     003C 21FF                      1-  898     	MOVIA	0xff
     003D 2rrr                      1-  899     	LCALL	_setPWMduty
                                    1-  900     	.line	154, "main.c"; 	break;
     003E 3rrr                      1-  901     	LGOTO	_00187_DS_
     003F                           1-  902     _00184_DS_:
                                    1-  903     	.line	156, "main.c"; 	setPWMduty(159,318);
     003F 213E                      1-  904     	MOVIA	0x3e
     0040 00rr                      1-  905     	MOVAR	STK01
     0041 2101                      1-  906     	MOVIA	0x01
     0042 00rr                      1-  907     	MOVAR	STK00
     0043 219F                      1-  908     	MOVIA	0x9f
     0044 2rrr                      1-  909     	LCALL	_setPWMduty
                                    1-  910     	.line	157, "main.c"; 	break;
     0045 3rrr                      1-  911     	LGOTO	_00187_DS_
     0046                           1-  912     _00185_DS_:
                                    1-  913     	.line	159, "main.c"; 	Led9();
     0046 2rrr                      1-  914     	LCALL	_Led9
                                    1-  915     	.line	160, "main.c"; 	break;
     0047 3rrr                      1-  916     	LGOTO	_00187_DS_
     0048                           1-  917     _00186_DS_:
                                    1-  918     	.line	162, "main.c"; 	Led10();
     0048 2rrr                      1-  919     	LCALL	_Led10
     0049                           1-  920     _00187_DS_:
                                    1-  921     	.line	166, "main.c"; 	if(workStep)
     0049 01rr                      1-  922     	MOVR	_workStep,W
     004A 0D03                      1-  923     	BTRSC	STATUS,2
     004B 3rrr                      1-  924     	LGOTO	_00189_DS_
                                    1-  925     	.line	167, "main.c"; 	PORTB &= 0xF7;
     004C 1Drr                      1-  926     	BCR	_PORTB,3
     004D 3rrr                      1-  927     	LGOTO	_00191_DS_
     004E                           1-  928     _00189_DS_:
                                    1-  929     	.line	169, "main.c"; 	PORTB |= 0x08;
     004E 19rr                      1-  930     	BSR	_PORTB,3
     004F                           1-  931     _00191_DS_:
                                    1-  932     	.line	170, "main.c"; 	}
                                    1-  933     	RETURN	
     004F 0010                      3-   26 m1      ret
                                    1-  934     ; exit point of _outCon
                                    1-  936     ;***
                                    1-  937     ;  pBlock Stats: dbName = C
                                    1-  938     ;***
                                    1-  939     ;has an exit
                                    1-  940     ;functions called:
                                    1-  941     ;   _gotoSleep
                                    1-  942     ;   _gotoSleep
                                    1-  943     ;; Starting pCode block
                                    1-  944     .segment "code"; module=main, function=_ledCon
     0000                           1-  946     _ledCon:
                                    1-  947     ; 2 exit points
                                    1-  948     	.line	81, "main.c"; 	if(PORTB & 0x02 )
     0000 08rr                      1-  949     	BTRSS	_PORTB,1
     0001 3rrr                      1-  950     	LGOTO	_00146_DS_
                                    1-  951     	.line	83, "main.c"; 	PORTB |= 0x08;
     0002 19rr                      1-  952     	BSR	_PORTB,3
                                    1-  953     	.line	84, "main.c"; 	chrgCount = 0;
     0003 02rr                      1-  954     	CLRR	_chrgCount
     0004 02rr                      1-  955     	CLRR	(_chrgCount + 1)
                                    1-  956     	.line	85, "main.c"; 	addFlag = 0;
     0005 02rr                      1-  957     	CLRR	_addFlag
                                    1-  958     	.line	86, "main.c"; 	chrgDuty = 0;
     0006 02rr                      1-  959     	CLRR	_chrgDuty
                                    1-  960     	.line	87, "main.c"; 	if(!workStep)
     0007 01rr                      1-  961     	MOVR	_workStep,W
     0008 0903                      1-  962     	BTRSS	STATUS,2
     0009 3rrr                      1-  963     	LGOTO	_00148_DS_
                                    1-  964     	.line	88, "main.c"; 	gotoSleep(0x23);
     000A 2123                      1-  965     	MOVIA	0x23
     000B 2rrr                      1-  966     	LCALL	_gotoSleep
     000C 3rrr                      1-  967     	LGOTO	_00148_DS_
     000D                           1-  968     _00146_DS_:
                                    1-  969     	.line	92, "main.c"; 	if(PORTB & 0x20)
     000D 0Arr                      1-  970     	BTRSS	_PORTB,5
     000E 3rrr                      1-  971     	LGOTO	_00143_DS_
                                    1-  972     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  973     ;;unsigned compare: left >= lit (0x5B=91), size=2
                                    1-  974     	.line	95, "main.c"; 	if(chrgCount > 90 && chrgCount%32 == 0)
     000F 2100                      1-  975     	MOVIA	0x00
     0010 04rr                      1-  976     	SUBAR	(_chrgCount + 1),W
     0011 0903                      1-  977     	BTRSS	STATUS,2
     0012 3rrr                      1-  978     	LGOTO	_00171_DS_
     0013 215B                      1-  979     	MOVIA	0x5b
     0014 04rr                      1-  980     	SUBAR	_chrgCount,W
     0015                           1-  981     _00171_DS_:
     0015 0803                      1-  982     	BTRSS	STATUS,0
     0016 3rrr                      1-  983     	LGOTO	_00138_DS_
     0017 01rr                      1-  984     	MOVR	_chrgCount,W
     0018 221F                      1-  985     	ANDIA	0x1f
     0019 0903                      1-  986     	BTRSS	STATUS,2
     001A 3rrr                      1-  987     	LGOTO	_00138_DS_
                                    1-  988     	.line	97, "main.c"; 	if(addFlag)
     001B 01rr                      1-  989     	MOVR	_addFlag,W
     001C 0D03                      1-  990     	BTRSC	STATUS,2
     001D 3rrr                      1-  991     	LGOTO	_00135_DS_
                                    1-  992     	.line	99, "main.c"; 	--chrgDuty;
     001E 06rr                      1-  993     	DECR	_chrgDuty,F
     001F 3rrr                      1-  994     	LGOTO	_00138_DS_
     0020                           1-  995     _00135_DS_:
                                    1-  996     	.line	103, "main.c"; 	++chrgDuty;
     0020 05rr                      1-  997     	INCR	_chrgDuty,F
     0021                           1-  998     _00138_DS_:
                                    1-  999     	.line	106, "main.c"; 	if(++chrgCount == 3232)
     0021 05rr                      1- 1000     	INCR	_chrgCount,F
     0022 0D03                      1- 1001     	BTRSC	STATUS,2
     0023 05rr                      1- 1002     	INCR	(_chrgCount + 1),F
     0024 01rr                      1- 1003     	MOVR	_chrgCount,W
     0025 24A0                      1- 1004     	XORIA	0xa0
     0026 0903                      1- 1005     	BTRSS	STATUS,2
     0027 3rrr                      1- 1006     	LGOTO	_00148_DS_
     0028 01rr                      1- 1007     	MOVR	(_chrgCount + 1),W
     0029 240C                      1- 1008     	XORIA	0x0c
     002A 0903                      1- 1009     	BTRSS	STATUS,2
     002B 3rrr                      1- 1010     	LGOTO	_00148_DS_
                                    1- 1011     	.line	108, "main.c"; 	chrgCount = 0;
     002C 02rr                      1- 1012     	CLRR	_chrgCount
     002D 02rr                      1- 1013     	CLRR	(_chrgCount + 1)
                                    1- 1014     	.line	109, "main.c"; 	addFlag = ~addFlag;
     002E 07rr                      1- 1015     	COMR	_addFlag,W
     002F 00rr                      1- 1016     	MOVAR	_addFlag
     0030 3rrr                      1- 1017     	LGOTO	_00148_DS_
     0031                           1- 1018     _00143_DS_:
                                    1- 1019     	.line	115, "main.c"; 	PORTB &= 0xF7;
     0031 1Drr                      1- 1020     	BCR	_PORTB,3
                                    1- 1021     	.line	116, "main.c"; 	chrgCount = 0;
     0032 02rr                      1- 1022     	CLRR	_chrgCount
     0033 02rr                      1- 1023     	CLRR	(_chrgCount + 1)
                                    1- 1024     	.line	117, "main.c"; 	addFlag = 0;
     0034 02rr                      1- 1025     	CLRR	_addFlag
                                    1- 1026     	.line	118, "main.c"; 	chrgDuty = 0;
     0035 02rr                      1- 1027     	CLRR	_chrgDuty
     0036                           1- 1028     _00148_DS_:
                                    1- 1029     	.line	122, "main.c"; 	}
                                    1- 1030     	RETURN	
     0036 0010                      3-   26 m1      ret
                                    1- 1031     ; exit point of _ledCon
                                    1- 1034     ;	code size estimation:
                                    1- 1035     ;	  434+    0 =   434 instructions (  868 byte)
                                    1- 1037     	end
                                    1- 1037     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__mulchar               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 00000006
__PROCESSOR__           Constant 00800515
__sdcc_interrupt        Label    00000000
_00106_DS_              Label    00000020
_00108_DS_              Label    0000002A
_00109_DS_              Label    0000002B
_00115_DS_              Label    00000030
_00117_DS_              Label    00000034
_00127_DS_              Label    00000001
_00135_DS_              Label    00000020
_00138_DS_              Label    00000021
_00143_DS_              Label    00000031
_00146_DS_              Label    0000000D
_00148_DS_              Label    00000036
_00171_DS_              Label    00000015
_00176_DS_              Label    00000016
_00177_DS_              Label    00000018
_00178_DS_              Label    0000001F
_00179_DS_              Label    00000026
_00180_DS_              Label    0000002D
_00181_DS_              Label    00000034
_00182_DS_              Label    00000036
_00183_DS_              Label    00000038
_00184_DS_              Label    0000003F
_00185_DS_              Label    00000046
_00186_DS_              Label    00000048
_00187_DS_              Label    00000049
_00189_DS_              Label    0000004E
_00191_DS_              Label    0000004F
_00200_DS_              Label    0000000B
_00206_DS_              Label    0000000A
_00207_DS_              Label    00000010
_00210_DS_              Label    0000001D
_00218_DS_              Label    00000006
_00226_DS_              Label    00000046
_00229_DS_              Label    0000003C
_00232_DS_              Label    00000032
_00235_DS_              Label    00000028
_00238_DS_              Label    0000001E
_00241_DS_              Label    00000014
_00244_DS_              Label    0000000A
_00245_DS_              Label    0000004F
_00248_DS_              Label    0000005C
_00277_DS_              Label    00000006
_00278_DS_              Label    00000010
_00279_DS_              Label    0000001A
_00280_DS_              Label    00000024
_00281_DS_              Label    0000002E
_00282_DS_              Label    00000038
_00283_DS_              Label    00000042
_00284_DS_              Label    0000004C
_00293_DS_              Label    00000016
_00299_DS_              Label    00000010
_00300_DS_              Label    00000011
_00303_DS_              Label    00000021
_00311_DS_              Label    0000000C
_00319_DS_              Label    00000020
_00324_DS_              Label    00000017
_00327_DS_              Label    00000022
_addFlag                Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BPLCON                 Label    00000000
_BPLCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_checkLVD               Label    00000000
_chrgCount              Label    00000000
_chrgDuty               Label    00000000
_count100               Label    00000000
_delay                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initTimer0             Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCon                 Label    00000000
_keyRead                Label    00000000
_Led10                  Label    00000000
_Led6                   Label    00000000
_Led9                   Label    00000000
_ledCon                 Label    00000000
_ledCount               Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_outCon                 Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_pwmDuty                Label    00000000
_setPWMduty             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_waitCount              Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    00000042
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1012                 Label    00000000
r0x1013                 Label    00000000
r0x1014                 Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000007
STK01                   Label    00000006
STK02                   Label    00000005
STK03                   Label    00000004
STK04                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a051f.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A051F (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
