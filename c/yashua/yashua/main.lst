
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_delay
                                    1-   97     	extern	_keyRead
                                    1-   98     	extern	_KeyScan
                                    1-   99     	extern	_initSys
                                    1-  100     	extern	_pwmWork
                                    1-  101     	extern	_ledOn
                                    1-  102     	extern	_ledOff
                                    1-  103     	extern	_ledWord
                                    1-  104     	extern	_gotoSleep
                                    1-  105     	extern	_nextorSleep
                                    1-  106     	extern	_isr
                                    1-  107     	extern	_main
                                    1-  108     	extern	_INTFLAG
                                    1-  109     	extern	_workStep
                                    1-  110     	extern	_saveWorkStep
                                    1-  111     	extern	_intCount
                                    1-  112     	extern	_KeyStatus
                                    1-  113     	extern	_keyCount
                                    1-  114     	extern	_pwmHmax
                                    1-  115     	extern	_pwmLmax
                                    1-  116     	extern	_pwmwaitTime
                                    1-  117     	extern	_pwmStep
                                    1-  118     	extern	_pwm1L
                                    1-  119     	extern	_pwm2L
                                    1-  120     	extern	_pwmwait
                                    1-  121     	extern	_ledL
                                    1-  122     	extern	_ledH
                                    1-  123     	extern	_ledOffTime
                                    1-  124     	extern	_ledTime
                                    1-  125     	extern	_ledpwmTime
                                    1-  127     	extern PSAVE
                                    1-  128     	extern SSAVE
                                    1-  129     	extern WSAVE
                                    1-  130     	extern STK12
                                    1-  131     	extern STK11
                                    1-  132     	extern STK10
                                    1-  133     	extern STK09
                                    1-  134     	extern STK08
                                    1-  135     	extern STK07
                                    1-  136     	extern STK06
                                    1-  137     	extern STK05
                                    1-  138     	extern STK04
                                    1-  139     	extern STK03
                                    1-  140     	extern STK02
                                    1-  141     	extern STK01
                                    1-  142     	extern STK00
                                    1-  144     .segment "uninit", 0x20000040
 20000040                           1-  145     PSAVE:
                                    1-  146     	.res 1
 20000041                           1-  147     SSAVE:
                                    1-  148     	.res 1
 20000042                           1-  149     WSAVE:
                                    1-  150     	.res 1
 20000043                           1-  151     STK12:
                                    1-  152     	.res 1
 20000044                           1-  153     STK11:
                                    1-  154     	.res 1
 20000045                           1-  155     STK10:
                                    1-  156     	.res 1
 20000046                           1-  157     STK09:
                                    1-  158     	.res 1
 20000047                           1-  159     STK08:
                                    1-  160     	.res 1
 20000048                           1-  161     STK07:
                                    1-  162     	.res 1
 20000049                           1-  163     STK06:
                                    1-  164     	.res 1
 2000004A                           1-  165     STK05:
                                    1-  166     	.res 1
 2000004B                           1-  167     STK04:
                                    1-  168     	.res 1
 2000004C                           1-  169     STK03:
                                    1-  170     	.res 1
 2000004D                           1-  171     STK02:
                                    1-  172     	.res 1
 2000004E                           1-  173     STK01:
                                    1-  174     	.res 1
 2000004F                           1-  175     STK00:
                                    1-  176     	.res 1
                                    1-  178     ;--------------------------------------------------------
                                    1-  179     ; global definitions
                                    1-  180     ;--------------------------------------------------------
                                    1-  181     .segment "uninit"
     0000                           1-  182     _KeyStatus:
                                    1-  183     	.res	1
                                    1-  186     ;--------------------------------------------------------
                                    1-  187     ; absolute symbol definitions
                                    1-  188     ;--------------------------------------------------------
                                    1-  189     ;--------------------------------------------------------
                                    1-  190     ; compiler-defined variables
                                    1-  191     ;--------------------------------------------------------
                                    1-  192     .segment "uninit"
     0000                           1-  193     r0x101C:
                                    1-  194     	.res	1
                                    1-  195     .segment "uninit"
     0000                           1-  196     r0x101B:
                                    1-  197     	.res	1
                                    1-  198     .segment "uninit"
     0000                           1-  199     r0x1016:
                                    1-  200     	.res	1
                                    1-  201     .segment "uninit"
     0000                           1-  202     r0x1015:
                                    1-  203     	.res	1
                                    1-  204     .segment "uninit"
     0000                           1-  205     r0x1017:
                                    1-  206     	.res	1
                                    1-  207     .segment "uninit"
     0000                           1-  208     r0x1018:
                                    1-  209     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     r0x1019:
                                    1-  212     	.res	1
                                    1-  213     ;--------------------------------------------------------
                                    1-  214     ; initialized data
                                    1-  215     ;--------------------------------------------------------
                                    1-  217     .segment "idata"
     0000                           1-  218     _INTFLAG:
     0000 0000                      1-  219     	dw	0x00
                                    1-  223     .segment "idata"
     0000                           1-  224     _workStep:
     0000 0001                      1-  225     	dw	0x01
                                    1-  229     .segment "idata"
     0000                           1-  230     _saveWorkStep:
     0000 0001                      1-  231     	dw	0x01
                                    1-  235     .segment "idata"
     0000                           1-  236     _intCount:
     0000 0000                      1-  237     	dw	0x00
                                    1-  241     .segment "idata"
     0000                           1-  242     _keyCount:
     0000 0000                      1-  243     	dw	0x00
                                    1-  247     .segment "idata"
     0000                           1-  248     _pwmHmax:
     0000 0014                      1-  249     	dw	0x14
                                    1-  253     .segment "idata"
     0000                           1-  254     _pwmLmax:
     0000 0010                      1-  255     	dw	0x10
                                    1-  259     .segment "idata"
     0000                           1-  260     _pwmwaitTime:
     0000 0002                      1-  261     	dw	0x02
                                    1-  265     .segment "idata"
     0000                           1-  266     _pwmStep:
     0000 0000                      1-  267     	dw	0x00
                                    1-  271     .segment "idata"
     0000                           1-  272     _pwm1L:
     0000 rrrr                      1-  273     	dw	_pwmLmax
                                    1-  277     .segment "idata"
     0000                           1-  278     _pwm2L:
     0000 rrrr                      1-  279     	dw	_pwmLmax
                                    1-  283     .segment "idata"
     0000                           1-  284     _pwmwait:
     0000 0000                      1-  285     	dw	0x00
                                    1-  289     .segment "idata"
     0000                           1-  290     _ledL:
     0000 0014                      1-  291     	dw	0x14
                                    1-  295     .segment "idata"
     0000                           1-  296     _ledH:
     0000 0050                      1-  297     	dw	0x50
                                    1-  301     .segment "idata"
     0000                           1-  302     _ledOffTime:
     0000 00E8 0003                 1-  303     	dw	0xe8, 0x03
                                    1-  307     .segment "idata"
     0000                           1-  308     _ledTime:
     0000 0006                      1-  309     	dw	0x06
                                    1-  313     .segment "idata"
     0000                           1-  314     _ledpwmTime:
     0000 003C                      1-  315     	dw	0x3c
                                    1-  318     ;--------------------------------------------------------
                                    1-  319     ; overlayable items in internal ram 
                                    1-  320     ;--------------------------------------------------------
                                    1-  321     ;	udata_ovr
                                    1-  322     ;--------------------------------------------------------
                                    1-  323     ; reset vector 
                                    1-  324     ;--------------------------------------------------------
                                    1-  325     ORG	0x0000
     0000 3rrr                      1-  326     	LGOTO	__nyc_ny8_startup
                                    1-  327     ;--------------------------------------------------------
                                    1-  328     ; interrupt and initialization code
                                    1-  329     ;--------------------------------------------------------
                                    1-  330     ORG 0x0008
     0008 3rrr                      1-  331     	lgoto	__sdcc_interrupt
                                    1-  333     .segment "code"
     0000                           1-  334     __sdcc_interrupt:
                                    1-  335     ;***
                                    1-  336     ;  pBlock Stats: dbName = I
                                    1-  337     ;***
                                    1-  338     ;functions called:
                                    1-  339     ;   _pwmWork
                                    1-  340     ;   _ledWord
                                    1-  341     ;   _pwmWork
                                    1-  342     ;   _ledWord
                                    1-  343     ;2 compiler assigned registers:
                                    1-  344     ;   STK00
                                    1-  345     ;   STK01
                                    1-  346     ;; Starting pCode block
     0000                           1-  347     _isr:
                                    1-  348     ; 0 exit points
                                    1-  349     	.line	78, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  350     	MOVAR	WSAVE
     0001 1503                      1-  351     	SWAPR	STATUS,W
     0002 0283                      1-  352     	CLRR	STATUS
     0003 00rr                      1-  353     	MOVAR	SSAVE
     0004 010A                      1-  354     	MOVR	PCHBUF,W
     0005 028A                      1-  355     	CLRR	PCHBUF
     0006 00rr                      1-  356     	MOVAR	PSAVE
     0007 0104                      1-  357     	MOVR	FSR,W
                                    1-  358     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  359     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  360     	MOVR	STK00,W
                                    1-  361     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  362     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  363     	MOVR	STK01,W
                                    1-  364     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  365     	MOVAR	___sdcc_saved_stk01
                                    1-  366     	.line	81, "main.c"; 	if(INTFbits.T1IF)
     0010 09rr                      1-  367     	BTRSS	_INTFbits,3
     0011 3rrr                      1-  368     	LGOTO	_00110_DS_
                                    1-  369     	.line	83, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR0);	// Clear T0IF flag bit	
     0012 21FE                      1-  370     	MOVIA	0xfe
     0013 00rr                      1-  371     	MOVAR	_INTF
                                    1-  372     	.line	84, "main.c"; 	TMR1 = 0xFF;							// Load 0xFF to TMR1 (Initial Timer1 register)
     0014 21FF                      1-  373     	MOVIA	0xff
     0015 00rr                      1-  374     	SFUN	_TMR1
                                    1-  375     	.line	85, "main.c"; 	TMRH = 0x30;
     0016 2130                      1-  376     	MOVIA	0x30
     0017 00rr                      1-  377     	MOVAR	_TMRH
                                    1-  378     	.line	86, "main.c"; 	intCount++;
                                    1-  379     	BANKSEL	_intCount
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 05rr                      1-  380     	INCR	_intCount,F
                                    1-  381     	.line	87, "main.c"; 	if(workStep){
                                    1-  382     	BANKSEL	_workStep
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  383     	MOVR	_workStep,W
     001C 0D03                      1-  384     	BTRSC	STATUS,2
     001D 3rrr                      1-  385     	LGOTO	_00106_DS_
                                    1-  386     	.line	88, "main.c"; 	pwmWork();
     001E 2rrr                      1-  387     	LCALL	_pwmWork
                                    1-  388     	.line	89, "main.c"; 	ledWord();
     001F 2rrr                      1-  389     	LCALL	_ledWord
     0020                           1-  390     _00106_DS_:
                                    1-  391     	.line	93, "main.c"; 	if(intCount == 100)
                                    1-  392     	BANKSEL	_intCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  393     	MOVR	_intCount,W
     0022 2464                      1-  394     	XORIA	0x64
     0023 0903                      1-  395     	BTRSS	STATUS,2
     0024 3rrr                      1-  396     	LGOTO	_00110_DS_
                                    1-  397     	.line	95, "main.c"; 	intCount = 0;
     0025 02rr                      1-  398     	CLRR	_intCount
                                    1-  399     	.line	96, "main.c"; 	INTFLAG = 1;
     0026 2101                      1-  400     	MOVIA	0x01
                                    1-  401     	BANKSEL	_INTFLAG
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1-  402     	MOVAR	_INTFLAG
     0029                           1-  403     _00110_DS_:
                                    1-  404     	.line	100, "main.c"; 	if(INTFbits.PABIF)
     0029 08rr                      1-  405     	BTRSS	_INTFbits,1
     002A 3rrr                      1-  406     	LGOTO	_00113_DS_
                                    1-  407     	.line	102, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     002B 21FD                      1-  408     	MOVIA	0xfd
     002C 00rr                      1-  409     	MOVAR	_INTF
     002D                           1-  410     _00113_DS_:
                                    1-  411     	.line	107, "main.c"; 	}
                                    1-  412     	BANKSEL	___sdcc_saved_stk01
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  413     	MOVR	___sdcc_saved_stk01,W
     002F 00rr                      1-  414     	MOVAR	STK01
                                    1-  415     	BANKSEL	___sdcc_saved_stk00
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1-  416     	MOVR	___sdcc_saved_stk00,W
     0032 00rr                      1-  417     	MOVAR	STK00
                                    1-  418     	BANKSEL	___sdcc_saved_fsr
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  419     	MOVR	___sdcc_saved_fsr,W
     0035 0084                      1-  420     	MOVAR	FSR
     0036 01rr                      1-  421     	MOVR	PSAVE,W
     0037 008A                      1-  422     	MOVAR	PCHBUF
     0038 0283                      1-  423     	CLRR	STATUS
     0039 15rr                      1-  424     	SWAPR	SSAVE,W
     003A 0083                      1-  425     	MOVAR	STATUS
     003B 15rr                      1-  426     	SWAPR	WSAVE,F
     003C 15rr                      1-  427     	SWAPR	WSAVE,W
     003D                           1-  428     END_OF_INTERRUPT:
     003D 0011                      1-  429     	RETIE	
                                    1-  431     ;--------------------------------------------------------
                                    1-  432     ; code
                                    1-  433     ;--------------------------------------------------------
                                    1-  434     ;***
                                    1-  435     ;  pBlock Stats: dbName = M
                                    1-  436     ;***
                                    1-  437     ;has an exit
                                    1-  438     ;functions called:
                                    1-  439     ;   _initSys
                                    1-  440     ;   _KeyScan
                                    1-  441     ;   _keyRead
                                    1-  442     ;   _nextorSleep
                                    1-  443     ;   _initSys
                                    1-  444     ;   _KeyScan
                                    1-  445     ;   _keyRead
                                    1-  446     ;   _nextorSleep
                                    1-  447     ;1 compiler assigned register :
                                    1-  448     ;   r0x101B
                                    1-  449     ;; Starting pCode block
                                    1-  450     .segment "code"; module=main, function=_main
     0000                           1-  452     _main:
                                    1-  453     ; 2 exit points
                                    1-  454     	.line	331, "main.c"; 	initSys();
     0000 2rrr                      1-  455     	LCALL	_initSys
                                    1-  456     	.line	332, "main.c"; 	PORTB = 0xFF;
     0001 21FF                      1-  457     	MOVIA	0xff
     0002 00rr                      1-  458     	MOVAR	_PORTB
     0003                           1-  459     _00207_DS_:
                                    1-  460     	.line	335, "main.c"; 	CLRWDT();	
     0003 0002                      1-  461     	clrwdt
                                    1-  462     	.line	336, "main.c"; 	if(!INTFLAG)
                                    1-  463     	BANKSEL	_INTFLAG
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1-  464     	MOVR	_INTFLAG,W
     0006 0D03                      1-  465     	BTRSC	STATUS,2
     0007 3rrr                      1-  466     	LGOTO	_00207_DS_
                                    1-  467     	.line	338, "main.c"; 	INTFLAG = 0;
     0008 02rr                      1-  468     	CLRR	_INTFLAG
                                    1-  469     	.line	340, "main.c"; 	KeyStatus = KeyScan() & 0x1F;	// Get PB4 ~ PB0 Key Status
     0009 2rrr                      1-  470     	LCALL	_KeyScan
                                    1-  471     	BANKSEL	r0x101B
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1-  472     	MOVAR	r0x101B
     000C 211F                      1-  473     	MOVIA	0x1f
     000D 10rr                      1-  474     	ANDAR	r0x101B,W
                                    1-  475     	BANKSEL	_KeyStatus
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  476     	MOVAR	_KeyStatus
                                    1-  477     	.line	341, "main.c"; 	if(keyRead())
     0010 2rrr                      1-  478     	LCALL	_keyRead
                                    1-  479     	BANKSEL	r0x101B
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1-  480     	MOVAR	r0x101B
     0013 01rr                      1-  481     	MOVR	r0x101B,W
     0014 0D03                      1-  482     	BTRSC	STATUS,2
     0015 3rrr                      1-  483     	LGOTO	_00207_DS_
                                    1-  484     	.line	344, "main.c"; 	nextorSleep();
     0016 2rrr                      1-  485     	LCALL	_nextorSleep
                                    1-  486     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1-  487     	.line	347, "main.c"; 	switch(workStep)
     0017 2101                      1-  488     	MOVIA	0x01
                                    1-  489     	BANKSEL	_workStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1-  490     	SUBAR	_workStep,W
     001A 0803                      1-  491     	BTRSS	STATUS,0
     001B 3rrr                      1-  492     	LGOTO	_00207_DS_
                                    1-  493     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  494     ;;unsigned compare: left >= lit (0x6=6), size=1
     001C 2106                      1-  495     	MOVIA	0x06
     001D 04rr                      1-  496     	SUBAR	_workStep,W
     001E 0C03                      1-  497     	BTRSC	STATUS,0
     001F 3rrr                      1-  498     	LGOTO	_00207_DS_
     0020 06rr                      1-  499     	DECR	_workStep,W
                                    1-  500     	BANKSEL	r0x101B
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 00rr                      1-  501     	MOVAR	r0x101B
     0023 21rr                      1-  502     	MOVIA	((_00228_DS_ >> 8) & 0xff)
     0024 008A                      1-  503     	MOVAR	PCHBUF
     0025 01rr                      1-  504     	MOVR	r0x101B,W
     0026 25rr                      1-  505     	ADDIA	_00228_DS_
     0027 0C03                      1-  506     	BTRSC	STATUS,0
     0028 058A                      1-  507     	INCR	PCHBUF,F
     0029 0082                      1-  508     	MOVAR	PCL
     002A                           1-  509     _00228_DS_:
     002A 3rrr                      1-  510     	LGOTO	_00198_DS_
     002B 3rrr                      1-  511     	LGOTO	_00199_DS_
     002C 3rrr                      1-  512     	LGOTO	_00200_DS_
     002D 3rrr                      1-  513     	LGOTO	_00201_DS_
     002E 3rrr                      1-  514     	LGOTO	_00202_DS_
     002F                           1-  515     _00198_DS_:
                                    1-  516     	.line	350, "main.c"; 	pwmwaitTime = 2;
     002F 2102                      1-  517     	MOVIA	0x02
                                    1-  518     	BANKSEL	_pwmwaitTime
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 00rr                      1-  519     	MOVAR	_pwmwaitTime
                                    1-  520     	.line	351, "main.c"; 	pwmLmax = 16;
     0032 2110                      1-  521     	MOVIA	0x10
                                    1-  522     	BANKSEL	_pwmLmax
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1-  523     	MOVAR	_pwmLmax
                                    1-  524     	.line	352, "main.c"; 	break;
     0035 3rrr                      1-  525     	LGOTO	_00207_DS_
     0036                           1-  526     _00199_DS_:
                                    1-  527     	.line	354, "main.c"; 	pwmwaitTime = 4;
     0036 2104                      1-  528     	MOVIA	0x04
                                    1-  529     	BANKSEL	_pwmwaitTime
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1-  530     	MOVAR	_pwmwaitTime
                                    1-  531     	.line	355, "main.c"; 	pwmLmax = 16;
     0039 2110                      1-  532     	MOVIA	0x10
                                    1-  533     	BANKSEL	_pwmLmax
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 00rr                      1-  534     	MOVAR	_pwmLmax
                                    1-  535     	.line	356, "main.c"; 	break;
     003C 3rrr                      1-  536     	LGOTO	_00207_DS_
     003D                           1-  537     _00200_DS_:
                                    1-  538     	.line	358, "main.c"; 	pwmwaitTime = 6;
     003D 2106                      1-  539     	MOVIA	0x06
                                    1-  540     	BANKSEL	_pwmwaitTime
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 00rr                      1-  541     	MOVAR	_pwmwaitTime
                                    1-  542     	.line	359, "main.c"; 	pwmLmax = 16;
     0040 2110                      1-  543     	MOVIA	0x10
                                    1-  544     	BANKSEL	_pwmLmax
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 00rr                      1-  545     	MOVAR	_pwmLmax
                                    1-  546     	.line	360, "main.c"; 	break;
     0043 3rrr                      1-  547     	LGOTO	_00207_DS_
     0044                           1-  548     _00201_DS_:
                                    1-  549     	.line	362, "main.c"; 	pwmwaitTime = 9;
     0044 2109                      1-  550     	MOVIA	0x09
                                    1-  551     	BANKSEL	_pwmwaitTime
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 00rr                      1-  552     	MOVAR	_pwmwaitTime
                                    1-  553     	.line	363, "main.c"; 	pwmLmax = 8;
     0047 2108                      1-  554     	MOVIA	0x08
                                    1-  555     	BANKSEL	_pwmLmax
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 00rr                      1-  556     	MOVAR	_pwmLmax
                                    1-  557     	.line	364, "main.c"; 	break;
     004A 3rrr                      1-  558     	LGOTO	_00207_DS_
     004B                           1-  559     _00202_DS_:
                                    1-  560     	.line	366, "main.c"; 	pwmwaitTime = 12;
     004B 210C                      1-  561     	MOVIA	0x0c
                                    1-  562     	BANKSEL	_pwmwaitTime
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 00rr                      1-  563     	MOVAR	_pwmwaitTime
                                    1-  564     	.line	367, "main.c"; 	pwmLmax = 8;
     004E 2108                      1-  565     	MOVIA	0x08
                                    1-  566     	BANKSEL	_pwmLmax
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1-  567     	MOVAR	_pwmLmax
                                    1-  568     	.line	369, "main.c"; 	}
     0051 3rrr                      1-  569     	LGOTO	_00207_DS_
                                    1-  570     	.line	376, "main.c"; 	}
                                    1-  571     	RETURN	
     0052 0010                      3-   26 m1      ret
                                    1-  572     ; exit point of _main
                                    1-  574     ;***
                                    1-  575     ;  pBlock Stats: dbName = C
                                    1-  576     ;***
                                    1-  577     ;has an exit
                                    1-  578     ;6 compiler assigned registers:
                                    1-  579     ;   r0x1015
                                    1-  580     ;   STK00
                                    1-  581     ;   r0x1016
                                    1-  582     ;   r0x1017
                                    1-  583     ;   r0x1018
                                    1-  584     ;   r0x1019
                                    1-  585     ;; Starting pCode block
                                    1-  586     .segment "code"; module=main, function=_delay
                                    1-  588     ;local variable name mapping:
     0000                           1-  593     _delay:
                                    1-  594     ; 2 exit points
                                    1-  595     	.line	411, "main.c"; 	void delay(int count)
                                    1-  596     	BANKSEL	r0x1015
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  597     	MOVAR	r0x1015
     0002 01rr                      1-  598     	MOVR	STK00,W
                                    1-  599     	BANKSEL	r0x1016
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  600     	MOVAR	r0x1016
                                    1-  601     	.line	414, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1-  602     	MOVIA	0x01
                                    1-  603     	BANKSEL	r0x1017
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  604     	MOVAR	r0x1017
                                    1-  605     	BANKSEL	r0x1018
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1-  606     	CLRR	r0x1018
     000A                           1-  607     _00251_DS_:
                                    1-  608     	BANKSEL	r0x1015
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1-  609     	MOVR	r0x1015,W
     000C 2580                      1-  610     	ADDIA	0x80
                                    1-  611     	BANKSEL	r0x1019
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1-  612     	MOVAR	r0x1019
                                    1-  613     	BANKSEL	r0x1018
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  614     	MOVR	r0x1018,W
     0011 2580                      1-  615     	ADDIA	0x80
                                    1-  616     	BANKSEL	r0x1019
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1-  617     	SUBAR	r0x1019,W
     0014 0903                      1-  618     	BTRSS	STATUS,2
     0015 3rrr                      1-  619     	LGOTO	_00262_DS_
                                    1-  620     	BANKSEL	r0x1017
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1-  621     	MOVR	r0x1017,W
                                    1-  622     	BANKSEL	r0x1016
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1-  623     	SUBAR	r0x1016,W
     001A                           1-  624     _00262_DS_:
     001A 0803                      1-  625     	BTRSS	STATUS,0
     001B 3rrr                      1-  626     	LGOTO	_00253_DS_
                                    1-  627     	BANKSEL	r0x1017
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 05rr                      1-  628     	INCR	r0x1017,F
     001E 0903                      1-  629     	BTRSS	STATUS,2
     001F 3rrr                      1-  630     	LGOTO	_00001_DS_
                                    1-  631     	BANKSEL	r0x1018
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 05rr                      1-  632     	INCR	r0x1018,F
     0022                           1-  633     _00001_DS_:
     0022 3rrr                      1-  634     	LGOTO	_00251_DS_
     0023                           1-  635     _00253_DS_:
                                    1-  636     	.line	416, "main.c"; 	}
                                    1-  637     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1-  638     ; exit point of _delay
                                    1-  640     ;***
                                    1-  641     ;  pBlock Stats: dbName = C
                                    1-  642     ;***
                                    1-  643     ;has an exit
                                    1-  644     ;; Starting pCode block
                                    1-  645     .segment "code"; module=main, function=_keyRead
     0000                           1-  647     _keyRead:
                                    1-  648     ; 2 exit points
                                    1-  649     	.line	393, "main.c"; 	if (KeyStatus & 0x1)
                                    1-  650     	BANKSEL	_KeyStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 08rr                      1-  651     	BTRSS	_KeyStatus,0
     0002 3rrr                      1-  652     	LGOTO	_00242_DS_
                                    1-  653     	.line	395, "main.c"; 	keyCount++;
                                    1-  654     	BANKSEL	_keyCount
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 05rr                      1-  655     	INCR	_keyCount,F
                                    1-  656     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1-  657     	.line	396, "main.c"; 	if(keyCount >= 10)
     0005 210A                      1-  658     	MOVIA	0x0a
     0006 04rr                      1-  659     	SUBAR	_keyCount,W
     0007 0803                      1-  660     	BTRSS	STATUS,0
     0008 3rrr                      1-  661     	LGOTO	_00243_DS_
                                    1-  662     	.line	397, "main.c"; 	keyCount = 10;
     0009 210A                      1-  663     	MOVIA	0x0a
     000A 00rr                      1-  664     	MOVAR	_keyCount
     000B 3rrr                      1-  665     	LGOTO	_00243_DS_
                                    1-  666     ;;unsigned compare: left < lit (0xA=10), size=1
     000C                           1-  667     _00242_DS_:
                                    1-  668     	.line	401, "main.c"; 	if(keyCount >= 10)
     000C 210A                      1-  669     	MOVIA	0x0a
                                    1-  670     	BANKSEL	_keyCount
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  671     	SUBAR	_keyCount,W
     000F 0803                      1-  672     	BTRSS	STATUS,0
     0010 3rrr                      1-  673     	LGOTO	_00240_DS_
                                    1-  674     	.line	403, "main.c"; 	keyCount = 0;
     0011 02rr                      1-  675     	CLRR	_keyCount
                                    1-  676     	.line	404, "main.c"; 	return 1;
     0012 2101                      1-  677     	MOVIA	0x01
     0013 3rrr                      1-  678     	LGOTO	_00244_DS_
     0014                           1-  679     _00240_DS_:
                                    1-  680     	.line	406, "main.c"; 	keyCount = 0;
                                    1-  681     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 02rr                      1-  682     	CLRR	_keyCount
     0016                           1-  683     _00243_DS_:
                                    1-  684     	.line	408, "main.c"; 	return 0;
     0016 2100                      1-  685     	MOVIA	0x00
     0017                           1-  686     _00244_DS_:
                                    1-  687     	.line	409, "main.c"; 	}
                                    1-  688     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1-  689     ; exit point of _keyRead
                                    1-  691     ;***
                                    1-  692     ;  pBlock Stats: dbName = C
                                    1-  693     ;***
                                    1-  694     ;has an exit
                                    1-  695     ;1 compiler assigned register :
                                    1-  696     ;   r0x101A
                                    1-  697     ;; Starting pCode block
                                    1-  698     .segment "code"; module=main, function=_KeyScan
                                    1-  700     ;local variable name mapping:
     0000                           1-  702     _KeyScan:
                                    1-  703     ; 2 exit points
                                    1-  704     	.line	384, "main.c"; 	KeyStatus = ~PORTA;
     0000 07rr                      1-  705     	COMR	_PORTA,W
                                    1-  706     ;;1	MOVAR	r0x101A
                                    1-  707     	.line	387, "main.c"; 	}
                                    1-  708     	RETURN	
     0001 0010                      3-   26 m1      ret
                                    1-  709     ; exit point of _KeyScan
                                    1-  711     ;***
                                    1-  712     ;  pBlock Stats: dbName = C
                                    1-  713     ;***
                                    1-  714     ;has an exit
                                    1-  715     ;; Starting pCode block
                                    1-  716     .segment "code"; module=main, function=_initSys
     0000                           1-  718     _initSys:
                                    1-  719     ; 2 exit points
                                    1-  720     	.line	290, "main.c"; 	IOSTA =  0x01; 					//PA0输入模式，其他输出模式
     0000 2101                      1-  721     	MOVIA	0x01
     0001 000r                      1-  722     	IOST	_IOSTA
                                    1-  723     	.line	291, "main.c"; 	IOSTB = C_PB0_Input | C_PB1_Input;		//PB输出模式
     0002 2103                      1-  724     	MOVIA	0x03
     0003 000r                      1-  725     	IOST	_IOSTB
                                    1-  726     	.line	292, "main.c"; 	ABPLCON = 0x21;
     0004 2121                      1-  727     	MOVIA	0x21
     0005 00rr                      1-  728     	MOVAR	_ABPLCON
                                    1-  729     	.line	293, "main.c"; 	APHCON  = 0x00;
     0006 0200                      1-  730     	CLRA	
     0007 000r                      1-  731     	IOST	_APHCON
                                    1-  732     	.line	294, "main.c"; 	BPHCON  = 0x00;
     0008 02rr                      1-  733     	CLRR	_BPHCON
                                    1-  734     	.line	295, "main.c"; 	AWUCON = 0x01;
     0009 2101                      1-  735     	MOVIA	0x01
     000A 00rr                      1-  736     	MOVAR	_AWUCON
                                    1-  737     	.line	296, "main.c"; 	BWUCON = 0x00;
     000B 02rr                      1-  738     	CLRR	_BWUCON
                                    1-  739     	.line	297, "main.c"; 	PACON = 0x00;
     000C 02rr                      1-  740     	CLRR	_PACON
                                    1-  741     	.line	298, "main.c"; 	PORTB = 0xFF;                           // PB0、PB1 & PB2 are output High
     000D 21FF                      1-  742     	MOVIA	0xff
     000E 00rr                      1-  743     	MOVAR	_PORTB
                                    1-  744     	.line	299, "main.c"; 	PORTA = 0xFF;
     000F 00rr                      1-  745     	MOVAR	_PORTA
                                    1-  746     	.line	300, "main.c"; 	DISI();
     0010 0013                      1-  747     	DISI
                                    1-  748     	.line	302, "main.c"; 	PCON1 = C_TMR0_Dis;						// Disable Timer0
     0011 0200                      1-  749     	CLRA	
     0012 000r                      1-  750     	IOST	_PCON1
                                    1-  751     	.line	310, "main.c"; 	TMR1 = 0xFF;							// Load 0xFF to TMR1 (Initial Timer1 register)
     0013 21FF                      1-  752     	MOVIA	0xff
     0014 00rr                      1-  753     	SFUN	_TMR1
                                    1-  754     	.line	311, "main.c"; 	TMRH = 0x30;
     0015 2130                      1-  755     	MOVIA	0x30
     0016 00rr                      1-  756     	MOVAR	_TMRH
                                    1-  757     	.line	312, "main.c"; 	T1CR1 = C_TMR1_Reload | C_TMR1_En;      // Enable Timer1, Initial value reloaded from TMR1, Non-stop mode 
     0017 2103                      1-  758     	MOVIA	0x03
     0018 00rr                      1-  759     	SFUN	_T1CR1
                                    1-  760     	.line	313, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div256;	// Enable Prescaler1, Prescaler1 dividing rate = 1:4, Timer1 clock source is instruction clock
     0019 2107                      1-  761     	MOVIA	0x07
     001A 00rr                      1-  762     	SFUN	_T1CR2
                                    1-  763     	.line	316, "main.c"; 	INTE = C_INT_WDT | C_INT_TMR1;	// Enable Timer0、Timer1、WDT overflow interrupt
     001B 2148                      1-  764     	MOVIA	0x48
     001C 00rr                      1-  765     	MOVAR	_INTE
                                    1-  766     	.line	317, "main.c"; 	INTF = 0;
     001D 02rr                      1-  767     	CLRR	_INTF
                                    1-  768     	.line	319, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     001E 2188                      1-  769     	MOVIA	0x88
     001F 00rr                      1-  770     	MOVAR	_PCON
                                    1-  771     	.line	322, "main.c"; 	PCON1 = C_TMR1_En;						// Enable Timer1
     0020 2101                      1-  772     	MOVIA	0x01
     0021 000r                      1-  773     	IOST	_PCON1
                                    1-  774     	.line	323, "main.c"; 	ENI();									// Enable all unmasked interrupts										// Enable all unmasked interrupts	
     0022 0004                      1-  775     	ENI
                                    1-  776     	.line	325, "main.c"; 	}
                                    1-  777     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1-  778     ; exit point of _initSys
                                    1-  780     ;***
                                    1-  781     ;  pBlock Stats: dbName = C
                                    1-  782     ;***
                                    1-  783     ;has an exit
                                    1-  784     ;; Starting pCode block
                                    1-  785     .segment "code"; module=main, function=_pwmWork
     0000                           1-  787     _pwmWork:
                                    1-  788     ; 2 exit points
                                    1-  789     	.line	246, "main.c"; 	if(pwm1L)
                                    1-  790     	BANKSEL	_pwm1L
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1-  791     	MOVR	_pwm1L,W
     0002 0D03                      1-  792     	BTRSC	STATUS,2
     0003 3rrr                      1-  793     	LGOTO	_00185_DS_
                                    1-  794     	.line	248, "main.c"; 	pwm1L--;
     0004 06rr                      1-  795     	DECR	_pwm1L,F
                                    1-  796     	.line	249, "main.c"; 	PORTA |= 0x08;
     0005 19rr                      1-  797     	BSR	_PORTA,3
                                    1-  798     	.line	250, "main.c"; 	PORTA &= 0xEF;
     0006 1Err                      1-  799     	BCR	_PORTA,4
                                    1-  800     	.line	251, "main.c"; 	pwmwait = 0;
                                    1-  801     	BANKSEL	_pwmwait
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  802     	CLRR	_pwmwait
                                    1-  803     	.line	252, "main.c"; 	pwm2L = 0;
                                    1-  804     	BANKSEL	_pwm2L
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1-  805     	CLRR	_pwm2L
     000B 3rrr                      1-  806     	LGOTO	_00187_DS_
     000C                           1-  807     _00185_DS_:
                                    1-  808     	.line	254, "main.c"; 	else if(pwm2L)
                                    1-  809     	BANKSEL	_pwm2L
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  810     	MOVR	_pwm2L,W
     000E 0D03                      1-  811     	BTRSC	STATUS,2
     000F 3rrr                      1-  812     	LGOTO	_00182_DS_
                                    1-  813     	.line	257, "main.c"; 	pwm2L--;
     0010 06rr                      1-  814     	DECR	_pwm2L,F
                                    1-  815     	.line	258, "main.c"; 	PORTA |= 0x10;
     0011 1Arr                      1-  816     	BSR	_PORTA,4
                                    1-  817     	.line	259, "main.c"; 	PORTA &= 0xF7;
     0012 1Drr                      1-  818     	BCR	_PORTA,3
                                    1-  819     	.line	260, "main.c"; 	pwmwait = 0;
                                    1-  820     	BANKSEL	_pwmwait
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1-  821     	CLRR	_pwmwait
                                    1-  822     	.line	261, "main.c"; 	pwm1L = 0;
                                    1-  823     	BANKSEL	_pwm1L
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1-  824     	CLRR	_pwm1L
     0017 3rrr                      1-  825     	LGOTO	_00187_DS_
     0018                           1-  826     _00182_DS_:
                                    1-  827     	.line	265, "main.c"; 	pwmwait++;
                                    1-  828     	BANKSEL	_pwmwait
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 05rr                      1-  829     	INCR	_pwmwait,F
                                    1-  830     	.line	266, "main.c"; 	if(pwmwait == pwmwaitTime)
                                    1-  831     	BANKSEL	_pwmwaitTime
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  832     	MOVR	_pwmwaitTime,W
                                    1-  833     	BANKSEL	_pwmwait
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 12rr                      1-  834     	XORAR	_pwmwait,W
     001E 0903                      1-  835     	BTRSS	STATUS,2
     001F 3rrr                      1-  836     	LGOTO	_00180_DS_
                                    1-  837     	.line	268, "main.c"; 	if(pwmStep)
                                    1-  838     	BANKSEL	_pwmStep
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  839     	MOVR	_pwmStep,W
     0022 0D03                      1-  840     	BTRSC	STATUS,2
     0023 3rrr                      1-  841     	LGOTO	_00177_DS_
                                    1-  842     	.line	270, "main.c"; 	pwm1L = pwmLmax;
                                    1-  843     	BANKSEL	_pwmLmax
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  844     	MOVR	_pwmLmax,W
                                    1-  845     	BANKSEL	_pwm1L
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1-  846     	MOVAR	_pwm1L
                                    1-  847     	.line	271, "main.c"; 	pwmStep = 0;
                                    1-  848     	BANKSEL	_pwmStep
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1-  849     	CLRR	_pwmStep
     002A 3rrr                      1-  850     	LGOTO	_00180_DS_
     002B                           1-  851     _00177_DS_:
                                    1-  852     	.line	275, "main.c"; 	pwm2L = pwmLmax;
                                    1-  853     	BANKSEL	_pwmLmax
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1-  854     	MOVR	_pwmLmax,W
                                    1-  855     	BANKSEL	_pwm2L
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1-  856     	MOVAR	_pwm2L
                                    1-  857     	.line	276, "main.c"; 	pwmStep = 1;
     002F 2101                      1-  858     	MOVIA	0x01
                                    1-  859     	BANKSEL	_pwmStep
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 00rr                      1-  860     	MOVAR	_pwmStep
     0032                           1-  861     _00180_DS_:
                                    1-  862     	.line	281, "main.c"; 	PORTA |= 0x18;
     0032 2118                      1-  863     	MOVIA	0x18
     0033 11rr                      1-  864     	IORAR	_PORTA,F
     0034                           1-  865     _00187_DS_:
                                    1-  866     	.line	284, "main.c"; 	}
                                    1-  867     	RETURN	
     0034 0010                      3-   26 m1      ret
                                    1-  868     ; exit point of _pwmWork
                                    1-  870     ;***
                                    1-  871     ;  pBlock Stats: dbName = C
                                    1-  872     ;***
                                    1-  873     ;has an exit
                                    1-  874     ;; Starting pCode block
                                    1-  875     .segment "code"; module=main, function=_ledOn
     0000                           1-  877     _ledOn:
                                    1-  878     ; 2 exit points
                                    1-  879     	.line	240, "main.c"; 	PORTB &= 0xF3;
     0000 21F3                      1-  880     	MOVIA	0xf3
     0001 10rr                      1-  881     	ANDAR	_PORTB,F
                                    1-  882     	.line	241, "main.c"; 	PORTA &= 0x5B;
     0002 215B                      1-  883     	MOVIA	0x5b
     0003 10rr                      1-  884     	ANDAR	_PORTA,F
                                    1-  885     	.line	242, "main.c"; 	}
                                    1-  886     	RETURN	
     0004 0010                      3-   26 m1      ret
                                    1-  887     ; exit point of _ledOn
                                    1-  889     ;***
                                    1-  890     ;  pBlock Stats: dbName = C
                                    1-  891     ;***
                                    1-  892     ;has an exit
                                    1-  893     ;1 compiler assigned register :
                                    1-  894     ;   r0x101C
                                    1-  895     ;; Starting pCode block
                                    1-  896     .segment "code"; module=main, function=_ledOff
     0000                           1-  898     _ledOff:
                                    1-  899     ; 2 exit points
                                    1-  900     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1-  901     	.line	207, "main.c"; 	switch(workStep)
     0000 2101                      1-  902     	MOVIA	0x01
                                    1-  903     	BANKSEL	_workStep
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1-  904     	SUBAR	_workStep,W
     0003 0803                      1-  905     	BTRSS	STATUS,0
     0004 3rrr                      1-  906     	LGOTO	_00157_DS_
                                    1-  907     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  908     ;;unsigned compare: left >= lit (0x6=6), size=1
     0005 2106                      1-  909     	MOVIA	0x06
     0006 04rr                      1-  910     	SUBAR	_workStep,W
     0007 0C03                      1-  911     	BTRSC	STATUS,0
     0008 3rrr                      1-  912     	LGOTO	_00157_DS_
     0009 06rr                      1-  913     	DECR	_workStep,W
                                    1-  914     	BANKSEL	r0x101C
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1-  915     	MOVAR	r0x101C
     000C 21rr                      1-  916     	MOVIA	((_00167_DS_ >> 8) & 0xff)
     000D 008A                      1-  917     	MOVAR	PCHBUF
     000E 01rr                      1-  918     	MOVR	r0x101C,W
     000F 25rr                      1-  919     	ADDIA	_00167_DS_
     0010 0C03                      1-  920     	BTRSC	STATUS,0
     0011 058A                      1-  921     	INCR	PCHBUF,F
     0012 0082                      1-  922     	MOVAR	PCL
     0013                           1-  923     _00167_DS_:
     0013 3rrr                      1-  924     	LGOTO	_00151_DS_
     0014 3rrr                      1-  925     	LGOTO	_00152_DS_
     0015 3rrr                      1-  926     	LGOTO	_00153_DS_
     0016 3rrr                      1-  927     	LGOTO	_00154_DS_
     0017 3rrr                      1-  928     	LGOTO	_00155_DS_
     0018                           1-  929     _00151_DS_:
                                    1-  930     	.line	210, "main.c"; 	PORTB &= 0xFB;
     0018 1Drr                      1-  931     	BCR	_PORTB,2
                                    1-  932     	.line	211, "main.c"; 	PORTB |= 0x08;
     0019 19rr                      1-  933     	BSR	_PORTB,3
                                    1-  934     	.line	212, "main.c"; 	PORTA |= 0xA4;
     001A 21A4                      1-  935     	MOVIA	0xa4
     001B 11rr                      1-  936     	IORAR	_PORTA,F
                                    1-  937     	.line	213, "main.c"; 	break;
     001C 3rrr                      1-  938     	LGOTO	_00157_DS_
     001D                           1-  939     _00152_DS_:
                                    1-  940     	.line	215, "main.c"; 	PORTB &= 0xF7;
     001D 1Drr                      1-  941     	BCR	_PORTB,3
                                    1-  942     	.line	216, "main.c"; 	PORTB |= 0x04;
     001E 19rr                      1-  943     	BSR	_PORTB,2
                                    1-  944     	.line	217, "main.c"; 	PORTA |= 0xA4;
     001F 21A4                      1-  945     	MOVIA	0xa4
     0020 11rr                      1-  946     	IORAR	_PORTA,F
                                    1-  947     	.line	218, "main.c"; 	break;
     0021 3rrr                      1-  948     	LGOTO	_00157_DS_
     0022                           1-  949     _00153_DS_:
                                    1-  950     	.line	220, "main.c"; 	PORTB |= 0x0C;
     0022 210C                      1-  951     	MOVIA	0x0c
     0023 11rr                      1-  952     	IORAR	_PORTB,F
                                    1-  953     	.line	221, "main.c"; 	PORTA &= 0xFB;
     0024 1Drr                      1-  954     	BCR	_PORTA,2
                                    1-  955     	.line	222, "main.c"; 	PORTA |= 0xA0;
     0025 21A0                      1-  956     	MOVIA	0xa0
     0026 11rr                      1-  957     	IORAR	_PORTA,F
                                    1-  958     	.line	223, "main.c"; 	break;
     0027 3rrr                      1-  959     	LGOTO	_00157_DS_
     0028                           1-  960     _00154_DS_:
                                    1-  961     	.line	225, "main.c"; 	PORTB |= 0x0C;
     0028 210C                      1-  962     	MOVIA	0x0c
     0029 11rr                      1-  963     	IORAR	_PORTB,F
                                    1-  964     	.line	226, "main.c"; 	PORTA &= 0xDF;
     002A 1Err                      1-  965     	BCR	_PORTA,5
                                    1-  966     	.line	227, "main.c"; 	PORTA |= 0x84;
     002B 2184                      1-  967     	MOVIA	0x84
     002C 11rr                      1-  968     	IORAR	_PORTA,F
                                    1-  969     	.line	228, "main.c"; 	break;
     002D 3rrr                      1-  970     	LGOTO	_00157_DS_
     002E                           1-  971     _00155_DS_:
                                    1-  972     	.line	230, "main.c"; 	PORTB |= 0x0C;
     002E 210C                      1-  973     	MOVIA	0x0c
     002F 11rr                      1-  974     	IORAR	_PORTB,F
                                    1-  975     	.line	231, "main.c"; 	PORTA &= 0x7F;
     0030 1Frr                      1-  976     	BCR	_PORTA,7
                                    1-  977     	.line	232, "main.c"; 	PORTA |= 0x24;
     0031 2124                      1-  978     	MOVIA	0x24
     0032 11rr                      1-  979     	IORAR	_PORTA,F
     0033                           1-  980     _00157_DS_:
                                    1-  981     	.line	236, "main.c"; 	}
                                    1-  982     	RETURN	
     0033 0010                      3-   26 m1      ret
                                    1-  983     ; exit point of _ledOff
                                    1-  985     ;***
                                    1-  986     ;  pBlock Stats: dbName = C
                                    1-  987     ;***
                                    1-  988     ;has an exit
                                    1-  989     ;functions called:
                                    1-  990     ;   _ledOff
                                    1-  991     ;   _ledOn
                                    1-  992     ;   _ledOff
                                    1-  993     ;   _ledOff
                                    1-  994     ;   _ledOff
                                    1-  995     ;   _ledOn
                                    1-  996     ;   _ledOff
                                    1-  997     ;   _ledOff
                                    1-  998     ;; Starting pCode block
                                    1-  999     .segment "code"; module=main, function=_ledWord
     0000                           1- 1001     _ledWord:
                                    1- 1002     ; 2 exit points
                                    1- 1003     	.line	157, "main.c"; 	if(ledTime)
                                    1- 1004     	BANKSEL	_ledTime
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1005     	MOVR	_ledTime,W
     0002 0D03                      1- 1006     	BTRSC	STATUS,2
     0003 3rrr                      1- 1007     	LGOTO	_00144_DS_
                                    1- 1008     	.line	160, "main.c"; 	if(ledOffTime)
                                    1- 1009     	BANKSEL	_ledOffTime
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1010     	MOVR	_ledOffTime,W
     0006 11rr                      1- 1011     	IORAR	(_ledOffTime + 1),W
     0007 0D03                      1- 1012     	BTRSC	STATUS,2
     0008 3rrr                      1- 1013     	LGOTO	_00141_DS_
                                    1- 1014     	.line	163, "main.c"; 	ledOff();
     0009 2rrr                      1- 1015     	LCALL	_ledOff
                                    1- 1016     	.line	164, "main.c"; 	ledOffTime--;	//停止闪烁
     000A 21FF                      1- 1017     	MOVIA	0xff
                                    1- 1018     	BANKSEL	_ledOffTime
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 03rr                      1- 1019     	ADDAR	_ledOffTime,F
     000D 0803                      1- 1020     	BTRSS	STATUS,0
     000E 06rr                      1- 1021     	DECR	(_ledOffTime + 1),F
     000F 3rrr                      1- 1022     	LGOTO	_00146_DS_
     0010                           1- 1023     _00141_DS_:
                                    1- 1024     	.line	169, "main.c"; 	if(ledL)
                                    1- 1025     	BANKSEL	_ledL
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1026     	MOVR	_ledL,W
     0012 0D03                      1- 1027     	BTRSC	STATUS,2
     0013 3rrr                      1- 1028     	LGOTO	_00138_DS_
                                    1- 1029     	.line	171, "main.c"; 	ledL--;
     0014 06rr                      1- 1030     	DECR	_ledL,F
                                    1- 1031     	.line	172, "main.c"; 	ledOn();
     0015 2rrr                      1- 1032     	LCALL	_ledOn
                                    1- 1033     	.line	173, "main.c"; 	ledH = 80;
     0016 2150                      1- 1034     	MOVIA	0x50
                                    1- 1035     	BANKSEL	_ledH
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1036     	MOVAR	_ledH
     0019 3rrr                      1- 1037     	LGOTO	_00146_DS_
     001A                           1- 1038     _00138_DS_:
                                    1- 1039     	.line	177, "main.c"; 	ledH--;
                                    1- 1040     	BANKSEL	_ledH
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 06rr                      1- 1041     	DECR	_ledH,F
                                    1- 1042     	.line	178, "main.c"; 	ledOff();
     001C 2rrr                      1- 1043     	LCALL	_ledOff
                                    1- 1044     	.line	179, "main.c"; 	if(ledH == 0)
                                    1- 1045     	BANKSEL	_ledH
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1046     	MOVR	_ledH,W
     001F 0903                      1- 1047     	BTRSS	STATUS,2
     0020 3rrr                      1- 1048     	LGOTO	_00146_DS_
                                    1- 1049     	.line	181, "main.c"; 	ledL = 20;
     0021 2114                      1- 1050     	MOVIA	0x14
                                    1- 1051     	BANKSEL	_ledL
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 00rr                      1- 1052     	MOVAR	_ledL
                                    1- 1053     	.line	182, "main.c"; 	ledpwmTime--;
                                    1- 1054     	BANKSEL	_ledpwmTime
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 17rr                      1- 1055     	DECRSZ	_ledpwmTime,F
                                    1- 1056     	.line	183, "main.c"; 	if(ledpwmTime == 0)
     0026 3rrr                      1- 1057     	LGOTO	_00146_DS_
                                    1- 1058     	.line	186, "main.c"; 	ledpwmTime = ledpwmTimemax;
     0027 210A                      1- 1059     	MOVIA	0x0a
     0028 00rr                      1- 1060     	MOVAR	_ledpwmTime
                                    1- 1061     	.line	188, "main.c"; 	ledTime--;
                                    1- 1062     	BANKSEL	_ledTime
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 06rr                      1- 1063     	DECR	_ledTime,F
                                    1- 1064     	.line	189, "main.c"; 	ledOffTime = ledOffTimemax;
     002B 21E8                      1- 1065     	MOVIA	0xe8
                                    1- 1066     	BANKSEL	_ledOffTime
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 1067     	MOVAR	_ledOffTime
     002E 2103                      1- 1068     	MOVIA	0x03
     002F 00rr                      1- 1069     	MOVAR	(_ledOffTime + 1)
     0030 3rrr                      1- 1070     	LGOTO	_00146_DS_
     0031                           1- 1071     _00144_DS_:
                                    1- 1072     	.line	198, "main.c"; 	ledOff();
     0031 2rrr                      1- 1073     	LCALL	_ledOff
     0032                           1- 1074     _00146_DS_:
                                    1- 1075     	.line	200, "main.c"; 	}
                                    1- 1076     	RETURN	
     0032 0010                      3-   26 m1      ret
                                    1- 1077     ; exit point of _ledWord
                                    1- 1079     ;***
                                    1- 1080     ;  pBlock Stats: dbName = C
                                    1- 1081     ;***
                                    1- 1082     ;has an exit
                                    1- 1083     ;functions called:
                                    1- 1084     ;   _initSys
                                    1- 1085     ;   _initSys
                                    1- 1086     ;; Starting pCode block
                                    1- 1087     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1089     _gotoSleep:
                                    1- 1090     ; 2 exit points
                                    1- 1091     	.line	141, "main.c"; 	INTE =  C_INT_TMR1 | C_INT_PABKey;	
     0000 210A                      1- 1092     	MOVIA	0x0a
     0001 00rr                      1- 1093     	MOVAR	_INTE
                                    1- 1094     	.line	142, "main.c"; 	PCON =  C_LVR_En;	
     0002 2108                      1- 1095     	MOVIA	0x08
     0003 00rr                      1- 1096     	MOVAR	_PCON
                                    1- 1097     	.line	143, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0004 02rr                      1- 1098     	CLRR	_INTF
                                    1- 1099     	.line	144, "main.c"; 	CLRWDT();							// Clear WatchDog
     0005 0002                      1- 1100     	clrwdt
                                    1- 1101     	.line	146, "main.c"; 	UPDATE_REG(PORTA);					// Read PORTB Data buffer
     0006 01rr                      1- 1102     	MOVR	_PORTA,F
                                    1- 1103     	.line	148, "main.c"; 	SLEEP();
     0007 0001                      1- 1104     	sleep
                                    1- 1105     	.line	149, "main.c"; 	initSys();
     0008 2rrr                      1- 1106     	LCALL	_initSys
                                    1- 1107     	.line	150, "main.c"; 	ledTime = ledTimemax;
     0009 2106                      1- 1108     	MOVIA	0x06
                                    1- 1109     	BANKSEL	_ledTime
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1110     	MOVAR	_ledTime
                                    1- 1111     	.line	151, "main.c"; 	workStep = saveWorkStep;
                                    1- 1112     	BANKSEL	_saveWorkStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 1113     	MOVR	_saveWorkStep,W
                                    1- 1114     	BANKSEL	_workStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1115     	MOVAR	_workStep
                                    1- 1116     	.line	152, "main.c"; 	}
                                    1- 1117     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 1118     ; exit point of _gotoSleep
                                    1- 1120     ;***
                                    1- 1121     ;  pBlock Stats: dbName = C
                                    1- 1122     ;***
                                    1- 1123     ;has an exit
                                    1- 1124     ;functions called:
                                    1- 1125     ;   _gotoSleep
                                    1- 1126     ;   _gotoSleep
                                    1- 1127     ;   _gotoSleep
                                    1- 1128     ;   _gotoSleep
                                    1- 1129     ;; Starting pCode block
                                    1- 1130     .segment "code"; module=main, function=_nextorSleep
     0000                           1- 1132     _nextorSleep:
                                    1- 1133     ; 2 exit points
                                    1- 1134     	.line	112, "main.c"; 	saveWorkStep = workStep;
                                    1- 1135     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1136     	MOVR	_workStep,W
                                    1- 1137     	BANKSEL	_saveWorkStep
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1- 1138     	MOVAR	_saveWorkStep
                                    1- 1139     	.line	113, "main.c"; 	workStep = 0;
                                    1- 1140     	BANKSEL	_workStep
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1141     	CLRR	_workStep
                                    1- 1142     	.line	114, "main.c"; 	PORTA = 0xFF;
     0006 21FF                      1- 1143     	MOVIA	0xff
     0007 00rr                      1- 1144     	MOVAR	_PORTA
                                    1- 1145     	.line	115, "main.c"; 	PORTB = 0xFF;
     0008 00rr                      1- 1146     	MOVAR	_PORTB
                                    1- 1147     	.line	116, "main.c"; 	if(ledTime)
                                    1- 1148     	BANKSEL	_ledTime
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1- 1149     	MOVR	_ledTime,W
     000B 0D03                      1- 1150     	BTRSC	STATUS,2
     000C 3rrr                      1- 1151     	LGOTO	_00122_DS_
                                    1- 1152     	.line	118, "main.c"; 	workStep = saveWorkStep;
                                    1- 1153     	BANKSEL	_saveWorkStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 1154     	MOVR	_saveWorkStep,W
                                    1- 1155     	BANKSEL	_workStep
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 1156     	MOVAR	_workStep
                                    1- 1157     	.line	119, "main.c"; 	workStep++;
     0011 05rr                      1- 1158     	INCR	_workStep,F
                                    1- 1159     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1160     	.line	120, "main.c"; 	if(workStep >= 6)
     0012 2106                      1- 1161     	MOVIA	0x06
     0013 04rr                      1- 1162     	SUBAR	_workStep,W
     0014 0803                      1- 1163     	BTRSS	STATUS,0
     0015 3rrr                      1- 1164     	LGOTO	_00119_DS_
                                    1- 1165     	.line	122, "main.c"; 	workStep = 0;
     0016 02rr                      1- 1166     	CLRR	_workStep
                                    1- 1167     	.line	123, "main.c"; 	ledTime = 0;
                                    1- 1168     	BANKSEL	_ledTime
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 02rr                      1- 1169     	CLRR	_ledTime
                                    1- 1170     	.line	124, "main.c"; 	saveWorkStep = 1;
     0019 2101                      1- 1171     	MOVIA	0x01
                                    1- 1172     	BANKSEL	_saveWorkStep
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1- 1173     	MOVAR	_saveWorkStep
                                    1- 1174     	.line	125, "main.c"; 	gotoSleep();
     001C 2rrr                      1- 1175     	LCALL	_gotoSleep
     001D 3rrr                      1- 1176     	LGOTO	_00124_DS_
     001E                           1- 1177     _00119_DS_:
                                    1- 1178     	.line	129, "main.c"; 	ledTime = ledTimemax;
     001E 2106                      1- 1179     	MOVIA	0x06
                                    1- 1180     	BANKSEL	_ledTime
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 1181     	MOVAR	_ledTime
     0021 3rrr                      1- 1182     	LGOTO	_00124_DS_
     0022                           1- 1183     _00122_DS_:
                                    1- 1184     	.line	134, "main.c"; 	gotoSleep();
     0022 2rrr                      1- 1185     	LCALL	_gotoSleep
     0023                           1- 1186     _00124_DS_:
                                    1- 1187     	.line	136, "main.c"; 	}
                                    1- 1188     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1- 1189     ; exit point of _nextorSleep
                                    1- 1192     ;	code size estimation:
                                    1- 1193     ;	  368+   83 =   451 instructions ( 1068 byte)
                                    1- 1195     	end
                                    1- 1195     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    00000022
_00106_DS_              Label    00000020
_00110_DS_              Label    00000029
_00113_DS_              Label    0000002D
_00119_DS_              Label    0000001E
_00122_DS_              Label    00000022
_00124_DS_              Label    00000023
_00138_DS_              Label    0000001A
_00141_DS_              Label    00000010
_00144_DS_              Label    00000031
_00146_DS_              Label    00000032
_00151_DS_              Label    00000018
_00152_DS_              Label    0000001D
_00153_DS_              Label    00000022
_00154_DS_              Label    00000028
_00155_DS_              Label    0000002E
_00157_DS_              Label    00000033
_00167_DS_              Label    00000013
_00177_DS_              Label    0000002B
_00180_DS_              Label    00000032
_00182_DS_              Label    00000018
_00185_DS_              Label    0000000C
_00187_DS_              Label    00000034
_00198_DS_              Label    0000002F
_00199_DS_              Label    00000036
_00200_DS_              Label    0000003D
_00201_DS_              Label    00000044
_00202_DS_              Label    0000004B
_00207_DS_              Label    00000003
_00228_DS_              Label    0000002A
_00240_DS_              Label    00000014
_00242_DS_              Label    0000000C
_00243_DS_              Label    00000016
_00244_DS_              Label    00000017
_00251_DS_              Label    0000000A
_00253_DS_              Label    00000023
_00262_DS_              Label    0000001A
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_CMPCR                  Label    00000000
_delay                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_INTFLAG                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_KeyScan                Label    00000000
_KeyStatus              Label    00000000
_ledH                   Label    00000000
_ledL                   Label    00000000
_ledOff                 Label    00000000
_ledOffTime             Label    00000000
_ledOn                  Label    00000000
_ledpwmTime             Label    00000000
_ledTime                Label    00000000
_ledWord                Label    00000000
_main                   Label    00000000
_nextorSleep            Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_pwm1L                  Label    00000000
_PWM2DUTY               Label    00000000
_pwm2L                  Label    00000000
_PWM3DUTY               Label    00000000
_pwmHmax                Label    00000000
_pwmLmax                Label    00000000
_pwmStep                Label    00000000
_pwmwait                Label    00000000
_pwmwaitTime            Label    00000000
_pwmWork                Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_saveWorkStep           Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    0000003D
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1015                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
