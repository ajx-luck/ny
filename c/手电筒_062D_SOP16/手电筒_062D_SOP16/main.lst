
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduchar
                                    1-   15     	extern	__divuint
                                    1-   16     	extern	__moduint
                                    1-   17     	extern	_PORTAbits
                                    1-   18     	extern	_PORTBbits
                                    1-   19     	extern	_PCONbits
                                    1-   20     	extern	_BWUCONbits
                                    1-   21     	extern	_ABPLCONbits
                                    1-   22     	extern	_BPHCONbits
                                    1-   23     	extern	_INTEbits
                                    1-   24     	extern	_INTFbits
                                    1-   25     	extern	_ADMDbits
                                    1-   26     	extern	_ADRbits
                                    1-   27     	extern	_ADVREFHbits
                                    1-   28     	extern	_ADCRbits
                                    1-   29     	extern	_AWUCONbits
                                    1-   30     	extern	_PACONbits
                                    1-   31     	extern	_INTEDGbits
                                    1-   32     	extern	_ANAENbits
                                    1-   33     	extern	_RFCbits
                                    1-   34     	extern	_INTE2bits
                                    1-   35     	extern	_INDF
                                    1-   36     	extern	_TMR0
                                    1-   37     	extern	_PCL
                                    1-   38     	extern	_STATUS
                                    1-   39     	extern	_FSR
                                    1-   40     	extern	_PORTA
                                    1-   41     	extern	_PORTB
                                    1-   42     	extern	_PCON
                                    1-   43     	extern	_BWUCON
                                    1-   44     	extern	_PCHBUF
                                    1-   45     	extern	_ABPLCON
                                    1-   46     	extern	_BPHCON
                                    1-   47     	extern	_INTE
                                    1-   48     	extern	_INTF
                                    1-   49     	extern	_ADMD
                                    1-   50     	extern	_ADR
                                    1-   51     	extern	_ADD
                                    1-   52     	extern	_ADVREFH
                                    1-   53     	extern	_ADCR
                                    1-   54     	extern	_AWUCON
                                    1-   55     	extern	_PACON
                                    1-   56     	extern	_INTEDG
                                    1-   57     	extern	_TMRH
                                    1-   58     	extern	_ANAEN
                                    1-   59     	extern	_RFC
                                    1-   60     	extern	_TM3RH
                                    1-   61     	extern	_INTE2
                                    1-   62     	extern	_TMR1
                                    1-   63     	extern	_T1CR1
                                    1-   64     	extern	_T1CR2
                                    1-   65     	extern	_PWM1DUTY
                                    1-   66     	extern	_PS1CV
                                    1-   67     	extern	_BZ1CR
                                    1-   68     	extern	_IRCR
                                    1-   69     	extern	_TBHP
                                    1-   70     	extern	_TBHD
                                    1-   71     	extern	_TMR2
                                    1-   72     	extern	_T2CR1
                                    1-   73     	extern	_T2CR2
                                    1-   74     	extern	_PWM2DUTY
                                    1-   75     	extern	_PS2CV
                                    1-   76     	extern	_BZ2CR
                                    1-   77     	extern	_OSCCR
                                    1-   78     	extern	_TMR3
                                    1-   79     	extern	_T3CR1
                                    1-   80     	extern	_T3CR2
                                    1-   81     	extern	_PWM3DUTY
                                    1-   82     	extern	_PS3CV
                                    1-   83     	extern	_BZ3CR
                                    1-   84     	extern	_IOSTA
                                    1-   85     	extern	_IOSTB
                                    1-   86     	extern	_APHCON
                                    1-   87     	extern	_PS0CV
                                    1-   88     	extern	_BODCON
                                    1-   89     	extern	_CMPCR
                                    1-   90     	extern	_PCON1
                                    1-   91     	extern	_T0MD
                                    1-   92     	extern	___sdcc_saved_fsr
                                    1-   93     	extern	___sdcc_saved_stk00
                                    1-   94     	extern	___sdcc_saved_stk01
                                    1-   95     	extern	__nyc_ny8_startup
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     ; global declarations
                                    1-   98     ;--------------------------------------------------------
                                    1-   99     	extern	_initAD
                                    1-  100     	extern	_delay
                                    1-  101     	extern	_F_wait_eoc
                                    1-  102     	extern	_F_AIN4_Convert
                                    1-  103     	extern	_checkBat
                                    1-  104     	extern	_keyRead
                                    1-  105     	extern	_ledSlaveCtr
                                    1-  106     	extern	_ledMasterCtr
                                    1-  107     	extern	_keyCon
                                    1-  108     	extern	_setPWMduty
                                    1-  109     	extern	_mode4
                                    1-  110     	extern	_chrgLed
                                    1-  111     	extern	_timeCtr
                                    1-  112     	extern	_gotoSleep
                                    1-  113     	extern	_init
                                    1-  114     	extern	_isr
                                    1-  115     	extern	_main
                                    1-  116     	extern	_closeledSlave
                                    1-  117     	extern	_intCount
                                    1-  118     	extern	_IntFlag
                                    1-  119     	extern	_keyClick
                                    1-  120     	extern	_longPressFlag
                                    1-  121     	extern	_keyNub
                                    1-  122     	extern	_keyCount
                                    1-  123     	extern	_R_AIN4_DATA
                                    1-  124     	extern	_sumR_AIN4_DATA
                                    1-  125     	extern	_adtime
                                    1-  126     	extern	_R_AIN4_DATA_LB
                                    1-  127     	extern	_workStep1
                                    1-  128     	extern	_workStep2
                                    1-  129     	extern	_workStep3
                                    1-  130     	extern	_batStep
                                    1-  131     	extern	_ledTime
                                    1-  132     	extern	_count500ms
                                    1-  133     	extern	_count200ms
                                    1-  134     	extern	_count276ms
                                    1-  135     	extern	_count10min
                                    1-  136     	extern	_countms
                                    1-  137     	extern	_K1Count
                                    1-  138     	extern	_K2Count
                                    1-  139     	extern	_ledCount
                                    1-  140     	extern	_ledMin
                                    1-  141     	extern	_ledMax
                                    1-  142     	extern	_ledLock
                                    1-  143     	extern	_flickerTime
                                    1-  144     	extern	_sleepDelay
                                    1-  145     	extern	_ledDuty
                                    1-  146     	extern	_firstFlag
                                    1-  148     	extern PSAVE
                                    1-  149     	extern SSAVE
                                    1-  150     	extern WSAVE
                                    1-  151     	extern STK12
                                    1-  152     	extern STK11
                                    1-  153     	extern STK10
                                    1-  154     	extern STK09
                                    1-  155     	extern STK08
                                    1-  156     	extern STK07
                                    1-  157     	extern STK06
                                    1-  158     	extern STK05
                                    1-  159     	extern STK04
                                    1-  160     	extern STK03
                                    1-  161     	extern STK02
                                    1-  162     	extern STK01
                                    1-  163     	extern STK00
                                    1-  165     .segment "uninit", 0x20000040
 20000040                           1-  166     PSAVE:
                                    1-  167     	.res 1
 20000041                           1-  168     SSAVE:
                                    1-  169     	.res 1
 20000042                           1-  170     WSAVE:
                                    1-  171     	.res 1
 20000043                           1-  172     STK12:
                                    1-  173     	.res 1
 20000044                           1-  174     STK11:
                                    1-  175     	.res 1
 20000045                           1-  176     STK10:
                                    1-  177     	.res 1
 20000046                           1-  178     STK09:
                                    1-  179     	.res 1
 20000047                           1-  180     STK08:
                                    1-  181     	.res 1
 20000048                           1-  182     STK07:
                                    1-  183     	.res 1
 20000049                           1-  184     STK06:
                                    1-  185     	.res 1
 2000004A                           1-  186     STK05:
                                    1-  187     	.res 1
 2000004B                           1-  188     STK04:
                                    1-  189     	.res 1
 2000004C                           1-  190     STK03:
                                    1-  191     	.res 1
 2000004D                           1-  192     STK02:
                                    1-  193     	.res 1
 2000004E                           1-  194     STK01:
                                    1-  195     	.res 1
 2000004F                           1-  196     STK00:
                                    1-  197     	.res 1
                                    1-  199     ;--------------------------------------------------------
                                    1-  200     ; global definitions
                                    1-  201     ;--------------------------------------------------------
                                    1-  202     .segment "uninit"
     0000                           1-  203     _R_AIN4_DATA:
                                    1-  204     	.res	2
                                    1-  207     .segment "uninit"
     0000                           1-  208     _sumR_AIN4_DATA:
                                    1-  209     	.res	2
                                    1-  212     .segment "uninit"
     0000                           1-  213     _R_AIN4_DATA_LB:
                                    1-  214     	.res	1
                                    1-  217     ;--------------------------------------------------------
                                    1-  218     ; absolute symbol definitions
                                    1-  219     ;--------------------------------------------------------
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     ; compiler-defined variables
                                    1-  222     ;--------------------------------------------------------
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x103C:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x1039:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x103A:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x103B:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x1038:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x1037:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x1035:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1036:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1034:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1033:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x102F:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x1030:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x1032:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1029:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x102A:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x102B:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x102E:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1026:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1025:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1027:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1028:
                                    1-  285     	.res	1
                                    1-  286     ;--------------------------------------------------------
                                    1-  287     ; initialized data
                                    1-  288     ;--------------------------------------------------------
                                    1-  290     .segment "idata"
     0000                           1-  291     _intCount:
     0000 0000                      1-  292     	dw	0x00
                                    1-  296     .segment "idata"
     0000                           1-  297     _IntFlag:
     0000 0000                      1-  298     	dw	0x00
                                    1-  302     .segment "idata"
     0000                           1-  303     _keyClick:
     0000 0000                      1-  304     	dw	0x00
                                    1-  308     .segment "idata"
     0000                           1-  309     _longPressFlag:
     0000 0000                      1-  310     	dw	0x00
                                    1-  314     .segment "idata"
     0000                           1-  315     _keyNub:
     0000 0000                      1-  316     	dw	0x00
                                    1-  320     .segment "idata"
     0000                           1-  321     _keyCount:
     0000 0000                      1-  322     	dw	0x00
                                    1-  326     .segment "idata"
     0000                           1-  327     _adtime:
     0000 0000                      1-  328     	dw	0x00
                                    1-  332     .segment "idata"
     0000                           1-  333     _workStep1:
     0000 0000                      1-  334     	dw	0x00
                                    1-  338     .segment "idata"
     0000                           1-  339     _workStep2:
     0000 0000                      1-  340     	dw	0x00
                                    1-  344     .segment "idata"
     0000                           1-  345     _workStep3:
     0000 0000                      1-  346     	dw	0x00
                                    1-  350     .segment "idata"
     0000                           1-  351     _batStep:
     0000 0000                      1-  352     	dw	0x00
                                    1-  356     .segment "idata"
     0000                           1-  357     _ledTime:
     0000 0000                      1-  358     	dw	0x00
                                    1-  362     .segment "idata"
     0000                           1-  363     _count500ms:
     0000 0000                      1-  364     	dw	0x00
                                    1-  368     .segment "idata"
     0000                           1-  369     _count200ms:
     0000 0000                      1-  370     	dw	0x00
                                    1-  374     .segment "idata"
     0000                           1-  375     _count276ms:
     0000 0000                      1-  376     	dw	0x00
                                    1-  380     .segment "idata"
     0000                           1-  381     _count10min:
     0000 0000 0000                 1-  382     	dw	0x00, 0x00
                                    1-  386     .segment "idata"
     0000                           1-  387     _countms:
     0000 0000 0000                 1-  388     	dw	0x00, 0x00
                                    1-  392     .segment "idata"
     0000                           1-  393     _K1Count:
     0000 0000                      1-  394     	dw	0x00
                                    1-  398     .segment "idata"
     0000                           1-  399     _K2Count:
     0000 0000                      1-  400     	dw	0x00
                                    1-  404     .segment "idata"
     0000                           1-  405     _ledCount:
     0000 0000                      1-  406     	dw	0x00
                                    1-  410     .segment "idata"
     0000                           1-  411     _ledMin:
     0000 0000                      1-  412     	dw	0x00
                                    1-  416     .segment "idata"
     0000                           1-  417     _ledMax:
     0000 00FA                      1-  418     	dw	0xfa
                                    1-  422     .segment "idata"
     0000                           1-  423     _ledLock:
     0000 0000                      1-  424     	dw	0x00
                                    1-  428     .segment "idata"
     0000                           1-  429     _flickerTime:
     0000 0000                      1-  430     	dw	0x00
                                    1-  434     .segment "idata"
     0000                           1-  435     _sleepDelay:
     0000 0000                      1-  436     	dw	0x00
                                    1-  440     .segment "idata"
     0000                           1-  441     _ledDuty:
     0000 0064                      1-  442     	dw	0x64
                                    1-  446     .segment "idata"
     0000                           1-  447     _firstFlag:
     0000 0000                      1-  448     	dw	0x00
                                    1-  451     ;--------------------------------------------------------
                                    1-  452     ; overlayable items in internal ram 
                                    1-  453     ;--------------------------------------------------------
                                    1-  454     ;	udata_ovr
                                    1-  455     ;--------------------------------------------------------
                                    1-  456     ; reset vector 
                                    1-  457     ;--------------------------------------------------------
                                    1-  458     ORG	0x0000
     0000 3rrr                      1-  459     	LGOTO	__nyc_ny8_startup
                                    1-  460     ;--------------------------------------------------------
                                    1-  461     ; interrupt and initialization code
                                    1-  462     ;--------------------------------------------------------
                                    1-  463     ORG 0x0008
     0008 3rrr                      1-  464     	lgoto	__sdcc_interrupt
                                    1-  466     .segment "code"
     0000                           1-  467     __sdcc_interrupt:
                                    1-  468     ;***
                                    1-  469     ;  pBlock Stats: dbName = I
                                    1-  470     ;***
                                    1-  471     ;functions called:
                                    1-  472     ;   _setPWMduty
                                    1-  473     ;   __moduchar
                                    1-  474     ;   _mode4
                                    1-  475     ;   _setPWMduty
                                    1-  476     ;   __moduchar
                                    1-  477     ;   _mode4
                                    1-  478     ;3 compiler assigned registers:
                                    1-  479     ;   STK00
                                    1-  480     ;   STK01
                                    1-  481     ;   r0x103C
                                    1-  482     ;; Starting pCode block
     0000                           1-  483     _isr:
                                    1-  484     ; 0 exit points
                                    1-  485     	.line	75, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  486     	MOVAR	WSAVE
     0001 1503                      1-  487     	SWAPR	STATUS,W
     0002 0283                      1-  488     	CLRR	STATUS
     0003 00rr                      1-  489     	MOVAR	SSAVE
     0004 010A                      1-  490     	MOVR	PCHBUF,W
     0005 028A                      1-  491     	CLRR	PCHBUF
     0006 00rr                      1-  492     	MOVAR	PSAVE
     0007 0104                      1-  493     	MOVR	FSR,W
                                    1-  494     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  495     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  496     	MOVR	STK00,W
                                    1-  497     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  498     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  499     	MOVR	STK01,W
                                    1-  500     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  501     	MOVAR	___sdcc_saved_stk01
                                    1-  502     	.line	77, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  503     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  504     	LGOTO	_00121_DS_
                                    1-  505     	.line	79, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  506     	MOVIA	0x37
     0013 03rr                      1-  507     	ADDAR	_TMR0,F
                                    1-  508     	.line	80, "main.c"; 	intCount++;
                                    1-  509     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  510     	INCR	_intCount,F
                                    1-  511     	.line	81, "main.c"; 	if(workStep1 == 1)
                                    1-  512     	BANKSEL	_workStep1
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1-  513     	MOVR	_workStep1,W
     0018 2401                      1-  514     	XORIA	0x01
     0019 0903                      1-  515     	BTRSS	STATUS,2
     001A 3rrr                      1-  516     	LGOTO	_00108_DS_
                                    1-  517     	.line	83, "main.c"; 	setPWMduty(0x04,ledDuty);
                                    1-  518     	BANKSEL	_ledDuty
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1-  519     	MOVR	_ledDuty,W
     001D 00rr                      1-  520     	MOVAR	STK00
     001E 2104                      1-  521     	MOVIA	0x04
     001F 2rrr                      1-  522     	LCALL	_setPWMduty
     0020 3rrr                      1-  523     	LGOTO	_00109_DS_
     0021                           1-  524     _00108_DS_:
                                    1-  525     	.line	85, "main.c"; 	else if(workStep1 == 2)			//2档
                                    1-  526     	BANKSEL	_workStep1
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1-  527     	MOVR	_workStep1,W
     0023 2402                      1-  528     	XORIA	0x02
     0024 0903                      1-  529     	BTRSS	STATUS,2
     0025 3rrr                      1-  530     	LGOTO	_00109_DS_
                                    1-  531     	.line	86, "main.c"; 	LED_FLICKER();
     0026 2104                      1-  532     	MOVIA	0x04
     0027 12rr                      1-  533     	XORAR	_PORTB,F
     0028                           1-  534     _00109_DS_:
                                    1-  535     	.line	87, "main.c"; 	if(intCount % 10 == 0)
     0028 210A                      1-  536     	MOVIA	0x0a
     0029 00rr                      1-  537     	MOVAR	STK00
                                    1-  538     	BANKSEL	_intCount
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  539     	MOVR	_intCount,W
     002C 2rrr                      1-  540     	LCALL	__moduchar
                                    1-  541     	BANKSEL	r0x103C
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1-  542     	MOVAR	r0x103C
     002F 01rr                      1-  543     	MOVR	r0x103C,W
     0030 0903                      1-  544     	BTRSS	STATUS,2
     0031 3rrr                      1-  545     	LGOTO	_00117_DS_
                                    1-  546     	.line	89, "main.c"; 	if(workStep2 == 4)		//4档  交替闪烁
                                    1-  547     	BANKSEL	_workStep2
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 01rr                      1-  548     	MOVR	_workStep2,W
     0034 2404                      1-  549     	XORIA	0x04
     0035 0D03                      1-  550     	BTRSC	STATUS,2
                                    1-  551     	.line	90, "main.c"; 	mode4();
     0036 2rrr                      1-  552     	LCALL	_mode4
                                    1-  553     	.line	92, "main.c"; 	if(++count200ms >= 200)
                                    1-  554     	BANKSEL	_count200ms
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 05rr                      1-  555     	INCR	_count200ms,F
     0039 21C8                      1-  556     	MOVIA	0xc8
     003A 04rr                      1-  557     	SUBAR	_count200ms,W
     003B 0803                      1-  558     	BTRSS	STATUS,0
     003C 3rrr                      1-  559     	LGOTO	_00117_DS_
                                    1-  560     	.line	94, "main.c"; 	count200ms = 0;
     003D 02rr                      1-  561     	CLRR	_count200ms
                                    1-  562     	.line	97, "main.c"; 	if(workStep1 == 3)		//3档
                                    1-  563     	BANKSEL	_workStep1
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1-  564     	MOVR	_workStep1,W
     0040 2403                      1-  565     	XORIA	0x03
     0041 0903                      1-  566     	BTRSS	STATUS,2
     0042 3rrr                      1-  567     	LGOTO	_00117_DS_
                                    1-  568     	.line	98, "main.c"; 	LED_FLICKER();
     0043 2104                      1-  569     	MOVIA	0x04
     0044 12rr                      1-  570     	XORAR	_PORTB,F
     0045                           1-  571     _00117_DS_:
                                    1-  572     	.line	102, "main.c"; 	if(intCount == 100)
                                    1-  573     	BANKSEL	_intCount
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1-  574     	MOVR	_intCount,W
     0047 2464                      1-  575     	XORIA	0x64
     0048 0903                      1-  576     	BTRSS	STATUS,2
     0049 3rrr                      1-  577     	LGOTO	_00121_DS_
                                    1-  578     	.line	104, "main.c"; 	intCount = 0;
     004A 02rr                      1-  579     	CLRR	_intCount
                                    1-  580     	.line	105, "main.c"; 	IntFlag = 1;
     004B 2101                      1-  581     	MOVIA	0x01
                                    1-  582     	BANKSEL	_IntFlag
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 00rr                      1-  583     	MOVAR	_IntFlag
                                    1-  584     	.line	106, "main.c"; 	ledCount++;
                                    1-  585     	BANKSEL	_ledCount
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 05rr                      1-  586     	INCR	_ledCount,F
     0050                           1-  587     _00121_DS_:
                                    1-  588     	.line	109, "main.c"; 	if(INTFbits.PABIF)
     0050 08rr                      1-  589     	BTRSS	_INTFbits,1
     0051 3rrr                      1-  590     	LGOTO	_00123_DS_
                                    1-  591     	.line	111, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0052 21FD                      1-  592     	MOVIA	0xfd
     0053 00rr                      1-  593     	MOVAR	_INTF
     0054                           1-  594     _00123_DS_:
                                    1-  595     	.line	114, "main.c"; 	INTF = 0;
     0054 02rr                      1-  596     	CLRR	_INTF
                                    1-  597     	.line	116, "main.c"; 	}
                                    1-  598     	BANKSEL	___sdcc_saved_stk01
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1-  599     	MOVR	___sdcc_saved_stk01,W
     0057 00rr                      1-  600     	MOVAR	STK01
                                    1-  601     	BANKSEL	___sdcc_saved_stk00
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 01rr                      1-  602     	MOVR	___sdcc_saved_stk00,W
     005A 00rr                      1-  603     	MOVAR	STK00
                                    1-  604     	BANKSEL	___sdcc_saved_fsr
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 01rr                      1-  605     	MOVR	___sdcc_saved_fsr,W
     005D 0084                      1-  606     	MOVAR	FSR
     005E 01rr                      1-  607     	MOVR	PSAVE,W
     005F 008A                      1-  608     	MOVAR	PCHBUF
     0060 0283                      1-  609     	CLRR	STATUS
     0061 15rr                      1-  610     	SWAPR	SSAVE,W
     0062 0083                      1-  611     	MOVAR	STATUS
     0063 15rr                      1-  612     	SWAPR	WSAVE,F
     0064 15rr                      1-  613     	SWAPR	WSAVE,W
     0065                           1-  614     END_OF_INTERRUPT:
     0065 0011                      1-  615     	RETIE	
                                    1-  617     ;--------------------------------------------------------
                                    1-  618     ; code
                                    1-  619     ;--------------------------------------------------------
                                    1-  620     ;***
                                    1-  621     ;  pBlock Stats: dbName = M
                                    1-  622     ;***
                                    1-  623     ;has an exit
                                    1-  624     ;functions called:
                                    1-  625     ;   _init
                                    1-  626     ;   _initAD
                                    1-  627     ;   _gotoSleep
                                    1-  628     ;   _timeCtr
                                    1-  629     ;   _keyCon
                                    1-  630     ;   _ledMasterCtr
                                    1-  631     ;   _ledSlaveCtr
                                    1-  632     ;   _checkBat
                                    1-  633     ;   _checkBat
                                    1-  634     ;   _gotoSleep
                                    1-  635     ;   _chrgLed
                                    1-  636     ;   _init
                                    1-  637     ;   _initAD
                                    1-  638     ;   _gotoSleep
                                    1-  639     ;   _timeCtr
                                    1-  640     ;   _keyCon
                                    1-  641     ;   _ledMasterCtr
                                    1-  642     ;   _ledSlaveCtr
                                    1-  643     ;   _checkBat
                                    1-  644     ;   _checkBat
                                    1-  645     ;   _gotoSleep
                                    1-  646     ;   _chrgLed
                                    1-  647     ;; Starting pCode block
                                    1-  648     .segment "code"; module=main, function=_main
     0000                           1-  650     _main:
                                    1-  651     ; 2 exit points
                                    1-  652     	.line	121, "main.c"; 	init();
     0000 2rrr                      1-  653     	LCALL	_init
                                    1-  654     	.line	122, "main.c"; 	initAD();
     0001 2rrr                      1-  655     	LCALL	_initAD
                                    1-  656     	.line	123, "main.c"; 	gotoSleep();
     0002 2rrr                      1-  657     	LCALL	_gotoSleep
     0003                           1-  658     _00149_DS_:
                                    1-  659     	.line	126, "main.c"; 	CLRWDT(); 
     0003 0002                      1-  660     	clrwdt
                                    1-  661     	.line	127, "main.c"; 	if(!IntFlag)
                                    1-  662     	BANKSEL	_IntFlag
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1-  663     	MOVR	_IntFlag,W
     0006 0D03                      1-  664     	BTRSC	STATUS,2
     0007 3rrr                      1-  665     	LGOTO	_00149_DS_
                                    1-  666     	.line	129, "main.c"; 	IntFlag = 0;
     0008 02rr                      1-  667     	CLRR	_IntFlag
                                    1-  668     	.line	130, "main.c"; 	timeCtr();
     0009 2rrr                      1-  669     	LCALL	_timeCtr
                                    1-  670     	.line	131, "main.c"; 	keyCon();
     000A 2rrr                      1-  671     	LCALL	_keyCon
                                    1-  672     	.line	132, "main.c"; 	ledMasterCtr();
     000B 2rrr                      1-  673     	LCALL	_ledMasterCtr
                                    1-  674     	.line	133, "main.c"; 	ledSlaveCtr();			//侧灯控制
     000C 2rrr                      1-  675     	LCALL	_ledSlaveCtr
                                    1-  676     	.line	134, "main.c"; 	if(PORTA & 0x04)
     000D 09rr                      1-  677     	BTRSS	_PORTA,2
     000E 3rrr                      1-  678     	LGOTO	_00146_DS_
                                    1-  679     	.line	137, "main.c"; 	ledMin = 0;
                                    1-  680     	BANKSEL	_ledMin
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1-  681     	CLRR	_ledMin
                                    1-  682     	.line	138, "main.c"; 	if(batStep != 3)
                                    1-  683     	BANKSEL	_batStep
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1-  684     	MOVR	_batStep,W
     0013 2403                      1-  685     	XORIA	0x03
     0014 0D03                      1-  686     	BTRSC	STATUS,2
     0015 3rrr                      1-  687     	LGOTO	_00131_DS_
                                    1-  688     	.line	139, "main.c"; 	batStep = 1;
     0016 2101                      1-  689     	MOVIA	0x01
     0017 00rr                      1-  690     	MOVAR	_batStep
     0018                           1-  691     _00131_DS_:
                                    1-  692     	.line	140, "main.c"; 	checkBat();
     0018 2rrr                      1-  693     	LCALL	_checkBat
     0019 3rrr                      1-  694     	LGOTO	_00147_DS_
     001A                           1-  695     _00146_DS_:
                                    1-  696     	.line	145, "main.c"; 	if(workStep1 || workStep2)
                                    1-  697     	BANKSEL	_workStep1
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  698     	MOVR	_workStep1,W
     001C 0903                      1-  699     	BTRSS	STATUS,2
     001D 3rrr                      1-  700     	LGOTO	_00136_DS_
                                    1-  701     	BANKSEL	_workStep2
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1-  702     	MOVR	_workStep2,W
     0020 0D03                      1-  703     	BTRSC	STATUS,2
     0021 3rrr                      1-  704     	LGOTO	_00137_DS_
     0022                           1-  705     _00136_DS_:
                                    1-  706     	.line	147, "main.c"; 	if(firstFlag == 0)
                                    1-  707     	BANKSEL	_firstFlag
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  708     	MOVR	_firstFlag,W
     0024 0903                      1-  709     	BTRSS	STATUS,2
     0025 3rrr                      1-  710     	LGOTO	_00138_DS_
                                    1-  711     	.line	148, "main.c"; 	checkBat();				//检测电池电压
     0026 2rrr                      1-  712     	LCALL	_checkBat
     0027 3rrr                      1-  713     	LGOTO	_00138_DS_
     0028                           1-  714     _00137_DS_:
                                    1-  715     	.line	152, "main.c"; 	ledLock = 1;
     0028 2101                      1-  716     	MOVIA	0x01
                                    1-  717     	BANKSEL	_ledLock
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 00rr                      1-  718     	MOVAR	_ledLock
                                    1-  719     	.line	153, "main.c"; 	LED1_OFF();
     002B 18rr                      1-  720     	BSR	_PORTB,0
                                    1-  721     	.line	154, "main.c"; 	LED2_OFF();
     002C 18rr                      1-  722     	BSR	_PORTB,1
                                    1-  723     	.line	155, "main.c"; 	LED3_OFF();
     002D 1Brr                      1-  724     	BSR	_PORTA,7
                                    1-  725     	.line	156, "main.c"; 	LED4_OFF();
     002E 1Brr                      1-  726     	BSR	_PORTA,6
                                    1-  727     	.line	157, "main.c"; 	ledCount = 0;
                                    1-  728     	BANKSEL	_ledCount
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1-  729     	CLRR	_ledCount
                                    1-  730     	.line	158, "main.c"; 	ledMax = 250;
     0031 21FA                      1-  731     	MOVIA	0xfa
                                    1-  732     	BANKSEL	_ledMax
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1-  733     	MOVAR	_ledMax
                                    1-  734     	.line	159, "main.c"; 	ledMin = 0;
                                    1-  735     	BANKSEL	_ledMin
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 02rr                      1-  736     	CLRR	_ledMin
                                    1-  737     	.line	160, "main.c"; 	if(++sleepDelay >= 200)
                                    1-  738     	BANKSEL	_sleepDelay
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 05rr                      1-  739     	INCR	_sleepDelay,F
                                    1-  740     ;;unsigned compare: left < lit (0xC8=200), size=1
     0038 21C8                      1-  741     	MOVIA	0xc8
     0039 04rr                      1-  742     	SUBAR	_sleepDelay,W
     003A 0C03                      1-  743     	BTRSC	STATUS,0
                                    1-  744     	.line	161, "main.c"; 	gotoSleep();
     003B 2rrr                      1-  745     	LCALL	_gotoSleep
     003C                           1-  746     _00138_DS_:
                                    1-  747     	.line	163, "main.c"; 	if(batStep == 0)
                                    1-  748     	BANKSEL	_batStep
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1-  749     	MOVR	_batStep,W
     003E 0903                      1-  750     	BTRSS	STATUS,2
     003F 3rrr                      1-  751     	LGOTO	_00143_DS_
                                    1-  752     	.line	165, "main.c"; 	if(ledCount == 250)
                                    1-  753     	BANKSEL	_ledCount
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1-  754     	MOVR	_ledCount,W
     0042 24FA                      1-  755     	XORIA	0xfa
     0043 0903                      1-  756     	BTRSS	STATUS,2
     0044 3rrr                      1-  757     	LGOTO	_00147_DS_
                                    1-  758     	.line	166, "main.c"; 	batStep = 2;
     0045 2102                      1-  759     	MOVIA	0x02
                                    1-  760     	BANKSEL	_batStep
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 00rr                      1-  761     	MOVAR	_batStep
     0048 3rrr                      1-  762     	LGOTO	_00147_DS_
     0049                           1-  763     _00143_DS_:
                                    1-  764     	.line	170, "main.c"; 	batStep = 2;
     0049 2102                      1-  765     	MOVIA	0x02
                                    1-  766     	BANKSEL	_batStep
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 00rr                      1-  767     	MOVAR	_batStep
     004C                           1-  768     _00147_DS_:
                                    1-  769     	.line	173, "main.c"; 	chrgLed();
     004C 2rrr                      1-  770     	LCALL	_chrgLed
     004D 3rrr                      1-  771     	LGOTO	_00149_DS_
                                    1-  772     	.line	175, "main.c"; 	}
                                    1-  773     	RETURN	
     004E 0010                      3-   26 m1      ret
                                    1-  774     ; exit point of _main
                                    1-  776     ;***
                                    1-  777     ;  pBlock Stats: dbName = C
                                    1-  778     ;***
                                    1-  779     ;has an exit
                                    1-  780     ;functions called:
                                    1-  781     ;   _delay
                                    1-  782     ;   _delay
                                    1-  783     ;1 compiler assigned register :
                                    1-  784     ;   STK00
                                    1-  785     ;; Starting pCode block
                                    1-  786     .segment "code"; module=main, function=_initAD
     0000                           1-  788     _initAD:
                                    1-  789     ; 2 exit points
                                    1-  790     	.line	743, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1-  791     	MOVIA	0x84
     0001 00rr                      1-  792     	MOVAR	_ADMD
                                    1-  793     	.line	746, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 02rr                      1-  794     	CLRR	_ADVREFH
                                    1-  795     	.line	753, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1-  796     	MOVIA	0x10
     0004 00rr                      1-  797     	MOVAR	_ADR
                                    1-  798     	.line	755, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1-  799     	MOVIA	0x03
     0006 00rr                      1-  800     	MOVAR	_ADCR
                                    1-  801     	.line	757, "main.c"; 	PACON = C_PA4_AIN4 ;						// 
     0007 2110                      1-  802     	MOVIA	0x10
     0008 00rr                      1-  803     	MOVAR	_PACON
                                    1-  804     	.line	758, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1-  805     	BSR	_ADMDbits,4
                                    1-  806     	.line	759, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1-  807     	MOVIA	0x64
     000B 00rr                      1-  808     	MOVAR	STK00
     000C 2100                      1-  809     	MOVIA	0x00
     000D 2rrr                      1-  810     	LCALL	_delay
                                    1-  811     	.line	762, "main.c"; 	}
                                    1-  812     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1-  813     ; exit point of _initAD
                                    1-  815     ;***
                                    1-  816     ;  pBlock Stats: dbName = C
                                    1-  817     ;***
                                    1-  818     ;has an exit
                                    1-  819     ;5 compiler assigned registers:
                                    1-  820     ;   r0x1025
                                    1-  821     ;   STK00
                                    1-  822     ;   r0x1026
                                    1-  823     ;   r0x1027
                                    1-  824     ;   r0x1028
                                    1-  825     ;; Starting pCode block
                                    1-  826     .segment "code"; module=main, function=_delay
                                    1-  828     ;local variable name mapping:
     0000                           1-  833     _delay:
                                    1-  834     ; 2 exit points
                                    1-  835     	.line	734, "main.c"; 	void delay(uint16_t time)
                                    1-  836     	BANKSEL	r0x1025
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  837     	MOVAR	r0x1025
     0002 01rr                      1-  838     	MOVR	STK00,W
                                    1-  839     	BANKSEL	r0x1026
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  840     	MOVAR	r0x1026
                                    1-  841     	.line	736, "main.c"; 	for(uint16_t i=0;i<time;i++);
                                    1-  842     	BANKSEL	r0x1027
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1-  843     	CLRR	r0x1027
                                    1-  844     	BANKSEL	r0x1028
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1-  845     	CLRR	r0x1028
     0009                           1-  846     _00638_DS_:
                                    1-  847     	BANKSEL	r0x1025
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  848     	MOVR	r0x1025,W
                                    1-  849     	BANKSEL	r0x1028
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1-  850     	SUBAR	r0x1028,W
     000D 0903                      1-  851     	BTRSS	STATUS,2
     000E 3rrr                      1-  852     	LGOTO	_00649_DS_
                                    1-  853     	BANKSEL	r0x1026
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  854     	MOVR	r0x1026,W
                                    1-  855     	BANKSEL	r0x1027
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1-  856     	SUBAR	r0x1027,W
     0013                           1-  857     _00649_DS_:
     0013 0C03                      1-  858     	BTRSC	STATUS,0
     0014 3rrr                      1-  859     	LGOTO	_00640_DS_
                                    1-  860     	BANKSEL	r0x1027
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1-  861     	INCR	r0x1027,F
     0017 0903                      1-  862     	BTRSS	STATUS,2
     0018 3rrr                      1-  863     	LGOTO	_00001_DS_
                                    1-  864     	BANKSEL	r0x1028
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1-  865     	INCR	r0x1028,F
     001B                           1-  866     _00001_DS_:
     001B 3rrr                      1-  867     	LGOTO	_00638_DS_
     001C                           1-  868     _00640_DS_:
                                    1-  869     	.line	737, "main.c"; 	}
                                    1-  870     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1-  871     ; exit point of _delay
                                    1-  873     ;***
                                    1-  874     ;  pBlock Stats: dbName = C
                                    1-  875     ;***
                                    1-  876     ;has an exit
                                    1-  877     ;; Starting pCode block
                                    1-  878     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  880     _F_wait_eoc:
                                    1-  881     ; 2 exit points
     0000                           1-  882     _00631_DS_:
                                    1-  883     	.line	730, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  884     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  885     	LGOTO	_00631_DS_
                                    1-  886     	.line	732, "main.c"; 	}
                                    1-  887     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  888     ; exit point of _F_wait_eoc
                                    1-  890     ;***
                                    1-  891     ;  pBlock Stats: dbName = C
                                    1-  892     ;***
                                    1-  893     ;has an exit
                                    1-  894     ;functions called:
                                    1-  895     ;   _delay
                                    1-  896     ;   _F_wait_eoc
                                    1-  897     ;   _delay
                                    1-  898     ;   _F_wait_eoc
                                    1-  899     ;7 compiler assigned registers:
                                    1-  900     ;   r0x1029
                                    1-  901     ;   STK00
                                    1-  902     ;   r0x102A
                                    1-  903     ;   r0x102B
                                    1-  904     ;   r0x102C
                                    1-  905     ;   r0x102D
                                    1-  906     ;   r0x102E
                                    1-  907     ;; Starting pCode block
                                    1-  908     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1-  910     ;local variable name mapping:
     0000                           1-  913     _F_AIN4_Convert:
                                    1-  914     ; 2 exit points
                                    1-  915     	.line	710, "main.c"; 	void F_AIN4_Convert(char count)
                                    1-  916     	BANKSEL	r0x1029
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  917     	MOVAR	r0x1029
                                    1-  918     	.line	713, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN0(PA0) pad as ADC input
     0002 2194                      1-  919     	MOVIA	0x94
     0003 00rr                      1-  920     	MOVAR	_ADMD
                                    1-  921     	.line	714, "main.c"; 	delay(100);
     0004 2164                      1-  922     	MOVIA	0x64
     0005 00rr                      1-  923     	MOVAR	STK00
     0006 2100                      1-  924     	MOVIA	0x00
     0007 2rrr                      1-  925     	LCALL	_delay
                                    1-  926     	.line	715, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  927     	MOVIA	0x01
                                    1-  928     	BANKSEL	r0x102A
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1-  929     	MOVAR	r0x102A
     000B                           1-  930     _00624_DS_:
                                    1-  931     	BANKSEL	r0x102A
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1-  932     	MOVR	r0x102A,W
                                    1-  933     	BANKSEL	r0x1029
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  934     	SUBAR	r0x1029,W
     000F 0803                      1-  935     	BTRSS	STATUS,0
     0010 3rrr                      1-  936     	LGOTO	_00626_DS_
                                    1-  937     	.line	717, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0011 1Brr                      1-  938     	BSR	_ADMDbits,6
                                    1-  939     	.line	718, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0012 2rrr                      1-  940     	LCALL	_F_wait_eoc
                                    1-  941     	.line	720, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0013 210F                      1-  942     	MOVIA	0x0f
     0014 10rr                      1-  943     	ANDAR	_ADR,W
                                    1-  944     ;;3	MOVAR	r0x102B
                                    1-  945     	BANKSEL	_R_AIN4_DATA_LB
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 03rr                      1-  946     	ADDAR	_R_AIN4_DATA_LB,F
                                    1-  947     	.line	721, "main.c"; 	R_AIN4_DATA    += ADD; 
     0017 01rr                      1-  948     	MOVR	_ADD,W
                                    1-  949     	BANKSEL	r0x102B
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1-  950     	MOVAR	r0x102B
                                    1-  951     ;;1	CLRR	r0x102C
                                    1-  952     ;;104	MOVR	r0x102B,W
                                    1-  953     ;;102	MOVAR	r0x102D
     001A 2100                      1-  954     	MOVIA	0x00
                                    1-  955     	BANKSEL	r0x102E
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  956     	MOVAR	r0x102E
                                    1-  957     ;;103	MOVR	r0x102D,W
                                    1-  958     	BANKSEL	r0x102B
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  959     	MOVR	r0x102B,W
                                    1-  960     	BANKSEL	_R_AIN4_DATA
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 03rr                      1-  961     	ADDAR	_R_AIN4_DATA,F
                                    1-  962     	BANKSEL	r0x102E
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1-  963     	MOVR	r0x102E,W
     0023 0C03                      1-  964     	BTRSC	STATUS,0
     0024 05rr                      1-  965     	INCR	r0x102E,W
     0025 0D03                      1-  966     	BTRSC	STATUS,2
     0026 3rrr                      1-  967     	LGOTO	_00002_DS_
                                    1-  968     	BANKSEL	_R_AIN4_DATA
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 03rr                      1-  969     	ADDAR	(_R_AIN4_DATA + 1),F
     0029                           1-  970     _00002_DS_:
                                    1-  971     	.line	715, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  972     	BANKSEL	r0x102A
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 05rr                      1-  973     	INCR	r0x102A,F
     002B 3rrr                      1-  974     	LGOTO	_00624_DS_
     002C                           1-  975     _00626_DS_:
                                    1-  976     	.line	724, "main.c"; 	}
                                    1-  977     	RETURN	
     002C 0010                      3-   26 m1      ret
                                    1-  978     ; exit point of _F_AIN4_Convert
                                    1-  980     ;***
                                    1-  981     ;  pBlock Stats: dbName = C
                                    1-  982     ;***
                                    1-  983     ;has an exit
                                    1-  984     ;functions called:
                                    1-  985     ;   _F_AIN4_Convert
                                    1-  986     ;   __divuint
                                    1-  987     ;   _gotoSleep
                                    1-  988     ;   _F_AIN4_Convert
                                    1-  989     ;   __divuint
                                    1-  990     ;   _gotoSleep
                                    1-  991     ;7 compiler assigned registers:
                                    1-  992     ;   r0x102F
                                    1-  993     ;   r0x1030
                                    1-  994     ;   r0x1031
                                    1-  995     ;   r0x1032
                                    1-  996     ;   STK02
                                    1-  997     ;   STK01
                                    1-  998     ;   STK00
                                    1-  999     ;; Starting pCode block
                                    1- 1000     .segment "code"; module=main, function=_checkBat
     0000                           1- 1002     _checkBat:
                                    1- 1003     ; 2 exit points
                                    1- 1004     	.line	557, "main.c"; 	PACON = C_PA4_AIN4;
     0000 2110                      1- 1005     	MOVIA	0x10
     0001 00rr                      1- 1006     	MOVAR	_PACON
                                    1- 1007     	.line	558, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;
                                    1- 1008     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1009     	CLRR	_R_AIN4_DATA_LB
                                    1- 1010     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1011     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1012     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1013     	.line	559, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0007 2108                      1- 1014     	MOVIA	0x08
     0008 2rrr                      1- 1015     	LCALL	_F_AIN4_Convert
                                    1- 1016     	.line	560, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1017     	BANKSEL	_R_AIN4_DATA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 15rr                      1- 1018     	SWAPR	(_R_AIN4_DATA + 1),W
     000B 22F0                      1- 1019     	ANDIA	0xf0
     000C 00rr                      1- 1020     	MOVAR	(_R_AIN4_DATA + 1)
     000D 15rr                      1- 1021     	SWAPR	_R_AIN4_DATA,W
     000E 00rr                      1- 1022     	MOVAR	_R_AIN4_DATA
     000F 220F                      1- 1023     	ANDIA	0x0f
     0010 11rr                      1- 1024     	IORAR	(_R_AIN4_DATA + 1),F
     0011 12rr                      1- 1025     	XORAR	_R_AIN4_DATA,F
                                    1- 1026     	.line	561, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0012 21F0                      1- 1027     	MOVIA	0xf0
                                    1- 1028     	BANKSEL	_R_AIN4_DATA_LB
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 10rr                      1- 1029     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1030     	.line	562, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0015 01rr                      1- 1031     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1032     	BANKSEL	r0x102F
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1033     	MOVAR	r0x102F
                                    1- 1034     	BANKSEL	r0x1030
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1- 1035     	CLRR	r0x1030
                                    1- 1036     ;;101	MOVR	r0x102F,W
                                    1- 1037     ;;99	MOVAR	r0x1031
     001A 2100                      1- 1038     	MOVIA	0x00
                                    1- 1039     	BANKSEL	r0x1032
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1040     	MOVAR	r0x1032
                                    1- 1041     ;;100	MOVR	r0x1031,W
                                    1- 1042     	BANKSEL	r0x102F
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1043     	MOVR	r0x102F,W
                                    1- 1044     	BANKSEL	_R_AIN4_DATA
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 03rr                      1- 1045     	ADDAR	_R_AIN4_DATA,F
                                    1- 1046     	BANKSEL	r0x1032
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1047     	MOVR	r0x1032,W
     0023 0C03                      1- 1048     	BTRSC	STATUS,0
     0024 05rr                      1- 1049     	INCR	r0x1032,W
     0025 0D03                      1- 1050     	BTRSC	STATUS,2
     0026 3rrr                      1- 1051     	LGOTO	_00003_DS_
                                    1- 1052     	BANKSEL	_R_AIN4_DATA
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 03rr                      1- 1053     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1054     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1055     _00003_DS_:
                                    1- 1056     	.line	563, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0029 1C03                      1- 1057     	BCR	STATUS,0
                                    1- 1058     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 13rr                      1- 1059     	RRR	(_R_AIN4_DATA + 1),F
     002C 13rr                      1- 1060     	RRR	_R_AIN4_DATA,F
                                    1- 1061     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1062     	BCR	STATUS,0
     002E 13rr                      1- 1063     	RRR	(_R_AIN4_DATA + 1),F
     002F 13rr                      1- 1064     	RRR	_R_AIN4_DATA,F
                                    1- 1065     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1066     	BCR	STATUS,0
     0031 13rr                      1- 1067     	RRR	(_R_AIN4_DATA + 1),F
     0032 13rr                      1- 1068     	RRR	_R_AIN4_DATA,F
                                    1- 1069     	.line	566, "main.c"; 	++adtime;
                                    1- 1070     	BANKSEL	_adtime
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 05rr                      1- 1071     	INCR	_adtime,F
                                    1- 1072     	.line	567, "main.c"; 	sumR_AIN4_DATA += R_AIN4_DATA;
                                    1- 1073     	BANKSEL	_R_AIN4_DATA
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1074     	MOVR	_R_AIN4_DATA,W
                                    1- 1075     	BANKSEL	_sumR_AIN4_DATA
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 03rr                      1- 1076     	ADDAR	_sumR_AIN4_DATA,F
                                    1- 1077     	BANKSEL	_R_AIN4_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 1078     	MOVR	(_R_AIN4_DATA + 1),W
     003B 0C03                      1- 1079     	BTRSC	STATUS,0
     003C 05rr                      1- 1080     	INCR	(_R_AIN4_DATA + 1),W
     003D 0D03                      1- 1081     	BTRSC	STATUS,2
     003E 3rrr                      1- 1082     	LGOTO	_00004_DS_
                                    1- 1083     	BANKSEL	_sumR_AIN4_DATA
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 03rr                      1- 1084     	ADDAR	(_sumR_AIN4_DATA + 1),F
     0041                           1- 1085     _00004_DS_:
                                    1- 1086     	.line	568, "main.c"; 	if(batStep == 0 || adtime < 5)
                                    1- 1087     	BANKSEL	_batStep
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 1088     	MOVR	_batStep,W
     0043 0D03                      1- 1089     	BTRSC	STATUS,2
     0044 3rrr                      1- 1090     	LGOTO	_00445_DS_
                                    1- 1091     ;;unsigned compare: left < lit (0x5=5), size=1
     0045 2105                      1- 1092     	MOVIA	0x05
                                    1- 1093     	BANKSEL	_adtime
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 04rr                      1- 1094     	SUBAR	_adtime,W
     0048 0803                      1- 1095     	BTRSS	STATUS,0
     0049                           1- 1096     _00445_DS_:
                                    1- 1097     	.line	569, "main.c"; 	return;
     0049 3rrr                      1- 1098     	LGOTO	_00510_DS_
                                    1- 1099     	.line	571, "main.c"; 	R_AIN4_DATA = sumR_AIN4_DATA/adtime;
                                    1- 1100     	BANKSEL	_adtime
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 01rr                      1- 1101     	MOVR	_adtime,W
                                    1- 1102     	BANKSEL	r0x102F
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 00rr                      1- 1103     	MOVAR	r0x102F
                                    1- 1104     	BANKSEL	r0x1030
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 02rr                      1- 1105     	CLRR	r0x1030
                                    1- 1106     	BANKSEL	r0x102F
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1- 1107     	MOVR	r0x102F,W
     0052 00rr                      1- 1108     	MOVAR	STK02
     0053 2100                      1- 1109     	MOVIA	0x00
     0054 00rr                      1- 1110     	MOVAR	STK01
                                    1- 1111     	BANKSEL	_sumR_AIN4_DATA
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1- 1112     	MOVR	_sumR_AIN4_DATA,W
     0057 00rr                      1- 1113     	MOVAR	STK00
     0058 01rr                      1- 1114     	MOVR	(_sumR_AIN4_DATA + 1),W
     0059 2rrr                      1- 1115     	LCALL	__divuint
                                    1- 1116     	BANKSEL	_R_AIN4_DATA
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1- 1117     	MOVAR	(_R_AIN4_DATA + 1)
     005C 01rr                      1- 1118     	MOVR	STK00,W
     005D 00rr                      1- 1119     	MOVAR	_R_AIN4_DATA
                                    1- 1120     	.line	572, "main.c"; 	sumR_AIN4_DATA = adtime = 0;
                                    1- 1121     	BANKSEL	_adtime
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 02rr                      1- 1122     	CLRR	_adtime
                                    1- 1123     	BANKSEL	_sumR_AIN4_DATA
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 02rr                      1- 1124     	CLRR	_sumR_AIN4_DATA
     0062 02rr                      1- 1125     	CLRR	(_sumR_AIN4_DATA + 1)
                                    1- 1126     	.line	573, "main.c"; 	ledLock = 0;
                                    1- 1127     	BANKSEL	_ledLock
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 02rr                      1- 1128     	CLRR	_ledLock
                                    1- 1129     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1130     ;;unsigned compare: left >= lit (0x61C=1564), size=2
                                    1- 1131     	.line	574, "main.c"; 	if(R_AIN4_DATA > 1563)			//8.4V
     0065 2106                      1- 1132     	MOVIA	0x06
                                    1- 1133     	BANKSEL	_R_AIN4_DATA
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 04rr                      1- 1134     	SUBAR	(_R_AIN4_DATA + 1),W
     0068 0903                      1- 1135     	BTRSS	STATUS,2
     0069 3rrr                      1- 1136     	LGOTO	_00594_DS_
     006A 211C                      1- 1137     	MOVIA	0x1c
     006B 04rr                      1- 1138     	SUBAR	_R_AIN4_DATA,W
     006C                           1- 1139     _00594_DS_:
     006C 0803                      1- 1140     	BTRSS	STATUS,0
     006D 3rrr                      1- 1141     	LGOTO	_00451_DS_
                                    1- 1142     	.line	576, "main.c"; 	batStep = 3;
     006E 2103                      1- 1143     	MOVIA	0x03
                                    1- 1144     	BANKSEL	_batStep
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 00rr                      1- 1145     	MOVAR	_batStep
                                    1- 1146     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1147     ;;unsigned compare: left >= lit (0xC9=201), size=1
                                    1- 1148     	.line	578, "main.c"; 	if(ledMin <= 200)
     0071 21C9                      1- 1149     	MOVIA	0xc9
                                    1- 1150     	BANKSEL	_ledMin
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 04rr                      1- 1151     	SUBAR	_ledMin,W
     0074 0C03                      1- 1152     	BTRSC	STATUS,0
     0075 3rrr                      1- 1153     	LGOTO	_00451_DS_
                                    1- 1154     	.line	580, "main.c"; 	ledMin = 201;
     0076 21C9                      1- 1155     	MOVIA	0xc9
     0077 00rr                      1- 1156     	MOVAR	_ledMin
                                    1- 1157     	.line	581, "main.c"; 	ledMax = 250;
     0078 21FA                      1- 1158     	MOVIA	0xfa
                                    1- 1159     	BANKSEL	_ledMax
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 00rr                      1- 1160     	MOVAR	_ledMax
     007B                           1- 1161     _00451_DS_:
                                    1- 1162     	.line	584, "main.c"; 	if(batStep == 1 || batStep == 3)
                                    1- 1163     	BANKSEL	_batStep
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 01rr                      1- 1164     	MOVR	_batStep,W
     007D 2401                      1- 1165     	XORIA	0x01
     007E 0D03                      1- 1166     	BTRSC	STATUS,2
     007F 3rrr                      1- 1167     	LGOTO	_00452_DS_
     0080 01rr                      1- 1168     	MOVR	_batStep,W
     0081 2403                      1- 1169     	XORIA	0x03
     0082 0D03                      1- 1170     	BTRSC	STATUS,2
     0083                           1- 1171     _00452_DS_:
                                    1- 1172     	.line	586, "main.c"; 	return;
     0083 3rrr                      1- 1173     	LGOTO	_00510_DS_
                                    1- 1174     	.line	589, "main.c"; 	if(R_AIN4_DATA > 1490)			//8.0V
     0084 2105                      1- 1175     	MOVIA	0x05
                                    1- 1176     	BANKSEL	_R_AIN4_DATA
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 04rr                      1- 1177     	SUBAR	(_R_AIN4_DATA + 1),W
     0087 0903                      1- 1178     	BTRSS	STATUS,2
     0088 3rrr                      1- 1179     	LGOTO	_00597_DS_
     0089 21D3                      1- 1180     	MOVIA	0xd3
     008A 04rr                      1- 1181     	SUBAR	_R_AIN4_DATA,W
     008B                           1- 1182     _00597_DS_:
     008B 0803                      1- 1183     	BTRSS	STATUS,0
     008C 3rrr                      1- 1184     	LGOTO	_00492_DS_
                                    1- 1185     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1186     ;;unsigned compare: left >= lit (0xC9=201), size=1
                                    1- 1187     	.line	592, "main.c"; 	if(ledMin <= 200)
     008D 21C9                      1- 1188     	MOVIA	0xc9
                                    1- 1189     	BANKSEL	_ledMin
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 04rr                      1- 1190     	SUBAR	_ledMin,W
     0090 0C03                      1- 1191     	BTRSC	STATUS,0
     0091 3rrr                      1- 1192     	LGOTO	_00493_DS_
                                    1- 1193     	.line	594, "main.c"; 	ledMin = 201;
     0092 21C9                      1- 1194     	MOVIA	0xc9
     0093 00rr                      1- 1195     	MOVAR	_ledMin
                                    1- 1196     	.line	595, "main.c"; 	ledMax = 250;
     0094 21FA                      1- 1197     	MOVIA	0xfa
                                    1- 1198     	BANKSEL	_ledMax
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 00rr                      1- 1199     	MOVAR	_ledMax
     0097 3rrr                      1- 1200     	LGOTO	_00493_DS_
                                    1- 1201     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1202     ;;unsigned compare: left >= lit (0x576=1398), size=2
     0098                           1- 1203     _00492_DS_:
                                    1- 1204     	.line	598, "main.c"; 	else if(R_AIN4_DATA > 1397)			//7.5V
     0098 2105                      1- 1205     	MOVIA	0x05
                                    1- 1206     	BANKSEL	_R_AIN4_DATA
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 04rr                      1- 1207     	SUBAR	(_R_AIN4_DATA + 1),W
     009B 0903                      1- 1208     	BTRSS	STATUS,2
     009C 3rrr                      1- 1209     	LGOTO	_00599_DS_
     009D 2176                      1- 1210     	MOVIA	0x76
     009E 04rr                      1- 1211     	SUBAR	_R_AIN4_DATA,W
     009F                           1- 1212     _00599_DS_:
     009F 0803                      1- 1213     	BTRSS	STATUS,0
     00A0 3rrr                      1- 1214     	LGOTO	_00489_DS_
                                    1- 1215     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1216     ;;unsigned compare: left >= lit (0x97=151), size=1
                                    1- 1217     	.line	601, "main.c"; 	if(ledMin <= 150)
     00A1 2197                      1- 1218     	MOVIA	0x97
                                    1- 1219     	BANKSEL	_ledMin
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 04rr                      1- 1220     	SUBAR	_ledMin,W
     00A4 0C03                      1- 1221     	BTRSC	STATUS,0
     00A5 3rrr                      1- 1222     	LGOTO	_00493_DS_
                                    1- 1223     	.line	603, "main.c"; 	ledMin = 151;
     00A6 2197                      1- 1224     	MOVIA	0x97
     00A7 00rr                      1- 1225     	MOVAR	_ledMin
                                    1- 1226     	.line	604, "main.c"; 	ledMax = 200;
     00A8 21C8                      1- 1227     	MOVIA	0xc8
                                    1- 1228     	BANKSEL	_ledMax
     00A9 rrrr                      3-   71 m1      .banksel ram_address
     00AA 00rr                      1- 1229     	MOVAR	_ledMax
     00AB 3rrr                      1- 1230     	LGOTO	_00493_DS_
                                    1- 1231     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1232     ;;unsigned compare: left >= lit (0x4F3=1267), size=2
     00AC                           1- 1233     _00489_DS_:
                                    1- 1234     	.line	608, "main.c"; 	else if(R_AIN4_DATA > 1266)			//6.8V
     00AC 2104                      1- 1235     	MOVIA	0x04
                                    1- 1236     	BANKSEL	_R_AIN4_DATA
     00AD rrrr                      3-   71 m1      .banksel ram_address
     00AE 04rr                      1- 1237     	SUBAR	(_R_AIN4_DATA + 1),W
     00AF 0903                      1- 1238     	BTRSS	STATUS,2
     00B0 3rrr                      1- 1239     	LGOTO	_00601_DS_
     00B1 21F3                      1- 1240     	MOVIA	0xf3
     00B2 04rr                      1- 1241     	SUBAR	_R_AIN4_DATA,W
     00B3                           1- 1242     _00601_DS_:
     00B3 0803                      1- 1243     	BTRSS	STATUS,0
     00B4 3rrr                      1- 1244     	LGOTO	_00486_DS_
                                    1- 1245     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1246     ;;unsigned compare: left >= lit (0x65=101), size=1
                                    1- 1247     	.line	611, "main.c"; 	if(ledMin <= 100)
     00B5 2165                      1- 1248     	MOVIA	0x65
                                    1- 1249     	BANKSEL	_ledMin
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 04rr                      1- 1250     	SUBAR	_ledMin,W
     00B8 0C03                      1- 1251     	BTRSC	STATUS,0
     00B9 3rrr                      1- 1252     	LGOTO	_00493_DS_
                                    1- 1253     	.line	613, "main.c"; 	ledMin = 101;
     00BA 2165                      1- 1254     	MOVIA	0x65
     00BB 00rr                      1- 1255     	MOVAR	_ledMin
                                    1- 1256     	.line	614, "main.c"; 	ledMax = 150;
     00BC 2196                      1- 1257     	MOVIA	0x96
                                    1- 1258     	BANKSEL	_ledMax
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 00rr                      1- 1259     	MOVAR	_ledMax
     00BF 3rrr                      1- 1260     	LGOTO	_00493_DS_
                                    1- 1261     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1262     ;;unsigned compare: left >= lit (0x45F=1119), size=2
     00C0                           1- 1263     _00486_DS_:
                                    1- 1264     	.line	617, "main.c"; 	else if(R_AIN4_DATA > 1118)			//6.0V
     00C0 2104                      1- 1265     	MOVIA	0x04
                                    1- 1266     	BANKSEL	_R_AIN4_DATA
     00C1 rrrr                      3-   71 m1      .banksel ram_address
     00C2 04rr                      1- 1267     	SUBAR	(_R_AIN4_DATA + 1),W
     00C3 0903                      1- 1268     	BTRSS	STATUS,2
     00C4 3rrr                      1- 1269     	LGOTO	_00603_DS_
     00C5 215F                      1- 1270     	MOVIA	0x5f
     00C6 04rr                      1- 1271     	SUBAR	_R_AIN4_DATA,W
     00C7                           1- 1272     _00603_DS_:
     00C7 0803                      1- 1273     	BTRSS	STATUS,0
     00C8 3rrr                      1- 1274     	LGOTO	_00483_DS_
                                    1- 1275     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1276     ;;unsigned compare: left >= lit (0x33=51), size=1
                                    1- 1277     	.line	620, "main.c"; 	if(ledMin <= 50)
     00C9 2133                      1- 1278     	MOVIA	0x33
                                    1- 1279     	BANKSEL	_ledMin
     00CA rrrr                      3-   71 m1      .banksel ram_address
     00CB 04rr                      1- 1280     	SUBAR	_ledMin,W
     00CC 0C03                      1- 1281     	BTRSC	STATUS,0
     00CD 3rrr                      1- 1282     	LGOTO	_00493_DS_
                                    1- 1283     	.line	622, "main.c"; 	ledMin = 51;
     00CE 2133                      1- 1284     	MOVIA	0x33
     00CF 00rr                      1- 1285     	MOVAR	_ledMin
                                    1- 1286     	.line	623, "main.c"; 	ledMax = 100;
     00D0 2164                      1- 1287     	MOVIA	0x64
                                    1- 1288     	BANKSEL	_ledMax
     00D1 rrrr                      3-   71 m1      .banksel ram_address
     00D2 00rr                      1- 1289     	MOVAR	_ledMax
     00D3 3rrr                      1- 1290     	LGOTO	_00493_DS_
                                    1- 1291     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1292     ;;unsigned compare: left >= lit (0x425=1061), size=2
     00D4                           1- 1293     _00483_DS_:
                                    1- 1294     	.line	626, "main.c"; 	else if(R_AIN4_DATA > 1060)			//5.4V
     00D4 2104                      1- 1295     	MOVIA	0x04
                                    1- 1296     	BANKSEL	_R_AIN4_DATA
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 04rr                      1- 1297     	SUBAR	(_R_AIN4_DATA + 1),W
     00D7 0903                      1- 1298     	BTRSS	STATUS,2
     00D8 3rrr                      1- 1299     	LGOTO	_00605_DS_
     00D9 2125                      1- 1300     	MOVIA	0x25
     00DA 04rr                      1- 1301     	SUBAR	_R_AIN4_DATA,W
     00DB                           1- 1302     _00605_DS_:
     00DB 0803                      1- 1303     	BTRSS	STATUS,0
     00DC 3rrr                      1- 1304     	LGOTO	_00480_DS_
                                    1- 1305     	.line	628, "main.c"; 	flickerTime = 0;
                                    1- 1306     	BANKSEL	_flickerTime
     00DD rrrr                      3-   71 m1      .banksel ram_address
     00DE 02rr                      1- 1307     	CLRR	_flickerTime
                                    1- 1308     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1309     ;;unsigned compare: left >= lit (0x34=52), size=1
                                    1- 1310     	.line	630, "main.c"; 	if(ledMin <= 51)
     00DF 2134                      1- 1311     	MOVIA	0x34
                                    1- 1312     	BANKSEL	_ledMin
     00E0 rrrr                      3-   71 m1      .banksel ram_address
     00E1 04rr                      1- 1313     	SUBAR	_ledMin,W
     00E2 0C03                      1- 1314     	BTRSC	STATUS,0
     00E3 3rrr                      1- 1315     	LGOTO	_00493_DS_
                                    1- 1316     	.line	632, "main.c"; 	ledMin = 0;
     00E4 02rr                      1- 1317     	CLRR	_ledMin
                                    1- 1318     	.line	633, "main.c"; 	ledMax = 100;
     00E5 2164                      1- 1319     	MOVIA	0x64
                                    1- 1320     	BANKSEL	_ledMax
     00E6 rrrr                      3-   71 m1      .banksel ram_address
     00E7 00rr                      1- 1321     	MOVAR	_ledMax
     00E8 3rrr                      1- 1322     	LGOTO	_00493_DS_
                                    1- 1323     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1324     ;;unsigned compare: left >= lit (0x3EE=1006), size=2
     00E9                           1- 1325     _00480_DS_:
                                    1- 1326     	.line	636, "main.c"; 	else if(R_AIN4_DATA > 1005 && flickerTime == 0)			//5.4V
     00E9 2103                      1- 1327     	MOVIA	0x03
                                    1- 1328     	BANKSEL	_R_AIN4_DATA
     00EA rrrr                      3-   71 m1      .banksel ram_address
     00EB 04rr                      1- 1329     	SUBAR	(_R_AIN4_DATA + 1),W
     00EC 0903                      1- 1330     	BTRSS	STATUS,2
     00ED 3rrr                      1- 1331     	LGOTO	_00607_DS_
     00EE 21EE                      1- 1332     	MOVIA	0xee
     00EF 04rr                      1- 1333     	SUBAR	_R_AIN4_DATA,W
     00F0                           1- 1334     _00607_DS_:
     00F0 0803                      1- 1335     	BTRSS	STATUS,0
     00F1 3rrr                      1- 1336     	LGOTO	_00476_DS_
                                    1- 1337     	BANKSEL	_flickerTime
     00F2 rrrr                      3-   71 m1      .banksel ram_address
     00F3 01rr                      1- 1338     	MOVR	_flickerTime,W
     00F4 0903                      1- 1339     	BTRSS	STATUS,2
     00F5 3rrr                      1- 1340     	LGOTO	_00476_DS_
                                    1- 1341     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1342     ;;unsigned compare: left >= lit (0x34=52), size=1
                                    1- 1343     	.line	639, "main.c"; 	if(ledMin <= 51)
     00F6 2134                      1- 1344     	MOVIA	0x34
                                    1- 1345     	BANKSEL	_ledMin
     00F7 rrrr                      3-   71 m1      .banksel ram_address
     00F8 04rr                      1- 1346     	SUBAR	_ledMin,W
     00F9 0C03                      1- 1347     	BTRSC	STATUS,0
     00FA 3rrr                      1- 1348     	LGOTO	_00493_DS_
                                    1- 1349     	.line	641, "main.c"; 	ledMin = 0;
     00FB 02rr                      1- 1350     	CLRR	_ledMin
                                    1- 1351     	.line	642, "main.c"; 	ledMax = 100;
     00FC 2164                      1- 1352     	MOVIA	0x64
                                    1- 1353     	BANKSEL	_ledMax
     00FD rrrr                      3-   71 m1      .banksel ram_address
     00FE 00rr                      1- 1354     	MOVAR	_ledMax
     00FF 3rrr                      1- 1355     	LGOTO	_00493_DS_
     0100                           1- 1356     _00476_DS_:
                                    1- 1357     	.line	648, "main.c"; 	ledLock = 1;
     0100 2101                      1- 1358     	MOVIA	0x01
                                    1- 1359     	BANKSEL	_ledLock
     0101 rrrr                      3-   71 m1      .banksel ram_address
     0102 00rr                      1- 1360     	MOVAR	_ledLock
                                    1- 1361     	.line	649, "main.c"; 	ledMin = 0;
                                    1- 1362     	BANKSEL	_ledMin
     0103 rrrr                      3-   71 m1      .banksel ram_address
     0104 02rr                      1- 1363     	CLRR	_ledMin
                                    1- 1364     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 1365     	.line	650, "main.c"; 	if(ledCount < 50)
     0105 2132                      1- 1366     	MOVIA	0x32
                                    1- 1367     	BANKSEL	_ledCount
     0106 rrrr                      3-   71 m1      .banksel ram_address
     0107 04rr                      1- 1368     	SUBAR	_ledCount,W
     0108 0C03                      1- 1369     	BTRSC	STATUS,0
     0109 3rrr                      1- 1370     	LGOTO	_00473_DS_
                                    1- 1371     	.line	652, "main.c"; 	LED1_ON();
     010A 1Crr                      1- 1372     	BCR	_PORTB,0
                                    1- 1373     	.line	653, "main.c"; 	LED2_ON();
     010B 1Crr                      1- 1374     	BCR	_PORTB,1
                                    1- 1375     	.line	654, "main.c"; 	LED3_ON();
     010C 1Frr                      1- 1376     	BCR	_PORTA,7
                                    1- 1377     	.line	655, "main.c"; 	LED4_ON();
     010D 1Frr                      1- 1378     	BCR	_PORTA,6
     010E 3rrr                      1- 1379     	LGOTO	_00493_DS_
                                    1- 1380     ;;unsigned compare: left < lit (0x64=100), size=1
     010F                           1- 1381     _00473_DS_:
                                    1- 1382     	.line	657, "main.c"; 	else if(ledCount < 100)
     010F 2164                      1- 1383     	MOVIA	0x64
                                    1- 1384     	BANKSEL	_ledCount
     0110 rrrr                      3-   71 m1      .banksel ram_address
     0111 04rr                      1- 1385     	SUBAR	_ledCount,W
     0112 0C03                      1- 1386     	BTRSC	STATUS,0
     0113 3rrr                      1- 1387     	LGOTO	_00470_DS_
                                    1- 1388     	.line	659, "main.c"; 	LED1_OFF();
     0114 18rr                      1- 1389     	BSR	_PORTB,0
                                    1- 1390     	.line	660, "main.c"; 	LED2_OFF();
     0115 18rr                      1- 1391     	BSR	_PORTB,1
                                    1- 1392     	.line	661, "main.c"; 	LED3_OFF();
     0116 1Brr                      1- 1393     	BSR	_PORTA,7
                                    1- 1394     	.line	662, "main.c"; 	LED4_OFF();	
     0117 1Brr                      1- 1395     	BSR	_PORTA,6
     0118 3rrr                      1- 1396     	LGOTO	_00493_DS_
     0119                           1- 1397     _00470_DS_:
                                    1- 1398     	.line	666, "main.c"; 	ledCount = 0;
                                    1- 1399     	BANKSEL	_ledCount
     0119 rrrr                      3-   71 m1      .banksel ram_address
     011A 02rr                      1- 1400     	CLRR	_ledCount
                                    1- 1401     	.line	667, "main.c"; 	if(++flickerTime > 4)
                                    1- 1402     	BANKSEL	_flickerTime
     011B rrrr                      3-   71 m1      .banksel ram_address
     011C 05rr                      1- 1403     	INCR	_flickerTime,F
                                    1- 1404     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1405     ;;unsigned compare: left >= lit (0x5=5), size=1
     011D 2105                      1- 1406     	MOVIA	0x05
     011E 04rr                      1- 1407     	SUBAR	_flickerTime,W
     011F 0803                      1- 1408     	BTRSS	STATUS,0
     0120 3rrr                      1- 1409     	LGOTO	_00493_DS_
                                    1- 1410     	.line	669, "main.c"; 	flickerTime = 0;
     0121 02rr                      1- 1411     	CLRR	_flickerTime
                                    1- 1412     	.line	670, "main.c"; 	gotoSleep();
     0122 2rrr                      1- 1413     	LCALL	_gotoSleep
                                    1- 1414     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1415     ;;unsigned compare: left >= lit (0x45F=1119), size=2
     0123                           1- 1416     _00493_DS_:
                                    1- 1417     	.line	676, "main.c"; 	if(R_AIN4_DATA > 1118)    //大于6V
     0123 2104                      1- 1418     	MOVIA	0x04
                                    1- 1419     	BANKSEL	_R_AIN4_DATA
     0124 rrrr                      3-   71 m1      .banksel ram_address
     0125 04rr                      1- 1420     	SUBAR	(_R_AIN4_DATA + 1),W
     0126 0903                      1- 1421     	BTRSS	STATUS,2
     0127 3rrr                      1- 1422     	LGOTO	_00612_DS_
     0128 215F                      1- 1423     	MOVIA	0x5f
     0129 04rr                      1- 1424     	SUBAR	_R_AIN4_DATA,W
     012A                           1- 1425     _00612_DS_:
     012A 0803                      1- 1426     	BTRSS	STATUS,0
     012B 3rrr                      1- 1427     	LGOTO	_00510_DS_
                                    1- 1428     ;;unsigned compare: left < lit (0x4DF=1247), size=2
                                    1- 1429     	.line	678, "main.c"; 	if(R_AIN4_DATA < 1247)
     012C 2104                      1- 1430     	MOVIA	0x04
                                    1- 1431     	BANKSEL	_R_AIN4_DATA
     012D rrrr                      3-   71 m1      .banksel ram_address
     012E 04rr                      1- 1432     	SUBAR	(_R_AIN4_DATA + 1),W
     012F 0903                      1- 1433     	BTRSS	STATUS,2
     0130 3rrr                      1- 1434     	LGOTO	_00613_DS_
     0131 21DF                      1- 1435     	MOVIA	0xdf
     0132 04rr                      1- 1436     	SUBAR	_R_AIN4_DATA,W
     0133                           1- 1437     _00613_DS_:
     0133 0C03                      1- 1438     	BTRSC	STATUS,0
     0134 3rrr                      1- 1439     	LGOTO	_00506_DS_
                                    1- 1440     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1441     ;;unsigned compare: left >= lit (0x65=101), size=1
                                    1- 1442     	.line	681, "main.c"; 	if(ledMax > 100)
     0135 2165                      1- 1443     	MOVIA	0x65
                                    1- 1444     	BANKSEL	_ledMax
     0136 rrrr                      3-   71 m1      .banksel ram_address
     0137 04rr                      1- 1445     	SUBAR	_ledMax,W
     0138 0803                      1- 1446     	BTRSS	STATUS,0
     0139 3rrr                      1- 1447     	LGOTO	_00510_DS_
                                    1- 1448     	.line	683, "main.c"; 	ledMin = 51;
     013A 2133                      1- 1449     	MOVIA	0x33
                                    1- 1450     	BANKSEL	_ledMin
     013B rrrr                      3-   71 m1      .banksel ram_address
     013C 00rr                      1- 1451     	MOVAR	_ledMin
                                    1- 1452     	.line	684, "main.c"; 	ledMax = 100;
     013D 2164                      1- 1453     	MOVIA	0x64
                                    1- 1454     	BANKSEL	_ledMax
     013E rrrr                      3-   71 m1      .banksel ram_address
     013F 00rr                      1- 1455     	MOVAR	_ledMax
     0140 3rrr                      1- 1456     	LGOTO	_00510_DS_
                                    1- 1457     ;;unsigned compare: left < lit (0x533=1331), size=2
     0141                           1- 1458     _00506_DS_:
                                    1- 1459     	.line	687, "main.c"; 	else if(R_AIN4_DATA < 1331)
     0141 2105                      1- 1460     	MOVIA	0x05
                                    1- 1461     	BANKSEL	_R_AIN4_DATA
     0142 rrrr                      3-   71 m1      .banksel ram_address
     0143 04rr                      1- 1462     	SUBAR	(_R_AIN4_DATA + 1),W
     0144 0903                      1- 1463     	BTRSS	STATUS,2
     0145 3rrr                      1- 1464     	LGOTO	_00615_DS_
     0146 2133                      1- 1465     	MOVIA	0x33
     0147 04rr                      1- 1466     	SUBAR	_R_AIN4_DATA,W
     0148                           1- 1467     _00615_DS_:
     0148 0C03                      1- 1468     	BTRSC	STATUS,0
     0149 3rrr                      1- 1469     	LGOTO	_00503_DS_
                                    1- 1470     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1471     ;;unsigned compare: left >= lit (0x97=151), size=1
                                    1- 1472     	.line	690, "main.c"; 	if(ledMax > 150)
     014A 2197                      1- 1473     	MOVIA	0x97
                                    1- 1474     	BANKSEL	_ledMax
     014B rrrr                      3-   71 m1      .banksel ram_address
     014C 04rr                      1- 1475     	SUBAR	_ledMax,W
     014D 0803                      1- 1476     	BTRSS	STATUS,0
     014E 3rrr                      1- 1477     	LGOTO	_00510_DS_
                                    1- 1478     	.line	692, "main.c"; 	ledMin = 101;
     014F 2165                      1- 1479     	MOVIA	0x65
                                    1- 1480     	BANKSEL	_ledMin
     0150 rrrr                      3-   71 m1      .banksel ram_address
     0151 00rr                      1- 1481     	MOVAR	_ledMin
                                    1- 1482     	.line	693, "main.c"; 	ledMax = 150;
     0152 2196                      1- 1483     	MOVIA	0x96
                                    1- 1484     	BANKSEL	_ledMax
     0153 rrrr                      3-   71 m1      .banksel ram_address
     0154 00rr                      1- 1485     	MOVAR	_ledMax
     0155 3rrr                      1- 1486     	LGOTO	_00510_DS_
                                    1- 1487     ;;unsigned compare: left < lit (0x5BE=1470), size=2
     0156                           1- 1488     _00503_DS_:
                                    1- 1489     	.line	696, "main.c"; 	else if(R_AIN4_DATA < 1470)
     0156 2105                      1- 1490     	MOVIA	0x05
                                    1- 1491     	BANKSEL	_R_AIN4_DATA
     0157 rrrr                      3-   71 m1      .banksel ram_address
     0158 04rr                      1- 1492     	SUBAR	(_R_AIN4_DATA + 1),W
     0159 0903                      1- 1493     	BTRSS	STATUS,2
     015A 3rrr                      1- 1494     	LGOTO	_00617_DS_
     015B 21BE                      1- 1495     	MOVIA	0xbe
     015C 04rr                      1- 1496     	SUBAR	_R_AIN4_DATA,W
     015D                           1- 1497     _00617_DS_:
     015D 0C03                      1- 1498     	BTRSC	STATUS,0
     015E 3rrr                      1- 1499     	LGOTO	_00510_DS_
                                    1- 1500     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1501     ;;unsigned compare: left >= lit (0xC9=201), size=1
                                    1- 1502     	.line	699, "main.c"; 	if(ledMax > 200)
     015F 21C9                      1- 1503     	MOVIA	0xc9
                                    1- 1504     	BANKSEL	_ledMax
     0160 rrrr                      3-   71 m1      .banksel ram_address
     0161 04rr                      1- 1505     	SUBAR	_ledMax,W
     0162 0803                      1- 1506     	BTRSS	STATUS,0
     0163 3rrr                      1- 1507     	LGOTO	_00510_DS_
                                    1- 1508     	.line	701, "main.c"; 	ledMin = 151;
     0164 2197                      1- 1509     	MOVIA	0x97
                                    1- 1510     	BANKSEL	_ledMin
     0165 rrrr                      3-   71 m1      .banksel ram_address
     0166 00rr                      1- 1511     	MOVAR	_ledMin
                                    1- 1512     	.line	702, "main.c"; 	ledMax = 200;
     0167 21C8                      1- 1513     	MOVIA	0xc8
                                    1- 1514     	BANKSEL	_ledMax
     0168 rrrr                      3-   71 m1      .banksel ram_address
     0169 00rr                      1- 1515     	MOVAR	_ledMax
     016A                           1- 1516     _00510_DS_:
                                    1- 1517     	.line	707, "main.c"; 	}
                                    1- 1518     	RETURN	
     016A 0010                      3-   26 m1      ret
                                    1- 1519     ; exit point of _checkBat
                                    1- 1521     ;***
                                    1- 1522     ;  pBlock Stats: dbName = C
                                    1- 1523     ;***
                                    1- 1524     ;has an exit
                                    1- 1525     ;1 compiler assigned register :
                                    1- 1526     ;   r0x1033
                                    1- 1527     ;; Starting pCode block
                                    1- 1528     .segment "code"; module=main, function=_keyRead
                                    1- 1530     ;local variable name mapping:
     0000                           1- 1532     _keyRead:
                                    1- 1533     ; 2 exit points
                                    1- 1534     	.line	517, "main.c"; 	char keyRead(char KeyStatus)	
                                    1- 1535     	BANKSEL	r0x1033
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1536     	MOVAR	r0x1033
                                    1- 1537     	.line	519, "main.c"; 	if (KeyStatus)
     0002 01rr                      1- 1538     	MOVR	r0x1033,W
     0003 0D03                      1- 1539     	BTRSC	STATUS,2
     0004 3rrr                      1- 1540     	LGOTO	_00438_DS_
                                    1- 1541     	.line	521, "main.c"; 	keyNub = KeyStatus;
     0005 01rr                      1- 1542     	MOVR	r0x1033,W
                                    1- 1543     	BANKSEL	_keyNub
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1544     	MOVAR	_keyNub
                                    1- 1545     	.line	522, "main.c"; 	keyCount++;
                                    1- 1546     	BANKSEL	_keyCount
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 05rr                      1- 1547     	INCR	_keyCount,F
                                    1- 1548     ;;unsigned compare: left < lit (0x96=150), size=1
                                    1- 1549     	.line	523, "main.c"; 	if(keyCount >= 150)
     000A 2196                      1- 1550     	MOVIA	0x96
     000B 04rr                      1- 1551     	SUBAR	_keyCount,W
     000C 0803                      1- 1552     	BTRSS	STATUS,0
     000D 3rrr                      1- 1553     	LGOTO	_00439_DS_
                                    1- 1554     	.line	525, "main.c"; 	keyCount = 200;
     000E 21C8                      1- 1555     	MOVIA	0xc8
     000F 00rr                      1- 1556     	MOVAR	_keyCount
                                    1- 1557     	.line	526, "main.c"; 	if(!longPressFlag)
                                    1- 1558     	BANKSEL	_longPressFlag
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1559     	MOVR	_longPressFlag,W
     0012 0903                      1- 1560     	BTRSS	STATUS,2
     0013 3rrr                      1- 1561     	LGOTO	_00439_DS_
                                    1- 1562     	.line	528, "main.c"; 	longPressFlag = 1;
     0014 2101                      1- 1563     	MOVIA	0x01
     0015 00rr                      1- 1564     	MOVAR	_longPressFlag
                                    1- 1565     	.line	529, "main.c"; 	return 2;
     0016 2102                      1- 1566     	MOVIA	0x02
     0017 3rrr                      1- 1567     	LGOTO	_00440_DS_
                                    1- 1568     ;;unsigned compare: left < lit (0x96=150), size=1
     0018                           1- 1569     _00438_DS_:
                                    1- 1570     	.line	535, "main.c"; 	if(keyCount >= 150)
     0018 2196                      1- 1571     	MOVIA	0x96
                                    1- 1572     	BANKSEL	_keyCount
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 04rr                      1- 1573     	SUBAR	_keyCount,W
     001B 0803                      1- 1574     	BTRSS	STATUS,0
     001C 3rrr                      1- 1575     	LGOTO	_00435_DS_
                                    1- 1576     	.line	537, "main.c"; 	keyCount = 0;
     001D 02rr                      1- 1577     	CLRR	_keyCount
                                    1- 1578     	.line	538, "main.c"; 	longPressFlag = 0;
                                    1- 1579     	BANKSEL	_longPressFlag
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 02rr                      1- 1580     	CLRR	_longPressFlag
                                    1- 1581     	.line	539, "main.c"; 	return	0;
     0020 2100                      1- 1582     	MOVIA	0x00
     0021 3rrr                      1- 1583     	LGOTO	_00440_DS_
                                    1- 1584     ;;unsigned compare: left < lit (0x8=8), size=1
     0022                           1- 1585     _00435_DS_:
                                    1- 1586     	.line	541, "main.c"; 	else if(keyCount >= 8)
     0022 2108                      1- 1587     	MOVIA	0x08
                                    1- 1588     	BANKSEL	_keyCount
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 04rr                      1- 1589     	SUBAR	_keyCount,W
     0025 0803                      1- 1590     	BTRSS	STATUS,0
     0026 3rrr                      1- 1591     	LGOTO	_00436_DS_
                                    1- 1592     	.line	543, "main.c"; 	keyCount = 0;
     0027 02rr                      1- 1593     	CLRR	_keyCount
                                    1- 1594     	.line	544, "main.c"; 	return	1;
     0028 2101                      1- 1595     	MOVIA	0x01
     0029 3rrr                      1- 1596     	LGOTO	_00440_DS_
     002A                           1- 1597     _00436_DS_:
                                    1- 1598     	.line	546, "main.c"; 	keyCount = 0;
                                    1- 1599     	BANKSEL	_keyCount
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 02rr                      1- 1600     	CLRR	_keyCount
                                    1- 1601     	.line	547, "main.c"; 	keyNub = 0;
                                    1- 1602     	BANKSEL	_keyNub
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 02rr                      1- 1603     	CLRR	_keyNub
     002E                           1- 1604     _00439_DS_:
                                    1- 1605     	.line	549, "main.c"; 	return 0;
     002E 2100                      1- 1606     	MOVIA	0x00
     002F                           1- 1607     _00440_DS_:
                                    1- 1608     	.line	550, "main.c"; 	}
                                    1- 1609     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1610     ; exit point of _keyRead
                                    1- 1612     ;***
                                    1- 1613     ;  pBlock Stats: dbName = C
                                    1- 1614     ;***
                                    1- 1615     ;has an exit
                                    1- 1616     ;functions called:
                                    1- 1617     ;   _closeledSlave
                                    1- 1618     ;   _closeledSlave
                                    1- 1619     ;; Starting pCode block
                                    1- 1620     .segment "code"; module=main, function=_ledSlaveCtr
     0000                           1- 1622     _ledSlaveCtr:
                                    1- 1623     ; 2 exit points
                                    1- 1624     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1625     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 1626     	.line	491, "main.c"; 	switch(workStep2)
     0000 2105                      1- 1627     	MOVIA	0x05
                                    1- 1628     	BANKSEL	_workStep2
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1629     	SUBAR	_workStep2,W
     0003 0C03                      1- 1630     	BTRSC	STATUS,0
     0004 3rrr                      1- 1631     	LGOTO	_00417_DS_
     0005 21rr                      1- 1632     	MOVIA	((_00423_DS_ >> 8) & 0xff)
     0006 008A                      1- 1633     	MOVAR	PCHBUF
     0007 01rr                      1- 1634     	MOVR	_workStep2,W
     0008 25rr                      1- 1635     	ADDIA	_00423_DS_
     0009 0C03                      1- 1636     	BTRSC	STATUS,0
     000A 058A                      1- 1637     	INCR	PCHBUF,F
     000B 0082                      1- 1638     	MOVAR	PCL
     000C                           1- 1639     _00423_DS_:
     000C 3rrr                      1- 1640     	LGOTO	_00411_DS_
     000D 3rrr                      1- 1641     	LGOTO	_00412_DS_
     000E 3rrr                      1- 1642     	LGOTO	_00413_DS_
     000F 3rrr                      1- 1643     	LGOTO	_00414_DS_
     0010 3rrr                      1- 1644     	LGOTO	_00415_DS_
     0011                           1- 1645     _00411_DS_:
                                    1- 1646     	.line	494, "main.c"; 	closeledSlave();
     0011 2rrr                      1- 1647     	LCALL	_closeledSlave
                                    1- 1648     	.line	495, "main.c"; 	break;
     0012 3rrr                      1- 1649     	LGOTO	_00417_DS_
     0013                           1- 1650     _00412_DS_:
                                    1- 1651     	.line	497, "main.c"; 	WHITE_ON();
     0013 18rr                      1- 1652     	BSR	_PORTA,1
                                    1- 1653     	.line	498, "main.c"; 	break;
     0014 3rrr                      1- 1654     	LGOTO	_00417_DS_
     0015                           1- 1655     _00413_DS_:
                                    1- 1656     	.line	500, "main.c"; 	WHITE_OFF();
     0015 1Crr                      1- 1657     	BCR	_PORTA,1
                                    1- 1658     	.line	501, "main.c"; 	BLUE_ON();
     0016 1Arr                      1- 1659     	BSR	_PORTB,4
                                    1- 1660     	.line	502, "main.c"; 	break;
     0017 3rrr                      1- 1661     	LGOTO	_00417_DS_
     0018                           1- 1662     _00414_DS_:
                                    1- 1663     	.line	504, "main.c"; 	WHITE_ON();
     0018 18rr                      1- 1664     	BSR	_PORTA,1
                                    1- 1665     	.line	505, "main.c"; 	BLUE_ON();
     0019 1Arr                      1- 1666     	BSR	_PORTB,4
                                    1- 1667     	.line	506, "main.c"; 	break;
     001A 3rrr                      1- 1668     	LGOTO	_00417_DS_
     001B                           1- 1669     _00415_DS_:
                                    1- 1670     	.line	508, "main.c"; 	WHITE_OFF();
     001B 1Crr                      1- 1671     	BCR	_PORTA,1
                                    1- 1672     	.line	509, "main.c"; 	BLUE_OFF();
     001C 1Err                      1- 1673     	BCR	_PORTB,4
     001D                           1- 1674     _00417_DS_:
                                    1- 1675     	.line	514, "main.c"; 	}
                                    1- 1676     	RETURN	
     001D 0010                      3-   26 m1      ret
                                    1- 1677     ; exit point of _ledSlaveCtr
                                    1- 1679     ;***
                                    1- 1680     ;  pBlock Stats: dbName = C
                                    1- 1681     ;***
                                    1- 1682     ;has an exit
                                    1- 1683     ;; Starting pCode block
                                    1- 1684     .segment "code"; module=main, function=_closeledSlave
     0000                           1- 1686     _closeledSlave:
                                    1- 1687     ; 2 exit points
                                    1- 1688     	.line	483, "main.c"; 	PORTB &= 0xC7;
     0000 21C7                      1- 1689     	MOVIA	0xc7
     0001 10rr                      1- 1690     	ANDAR	_PORTB,F
                                    1- 1691     	.line	484, "main.c"; 	PORTA &= 0xFD;
     0002 1Crr                      1- 1692     	BCR	_PORTA,1
                                    1- 1693     	.line	485, "main.c"; 	}
                                    1- 1694     	RETURN	
     0003 0010                      3-   26 m1      ret
                                    1- 1695     ; exit point of _closeledSlave
                                    1- 1697     ;***
                                    1- 1698     ;  pBlock Stats: dbName = C
                                    1- 1699     ;***
                                    1- 1700     ;; Starting pCode block
                                    1- 1701     .segment "code"; module=main, function=_ledMasterCtr
     0000                           1- 1703     _ledMasterCtr:
                                    1- 1704     ; 0 exit points
                                    1- 1705     	.line	475, "main.c"; 	if(workStep1 == 0)
                                    1- 1706     	BANKSEL	_workStep1
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1707     	MOVR	_workStep1,W
     0002 0D03                      1- 1708     	BTRSC	STATUS,2
                                    1- 1709     	.line	477, "main.c"; 	LED_OFF();
     0003 1Drr                      1- 1710     	BCR	_PORTB,2
                                    1- 1711     	.line	479, "main.c"; 	}
                                    1- 1712     	RETURN	
     0004 0010                      3-   26 m1      ret
                                    1- 1714     ;***
                                    1- 1715     ;  pBlock Stats: dbName = C
                                    1- 1716     ;***
                                    1- 1717     ;has an exit
                                    1- 1718     ;functions called:
                                    1- 1719     ;   _keyRead
                                    1- 1720     ;   _keyRead
                                    1- 1721     ;1 compiler assigned register :
                                    1- 1722     ;   r0x1034
                                    1- 1723     ;; Starting pCode block
                                    1- 1724     .segment "code"; module=main, function=_keyCon
     0000                           1- 1726     _keyCon:
                                    1- 1727     ; 2 exit points
                                    1- 1728     	.line	402, "main.c"; 	keyClick = keyRead(0x21&(~PORTA));
     0000 07rr                      1- 1729     	COMR	_PORTA,W
                                    1- 1730     	BANKSEL	r0x1034
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1731     	MOVAR	r0x1034
     0003 2121                      1- 1732     	MOVIA	0x21
     0004 10rr                      1- 1733     	ANDAR	r0x1034,F
     0005 01rr                      1- 1734     	MOVR	r0x1034,W
     0006 2rrr                      1- 1735     	LCALL	_keyRead
                                    1- 1736     	BANKSEL	_keyClick
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 1737     	MOVAR	_keyClick
                                    1- 1738     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1- 1739     	.line	404, "main.c"; 	if(keyClick >= 1)			//K1 K2短按
     0009 2101                      1- 1740     	MOVIA	0x01
     000A 04rr                      1- 1741     	SUBAR	_keyClick,W
     000B 0803                      1- 1742     	BTRSS	STATUS,0
     000C 3rrr                      1- 1743     	LGOTO	_00395_DS_
                                    1- 1744     	.line	406, "main.c"; 	if(keyNub == 1)
                                    1- 1745     	BANKSEL	_keyNub
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 1746     	MOVR	_keyNub,W
     000F 2401                      1- 1747     	XORIA	0x01
     0010 0903                      1- 1748     	BTRSS	STATUS,2
     0011 3rrr                      1- 1749     	LGOTO	_00391_DS_
                                    1- 1750     	.line	409, "main.c"; 	if(workStep2 == 0)
                                    1- 1751     	BANKSEL	_workStep2
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 1752     	MOVR	_workStep2,W
     0014 0903                      1- 1753     	BTRSS	STATUS,2
     0015 3rrr                      1- 1754     	LGOTO	_00376_DS_
                                    1- 1755     	.line	412, "main.c"; 	workStep2 = 1;
     0016 2101                      1- 1756     	MOVIA	0x01
     0017 00rr                      1- 1757     	MOVAR	_workStep2
                                    1- 1758     	.line	413, "main.c"; 	K2Count = 10;		//5秒倒计时
     0018 210A                      1- 1759     	MOVIA	0x0a
                                    1- 1760     	BANKSEL	_K2Count
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 1761     	MOVAR	_K2Count
                                    1- 1762     	.line	414, "main.c"; 	ledMax = 250;
     001B 21FA                      1- 1763     	MOVIA	0xfa
                                    1- 1764     	BANKSEL	_ledMax
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1- 1765     	MOVAR	_ledMax
                                    1- 1766     	.line	415, "main.c"; 	ledMin = 0;
                                    1- 1767     	BANKSEL	_ledMin
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 02rr                      1- 1768     	CLRR	_ledMin
                                    1- 1769     	.line	416, "main.c"; 	ledLock = 0;
                                    1- 1770     	BANKSEL	_ledLock
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 02rr                      1- 1771     	CLRR	_ledLock
                                    1- 1772     	.line	417, "main.c"; 	if(workStep1 == 0)
                                    1- 1773     	BANKSEL	_workStep1
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1774     	MOVR	_workStep1,W
     0024 0903                      1- 1775     	BTRSS	STATUS,2
     0025 3rrr                      1- 1776     	LGOTO	_00367_DS_
                                    1- 1777     	.line	418, "main.c"; 	firstFlag = 1;
     0026 2101                      1- 1778     	MOVIA	0x01
                                    1- 1779     	BANKSEL	_firstFlag
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1- 1780     	MOVAR	_firstFlag
                                    1- 1781     ;;unsigned compare: left < lit (0x32=50), size=1
     0029                           1- 1782     _00367_DS_:
                                    1- 1783     	.line	419, "main.c"; 	if(ledCount < 50)
     0029 2132                      1- 1784     	MOVIA	0x32
                                    1- 1785     	BANKSEL	_ledCount
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 04rr                      1- 1786     	SUBAR	_ledCount,W
     002C 0C03                      1- 1787     	BTRSC	STATUS,0
     002D 3rrr                      1- 1788     	LGOTO	_00395_DS_
                                    1- 1789     	.line	420, "main.c"; 	ledCount = 50;
     002E 2132                      1- 1790     	MOVIA	0x32
     002F 00rr                      1- 1791     	MOVAR	_ledCount
     0030 3rrr                      1- 1792     	LGOTO	_00395_DS_
     0031                           1- 1793     _00376_DS_:
                                    1- 1794     	.line	424, "main.c"; 	if(K2Count)
                                    1- 1795     	BANKSEL	_K2Count
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1- 1796     	MOVR	_K2Count,W
     0033 0D03                      1- 1797     	BTRSC	STATUS,2
     0034 3rrr                      1- 1798     	LGOTO	_00373_DS_
                                    1- 1799     	.line	426, "main.c"; 	K2Count = 10;		//重置5秒倒计时
     0035 210A                      1- 1800     	MOVIA	0x0a
     0036 00rr                      1- 1801     	MOVAR	_K2Count
                                    1- 1802     	.line	427, "main.c"; 	workStep3 = 1;		//重置
     0037 2101                      1- 1803     	MOVIA	0x01
                                    1- 1804     	BANKSEL	_workStep3
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 00rr                      1- 1805     	MOVAR	_workStep3
                                    1- 1806     	.line	428, "main.c"; 	countms = 0;
                                    1- 1807     	BANKSEL	_countms
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 02rr                      1- 1808     	CLRR	_countms
     003C 02rr                      1- 1809     	CLRR	(_countms + 1)
                                    1- 1810     	.line	429, "main.c"; 	ledTime = 0;
                                    1- 1811     	BANKSEL	_ledTime
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 02rr                      1- 1812     	CLRR	_ledTime
                                    1- 1813     	.line	430, "main.c"; 	if(++workStep2 > 4)
                                    1- 1814     	BANKSEL	_workStep2
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 05rr                      1- 1815     	INCR	_workStep2,F
                                    1- 1816     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1817     ;;unsigned compare: left >= lit (0x5=5), size=1
     0041 2105                      1- 1818     	MOVIA	0x05
     0042 04rr                      1- 1819     	SUBAR	_workStep2,W
     0043 0803                      1- 1820     	BTRSS	STATUS,0
     0044 3rrr                      1- 1821     	LGOTO	_00395_DS_
                                    1- 1822     	.line	431, "main.c"; 	workStep2 = 0;
     0045 02rr                      1- 1823     	CLRR	_workStep2
     0046 3rrr                      1- 1824     	LGOTO	_00395_DS_
     0047                           1- 1825     _00373_DS_:
                                    1- 1826     	.line	435, "main.c"; 	workStep2 = 0;
                                    1- 1827     	BANKSEL	_workStep2
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 02rr                      1- 1828     	CLRR	_workStep2
     0049 3rrr                      1- 1829     	LGOTO	_00395_DS_
     004A                           1- 1830     _00391_DS_:
                                    1- 1831     	.line	442, "main.c"; 	if(workStep1 == 0)
                                    1- 1832     	BANKSEL	_workStep1
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 01rr                      1- 1833     	MOVR	_workStep1,W
     004C 0903                      1- 1834     	BTRSS	STATUS,2
     004D 3rrr                      1- 1835     	LGOTO	_00388_DS_
                                    1- 1836     	.line	444, "main.c"; 	workStep1 = 1;
     004E 2101                      1- 1837     	MOVIA	0x01
     004F 00rr                      1- 1838     	MOVAR	_workStep1
                                    1- 1839     	.line	445, "main.c"; 	K1Count = 10;		//5秒倒计时
     0050 210A                      1- 1840     	MOVIA	0x0a
                                    1- 1841     	BANKSEL	_K1Count
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1- 1842     	MOVAR	_K1Count
                                    1- 1843     	.line	446, "main.c"; 	ledMax = 250;
     0053 21FA                      1- 1844     	MOVIA	0xfa
                                    1- 1845     	BANKSEL	_ledMax
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 00rr                      1- 1846     	MOVAR	_ledMax
                                    1- 1847     	.line	447, "main.c"; 	ledMin = 0;
                                    1- 1848     	BANKSEL	_ledMin
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 02rr                      1- 1849     	CLRR	_ledMin
                                    1- 1850     	.line	448, "main.c"; 	ledLock = 0;
                                    1- 1851     	BANKSEL	_ledLock
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 02rr                      1- 1852     	CLRR	_ledLock
                                    1- 1853     	.line	449, "main.c"; 	if(workStep2 == 0)
                                    1- 1854     	BANKSEL	_workStep2
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 01rr                      1- 1855     	MOVR	_workStep2,W
     005C 0903                      1- 1856     	BTRSS	STATUS,2
     005D 3rrr                      1- 1857     	LGOTO	_00379_DS_
                                    1- 1858     	.line	450, "main.c"; 	firstFlag = 1;
     005E 2101                      1- 1859     	MOVIA	0x01
                                    1- 1860     	BANKSEL	_firstFlag
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 00rr                      1- 1861     	MOVAR	_firstFlag
                                    1- 1862     ;;unsigned compare: left < lit (0x32=50), size=1
     0061                           1- 1863     _00379_DS_:
                                    1- 1864     	.line	451, "main.c"; 	if(ledCount < 50)
     0061 2132                      1- 1865     	MOVIA	0x32
                                    1- 1866     	BANKSEL	_ledCount
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 04rr                      1- 1867     	SUBAR	_ledCount,W
     0064 0C03                      1- 1868     	BTRSC	STATUS,0
     0065 3rrr                      1- 1869     	LGOTO	_00395_DS_
                                    1- 1870     	.line	452, "main.c"; 	ledCount = 50;
     0066 2132                      1- 1871     	MOVIA	0x32
     0067 00rr                      1- 1872     	MOVAR	_ledCount
     0068 3rrr                      1- 1873     	LGOTO	_00395_DS_
     0069                           1- 1874     _00388_DS_:
                                    1- 1875     	.line	456, "main.c"; 	if(K1Count)
                                    1- 1876     	BANKSEL	_K1Count
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 01rr                      1- 1877     	MOVR	_K1Count,W
     006B 0D03                      1- 1878     	BTRSC	STATUS,2
     006C 3rrr                      1- 1879     	LGOTO	_00385_DS_
                                    1- 1880     	.line	458, "main.c"; 	K1Count = 10;		//重置5秒倒计时
     006D 210A                      1- 1881     	MOVIA	0x0a
     006E 00rr                      1- 1882     	MOVAR	_K1Count
                                    1- 1883     	.line	459, "main.c"; 	if(++workStep1 > 3)
                                    1- 1884     	BANKSEL	_workStep1
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 05rr                      1- 1885     	INCR	_workStep1,F
                                    1- 1886     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1887     ;;unsigned compare: left >= lit (0x4=4), size=1
     0071 2104                      1- 1888     	MOVIA	0x04
     0072 04rr                      1- 1889     	SUBAR	_workStep1,W
     0073 0803                      1- 1890     	BTRSS	STATUS,0
     0074 3rrr                      1- 1891     	LGOTO	_00395_DS_
                                    1- 1892     	.line	460, "main.c"; 	workStep1 = 0;
     0075 02rr                      1- 1893     	CLRR	_workStep1
     0076 3rrr                      1- 1894     	LGOTO	_00395_DS_
     0077                           1- 1895     _00385_DS_:
                                    1- 1896     	.line	464, "main.c"; 	workStep1 = 0;
                                    1- 1897     	BANKSEL	_workStep1
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 02rr                      1- 1898     	CLRR	_workStep1
     0079                           1- 1899     _00395_DS_:
                                    1- 1900     	.line	470, "main.c"; 	}
                                    1- 1901     	RETURN	
     0079 0010                      3-   26 m1      ret
                                    1- 1902     ; exit point of _keyCon
                                    1- 1904     ;***
                                    1- 1905     ;  pBlock Stats: dbName = C
                                    1- 1906     ;***
                                    1- 1907     ;has an exit
                                    1- 1908     ;3 compiler assigned registers:
                                    1- 1909     ;   r0x1035
                                    1- 1910     ;   STK00
                                    1- 1911     ;   r0x1036
                                    1- 1912     ;; Starting pCode block
                                    1- 1913     .segment "code"; module=main, function=_setPWMduty
                                    1- 1915     ;local variable name mapping:
     0000                           1- 1918     _setPWMduty:
                                    1- 1919     ; 2 exit points
                                    1- 1920     	.line	391, "main.c"; 	void setPWMduty(char portPin,char duty)
                                    1- 1921     	BANKSEL	r0x1035
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1922     	MOVAR	r0x1035
     0002 01rr                      1- 1923     	MOVR	STK00,W
                                    1- 1924     	BANKSEL	r0x1036
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1925     	MOVAR	r0x1036
                                    1- 1926     	.line	393, "main.c"; 	if(intCount <= duty)
                                    1- 1927     	BANKSEL	_intCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1928     	MOVR	_intCount,W
                                    1- 1929     	BANKSEL	r0x1036
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 04rr                      1- 1930     	SUBAR	r0x1036,W
     0009 0803                      1- 1931     	BTRSS	STATUS,0
     000A 3rrr                      1- 1932     	LGOTO	_00359_DS_
                                    1- 1933     	.line	394, "main.c"; 	PORTB |= portPin;
                                    1- 1934     	BANKSEL	r0x1035
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1935     	MOVR	r0x1035,W
     000D 11rr                      1- 1936     	IORAR	_PORTB,F
     000E 3rrr                      1- 1937     	LGOTO	_00361_DS_
     000F                           1- 1938     _00359_DS_:
                                    1- 1939     	.line	396, "main.c"; 	PORTB &= (~portPin);
                                    1- 1940     	BANKSEL	r0x1035
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 07rr                      1- 1941     	COMR	r0x1035,W
     0011 00rr                      1- 1942     	MOVAR	r0x1035
     0012 10rr                      1- 1943     	ANDAR	_PORTB,F
     0013                           1- 1944     _00361_DS_:
                                    1- 1945     	.line	397, "main.c"; 	}
                                    1- 1946     	RETURN	
     0013 0010                      3-   26 m1      ret
                                    1- 1947     ; exit point of _setPWMduty
                                    1- 1949     ;***
                                    1- 1950     ;  pBlock Stats: dbName = C
                                    1- 1951     ;***
                                    1- 1952     ;has an exit
                                    1- 1953     ;functions called:
                                    1- 1954     ;   _delay
                                    1- 1955     ;   _delay
                                    1- 1956     ;   _delay
                                    1- 1957     ;   __moduint
                                    1- 1958     ;   _delay
                                    1- 1959     ;   __moduint
                                    1- 1960     ;   _delay
                                    1- 1961     ;   _delay
                                    1- 1962     ;   _delay
                                    1- 1963     ;   _delay
                                    1- 1964     ;   __moduint
                                    1- 1965     ;   _delay
                                    1- 1966     ;   __moduint
                                    1- 1967     ;   _delay
                                    1- 1968     ;5 compiler assigned registers:
                                    1- 1969     ;   STK00
                                    1- 1970     ;   STK02
                                    1- 1971     ;   STK01
                                    1- 1972     ;   r0x1037
                                    1- 1973     ;   r0x1038
                                    1- 1974     ;; Starting pCode block
                                    1- 1975     .segment "code"; module=main, function=_mode4
     0000                           1- 1977     _mode4:
                                    1- 1978     ; 2 exit points
                                    1- 1979     	.line	288, "main.c"; 	if(workStep3 == 1)
                                    1- 1980     	BANKSEL	_workStep3
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1981     	MOVR	_workStep3,W
     0002 2401                      1- 1982     	XORIA	0x01
     0003 0903                      1- 1983     	BTRSS	STATUS,2
     0004 3rrr                      1- 1984     	LGOTO	_00291_DS_
                                    1- 1985     	.line	291, "main.c"; 	if(countms == 100)
                                    1- 1986     	BANKSEL	_countms
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1987     	MOVR	_countms,W
     0007 2464                      1- 1988     	XORIA	0x64
     0008 0903                      1- 1989     	BTRSS	STATUS,2
     0009 3rrr                      1- 1990     	LGOTO	_00256_DS_
     000A 01rr                      1- 1991     	MOVR	(_countms + 1),W
     000B 2400                      1- 1992     	XORIA	0x00
     000C 0903                      1- 1993     	BTRSS	STATUS,2
     000D 3rrr                      1- 1994     	LGOTO	_00256_DS_
                                    1- 1995     	.line	293, "main.c"; 	YELLOW_ON();
     000E 1Arr                      1- 1996     	BSR	_PORTB,5
                                    1- 1997     	.line	294, "main.c"; 	delay(wts);
     000F 21BC                      1- 1998     	MOVIA	0xbc
     0010 00rr                      1- 1999     	MOVAR	STK00
     0011 2102                      1- 2000     	MOVIA	0x02
     0012 2rrr                      1- 2001     	LCALL	_delay
                                    1- 2002     	.line	295, "main.c"; 	YELLOW_OFF();
     0013 1Err                      1- 2003     	BCR	_PORTB,5
     0014                           1- 2004     _00256_DS_:
                                    1- 2005     	.line	301, "main.c"; 	if(countms == 500)
                                    1- 2006     	BANKSEL	_countms
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 2007     	MOVR	_countms,W
     0016 24F4                      1- 2008     	XORIA	0xf4
     0017 0903                      1- 2009     	BTRSS	STATUS,2
     0018 3rrr                      1- 2010     	LGOTO	_00258_DS_
     0019 01rr                      1- 2011     	MOVR	(_countms + 1),W
     001A 2401                      1- 2012     	XORIA	0x01
     001B 0903                      1- 2013     	BTRSS	STATUS,2
     001C 3rrr                      1- 2014     	LGOTO	_00258_DS_
                                    1- 2015     	.line	303, "main.c"; 	RED_ON();
     001D 19rr                      1- 2016     	BSR	_PORTB,3
                                    1- 2017     	.line	304, "main.c"; 	delay(wts);
     001E 21BC                      1- 2018     	MOVIA	0xbc
     001F 00rr                      1- 2019     	MOVAR	STK00
     0020 2102                      1- 2020     	MOVIA	0x02
     0021 2rrr                      1- 2021     	LCALL	_delay
                                    1- 2022     	.line	305, "main.c"; 	RED_OFF();
     0022 1Drr                      1- 2023     	BCR	_PORTB,3
                                    1- 2024     ;;unsigned compare: left < lit (0x258=600), size=2
     0023                           1- 2025     _00258_DS_:
                                    1- 2026     	.line	310, "main.c"; 	if(countms >= 600)
     0023 2102                      1- 2027     	MOVIA	0x02
                                    1- 2028     	BANKSEL	_countms
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 04rr                      1- 2029     	SUBAR	(_countms + 1),W
     0026 0903                      1- 2030     	BTRSS	STATUS,2
     0027 3rrr                      1- 2031     	LGOTO	_00346_DS_
     0028 2158                      1- 2032     	MOVIA	0x58
     0029 04rr                      1- 2033     	SUBAR	_countms,W
     002A                           1- 2034     _00346_DS_:
     002A 0803                      1- 2035     	BTRSS	STATUS,0
     002B 3rrr                      1- 2036     	LGOTO	_00292_DS_
                                    1- 2037     	.line	312, "main.c"; 	countms = 0;
                                    1- 2038     	BANKSEL	_countms
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 02rr                      1- 2039     	CLRR	_countms
     002E 02rr                      1- 2040     	CLRR	(_countms + 1)
                                    1- 2041     	.line	313, "main.c"; 	if(++ledTime > 9)
                                    1- 2042     	BANKSEL	_ledTime
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 05rr                      1- 2043     	INCR	_ledTime,F
                                    1- 2044     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2045     ;;unsigned compare: left >= lit (0xA=10), size=1
     0031 210A                      1- 2046     	MOVIA	0x0a
     0032 04rr                      1- 2047     	SUBAR	_ledTime,W
     0033 0803                      1- 2048     	BTRSS	STATUS,0
     0034 3rrr                      1- 2049     	LGOTO	_00292_DS_
                                    1- 2050     	.line	315, "main.c"; 	ledTime = 0;
     0035 02rr                      1- 2051     	CLRR	_ledTime
                                    1- 2052     	.line	316, "main.c"; 	workStep3 = 2;
     0036 2102                      1- 2053     	MOVIA	0x02
                                    1- 2054     	BANKSEL	_workStep3
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 2055     	MOVAR	_workStep3
     0039 3rrr                      1- 2056     	LGOTO	_00292_DS_
     003A                           1- 2057     _00291_DS_:
                                    1- 2058     	.line	320, "main.c"; 	else if(workStep3 == 2)
                                    1- 2059     	BANKSEL	_workStep3
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1- 2060     	MOVR	_workStep3,W
     003C 2402                      1- 2061     	XORIA	0x02
     003D 0903                      1- 2062     	BTRSS	STATUS,2
     003E 3rrr                      1- 2063     	LGOTO	_00288_DS_
                                    1- 2064     	.line	324, "main.c"; 	if(countms == 1)
                                    1- 2065     	BANKSEL	_countms
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1- 2066     	MOVR	_countms,W
     0041 2401                      1- 2067     	XORIA	0x01
     0042 0903                      1- 2068     	BTRSS	STATUS,2
     0043 3rrr                      1- 2069     	LGOTO	_00264_DS_
     0044 01rr                      1- 2070     	MOVR	(_countms + 1),W
     0045 2400                      1- 2071     	XORIA	0x00
     0046 0903                      1- 2072     	BTRSS	STATUS,2
     0047 3rrr                      1- 2073     	LGOTO	_00264_DS_
                                    1- 2074     	.line	326, "main.c"; 	YELLOW_ON();
     0048 1Arr                      1- 2075     	BSR	_PORTB,5
                                    1- 2076     	.line	327, "main.c"; 	RED_ON();
     0049 19rr                      1- 2077     	BSR	_PORTB,3
                                    1- 2078     	.line	328, "main.c"; 	delay(wts);
     004A 21BC                      1- 2079     	MOVIA	0xbc
     004B 00rr                      1- 2080     	MOVAR	STK00
     004C 2102                      1- 2081     	MOVIA	0x02
     004D 2rrr                      1- 2082     	LCALL	_delay
                                    1- 2083     	.line	329, "main.c"; 	YELLOW_OFF();
     004E 1Err                      1- 2084     	BCR	_PORTB,5
                                    1- 2085     	.line	330, "main.c"; 	RED_OFF();
     004F 1Drr                      1- 2086     	BCR	_PORTB,3
                                    1- 2087     ;;unsigned compare: left < lit (0x12C=300), size=2
     0050                           1- 2088     _00264_DS_:
                                    1- 2089     	.line	338, "main.c"; 	if(countms >= 300)
     0050 2101                      1- 2090     	MOVIA	0x01
                                    1- 2091     	BANKSEL	_countms
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 04rr                      1- 2092     	SUBAR	(_countms + 1),W
     0053 0903                      1- 2093     	BTRSS	STATUS,2
     0054 3rrr                      1- 2094     	LGOTO	_00348_DS_
     0055 212C                      1- 2095     	MOVIA	0x2c
     0056 04rr                      1- 2096     	SUBAR	_countms,W
     0057                           1- 2097     _00348_DS_:
     0057 0803                      1- 2098     	BTRSS	STATUS,0
     0058 3rrr                      1- 2099     	LGOTO	_00292_DS_
                                    1- 2100     	.line	340, "main.c"; 	countms = 0;
                                    1- 2101     	BANKSEL	_countms
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 02rr                      1- 2102     	CLRR	_countms
     005B 02rr                      1- 2103     	CLRR	(_countms + 1)
                                    1- 2104     	.line	341, "main.c"; 	if(++ledTime > 9)
                                    1- 2105     	BANKSEL	_ledTime
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 05rr                      1- 2106     	INCR	_ledTime,F
                                    1- 2107     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2108     ;;unsigned compare: left >= lit (0xA=10), size=1
     005E 210A                      1- 2109     	MOVIA	0x0a
     005F 04rr                      1- 2110     	SUBAR	_ledTime,W
     0060 0803                      1- 2111     	BTRSS	STATUS,0
     0061 3rrr                      1- 2112     	LGOTO	_00292_DS_
                                    1- 2113     	.line	343, "main.c"; 	ledTime = 0;
     0062 02rr                      1- 2114     	CLRR	_ledTime
                                    1- 2115     	.line	344, "main.c"; 	workStep3 = 3;
     0063 2103                      1- 2116     	MOVIA	0x03
                                    1- 2117     	BANKSEL	_workStep3
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 00rr                      1- 2118     	MOVAR	_workStep3
     0066 3rrr                      1- 2119     	LGOTO	_00292_DS_
     0067                           1- 2120     _00288_DS_:
                                    1- 2121     	.line	348, "main.c"; 	else if(workStep3 == 3)
                                    1- 2122     	BANKSEL	_workStep3
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 01rr                      1- 2123     	MOVR	_workStep3,W
     0069 2403                      1- 2124     	XORIA	0x03
     006A 0903                      1- 2125     	BTRSS	STATUS,2
     006B 3rrr                      1- 2126     	LGOTO	_00292_DS_
                                    1- 2127     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2128     ;;unsigned compare: left >= lit (0x169=361), size=2
                                    1- 2129     	.line	350, "main.c"; 	if(countms <= 360)
     006C 2101                      1- 2130     	MOVIA	0x01
                                    1- 2131     	BANKSEL	_countms
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 04rr                      1- 2132     	SUBAR	(_countms + 1),W
     006F 0903                      1- 2133     	BTRSS	STATUS,2
     0070 3rrr                      1- 2134     	LGOTO	_00350_DS_
     0071 2169                      1- 2135     	MOVIA	0x69
     0072 04rr                      1- 2136     	SUBAR	_countms,W
     0073                           1- 2137     _00350_DS_:
     0073 0C03                      1- 2138     	BTRSC	STATUS,0
     0074 3rrr                      1- 2139     	LGOTO	_00279_DS_
                                    1- 2140     	.line	352, "main.c"; 	if(countms % 60 == 0)
     0075 213C                      1- 2141     	MOVIA	0x3c
     0076 00rr                      1- 2142     	MOVAR	STK02
     0077 2100                      1- 2143     	MOVIA	0x00
     0078 00rr                      1- 2144     	MOVAR	STK01
                                    1- 2145     	BANKSEL	_countms
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 01rr                      1- 2146     	MOVR	_countms,W
     007B 00rr                      1- 2147     	MOVAR	STK00
     007C 01rr                      1- 2148     	MOVR	(_countms + 1),W
     007D 2rrr                      1- 2149     	LCALL	__moduint
                                    1- 2150     	BANKSEL	r0x1037
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 00rr                      1- 2151     	MOVAR	r0x1037
     0080 01rr                      1- 2152     	MOVR	STK00,W
                                    1- 2153     	BANKSEL	r0x1038
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 00rr                      1- 2154     	MOVAR	r0x1038
                                    1- 2155     	BANKSEL	r0x1037
     0083 rrrr                      3-   71 m1      .banksel ram_address
     0084 11rr                      1- 2156     	IORAR	r0x1037,W
     0085 0903                      1- 2157     	BTRSS	STATUS,2
     0086 3rrr                      1- 2158     	LGOTO	_00280_DS_
                                    1- 2159     	.line	354, "main.c"; 	YELLOW_ON();
     0087 1Arr                      1- 2160     	BSR	_PORTB,5
                                    1- 2161     	.line	355, "main.c"; 	delay(wts);
     0088 21BC                      1- 2162     	MOVIA	0xbc
     0089 00rr                      1- 2163     	MOVAR	STK00
     008A 2102                      1- 2164     	MOVIA	0x02
     008B 2rrr                      1- 2165     	LCALL	_delay
                                    1- 2166     	.line	356, "main.c"; 	YELLOW_OFF();
     008C 1Err                      1- 2167     	BCR	_PORTB,5
     008D 3rrr                      1- 2168     	LGOTO	_00280_DS_
                                    1- 2169     ;;unsigned compare: left < lit (0x1F4=500), size=2
     008E                           1- 2170     _00279_DS_:
                                    1- 2171     	.line	361, "main.c"; 	else if(countms < 500)
     008E 2101                      1- 2172     	MOVIA	0x01
                                    1- 2173     	BANKSEL	_countms
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 04rr                      1- 2174     	SUBAR	(_countms + 1),W
     0091 0903                      1- 2175     	BTRSS	STATUS,2
     0092 3rrr                      1- 2176     	LGOTO	_00351_DS_
     0093 21F4                      1- 2177     	MOVIA	0xf4
     0094 04rr                      1- 2178     	SUBAR	_countms,W
     0095                           1- 2179     _00351_DS_:
     0095 0C03                      1- 2180     	BTRSC	STATUS,0
     0096 3rrr                      1- 2181     	LGOTO	_00276_DS_
                                    1- 2182     	.line	363, "main.c"; 	YELLOW_OFF();
     0097 1Err                      1- 2183     	BCR	_PORTB,5
     0098 3rrr                      1- 2184     	LGOTO	_00280_DS_
                                    1- 2185     ;;unsigned compare: left < lit (0x35C=860), size=2
     0099                           1- 2186     _00276_DS_:
                                    1- 2187     	.line	365, "main.c"; 	else if(countms < 860)
     0099 2103                      1- 2188     	MOVIA	0x03
                                    1- 2189     	BANKSEL	_countms
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 04rr                      1- 2190     	SUBAR	(_countms + 1),W
     009C 0903                      1- 2191     	BTRSS	STATUS,2
     009D 3rrr                      1- 2192     	LGOTO	_00352_DS_
     009E 215C                      1- 2193     	MOVIA	0x5c
     009F 04rr                      1- 2194     	SUBAR	_countms,W
     00A0                           1- 2195     _00352_DS_:
     00A0 0C03                      1- 2196     	BTRSC	STATUS,0
     00A1 3rrr                      1- 2197     	LGOTO	_00280_DS_
                                    1- 2198     	.line	367, "main.c"; 	if(countms % 60 == 0)
     00A2 213C                      1- 2199     	MOVIA	0x3c
     00A3 00rr                      1- 2200     	MOVAR	STK02
     00A4 2100                      1- 2201     	MOVIA	0x00
     00A5 00rr                      1- 2202     	MOVAR	STK01
                                    1- 2203     	BANKSEL	_countms
     00A6 rrrr                      3-   71 m1      .banksel ram_address
     00A7 01rr                      1- 2204     	MOVR	_countms,W
     00A8 00rr                      1- 2205     	MOVAR	STK00
     00A9 01rr                      1- 2206     	MOVR	(_countms + 1),W
     00AA 2rrr                      1- 2207     	LCALL	__moduint
                                    1- 2208     	BANKSEL	r0x1037
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 00rr                      1- 2209     	MOVAR	r0x1037
     00AD 01rr                      1- 2210     	MOVR	STK00,W
                                    1- 2211     	BANKSEL	r0x1038
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 00rr                      1- 2212     	MOVAR	r0x1038
                                    1- 2213     	BANKSEL	r0x1037
     00B0 rrrr                      3-   71 m1      .banksel ram_address
     00B1 11rr                      1- 2214     	IORAR	r0x1037,W
     00B2 0903                      1- 2215     	BTRSS	STATUS,2
     00B3 3rrr                      1- 2216     	LGOTO	_00280_DS_
                                    1- 2217     	.line	369, "main.c"; 	RED_ON();
     00B4 19rr                      1- 2218     	BSR	_PORTB,3
                                    1- 2219     	.line	370, "main.c"; 	delay(wts);
     00B5 21BC                      1- 2220     	MOVIA	0xbc
     00B6 00rr                      1- 2221     	MOVAR	STK00
     00B7 2102                      1- 2222     	MOVIA	0x02
     00B8 2rrr                      1- 2223     	LCALL	_delay
                                    1- 2224     	.line	371, "main.c"; 	RED_OFF();
     00B9 1Drr                      1- 2225     	BCR	_PORTB,3
                                    1- 2226     ;;unsigned compare: left < lit (0x35C=860), size=2
     00BA                           1- 2227     _00280_DS_:
                                    1- 2228     	.line	376, "main.c"; 	if(countms >= 860)
     00BA 2103                      1- 2229     	MOVIA	0x03
                                    1- 2230     	BANKSEL	_countms
     00BB rrrr                      3-   71 m1      .banksel ram_address
     00BC 04rr                      1- 2231     	SUBAR	(_countms + 1),W
     00BD 0903                      1- 2232     	BTRSS	STATUS,2
     00BE 3rrr                      1- 2233     	LGOTO	_00353_DS_
     00BF 215C                      1- 2234     	MOVIA	0x5c
     00C0 04rr                      1- 2235     	SUBAR	_countms,W
     00C1                           1- 2236     _00353_DS_:
     00C1 0803                      1- 2237     	BTRSS	STATUS,0
     00C2 3rrr                      1- 2238     	LGOTO	_00292_DS_
                                    1- 2239     	.line	378, "main.c"; 	countms = 0;
                                    1- 2240     	BANKSEL	_countms
     00C3 rrrr                      3-   71 m1      .banksel ram_address
     00C4 02rr                      1- 2241     	CLRR	_countms
     00C5 02rr                      1- 2242     	CLRR	(_countms + 1)
                                    1- 2243     	.line	379, "main.c"; 	if(++ledTime > 9)
                                    1- 2244     	BANKSEL	_ledTime
     00C6 rrrr                      3-   71 m1      .banksel ram_address
     00C7 05rr                      1- 2245     	INCR	_ledTime,F
                                    1- 2246     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2247     ;;unsigned compare: left >= lit (0xA=10), size=1
     00C8 210A                      1- 2248     	MOVIA	0x0a
     00C9 04rr                      1- 2249     	SUBAR	_ledTime,W
     00CA 0803                      1- 2250     	BTRSS	STATUS,0
     00CB 3rrr                      1- 2251     	LGOTO	_00292_DS_
                                    1- 2252     	.line	381, "main.c"; 	ledTime = 0;
     00CC 02rr                      1- 2253     	CLRR	_ledTime
                                    1- 2254     	.line	382, "main.c"; 	workStep3 = 1;
     00CD 2101                      1- 2255     	MOVIA	0x01
                                    1- 2256     	BANKSEL	_workStep3
     00CE rrrr                      3-   71 m1      .banksel ram_address
     00CF 00rr                      1- 2257     	MOVAR	_workStep3
     00D0                           1- 2258     _00292_DS_:
                                    1- 2259     	.line	386, "main.c"; 	++countms;
                                    1- 2260     	BANKSEL	_countms
     00D0 rrrr                      3-   71 m1      .banksel ram_address
     00D1 05rr                      1- 2261     	INCR	_countms,F
     00D2 0D03                      1- 2262     	BTRSC	STATUS,2
     00D3 05rr                      1- 2263     	INCR	(_countms + 1),F
                                    1- 2264     	.line	387, "main.c"; 	}
                                    1- 2265     	RETURN	
     00D4 0010                      3-   26 m1      ret
                                    1- 2266     ; exit point of _mode4
                                    1- 2268     ;***
                                    1- 2269     ;  pBlock Stats: dbName = C
                                    1- 2270     ;***
                                    1- 2271     ;has an exit
                                    1- 2272     ;; Starting pCode block
                                    1- 2273     .segment "code"; module=main, function=_chrgLed
     0000                           1- 2275     _chrgLed:
                                    1- 2276     ; 2 exit points
                                    1- 2277     	.line	268, "main.c"; 	if(ledLock)
                                    1- 2278     	BANKSEL	_ledLock
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2279     	MOVR	_ledLock,W
     0002 0903                      1- 2280     	BTRSS	STATUS,2
                                    1- 2281     	.line	269, "main.c"; 	return;
     0003 3rrr                      1- 2282     	LGOTO	_00241_DS_
                                    1- 2283     	.line	270, "main.c"; 	ledCount > 50 ? (LED1_ON()) : (LED1_OFF());
     0004 2133                      1- 2284     	MOVIA	0x33
                                    1- 2285     	BANKSEL	_ledCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 04rr                      1- 2286     	SUBAR	_ledCount,W
     0007 0803                      1- 2287     	BTRSS	STATUS,0
     0008 3rrr                      1- 2288     	LGOTO	_00243_DS_
     0009 1Crr                      1- 2289     	BCR	_PORTB,0
     000A 3rrr                      1- 2290     	LGOTO	_00244_DS_
     000B                           1- 2291     _00243_DS_:
     000B 18rr                      1- 2292     	BSR	_PORTB,0
                                    1- 2293     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2294     ;;unsigned compare: left >= lit (0x65=101), size=1
     000C                           1- 2295     _00244_DS_:
                                    1- 2296     	.line	271, "main.c"; 	ledCount > 100 ? (LED2_ON()) : (LED2_OFF());
     000C 2165                      1- 2297     	MOVIA	0x65
                                    1- 2298     	BANKSEL	_ledCount
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 2299     	SUBAR	_ledCount,W
     000F 0803                      1- 2300     	BTRSS	STATUS,0
     0010 3rrr                      1- 2301     	LGOTO	_00245_DS_
     0011 1Crr                      1- 2302     	BCR	_PORTB,1
     0012 3rrr                      1- 2303     	LGOTO	_00246_DS_
     0013                           1- 2304     _00245_DS_:
     0013 18rr                      1- 2305     	BSR	_PORTB,1
                                    1- 2306     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2307     ;;unsigned compare: left >= lit (0x97=151), size=1
     0014                           1- 2308     _00246_DS_:
                                    1- 2309     	.line	272, "main.c"; 	ledCount > 150 ? (LED3_ON()) : (LED3_OFF());
     0014 2197                      1- 2310     	MOVIA	0x97
                                    1- 2311     	BANKSEL	_ledCount
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 04rr                      1- 2312     	SUBAR	_ledCount,W
     0017 0803                      1- 2313     	BTRSS	STATUS,0
     0018 3rrr                      1- 2314     	LGOTO	_00247_DS_
     0019 1Frr                      1- 2315     	BCR	_PORTA,7
     001A 3rrr                      1- 2316     	LGOTO	_00248_DS_
     001B                           1- 2317     _00247_DS_:
     001B 1Brr                      1- 2318     	BSR	_PORTA,7
                                    1- 2319     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2320     ;;unsigned compare: left >= lit (0xC9=201), size=1
     001C                           1- 2321     _00248_DS_:
                                    1- 2322     	.line	273, "main.c"; 	ledCount > 200 ? (LED4_ON()) : (LED4_OFF());
     001C 21C9                      1- 2323     	MOVIA	0xc9
                                    1- 2324     	BANKSEL	_ledCount
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 04rr                      1- 2325     	SUBAR	_ledCount,W
     001F 0803                      1- 2326     	BTRSS	STATUS,0
     0020 3rrr                      1- 2327     	LGOTO	_00249_DS_
     0021 1Frr                      1- 2328     	BCR	_PORTA,6
     0022 3rrr                      1- 2329     	LGOTO	_00250_DS_
     0023                           1- 2330     _00249_DS_:
     0023 1Brr                      1- 2331     	BSR	_PORTA,6
     0024                           1- 2332     _00250_DS_:
                                    1- 2333     	.line	274, "main.c"; 	if(ledCount >= ledMax)
                                    1- 2334     	BANKSEL	_ledMax
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 2335     	MOVR	_ledMax,W
                                    1- 2336     	BANKSEL	_ledCount
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 04rr                      1- 2337     	SUBAR	_ledCount,W
     0028 0803                      1- 2338     	BTRSS	STATUS,0
     0029 3rrr                      1- 2339     	LGOTO	_00241_DS_
                                    1- 2340     	.line	276, "main.c"; 	ledCount = ledMin;	
                                    1- 2341     	BANKSEL	_ledMin
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1- 2342     	MOVR	_ledMin,W
                                    1- 2343     	BANKSEL	_ledCount
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 2344     	MOVAR	_ledCount
                                    1- 2345     	.line	277, "main.c"; 	firstFlag = 0;
                                    1- 2346     	BANKSEL	_firstFlag
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 02rr                      1- 2347     	CLRR	_firstFlag
     0030                           1- 2348     _00241_DS_:
                                    1- 2349     	.line	279, "main.c"; 	}
                                    1- 2350     	RETURN	
     0030 0010                      3-   26 m1      ret
                                    1- 2351     ; exit point of _chrgLed
                                    1- 2353     ;***
                                    1- 2354     ;  pBlock Stats: dbName = C
                                    1- 2355     ;***
                                    1- 2356     ;has an exit
                                    1- 2357     ;functions called:
                                    1- 2358     ;   __divuint
                                    1- 2359     ;   __divuint
                                    1- 2360     ;6 compiler assigned registers:
                                    1- 2361     ;   r0x1039
                                    1- 2362     ;   r0x103A
                                    1- 2363     ;   STK02
                                    1- 2364     ;   STK01
                                    1- 2365     ;   STK00
                                    1- 2366     ;   r0x103B
                                    1- 2367     ;; Starting pCode block
                                    1- 2368     .segment "code"; module=main, function=_timeCtr
     0000                           1- 2370     _timeCtr:
                                    1- 2371     ; 2 exit points
                                    1- 2372     	.line	238, "main.c"; 	if(++count500ms >= 50)
                                    1- 2373     	BANKSEL	_count500ms
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 2374     	INCR	_count500ms,F
                                    1- 2375     ;;unsigned compare: left < lit (0x32=50), size=1
     0002 2132                      1- 2376     	MOVIA	0x32
     0003 04rr                      1- 2377     	SUBAR	_count500ms,W
     0004 0803                      1- 2378     	BTRSS	STATUS,0
     0005 3rrr                      1- 2379     	LGOTO	_00203_DS_
                                    1- 2380     	.line	240, "main.c"; 	count500ms = 0;
     0006 02rr                      1- 2381     	CLRR	_count500ms
                                    1- 2382     	.line	241, "main.c"; 	if(K1Count)
                                    1- 2383     	BANKSEL	_K1Count
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1- 2384     	MOVR	_K1Count,W
     0009 0903                      1- 2385     	BTRSS	STATUS,2
                                    1- 2386     	.line	242, "main.c"; 	--K1Count;
     000A 06rr                      1- 2387     	DECR	_K1Count,F
                                    1- 2388     	.line	243, "main.c"; 	if(K2Count)
                                    1- 2389     	BANKSEL	_K2Count
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 2390     	MOVR	_K2Count,W
     000D 0903                      1- 2391     	BTRSS	STATUS,2
                                    1- 2392     	.line	244, "main.c"; 	--K2Count;
     000E 06rr                      1- 2393     	DECR	_K2Count,F
                                    1- 2394     	.line	245, "main.c"; 	if(workStep1 == 1)
                                    1- 2395     	BANKSEL	_workStep1
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 2396     	MOVR	_workStep1,W
     0011 2401                      1- 2397     	XORIA	0x01
     0012 0903                      1- 2398     	BTRSS	STATUS,2
     0013 3rrr                      1- 2399     	LGOTO	_00200_DS_
                                    1- 2400     	.line	247, "main.c"; 	ledDuty = ((1200-count10min) / 12)+50;
                                    1- 2401     	BANKSEL	_count10min
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1- 2402     	MOVR	_count10min,W
     0016 27B0                      1- 2403     	SUBIA	0xb0
                                    1- 2404     	BANKSEL	r0x1039
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 2405     	MOVAR	r0x1039
                                    1- 2406     	BANKSEL	_count10min
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 2407     	MOVR	(_count10min + 1),W
     001B 0803                      1- 2408     	BTRSS	STATUS,0
     001C 05rr                      1- 2409     	INCR	(_count10min + 1),W
     001D 2704                      1- 2410     	SUBIA	0x04
                                    1- 2411     	BANKSEL	r0x103A
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 2412     	MOVAR	r0x103A
     0020 210C                      1- 2413     	MOVIA	0x0c
     0021 00rr                      1- 2414     	MOVAR	STK02
     0022 2100                      1- 2415     	MOVIA	0x00
     0023 00rr                      1- 2416     	MOVAR	STK01
                                    1- 2417     	BANKSEL	r0x1039
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 2418     	MOVR	r0x1039,W
     0026 00rr                      1- 2419     	MOVAR	STK00
                                    1- 2420     	BANKSEL	r0x103A
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 2421     	MOVR	r0x103A,W
     0029 2rrr                      1- 2422     	LCALL	__divuint
                                    1- 2423     	BANKSEL	r0x103A
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 00rr                      1- 2424     	MOVAR	r0x103A
     002C 01rr                      1- 2425     	MOVR	STK00,W
                                    1- 2426     	BANKSEL	r0x1039
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 2427     	MOVAR	r0x1039
                                    1- 2428     	BANKSEL	r0x103B
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 00rr                      1- 2429     	MOVAR	r0x103B
     0031 2132                      1- 2430     	MOVIA	0x32
     0032 03rr                      1- 2431     	ADDAR	r0x103B,W
                                    1- 2432     	BANKSEL	_ledDuty
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1- 2433     	MOVAR	_ledDuty
                                    1- 2434     	.line	248, "main.c"; 	if(++count10min >= 1200)
                                    1- 2435     	BANKSEL	_count10min
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 05rr                      1- 2436     	INCR	_count10min,F
     0037 0D03                      1- 2437     	BTRSC	STATUS,2
     0038 05rr                      1- 2438     	INCR	(_count10min + 1),F
                                    1- 2439     ;;unsigned compare: left < lit (0x4B0=1200), size=2
     0039 2104                      1- 2440     	MOVIA	0x04
     003A 04rr                      1- 2441     	SUBAR	(_count10min + 1),W
     003B 0903                      1- 2442     	BTRSS	STATUS,2
     003C 3rrr                      1- 2443     	LGOTO	_00232_DS_
     003D 21B0                      1- 2444     	MOVIA	0xb0
     003E 04rr                      1- 2445     	SUBAR	_count10min,W
     003F                           1- 2446     _00232_DS_:
     003F 0803                      1- 2447     	BTRSS	STATUS,0
     0040 3rrr                      1- 2448     	LGOTO	_00203_DS_
                                    1- 2449     	.line	249, "main.c"; 	count10min = 1200;
     0041 21B0                      1- 2450     	MOVIA	0xb0
                                    1- 2451     	BANKSEL	_count10min
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 00rr                      1- 2452     	MOVAR	_count10min
     0044 2104                      1- 2453     	MOVIA	0x04
     0045 00rr                      1- 2454     	MOVAR	(_count10min + 1)
     0046 3rrr                      1- 2455     	LGOTO	_00203_DS_
     0047                           1- 2456     _00200_DS_:
                                    1- 2457     	.line	253, "main.c"; 	count10min = 0;
                                    1- 2458     	BANKSEL	_count10min
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 02rr                      1- 2459     	CLRR	_count10min
     0049 02rr                      1- 2460     	CLRR	(_count10min + 1)
     004A                           1- 2461     _00203_DS_:
                                    1- 2462     	.line	257, "main.c"; 	if(++count276ms >= 27)
                                    1- 2463     	BANKSEL	_count276ms
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 05rr                      1- 2464     	INCR	_count276ms,F
                                    1- 2465     ;;unsigned compare: left < lit (0x1B=27), size=1
     004C 211B                      1- 2466     	MOVIA	0x1b
     004D 04rr                      1- 2467     	SUBAR	_count276ms,W
     004E 0803                      1- 2468     	BTRSS	STATUS,0
     004F 3rrr                      1- 2469     	LGOTO	_00208_DS_
                                    1- 2470     	.line	259, "main.c"; 	count276ms = 0;
     0050 02rr                      1- 2471     	CLRR	_count276ms
                                    1- 2472     	.line	260, "main.c"; 	if(workStep1 == 3)			//3档
                                    1- 2473     	BANKSEL	_workStep1
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 01rr                      1- 2474     	MOVR	_workStep1,W
     0053 2403                      1- 2475     	XORIA	0x03
     0054 0903                      1- 2476     	BTRSS	STATUS,2
     0055 3rrr                      1- 2477     	LGOTO	_00208_DS_
                                    1- 2478     	.line	261, "main.c"; 	LED_FLICKER();
     0056 2104                      1- 2479     	MOVIA	0x04
     0057 12rr                      1- 2480     	XORAR	_PORTB,F
     0058                           1- 2481     _00208_DS_:
                                    1- 2482     	.line	264, "main.c"; 	}
                                    1- 2483     	RETURN	
     0058 0010                      3-   26 m1      ret
                                    1- 2484     ; exit point of _timeCtr
                                    1- 2486     ;***
                                    1- 2487     ;  pBlock Stats: dbName = C
                                    1- 2488     ;***
                                    1- 2489     ;has an exit
                                    1- 2490     ;; Starting pCode block
                                    1- 2491     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2493     _gotoSleep:
                                    1- 2494     ; 2 exit points
                                    1- 2495     	.line	210, "main.c"; 	sleepDelay = 0;
                                    1- 2496     	BANKSEL	_sleepDelay
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 2497     	CLRR	_sleepDelay
                                    1- 2498     	.line	211, "main.c"; 	workStep1 = 0;
                                    1- 2499     	BANKSEL	_workStep1
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 2500     	CLRR	_workStep1
                                    1- 2501     	.line	212, "main.c"; 	workStep2 = 0;
                                    1- 2502     	BANKSEL	_workStep2
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 2503     	CLRR	_workStep2
                                    1- 2504     	.line	213, "main.c"; 	ledLock = 1;
     0006 2101                      1- 2505     	MOVIA	0x01
                                    1- 2506     	BANKSEL	_ledLock
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 2507     	MOVAR	_ledLock
                                    1- 2508     	.line	214, "main.c"; 	LED1_OFF();
     0009 18rr                      1- 2509     	BSR	_PORTB,0
                                    1- 2510     	.line	215, "main.c"; 	LED2_OFF();
     000A 18rr                      1- 2511     	BSR	_PORTB,1
                                    1- 2512     	.line	216, "main.c"; 	LED3_OFF();
     000B 1Brr                      1- 2513     	BSR	_PORTA,7
                                    1- 2514     	.line	217, "main.c"; 	LED4_OFF();
     000C 1Brr                      1- 2515     	BSR	_PORTA,6
                                    1- 2516     	.line	218, "main.c"; 	ledCount = 0;
                                    1- 2517     	BANKSEL	_ledCount
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1- 2518     	CLRR	_ledCount
                                    1- 2519     	.line	219, "main.c"; 	ledMax = 250;
     000F 21FA                      1- 2520     	MOVIA	0xfa
                                    1- 2521     	BANKSEL	_ledMax
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 2522     	MOVAR	_ledMax
                                    1- 2523     	.line	220, "main.c"; 	ledMin = 0;
                                    1- 2524     	BANKSEL	_ledMin
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 02rr                      1- 2525     	CLRR	_ledMin
                                    1- 2526     	.line	221, "main.c"; 	AWUCON = 0x25;		//PA5 PA0 PA2唤醒
     0014 2125                      1- 2527     	MOVIA	0x25
     0015 00rr                      1- 2528     	MOVAR	_AWUCON
                                    1- 2529     	.line	222, "main.c"; 	PORTA = 0xC0;
     0016 21C0                      1- 2530     	MOVIA	0xc0
     0017 00rr                      1- 2531     	MOVAR	_PORTA
                                    1- 2532     	.line	223, "main.c"; 	PORTB = 0x03;
     0018 2103                      1- 2533     	MOVIA	0x03
     0019 00rr                      1- 2534     	MOVAR	_PORTB
                                    1- 2535     	.line	224, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PABKey;
     001A 00rr                      1- 2536     	MOVAR	_INTE
                                    1- 2537     	.line	225, "main.c"; 	PCON =  C_LVR_En | C_LVR_En;	
     001B 2108                      1- 2538     	MOVIA	0x08
     001C 00rr                      1- 2539     	MOVAR	_PCON
                                    1- 2540     	.line	226, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001D 02rr                      1- 2541     	CLRR	_INTF
                                    1- 2542     	.line	227, "main.c"; 	CLRWDT();
     001E 0002                      1- 2543     	clrwdt
                                    1- 2544     	.line	228, "main.c"; 	SLEEP();
     001F 0001                      1- 2545     	sleep
                                    1- 2546     	.line	229, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0020 2101                      1- 2547     	MOVIA	0x01
     0021 00rr                      1- 2548     	MOVAR	_INTE
                                    1- 2549     	.line	230, "main.c"; 	INTF = 0;
     0022 02rr                      1- 2550     	CLRR	_INTF
                                    1- 2551     	.line	232, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0023 21A8                      1- 2552     	MOVIA	0xa8
     0024 00rr                      1- 2553     	MOVAR	_PCON
                                    1- 2554     	.line	233, "main.c"; 	PCON &= 0xEF;			//PA5上拉
     0025 1Err                      1- 2555     	BCR	_PCON,4
                                    1- 2556     	.line	234, "main.c"; 	}
                                    1- 2557     	RETURN	
     0026 0010                      3-   26 m1      ret
                                    1- 2558     ; exit point of _gotoSleep
                                    1- 2560     ;***
                                    1- 2561     ;  pBlock Stats: dbName = C
                                    1- 2562     ;***
                                    1- 2563     ;has an exit
                                    1- 2564     ;; Starting pCode block
                                    1- 2565     .segment "code"; module=main, function=_init
     0000                           1- 2567     _init:
                                    1- 2568     ; 2 exit points
                                    1- 2569     	.line	179, "main.c"; 	PORTA = 0xC0;
     0000 21C0                      1- 2570     	MOVIA	0xc0
     0001 00rr                      1- 2571     	MOVAR	_PORTA
                                    1- 2572     	.line	180, "main.c"; 	PORTB = 0x07;
     0002 2107                      1- 2573     	MOVIA	0x07
     0003 00rr                      1- 2574     	MOVAR	_PORTB
                                    1- 2575     	.line	182, "main.c"; 	IOSTA = C_PA0_Input | C_PA2_Input | C_PA3_Input | C_PA4_Input | C_PA5_Input;		
     0004 213D                      1- 2576     	MOVIA	0x3d
     0005 000r                      1- 2577     	IOST	_IOSTA
                                    1- 2578     	.line	183, "main.c"; 	IOSTB =  0;								// PB1输入					
     0006 0200                      1- 2579     	CLRA	
     0007 000r                      1- 2580     	IOST	_IOSTB
                                    1- 2581     	.line	184, "main.c"; 	PORTA = 0xC0;
     0008 21C0                      1- 2582     	MOVIA	0xc0
     0009 00rr                      1- 2583     	MOVAR	_PORTA
                                    1- 2584     	.line	185, "main.c"; 	PORTB = 0x07;                          	
     000A 2107                      1- 2585     	MOVIA	0x07
     000B 00rr                      1- 2586     	MOVAR	_PORTB
                                    1- 2587     	.line	186, "main.c"; 	APHCON = 0x7E;		//PA7打开上拉		，PA5关闭下拉
     000C 217E                      1- 2588     	MOVIA	0x7e
     000D 000r                      1- 2589     	IOST	_APHCON
                                    1- 2590     	.line	191, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT & LVR
     000E 2188                      1- 2591     	MOVIA	0x88
     000F 00rr                      1- 2592     	MOVAR	_PCON
                                    1- 2593     	.line	192, "main.c"; 	PCON &= 0xF7;			//PA5打开上拉
     0010 1Drr                      1- 2594     	BCR	_PCON,3
                                    1- 2595     	.line	193, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0011 2101                      1- 2596     	MOVIA	0x01
     0012 00rr                      1- 2597     	MOVAR	_INTE
                                    1- 2598     	.line	194, "main.c"; 	INTF = 0;
     0013 02rr                      1- 2599     	CLRR	_INTF
                                    1- 2600     	.line	197, "main.c"; 	PCON1 = C_TMR0_Dis;
     0014 0200                      1- 2601     	CLRA	
     0015 000r                      1- 2602     	IOST	_PCON1
                                    1- 2603     	.line	199, "main.c"; 	TMR0 = 55;
     0016 2137                      1- 2604     	MOVIA	0x37
     0017 00rr                      1- 2605     	MOVAR	_TMR0
                                    1- 2606     	.line	200, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0018 0200                      1- 2607     	CLRA	
     0019 0003                      1- 2608     	T0MD	
                                    1- 2609     	.line	202, "main.c"; 	PCON1 = C_TMR0_En;
     001A 2101                      1- 2610     	MOVIA	0x01
     001B 000r                      1- 2611     	IOST	_PCON1
                                    1- 2612     	.line	204, "main.c"; 	ENI();
     001C 0004                      1- 2613     	ENI
                                    1- 2614     	.line	205, "main.c"; 	}
                                    1- 2615     	RETURN	
     001D 0010                      3-   26 m1      ret
                                    1- 2616     ; exit point of _init
                                    1- 2619     ;	code size estimation:
                                    1- 2620     ;	 1043+  238 =  1281 instructions ( 3038 byte)
                                    1- 2622     	end
                                    1- 2622     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuint               Label    00000000
__moduchar              Label    00000000
__moduint               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001B
_00002_DS_              Label    00000029
_00003_DS_              Label    00000029
_00004_DS_              Label    00000041
_00108_DS_              Label    00000021
_00109_DS_              Label    00000028
_00117_DS_              Label    00000045
_00121_DS_              Label    00000050
_00123_DS_              Label    00000054
_00131_DS_              Label    00000018
_00136_DS_              Label    00000022
_00137_DS_              Label    00000028
_00138_DS_              Label    0000003C
_00143_DS_              Label    00000049
_00146_DS_              Label    0000001A
_00147_DS_              Label    0000004C
_00149_DS_              Label    00000003
_00200_DS_              Label    00000047
_00203_DS_              Label    0000004A
_00208_DS_              Label    00000058
_00232_DS_              Label    0000003F
_00241_DS_              Label    00000030
_00243_DS_              Label    0000000B
_00244_DS_              Label    0000000C
_00245_DS_              Label    00000013
_00246_DS_              Label    00000014
_00247_DS_              Label    0000001B
_00248_DS_              Label    0000001C
_00249_DS_              Label    00000023
_00250_DS_              Label    00000024
_00256_DS_              Label    00000014
_00258_DS_              Label    00000023
_00264_DS_              Label    00000050
_00276_DS_              Label    00000099
_00279_DS_              Label    0000008E
_00280_DS_              Label    000000BA
_00288_DS_              Label    00000067
_00291_DS_              Label    0000003A
_00292_DS_              Label    000000D0
_00346_DS_              Label    0000002A
_00348_DS_              Label    00000057
_00350_DS_              Label    00000073
_00351_DS_              Label    00000095
_00352_DS_              Label    000000A0
_00353_DS_              Label    000000C1
_00359_DS_              Label    0000000F
_00361_DS_              Label    00000013
_00367_DS_              Label    00000029
_00373_DS_              Label    00000047
_00376_DS_              Label    00000031
_00379_DS_              Label    00000061
_00385_DS_              Label    00000077
_00388_DS_              Label    00000069
_00391_DS_              Label    0000004A
_00395_DS_              Label    00000079
_00411_DS_              Label    00000011
_00412_DS_              Label    00000013
_00413_DS_              Label    00000015
_00414_DS_              Label    00000018
_00415_DS_              Label    0000001B
_00417_DS_              Label    0000001D
_00423_DS_              Label    0000000C
_00435_DS_              Label    00000022
_00436_DS_              Label    0000002A
_00438_DS_              Label    00000018
_00439_DS_              Label    0000002E
_00440_DS_              Label    0000002F
_00445_DS_              Label    00000049
_00451_DS_              Label    0000007B
_00452_DS_              Label    00000083
_00470_DS_              Label    00000119
_00473_DS_              Label    0000010F
_00476_DS_              Label    00000100
_00480_DS_              Label    000000E9
_00483_DS_              Label    000000D4
_00486_DS_              Label    000000C0
_00489_DS_              Label    000000AC
_00492_DS_              Label    00000098
_00493_DS_              Label    00000123
_00503_DS_              Label    00000156
_00506_DS_              Label    00000141
_00510_DS_              Label    0000016A
_00594_DS_              Label    0000006C
_00597_DS_              Label    0000008B
_00599_DS_              Label    0000009F
_00601_DS_              Label    000000B3
_00603_DS_              Label    000000C7
_00605_DS_              Label    000000DB
_00607_DS_              Label    000000F0
_00612_DS_              Label    0000012A
_00613_DS_              Label    00000133
_00615_DS_              Label    00000148
_00617_DS_              Label    0000015D
_00624_DS_              Label    0000000B
_00626_DS_              Label    0000002C
_00631_DS_              Label    00000000
_00638_DS_              Label    00000009
_00640_DS_              Label    0000001C
_00649_DS_              Label    00000013
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_adtime                 Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_batStep                Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBat               Label    00000000
_chrgLed                Label    00000000
_closeledSlave          Label    00000000
_CMPCR                  Label    00000000
_count10min             Label    00000000
_count200ms             Label    00000000
_count276ms             Label    00000000
_count500ms             Label    00000000
_countms                Label    00000000
_delay                  Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_firstFlag              Label    00000000
_flickerTime            Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_init                   Label    00000000
_initAD                 Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_K1Count                Label    00000000
_K2Count                Label    00000000
_keyClick               Label    00000000
_keyCon                 Label    00000000
_keyCount               Label    00000000
_keyNub                 Label    00000000
_keyRead                Label    00000000
_ledCount               Label    00000000
_ledDuty                Label    00000000
_ledLock                Label    00000000
_ledMasterCtr           Label    00000000
_ledMax                 Label    00000000
_ledMin                 Label    00000000
_ledSlaveCtr            Label    00000000
_ledTime                Label    00000000
_longPressFlag          Label    00000000
_main                   Label    00000000
_mode4                  Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_setPWMduty             Label    00000000
_sleepDelay             Label    00000000
_STATUS                 Label    00000000
_sumR_AIN4_DATA         Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_timeCtr                Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workStep1              Label    00000000
_workStep2              Label    00000000
_workStep3              Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000065
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1035                 Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
