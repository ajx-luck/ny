
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A051D,c=on
                                    1-    9     	#include "ny8a051d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTBbits
                                    1-   15     	extern	_PCONbits
                                    1-   16     	extern	_BWUCONbits
                                    1-   17     	extern	_BPLCONbits
                                    1-   18     	extern	_BPHCONbits
                                    1-   19     	extern	_INTEbits
                                    1-   20     	extern	_INTFbits
                                    1-   21     	extern	_INDF
                                    1-   22     	extern	_TMR0
                                    1-   23     	extern	_PCL
                                    1-   24     	extern	_STATUS
                                    1-   25     	extern	_FSR
                                    1-   26     	extern	_PORTB
                                    1-   27     	extern	_PCON
                                    1-   28     	extern	_BWUCON
                                    1-   29     	extern	_PCHBUF
                                    1-   30     	extern	_BPLCON
                                    1-   31     	extern	_BPHCON
                                    1-   32     	extern	_INTE
                                    1-   33     	extern	_INTF
                                    1-   34     	extern	_TMR1
                                    1-   35     	extern	_T1CR1
                                    1-   36     	extern	_T1CR2
                                    1-   37     	extern	_PWM1DUTY
                                    1-   38     	extern	_PS1CV
                                    1-   39     	extern	_BZ1CR
                                    1-   40     	extern	_IRCR
                                    1-   41     	extern	_TBHP
                                    1-   42     	extern	_TBHD
                                    1-   43     	extern	_OSCCR
                                    1-   44     	extern	_IOSTB
                                    1-   45     	extern	_PS0CV
                                    1-   46     	extern	_BODCON
                                    1-   47     	extern	_PCON1
                                    1-   48     	extern	_T0MD
                                    1-   49     	extern	___sdcc_saved_fsr
                                    1-   50     	extern	___sdcc_saved_stk00
                                    1-   51     	extern	___sdcc_saved_stk01
                                    1-   52     	extern	__nyc_ny8_startup
                                    1-   53     ;--------------------------------------------------------
                                    1-   54     ; global declarations
                                    1-   55     ;--------------------------------------------------------
                                    1-   56     	extern	_keyRead
                                    1-   57     	extern	_pwmStop
                                    1-   58     	extern	_pwmStart
                                    1-   59     	extern	_gotoSleep
                                    1-   60     	extern	_ledCtr
                                    1-   61     	extern	_timeCtr
                                    1-   62     	extern	_keyCtr
                                    1-   63     	extern	_isr
                                    1-   64     	extern	_main
                                    1-   65     	extern	_keyCount
                                    1-   66     	extern	_count500ms
                                    1-   67     	extern	_count4s
                                    1-   68     	extern	_count10s
                                    1-   69     	extern	_count4Hour
                                    1-   70     	extern	_ledFlag
                                    1-   71     	extern	_count6s
                                    1-   72     	extern	_longPressFlag
                                    1-   73     	extern	_sleepDelay
                                    1-   74     	extern	_workStep
                                    1-   75     	extern	_intCount
                                    1-   76     	extern	_IntFlag
                                    1-   78     	extern PSAVE
                                    1-   79     	extern SSAVE
                                    1-   80     	extern WSAVE
                                    1-   81     	extern STK12
                                    1-   82     	extern STK11
                                    1-   83     	extern STK10
                                    1-   84     	extern STK09
                                    1-   85     	extern STK08
                                    1-   86     	extern STK07
                                    1-   87     	extern STK06
                                    1-   88     	extern STK05
                                    1-   89     	extern STK04
                                    1-   90     	extern STK03
                                    1-   91     	extern STK02
                                    1-   92     	extern STK01
                                    1-   93     	extern STK00
                                    1-   95     .segment "uninit", 0x20000010
 20000010                           1-   96     PSAVE:
                                    1-   97     	.res 1
 20000011                           1-   98     SSAVE:
                                    1-   99     	.res 1
 20000012                           1-  100     WSAVE:
                                    1-  101     	.res 1
 20000013                           1-  102     STK12:
                                    1-  103     	.res 1
 20000014                           1-  104     STK11:
                                    1-  105     	.res 1
 20000015                           1-  106     STK10:
                                    1-  107     	.res 1
 20000016                           1-  108     STK09:
                                    1-  109     	.res 1
 20000017                           1-  110     STK08:
                                    1-  111     	.res 1
 20000018                           1-  112     STK07:
                                    1-  113     	.res 1
 20000019                           1-  114     STK06:
                                    1-  115     	.res 1
 2000001A                           1-  116     STK05:
                                    1-  117     	.res 1
 2000001B                           1-  118     STK04:
                                    1-  119     	.res 1
 2000001C                           1-  120     STK03:
                                    1-  121     	.res 1
 2000001D                           1-  122     STK02:
                                    1-  123     	.res 1
 2000001E                           1-  124     STK01:
                                    1-  125     	.res 1
 2000001F                           1-  126     STK00:
                                    1-  127     	.res 1
                                    1-  129     ;--------------------------------------------------------
                                    1-  130     ; global definitions
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     ; absolute symbol definitions
                                    1-  134     ;--------------------------------------------------------
                                    1-  135     ;--------------------------------------------------------
                                    1-  136     ; compiler-defined variables
                                    1-  137     ;--------------------------------------------------------
                                    1-  138     .segment "uninit"
     0000                           1-  139     r0x1013:
                                    1-  140     	.res	1
                                    1-  141     .segment "uninit"
     0000                           1-  142     r0x1012:
                                    1-  143     	.res	1
                                    1-  144     ;--------------------------------------------------------
                                    1-  145     ; initialized data
                                    1-  146     ;--------------------------------------------------------
                                    1-  148     .segment "idata"
     0000                           1-  149     _keyCount:
     0000 0000 0000                 1-  150     	dw	0x00, 0x00
                                    1-  154     .segment "idata"
     0000                           1-  155     _count500ms:
     0000 0000 0000                 1-  156     	dw	0x00, 0x00
                                    1-  160     .segment "idata"
     0000                           1-  161     _count4s:
     0000 0000 0000                 1-  162     	dw	0x00, 0x00
                                    1-  166     .segment "idata"
     0000                           1-  167     _count10s:
     0000 0000 0000                 1-  168     	dw	0x00, 0x00
                                    1-  172     .segment "idata"
     0000                           1-  173     _count4Hour:
     0000 0000 0000                 1-  174     	dw	0x00, 0x00
                                    1-  178     .segment "idata"
     0000                           1-  179     _ledFlag:
     0000 0000                      1-  180     	dw	0x00
                                    1-  184     .segment "idata"
     0000                           1-  185     _count6s:
     0000 0000                      1-  186     	dw	0x00
                                    1-  190     .segment "idata"
     0000                           1-  191     _longPressFlag:
     0000 0000                      1-  192     	dw	0x00
                                    1-  196     .segment "idata"
     0000                           1-  197     _sleepDelay:
     0000 0000                      1-  198     	dw	0x00
                                    1-  202     .segment "idata"
     0000                           1-  203     _workStep:
     0000 0000                      1-  204     	dw	0x00
                                    1-  208     .segment "idata"
     0000                           1-  209     _intCount:
     0000 0000                      1-  210     	dw	0x00
                                    1-  214     .segment "idata"
     0000                           1-  215     _IntFlag:
     0000 0000                      1-  216     	dw	0x00
                                    1-  219     ;--------------------------------------------------------
                                    1-  220     ; overlayable items in internal ram 
                                    1-  221     ;--------------------------------------------------------
                                    1-  222     ;	udata_ovr
                                    1-  223     ;--------------------------------------------------------
                                    1-  224     ; reset vector 
                                    1-  225     ;--------------------------------------------------------
                                    1-  226     ORG	0x0000
     0000 3rrr                      1-  227     	LGOTO	__nyc_ny8_startup
                                    1-  228     ;--------------------------------------------------------
                                    1-  229     ; interrupt and initialization code
                                    1-  230     ;--------------------------------------------------------
                                    1-  231     ORG 0x0008
     0008 3rrr                      1-  232     	lgoto	__sdcc_interrupt
                                    1-  234     .segment "code"
     0000                           1-  235     __sdcc_interrupt:
                                    1-  236     ;***
                                    1-  237     ;  pBlock Stats: dbName = I
                                    1-  238     ;***
                                    1-  239     ;2 compiler assigned registers:
                                    1-  240     ;   STK00
                                    1-  241     ;   STK01
                                    1-  242     ;; Starting pCode block
     0000                           1-  243     _isr:
                                    1-  244     ; 0 exit points
                                    1-  245     	.line	34, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  246     	MOVAR	WSAVE
     0001 1503                      1-  247     	SWAPR	STATUS,W
     0002 0283                      1-  248     	CLRR	STATUS
     0003 00rr                      1-  249     	MOVAR	SSAVE
     0004 010A                      1-  250     	MOVR	PCHBUF,W
     0005 028A                      1-  251     	CLRR	PCHBUF
     0006 00rr                      1-  252     	MOVAR	PSAVE
     0007 0104                      1-  253     	MOVR	FSR,W
     0008 00rr                      1-  254     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  255     	MOVR	STK00,W
     000A 00rr                      1-  256     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  257     	MOVR	STK01,W
     000C 00rr                      1-  258     	MOVAR	___sdcc_saved_stk01
                                    1-  259     	.line	36, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  260     	BTRSS	_INTFbits,0
     000E 3rrr                      1-  261     	LGOTO	_00108_DS_
                                    1-  262     	.line	38, "main.c"; 	TMR0 += 55;
     000F 2137                      1-  263     	MOVIA	0x37
     0010 03rr                      1-  264     	ADDAR	_TMR0,F
                                    1-  265     	.line	39, "main.c"; 	intCount++;
     0011 05rr                      1-  266     	INCR	_intCount,F
                                    1-  267     	.line	40, "main.c"; 	if(intCount == 100)
     0012 01rr                      1-  268     	MOVR	_intCount,W
     0013 2464                      1-  269     	XORIA	0x64
     0014 0903                      1-  270     	BTRSS	STATUS,2
     0015 3rrr                      1-  271     	LGOTO	_00108_DS_
                                    1-  272     	.line	42, "main.c"; 	intCount = 0;
     0016 02rr                      1-  273     	CLRR	_intCount
                                    1-  274     	.line	43, "main.c"; 	IntFlag = 1;
     0017 2101                      1-  275     	MOVIA	0x01
     0018 00rr                      1-  276     	MOVAR	_IntFlag
     0019                           1-  277     _00108_DS_:
                                    1-  278     	.line	46, "main.c"; 	if(INTFbits.PBIF)
     0019 08rr                      1-  279     	BTRSS	_INTFbits,1
     001A 3rrr                      1-  280     	LGOTO	_00110_DS_
                                    1-  281     	.line	48, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     001B 21FD                      1-  282     	MOVIA	0xfd
     001C 00rr                      1-  283     	MOVAR	_INTF
     001D                           1-  284     _00110_DS_:
                                    1-  285     	.line	51, "main.c"; 	INTF = 0;
     001D 02rr                      1-  286     	CLRR	_INTF
                                    1-  287     	.line	53, "main.c"; 	}
     001E 01rr                      1-  288     	MOVR	___sdcc_saved_stk01,W
     001F 00rr                      1-  289     	MOVAR	STK01
     0020 01rr                      1-  290     	MOVR	___sdcc_saved_stk00,W
     0021 00rr                      1-  291     	MOVAR	STK00
     0022 01rr                      1-  292     	MOVR	___sdcc_saved_fsr,W
     0023 0084                      1-  293     	MOVAR	FSR
     0024 01rr                      1-  294     	MOVR	PSAVE,W
     0025 008A                      1-  295     	MOVAR	PCHBUF
     0026 0283                      1-  296     	CLRR	STATUS
     0027 15rr                      1-  297     	SWAPR	SSAVE,W
     0028 0083                      1-  298     	MOVAR	STATUS
     0029 15rr                      1-  299     	SWAPR	WSAVE,F
     002A 15rr                      1-  300     	SWAPR	WSAVE,W
     002B                           1-  301     END_OF_INTERRUPT:
     002B 0011                      1-  302     	RETIE	
                                    1-  304     ;--------------------------------------------------------
                                    1-  305     ; code
                                    1-  306     ;--------------------------------------------------------
                                    1-  307     ;***
                                    1-  308     ;  pBlock Stats: dbName = M
                                    1-  309     ;***
                                    1-  310     ;has an exit
                                    1-  311     ;functions called:
                                    1-  312     ;   _ledCtr
                                    1-  313     ;   _keyCtr
                                    1-  314     ;   _timeCtr
                                    1-  315     ;   _ledCtr
                                    1-  316     ;   _keyCtr
                                    1-  317     ;   _timeCtr
                                    1-  318     ;; Starting pCode block
                                    1-  319     .segment "code"; module=main, function=_main
     0000                           1-  321     _main:
                                    1-  322     ; 2 exit points
                                    1-  323     	.line	59, "main.c"; 	PORTB = 0x20;
     0000 2120                      1-  324     	MOVIA	0x20
     0001 00rr                      1-  325     	MOVAR	_PORTB
                                    1-  326     	.line	60, "main.c"; 	BPHCON = 0xDF;		//PB5 上拉
     0002 21DF                      1-  327     	MOVIA	0xdf
     0003 00rr                      1-  328     	MOVAR	_BPHCON
                                    1-  329     	.line	62, "main.c"; 	IOSTB =  C_PB5_Input;	
     0004 2120                      1-  330     	MOVIA	0x20
     0005 000r                      1-  331     	IOST	_IOSTB
                                    1-  332     	.line	63, "main.c"; 	PORTB = 0x20;                        	// PortB Data Register = 0x00
     0006 00rr                      1-  333     	MOVAR	_PORTB
                                    1-  334     	.line	64, "main.c"; 	PCON = C_WDT_En | C_LVR_En ;				// Enable WDT & LVR
     0007 2188                      1-  335     	MOVIA	0x88
     0008 00rr                      1-  336     	MOVAR	_PCON
                                    1-  337     	.line	66, "main.c"; 	PCON1 = C_TMR0_Dis;
     0009 0200                      1-  338     	CLRA	
     000A 000r                      1-  339     	IOST	_PCON1
                                    1-  340     	.line	68, "main.c"; 	TMR0 = 55;
     000B 2137                      1-  341     	MOVIA	0x37
     000C 00rr                      1-  342     	MOVAR	_TMR0
                                    1-  343     	.line	69, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     000D 0200                      1-  344     	CLRA	
     000E 0003                      1-  345     	T0MD	
                                    1-  346     	.line	71, "main.c"; 	PCON1 = C_TMR0_En;
     000F 2101                      1-  347     	MOVIA	0x01
     0010 000r                      1-  348     	IOST	_PCON1
                                    1-  349     	.line	72, "main.c"; 	INTE =  C_INT_TMR0;
     0011 00rr                      1-  350     	MOVAR	_INTE
                                    1-  351     	.line	73, "main.c"; 	ENI();	
     0012 0004                      1-  352     	ENI
                                    1-  353     	.line	74, "main.c"; 	LEDON();
     0013 18rr                      1-  354     	BSR	_PORTB,1
     0014                           1-  355     _00118_DS_:
                                    1-  356     	.line	77, "main.c"; 	CLRWDT();  
     0014 0002                      1-  357     	clrwdt
                                    1-  358     	.line	78, "main.c"; 	if(!IntFlag)
     0015 01rr                      1-  359     	MOVR	_IntFlag,W
     0016 0D03                      1-  360     	BTRSC	STATUS,2
     0017 3rrr                      1-  361     	LGOTO	_00118_DS_
                                    1-  362     	.line	81, "main.c"; 	IntFlag = 0;
     0018 02rr                      1-  363     	CLRR	_IntFlag
                                    1-  364     	.line	83, "main.c"; 	ledCtr();
     0019 2rrr                      1-  365     	LCALL	_ledCtr
                                    1-  366     	.line	84, "main.c"; 	keyCtr();
     001A 2rrr                      1-  367     	LCALL	_keyCtr
                                    1-  368     	.line	85, "main.c"; 	timeCtr();
     001B 2rrr                      1-  369     	LCALL	_timeCtr
     001C 3rrr                      1-  370     	LGOTO	_00118_DS_
                                    1-  371     	.line	87, "main.c"; 	}
                                    1-  372     	RETURN	
     001D 0010                      3-   26 m1      ret
                                    1-  373     ; exit point of _main
                                    1-  375     ;***
                                    1-  376     ;  pBlock Stats: dbName = C
                                    1-  377     ;***
                                    1-  378     ;has an exit
                                    1-  379     ;1 compiler assigned register :
                                    1-  380     ;   r0x1012
                                    1-  381     ;; Starting pCode block
                                    1-  382     .segment "code"; module=main, function=_keyRead
                                    1-  384     ;local variable name mapping:
     0000                           1-  386     _keyRead:
                                    1-  387     ; 2 exit points
                                    1-  388     	.line	215, "main.c"; 	char keyRead(char KeyStatus)	
     0000 00rr                      1-  389     	MOVAR	r0x1012
                                    1-  390     	.line	217, "main.c"; 	if (KeyStatus)
     0001 01rr                      1-  391     	MOVR	r0x1012,W
     0002 0D03                      1-  392     	BTRSC	STATUS,2
     0003 3rrr                      1-  393     	LGOTO	_00246_DS_
                                    1-  394     	.line	219, "main.c"; 	keyCount++;
     0004 05rr                      1-  395     	INCR	_keyCount,F
     0005 0D03                      1-  396     	BTRSC	STATUS,2
     0006 05rr                      1-  397     	INCR	(_keyCount + 1),F
                                    1-  398     ;;unsigned compare: left < lit (0x12C=300), size=2
                                    1-  399     	.line	220, "main.c"; 	if(keyCount >= 300)
     0007 2101                      1-  400     	MOVIA	0x01
     0008 04rr                      1-  401     	SUBAR	(_keyCount + 1),W
     0009 0903                      1-  402     	BTRSS	STATUS,2
     000A 3rrr                      1-  403     	LGOTO	_00265_DS_
     000B 212C                      1-  404     	MOVIA	0x2c
     000C 04rr                      1-  405     	SUBAR	_keyCount,W
     000D                           1-  406     _00265_DS_:
     000D 0803                      1-  407     	BTRSS	STATUS,0
     000E 3rrr                      1-  408     	LGOTO	_00247_DS_
                                    1-  409     	.line	222, "main.c"; 	keyCount = 300;
     000F 212C                      1-  410     	MOVIA	0x2c
     0010 00rr                      1-  411     	MOVAR	_keyCount
     0011 2101                      1-  412     	MOVIA	0x01
     0012 00rr                      1-  413     	MOVAR	(_keyCount + 1)
                                    1-  414     	.line	223, "main.c"; 	if(!longPressFlag)
     0013 01rr                      1-  415     	MOVR	_longPressFlag,W
     0014 0903                      1-  416     	BTRSS	STATUS,2
     0015 3rrr                      1-  417     	LGOTO	_00247_DS_
                                    1-  418     	.line	225, "main.c"; 	longPressFlag = 1;
     0016 2101                      1-  419     	MOVIA	0x01
     0017 00rr                      1-  420     	MOVAR	_longPressFlag
                                    1-  421     	.line	226, "main.c"; 	return 2;
     0018 2102                      1-  422     	MOVIA	0x02
     0019 3rrr                      1-  423     	LGOTO	_00248_DS_
                                    1-  424     ;;unsigned compare: left < lit (0x12C=300), size=2
     001A                           1-  425     _00246_DS_:
                                    1-  426     	.line	232, "main.c"; 	if(keyCount >= 300)
     001A 2101                      1-  427     	MOVIA	0x01
     001B 04rr                      1-  428     	SUBAR	(_keyCount + 1),W
     001C 0903                      1-  429     	BTRSS	STATUS,2
     001D 3rrr                      1-  430     	LGOTO	_00266_DS_
     001E 212C                      1-  431     	MOVIA	0x2c
     001F 04rr                      1-  432     	SUBAR	_keyCount,W
     0020                           1-  433     _00266_DS_:
     0020 0803                      1-  434     	BTRSS	STATUS,0
     0021 3rrr                      1-  435     	LGOTO	_00243_DS_
                                    1-  436     	.line	234, "main.c"; 	keyCount = 0;
     0022 02rr                      1-  437     	CLRR	_keyCount
     0023 02rr                      1-  438     	CLRR	(_keyCount + 1)
                                    1-  439     	.line	235, "main.c"; 	longPressFlag = 0;
     0024 02rr                      1-  440     	CLRR	_longPressFlag
                                    1-  441     	.line	236, "main.c"; 	return	0;
     0025 2100                      1-  442     	MOVIA	0x00
     0026 3rrr                      1-  443     	LGOTO	_00248_DS_
                                    1-  444     ;;unsigned compare: left < lit (0x8=8), size=2
     0027                           1-  445     _00243_DS_:
                                    1-  446     	.line	238, "main.c"; 	else if(keyCount >= 8)
     0027 2100                      1-  447     	MOVIA	0x00
     0028 04rr                      1-  448     	SUBAR	(_keyCount + 1),W
     0029 0903                      1-  449     	BTRSS	STATUS,2
     002A 3rrr                      1-  450     	LGOTO	_00267_DS_
     002B 2108                      1-  451     	MOVIA	0x08
     002C 04rr                      1-  452     	SUBAR	_keyCount,W
     002D                           1-  453     _00267_DS_:
     002D 0803                      1-  454     	BTRSS	STATUS,0
     002E 3rrr                      1-  455     	LGOTO	_00244_DS_
                                    1-  456     	.line	240, "main.c"; 	keyCount = 0;
     002F 02rr                      1-  457     	CLRR	_keyCount
     0030 02rr                      1-  458     	CLRR	(_keyCount + 1)
                                    1-  459     	.line	241, "main.c"; 	return	1;
     0031 2101                      1-  460     	MOVIA	0x01
     0032 3rrr                      1-  461     	LGOTO	_00248_DS_
     0033                           1-  462     _00244_DS_:
                                    1-  463     	.line	243, "main.c"; 	keyCount = 0;
     0033 02rr                      1-  464     	CLRR	_keyCount
     0034 02rr                      1-  465     	CLRR	(_keyCount + 1)
     0035                           1-  466     _00247_DS_:
                                    1-  467     	.line	245, "main.c"; 	return 0;
     0035 2100                      1-  468     	MOVIA	0x00
     0036                           1-  469     _00248_DS_:
                                    1-  470     	.line	246, "main.c"; 	}
                                    1-  471     	RETURN	
     0036 0010                      3-   26 m1      ret
                                    1-  472     ; exit point of _keyRead
                                    1-  474     ;***
                                    1-  475     ;  pBlock Stats: dbName = C
                                    1-  476     ;***
                                    1-  477     ;has an exit
                                    1-  478     ;; Starting pCode block
                                    1-  479     .segment "code"; module=main, function=_pwmStop
     0000                           1-  481     _pwmStop:
                                    1-  482     ; 2 exit points
                                    1-  483     	.line	209, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1-  484     	CLRA	
     0001 002r                      1-  485     	SFUN	_T1CR1
                                    1-  486     	.line	210, "main.c"; 	PWM1DUTY = 0;
     0002 002r                      1-  487     	SFUN	_PWM1DUTY
                                    1-  488     	.line	211, "main.c"; 	PORTB &= 0xFB;	//关闭 喷雾
     0003 1Drr                      1-  489     	BCR	_PORTB,2
                                    1-  490     	.line	212, "main.c"; 	}
                                    1-  491     	RETURN	
     0004 0010                      3-   26 m1      ret
                                    1-  492     ; exit point of _pwmStop
                                    1-  494     ;***
                                    1-  495     ;  pBlock Stats: dbName = C
                                    1-  496     ;***
                                    1-  497     ;has an exit
                                    1-  498     ;; Starting pCode block
                                    1-  499     .segment "code"; module=main, function=_pwmStart
     0000                           1-  501     _pwmStart:
                                    1-  502     ; 2 exit points
                                    1-  503     	.line	200, "main.c"; 	TMR1 = 0x11;							//频率为110K
     0000 2111                      1-  504     	MOVIA	0x11
     0001 002r                      1-  505     	SFUN	_TMR1
                                    1-  506     	.line	201, "main.c"; 	PWM1DUTY = 0x08;				// 		
     0002 2108                      1-  507     	MOVIA	0x08
     0003 002r                      1-  508     	SFUN	_PWM1DUTY
                                    1-  509     	.line	203, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0004 0200                      1-  510     	CLRA	
     0005 002r                      1-  511     	SFUN	_T1CR2
                                    1-  512     	.line	204, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     0006 2183                      1-  513     	MOVIA	0x83
     0007 002r                      1-  514     	SFUN	_T1CR1
                                    1-  515     	.line	205, "main.c"; 	}
                                    1-  516     	RETURN	
     0008 0010                      3-   26 m1      ret
                                    1-  517     ; exit point of _pwmStart
                                    1-  519     ;***
                                    1-  520     ;  pBlock Stats: dbName = C
                                    1-  521     ;***
                                    1-  522     ;has an exit
                                    1-  523     ;functions called:
                                    1-  524     ;   _pwmStop
                                    1-  525     ;   _pwmStop
                                    1-  526     ;; Starting pCode block
                                    1-  527     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  529     _gotoSleep:
                                    1-  530     ; 2 exit points
                                    1-  531     	.line	179, "main.c"; 	count4Hour = 0;
     0000 02rr                      1-  532     	CLRR	_count4Hour
     0001 02rr                      1-  533     	CLRR	(_count4Hour + 1)
                                    1-  534     	.line	180, "main.c"; 	sleepDelay = 0;
     0002 02rr                      1-  535     	CLRR	_sleepDelay
                                    1-  536     	.line	181, "main.c"; 	workStep = 0;
     0003 02rr                      1-  537     	CLRR	_workStep
                                    1-  538     	.line	182, "main.c"; 	pwmStop();
     0004 2rrr                      1-  539     	LCALL	_pwmStop
                                    1-  540     	.line	183, "main.c"; 	LEDOFF();
     0005 1Crr                      1-  541     	BCR	_PORTB,1
                                    1-  542     	.line	184, "main.c"; 	BWUCON = 0x20;
     0006 2120                      1-  543     	MOVIA	0x20
     0007 00rr                      1-  544     	MOVAR	_BWUCON
                                    1-  545     	.line	185, "main.c"; 	INTE =  C_INT_PBKey;
     0008 2102                      1-  546     	MOVIA	0x02
     0009 00rr                      1-  547     	MOVAR	_INTE
                                    1-  548     	.line	186, "main.c"; 	PCON =  C_LVR_En;	
     000A 2108                      1-  549     	MOVIA	0x08
     000B 00rr                      1-  550     	MOVAR	_PCON
                                    1-  551     	.line	187, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000C 02rr                      1-  552     	CLRR	_INTF
                                    1-  553     	.line	188, "main.c"; 	CLRWDT();
     000D 0002                      1-  554     	clrwdt
                                    1-  555     	.line	189, "main.c"; 	SLEEP();
     000E 0001                      1-  556     	sleep
                                    1-  557     	.line	190, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     000F 2101                      1-  558     	MOVIA	0x01
     0010 00rr                      1-  559     	MOVAR	_INTE
                                    1-  560     	.line	191, "main.c"; 	INTF = 0;
     0011 02rr                      1-  561     	CLRR	_INTF
                                    1-  562     	.line	193, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0012 2188                      1-  563     	MOVIA	0x88
     0013 00rr                      1-  564     	MOVAR	_PCON
                                    1-  565     	.line	194, "main.c"; 	}
                                    1-  566     	RETURN	
     0014 0010                      3-   26 m1      ret
                                    1-  567     ; exit point of _gotoSleep
                                    1-  569     ;***
                                    1-  570     ;  pBlock Stats: dbName = C
                                    1-  571     ;***
                                    1-  572     ;has an exit
                                    1-  573     ;functions called:
                                    1-  574     ;   _pwmStart
                                    1-  575     ;   _pwmStop
                                    1-  576     ;   _pwmStart
                                    1-  577     ;   _pwmStop
                                    1-  578     ;; Starting pCode block
                                    1-  579     .segment "code"; module=main, function=_ledCtr
     0000                           1-  581     _ledCtr:
                                    1-  582     ; 2 exit points
                                    1-  583     	.line	151, "main.c"; 	if(++count10s >= 1000)
     0000 05rr                      1-  584     	INCR	_count10s,F
     0001 0D03                      1-  585     	BTRSC	STATUS,2
     0002 05rr                      1-  586     	INCR	(_count10s + 1),F
                                    1-  587     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     0003 2103                      1-  588     	MOVIA	0x03
     0004 04rr                      1-  589     	SUBAR	(_count10s + 1),W
     0005 0903                      1-  590     	BTRSS	STATUS,2
     0006 3rrr                      1-  591     	LGOTO	_00219_DS_
     0007 21E8                      1-  592     	MOVIA	0xe8
     0008 04rr                      1-  593     	SUBAR	_count10s,W
     0009                           1-  594     _00219_DS_:
     0009 0803                      1-  595     	BTRSS	STATUS,0
     000A 3rrr                      1-  596     	LGOTO	_00194_DS_
                                    1-  597     	.line	153, "main.c"; 	if(ledFlag == 0)
     000B 01rr                      1-  598     	MOVR	_ledFlag,W
     000C 0D03                      1-  599     	BTRSC	STATUS,2
                                    1-  600     	.line	155, "main.c"; 	LEDOFF();
     000D 1Crr                      1-  601     	BCR	_PORTB,1
                                    1-  602     	.line	157, "main.c"; 	count10s = 1001;
     000E 21E9                      1-  603     	MOVIA	0xe9
     000F 00rr                      1-  604     	MOVAR	_count10s
     0010 2103                      1-  605     	MOVIA	0x03
     0011 00rr                      1-  606     	MOVAR	(_count10s + 1)
     0012                           1-  607     _00194_DS_:
                                    1-  608     	.line	159, "main.c"; 	if(ledFlag)
     0012 01rr                      1-  609     	MOVR	_ledFlag,W
     0013 0903                      1-  610     	BTRSS	STATUS,2
                                    1-  611     	.line	161, "main.c"; 	LEDON();
     0014 18rr                      1-  612     	BSR	_PORTB,1
                                    1-  613     	.line	163, "main.c"; 	if(workStep == 2)
     0015 01rr                      1-  614     	MOVR	_workStep,W
     0016 2402                      1-  615     	XORIA	0x02
     0017 0903                      1-  616     	BTRSS	STATUS,2
     0018 3rrr                      1-  617     	LGOTO	_00202_DS_
                                    1-  618     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1-  619     	.line	165, "main.c"; 	if(count6s < 6)		//喷3S，停3S
     0019 2106                      1-  620     	MOVIA	0x06
     001A 04rr                      1-  621     	SUBAR	_count6s,W
     001B 0C03                      1-  622     	BTRSC	STATUS,0
     001C 3rrr                      1-  623     	LGOTO	_00198_DS_
                                    1-  624     	.line	167, "main.c"; 	pwmStart();
     001D 2rrr                      1-  625     	LCALL	_pwmStart
     001E 3rrr                      1-  626     	LGOTO	_00202_DS_
     001F                           1-  627     _00198_DS_:
                                    1-  628     	.line	171, "main.c"; 	pwmStop();
     001F 2rrr                      1-  629     	LCALL	_pwmStop
     0020                           1-  630     _00202_DS_:
                                    1-  631     	.line	174, "main.c"; 	}
                                    1-  632     	RETURN	
     0020 0010                      3-   26 m1      ret
                                    1-  633     ; exit point of _ledCtr
                                    1-  635     ;***
                                    1-  636     ;  pBlock Stats: dbName = C
                                    1-  637     ;***
                                    1-  638     ;functions called:
                                    1-  639     ;   _gotoSleep
                                    1-  640     ;   _gotoSleep
                                    1-  641     ;   _gotoSleep
                                    1-  642     ;   _gotoSleep
                                    1-  643     ;   _gotoSleep
                                    1-  644     ;   _gotoSleep
                                    1-  645     ;; Starting pCode block
                                    1-  646     .segment "code"; module=main, function=_timeCtr
     0000                           1-  648     _timeCtr:
                                    1-  649     ; 0 exit points
                                    1-  650     	.line	123, "main.c"; 	if(++count500ms >= 50)
     0000 05rr                      1-  651     	INCR	_count500ms,F
     0001 0D03                      1-  652     	BTRSC	STATUS,2
     0002 05rr                      1-  653     	INCR	(_count500ms + 1),F
                                    1-  654     ;;unsigned compare: left < lit (0x32=50), size=2
     0003 2100                      1-  655     	MOVIA	0x00
     0004 04rr                      1-  656     	SUBAR	(_count500ms + 1),W
     0005 0903                      1-  657     	BTRSS	STATUS,2
     0006 3rrr                      1-  658     	LGOTO	_00181_DS_
     0007 2132                      1-  659     	MOVIA	0x32
     0008 04rr                      1-  660     	SUBAR	_count500ms,W
     0009                           1-  661     _00181_DS_:
     0009 0803                      1-  662     	BTRSS	STATUS,0
     000A 3rrr                      1-  663     	LGOTO	_00155_DS_
                                    1-  664     	.line	125, "main.c"; 	count500ms = 0;
     000B 02rr                      1-  665     	CLRR	_count500ms
     000C 02rr                      1-  666     	CLRR	(_count500ms + 1)
                                    1-  667     	.line	126, "main.c"; 	if(++count6s >= 12)
     000D 05rr                      1-  668     	INCR	_count6s,F
                                    1-  669     ;;unsigned compare: left < lit (0xC=12), size=1
     000E 210C                      1-  670     	MOVIA	0x0c
     000F 04rr                      1-  671     	SUBAR	_count6s,W
     0010 0803                      1-  672     	BTRSS	STATUS,0
     0011 3rrr                      1-  673     	LGOTO	_00155_DS_
                                    1-  674     	.line	128, "main.c"; 	count6s = 0;
     0012 02rr                      1-  675     	CLRR	_count6s
                                    1-  676     ;;unsigned compare: left < lit (0x2=2), size=1
                                    1-  677     	.line	130, "main.c"; 	if(workStep < 2)
     0013 2102                      1-  678     	MOVIA	0x02
     0014 04rr                      1-  679     	SUBAR	_workStep,W
     0015 0C03                      1-  680     	BTRSC	STATUS,0
     0016 3rrr                      1-  681     	LGOTO	_00145_DS_
                                    1-  682     	.line	133, "main.c"; 	if(++count4Hour >= 2400)
     0017 05rr                      1-  683     	INCR	_count4Hour,F
     0018 0D03                      1-  684     	BTRSC	STATUS,2
     0019 05rr                      1-  685     	INCR	(_count4Hour + 1),F
                                    1-  686     ;;unsigned compare: left < lit (0x960=2400), size=2
     001A 2109                      1-  687     	MOVIA	0x09
     001B 04rr                      1-  688     	SUBAR	(_count4Hour + 1),W
     001C 0903                      1-  689     	BTRSS	STATUS,2
     001D 3rrr                      1-  690     	LGOTO	_00184_DS_
     001E 2160                      1-  691     	MOVIA	0x60
     001F 04rr                      1-  692     	SUBAR	_count4Hour,W
     0020                           1-  693     _00184_DS_:
     0020 0803                      1-  694     	BTRSS	STATUS,0
     0021 3rrr                      1-  695     	LGOTO	_00146_DS_
                                    1-  696     	.line	134, "main.c"; 	gotoSleep();
     0022 2rrr                      1-  697     	LCALL	_gotoSleep
     0023 3rrr                      1-  698     	LGOTO	_00146_DS_
     0024                           1-  699     _00145_DS_:
                                    1-  700     	.line	139, "main.c"; 	if(++count4Hour >= 4800)
     0024 05rr                      1-  701     	INCR	_count4Hour,F
     0025 0D03                      1-  702     	BTRSC	STATUS,2
     0026 05rr                      1-  703     	INCR	(_count4Hour + 1),F
                                    1-  704     ;;unsigned compare: left < lit (0x12C0=4800), size=2
     0027 2112                      1-  705     	MOVIA	0x12
     0028 04rr                      1-  706     	SUBAR	(_count4Hour + 1),W
     0029 0903                      1-  707     	BTRSS	STATUS,2
     002A 3rrr                      1-  708     	LGOTO	_00185_DS_
     002B 21C0                      1-  709     	MOVIA	0xc0
     002C 04rr                      1-  710     	SUBAR	_count4Hour,W
     002D                           1-  711     _00185_DS_:
     002D 0803                      1-  712     	BTRSS	STATUS,0
     002E 3rrr                      1-  713     	LGOTO	_00146_DS_
                                    1-  714     	.line	140, "main.c"; 	gotoSleep();
     002F 2rrr                      1-  715     	LCALL	_gotoSleep
     0030                           1-  716     _00146_DS_:
                                    1-  717     	.line	143, "main.c"; 	if(workStep == 0 && count10s >= 1000 && ledFlag == 0)
     0030 01rr                      1-  718     	MOVR	_workStep,W
     0031 0903                      1-  719     	BTRSS	STATUS,2
     0032 3rrr                      1-  720     	LGOTO	_00155_DS_
                                    1-  721     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     0033 2103                      1-  722     	MOVIA	0x03
     0034 04rr                      1-  723     	SUBAR	(_count10s + 1),W
     0035 0903                      1-  724     	BTRSS	STATUS,2
     0036 3rrr                      1-  725     	LGOTO	_00186_DS_
     0037 21E8                      1-  726     	MOVIA	0xe8
     0038 04rr                      1-  727     	SUBAR	_count10s,W
     0039                           1-  728     _00186_DS_:
     0039 0803                      1-  729     	BTRSS	STATUS,0
     003A 3rrr                      1-  730     	LGOTO	_00155_DS_
     003B 01rr                      1-  731     	MOVR	_ledFlag,W
     003C 0D03                      1-  732     	BTRSC	STATUS,2
                                    1-  733     	.line	144, "main.c"; 	gotoSleep();
     003D 2rrr                      1-  734     	LCALL	_gotoSleep
     003E                           1-  735     _00155_DS_:
                                    1-  736     	.line	147, "main.c"; 	}
                                    1-  737     	RETURN	
     003E 0010                      3-   26 m1      ret
                                    1-  739     ;***
                                    1-  740     ;  pBlock Stats: dbName = C
                                    1-  741     ;***
                                    1-  742     ;has an exit
                                    1-  743     ;functions called:
                                    1-  744     ;   _keyRead
                                    1-  745     ;   _pwmStart
                                    1-  746     ;   _keyRead
                                    1-  747     ;   _pwmStart
                                    1-  748     ;1 compiler assigned register :
                                    1-  749     ;   r0x1013
                                    1-  750     ;; Starting pCode block
                                    1-  751     .segment "code"; module=main, function=_keyCtr
                                    1-  753     ;local variable name mapping:
     0000                           1-  755     _keyCtr:
                                    1-  756     ; 2 exit points
                                    1-  757     	.line	91, "main.c"; 	char kclick = keyRead(0x20 & ~PORTB);
     0000 07rr                      1-  758     	COMR	_PORTB,W
     0001 00rr                      1-  759     	MOVAR	r0x1013
     0002 2120                      1-  760     	MOVIA	0x20
     0003 10rr                      1-  761     	ANDAR	r0x1013,F
     0004 01rr                      1-  762     	MOVR	r0x1013,W
     0005 2rrr                      1-  763     	LCALL	_keyRead
     0006 00rr                      1-  764     	MOVAR	r0x1013
                                    1-  765     	.line	92, "main.c"; 	if(kclick == 1)
     0007 2401                      1-  766     	XORIA	0x01
     0008 0903                      1-  767     	BTRSS	STATUS,2
     0009 3rrr                      1-  768     	LGOTO	_00133_DS_
                                    1-  769     	.line	94, "main.c"; 	count4Hour = 0;
     000A 02rr                      1-  770     	CLRR	_count4Hour
     000B 02rr                      1-  771     	CLRR	(_count4Hour + 1)
                                    1-  772     	.line	95, "main.c"; 	if(++workStep >= 3)
     000C 05rr                      1-  773     	INCR	_workStep,F
                                    1-  774     ;;unsigned compare: left < lit (0x3=3), size=1
     000D 2103                      1-  775     	MOVIA	0x03
     000E 04rr                      1-  776     	SUBAR	_workStep,W
     000F 0C03                      1-  777     	BTRSC	STATUS,0
                                    1-  778     	.line	96, "main.c"; 	workStep = 0;
     0010 02rr                      1-  779     	CLRR	_workStep
                                    1-  780     	.line	98, "main.c"; 	if(workStep == 1)
     0011 01rr                      1-  781     	MOVR	_workStep,W
     0012 2401                      1-  782     	XORIA	0x01
     0013 0903                      1-  783     	BTRSS	STATUS,2
     0014 3rrr                      1-  784     	LGOTO	_00135_DS_
                                    1-  785     	.line	101, "main.c"; 	pwmStart();
     0015 2rrr                      1-  786     	LCALL	_pwmStart
     0016 3rrr                      1-  787     	LGOTO	_00135_DS_
     0017                           1-  788     _00133_DS_:
                                    1-  789     	.line	104, "main.c"; 	else if(kclick == 2)
     0017 01rr                      1-  790     	MOVR	r0x1013,W
     0018 2402                      1-  791     	XORIA	0x02
     0019 0903                      1-  792     	BTRSS	STATUS,2
     001A 3rrr                      1-  793     	LGOTO	_00135_DS_
                                    1-  794     	.line	106, "main.c"; 	if(ledFlag)
     001B 01rr                      1-  795     	MOVR	_ledFlag,W
     001C 0D03                      1-  796     	BTRSC	STATUS,2
     001D 3rrr                      1-  797     	LGOTO	_00128_DS_
                                    1-  798     	.line	108, "main.c"; 	ledFlag = 0;
     001E 02rr                      1-  799     	CLRR	_ledFlag
                                    1-  800     	.line	109, "main.c"; 	count10s = 1001;	//直接跳过开机10S
     001F 21E9                      1-  801     	MOVIA	0xe9
     0020 00rr                      1-  802     	MOVAR	_count10s
     0021 2103                      1-  803     	MOVIA	0x03
     0022 00rr                      1-  804     	MOVAR	(_count10s + 1)
     0023 3rrr                      1-  805     	LGOTO	_00135_DS_
     0024                           1-  806     _00128_DS_:
                                    1-  807     	.line	113, "main.c"; 	ledFlag = 1;
     0024 2101                      1-  808     	MOVIA	0x01
     0025 00rr                      1-  809     	MOVAR	_ledFlag
     0026                           1-  810     _00135_DS_:
                                    1-  811     	.line	119, "main.c"; 	}
                                    1-  812     	RETURN	
     0026 0010                      3-   26 m1      ret
                                    1-  813     ; exit point of _keyCtr
                                    1-  816     ;	code size estimation:
                                    1-  817     ;	  295+    0 =   295 instructions (  590 byte)
                                    1-  819     	end
                                    1-  819     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 00000006
__PROCESSOR__           Constant 00800513
__sdcc_interrupt        Label    00000000
_00108_DS_              Label    00000019
_00110_DS_              Label    0000001D
_00118_DS_              Label    00000014
_00128_DS_              Label    00000024
_00133_DS_              Label    00000017
_00135_DS_              Label    00000026
_00145_DS_              Label    00000024
_00146_DS_              Label    00000030
_00155_DS_              Label    0000003E
_00181_DS_              Label    00000009
_00184_DS_              Label    00000020
_00185_DS_              Label    0000002D
_00186_DS_              Label    00000039
_00194_DS_              Label    00000012
_00198_DS_              Label    0000001F
_00202_DS_              Label    00000020
_00219_DS_              Label    00000009
_00243_DS_              Label    00000027
_00244_DS_              Label    00000033
_00246_DS_              Label    0000001A
_00247_DS_              Label    00000035
_00248_DS_              Label    00000036
_00265_DS_              Label    0000000D
_00266_DS_              Label    00000020
_00267_DS_              Label    0000002D
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BPLCON                 Label    00000000
_BPLCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_count10s               Label    00000000
_count4Hour             Label    00000000
_count4s                Label    00000000
_count500ms             Label    00000000
_count6s                Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_ledCtr                 Label    00000000
_ledFlag                Label    00000000
_longPressFlag          Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PWM1DUTY               Label    00000000
_pwmStart               Label    00000000
_pwmStop                Label    00000000
_sleepDelay             Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_timeCtr                Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    0000002B
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1012                 Label    00000000
r0x1013                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a051d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A051D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
