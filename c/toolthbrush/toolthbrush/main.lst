
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_delay
                                    1-   97     	extern	_keyRead
                                    1-   98     	extern	_KeyScan
                                    1-   99     	extern	_initSys
                                    1-  100     	extern	_Level3Change
                                    1-  101     	extern	_pwmWork
                                    1-  102     	extern	_ledOn
                                    1-  103     	extern	_ledOff
                                    1-  104     	extern	_ledWord
                                    1-  105     	extern	_gotoSleep
                                    1-  106     	extern	_nextorSleep
                                    1-  107     	extern	_lvdLed
                                    1-  108     	extern	_powerLed
                                    1-  109     	extern	_isr
                                    1-  110     	extern	_main
                                    1-  111     	extern	_INTFLAG
                                    1-  112     	extern	_workStep
                                    1-  113     	extern	_saveWorkStep
                                    1-  114     	extern	_intCount
                                    1-  115     	extern	_KeyStatus
                                    1-  116     	extern	_keyCount
                                    1-  117     	extern	_pwmHmax
                                    1-  118     	extern	_pwmLmax
                                    1-  119     	extern	_pwm2Lmax
                                    1-  120     	extern	_pwmwaitTime
                                    1-  121     	extern	_pwmStep
                                    1-  122     	extern	_pwm1L
                                    1-  123     	extern	_pwm2L
                                    1-  124     	extern	_pwmwait
                                    1-  125     	extern	_ledL
                                    1-  126     	extern	_ledH
                                    1-  127     	extern	_ledOffTime
                                    1-  128     	extern	_ledTime
                                    1-  129     	extern	_ledpwmTime
                                    1-  130     	extern	_sleepFlag
                                    1-  131     	extern	_lvdFlag
                                    1-  132     	extern	_lvdTime
                                    1-  133     	extern	_powerFlag
                                    1-  134     	extern	_powerFullFlag
                                    1-  135     	extern	_threeChangeFlag
                                    1-  136     	extern	_threeStep
                                    1-  137     	extern	_count250ms
                                    1-  138     	extern	_count500ms
                                    1-  139     	extern	_count3s
                                    1-  140     	extern	_count1000ms
                                    1-  142     	extern PSAVE
                                    1-  143     	extern SSAVE
                                    1-  144     	extern WSAVE
                                    1-  145     	extern STK12
                                    1-  146     	extern STK11
                                    1-  147     	extern STK10
                                    1-  148     	extern STK09
                                    1-  149     	extern STK08
                                    1-  150     	extern STK07
                                    1-  151     	extern STK06
                                    1-  152     	extern STK05
                                    1-  153     	extern STK04
                                    1-  154     	extern STK03
                                    1-  155     	extern STK02
                                    1-  156     	extern STK01
                                    1-  157     	extern STK00
                                    1-  159     .segment "uninit", 0x20000040
 20000040                           1-  160     PSAVE:
                                    1-  161     	.res 1
 20000041                           1-  162     SSAVE:
                                    1-  163     	.res 1
 20000042                           1-  164     WSAVE:
                                    1-  165     	.res 1
 20000043                           1-  166     STK12:
                                    1-  167     	.res 1
 20000044                           1-  168     STK11:
                                    1-  169     	.res 1
 20000045                           1-  170     STK10:
                                    1-  171     	.res 1
 20000046                           1-  172     STK09:
                                    1-  173     	.res 1
 20000047                           1-  174     STK08:
                                    1-  175     	.res 1
 20000048                           1-  176     STK07:
                                    1-  177     	.res 1
 20000049                           1-  178     STK06:
                                    1-  179     	.res 1
 2000004A                           1-  180     STK05:
                                    1-  181     	.res 1
 2000004B                           1-  182     STK04:
                                    1-  183     	.res 1
 2000004C                           1-  184     STK03:
                                    1-  185     	.res 1
 2000004D                           1-  186     STK02:
                                    1-  187     	.res 1
 2000004E                           1-  188     STK01:
                                    1-  189     	.res 1
 2000004F                           1-  190     STK00:
                                    1-  191     	.res 1
                                    1-  193     ;--------------------------------------------------------
                                    1-  194     ; global definitions
                                    1-  195     ;--------------------------------------------------------
                                    1-  196     .segment "uninit"
     0000                           1-  197     _KeyStatus:
                                    1-  198     	.res	1
                                    1-  201     ;--------------------------------------------------------
                                    1-  202     ; absolute symbol definitions
                                    1-  203     ;--------------------------------------------------------
                                    1-  204     ;--------------------------------------------------------
                                    1-  205     ; compiler-defined variables
                                    1-  206     ;--------------------------------------------------------
                                    1-  207     .segment "uninit"
     0000                           1-  208     r0x102B:
                                    1-  209     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     r0x1029:
                                    1-  212     	.res	1
                                    1-  213     .segment "uninit"
     0000                           1-  214     r0x102A:
                                    1-  215     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     r0x1024:
                                    1-  218     	.res	1
                                    1-  219     .segment "uninit"
     0000                           1-  220     r0x1023:
                                    1-  221     	.res	1
                                    1-  222     .segment "uninit"
     0000                           1-  223     r0x1025:
                                    1-  224     	.res	1
                                    1-  225     .segment "uninit"
     0000                           1-  226     r0x1026:
                                    1-  227     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     r0x1027:
                                    1-  230     	.res	1
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     ; initialized data
                                    1-  233     ;--------------------------------------------------------
                                    1-  235     .segment "idata"
     0000                           1-  236     _INTFLAG:
     0000 0000                      1-  237     	dw	0x00
                                    1-  241     .segment "idata"
     0000                           1-  242     _workStep:
     0000 0000                      1-  243     	dw	0x00
                                    1-  247     .segment "idata"
     0000                           1-  248     _saveWorkStep:
     0000 0001                      1-  249     	dw	0x01
                                    1-  253     .segment "idata"
     0000                           1-  254     _intCount:
     0000 0000                      1-  255     	dw	0x00
                                    1-  259     .segment "idata"
     0000                           1-  260     _keyCount:
     0000 0000                      1-  261     	dw	0x00
                                    1-  265     .segment "idata"
     0000                           1-  266     _pwmHmax:
     0000 0014                      1-  267     	dw	0x14
                                    1-  271     .segment "idata"
     0000                           1-  272     _pwmLmax:
     0000 0010                      1-  273     	dw	0x10
                                    1-  277     .segment "idata"
     0000                           1-  278     _pwm2Lmax:
     0000 0010                      1-  279     	dw	0x10
                                    1-  283     .segment "idata"
     0000                           1-  284     _pwmwaitTime:
     0000 0002                      1-  285     	dw	0x02
                                    1-  289     .segment "idata"
     0000                           1-  290     _pwmStep:
     0000 0000                      1-  291     	dw	0x00
                                    1-  295     .segment "idata"
     0000                           1-  296     _pwm1L:
     0000 rrrr                      1-  297     	dw	_pwmLmax
                                    1-  301     .segment "idata"
     0000                           1-  302     _pwm2L:
     0000 rrrr                      1-  303     	dw	_pwmLmax
                                    1-  307     .segment "idata"
     0000                           1-  308     _pwmwait:
     0000 0000                      1-  309     	dw	0x00
                                    1-  313     .segment "idata"
     0000                           1-  314     _ledL:
     0000 000A                      1-  315     	dw	0x0a
                                    1-  319     .segment "idata"
     0000                           1-  320     _ledH:
     0000 005A                      1-  321     	dw	0x5a
                                    1-  325     .segment "idata"
     0000                           1-  326     _ledOffTime:
     0000 0088 0013                 1-  327     	dw	0x88, 0x13
                                    1-  331     .segment "idata"
     0000                           1-  332     _ledTime:
     0000 0006                      1-  333     	dw	0x06
                                    1-  337     .segment "idata"
     0000                           1-  338     _ledpwmTime:
     0000 0032                      1-  339     	dw	0x32
                                    1-  343     .segment "idata"
     0000                           1-  344     _sleepFlag:
     0000 0000                      1-  345     	dw	0x00
                                    1-  349     .segment "idata"
     0000                           1-  350     _lvdFlag:
     0000 0000                      1-  351     	dw	0x00
                                    1-  355     .segment "idata"
     0000                           1-  356     _lvdTime:
     0000 0000                      1-  357     	dw	0x00
                                    1-  361     .segment "idata"
     0000                           1-  362     _powerFlag:
     0000 0000                      1-  363     	dw	0x00
                                    1-  367     .segment "idata"
     0000                           1-  368     _powerFullFlag:
     0000 0000                      1-  369     	dw	0x00
                                    1-  373     .segment "idata"
     0000                           1-  374     _threeChangeFlag:
     0000 0000                      1-  375     	dw	0x00
                                    1-  379     .segment "idata"
     0000                           1-  380     _threeStep:
     0000 0000                      1-  381     	dw	0x00
                                    1-  385     .segment "idata"
     0000                           1-  386     _count250ms:
     0000 0000 0000                 1-  387     	dw	0x00, 0x00
                                    1-  391     .segment "idata"
     0000                           1-  392     _count500ms:
     0000 0000 0000                 1-  393     	dw	0x00, 0x00
                                    1-  397     .segment "idata"
     0000                           1-  398     _count3s:
     0000 0000 0000                 1-  399     	dw	0x00, 0x00
                                    1-  403     .segment "idata"
     0000                           1-  404     _count1000ms:
     0000 0000 0000                 1-  405     	dw	0x00, 0x00
                                    1-  408     ;--------------------------------------------------------
                                    1-  409     ; overlayable items in internal ram 
                                    1-  410     ;--------------------------------------------------------
                                    1-  411     ;	udata_ovr
                                    1-  412     ;--------------------------------------------------------
                                    1-  413     ; reset vector 
                                    1-  414     ;--------------------------------------------------------
                                    1-  415     ORG	0x0000
     0000 3rrr                      1-  416     	LGOTO	__nyc_ny8_startup
                                    1-  417     ;--------------------------------------------------------
                                    1-  418     ; interrupt and initialization code
                                    1-  419     ;--------------------------------------------------------
                                    1-  420     ORG 0x0008
     0008 3rrr                      1-  421     	lgoto	__sdcc_interrupt
                                    1-  423     .segment "code"
     0000                           1-  424     __sdcc_interrupt:
                                    1-  425     ;***
                                    1-  426     ;  pBlock Stats: dbName = I
                                    1-  427     ;***
                                    1-  428     ;functions called:
                                    1-  429     ;   _pwmWork
                                    1-  430     ;   _ledWord
                                    1-  431     ;   _powerLed
                                    1-  432     ;   _lvdLed
                                    1-  433     ;   _gotoSleep
                                    1-  434     ;   _pwmWork
                                    1-  435     ;   _ledWord
                                    1-  436     ;   _powerLed
                                    1-  437     ;   _lvdLed
                                    1-  438     ;   _gotoSleep
                                    1-  439     ;2 compiler assigned registers:
                                    1-  440     ;   STK00
                                    1-  441     ;   STK01
                                    1-  442     ;; Starting pCode block
     0000                           1-  443     _isr:
                                    1-  444     ; 0 exit points
                                    1-  445     	.line	94, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  446     	MOVAR	WSAVE
     0001 1503                      1-  447     	SWAPR	STATUS,W
     0002 0283                      1-  448     	CLRR	STATUS
     0003 00rr                      1-  449     	MOVAR	SSAVE
     0004 010A                      1-  450     	MOVR	PCHBUF,W
     0005 028A                      1-  451     	CLRR	PCHBUF
     0006 00rr                      1-  452     	MOVAR	PSAVE
     0007 0104                      1-  453     	MOVR	FSR,W
                                    1-  454     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  455     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  456     	MOVR	STK00,W
                                    1-  457     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  458     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  459     	MOVR	STK01,W
                                    1-  460     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  461     	MOVAR	___sdcc_saved_stk01
                                    1-  462     	.line	97, "main.c"; 	if(INTFbits.T1IF)
     0010 09rr                      1-  463     	BTRSS	_INTFbits,3
     0011 3rrr                      1-  464     	LGOTO	_00121_DS_
                                    1-  465     	.line	99, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR0);	// Clear T0IF flag bit	
     0012 21FE                      1-  466     	MOVIA	0xfe
     0013 00rr                      1-  467     	MOVAR	_INTF
                                    1-  468     	.line	100, "main.c"; 	TMR1 = 0x17;							// 0.1ms中断一次 23 * (16*2/8000000) = 0.000092
     0014 2117                      1-  469     	MOVIA	0x17
     0015 00rr                      1-  470     	SFUN	_TMR1
                                    1-  471     	.line	101, "main.c"; 	TMRH = 0x00;
     0016 02rr                      1-  472     	CLRR	_TMRH
                                    1-  473     	.line	102, "main.c"; 	intCount++;
                                    1-  474     	BANKSEL	_intCount
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 05rr                      1-  475     	INCR	_intCount,F
                                    1-  476     	.line	103, "main.c"; 	if(workStep && (!lvdFlag)){
                                    1-  477     	BANKSEL	_workStep
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  478     	MOVR	_workStep,W
     001B 0D03                      1-  479     	BTRSC	STATUS,2
     001C 3rrr                      1-  480     	LGOTO	_00106_DS_
                                    1-  481     	BANKSEL	_lvdFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  482     	MOVR	_lvdFlag,W
     001F 0903                      1-  483     	BTRSS	STATUS,2
     0020 3rrr                      1-  484     	LGOTO	_00106_DS_
                                    1-  485     	.line	104, "main.c"; 	pwmWork();
     0021 2rrr                      1-  486     	LCALL	_pwmWork
                                    1-  487     	.line	105, "main.c"; 	ledWord();
     0022 2rrr                      1-  488     	LCALL	_ledWord
                                    1-  489     	.line	106, "main.c"; 	PORTA &= 0xBF;
     0023 1Frr                      1-  490     	BCR	_PORTA,6
                                    1-  491     	.line	107, "main.c"; 	count3s = 0;
                                    1-  492     	BANKSEL	_count3s
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1-  493     	CLRR	_count3s
     0026 02rr                      1-  494     	CLRR	(_count3s + 1)
     0027                           1-  495     _00106_DS_:
                                    1-  496     	.line	110, "main.c"; 	if(powerFlag)
                                    1-  497     	BANKSEL	_powerFlag
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  498     	MOVR	_powerFlag,W
     0029 0D03                      1-  499     	BTRSC	STATUS,2
     002A 3rrr                      1-  500     	LGOTO	_00116_DS_
                                    1-  501     	.line	112, "main.c"; 	powerLed();
     002B 2rrr                      1-  502     	LCALL	_powerLed
     002C 3rrr                      1-  503     	LGOTO	_00117_DS_
     002D                           1-  504     _00116_DS_:
                                    1-  505     	.line	116, "main.c"; 	if(lvdFlag)
                                    1-  506     	BANKSEL	_lvdFlag
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  507     	MOVR	_lvdFlag,W
     002F 0D03                      1-  508     	BTRSC	STATUS,2
     0030 3rrr                      1-  509     	LGOTO	_00109_DS_
                                    1-  510     	.line	119, "main.c"; 	lvdLed();
     0031 2rrr                      1-  511     	LCALL	_lvdLed
     0032 3rrr                      1-  512     	LGOTO	_00110_DS_
     0033                           1-  513     _00109_DS_:
                                    1-  514     	.line	124, "main.c"; 	lvdTime = 0;
                                    1-  515     	BANKSEL	_lvdTime
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1-  516     	CLRR	_lvdTime
     0035                           1-  517     _00110_DS_:
                                    1-  518     	.line	129, "main.c"; 	if(!workStep)
                                    1-  519     	BANKSEL	_workStep
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1-  520     	MOVR	_workStep,W
     0037 0903                      1-  521     	BTRSS	STATUS,2
     0038 3rrr                      1-  522     	LGOTO	_00117_DS_
                                    1-  523     	.line	131, "main.c"; 	PORTA |= 0x40;
     0039 1Brr                      1-  524     	BSR	_PORTA,6
                                    1-  525     	.line	132, "main.c"; 	count3s++;
                                    1-  526     	BANKSEL	_count3s
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 05rr                      1-  527     	INCR	_count3s,F
     003C 0D03                      1-  528     	BTRSC	STATUS,2
     003D 05rr                      1-  529     	INCR	(_count3s + 1),F
                                    1-  530     	.line	133, "main.c"; 	if(count3s == 30000)
     003E 01rr                      1-  531     	MOVR	_count3s,W
     003F 2430                      1-  532     	XORIA	0x30
     0040 0903                      1-  533     	BTRSS	STATUS,2
     0041 3rrr                      1-  534     	LGOTO	_00117_DS_
     0042 01rr                      1-  535     	MOVR	(_count3s + 1),W
     0043 2475                      1-  536     	XORIA	0x75
     0044 0903                      1-  537     	BTRSS	STATUS,2
     0045 3rrr                      1-  538     	LGOTO	_00117_DS_
                                    1-  539     	.line	135, "main.c"; 	count3s = 0;
     0046 02rr                      1-  540     	CLRR	_count3s
     0047 02rr                      1-  541     	CLRR	(_count3s + 1)
                                    1-  542     	.line	136, "main.c"; 	gotoSleep();
     0048 2rrr                      1-  543     	LCALL	_gotoSleep
     0049                           1-  544     _00117_DS_:
                                    1-  545     	.line	144, "main.c"; 	if(intCount == 100)
                                    1-  546     	BANKSEL	_intCount
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 01rr                      1-  547     	MOVR	_intCount,W
     004B 2464                      1-  548     	XORIA	0x64
     004C 0903                      1-  549     	BTRSS	STATUS,2
     004D 3rrr                      1-  550     	LGOTO	_00121_DS_
                                    1-  551     	.line	146, "main.c"; 	intCount = 0;
     004E 02rr                      1-  552     	CLRR	_intCount
                                    1-  553     	.line	147, "main.c"; 	INTFLAG = 1;
     004F 2101                      1-  554     	MOVIA	0x01
                                    1-  555     	BANKSEL	_INTFLAG
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1-  556     	MOVAR	_INTFLAG
     0052                           1-  557     _00121_DS_:
                                    1-  558     	.line	151, "main.c"; 	if(INTFbits.PABIF)
     0052 08rr                      1-  559     	BTRSS	_INTFbits,1
     0053 3rrr                      1-  560     	LGOTO	_00123_DS_
                                    1-  561     	.line	153, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0054 21FD                      1-  562     	MOVIA	0xfd
     0055 00rr                      1-  563     	MOVAR	_INTF
     0056                           1-  564     _00123_DS_:
                                    1-  565     	.line	156, "main.c"; 	if(INTFbits.WDTIF)
     0056 0Brr                      1-  566     	BTRSS	_INTFbits,6
     0057 3rrr                      1-  567     	LGOTO	_00125_DS_
                                    1-  568     	.line	158, "main.c"; 	INTF= (unsigned char)~(C_INT_WDT);	// Clear WDTIF flag bit		
     0058 21BF                      1-  569     	MOVIA	0xbf
     0059 00rr                      1-  570     	MOVAR	_INTF
     005A                           1-  571     _00125_DS_:
                                    1-  572     	.line	161, "main.c"; 	if(INTFbits.LVDIF)
     005A 0Arr                      1-  573     	BTRSS	_INTFbits,4
     005B 3rrr                      1-  574     	LGOTO	_00127_DS_
                                    1-  575     	.line	163, "main.c"; 	INTF= (unsigned char)~(C_INT_LVD);	//低电压中断
     005C 21EF                      1-  576     	MOVIA	0xef
     005D 00rr                      1-  577     	MOVAR	_INTF
                                    1-  578     	.line	164, "main.c"; 	lvdFlag = 1;	//低电压
     005E 2101                      1-  579     	MOVIA	0x01
                                    1-  580     	BANKSEL	_lvdFlag
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 00rr                      1-  581     	MOVAR	_lvdFlag
     0061                           1-  582     _00127_DS_:
                                    1-  583     	.line	166, "main.c"; 	INTF = 0;
     0061 02rr                      1-  584     	CLRR	_INTF
                                    1-  585     	.line	167, "main.c"; 	}
                                    1-  586     	BANKSEL	___sdcc_saved_stk01
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 01rr                      1-  587     	MOVR	___sdcc_saved_stk01,W
     0064 00rr                      1-  588     	MOVAR	STK01
                                    1-  589     	BANKSEL	___sdcc_saved_stk00
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 01rr                      1-  590     	MOVR	___sdcc_saved_stk00,W
     0067 00rr                      1-  591     	MOVAR	STK00
                                    1-  592     	BANKSEL	___sdcc_saved_fsr
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 01rr                      1-  593     	MOVR	___sdcc_saved_fsr,W
     006A 0084                      1-  594     	MOVAR	FSR
     006B 01rr                      1-  595     	MOVR	PSAVE,W
     006C 008A                      1-  596     	MOVAR	PCHBUF
     006D 0283                      1-  597     	CLRR	STATUS
     006E 15rr                      1-  598     	SWAPR	SSAVE,W
     006F 0083                      1-  599     	MOVAR	STATUS
     0070 15rr                      1-  600     	SWAPR	WSAVE,F
     0071 15rr                      1-  601     	SWAPR	WSAVE,W
     0072                           1-  602     END_OF_INTERRUPT:
     0072 0011                      1-  603     	RETIE	
                                    1-  605     ;--------------------------------------------------------
                                    1-  606     ; code
                                    1-  607     ;--------------------------------------------------------
                                    1-  608     ;***
                                    1-  609     ;  pBlock Stats: dbName = M
                                    1-  610     ;***
                                    1-  611     ;has an exit
                                    1-  612     ;functions called:
                                    1-  613     ;   _initSys
                                    1-  614     ;   _gotoSleep
                                    1-  615     ;   _KeyScan
                                    1-  616     ;   _keyRead
                                    1-  617     ;   _nextorSleep
                                    1-  618     ;   _initSys
                                    1-  619     ;   _gotoSleep
                                    1-  620     ;   _KeyScan
                                    1-  621     ;   _keyRead
                                    1-  622     ;   _nextorSleep
                                    1-  623     ;2 compiler assigned registers:
                                    1-  624     ;   r0x1029
                                    1-  625     ;   r0x102A
                                    1-  626     ;; Starting pCode block
                                    1-  627     .segment "code"; module=main, function=_main
     0000                           1-  629     _main:
                                    1-  630     ; 2 exit points
                                    1-  631     	.line	565, "main.c"; 	initSys();
     0000 2rrr                      1-  632     	LCALL	_initSys
                                    1-  633     	.line	566, "main.c"; 	PORTB = 0xFF;
     0001 21FF                      1-  634     	MOVIA	0xff
     0002 00rr                      1-  635     	MOVAR	_PORTB
                                    1-  636     	.line	567, "main.c"; 	PORTA = 0xE7;
     0003 21E7                      1-  637     	MOVIA	0xe7
     0004 00rr                      1-  638     	MOVAR	_PORTA
                                    1-  639     	.line	568, "main.c"; 	gotoSleep();
     0005 2rrr                      1-  640     	LCALL	_gotoSleep
     0006                           1-  641     _00321_DS_:
                                    1-  642     	.line	571, "main.c"; 	CLRWDT();	
     0006 0002                      1-  643     	clrwdt
                                    1-  644     	.line	572, "main.c"; 	if(!INTFLAG)
                                    1-  645     	BANKSEL	_INTFLAG
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1-  646     	MOVR	_INTFLAG,W
     0009 0D03                      1-  647     	BTRSC	STATUS,2
     000A 3rrr                      1-  648     	LGOTO	_00321_DS_
                                    1-  649     	.line	574, "main.c"; 	INTFLAG = 0;
     000B 02rr                      1-  650     	CLRR	_INTFLAG
                                    1-  651     	.line	575, "main.c"; 	if(getbit(PCON1,6))
     000C 001r                      1-  652     	IOSTR	_PCON1
                                    1-  653     	BANKSEL	r0x1029
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1-  654     	MOVAR	r0x1029
     000F 2240                      1-  655     	ANDIA	0x40
     0010 0903                      1-  656     	BTRSS	STATUS,2
     0011 2101                      1-  657     	MOVIA	0x01
                                    1-  658     	BANKSEL	r0x102A
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1-  659     	MOVAR	r0x102A
     0014 01rr                      1-  660     	MOVR	r0x102A,W
     0015 0D03                      1-  661     	BTRSC	STATUS,2
     0016 3rrr                      1-  662     	LGOTO	_00002_DS_
                                    1-  663     	.line	576, "main.c"; 	lvdFlag = 0;	//电压正常
                                    1-  664     	BANKSEL	_lvdFlag
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 02rr                      1-  665     	CLRR	_lvdFlag
     0019                           1-  666     _00002_DS_:
                                    1-  667     	.line	578, "main.c"; 	powerFlag = getbit(PORTB,1);
     0019 01rr                      1-  668     	MOVR	_PORTB,W
     001A 2202                      1-  669     	ANDIA	0x02
     001B 0903                      1-  670     	BTRSS	STATUS,2
     001C 2101                      1-  671     	MOVIA	0x01
                                    1-  672     	BANKSEL	_powerFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  673     	MOVAR	_powerFlag
                                    1-  674     	.line	580, "main.c"; 	powerFullFlag = getbit(PORTB,0);
     001F 01rr                      1-  675     	MOVR	_PORTB,W
     0020 2201                      1-  676     	ANDIA	0x01
                                    1-  677     	BANKSEL	_powerFullFlag
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 00rr                      1-  678     	MOVAR	_powerFullFlag
                                    1-  679     	.line	582, "main.c"; 	KeyStatus = KeyScan() & 0x1F;	// Get PB4 ~ PB0 Key Status
     0023 2rrr                      1-  680     	LCALL	_KeyScan
                                    1-  681     	BANKSEL	r0x1029
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1-  682     	MOVAR	r0x1029
     0026 211F                      1-  683     	MOVIA	0x1f
     0027 10rr                      1-  684     	ANDAR	r0x1029,W
                                    1-  685     	BANKSEL	_KeyStatus
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 00rr                      1-  686     	MOVAR	_KeyStatus
                                    1-  687     	.line	583, "main.c"; 	if(keyRead() && !powerFlag)
     002A 2rrr                      1-  688     	LCALL	_keyRead
                                    1-  689     	BANKSEL	r0x1029
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 00rr                      1-  690     	MOVAR	r0x1029
     002D 01rr                      1-  691     	MOVR	r0x1029,W
     002E 0D03                      1-  692     	BTRSC	STATUS,2
     002F 3rrr                      1-  693     	LGOTO	_00321_DS_
                                    1-  694     	BANKSEL	_powerFlag
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 01rr                      1-  695     	MOVR	_powerFlag,W
     0032 0903                      1-  696     	BTRSS	STATUS,2
     0033 3rrr                      1-  697     	LGOTO	_00321_DS_
                                    1-  698     	.line	586, "main.c"; 	nextorSleep();
     0034 2rrr                      1-  699     	LCALL	_nextorSleep
                                    1-  700     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1-  701     	.line	589, "main.c"; 	switch(workStep)
     0035 2101                      1-  702     	MOVIA	0x01
                                    1-  703     	BANKSEL	_workStep
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 04rr                      1-  704     	SUBAR	_workStep,W
     0038 0803                      1-  705     	BTRSS	STATUS,0
     0039 3rrr                      1-  706     	LGOTO	_00321_DS_
                                    1-  707     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  708     ;;unsigned compare: left >= lit (0x6=6), size=1
     003A 2106                      1-  709     	MOVIA	0x06
     003B 04rr                      1-  710     	SUBAR	_workStep,W
     003C 0C03                      1-  711     	BTRSC	STATUS,0
     003D 3rrr                      1-  712     	LGOTO	_00321_DS_
     003E 06rr                      1-  713     	DECR	_workStep,W
                                    1-  714     	BANKSEL	r0x1029
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 00rr                      1-  715     	MOVAR	r0x1029
     0041 21rr                      1-  716     	MOVIA	((_00348_DS_ >> 8) & 0xff)
     0042 008A                      1-  717     	MOVAR	PCHBUF
     0043 01rr                      1-  718     	MOVR	r0x1029,W
     0044 25rr                      1-  719     	ADDIA	_00348_DS_
     0045 0C03                      1-  720     	BTRSC	STATUS,0
     0046 058A                      1-  721     	INCR	PCHBUF,F
     0047 0082                      1-  722     	MOVAR	PCL
     0048                           1-  723     _00348_DS_:
     0048 3rrr                      1-  724     	LGOTO	_00311_DS_
     0049 3rrr                      1-  725     	LGOTO	_00312_DS_
     004A 3rrr                      1-  726     	LGOTO	_00313_DS_
     004B 3rrr                      1-  727     	LGOTO	_00314_DS_
     004C 3rrr                      1-  728     	LGOTO	_00315_DS_
     004D                           1-  729     _00311_DS_:
                                    1-  730     	.line	592, "main.c"; 	pwmwaitTime = 2;
     004D 2102                      1-  731     	MOVIA	0x02
                                    1-  732     	BANKSEL	_pwmwaitTime
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 00rr                      1-  733     	MOVAR	_pwmwaitTime
                                    1-  734     	.line	593, "main.c"; 	pwmLmax = pwm2Lmax = 16;
     0050 2110                      1-  735     	MOVIA	0x10
                                    1-  736     	BANKSEL	_pwm2Lmax
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 00rr                      1-  737     	MOVAR	_pwm2Lmax
                                    1-  738     	BANKSEL	_pwmLmax
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1-  739     	MOVAR	_pwmLmax
                                    1-  740     	.line	594, "main.c"; 	break;
     0055 3rrr                      1-  741     	LGOTO	_00321_DS_
     0056                           1-  742     _00312_DS_:
                                    1-  743     	.line	596, "main.c"; 	pwmwaitTime = 4;
     0056 2104                      1-  744     	MOVIA	0x04
                                    1-  745     	BANKSEL	_pwmwaitTime
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1-  746     	MOVAR	_pwmwaitTime
                                    1-  747     	.line	597, "main.c"; 	pwmLmax = pwm2Lmax = 16;
     0059 2110                      1-  748     	MOVIA	0x10
                                    1-  749     	BANKSEL	_pwm2Lmax
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1-  750     	MOVAR	_pwm2Lmax
                                    1-  751     	BANKSEL	_pwmLmax
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 00rr                      1-  752     	MOVAR	_pwmLmax
                                    1-  753     	.line	598, "main.c"; 	break;
     005E 3rrr                      1-  754     	LGOTO	_00321_DS_
     005F                           1-  755     _00313_DS_:
                                    1-  756     	.line	600, "main.c"; 	pwmwaitTime = 6;
     005F 2106                      1-  757     	MOVIA	0x06
                                    1-  758     	BANKSEL	_pwmwaitTime
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 00rr                      1-  759     	MOVAR	_pwmwaitTime
                                    1-  760     	.line	601, "main.c"; 	pwmLmax = pwm2Lmax = 16;
     0062 2110                      1-  761     	MOVIA	0x10
                                    1-  762     	BANKSEL	_pwm2Lmax
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 00rr                      1-  763     	MOVAR	_pwm2Lmax
                                    1-  764     	BANKSEL	_pwmLmax
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 00rr                      1-  765     	MOVAR	_pwmLmax
                                    1-  766     	.line	602, "main.c"; 	break;
     0067 3rrr                      1-  767     	LGOTO	_00321_DS_
     0068                           1-  768     _00314_DS_:
                                    1-  769     	.line	604, "main.c"; 	pwmwaitTime = 9;
     0068 2109                      1-  770     	MOVIA	0x09
                                    1-  771     	BANKSEL	_pwmwaitTime
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 00rr                      1-  772     	MOVAR	_pwmwaitTime
                                    1-  773     	.line	605, "main.c"; 	pwmLmax = pwm2Lmax = 8;
     006B 2108                      1-  774     	MOVIA	0x08
                                    1-  775     	BANKSEL	_pwm2Lmax
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 00rr                      1-  776     	MOVAR	_pwm2Lmax
                                    1-  777     	BANKSEL	_pwmLmax
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 00rr                      1-  778     	MOVAR	_pwmLmax
                                    1-  779     	.line	606, "main.c"; 	break;
     0070 3rrr                      1-  780     	LGOTO	_00321_DS_
     0071                           1-  781     _00315_DS_:
                                    1-  782     	.line	608, "main.c"; 	pwmwaitTime = 12;
     0071 210C                      1-  783     	MOVIA	0x0c
                                    1-  784     	BANKSEL	_pwmwaitTime
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 00rr                      1-  785     	MOVAR	_pwmwaitTime
                                    1-  786     	.line	609, "main.c"; 	pwmLmax = pwm2Lmax = 8;
     0074 2108                      1-  787     	MOVIA	0x08
                                    1-  788     	BANKSEL	_pwm2Lmax
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 00rr                      1-  789     	MOVAR	_pwm2Lmax
                                    1-  790     	BANKSEL	_pwmLmax
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 00rr                      1-  791     	MOVAR	_pwmLmax
                                    1-  792     	.line	611, "main.c"; 	}
     0079 3rrr                      1-  793     	LGOTO	_00321_DS_
                                    1-  794     	.line	618, "main.c"; 	}
                                    1-  795     	RETURN	
     007A 0010                      3-   26 m1      ret
                                    1-  796     ; exit point of _main
                                    1-  798     ;***
                                    1-  799     ;  pBlock Stats: dbName = C
                                    1-  800     ;***
                                    1-  801     ;has an exit
                                    1-  802     ;6 compiler assigned registers:
                                    1-  803     ;   r0x1023
                                    1-  804     ;   STK00
                                    1-  805     ;   r0x1024
                                    1-  806     ;   r0x1025
                                    1-  807     ;   r0x1026
                                    1-  808     ;   r0x1027
                                    1-  809     ;; Starting pCode block
                                    1-  810     .segment "code"; module=main, function=_delay
                                    1-  812     ;local variable name mapping:
     0000                           1-  817     _delay:
                                    1-  818     ; 2 exit points
                                    1-  819     	.line	653, "main.c"; 	void delay(int count)
                                    1-  820     	BANKSEL	r0x1023
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  821     	MOVAR	r0x1023
     0002 01rr                      1-  822     	MOVR	STK00,W
                                    1-  823     	BANKSEL	r0x1024
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  824     	MOVAR	r0x1024
                                    1-  825     	.line	656, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1-  826     	MOVIA	0x01
                                    1-  827     	BANKSEL	r0x1025
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  828     	MOVAR	r0x1025
                                    1-  829     	BANKSEL	r0x1026
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1-  830     	CLRR	r0x1026
     000A                           1-  831     _00371_DS_:
                                    1-  832     	BANKSEL	r0x1023
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1-  833     	MOVR	r0x1023,W
     000C 2580                      1-  834     	ADDIA	0x80
                                    1-  835     	BANKSEL	r0x1027
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1-  836     	MOVAR	r0x1027
                                    1-  837     	BANKSEL	r0x1026
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  838     	MOVR	r0x1026,W
     0011 2580                      1-  839     	ADDIA	0x80
                                    1-  840     	BANKSEL	r0x1027
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1-  841     	SUBAR	r0x1027,W
     0014 0903                      1-  842     	BTRSS	STATUS,2
     0015 3rrr                      1-  843     	LGOTO	_00382_DS_
                                    1-  844     	BANKSEL	r0x1025
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1-  845     	MOVR	r0x1025,W
                                    1-  846     	BANKSEL	r0x1024
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1-  847     	SUBAR	r0x1024,W
     001A                           1-  848     _00382_DS_:
     001A 0803                      1-  849     	BTRSS	STATUS,0
     001B 3rrr                      1-  850     	LGOTO	_00373_DS_
                                    1-  851     	BANKSEL	r0x1025
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 05rr                      1-  852     	INCR	r0x1025,F
     001E 0903                      1-  853     	BTRSS	STATUS,2
     001F 3rrr                      1-  854     	LGOTO	_00001_DS_
                                    1-  855     	BANKSEL	r0x1026
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 05rr                      1-  856     	INCR	r0x1026,F
     0022                           1-  857     _00001_DS_:
     0022 3rrr                      1-  858     	LGOTO	_00371_DS_
     0023                           1-  859     _00373_DS_:
                                    1-  860     	.line	658, "main.c"; 	}
                                    1-  861     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1-  862     ; exit point of _delay
                                    1-  864     ;***
                                    1-  865     ;  pBlock Stats: dbName = C
                                    1-  866     ;***
                                    1-  867     ;has an exit
                                    1-  868     ;; Starting pCode block
                                    1-  869     .segment "code"; module=main, function=_keyRead
     0000                           1-  871     _keyRead:
                                    1-  872     ; 2 exit points
                                    1-  873     	.line	635, "main.c"; 	if (KeyStatus & 0x1)
                                    1-  874     	BANKSEL	_KeyStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 08rr                      1-  875     	BTRSS	_KeyStatus,0
     0002 3rrr                      1-  876     	LGOTO	_00362_DS_
                                    1-  877     	.line	637, "main.c"; 	keyCount++;
                                    1-  878     	BANKSEL	_keyCount
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 05rr                      1-  879     	INCR	_keyCount,F
                                    1-  880     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1-  881     	.line	638, "main.c"; 	if(keyCount >= 10)
     0005 210A                      1-  882     	MOVIA	0x0a
     0006 04rr                      1-  883     	SUBAR	_keyCount,W
     0007 0803                      1-  884     	BTRSS	STATUS,0
     0008 3rrr                      1-  885     	LGOTO	_00363_DS_
                                    1-  886     	.line	639, "main.c"; 	keyCount = 10;
     0009 210A                      1-  887     	MOVIA	0x0a
     000A 00rr                      1-  888     	MOVAR	_keyCount
     000B 3rrr                      1-  889     	LGOTO	_00363_DS_
                                    1-  890     ;;unsigned compare: left < lit (0xA=10), size=1
     000C                           1-  891     _00362_DS_:
                                    1-  892     	.line	643, "main.c"; 	if(keyCount >= 10)
     000C 210A                      1-  893     	MOVIA	0x0a
                                    1-  894     	BANKSEL	_keyCount
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1-  895     	SUBAR	_keyCount,W
     000F 0803                      1-  896     	BTRSS	STATUS,0
     0010 3rrr                      1-  897     	LGOTO	_00360_DS_
                                    1-  898     	.line	645, "main.c"; 	keyCount = 0;
     0011 02rr                      1-  899     	CLRR	_keyCount
                                    1-  900     	.line	646, "main.c"; 	return 1;
     0012 2101                      1-  901     	MOVIA	0x01
     0013 3rrr                      1-  902     	LGOTO	_00364_DS_
     0014                           1-  903     _00360_DS_:
                                    1-  904     	.line	648, "main.c"; 	keyCount = 0;
                                    1-  905     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 02rr                      1-  906     	CLRR	_keyCount
     0016                           1-  907     _00363_DS_:
                                    1-  908     	.line	650, "main.c"; 	return 0;
     0016 2100                      1-  909     	MOVIA	0x00
     0017                           1-  910     _00364_DS_:
                                    1-  911     	.line	651, "main.c"; 	}
                                    1-  912     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1-  913     ; exit point of _keyRead
                                    1-  915     ;***
                                    1-  916     ;  pBlock Stats: dbName = C
                                    1-  917     ;***
                                    1-  918     ;has an exit
                                    1-  919     ;1 compiler assigned register :
                                    1-  920     ;   r0x1028
                                    1-  921     ;; Starting pCode block
                                    1-  922     .segment "code"; module=main, function=_KeyScan
                                    1-  924     ;local variable name mapping:
     0000                           1-  926     _KeyScan:
                                    1-  927     ; 2 exit points
                                    1-  928     	.line	626, "main.c"; 	KeyStatus = ~PORTA;
     0000 07rr                      1-  929     	COMR	_PORTA,W
                                    1-  930     ;;1	MOVAR	r0x1028
                                    1-  931     	.line	629, "main.c"; 	}
                                    1-  932     	RETURN	
     0001 0010                      3-   26 m1      ret
                                    1-  933     ; exit point of _KeyScan
                                    1-  935     ;***
                                    1-  936     ;  pBlock Stats: dbName = C
                                    1-  937     ;***
                                    1-  938     ;has an exit
                                    1-  939     ;; Starting pCode block
                                    1-  940     .segment "code"; module=main, function=_initSys
     0000                           1-  942     _initSys:
                                    1-  943     ; 2 exit points
                                    1-  944     	.line	523, "main.c"; 	IOSTA =  0x01; 					//PA0输入模式，其他输出模式
     0000 2101                      1-  945     	MOVIA	0x01
     0001 000r                      1-  946     	IOST	_IOSTA
                                    1-  947     	.line	524, "main.c"; 	IOSTB = C_PB0_Input | C_PB1_Input;		//PB输出模式
     0002 2103                      1-  948     	MOVIA	0x03
     0003 000r                      1-  949     	IOST	_IOSTB
                                    1-  950     	.line	525, "main.c"; 	PORTB = 0xFF;                           // PB0、PB1 & PB2 are output High
     0004 21FF                      1-  951     	MOVIA	0xff
     0005 00rr                      1-  952     	MOVAR	_PORTB
                                    1-  953     	.line	526, "main.c"; 	PORTA = 0xE7;
     0006 21E7                      1-  954     	MOVIA	0xe7
     0007 00rr                      1-  955     	MOVAR	_PORTA
                                    1-  956     	.line	527, "main.c"; 	ABPLCON = 0x01;
     0008 2101                      1-  957     	MOVIA	0x01
     0009 00rr                      1-  958     	MOVAR	_ABPLCON
                                    1-  959     	.line	528, "main.c"; 	APHCON  = 0x00;
     000A 0200                      1-  960     	CLRA	
     000B 000r                      1-  961     	IOST	_APHCON
                                    1-  962     	.line	529, "main.c"; 	BPHCON  = 0x00;
     000C 02rr                      1-  963     	CLRR	_BPHCON
                                    1-  964     	.line	530, "main.c"; 	DISI();
     000D 0013                      1-  965     	DISI
                                    1-  966     	.line	532, "main.c"; 	PCON1 = C_TMR0_Dis;						// Disable Timer0
     000E 0200                      1-  967     	CLRA	
     000F 000r                      1-  968     	IOST	_PCON1
                                    1-  969     	.line	540, "main.c"; 	TMR1 = 0x17;							// Load 0xFF to TMR1 (Initial Timer1 register)
     0010 2117                      1-  970     	MOVIA	0x17
     0011 00rr                      1-  971     	SFUN	_TMR1
                                    1-  972     	.line	541, "main.c"; 	TMRH = 0x00;
     0012 02rr                      1-  973     	CLRR	_TMRH
                                    1-  974     	.line	542, "main.c"; 	T1CR1 = C_TMR1_Reload | C_TMR1_En;      // Enable Timer1, Initial value reloaded from TMR1, Non-stop mode 
     0013 2103                      1-  975     	MOVIA	0x03
     0014 00rr                      1-  976     	SFUN	_T1CR1
                                    1-  977     	.line	543, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div16;	// Enable Prescaler1, Prescaler1 dividing rate = 1:4, Timer1 clock source is instruction clock
     0015 00rr                      1-  978     	SFUN	_T1CR2
                                    1-  979     	.line	546, "main.c"; 	INTE = C_INT_WDT | C_INT_TMR1;	// Enable Timer0、Timer1、WDT overflow interrupt
     0016 2148                      1-  980     	MOVIA	0x48
     0017 00rr                      1-  981     	MOVAR	_INTE
                                    1-  982     	.line	547, "main.c"; 	INTF = 0;
     0018 02rr                      1-  983     	CLRR	_INTF
                                    1-  984     	.line	549, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0019 21A8                      1-  985     	MOVIA	0xa8
     001A 00rr                      1-  986     	MOVAR	_PCON
                                    1-  987     	.line	552, "main.c"; 	PCON1 = 0x08;
     001B 2108                      1-  988     	MOVIA	0x08
     001C 000r                      1-  989     	IOST	_PCON1
                                    1-  990     	.line	553, "main.c"; 	ENI();									// Enable all unmasked interrupts										// Enable all unmasked interrupts	
     001D 0004                      1-  991     	ENI
                                    1-  992     	.line	555, "main.c"; 	}
                                    1-  993     	RETURN	
     001E 0010                      3-   26 m1      ret
                                    1-  994     ; exit point of _initSys
                                    1-  996     ;***
                                    1-  997     ;  pBlock Stats: dbName = C
                                    1-  998     ;***
                                    1-  999     ;has an exit
                                    1- 1000     ;; Starting pCode block
                                    1- 1001     .segment "code"; module=main, function=_Level3Change
     0000                           1- 1003     _Level3Change:
                                    1- 1004     ; 2 exit points
                                    1- 1005     	.line	424, "main.c"; 	threeStep++;
                                    1- 1006     	BANKSEL	_threeStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1007     	INCR	_threeStep,F
                                    1- 1008     ;;unsigned compare: left < lit (0xC=12), size=1
                                    1- 1009     	.line	425, "main.c"; 	if(threeStep >= 12)
     0002 210C                      1- 1010     	MOVIA	0x0c
     0003 04rr                      1- 1011     	SUBAR	_threeStep,W
     0004 0803                      1- 1012     	BTRSS	STATUS,0
     0005 3rrr                      1- 1013     	LGOTO	_00256_DS_
                                    1- 1014     	.line	427, "main.c"; 	threeStep = 0;
     0006 02rr                      1- 1015     	CLRR	_threeStep
                                    1- 1016     	.line	428, "main.c"; 	threeChangeFlag = ~threeChangeFlag;
                                    1- 1017     	BANKSEL	_threeChangeFlag
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 07rr                      1- 1018     	COMR	_threeChangeFlag,W
     0009 00rr                      1- 1019     	MOVAR	_threeChangeFlag
                                    1- 1020     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1021     ;;unsigned compare: left >= lit (0xC=12), size=1
     000A                           1- 1022     _00256_DS_:
                                    1- 1023     	.line	431, "main.c"; 	switch(threeStep)
     000A 210C                      1- 1024     	MOVIA	0x0c
                                    1- 1025     	BANKSEL	_threeStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1- 1026     	SUBAR	_threeStep,W
     000D 0C03                      1- 1027     	BTRSC	STATUS,0
     000E 3rrr                      1- 1028     	LGOTO	_00269_DS_
     000F 21rr                      1- 1029     	MOVIA	((_00298_DS_ >> 8) & 0xff)
     0010 008A                      1- 1030     	MOVAR	PCHBUF
     0011 01rr                      1- 1031     	MOVR	_threeStep,W
     0012 25rr                      1- 1032     	ADDIA	_00298_DS_
     0013 0C03                      1- 1033     	BTRSC	STATUS,0
     0014 058A                      1- 1034     	INCR	PCHBUF,F
     0015 0082                      1- 1035     	MOVAR	PCL
     0016                           1- 1036     _00298_DS_:
     0016 3rrr                      1- 1037     	LGOTO	_00257_DS_
     0017 3rrr                      1- 1038     	LGOTO	_00258_DS_
     0018 3rrr                      1- 1039     	LGOTO	_00260_DS_
     0019 3rrr                      1- 1040     	LGOTO	_00260_DS_
     001A 3rrr                      1- 1041     	LGOTO	_00262_DS_
     001B 3rrr                      1- 1042     	LGOTO	_00262_DS_
     001C 3rrr                      1- 1043     	LGOTO	_00263_DS_
     001D 3rrr                      1- 1044     	LGOTO	_00264_DS_
     001E 3rrr                      1- 1045     	LGOTO	_00265_DS_
     001F 3rrr                      1- 1046     	LGOTO	_00266_DS_
     0020 3rrr                      1- 1047     	LGOTO	_00267_DS_
     0021 3rrr                      1- 1048     	LGOTO	_00268_DS_
     0022                           1- 1049     _00257_DS_:
                                    1- 1050     	.line	434, "main.c"; 	pwmLmax = 2;
     0022 2102                      1- 1051     	MOVIA	0x02
                                    1- 1052     	BANKSEL	_pwmLmax
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1053     	MOVAR	_pwmLmax
                                    1- 1054     	.line	435, "main.c"; 	pwm2Lmax = 4;
     0025 2104                      1- 1055     	MOVIA	0x04
                                    1- 1056     	BANKSEL	_pwm2Lmax
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1- 1057     	MOVAR	_pwm2Lmax
                                    1- 1058     	.line	436, "main.c"; 	pwmwaitTime = 12;
     0028 210C                      1- 1059     	MOVIA	0x0c
                                    1- 1060     	BANKSEL	_pwmwaitTime
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 00rr                      1- 1061     	MOVAR	_pwmwaitTime
                                    1- 1062     	.line	437, "main.c"; 	break;
     002B 3rrr                      1- 1063     	LGOTO	_00269_DS_
     002C                           1- 1064     _00258_DS_:
                                    1- 1065     	.line	439, "main.c"; 	pwmLmax = 2;
     002C 2102                      1- 1066     	MOVIA	0x02
                                    1- 1067     	BANKSEL	_pwmLmax
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 1068     	MOVAR	_pwmLmax
                                    1- 1069     	.line	440, "main.c"; 	pwm2Lmax = 4;
     002F 2104                      1- 1070     	MOVIA	0x04
                                    1- 1071     	BANKSEL	_pwm2Lmax
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 00rr                      1- 1072     	MOVAR	_pwm2Lmax
                                    1- 1073     	.line	441, "main.c"; 	pwmwaitTime = 10;
     0032 210A                      1- 1074     	MOVIA	0x0a
                                    1- 1075     	BANKSEL	_pwmwaitTime
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1- 1076     	MOVAR	_pwmwaitTime
                                    1- 1077     	.line	442, "main.c"; 	break;
     0035 3rrr                      1- 1078     	LGOTO	_00269_DS_
     0036                           1- 1079     _00260_DS_:
                                    1- 1080     	.line	445, "main.c"; 	pwmLmax = 6;
     0036 2106                      1- 1081     	MOVIA	0x06
                                    1- 1082     	BANKSEL	_pwmLmax
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 1083     	MOVAR	_pwmLmax
                                    1- 1084     	.line	446, "main.c"; 	pwm2Lmax = 8;
     0039 2108                      1- 1085     	MOVIA	0x08
                                    1- 1086     	BANKSEL	_pwm2Lmax
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 00rr                      1- 1087     	MOVAR	_pwm2Lmax
                                    1- 1088     	.line	447, "main.c"; 	pwmwaitTime = 8;
                                    1- 1089     	BANKSEL	_pwmwaitTime
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 00rr                      1- 1090     	MOVAR	_pwmwaitTime
                                    1- 1091     	.line	448, "main.c"; 	break;
     003E 3rrr                      1- 1092     	LGOTO	_00269_DS_
     003F                           1- 1093     _00262_DS_:
                                    1- 1094     	.line	451, "main.c"; 	pwmLmax = 10;
     003F 210A                      1- 1095     	MOVIA	0x0a
                                    1- 1096     	BANKSEL	_pwmLmax
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 00rr                      1- 1097     	MOVAR	_pwmLmax
                                    1- 1098     	.line	452, "main.c"; 	pwm2Lmax = 8;
     0042 2108                      1- 1099     	MOVIA	0x08
                                    1- 1100     	BANKSEL	_pwm2Lmax
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 00rr                      1- 1101     	MOVAR	_pwm2Lmax
                                    1- 1102     	.line	453, "main.c"; 	pwmwaitTime = 8;
                                    1- 1103     	BANKSEL	_pwmwaitTime
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 00rr                      1- 1104     	MOVAR	_pwmwaitTime
                                    1- 1105     	.line	454, "main.c"; 	break;
     0047 3rrr                      1- 1106     	LGOTO	_00269_DS_
     0048                           1- 1107     _00263_DS_:
                                    1- 1108     	.line	457, "main.c"; 	pwmLmax = 14;
     0048 210E                      1- 1109     	MOVIA	0x0e
                                    1- 1110     	BANKSEL	_pwmLmax
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 00rr                      1- 1111     	MOVAR	_pwmLmax
                                    1- 1112     	.line	458, "main.c"; 	pwm2Lmax = 18;
     004B 2112                      1- 1113     	MOVIA	0x12
                                    1- 1114     	BANKSEL	_pwm2Lmax
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 00rr                      1- 1115     	MOVAR	_pwm2Lmax
                                    1- 1116     	.line	459, "main.c"; 	pwmwaitTime = 4;
     004E 2104                      1- 1117     	MOVIA	0x04
                                    1- 1118     	BANKSEL	_pwmwaitTime
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1- 1119     	MOVAR	_pwmwaitTime
                                    1- 1120     	.line	460, "main.c"; 	break;
     0051 3rrr                      1- 1121     	LGOTO	_00269_DS_
     0052                           1- 1122     _00264_DS_:
                                    1- 1123     	.line	462, "main.c"; 	pwmLmax = 14;
     0052 210E                      1- 1124     	MOVIA	0x0e
                                    1- 1125     	BANKSEL	_pwmLmax
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 00rr                      1- 1126     	MOVAR	_pwmLmax
                                    1- 1127     	.line	463, "main.c"; 	pwm2Lmax = 18;
     0055 2112                      1- 1128     	MOVIA	0x12
                                    1- 1129     	BANKSEL	_pwm2Lmax
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 00rr                      1- 1130     	MOVAR	_pwm2Lmax
                                    1- 1131     	.line	464, "main.c"; 	pwmwaitTime = 7;
     0058 2107                      1- 1132     	MOVIA	0x07
                                    1- 1133     	BANKSEL	_pwmwaitTime
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 00rr                      1- 1134     	MOVAR	_pwmwaitTime
                                    1- 1135     	.line	465, "main.c"; 	break;
     005B 3rrr                      1- 1136     	LGOTO	_00269_DS_
     005C                           1- 1137     _00265_DS_:
                                    1- 1138     	.line	467, "main.c"; 	pwmLmax = 15;
     005C 210F                      1- 1139     	MOVIA	0x0f
                                    1- 1140     	BANKSEL	_pwmLmax
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 00rr                      1- 1141     	MOVAR	_pwmLmax
                                    1- 1142     	.line	468, "main.c"; 	pwm2Lmax = 12;
     005F 210C                      1- 1143     	MOVIA	0x0c
                                    1- 1144     	BANKSEL	_pwm2Lmax
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 00rr                      1- 1145     	MOVAR	_pwm2Lmax
                                    1- 1146     	.line	469, "main.c"; 	pwmwaitTime = 10;
     0062 210A                      1- 1147     	MOVIA	0x0a
                                    1- 1148     	BANKSEL	_pwmwaitTime
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 00rr                      1- 1149     	MOVAR	_pwmwaitTime
                                    1- 1150     	.line	470, "main.c"; 	break;
     0065 3rrr                      1- 1151     	LGOTO	_00269_DS_
     0066                           1- 1152     _00266_DS_:
                                    1- 1153     	.line	472, "main.c"; 	pwmLmax = 15;
     0066 210F                      1- 1154     	MOVIA	0x0f
                                    1- 1155     	BANKSEL	_pwmLmax
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1- 1156     	MOVAR	_pwmLmax
                                    1- 1157     	.line	473, "main.c"; 	pwm2Lmax = 12;
     0069 210C                      1- 1158     	MOVIA	0x0c
                                    1- 1159     	BANKSEL	_pwm2Lmax
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 00rr                      1- 1160     	MOVAR	_pwm2Lmax
                                    1- 1161     	.line	474, "main.c"; 	pwmwaitTime = 14;
     006C 210E                      1- 1162     	MOVIA	0x0e
                                    1- 1163     	BANKSEL	_pwmwaitTime
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 00rr                      1- 1164     	MOVAR	_pwmwaitTime
                                    1- 1165     	.line	475, "main.c"; 	break;
     006F 3rrr                      1- 1166     	LGOTO	_00269_DS_
     0070                           1- 1167     _00267_DS_:
                                    1- 1168     	.line	477, "main.c"; 	pwmLmax = 9;
     0070 2109                      1- 1169     	MOVIA	0x09
                                    1- 1170     	BANKSEL	_pwmLmax
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 00rr                      1- 1171     	MOVAR	_pwmLmax
                                    1- 1172     	.line	478, "main.c"; 	pwm2Lmax = 2;
     0073 2102                      1- 1173     	MOVIA	0x02
                                    1- 1174     	BANKSEL	_pwm2Lmax
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 00rr                      1- 1175     	MOVAR	_pwm2Lmax
                                    1- 1176     	.line	479, "main.c"; 	pwmwaitTime = 42;
     0076 212A                      1- 1177     	MOVIA	0x2a
                                    1- 1178     	BANKSEL	_pwmwaitTime
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 00rr                      1- 1179     	MOVAR	_pwmwaitTime
                                    1- 1180     	.line	480, "main.c"; 	break;
     0079 3rrr                      1- 1181     	LGOTO	_00269_DS_
     007A                           1- 1182     _00268_DS_:
                                    1- 1183     	.line	482, "main.c"; 	pwmLmax = 9;
     007A 2109                      1- 1184     	MOVIA	0x09
                                    1- 1185     	BANKSEL	_pwmLmax
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 00rr                      1- 1186     	MOVAR	_pwmLmax
                                    1- 1187     	.line	483, "main.c"; 	pwm2Lmax = 2;
     007D 2102                      1- 1188     	MOVIA	0x02
                                    1- 1189     	BANKSEL	_pwm2Lmax
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 00rr                      1- 1190     	MOVAR	_pwm2Lmax
                                    1- 1191     	.line	484, "main.c"; 	pwmwaitTime = 14;
     0080 210E                      1- 1192     	MOVIA	0x0e
                                    1- 1193     	BANKSEL	_pwmwaitTime
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 00rr                      1- 1194     	MOVAR	_pwmwaitTime
     0083                           1- 1195     _00269_DS_:
                                    1- 1196     	.line	492, "main.c"; 	if(pwmStep)
                                    1- 1197     	BANKSEL	_pwmStep
     0083 rrrr                      3-   71 m1      .banksel ram_address
     0084 01rr                      1- 1198     	MOVR	_pwmStep,W
     0085 0D03                      1- 1199     	BTRSC	STATUS,2
     0086 3rrr                      1- 1200     	LGOTO	_00277_DS_
                                    1- 1201     	.line	494, "main.c"; 	if(threeChangeFlag)
                                    1- 1202     	BANKSEL	_threeChangeFlag
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 01rr                      1- 1203     	MOVR	_threeChangeFlag,W
     0089 0D03                      1- 1204     	BTRSC	STATUS,2
     008A 3rrr                      1- 1205     	LGOTO	_00271_DS_
                                    1- 1206     	.line	496, "main.c"; 	pwm1L = pwm2Lmax;
                                    1- 1207     	BANKSEL	_pwm2Lmax
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 01rr                      1- 1208     	MOVR	_pwm2Lmax,W
                                    1- 1209     	BANKSEL	_pwm1L
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 00rr                      1- 1210     	MOVAR	_pwm1L
     008F 3rrr                      1- 1211     	LGOTO	_00272_DS_
     0090                           1- 1212     _00271_DS_:
                                    1- 1213     	.line	500, "main.c"; 	pwm1L = pwmLmax;
                                    1- 1214     	BANKSEL	_pwmLmax
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 01rr                      1- 1215     	MOVR	_pwmLmax,W
                                    1- 1216     	BANKSEL	_pwm1L
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 00rr                      1- 1217     	MOVAR	_pwm1L
     0094                           1- 1218     _00272_DS_:
                                    1- 1219     	.line	502, "main.c"; 	pwmStep = 0;
                                    1- 1220     	BANKSEL	_pwmStep
     0094 rrrr                      3-   71 m1      .banksel ram_address
     0095 02rr                      1- 1221     	CLRR	_pwmStep
     0096 3rrr                      1- 1222     	LGOTO	_00279_DS_
     0097                           1- 1223     _00277_DS_:
                                    1- 1224     	.line	506, "main.c"; 	if(threeChangeFlag)
                                    1- 1225     	BANKSEL	_threeChangeFlag
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 01rr                      1- 1226     	MOVR	_threeChangeFlag,W
     0099 0D03                      1- 1227     	BTRSC	STATUS,2
     009A 3rrr                      1- 1228     	LGOTO	_00274_DS_
                                    1- 1229     	.line	508, "main.c"; 	pwm2L = pwm2Lmax;
                                    1- 1230     	BANKSEL	_pwm2Lmax
     009B rrrr                      3-   71 m1      .banksel ram_address
     009C 01rr                      1- 1231     	MOVR	_pwm2Lmax,W
                                    1- 1232     	BANKSEL	_pwm2L
     009D rrrr                      3-   71 m1      .banksel ram_address
     009E 00rr                      1- 1233     	MOVAR	_pwm2L
     009F 3rrr                      1- 1234     	LGOTO	_00275_DS_
     00A0                           1- 1235     _00274_DS_:
                                    1- 1236     	.line	512, "main.c"; 	pwm2L = pwmLmax;
                                    1- 1237     	BANKSEL	_pwmLmax
     00A0 rrrr                      3-   71 m1      .banksel ram_address
     00A1 01rr                      1- 1238     	MOVR	_pwmLmax,W
                                    1- 1239     	BANKSEL	_pwm2L
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 00rr                      1- 1240     	MOVAR	_pwm2L
     00A4                           1- 1241     _00275_DS_:
                                    1- 1242     	.line	514, "main.c"; 	pwmStep = 1;
     00A4 2101                      1- 1243     	MOVIA	0x01
                                    1- 1244     	BANKSEL	_pwmStep
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 00rr                      1- 1245     	MOVAR	_pwmStep
     00A7                           1- 1246     _00279_DS_:
                                    1- 1247     	.line	517, "main.c"; 	}
                                    1- 1248     	RETURN	
     00A7 0010                      3-   26 m1      ret
                                    1- 1249     ; exit point of _Level3Change
                                    1- 1251     ;***
                                    1- 1252     ;  pBlock Stats: dbName = C
                                    1- 1253     ;***
                                    1- 1254     ;has an exit
                                    1- 1255     ;functions called:
                                    1- 1256     ;   _Level3Change
                                    1- 1257     ;   _Level3Change
                                    1- 1258     ;; Starting pCode block
                                    1- 1259     .segment "code"; module=main, function=_pwmWork
     0000                           1- 1261     _pwmWork:
                                    1- 1262     ; 2 exit points
                                    1- 1263     	.line	369, "main.c"; 	if(pwm1L)
                                    1- 1264     	BANKSEL	_pwm1L
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1265     	MOVR	_pwm1L,W
     0002 0D03                      1- 1266     	BTRSC	STATUS,2
     0003 3rrr                      1- 1267     	LGOTO	_00248_DS_
                                    1- 1268     	.line	371, "main.c"; 	pwm1L--;
     0004 06rr                      1- 1269     	DECR	_pwm1L,F
                                    1- 1270     	.line	372, "main.c"; 	PORTA &= 0xF7;
     0005 1Drr                      1- 1271     	BCR	_PORTA,3
                                    1- 1272     	.line	373, "main.c"; 	PORTA |= 0x10;
     0006 1Arr                      1- 1273     	BSR	_PORTA,4
                                    1- 1274     	.line	374, "main.c"; 	pwmwait = 0;
                                    1- 1275     	BANKSEL	_pwmwait
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 1276     	CLRR	_pwmwait
                                    1- 1277     	.line	375, "main.c"; 	pwm2L = 0;
                                    1- 1278     	BANKSEL	_pwm2L
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 1279     	CLRR	_pwm2L
     000B 3rrr                      1- 1280     	LGOTO	_00250_DS_
     000C                           1- 1281     _00248_DS_:
                                    1- 1282     	.line	377, "main.c"; 	else if(pwm2L)
                                    1- 1283     	BANKSEL	_pwm2L
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 1284     	MOVR	_pwm2L,W
     000E 0D03                      1- 1285     	BTRSC	STATUS,2
     000F 3rrr                      1- 1286     	LGOTO	_00245_DS_
                                    1- 1287     	.line	380, "main.c"; 	pwm2L--;
     0010 06rr                      1- 1288     	DECR	_pwm2L,F
                                    1- 1289     	.line	381, "main.c"; 	PORTA &= 0xEF;
     0011 1Err                      1- 1290     	BCR	_PORTA,4
                                    1- 1291     	.line	382, "main.c"; 	PORTA |= 0x08;
     0012 19rr                      1- 1292     	BSR	_PORTA,3
                                    1- 1293     	.line	383, "main.c"; 	pwmwait = 0;
                                    1- 1294     	BANKSEL	_pwmwait
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1- 1295     	CLRR	_pwmwait
                                    1- 1296     	.line	384, "main.c"; 	pwm1L = 0;
                                    1- 1297     	BANKSEL	_pwm1L
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 1298     	CLRR	_pwm1L
     0017 3rrr                      1- 1299     	LGOTO	_00250_DS_
     0018                           1- 1300     _00245_DS_:
                                    1- 1301     	.line	388, "main.c"; 	PORTA &= 0xE7;
     0018 21E7                      1- 1302     	MOVIA	0xe7
     0019 10rr                      1- 1303     	ANDAR	_PORTA,F
                                    1- 1304     	.line	389, "main.c"; 	pwmwait++;
                                    1- 1305     	BANKSEL	_pwmwait
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 05rr                      1- 1306     	INCR	_pwmwait,F
                                    1- 1307     	.line	390, "main.c"; 	if(pwmwait == pwmwaitTime)
                                    1- 1308     	BANKSEL	_pwmwaitTime
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 1309     	MOVR	_pwmwaitTime,W
                                    1- 1310     	BANKSEL	_pwmwait
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 12rr                      1- 1311     	XORAR	_pwmwait,W
     0020 0903                      1- 1312     	BTRSS	STATUS,2
     0021 3rrr                      1- 1313     	LGOTO	_00250_DS_
                                    1- 1314     	.line	392, "main.c"; 	if(workStep == 3)
                                    1- 1315     	BANKSEL	_workStep
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1316     	MOVR	_workStep,W
     0024 2403                      1- 1317     	XORIA	0x03
     0025 0903                      1- 1318     	BTRSS	STATUS,2
     0026 3rrr                      1- 1319     	LGOTO	_00240_DS_
                                    1- 1320     	.line	394, "main.c"; 	Level3Change();
     0027 2rrr                      1- 1321     	LCALL	_Level3Change
     0028 3rrr                      1- 1322     	LGOTO	_00250_DS_
     0029                           1- 1323     _00240_DS_:
                                    1- 1324     	.line	399, "main.c"; 	if(pwmStep)
                                    1- 1325     	BANKSEL	_pwmStep
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 1326     	MOVR	_pwmStep,W
     002B 0D03                      1- 1327     	BTRSC	STATUS,2
     002C 3rrr                      1- 1328     	LGOTO	_00237_DS_
                                    1- 1329     	.line	401, "main.c"; 	pwm1L = pwmLmax;
                                    1- 1330     	BANKSEL	_pwmLmax
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1- 1331     	MOVR	_pwmLmax,W
                                    1- 1332     	BANKSEL	_pwm1L
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 00rr                      1- 1333     	MOVAR	_pwm1L
                                    1- 1334     	.line	402, "main.c"; 	pwmStep = 0;
                                    1- 1335     	BANKSEL	_pwmStep
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 02rr                      1- 1336     	CLRR	_pwmStep
     0033 3rrr                      1- 1337     	LGOTO	_00250_DS_
     0034                           1- 1338     _00237_DS_:
                                    1- 1339     	.line	406, "main.c"; 	pwm2L = pwm2Lmax;
                                    1- 1340     	BANKSEL	_pwm2Lmax
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 1341     	MOVR	_pwm2Lmax,W
                                    1- 1342     	BANKSEL	_pwm2L
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 1343     	MOVAR	_pwm2L
                                    1- 1344     	.line	407, "main.c"; 	pwmStep = 1;
     0038 2101                      1- 1345     	MOVIA	0x01
                                    1- 1346     	BANKSEL	_pwmStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 00rr                      1- 1347     	MOVAR	_pwmStep
     003B                           1- 1348     _00250_DS_:
                                    1- 1349     	.line	416, "main.c"; 	}
                                    1- 1350     	RETURN	
     003B 0010                      3-   26 m1      ret
                                    1- 1351     ; exit point of _pwmWork
                                    1- 1353     ;***
                                    1- 1354     ;  pBlock Stats: dbName = C
                                    1- 1355     ;***
                                    1- 1356     ;has an exit
                                    1- 1357     ;; Starting pCode block
                                    1- 1358     .segment "code"; module=main, function=_ledOn
     0000                           1- 1360     _ledOn:
                                    1- 1361     ; 2 exit points
                                    1- 1362     	.line	363, "main.c"; 	PORTB &= 0xF3;
     0000 21F3                      1- 1363     	MOVIA	0xf3
     0001 10rr                      1- 1364     	ANDAR	_PORTB,F
                                    1- 1365     	.line	364, "main.c"; 	PORTA &= 0x5B;
     0002 215B                      1- 1366     	MOVIA	0x5b
     0003 10rr                      1- 1367     	ANDAR	_PORTA,F
                                    1- 1368     	.line	365, "main.c"; 	}
                                    1- 1369     	RETURN	
     0004 0010                      3-   26 m1      ret
                                    1- 1370     ; exit point of _ledOn
                                    1- 1372     ;***
                                    1- 1373     ;  pBlock Stats: dbName = C
                                    1- 1374     ;***
                                    1- 1375     ;has an exit
                                    1- 1376     ;1 compiler assigned register :
                                    1- 1377     ;   r0x102B
                                    1- 1378     ;; Starting pCode block
                                    1- 1379     .segment "code"; module=main, function=_ledOff
     0000                           1- 1381     _ledOff:
                                    1- 1382     ; 2 exit points
                                    1- 1383     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1- 1384     	.line	330, "main.c"; 	switch(workStep)
     0000 2101                      1- 1385     	MOVIA	0x01
                                    1- 1386     	BANKSEL	_workStep
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1387     	SUBAR	_workStep,W
     0003 0803                      1- 1388     	BTRSS	STATUS,0
     0004 3rrr                      1- 1389     	LGOTO	_00217_DS_
                                    1- 1390     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1391     ;;unsigned compare: left >= lit (0x6=6), size=1
     0005 2106                      1- 1392     	MOVIA	0x06
     0006 04rr                      1- 1393     	SUBAR	_workStep,W
     0007 0C03                      1- 1394     	BTRSC	STATUS,0
     0008 3rrr                      1- 1395     	LGOTO	_00217_DS_
     0009 06rr                      1- 1396     	DECR	_workStep,W
                                    1- 1397     	BANKSEL	r0x102B
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1398     	MOVAR	r0x102B
     000C 21rr                      1- 1399     	MOVIA	((_00227_DS_ >> 8) & 0xff)
     000D 008A                      1- 1400     	MOVAR	PCHBUF
     000E 01rr                      1- 1401     	MOVR	r0x102B,W
     000F 25rr                      1- 1402     	ADDIA	_00227_DS_
     0010 0C03                      1- 1403     	BTRSC	STATUS,0
     0011 058A                      1- 1404     	INCR	PCHBUF,F
     0012 0082                      1- 1405     	MOVAR	PCL
     0013                           1- 1406     _00227_DS_:
     0013 3rrr                      1- 1407     	LGOTO	_00211_DS_
     0014 3rrr                      1- 1408     	LGOTO	_00212_DS_
     0015 3rrr                      1- 1409     	LGOTO	_00213_DS_
     0016 3rrr                      1- 1410     	LGOTO	_00214_DS_
     0017 3rrr                      1- 1411     	LGOTO	_00215_DS_
     0018                           1- 1412     _00211_DS_:
                                    1- 1413     	.line	333, "main.c"; 	PORTB &= 0xFB;
     0018 1Drr                      1- 1414     	BCR	_PORTB,2
                                    1- 1415     	.line	334, "main.c"; 	PORTB |= 0x08;
     0019 19rr                      1- 1416     	BSR	_PORTB,3
                                    1- 1417     	.line	335, "main.c"; 	PORTA |= 0xA4;
     001A 21A4                      1- 1418     	MOVIA	0xa4
     001B 11rr                      1- 1419     	IORAR	_PORTA,F
                                    1- 1420     	.line	336, "main.c"; 	break;
     001C 3rrr                      1- 1421     	LGOTO	_00217_DS_
     001D                           1- 1422     _00212_DS_:
                                    1- 1423     	.line	338, "main.c"; 	PORTB &= 0xF7;
     001D 1Drr                      1- 1424     	BCR	_PORTB,3
                                    1- 1425     	.line	339, "main.c"; 	PORTB |= 0x04;
     001E 19rr                      1- 1426     	BSR	_PORTB,2
                                    1- 1427     	.line	340, "main.c"; 	PORTA |= 0xA4;
     001F 21A4                      1- 1428     	MOVIA	0xa4
     0020 11rr                      1- 1429     	IORAR	_PORTA,F
                                    1- 1430     	.line	341, "main.c"; 	break;
     0021 3rrr                      1- 1431     	LGOTO	_00217_DS_
     0022                           1- 1432     _00213_DS_:
                                    1- 1433     	.line	343, "main.c"; 	PORTB |= 0x0C;
     0022 210C                      1- 1434     	MOVIA	0x0c
     0023 11rr                      1- 1435     	IORAR	_PORTB,F
                                    1- 1436     	.line	344, "main.c"; 	PORTA &= 0xFB;
     0024 1Drr                      1- 1437     	BCR	_PORTA,2
                                    1- 1438     	.line	345, "main.c"; 	PORTA |= 0xA0;
     0025 21A0                      1- 1439     	MOVIA	0xa0
     0026 11rr                      1- 1440     	IORAR	_PORTA,F
                                    1- 1441     	.line	346, "main.c"; 	break;
     0027 3rrr                      1- 1442     	LGOTO	_00217_DS_
     0028                           1- 1443     _00214_DS_:
                                    1- 1444     	.line	348, "main.c"; 	PORTB |= 0x0C;
     0028 210C                      1- 1445     	MOVIA	0x0c
     0029 11rr                      1- 1446     	IORAR	_PORTB,F
                                    1- 1447     	.line	349, "main.c"; 	PORTA &= 0xDF;
     002A 1Err                      1- 1448     	BCR	_PORTA,5
                                    1- 1449     	.line	350, "main.c"; 	PORTA |= 0x84;
     002B 2184                      1- 1450     	MOVIA	0x84
     002C 11rr                      1- 1451     	IORAR	_PORTA,F
                                    1- 1452     	.line	351, "main.c"; 	break;
     002D 3rrr                      1- 1453     	LGOTO	_00217_DS_
     002E                           1- 1454     _00215_DS_:
                                    1- 1455     	.line	353, "main.c"; 	PORTB |= 0x0C;
     002E 210C                      1- 1456     	MOVIA	0x0c
     002F 11rr                      1- 1457     	IORAR	_PORTB,F
                                    1- 1458     	.line	354, "main.c"; 	PORTA &= 0x7F;
     0030 1Frr                      1- 1459     	BCR	_PORTA,7
                                    1- 1460     	.line	355, "main.c"; 	PORTA |= 0x24;
     0031 2124                      1- 1461     	MOVIA	0x24
     0032 11rr                      1- 1462     	IORAR	_PORTA,F
     0033                           1- 1463     _00217_DS_:
                                    1- 1464     	.line	359, "main.c"; 	}
                                    1- 1465     	RETURN	
     0033 0010                      3-   26 m1      ret
                                    1- 1466     ; exit point of _ledOff
                                    1- 1468     ;***
                                    1- 1469     ;  pBlock Stats: dbName = C
                                    1- 1470     ;***
                                    1- 1471     ;has an exit
                                    1- 1472     ;functions called:
                                    1- 1473     ;   _ledOff
                                    1- 1474     ;   _ledOn
                                    1- 1475     ;   _ledOff
                                    1- 1476     ;   _ledOff
                                    1- 1477     ;   _ledOff
                                    1- 1478     ;   _ledOn
                                    1- 1479     ;   _ledOff
                                    1- 1480     ;   _ledOff
                                    1- 1481     ;; Starting pCode block
                                    1- 1482     .segment "code"; module=main, function=_ledWord
     0000                           1- 1484     _ledWord:
                                    1- 1485     ; 2 exit points
                                    1- 1486     	.line	280, "main.c"; 	if(ledTime)
                                    1- 1487     	BANKSEL	_ledTime
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1488     	MOVR	_ledTime,W
     0002 0D03                      1- 1489     	BTRSC	STATUS,2
     0003 3rrr                      1- 1490     	LGOTO	_00204_DS_
                                    1- 1491     	.line	283, "main.c"; 	if(ledOffTime)
                                    1- 1492     	BANKSEL	_ledOffTime
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1493     	MOVR	_ledOffTime,W
     0006 11rr                      1- 1494     	IORAR	(_ledOffTime + 1),W
     0007 0D03                      1- 1495     	BTRSC	STATUS,2
     0008 3rrr                      1- 1496     	LGOTO	_00201_DS_
                                    1- 1497     	.line	286, "main.c"; 	ledOff();
     0009 2rrr                      1- 1498     	LCALL	_ledOff
                                    1- 1499     	.line	287, "main.c"; 	ledOffTime--;	//停止闪烁
     000A 21FF                      1- 1500     	MOVIA	0xff
                                    1- 1501     	BANKSEL	_ledOffTime
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 03rr                      1- 1502     	ADDAR	_ledOffTime,F
     000D 0803                      1- 1503     	BTRSS	STATUS,0
     000E 06rr                      1- 1504     	DECR	(_ledOffTime + 1),F
     000F 3rrr                      1- 1505     	LGOTO	_00206_DS_
     0010                           1- 1506     _00201_DS_:
                                    1- 1507     	.line	292, "main.c"; 	if(ledL)
                                    1- 1508     	BANKSEL	_ledL
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1509     	MOVR	_ledL,W
     0012 0D03                      1- 1510     	BTRSC	STATUS,2
     0013 3rrr                      1- 1511     	LGOTO	_00198_DS_
                                    1- 1512     	.line	294, "main.c"; 	ledL--;
     0014 06rr                      1- 1513     	DECR	_ledL,F
                                    1- 1514     	.line	295, "main.c"; 	ledOn();
     0015 2rrr                      1- 1515     	LCALL	_ledOn
                                    1- 1516     	.line	296, "main.c"; 	ledH = ledHmax;
     0016 215A                      1- 1517     	MOVIA	0x5a
                                    1- 1518     	BANKSEL	_ledH
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1519     	MOVAR	_ledH
     0019 3rrr                      1- 1520     	LGOTO	_00206_DS_
     001A                           1- 1521     _00198_DS_:
                                    1- 1522     	.line	300, "main.c"; 	ledH--;
                                    1- 1523     	BANKSEL	_ledH
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 06rr                      1- 1524     	DECR	_ledH,F
                                    1- 1525     	.line	301, "main.c"; 	ledOff();
     001C 2rrr                      1- 1526     	LCALL	_ledOff
                                    1- 1527     	.line	302, "main.c"; 	if(ledH == 0)
                                    1- 1528     	BANKSEL	_ledH
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1529     	MOVR	_ledH,W
     001F 0903                      1- 1530     	BTRSS	STATUS,2
     0020 3rrr                      1- 1531     	LGOTO	_00206_DS_
                                    1- 1532     	.line	304, "main.c"; 	ledL = ledLmax;
     0021 210A                      1- 1533     	MOVIA	0x0a
                                    1- 1534     	BANKSEL	_ledL
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 00rr                      1- 1535     	MOVAR	_ledL
                                    1- 1536     	.line	305, "main.c"; 	ledpwmTime--;
                                    1- 1537     	BANKSEL	_ledpwmTime
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 17rr                      1- 1538     	DECRSZ	_ledpwmTime,F
                                    1- 1539     	.line	306, "main.c"; 	if(ledpwmTime == 0)
     0026 3rrr                      1- 1540     	LGOTO	_00206_DS_
                                    1- 1541     	.line	309, "main.c"; 	ledpwmTime = ledpwmTimemax;
     0027 2132                      1- 1542     	MOVIA	0x32
     0028 00rr                      1- 1543     	MOVAR	_ledpwmTime
                                    1- 1544     	.line	311, "main.c"; 	ledTime--;
                                    1- 1545     	BANKSEL	_ledTime
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 06rr                      1- 1546     	DECR	_ledTime,F
                                    1- 1547     	.line	312, "main.c"; 	ledOffTime = ledOffTimemax;
     002B 2188                      1- 1548     	MOVIA	0x88
                                    1- 1549     	BANKSEL	_ledOffTime
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 1550     	MOVAR	_ledOffTime
     002E 2113                      1- 1551     	MOVIA	0x13
     002F 00rr                      1- 1552     	MOVAR	(_ledOffTime + 1)
     0030 3rrr                      1- 1553     	LGOTO	_00206_DS_
     0031                           1- 1554     _00204_DS_:
                                    1- 1555     	.line	321, "main.c"; 	ledOff();
     0031 2rrr                      1- 1556     	LCALL	_ledOff
     0032                           1- 1557     _00206_DS_:
                                    1- 1558     	.line	323, "main.c"; 	}
                                    1- 1559     	RETURN	
     0032 0010                      3-   26 m1      ret
                                    1- 1560     ; exit point of _ledWord
                                    1- 1562     ;***
                                    1- 1563     ;  pBlock Stats: dbName = C
                                    1- 1564     ;***
                                    1- 1565     ;has an exit
                                    1- 1566     ;functions called:
                                    1- 1567     ;   _initSys
                                    1- 1568     ;   _initSys
                                    1- 1569     ;; Starting pCode block
                                    1- 1570     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1572     _gotoSleep:
                                    1- 1573     ; 2 exit points
                                    1- 1574     	.line	257, "main.c"; 	PORTA = 0xE7;
     0000 21E7                      1- 1575     	MOVIA	0xe7
     0001 00rr                      1- 1576     	MOVAR	_PORTA
                                    1- 1577     	.line	258, "main.c"; 	PORTB = 0xFF;
     0002 21FF                      1- 1578     	MOVIA	0xff
     0003 00rr                      1- 1579     	MOVAR	_PORTB
                                    1- 1580     	.line	259, "main.c"; 	AWUCON = 0x01;
     0004 2101                      1- 1581     	MOVIA	0x01
     0005 00rr                      1- 1582     	MOVAR	_AWUCON
                                    1- 1583     	.line	260, "main.c"; 	BWUCON = 0x03;
     0006 2103                      1- 1584     	MOVIA	0x03
     0007 00rr                      1- 1585     	MOVAR	_BWUCON
                                    1- 1586     	.line	261, "main.c"; 	PACON = 0x00;
     0008 02rr                      1- 1587     	CLRR	_PACON
                                    1- 1588     	.line	262, "main.c"; 	INTE =  C_INT_TMR1 | C_INT_PABKey;
     0009 210A                      1- 1589     	MOVIA	0x0a
     000A 00rr                      1- 1590     	MOVAR	_INTE
                                    1- 1591     	.line	263, "main.c"; 	PCON =  C_LVR_En;	
     000B 2108                      1- 1592     	MOVIA	0x08
     000C 00rr                      1- 1593     	MOVAR	_PCON
                                    1- 1594     	.line	264, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000D 02rr                      1- 1595     	CLRR	_INTF
                                    1- 1596     	.line	265, "main.c"; 	CLRWDT();							// Clear WatchDog
     000E 0002                      1- 1597     	clrwdt
                                    1- 1598     	.line	267, "main.c"; 	UPDATE_REG(PORTA);					// Read PORTB Data buffer
     000F 01rr                      1- 1599     	MOVR	_PORTA,F
                                    1- 1600     	.line	269, "main.c"; 	sleepFlag = 1;
     0010 2101                      1- 1601     	MOVIA	0x01
                                    1- 1602     	BANKSEL	_sleepFlag
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 1603     	MOVAR	_sleepFlag
                                    1- 1604     	.line	270, "main.c"; 	SLEEP();
     0013 0001                      1- 1605     	sleep
                                    1- 1606     	.line	271, "main.c"; 	initSys();
     0014 2rrr                      1- 1607     	LCALL	_initSys
                                    1- 1608     	.line	274, "main.c"; 	AWUCON = 0x00;
     0015 02rr                      1- 1609     	CLRR	_AWUCON
                                    1- 1610     	.line	275, "main.c"; 	}
                                    1- 1611     	RETURN	
     0016 0010                      3-   26 m1      ret
                                    1- 1612     ; exit point of _gotoSleep
                                    1- 1614     ;***
                                    1- 1615     ;  pBlock Stats: dbName = C
                                    1- 1616     ;***
                                    1- 1617     ;has an exit
                                    1- 1618     ;functions called:
                                    1- 1619     ;   _gotoSleep
                                    1- 1620     ;   _gotoSleep
                                    1- 1621     ;   _gotoSleep
                                    1- 1622     ;   _gotoSleep
                                    1- 1623     ;; Starting pCode block
                                    1- 1624     .segment "code"; module=main, function=_nextorSleep
     0000                           1- 1626     _nextorSleep:
                                    1- 1627     ; 2 exit points
                                    1- 1628     	.line	217, "main.c"; 	workStep = 0;
                                    1- 1629     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1630     	CLRR	_workStep
                                    1- 1631     	.line	218, "main.c"; 	PORTA = 0xFF;
     0002 21FF                      1- 1632     	MOVIA	0xff
     0003 00rr                      1- 1633     	MOVAR	_PORTA
                                    1- 1634     	.line	219, "main.c"; 	PORTB = 0xFF;
     0004 00rr                      1- 1635     	MOVAR	_PORTB
                                    1- 1636     	.line	220, "main.c"; 	if(sleepFlag || ledTime)
                                    1- 1637     	BANKSEL	_sleepFlag
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1638     	MOVR	_sleepFlag,W
     0007 0903                      1- 1639     	BTRSS	STATUS,2
     0008 3rrr                      1- 1640     	LGOTO	_00180_DS_
                                    1- 1641     	BANKSEL	_ledTime
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1- 1642     	MOVR	_ledTime,W
     000B 0D03                      1- 1643     	BTRSC	STATUS,2
     000C 3rrr                      1- 1644     	LGOTO	_00181_DS_
     000D                           1- 1645     _00180_DS_:
                                    1- 1646     	.line	222, "main.c"; 	workStep = saveWorkStep;
                                    1- 1647     	BANKSEL	_saveWorkStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 1648     	MOVR	_saveWorkStep,W
                                    1- 1649     	BANKSEL	_workStep
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 1650     	MOVAR	_workStep
                                    1- 1651     	.line	223, "main.c"; 	if(!sleepFlag)
                                    1- 1652     	BANKSEL	_sleepFlag
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 1653     	MOVR	_sleepFlag,W
     0013 0903                      1- 1654     	BTRSS	STATUS,2
     0014 3rrr                      1- 1655     	LGOTO	_00175_DS_
                                    1- 1656     	.line	225, "main.c"; 	workStep++;
                                    1- 1657     	BANKSEL	_workStep
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1- 1658     	INCR	_workStep,F
     0017 3rrr                      1- 1659     	LGOTO	_00176_DS_
     0018                           1- 1660     _00175_DS_:
                                    1- 1661     	.line	227, "main.c"; 	else if(!workStep)
                                    1- 1662     	BANKSEL	_workStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1663     	MOVR	_workStep,W
     001A 0D03                      1- 1664     	BTRSC	STATUS,2
                                    1- 1665     	.line	230, "main.c"; 	workStep++;
     001B 05rr                      1- 1666     	INCR	_workStep,F
     001C                           1- 1667     _00176_DS_:
                                    1- 1668     	.line	232, "main.c"; 	sleepFlag = 0;
                                    1- 1669     	BANKSEL	_sleepFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1- 1670     	CLRR	_sleepFlag
                                    1- 1671     	.line	233, "main.c"; 	saveWorkStep = workStep;
                                    1- 1672     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1673     	MOVR	_workStep,W
                                    1- 1674     	BANKSEL	_saveWorkStep
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1675     	MOVAR	_saveWorkStep
                                    1- 1676     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1677     	.line	234, "main.c"; 	if(workStep >= 6)
     0022 2106                      1- 1678     	MOVIA	0x06
                                    1- 1679     	BANKSEL	_workStep
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 04rr                      1- 1680     	SUBAR	_workStep,W
     0025 0803                      1- 1681     	BTRSS	STATUS,0
     0026 3rrr                      1- 1682     	LGOTO	_00178_DS_
                                    1- 1683     	.line	236, "main.c"; 	workStep = 0;
     0027 02rr                      1- 1684     	CLRR	_workStep
                                    1- 1685     	.line	237, "main.c"; 	ledTime = 0;
                                    1- 1686     	BANKSEL	_ledTime
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 1687     	CLRR	_ledTime
                                    1- 1688     	.line	238, "main.c"; 	saveWorkStep = 0;
                                    1- 1689     	BANKSEL	_saveWorkStep
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 02rr                      1- 1690     	CLRR	_saveWorkStep
                                    1- 1691     	.line	239, "main.c"; 	gotoSleep();
     002C 2rrr                      1- 1692     	LCALL	_gotoSleep
     002D 3rrr                      1- 1693     	LGOTO	_00184_DS_
     002E                           1- 1694     _00178_DS_:
                                    1- 1695     	.line	243, "main.c"; 	ledTime = ledTimemax;
     002E 2106                      1- 1696     	MOVIA	0x06
                                    1- 1697     	BANKSEL	_ledTime
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 00rr                      1- 1698     	MOVAR	_ledTime
     0031 3rrr                      1- 1699     	LGOTO	_00184_DS_
     0032                           1- 1700     _00181_DS_:
                                    1- 1701     	.line	248, "main.c"; 	gotoSleep();
     0032 2rrr                      1- 1702     	LCALL	_gotoSleep
     0033                           1- 1703     _00184_DS_:
                                    1- 1704     	.line	250, "main.c"; 	}
                                    1- 1705     	RETURN	
     0033 0010                      3-   26 m1      ret
                                    1- 1706     ; exit point of _nextorSleep
                                    1- 1708     ;***
                                    1- 1709     ;  pBlock Stats: dbName = C
                                    1- 1710     ;***
                                    1- 1711     ;has an exit
                                    1- 1712     ;functions called:
                                    1- 1713     ;   _gotoSleep
                                    1- 1714     ;   _gotoSleep
                                    1- 1715     ;; Starting pCode block
                                    1- 1716     .segment "code"; module=main, function=_lvdLed
     0000                           1- 1718     _lvdLed:
                                    1- 1719     ; 2 exit points
                                    1- 1720     	.line	199, "main.c"; 	count250ms++;
                                    1- 1721     	BANKSEL	_count250ms
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1722     	INCR	_count250ms,F
     0002 0D03                      1- 1723     	BTRSC	STATUS,2
     0003 05rr                      1- 1724     	INCR	(_count250ms + 1),F
                                    1- 1725     ;;unsigned compare: left < lit (0x5DC=1500), size=2
                                    1- 1726     	.line	200, "main.c"; 	if(count250ms >= 1500)
     0004 2105                      1- 1727     	MOVIA	0x05
     0005 04rr                      1- 1728     	SUBAR	(_count250ms + 1),W
     0006 0903                      1- 1729     	BTRSS	STATUS,2
     0007 3rrr                      1- 1730     	LGOTO	_00167_DS_
     0008 21DC                      1- 1731     	MOVIA	0xdc
     0009 04rr                      1- 1732     	SUBAR	_count250ms,W
     000A                           1- 1733     _00167_DS_:
     000A 0803                      1- 1734     	BTRSS	STATUS,0
     000B 3rrr                      1- 1735     	LGOTO	_00159_DS_
                                    1- 1736     	.line	202, "main.c"; 	reversebit(PORTA, 6);
     000C 2140                      1- 1737     	MOVIA	0x40
     000D 12rr                      1- 1738     	XORAR	_PORTA,F
                                    1- 1739     	.line	203, "main.c"; 	count250ms = 0;
                                    1- 1740     	BANKSEL	_count250ms
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 1741     	CLRR	_count250ms
     0010 02rr                      1- 1742     	CLRR	(_count250ms + 1)
                                    1- 1743     	.line	204, "main.c"; 	lvdTime++;
                                    1- 1744     	BANKSEL	_lvdTime
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 05rr                      1- 1745     	INCR	_lvdTime,F
                                    1- 1746     ;;unsigned compare: left < lit (0x1E=30), size=1
                                    1- 1747     	.line	205, "main.c"; 	if(lvdTime >= 30)
     0013 211E                      1- 1748     	MOVIA	0x1e
     0014 04rr                      1- 1749     	SUBAR	_lvdTime,W
     0015 0803                      1- 1750     	BTRSS	STATUS,0
     0016 3rrr                      1- 1751     	LGOTO	_00159_DS_
                                    1- 1752     	.line	207, "main.c"; 	lvdTime = 0;
     0017 02rr                      1- 1753     	CLRR	_lvdTime
                                    1- 1754     	.line	208, "main.c"; 	gotoSleep();
     0018 2rrr                      1- 1755     	LCALL	_gotoSleep
     0019                           1- 1756     _00159_DS_:
                                    1- 1757     	.line	211, "main.c"; 	}
                                    1- 1758     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1- 1759     ; exit point of _lvdLed
                                    1- 1761     ;***
                                    1- 1762     ;  pBlock Stats: dbName = C
                                    1- 1763     ;***
                                    1- 1764     ;has an exit
                                    1- 1765     ;; Starting pCode block
                                    1- 1766     .segment "code"; module=main, function=_powerLed
     0000                           1- 1768     _powerLed:
                                    1- 1769     ; 2 exit points
                                    1- 1770     	.line	171, "main.c"; 	if(workStep)
                                    1- 1771     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1772     	MOVR	_workStep,W
     0002 0D03                      1- 1773     	BTRSC	STATUS,2
     0003 3rrr                      1- 1774     	LGOTO	_00133_DS_
                                    1- 1775     	.line	173, "main.c"; 	PORTA = 0xE7;
     0004 21E7                      1- 1776     	MOVIA	0xe7
     0005 00rr                      1- 1777     	MOVAR	_PORTA
                                    1- 1778     	.line	174, "main.c"; 	PORTB = 0xFF;
     0006 21FF                      1- 1779     	MOVIA	0xff
     0007 00rr                      1- 1780     	MOVAR	_PORTB
                                    1- 1781     	.line	175, "main.c"; 	saveWorkStep = workStep;
     0008 01rr                      1- 1782     	MOVR	_workStep,W
                                    1- 1783     	BANKSEL	_saveWorkStep
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1784     	MOVAR	_saveWorkStep
                                    1- 1785     	.line	176, "main.c"; 	workStep = 0;
                                    1- 1786     	BANKSEL	_workStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1- 1787     	CLRR	_workStep
     000D                           1- 1788     _00133_DS_:
                                    1- 1789     	.line	178, "main.c"; 	if(powerFullFlag)
                                    1- 1790     	BANKSEL	_powerFullFlag
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 1791     	MOVR	_powerFullFlag,W
     000F 0D03                      1- 1792     	BTRSC	STATUS,2
     0010 3rrr                      1- 1793     	LGOTO	_00137_DS_
                                    1- 1794     	.line	181, "main.c"; 	PORTA &= 0xBF;
     0011 1Frr                      1- 1795     	BCR	_PORTA,6
     0012 3rrr                      1- 1796     	LGOTO	_00139_DS_
     0013                           1- 1797     _00137_DS_:
                                    1- 1798     	.line	185, "main.c"; 	count500ms++;
                                    1- 1799     	BANKSEL	_count500ms
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 05rr                      1- 1800     	INCR	_count500ms,F
     0015 0D03                      1- 1801     	BTRSC	STATUS,2
     0016 05rr                      1- 1802     	INCR	(_count500ms + 1),F
                                    1- 1803     ;;unsigned compare: left < lit (0x1388=5000), size=2
                                    1- 1804     	.line	186, "main.c"; 	if(count500ms >= 5000)
     0017 2113                      1- 1805     	MOVIA	0x13
     0018 04rr                      1- 1806     	SUBAR	(_count500ms + 1),W
     0019 0903                      1- 1807     	BTRSS	STATUS,2
     001A 3rrr                      1- 1808     	LGOTO	_00150_DS_
     001B 2188                      1- 1809     	MOVIA	0x88
     001C 04rr                      1- 1810     	SUBAR	_count500ms,W
     001D                           1- 1811     _00150_DS_:
     001D 0803                      1- 1812     	BTRSS	STATUS,0
     001E 3rrr                      1- 1813     	LGOTO	_00139_DS_
                                    1- 1814     	.line	188, "main.c"; 	reversebit(PORTA, 6);
     001F 2140                      1- 1815     	MOVIA	0x40
     0020 12rr                      1- 1816     	XORAR	_PORTA,F
                                    1- 1817     	.line	189, "main.c"; 	count500ms = 0;
                                    1- 1818     	BANKSEL	_count500ms
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 02rr                      1- 1819     	CLRR	_count500ms
     0023 02rr                      1- 1820     	CLRR	(_count500ms + 1)
     0024                           1- 1821     _00139_DS_:
                                    1- 1822     	.line	193, "main.c"; 	}
                                    1- 1823     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1- 1824     ; exit point of _powerLed
                                    1- 1827     ;	code size estimation:
                                    1- 1828     ;	  637+  162 =   799 instructions ( 1922 byte)
                                    1- 1830     	end
                                    1- 1830     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    00000022
_00002_DS_              Label    00000019
_00106_DS_              Label    00000027
_00109_DS_              Label    00000033
_00110_DS_              Label    00000035
_00116_DS_              Label    0000002D
_00117_DS_              Label    00000049
_00121_DS_              Label    00000052
_00123_DS_              Label    00000056
_00125_DS_              Label    0000005A
_00127_DS_              Label    00000061
_00133_DS_              Label    0000000D
_00137_DS_              Label    00000013
_00139_DS_              Label    00000024
_00150_DS_              Label    0000001D
_00159_DS_              Label    00000019
_00167_DS_              Label    0000000A
_00175_DS_              Label    00000018
_00176_DS_              Label    0000001C
_00178_DS_              Label    0000002E
_00180_DS_              Label    0000000D
_00181_DS_              Label    00000032
_00184_DS_              Label    00000033
_00198_DS_              Label    0000001A
_00201_DS_              Label    00000010
_00204_DS_              Label    00000031
_00206_DS_              Label    00000032
_00211_DS_              Label    00000018
_00212_DS_              Label    0000001D
_00213_DS_              Label    00000022
_00214_DS_              Label    00000028
_00215_DS_              Label    0000002E
_00217_DS_              Label    00000033
_00227_DS_              Label    00000013
_00237_DS_              Label    00000034
_00240_DS_              Label    00000029
_00245_DS_              Label    00000018
_00248_DS_              Label    0000000C
_00250_DS_              Label    0000003B
_00256_DS_              Label    0000000A
_00257_DS_              Label    00000022
_00258_DS_              Label    0000002C
_00260_DS_              Label    00000036
_00262_DS_              Label    0000003F
_00263_DS_              Label    00000048
_00264_DS_              Label    00000052
_00265_DS_              Label    0000005C
_00266_DS_              Label    00000066
_00267_DS_              Label    00000070
_00268_DS_              Label    0000007A
_00269_DS_              Label    00000083
_00271_DS_              Label    00000090
_00272_DS_              Label    00000094
_00274_DS_              Label    000000A0
_00275_DS_              Label    000000A4
_00277_DS_              Label    00000097
_00279_DS_              Label    000000A7
_00298_DS_              Label    00000016
_00311_DS_              Label    0000004D
_00312_DS_              Label    00000056
_00313_DS_              Label    0000005F
_00314_DS_              Label    00000068
_00315_DS_              Label    00000071
_00321_DS_              Label    00000006
_00348_DS_              Label    00000048
_00360_DS_              Label    00000014
_00362_DS_              Label    0000000C
_00363_DS_              Label    00000016
_00364_DS_              Label    00000017
_00371_DS_              Label    0000000A
_00373_DS_              Label    00000023
_00382_DS_              Label    0000001A
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_CMPCR                  Label    00000000
_count1000ms            Label    00000000
_count250ms             Label    00000000
_count3s                Label    00000000
_count500ms             Label    00000000
_delay                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_INTFLAG                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_KeyScan                Label    00000000
_KeyStatus              Label    00000000
_ledH                   Label    00000000
_ledL                   Label    00000000
_ledOff                 Label    00000000
_ledOffTime             Label    00000000
_ledOn                  Label    00000000
_ledpwmTime             Label    00000000
_ledTime                Label    00000000
_ledWord                Label    00000000
_Level3Change           Label    00000000
_lvdFlag                Label    00000000
_lvdLed                 Label    00000000
_lvdTime                Label    00000000
_main                   Label    00000000
_nextorSleep            Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_powerFlag              Label    00000000
_powerFullFlag          Label    00000000
_powerLed               Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_pwm1L                  Label    00000000
_PWM2DUTY               Label    00000000
_pwm2L                  Label    00000000
_pwm2Lmax               Label    00000000
_PWM3DUTY               Label    00000000
_pwmHmax                Label    00000000
_pwmLmax                Label    00000000
_pwmStep                Label    00000000
_pwmwait                Label    00000000
_pwmwaitTime            Label    00000000
_pwmWork                Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_saveWorkStep           Label    00000000
_sleepFlag              Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_threeChangeFlag        Label    00000000
_threeStep              Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000072
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
