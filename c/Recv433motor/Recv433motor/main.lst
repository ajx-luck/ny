
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_AWUCONbits
                                    1-   23     	extern	_INTEDGbits
                                    1-   24     	extern	_RFCbits
                                    1-   25     	extern	_INTE2bits
                                    1-   26     	extern	_INDF
                                    1-   27     	extern	_TMR0
                                    1-   28     	extern	_PCL
                                    1-   29     	extern	_STATUS
                                    1-   30     	extern	_FSR
                                    1-   31     	extern	_PORTA
                                    1-   32     	extern	_PORTB
                                    1-   33     	extern	_PCON
                                    1-   34     	extern	_BWUCON
                                    1-   35     	extern	_PCHBUF
                                    1-   36     	extern	_ABPLCON
                                    1-   37     	extern	_BPHCON
                                    1-   38     	extern	_INTE
                                    1-   39     	extern	_INTF
                                    1-   40     	extern	_AWUCON
                                    1-   41     	extern	_INTEDG
                                    1-   42     	extern	_TMRH
                                    1-   43     	extern	_RFC
                                    1-   44     	extern	_TM34RH
                                    1-   45     	extern	_INTE2
                                    1-   46     	extern	_TMR1
                                    1-   47     	extern	_T1CR1
                                    1-   48     	extern	_T1CR2
                                    1-   49     	extern	_PWM1DUTY
                                    1-   50     	extern	_PS1CV
                                    1-   51     	extern	_BZ1CR
                                    1-   52     	extern	_IRCR
                                    1-   53     	extern	_TBHP
                                    1-   54     	extern	_TBHD
                                    1-   55     	extern	_P2CR1
                                    1-   56     	extern	_PWM2DUTY
                                    1-   57     	extern	_OSCCR
                                    1-   58     	extern	_TMR3
                                    1-   59     	extern	_T3CR1
                                    1-   60     	extern	_T3CR2
                                    1-   61     	extern	_PWM3DUTY
                                    1-   62     	extern	_PS3CV
                                    1-   63     	extern	_P4CR1
                                    1-   64     	extern	_PWM4DUTY
                                    1-   65     	extern	_P5CR1
                                    1-   66     	extern	_PWM5DUTY
                                    1-   67     	extern	_PWM5RH
                                    1-   68     	extern	_IOSTA
                                    1-   69     	extern	_IOSTB
                                    1-   70     	extern	_APHCON
                                    1-   71     	extern	_PS0CV
                                    1-   72     	extern	_BODCON
                                    1-   73     	extern	_CMPCR
                                    1-   74     	extern	_PCON1
                                    1-   75     	extern	_T0MD
                                    1-   76     	extern	___sdcc_saved_fsr
                                    1-   77     	extern	___sdcc_saved_stk00
                                    1-   78     	extern	___sdcc_saved_stk01
                                    1-   79     	extern	__nyc_ny8_startup
                                    1-   80     ;--------------------------------------------------------
                                    1-   81     ; global declarations
                                    1-   82     ;--------------------------------------------------------
                                    1-   83     	extern	_keyCallBack
                                    1-   84     	extern	_proData
                                    1-   85     	extern	_GetOneByte
                                    1-   86     	extern	_initSys
                                    1-   87     	extern	_proLow
                                    1-   88     	extern	_proHight
                                    1-   89     	extern	_isr
                                    1-   90     	extern	_main
                                    1-   91     	extern	_intCount
                                    1-   92     	extern	_IntFlag
                                    1-   93     	extern	_Status
                                    1-   94     	extern	_proTime
                                    1-   95     	extern	_T1Counter
                                    1-   96     	extern	_tempT1
                                    1-   97     	extern	_bitIndex
                                    1-   98     	extern	_value
                                    1-   99     	extern	_data1
                                    1-  100     	extern	_data2
                                    1-  101     	extern	_data3
                                    1-  102     	extern	_predata1
                                    1-  103     	extern	_predata2
                                    1-  104     	extern	_predata3
                                    1-  106     	extern PSAVE
                                    1-  107     	extern SSAVE
                                    1-  108     	extern WSAVE
                                    1-  109     	extern STK12
                                    1-  110     	extern STK11
                                    1-  111     	extern STK10
                                    1-  112     	extern STK09
                                    1-  113     	extern STK08
                                    1-  114     	extern STK07
                                    1-  115     	extern STK06
                                    1-  116     	extern STK05
                                    1-  117     	extern STK04
                                    1-  118     	extern STK03
                                    1-  119     	extern STK02
                                    1-  120     	extern STK01
                                    1-  121     	extern STK00
                                    1-  123     .segment "uninit", 0x20000040
 20000040                           1-  124     PSAVE:
                                    1-  125     	.res 1
 20000041                           1-  126     SSAVE:
                                    1-  127     	.res 1
 20000042                           1-  128     WSAVE:
                                    1-  129     	.res 1
 20000043                           1-  130     STK12:
                                    1-  131     	.res 1
 20000044                           1-  132     STK11:
                                    1-  133     	.res 1
 20000045                           1-  134     STK10:
                                    1-  135     	.res 1
 20000046                           1-  136     STK09:
                                    1-  137     	.res 1
 20000047                           1-  138     STK08:
                                    1-  139     	.res 1
 20000048                           1-  140     STK07:
                                    1-  141     	.res 1
 20000049                           1-  142     STK06:
                                    1-  143     	.res 1
 2000004A                           1-  144     STK05:
                                    1-  145     	.res 1
 2000004B                           1-  146     STK04:
                                    1-  147     	.res 1
 2000004C                           1-  148     STK03:
                                    1-  149     	.res 1
 2000004D                           1-  150     STK02:
                                    1-  151     	.res 1
 2000004E                           1-  152     STK01:
                                    1-  153     	.res 1
 2000004F                           1-  154     STK00:
                                    1-  155     	.res 1
                                    1-  157     ;--------------------------------------------------------
                                    1-  158     ; global definitions
                                    1-  159     ;--------------------------------------------------------
                                    1-  160     .segment "uninit"
     0000                           1-  161     _T1Counter:
                                    1-  162     	.res	2
                                    1-  165     .segment "uninit"
     0000                           1-  166     _tempT1:
                                    1-  167     	.res	2
                                    1-  170     .segment "uninit"
     0000                           1-  171     _data1:
                                    1-  172     	.res	1
                                    1-  175     .segment "uninit"
     0000                           1-  176     _data2:
                                    1-  177     	.res	1
                                    1-  180     .segment "uninit"
     0000                           1-  181     _data3:
                                    1-  182     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     _predata1:
                                    1-  187     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     _predata2:
                                    1-  192     	.res	1
                                    1-  195     .segment "uninit"
     0000                           1-  196     _predata3:
                                    1-  197     	.res	1
                                    1-  200     ;--------------------------------------------------------
                                    1-  201     ; absolute symbol definitions
                                    1-  202     ;--------------------------------------------------------
                                    1-  203     ;--------------------------------------------------------
                                    1-  204     ; compiler-defined variables
                                    1-  205     ;--------------------------------------------------------
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x1017:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x101A:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1013:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1016:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x1012:
                                    1-  220     	.res	1
                                    1-  221     ;--------------------------------------------------------
                                    1-  222     ; initialized data
                                    1-  223     ;--------------------------------------------------------
                                    1-  225     .segment "idata"
     0000                           1-  226     _intCount:
     0000 0000                      1-  227     	dw	0x00
                                    1-  231     .segment "idata"
     0000                           1-  232     _IntFlag:
     0000 0000                      1-  233     	dw	0x00
                                    1-  237     .segment "idata"
     0000                           1-  238     _Status:
     0000 0000                      1-  239     	dw	0x00
                                    1-  243     .segment "idata"
     0000                           1-  244     _proTime:
     0000 0000                      1-  245     	dw	0x00
                                    1-  249     .segment "idata"
     0000                           1-  250     _bitIndex:
     0000 0000                      1-  251     	dw	0x00
                                    1-  255     .segment "idata"
     0000                           1-  256     _value:
     0000 0000                      1-  257     	dw	0x00
                                    1-  260     ;--------------------------------------------------------
                                    1-  261     ; overlayable items in internal ram 
                                    1-  262     ;--------------------------------------------------------
                                    1-  263     ;	udata_ovr
                                    1-  264     ;--------------------------------------------------------
                                    1-  265     ; reset vector 
                                    1-  266     ;--------------------------------------------------------
                                    1-  267     ORG	0x0000
     0000 3rrr                      1-  268     	LGOTO	__nyc_ny8_startup
                                    1-  269     ;--------------------------------------------------------
                                    1-  270     ; interrupt and initialization code
                                    1-  271     ;--------------------------------------------------------
                                    1-  272     ORG 0x0008
     0008 3rrr                      1-  273     	lgoto	__sdcc_interrupt
                                    1-  275     .segment "code"
     0000                           1-  276     __sdcc_interrupt:
                                    1-  277     ;***
                                    1-  278     ;  pBlock Stats: dbName = I
                                    1-  279     ;***
                                    1-  280     ;2 compiler assigned registers:
                                    1-  281     ;   STK00
                                    1-  282     ;   STK01
                                    1-  283     ;; Starting pCode block
     0000                           1-  284     _isr:
                                    1-  285     ; 0 exit points
                                    1-  286     	.line	65, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  287     	MOVAR	WSAVE
     0001 1503                      1-  288     	SWAPR	STATUS,W
     0002 0283                      1-  289     	CLRR	STATUS
     0003 00rr                      1-  290     	MOVAR	SSAVE
     0004 010A                      1-  291     	MOVR	PCHBUF,W
     0005 028A                      1-  292     	CLRR	PCHBUF
     0006 00rr                      1-  293     	MOVAR	PSAVE
     0007 0104                      1-  294     	MOVR	FSR,W
                                    1-  295     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  296     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  297     	MOVR	STK00,W
                                    1-  298     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  299     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  300     	MOVR	STK01,W
                                    1-  301     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  302     	MOVAR	___sdcc_saved_stk01
                                    1-  303     	.line	67, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  304     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  305     	LGOTO	_00108_DS_
                                    1-  306     	.line	70, "main.c"; 	TMR0 += 65;
     0012 2141                      1-  307     	MOVIA	0x41
     0013 03rr                      1-  308     	ADDAR	_TMR0,F
                                    1-  309     	.line	71, "main.c"; 	intCount++;
                                    1-  310     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  311     	INCR	_intCount,F
                                    1-  312     	.line	72, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  313     	MOVR	_intCount,W
     0017 2464                      1-  314     	XORIA	0x64
     0018 0903                      1-  315     	BTRSS	STATUS,2
     0019 3rrr                      1-  316     	LGOTO	_00108_DS_
                                    1-  317     	.line	74, "main.c"; 	intCount = 0;
     001A 02rr                      1-  318     	CLRR	_intCount
                                    1-  319     	.line	75, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  320     	MOVIA	0x01
                                    1-  321     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  322     	MOVAR	_IntFlag
     001E                           1-  323     _00108_DS_:
                                    1-  324     	.line	78, "main.c"; 	if(INTFbits.T1IF)
     001E 09rr                      1-  325     	BTRSS	_INTFbits,3
     001F 3rrr                      1-  326     	LGOTO	_00110_DS_
                                    1-  327     	.line	80, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR1);	// Clear PABIF(PortB input change interrupt flag bit)	
     0020 21F7                      1-  328     	MOVIA	0xf7
     0021 00rr                      1-  329     	MOVAR	_INTF
     0022                           1-  330     _00110_DS_:
                                    1-  331     	.line	82, "main.c"; 	if(INTFbits.PABIF)
     0022 08rr                      1-  332     	BTRSS	_INTFbits,1
     0023 3rrr                      1-  333     	LGOTO	_00112_DS_
                                    1-  334     	.line	84, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0024 21FD                      1-  335     	MOVIA	0xfd
     0025 00rr                      1-  336     	MOVAR	_INTF
     0026                           1-  337     _00112_DS_:
                                    1-  338     	.line	88, "main.c"; 	INTF = 0;
     0026 02rr                      1-  339     	CLRR	_INTF
                                    1-  340     	.line	90, "main.c"; 	}
                                    1-  341     	BANKSEL	___sdcc_saved_stk01
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  342     	MOVR	___sdcc_saved_stk01,W
     0029 00rr                      1-  343     	MOVAR	STK01
                                    1-  344     	BANKSEL	___sdcc_saved_stk00
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  345     	MOVR	___sdcc_saved_stk00,W
     002C 00rr                      1-  346     	MOVAR	STK00
                                    1-  347     	BANKSEL	___sdcc_saved_fsr
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  348     	MOVR	___sdcc_saved_fsr,W
     002F 0084                      1-  349     	MOVAR	FSR
     0030 01rr                      1-  350     	MOVR	PSAVE,W
     0031 008A                      1-  351     	MOVAR	PCHBUF
     0032 0283                      1-  352     	CLRR	STATUS
     0033 15rr                      1-  353     	SWAPR	SSAVE,W
     0034 0083                      1-  354     	MOVAR	STATUS
     0035 15rr                      1-  355     	SWAPR	WSAVE,F
     0036 15rr                      1-  356     	SWAPR	WSAVE,W
     0037                           1-  357     END_OF_INTERRUPT:
     0037 0011                      1-  358     	RETIE	
                                    1-  360     ;--------------------------------------------------------
                                    1-  361     ; code
                                    1-  362     ;--------------------------------------------------------
                                    1-  363     ;***
                                    1-  364     ;  pBlock Stats: dbName = M
                                    1-  365     ;***
                                    1-  366     ;has an exit
                                    1-  367     ;functions called:
                                    1-  368     ;   _initSys
                                    1-  369     ;   _proData
                                    1-  370     ;   _proLow
                                    1-  371     ;   _proHight
                                    1-  372     ;   _initSys
                                    1-  373     ;   _proData
                                    1-  374     ;   _proLow
                                    1-  375     ;   _proHight
                                    1-  376     ;; Starting pCode block
                                    1-  377     .segment "code"; module=main, function=_main
     0000                           1-  379     _main:
                                    1-  380     ; 2 exit points
                                    1-  381     	.line	94, "main.c"; 	initSys();
     0000 2rrr                      1-  382     	LCALL	_initSys
     0001                           1-  383     _00127_DS_:
                                    1-  384     	.line	97, "main.c"; 	if(ReadOver)
                                    1-  385     	BANKSEL	_Status
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 0Err                      1-  386     	BTRSC	_Status,4
                                    1-  387     	.line	99, "main.c"; 	proData();
     0003 2rrr                      1-  388     	LCALL	_proData
     0004                           1-  389     _00118_DS_:
                                    1-  390     	.line	101, "main.c"; 	if(INT1Level && (PORTA & 0x04))
                                    1-  391     	BANKSEL	_Status
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 0Arr                      1-  392     	BTRSS	_Status,5
     0006 3rrr                      1-  393     	LGOTO	_00123_DS_
     0007 09rr                      1-  394     	BTRSS	_PORTA,2
     0008 3rrr                      1-  395     	LGOTO	_00123_DS_
                                    1-  396     	.line	103, "main.c"; 	INT1Level = 0;
     0009 1Err                      1-  397     	BCR	_Status,5
                                    1-  398     	.line	104, "main.c"; 	proLow();
     000A 2rrr                      1-  399     	LCALL	_proLow
     000B 3rrr                      1-  400     	LGOTO	_00124_DS_
     000C                           1-  401     _00123_DS_:
                                    1-  402     	.line	106, "main.c"; 	else if(INT1Level == 0 && (PORTA & 0x04) == 0)
                                    1-  403     	BANKSEL	_Status
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 0Err                      1-  404     	BTRSC	_Status,5
     000E 3rrr                      1-  405     	LGOTO	_00124_DS_
     000F 0Drr                      1-  406     	BTRSC	_PORTA,2
     0010 3rrr                      1-  407     	LGOTO	_00124_DS_
                                    1-  408     	.line	109, "main.c"; 	INT1Level = 1;
     0011 1Arr                      1-  409     	BSR	_Status,5
                                    1-  410     	.line	110, "main.c"; 	proHight();
     0012 2rrr                      1-  411     	LCALL	_proHight
     0013                           1-  412     _00124_DS_:
                                    1-  413     	.line	112, "main.c"; 	CLRWDT();
     0013 0002                      1-  414     	clrwdt
     0014 3rrr                      1-  415     	LGOTO	_00127_DS_
                                    1-  416     	.line	115, "main.c"; 	}
                                    1-  417     	RETURN	
     0015 0010                      3-   26 m1      ret
                                    1-  418     ; exit point of _main
                                    1-  420     ;***
                                    1-  421     ;  pBlock Stats: dbName = C
                                    1-  422     ;***
                                    1-  423     ;has an exit
                                    1-  424     ;; Starting pCode block
                                    1-  425     .segment "code"; module=main, function=_keyCallBack
     0000                           1-  427     _keyCallBack:
                                    1-  428     ; 2 exit points
                                    1-  429     	.line	321, "main.c"; 	proTime = 0;
                                    1-  430     	BANKSEL	_proTime
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  431     	CLRR	_proTime
                                    1-  432     	.line	322, "main.c"; 	switch(data3)
                                    1-  433     	BANKSEL	_data3
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 01rr                      1-  434     	MOVR	_data3,W
     0004 0D03                      1-  435     	BTRSC	STATUS,2
     0005 3rrr                      1-  436     	LGOTO	_00264_DS_
     0006 01rr                      1-  437     	MOVR	_data3,W
     0007 2401                      1-  438     	XORIA	0x01
     0008 0D03                      1-  439     	BTRSC	STATUS,2
     0009 3rrr                      1-  440     	LGOTO	_00265_DS_
     000A 3rrr                      1-  441     	LGOTO	_00267_DS_
     000B                           1-  442     _00264_DS_:
                                    1-  443     	.line	325, "main.c"; 	PORTB = 0x02;
     000B 2102                      1-  444     	MOVIA	0x02
     000C 00rr                      1-  445     	MOVAR	_PORTB
                                    1-  446     	.line	326, "main.c"; 	break;
     000D 3rrr                      1-  447     	LGOTO	_00267_DS_
     000E                           1-  448     _00265_DS_:
                                    1-  449     	.line	328, "main.c"; 	PORTB = 0x00;
     000E 02rr                      1-  450     	CLRR	_PORTB
     000F                           1-  451     _00267_DS_:
                                    1-  452     	.line	331, "main.c"; 	}
                                    1-  453     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1-  454     ; exit point of _keyCallBack
                                    1-  456     ;***
                                    1-  457     ;  pBlock Stats: dbName = C
                                    1-  458     ;***
                                    1-  459     ;has an exit
                                    1-  460     ;functions called:
                                    1-  461     ;   _keyCallBack
                                    1-  462     ;   _keyCallBack
                                    1-  463     ;; Starting pCode block
                                    1-  464     .segment "code"; module=main, function=_proData
     0000                           1-  466     _proData:
                                    1-  467     ; 2 exit points
                                    1-  468     	.line	311, "main.c"; 	predata1 = data1;
                                    1-  469     	BANKSEL	_data1
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1-  470     	MOVR	_data1,W
                                    1-  471     	BANKSEL	_predata1
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1-  472     	MOVAR	_predata1
                                    1-  473     	.line	312, "main.c"; 	predata2 = data2;
                                    1-  474     	BANKSEL	_data2
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1-  475     	MOVR	_data2,W
                                    1-  476     	BANKSEL	_predata2
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  477     	MOVAR	_predata2
                                    1-  478     	.line	313, "main.c"; 	predata3 = data3;
                                    1-  479     	BANKSEL	_data3
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1-  480     	MOVR	_data3,W
                                    1-  481     	BANKSEL	_predata3
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1-  482     	MOVAR	_predata3
                                    1-  483     	.line	314, "main.c"; 	keyCallBack();
     000C 2rrr                      1-  484     	LCALL	_keyCallBack
                                    1-  485     	.line	315, "main.c"; 	ReadOver = 0;
                                    1-  486     	BANKSEL	_Status
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 1Err                      1-  487     	BCR	_Status,4
                                    1-  488     	.line	316, "main.c"; 	}
                                    1-  489     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1-  490     ; exit point of _proData
                                    1-  492     ;***
                                    1-  493     ;  pBlock Stats: dbName = C
                                    1-  494     ;***
                                    1-  495     ;has an exit
                                    1-  496     ;1 compiler assigned register :
                                    1-  497     ;   r0x1012
                                    1-  498     ;; Starting pCode block
                                    1-  499     .segment "code"; module=main, function=_GetOneByte
                                    1-  501     ;local variable name mapping:
     0000                           1-  503     _GetOneByte:
                                    1-  504     ; 2 exit points
                                    1-  505     	.line	271, "main.c"; 	void GetOneByte(uchar bitNub)
                                    1-  506     	BANKSEL	r0x1012
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  507     	MOVAR	r0x1012
                                    1-  508     	.line	273, "main.c"; 	if(RemoteStart)
                                    1-  509     	BANKSEL	_Status
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 09rr                      1-  510     	BTRSS	_Status,3
     0004 3rrr                      1-  511     	LGOTO	_00255_DS_
                                    1-  512     	.line	275, "main.c"; 	if(bitIndex == 0)
                                    1-  513     	BANKSEL	_bitIndex
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1-  514     	MOVR	_bitIndex,W
     0007 0903                      1-  515     	BTRSS	STATUS,2
     0008 3rrr                      1-  516     	LGOTO	_00242_DS_
                                    1-  517     	.line	277, "main.c"; 	bitIndex = 0;
     0009 02rr                      1-  518     	CLRR	_bitIndex
                                    1-  519     	.line	278, "main.c"; 	value = 0;
                                    1-  520     	BANKSEL	_value
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1-  521     	CLRR	_value
                                    1-  522     	.line	279, "main.c"; 	data1 = data2 = data3 = 0;
                                    1-  523     	BANKSEL	_data3
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1-  524     	CLRR	_data3
                                    1-  525     	BANKSEL	_data2
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1-  526     	CLRR	_data2
                                    1-  527     	BANKSEL	_data1
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1-  528     	CLRR	_data1
     0012                           1-  529     _00242_DS_:
                                    1-  530     	.line	281, "main.c"; 	++bitIndex;
                                    1-  531     	BANKSEL	_bitIndex
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 05rr                      1-  532     	INCR	_bitIndex,F
                                    1-  533     	.line	282, "main.c"; 	if(bitNub)
                                    1-  534     	BANKSEL	r0x1012
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 01rr                      1-  535     	MOVR	r0x1012,W
     0016 0D03                      1-  536     	BTRSC	STATUS,2
     0017 3rrr                      1-  537     	LGOTO	_00001_DS_
                                    1-  538     	.line	284, "main.c"; 	value |= 0x01;
                                    1-  539     	BANKSEL	_value
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 18rr                      1-  540     	BSR	_value,0
     001A                           1-  541     _00001_DS_:
                                    1-  542     	.line	287, "main.c"; 	if(bitIndex == 8)
                                    1-  543     	BANKSEL	_bitIndex
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  544     	MOVR	_bitIndex,W
     001C 2408                      1-  545     	XORIA	0x08
     001D 0903                      1-  546     	BTRSS	STATUS,2
     001E 3rrr                      1-  547     	LGOTO	_00251_DS_
                                    1-  548     	.line	289, "main.c"; 	data1 = value;
                                    1-  549     	BANKSEL	_value
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  550     	MOVR	_value,W
                                    1-  551     	BANKSEL	_data1
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 00rr                      1-  552     	MOVAR	_data1
     0023 3rrr                      1-  553     	LGOTO	_00252_DS_
     0024                           1-  554     _00251_DS_:
                                    1-  555     	.line	291, "main.c"; 	else if(bitIndex == 16)
                                    1-  556     	BANKSEL	_bitIndex
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  557     	MOVR	_bitIndex,W
     0026 2410                      1-  558     	XORIA	0x10
     0027 0903                      1-  559     	BTRSS	STATUS,2
     0028 3rrr                      1-  560     	LGOTO	_00248_DS_
                                    1-  561     	.line	293, "main.c"; 	data2 = value;
                                    1-  562     	BANKSEL	_value
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  563     	MOVR	_value,W
                                    1-  564     	BANKSEL	_data2
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 00rr                      1-  565     	MOVAR	_data2
     002D 3rrr                      1-  566     	LGOTO	_00252_DS_
     002E                           1-  567     _00248_DS_:
                                    1-  568     	.line	296, "main.c"; 	else if(bitIndex == 24)
                                    1-  569     	BANKSEL	_bitIndex
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1-  570     	MOVR	_bitIndex,W
     0030 2418                      1-  571     	XORIA	0x18
     0031 0903                      1-  572     	BTRSS	STATUS,2
     0032 3rrr                      1-  573     	LGOTO	_00252_DS_
                                    1-  574     	.line	298, "main.c"; 	data3 = value;
                                    1-  575     	BANKSEL	_value
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  576     	MOVR	_value,W
                                    1-  577     	BANKSEL	_data3
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 00rr                      1-  578     	MOVAR	_data3
     0037                           1-  579     _00252_DS_:
                                    1-  580     	.line	301, "main.c"; 	value = value << 1;
     0037 1C03                      1-  581     	BCR	STATUS,0
                                    1-  582     	BANKSEL	_value
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 14rr                      1-  583     	RLR	_value,F
     003A                           1-  584     _00255_DS_:
                                    1-  585     	.line	303, "main.c"; 	}
                                    1-  586     	RETURN	
     003A 0010                      3-   26 m1      ret
                                    1-  587     ; exit point of _GetOneByte
                                    1-  589     ;***
                                    1-  590     ;  pBlock Stats: dbName = C
                                    1-  591     ;***
                                    1-  592     ;has an exit
                                    1-  593     ;; Starting pCode block
                                    1-  594     .segment "code"; module=main, function=_initSys
     0000                           1-  596     _initSys:
                                    1-  597     ; 2 exit points
                                    1-  598     	.line	243, "main.c"; 	PORTA = 0x00;
     0000 02rr                      1-  599     	CLRR	_PORTA
                                    1-  600     	.line	244, "main.c"; 	APHCON = 0xDF;		//PA5下拉
     0001 21DF                      1-  601     	MOVIA	0xdf
     0002 000r                      1-  602     	IOST	_APHCON
                                    1-  603     	.line	246, "main.c"; 	IOSTA =  C_PA2_Input;					//PA5输入
     0003 2104                      1-  604     	MOVIA	0x04
     0004 000r                      1-  605     	IOST	_IOSTA
                                    1-  606     	.line	247, "main.c"; 	IOSTB =  C_PB0_Input;					//PB0输入
     0005 2101                      1-  607     	MOVIA	0x01
     0006 000r                      1-  608     	IOST	_IOSTB
                                    1-  609     	.line	248, "main.c"; 	PORTA = 0x00;  
     0007 02rr                      1-  610     	CLRR	_PORTA
                                    1-  611     	.line	249, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     0008 21A8                      1-  612     	MOVIA	0xa8
     0009 00rr                      1-  613     	MOVAR	_PCON
                                    1-  614     	.line	251, "main.c"; 	PCON1 = C_TMR0_Dis;
     000A 0200                      1-  615     	CLRA	
     000B 000r                      1-  616     	IOST	_PCON1
                                    1-  617     	.line	253, "main.c"; 	TMR0 = 55;
     000C 2137                      1-  618     	MOVIA	0x37
     000D 00rr                      1-  619     	MOVAR	_TMR0
                                    1-  620     	.line	254, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     000E 0200                      1-  621     	CLRA	
     000F 0003                      1-  622     	T0MD	
                                    1-  623     	.line	255, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0010 210B                      1-  624     	MOVIA	0x0b
     0011 00rr                      1-  625     	MOVAR	_INTE
                                    1-  626     	.line	256, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0012 2111                      1-  627     	MOVIA	0x11
     0013 000r                      1-  628     	IOST	_PCON1
                                    1-  629     	.line	259, "main.c"; 	TMRH = 0x30;
     0014 2130                      1-  630     	MOVIA	0x30
     0015 00rr                      1-  631     	MOVAR	_TMRH
                                    1-  632     	.line	260, "main.c"; 	TMR1 = 0xFF;
     0016 21FF                      1-  633     	MOVIA	0xff
     0017 00rr                      1-  634     	SFUN	_TMR1
                                    1-  635     	.line	261, "main.c"; 	T1CR2 = C_PS1_Div32 | C_PS1_EN | C_TMR1_ClkSrc_Inst;
     0018 2104                      1-  636     	MOVIA	0x04
     0019 00rr                      1-  637     	SFUN	_T1CR2
                                    1-  638     	.line	262, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     001A 2103                      1-  639     	MOVIA	0x03
     001B 00rr                      1-  640     	SFUN	_T1CR1
                                    1-  641     	.line	265, "main.c"; 	INT1Level = 1;
                                    1-  642     	BANKSEL	_Status
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 1Arr                      1-  643     	BSR	_Status,5
                                    1-  644     	.line	267, "main.c"; 	ENI();
     001E 0004                      1-  645     	ENI
                                    1-  646     	.line	268, "main.c"; 	}
                                    1-  647     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1-  648     ; exit point of _initSys
                                    1-  650     ;***
                                    1-  651     ;  pBlock Stats: dbName = C
                                    1-  652     ;***
                                    1-  653     ;has an exit
                                    1-  654     ;functions called:
                                    1-  655     ;   _GetOneByte
                                    1-  656     ;   _GetOneByte
                                    1-  657     ;   _GetOneByte
                                    1-  658     ;   _GetOneByte
                                    1-  659     ;4 compiler assigned registers:
                                    1-  660     ;   r0x1013
                                    1-  661     ;   r0x1014
                                    1-  662     ;   r0x1015
                                    1-  663     ;   r0x1016
                                    1-  664     ;; Starting pCode block
                                    1-  665     .segment "code"; module=main, function=_proLow
     0000                           1-  667     _proLow:
                                    1-  668     ; 2 exit points
                                    1-  669     	.line	155, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1-  670     	CLRA	
     0001 00rr                      1-  671     	SFUN	_T1CR1
                                    1-  672     	.line	156, "main.c"; 	tempT1 = 0x30&TMRH;
     0002 2130                      1-  673     	MOVIA	0x30
     0003 10rr                      1-  674     	ANDAR	_TMRH,W
                                    1-  675     ;;3	MOVAR	r0x1013
                                    1-  676     	BANKSEL	_tempT1
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  677     	MOVAR	_tempT1
     0006 02rr                      1-  678     	CLRR	(_tempT1 + 1)
                                    1-  679     	.line	157, "main.c"; 	tempT1 <<= 4;
     0007 15rr                      1-  680     	SWAPR	(_tempT1 + 1),W
     0008 22F0                      1-  681     	ANDIA	0xf0
     0009 00rr                      1-  682     	MOVAR	(_tempT1 + 1)
     000A 15rr                      1-  683     	SWAPR	_tempT1,W
     000B 00rr                      1-  684     	MOVAR	_tempT1
     000C 220F                      1-  685     	ANDIA	0x0f
     000D 11rr                      1-  686     	IORAR	(_tempT1 + 1),F
     000E 12rr                      1-  687     	XORAR	_tempT1,F
                                    1-  688     	.line	158, "main.c"; 	tempT1 += TMR1;
     000F 00rr                      1-  689     	SFUNR	_TMR1
                                    1-  690     	BANKSEL	r0x1013
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1-  691     	MOVAR	r0x1013
                                    1-  692     ;;1	MOVAR	r0x1014
                                    1-  693     ;;1	CLRR	r0x1015
                                    1-  694     ;;100	MOVR	r0x1014,W
     0012 2100                      1-  695     	MOVIA	0x00
                                    1-  696     	BANKSEL	r0x1016
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1-  697     	MOVAR	r0x1016
                                    1-  698     	BANKSEL	r0x1013
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  699     	MOVR	r0x1013,W
                                    1-  700     	BANKSEL	_tempT1
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 03rr                      1-  701     	ADDAR	_tempT1,F
                                    1-  702     	BANKSEL	r0x1016
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  703     	MOVR	r0x1016,W
     001B 0C03                      1-  704     	BTRSC	STATUS,0
     001C 05rr                      1-  705     	INCR	r0x1016,W
     001D 0D03                      1-  706     	BTRSC	STATUS,2
     001E 3rrr                      1-  707     	LGOTO	_00002_DS_
                                    1-  708     	BANKSEL	_tempT1
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 03rr                      1-  709     	ADDAR	(_tempT1 + 1),F
     0021                           1-  710     _00002_DS_:
                                    1-  711     	.line	159, "main.c"; 	T1Counter = 0x3FF - tempT1;
                                    1-  712     	BANKSEL	_tempT1
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1-  713     	MOVR	_tempT1,W
     0023 27FF                      1-  714     	SUBIA	0xff
                                    1-  715     	BANKSEL	_T1Counter
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1-  716     	MOVAR	_T1Counter
                                    1-  717     	BANKSEL	_tempT1
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  718     	MOVR	(_tempT1 + 1),W
     0028 0803                      1-  719     	BTRSS	STATUS,0
     0029 05rr                      1-  720     	INCR	(_tempT1 + 1),W
     002A 2703                      1-  721     	SUBIA	0x03
                                    1-  722     	BANKSEL	_T1Counter
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 00rr                      1-  723     	MOVAR	(_T1Counter + 1)
                                    1-  724     	.line	160, "main.c"; 	TMRH = 0x30;
     002D 2130                      1-  725     	MOVIA	0x30
     002E 00rr                      1-  726     	MOVAR	_TMRH
                                    1-  727     	.line	161, "main.c"; 	TMR1 = 0xFF;
     002F 21FF                      1-  728     	MOVIA	0xff
     0030 00rr                      1-  729     	SFUN	_TMR1
                                    1-  730     	.line	162, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     0031 2103                      1-  731     	MOVIA	0x03
     0032 00rr                      1-  732     	SFUN	_T1CR1
                                    1-  733     	.line	163, "main.c"; 	PORTA = 0x01;  
     0033 2101                      1-  734     	MOVIA	0x01
     0034 00rr                      1-  735     	MOVAR	_PORTA
                                    1-  736     	.line	164, "main.c"; 	if(RemoteStart)
                                    1-  737     	BANKSEL	_Status
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 09rr                      1-  738     	BTRSS	_Status,3
     0037 3rrr                      1-  739     	LGOTO	_00189_DS_
                                    1-  740     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  741     ;;unsigned compare: left >= lit (0x9=9), size=2
                                    1-  742     	.line	166, "main.c"; 	if((T1Counter >(OneCode_L - FaultTolerant))&&(T1Counter < (OneCode_L + FaultTolerant)))
     0038 2100                      1-  743     	MOVIA	0x00
                                    1-  744     	BANKSEL	_T1Counter
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1-  745     	SUBAR	(_T1Counter + 1),W
     003B 0903                      1-  746     	BTRSS	STATUS,2
     003C 3rrr                      1-  747     	LGOTO	_00226_DS_
     003D 2109                      1-  748     	MOVIA	0x09
     003E 04rr                      1-  749     	SUBAR	_T1Counter,W
     003F                           1-  750     _00226_DS_:
     003F 0803                      1-  751     	BTRSS	STATUS,0
     0040 3rrr                      1-  752     	LGOTO	_00182_DS_
                                    1-  753     ;;unsigned compare: left < lit (0x12=18), size=2
     0041 2100                      1-  754     	MOVIA	0x00
                                    1-  755     	BANKSEL	_T1Counter
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 04rr                      1-  756     	SUBAR	(_T1Counter + 1),W
     0044 0903                      1-  757     	BTRSS	STATUS,2
     0045 3rrr                      1-  758     	LGOTO	_00227_DS_
     0046 2112                      1-  759     	MOVIA	0x12
     0047 04rr                      1-  760     	SUBAR	_T1Counter,W
     0048                           1-  761     _00227_DS_:
     0048 0C03                      1-  762     	BTRSC	STATUS,0
     0049 3rrr                      1-  763     	LGOTO	_00182_DS_
                                    1-  764     	.line	168, "main.c"; 	if(OneCode)
                                    1-  765     	BANKSEL	_Status
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 08rr                      1-  766     	BTRSS	_Status,1
     004C 3rrr                      1-  767     	LGOTO	_00168_DS_
                                    1-  768     	.line	171, "main.c"; 	GetOneByte(1);
     004D 2101                      1-  769     	MOVIA	0x01
     004E 2rrr                      1-  770     	LCALL	_GetOneByte
     004F 3rrr                      1-  771     	LGOTO	_00191_DS_
     0050                           1-  772     _00168_DS_:
                                    1-  773     	.line	176, "main.c"; 	RemoteStart = 0;
                                    1-  774     	BANKSEL	_Status
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 1Drr                      1-  775     	BCR	_Status,3
                                    1-  776     	.line	177, "main.c"; 	OneCode = 0;
     0052 1Crr                      1-  777     	BCR	_Status,1
                                    1-  778     	.line	178, "main.c"; 	ZeroCode = 0;
     0053 1Crr                      1-  779     	BCR	_Status,0
                                    1-  780     	.line	179, "main.c"; 	ReadOver = 0;
     0054 1Err                      1-  781     	BCR	_Status,4
                                    1-  782     	.line	180, "main.c"; 	bitIndex = 0;
                                    1-  783     	BANKSEL	_bitIndex
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 02rr                      1-  784     	CLRR	_bitIndex
     0057 3rrr                      1-  785     	LGOTO	_00191_DS_
                                    1-  786     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  787     ;;unsigned compare: left >= lit (0x24=36), size=2
     0058                           1-  788     _00182_DS_:
                                    1-  789     	.line	186, "main.c"; 	if((T1Counter > (Zero_L - FaultTolerant))&&(T1Counter < (Zero_L + FaultTolerant)))
     0058 2100                      1-  790     	MOVIA	0x00
                                    1-  791     	BANKSEL	_T1Counter
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 04rr                      1-  792     	SUBAR	(_T1Counter + 1),W
     005B 0903                      1-  793     	BTRSS	STATUS,2
     005C 3rrr                      1-  794     	LGOTO	_00228_DS_
     005D 2124                      1-  795     	MOVIA	0x24
     005E 04rr                      1-  796     	SUBAR	_T1Counter,W
     005F                           1-  797     _00228_DS_:
     005F 0803                      1-  798     	BTRSS	STATUS,0
     0060 3rrr                      1-  799     	LGOTO	_00178_DS_
                                    1-  800     ;;unsigned compare: left < lit (0x2D=45), size=2
     0061 2100                      1-  801     	MOVIA	0x00
                                    1-  802     	BANKSEL	_T1Counter
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 04rr                      1-  803     	SUBAR	(_T1Counter + 1),W
     0064 0903                      1-  804     	BTRSS	STATUS,2
     0065 3rrr                      1-  805     	LGOTO	_00229_DS_
     0066 212D                      1-  806     	MOVIA	0x2d
     0067 04rr                      1-  807     	SUBAR	_T1Counter,W
     0068                           1-  808     _00229_DS_:
     0068 0C03                      1-  809     	BTRSC	STATUS,0
     0069 3rrr                      1-  810     	LGOTO	_00178_DS_
                                    1-  811     	.line	188, "main.c"; 	if(ZeroCode)
                                    1-  812     	BANKSEL	_Status
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 08rr                      1-  813     	BTRSS	_Status,0
     006C 3rrr                      1-  814     	LGOTO	_00171_DS_
                                    1-  815     	.line	191, "main.c"; 	GetOneByte(0);
     006D 2100                      1-  816     	MOVIA	0x00
     006E 2rrr                      1-  817     	LCALL	_GetOneByte
     006F 3rrr                      1-  818     	LGOTO	_00191_DS_
     0070                           1-  819     _00171_DS_:
                                    1-  820     	.line	196, "main.c"; 	RemoteStart = 0;
                                    1-  821     	BANKSEL	_Status
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 1Drr                      1-  822     	BCR	_Status,3
                                    1-  823     	.line	197, "main.c"; 	OneCode = 0;
     0072 1Crr                      1-  824     	BCR	_Status,1
                                    1-  825     	.line	198, "main.c"; 	ZeroCode = 0;
     0073 1Crr                      1-  826     	BCR	_Status,0
                                    1-  827     	.line	199, "main.c"; 	ReadOver = 0;
     0074 1Err                      1-  828     	BCR	_Status,4
                                    1-  829     	.line	200, "main.c"; 	bitIndex = 0;
                                    1-  830     	BANKSEL	_bitIndex
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 02rr                      1-  831     	CLRR	_bitIndex
     0077 3rrr                      1-  832     	LGOTO	_00191_DS_
     0078                           1-  833     _00178_DS_:
                                    1-  834     	.line	206, "main.c"; 	if(ZeroCode && (T1Counter > (HeadCont_L - FaultTolerant))) //结束码,同时也是重复码的起始
                                    1-  835     	BANKSEL	_Status
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 08rr                      1-  836     	BTRSS	_Status,0
     007A 3rrr                      1-  837     	LGOTO	_00174_DS_
                                    1-  838     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  839     ;;unsigned compare: left >= lit (0x22E=558), size=2
     007B 2102                      1-  840     	MOVIA	0x02
                                    1-  841     	BANKSEL	_T1Counter
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 04rr                      1-  842     	SUBAR	(_T1Counter + 1),W
     007E 0903                      1-  843     	BTRSS	STATUS,2
     007F 3rrr                      1-  844     	LGOTO	_00230_DS_
     0080 212E                      1-  845     	MOVIA	0x2e
     0081 04rr                      1-  846     	SUBAR	_T1Counter,W
     0082                           1-  847     _00230_DS_:
     0082 0803                      1-  848     	BTRSS	STATUS,0
     0083 3rrr                      1-  849     	LGOTO	_00174_DS_
                                    1-  850     	.line	208, "main.c"; 	ReadOver = 1;
                                    1-  851     	BANKSEL	_Status
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 1Arr                      1-  852     	BSR	_Status,4
                                    1-  853     	.line	209, "main.c"; 	OneCode = 0;
     0086 1Crr                      1-  854     	BCR	_Status,1
                                    1-  855     	.line	210, "main.c"; 	ZeroCode = 0;
     0087 1Crr                      1-  856     	BCR	_Status,0
                                    1-  857     	.line	211, "main.c"; 	RemoteStart = 0;
     0088 1Drr                      1-  858     	BCR	_Status,3
                                    1-  859     	.line	212, "main.c"; 	bitIndex = 0;
                                    1-  860     	BANKSEL	_bitIndex
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 02rr                      1-  861     	CLRR	_bitIndex
     008B 3rrr                      1-  862     	LGOTO	_00191_DS_
     008C                           1-  863     _00174_DS_:
                                    1-  864     	.line	217, "main.c"; 	RemoteStart = 0;
                                    1-  865     	BANKSEL	_Status
     008C rrrr                      3-   71 m1      .banksel ram_address
     008D 1Drr                      1-  866     	BCR	_Status,3
                                    1-  867     	.line	218, "main.c"; 	OneCode = 0;
     008E 1Crr                      1-  868     	BCR	_Status,1
                                    1-  869     	.line	219, "main.c"; 	ZeroCode = 0;
     008F 1Crr                      1-  870     	BCR	_Status,0
                                    1-  871     	.line	220, "main.c"; 	ReadOver = 0;
     0090 1Err                      1-  872     	BCR	_Status,4
     0091 3rrr                      1-  873     	LGOTO	_00191_DS_
                                    1-  874     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  875     ;;unsigned compare: left >= lit (0x229=553), size=2
     0092                           1-  876     _00189_DS_:
                                    1-  877     	.line	228, "main.c"; 	if((T1Counter > (HeadCont_L - (FaultTolerant*2)))&&(T1Counter < (HeadCont_L + (FaultTolerant*2))))
     0092 2102                      1-  878     	MOVIA	0x02
                                    1-  879     	BANKSEL	_T1Counter
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 04rr                      1-  880     	SUBAR	(_T1Counter + 1),W
     0095 0903                      1-  881     	BTRSS	STATUS,2
     0096 3rrr                      1-  882     	LGOTO	_00231_DS_
     0097 2129                      1-  883     	MOVIA	0x29
     0098 04rr                      1-  884     	SUBAR	_T1Counter,W
     0099                           1-  885     _00231_DS_:
     0099 0803                      1-  886     	BTRSS	STATUS,0
     009A 3rrr                      1-  887     	LGOTO	_00191_DS_
                                    1-  888     ;;unsigned compare: left < lit (0x23C=572), size=2
     009B 2102                      1-  889     	MOVIA	0x02
                                    1-  890     	BANKSEL	_T1Counter
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 04rr                      1-  891     	SUBAR	(_T1Counter + 1),W
     009E 0903                      1-  892     	BTRSS	STATUS,2
     009F 3rrr                      1-  893     	LGOTO	_00232_DS_
     00A0 213C                      1-  894     	MOVIA	0x3c
     00A1 04rr                      1-  895     	SUBAR	_T1Counter,W
     00A2                           1-  896     _00232_DS_:
     00A2 0C03                      1-  897     	BTRSC	STATUS,0
     00A3 3rrr                      1-  898     	LGOTO	_00191_DS_
                                    1-  899     	.line	230, "main.c"; 	RemoteStart = 1;       //疑似遥控数据头
                                    1-  900     	BANKSEL	_Status
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 19rr                      1-  901     	BSR	_Status,3
                                    1-  902     	.line	231, "main.c"; 	bitIndex = 0;
                                    1-  903     	BANKSEL	_bitIndex
     00A6 rrrr                      3-   71 m1      .banksel ram_address
     00A7 02rr                      1-  904     	CLRR	_bitIndex
                                    1-  905     	.line	232, "main.c"; 	OneCode = 0;
                                    1-  906     	BANKSEL	_Status
     00A8 rrrr                      3-   71 m1      .banksel ram_address
     00A9 1Crr                      1-  907     	BCR	_Status,1
                                    1-  908     	.line	233, "main.c"; 	ZeroCode = 0;
     00AA 1Crr                      1-  909     	BCR	_Status,0
                                    1-  910     	.line	234, "main.c"; 	ReadOver = 0;
     00AB 1Err                      1-  911     	BCR	_Status,4
     00AC                           1-  912     _00191_DS_:
                                    1-  913     	.line	239, "main.c"; 	}
                                    1-  914     	RETURN	
     00AC 0010                      3-   26 m1      ret
                                    1-  915     ; exit point of _proLow
                                    1-  917     ;***
                                    1-  918     ;  pBlock Stats: dbName = C
                                    1-  919     ;***
                                    1-  920     ;has an exit
                                    1-  921     ;4 compiler assigned registers:
                                    1-  922     ;   r0x1017
                                    1-  923     ;   r0x1018
                                    1-  924     ;   r0x1019
                                    1-  925     ;   r0x101A
                                    1-  926     ;; Starting pCode block
                                    1-  927     .segment "code"; module=main, function=_proHight
     0000                           1-  929     _proHight:
                                    1-  930     ; 2 exit points
                                    1-  931     	.line	120, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1-  932     	CLRA	
     0001 00rr                      1-  933     	SFUN	_T1CR1
                                    1-  934     	.line	121, "main.c"; 	tempT1 = 0x30&TMRH;
     0002 2130                      1-  935     	MOVIA	0x30
     0003 10rr                      1-  936     	ANDAR	_TMRH,W
                                    1-  937     ;;3	MOVAR	r0x1017
                                    1-  938     	BANKSEL	_tempT1
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1-  939     	MOVAR	_tempT1
     0006 02rr                      1-  940     	CLRR	(_tempT1 + 1)
                                    1-  941     	.line	122, "main.c"; 	tempT1 <<= 4;
     0007 15rr                      1-  942     	SWAPR	(_tempT1 + 1),W
     0008 22F0                      1-  943     	ANDIA	0xf0
     0009 00rr                      1-  944     	MOVAR	(_tempT1 + 1)
     000A 15rr                      1-  945     	SWAPR	_tempT1,W
     000B 00rr                      1-  946     	MOVAR	_tempT1
     000C 220F                      1-  947     	ANDIA	0x0f
     000D 11rr                      1-  948     	IORAR	(_tempT1 + 1),F
     000E 12rr                      1-  949     	XORAR	_tempT1,F
                                    1-  950     	.line	123, "main.c"; 	tempT1 += TMR1;
     000F 00rr                      1-  951     	SFUNR	_TMR1
                                    1-  952     	BANKSEL	r0x1017
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1-  953     	MOVAR	r0x1017
                                    1-  954     ;;1	MOVAR	r0x1018
                                    1-  955     ;;1	CLRR	r0x1019
                                    1-  956     ;;99	MOVR	r0x1018,W
     0012 2100                      1-  957     	MOVIA	0x00
                                    1-  958     	BANKSEL	r0x101A
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1-  959     	MOVAR	r0x101A
                                    1-  960     	BANKSEL	r0x1017
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  961     	MOVR	r0x1017,W
                                    1-  962     	BANKSEL	_tempT1
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 03rr                      1-  963     	ADDAR	_tempT1,F
                                    1-  964     	BANKSEL	r0x101A
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  965     	MOVR	r0x101A,W
     001B 0C03                      1-  966     	BTRSC	STATUS,0
     001C 05rr                      1-  967     	INCR	r0x101A,W
     001D 0D03                      1-  968     	BTRSC	STATUS,2
     001E 3rrr                      1-  969     	LGOTO	_00003_DS_
                                    1-  970     	BANKSEL	_tempT1
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 03rr                      1-  971     	ADDAR	(_tempT1 + 1),F
     0021                           1-  972     _00003_DS_:
                                    1-  973     	.line	124, "main.c"; 	T1Counter = 0x3FF - tempT1;
                                    1-  974     	BANKSEL	_tempT1
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1-  975     	MOVR	_tempT1,W
     0023 27FF                      1-  976     	SUBIA	0xff
                                    1-  977     	BANKSEL	_T1Counter
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1-  978     	MOVAR	_T1Counter
                                    1-  979     	BANKSEL	_tempT1
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  980     	MOVR	(_tempT1 + 1),W
     0028 0803                      1-  981     	BTRSS	STATUS,0
     0029 05rr                      1-  982     	INCR	(_tempT1 + 1),W
     002A 2703                      1-  983     	SUBIA	0x03
                                    1-  984     	BANKSEL	_T1Counter
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 00rr                      1-  985     	MOVAR	(_T1Counter + 1)
                                    1-  986     	.line	125, "main.c"; 	TMRH = 0x30;
     002D 2130                      1-  987     	MOVIA	0x30
     002E 00rr                      1-  988     	MOVAR	_TMRH
                                    1-  989     	.line	126, "main.c"; 	TMR1 = 0xFF;
     002F 21FF                      1-  990     	MOVIA	0xff
     0030 00rr                      1-  991     	SFUN	_TMR1
                                    1-  992     	.line	127, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     0031 2103                      1-  993     	MOVIA	0x03
     0032 00rr                      1-  994     	SFUN	_T1CR1
                                    1-  995     	.line	128, "main.c"; 	PORTA = 0x00; 
     0033 02rr                      1-  996     	CLRR	_PORTA
                                    1-  997     	.line	129, "main.c"; 	if(RemoteStart)
                                    1-  998     	BANKSEL	_Status
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 09rr                      1-  999     	BTRSS	_Status,3
     0036 3rrr                      1- 1000     	LGOTO	_00142_DS_
                                    1- 1001     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1002     ;;unsigned compare: left >= lit (0x30=48), size=2
                                    1- 1003     	.line	131, "main.c"; 	if((T1Counter> (OneCode_H - FaultTolerant))&&(T1Counter < (OneCode_H + FaultTolerant)))
     0037 2100                      1- 1004     	MOVIA	0x00
                                    1- 1005     	BANKSEL	_T1Counter
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 04rr                      1- 1006     	SUBAR	(_T1Counter + 1),W
     003A 0903                      1- 1007     	BTRSS	STATUS,2
     003B 3rrr                      1- 1008     	LGOTO	_00159_DS_
     003C 2130                      1- 1009     	MOVIA	0x30
     003D 04rr                      1- 1010     	SUBAR	_T1Counter,W
     003E                           1- 1011     _00159_DS_:
     003E 0803                      1- 1012     	BTRSS	STATUS,0
     003F 3rrr                      1- 1013     	LGOTO	_00137_DS_
                                    1- 1014     ;;unsigned compare: left < lit (0x39=57), size=2
     0040 2100                      1- 1015     	MOVIA	0x00
                                    1- 1016     	BANKSEL	_T1Counter
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 04rr                      1- 1017     	SUBAR	(_T1Counter + 1),W
     0043 0903                      1- 1018     	BTRSS	STATUS,2
     0044 3rrr                      1- 1019     	LGOTO	_00160_DS_
     0045 2139                      1- 1020     	MOVIA	0x39
     0046 04rr                      1- 1021     	SUBAR	_T1Counter,W
     0047                           1- 1022     _00160_DS_:
     0047 0C03                      1- 1023     	BTRSC	STATUS,0
     0048 3rrr                      1- 1024     	LGOTO	_00137_DS_
                                    1- 1025     	.line	133, "main.c"; 	OneCode = 1;
                                    1- 1026     	BANKSEL	_Status
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 18rr                      1- 1027     	BSR	_Status,1
                                    1- 1028     	.line	134, "main.c"; 	ZeroCode = 0;
     004B 1Crr                      1- 1029     	BCR	_Status,0
     004C 3rrr                      1- 1030     	LGOTO	_00142_DS_
                                    1- 1031     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1032     ;;unsigned compare: left >= lit (0x13=19), size=2
     004D                           1- 1033     _00137_DS_:
                                    1- 1034     	.line	138, "main.c"; 	if((T1Counter > (Zero_H - FaultTolerant))&&(T1Counter < (Zero_H + FaultTolerant)))
     004D 2100                      1- 1035     	MOVIA	0x00
                                    1- 1036     	BANKSEL	_T1Counter
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 04rr                      1- 1037     	SUBAR	(_T1Counter + 1),W
     0050 0903                      1- 1038     	BTRSS	STATUS,2
     0051 3rrr                      1- 1039     	LGOTO	_00161_DS_
     0052 2113                      1- 1040     	MOVIA	0x13
     0053 04rr                      1- 1041     	SUBAR	_T1Counter,W
     0054                           1- 1042     _00161_DS_:
     0054 0803                      1- 1043     	BTRSS	STATUS,0
     0055 3rrr                      1- 1044     	LGOTO	_00133_DS_
                                    1- 1045     ;;unsigned compare: left < lit (0x1C=28), size=2
     0056 2100                      1- 1046     	MOVIA	0x00
                                    1- 1047     	BANKSEL	_T1Counter
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 04rr                      1- 1048     	SUBAR	(_T1Counter + 1),W
     0059 0903                      1- 1049     	BTRSS	STATUS,2
     005A 3rrr                      1- 1050     	LGOTO	_00162_DS_
     005B 211C                      1- 1051     	MOVIA	0x1c
     005C 04rr                      1- 1052     	SUBAR	_T1Counter,W
     005D                           1- 1053     _00162_DS_:
     005D 0C03                      1- 1054     	BTRSC	STATUS,0
     005E 3rrr                      1- 1055     	LGOTO	_00133_DS_
                                    1- 1056     	.line	140, "main.c"; 	ZeroCode = 1;
                                    1- 1057     	BANKSEL	_Status
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 18rr                      1- 1058     	BSR	_Status,0
                                    1- 1059     	.line	141, "main.c"; 	OneCode = 0;
     0061 1Crr                      1- 1060     	BCR	_Status,1
     0062 3rrr                      1- 1061     	LGOTO	_00142_DS_
     0063                           1- 1062     _00133_DS_:
                                    1- 1063     	.line	145, "main.c"; 	ZeroCode = 0;
                                    1- 1064     	BANKSEL	_Status
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 1Crr                      1- 1065     	BCR	_Status,0
                                    1- 1066     	.line	146, "main.c"; 	OneCode = 0;
     0065 1Crr                      1- 1067     	BCR	_Status,1
     0066                           1- 1068     _00142_DS_:
                                    1- 1069     	.line	151, "main.c"; 	}
                                    1- 1070     	RETURN	
     0066 0010                      3-   26 m1      ret
                                    1- 1071     ; exit point of _proHight
                                    1- 1074     ;	code size estimation:
                                    1- 1075     ;	  383+   92 =   475 instructions ( 1134 byte)
                                    1- 1077     	end
                                    1- 1077     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000001A
_00002_DS_              Label    00000021
_00003_DS_              Label    00000021
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00112_DS_              Label    00000026
_00118_DS_              Label    00000004
_00123_DS_              Label    0000000C
_00124_DS_              Label    00000013
_00127_DS_              Label    00000001
_00133_DS_              Label    00000063
_00137_DS_              Label    0000004D
_00142_DS_              Label    00000066
_00159_DS_              Label    0000003E
_00160_DS_              Label    00000047
_00161_DS_              Label    00000054
_00162_DS_              Label    0000005D
_00168_DS_              Label    00000050
_00171_DS_              Label    00000070
_00174_DS_              Label    0000008C
_00178_DS_              Label    00000078
_00182_DS_              Label    00000058
_00189_DS_              Label    00000092
_00191_DS_              Label    000000AC
_00226_DS_              Label    0000003F
_00227_DS_              Label    00000048
_00228_DS_              Label    0000005F
_00229_DS_              Label    00000068
_00230_DS_              Label    00000082
_00231_DS_              Label    00000099
_00232_DS_              Label    000000A2
_00242_DS_              Label    00000012
_00248_DS_              Label    0000002E
_00251_DS_              Label    00000024
_00252_DS_              Label    00000037
_00255_DS_              Label    0000003A
_00264_DS_              Label    0000000B
_00265_DS_              Label    0000000E
_00267_DS_              Label    0000000F
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_bitIndex               Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_CMPCR                  Label    00000000
_data1                  Label    00000000
_data2                  Label    00000000
_data3                  Label    00000000
_FSR                    Label    00000000
_GetOneByte             Label    00000000
_INDF                   Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCallBack            Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_predata1               Label    00000000
_predata2               Label    00000000
_predata3               Label    00000000
_proData                Label    00000000
_proHight               Label    00000000
_proLow                 Label    00000000
_proTime                Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1Counter              Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempT1                 Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_value                  Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000037
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1012                 Label    00000000
r0x1013                 Label    00000000
r0x1016                 Label    00000000
r0x1017                 Label    00000000
r0x101A                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a054d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
