
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_pwmStart
                                    1-   97     	extern	_pwmOn
                                    1-   98     	extern	_isr
                                    1-   99     	extern	_main
                                    1-  100     	extern	_pwmStop
                                    1-  101     	extern	_intCount
                                    1-  102     	extern	_IntFlag
                                    1-  104     	extern PSAVE
                                    1-  105     	extern SSAVE
                                    1-  106     	extern WSAVE
                                    1-  107     	extern STK02
                                    1-  108     	extern STK01
                                    1-  109     	extern STK00
                                    1-  111     .segment "uninit", 0x20000040
 20000040                           1-  112     PSAVE:
                                    1-  113     	.res 1
 20000041                           1-  114     SSAVE:
                                    1-  115     	.res 1
 20000042                           1-  116     WSAVE:
                                    1-  117     	.res 1
 20000043                           1-  118     STK02:
                                    1-  119     	.res 1
 20000044                           1-  120     STK01:
                                    1-  121     	.res 1
 20000045                           1-  122     STK00:
                                    1-  123     	.res 1
                                    1-  125     ;--------------------------------------------------------
                                    1-  126     ; global definitions
                                    1-  127     ;--------------------------------------------------------
                                    1-  128     ;--------------------------------------------------------
                                    1-  129     ; absolute symbol definitions
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ; compiler-defined variables
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     ;--------------------------------------------------------
                                    1-  135     ; initialized data
                                    1-  136     ;--------------------------------------------------------
                                    1-  138     .segment "idata"
     0000                           1-  139     _intCount:
     0000 0000                      1-  140     	dw	0x00
                                    1-  144     .segment "idata"
     0000                           1-  145     _IntFlag:
     0000 0000                      1-  146     	dw	0x00
                                    1-  149     ;--------------------------------------------------------
                                    1-  150     ; overlayable items in internal ram 
                                    1-  151     ;--------------------------------------------------------
                                    1-  152     ;	udata_ovr
                                    1-  153     ;--------------------------------------------------------
                                    1-  154     ; reset vector 
                                    1-  155     ;--------------------------------------------------------
                                    1-  156     ORG	0x0000
     0000 3rrr                      1-  157     	LGOTO	__nyc_ny8_startup
                                    1-  158     ;--------------------------------------------------------
                                    1-  159     ; interrupt and initialization code
                                    1-  160     ;--------------------------------------------------------
                                    1-  161     ORG 0x0008
     0008 3rrr                      1-  162     	lgoto	__sdcc_interrupt
                                    1-  164     .segment "code"
     0000                           1-  165     __sdcc_interrupt:
                                    1-  166     ;***
                                    1-  167     ;  pBlock Stats: dbName = I
                                    1-  168     ;***
                                    1-  169     ;2 compiler assigned registers:
                                    1-  170     ;   STK00
                                    1-  171     ;   STK01
                                    1-  172     ;; Starting pCode block
     0000                           1-  173     _isr:
                                    1-  174     ; 0 exit points
                                    1-  175     	.line	14, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  176     	MOVAR	WSAVE
     0001 1503                      1-  177     	SWAPR	STATUS,W
     0002 0283                      1-  178     	CLRR	STATUS
     0003 00rr                      1-  179     	MOVAR	SSAVE
     0004 010A                      1-  180     	MOVR	PCHBUF,W
     0005 028A                      1-  181     	CLRR	PCHBUF
     0006 00rr                      1-  182     	MOVAR	PSAVE
     0007 0104                      1-  183     	MOVR	FSR,W
                                    1-  184     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  185     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  186     	MOVR	STK00,W
                                    1-  187     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  188     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  189     	MOVR	STK01,W
                                    1-  190     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  191     	MOVAR	___sdcc_saved_stk01
                                    1-  192     	.line	16, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  193     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  194     	LGOTO	_00108_DS_
                                    1-  195     	.line	18, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  196     	MOVIA	0x37
     0013 03rr                      1-  197     	ADDAR	_TMR0,F
                                    1-  198     	.line	19, "main.c"; 	intCount++;
                                    1-  199     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  200     	INCR	_intCount,F
                                    1-  201     	.line	20, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  202     	MOVR	_intCount,W
     0017 2464                      1-  203     	XORIA	0x64
     0018 0903                      1-  204     	BTRSS	STATUS,2
     0019 3rrr                      1-  205     	LGOTO	_00108_DS_
                                    1-  206     	.line	22, "main.c"; 	intCount = 0;
     001A 02rr                      1-  207     	CLRR	_intCount
                                    1-  208     	.line	23, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  209     	MOVIA	0x01
                                    1-  210     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  211     	MOVAR	_IntFlag
     001E                           1-  212     _00108_DS_:
                                    1-  213     	.line	26, "main.c"; 	if(INTFbits.PABIF)
     001E 08rr                      1-  214     	BTRSS	_INTFbits,1
     001F 3rrr                      1-  215     	LGOTO	_00110_DS_
                                    1-  216     	.line	28, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  217     	MOVIA	0xfd
     0021 00rr                      1-  218     	MOVAR	_INTF
     0022                           1-  219     _00110_DS_:
                                    1-  220     	.line	31, "main.c"; 	INTF = 0;
     0022 02rr                      1-  221     	CLRR	_INTF
                                    1-  222     	.line	33, "main.c"; 	}
                                    1-  223     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1-  224     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  225     	MOVAR	STK01
                                    1-  226     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  227     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  228     	MOVAR	STK00
                                    1-  229     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1-  230     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  231     	MOVAR	FSR
     002C 01rr                      1-  232     	MOVR	PSAVE,W
     002D 008A                      1-  233     	MOVAR	PCHBUF
     002E 0283                      1-  234     	CLRR	STATUS
     002F 15rr                      1-  235     	SWAPR	SSAVE,W
     0030 0083                      1-  236     	MOVAR	STATUS
     0031 15rr                      1-  237     	SWAPR	WSAVE,F
     0032 15rr                      1-  238     	SWAPR	WSAVE,W
     0033                           1-  239     END_OF_INTERRUPT:
     0033 0011                      1-  240     	RETIE	
                                    1-  242     ;--------------------------------------------------------
                                    1-  243     ; code
                                    1-  244     ;--------------------------------------------------------
                                    1-  245     ;***
                                    1-  246     ;  pBlock Stats: dbName = M
                                    1-  247     ;***
                                    1-  248     ;has an exit
                                    1-  249     ;functions called:
                                    1-  250     ;   _pwmOn
                                    1-  251     ;   _pwmOn
                                    1-  252     ;; Starting pCode block
                                    1-  253     .segment "code"; module=main, function=_main
     0000                           1-  255     _main:
                                    1-  256     ; 2 exit points
                                    1-  257     	.line	38, "main.c"; 	PORTB = 0xCB;
     0000 21CB                      1-  258     	MOVIA	0xcb
     0001 00rr                      1-  259     	MOVAR	_PORTB
                                    1-  260     	.line	39, "main.c"; 	BPHCON = 0xF7;		//PB3 上拉
     0002 21F7                      1-  261     	MOVIA	0xf7
     0003 00rr                      1-  262     	MOVAR	_BPHCON
                                    1-  263     	.line	42, "main.c"; 	IOSTB =  C_PB0_Input | C_PB1_Input | C_PB3_Input;	
     0004 210B                      1-  264     	MOVIA	0x0b
     0005 000r                      1-  265     	IOST	_IOSTB
                                    1-  266     	.line	43, "main.c"; 	IOSTA = 0x00;
     0006 0200                      1-  267     	CLRA	
     0007 000r                      1-  268     	IOST	_IOSTA
                                    1-  269     	.line	44, "main.c"; 	PORTB = 0xCB;                        	// PortB Data Register = 0x00
     0008 21CB                      1-  270     	MOVIA	0xcb
     0009 00rr                      1-  271     	MOVAR	_PORTB
                                    1-  272     	.line	45, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     000A 21A8                      1-  273     	MOVIA	0xa8
     000B 00rr                      1-  274     	MOVAR	_PCON
                                    1-  275     	.line	47, "main.c"; 	PCON1 = C_TMR0_Dis;
     000C 0200                      1-  276     	CLRA	
     000D 000r                      1-  277     	IOST	_PCON1
                                    1-  278     	.line	49, "main.c"; 	TMR0 = 55;
     000E 2137                      1-  279     	MOVIA	0x37
     000F 00rr                      1-  280     	MOVAR	_TMR0
                                    1-  281     	.line	50, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0010 0200                      1-  282     	CLRA	
     0011 0003                      1-  283     	T0MD	
                                    1-  284     	.line	52, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0012 2111                      1-  285     	MOVIA	0x11
     0013 000r                      1-  286     	IOST	_PCON1
                                    1-  287     	.line	54, "main.c"; 	ENI();	
     0014 0004                      1-  288     	ENI
                                    1-  289     	.line	55, "main.c"; 	pwmOn();
     0015 2rrr                      1-  290     	LCALL	_pwmOn
     0016                           1-  291     _00116_DS_:
                                    1-  292     	.line	58, "main.c"; 	CLRWDT();
     0016 0002                      1-  293     	clrwdt
     0017 3rrr                      1-  294     	LGOTO	_00116_DS_
                                    1-  295     	.line	60, "main.c"; 	}
                                    1-  296     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1-  297     ; exit point of _main
                                    1-  299     ;***
                                    1-  300     ;  pBlock Stats: dbName = C
                                    1-  301     ;***
                                    1-  302     ;has an exit
                                    1-  303     ;; Starting pCode block
                                    1-  304     .segment "code"; module=main, function=_pwmStop
     0000                           1-  306     _pwmStop:
                                    1-  307     ; 2 exit points
                                    1-  308     	.line	87, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1-  309     	CLRA	
     0001 00rr                      1-  310     	SFUN	_T1CR1
                                    1-  311     	.line	88, "main.c"; 	PWM1DUTY = 0;
     0002 00rr                      1-  312     	SFUN	_PWM1DUTY
                                    1-  313     	.line	89, "main.c"; 	PORTB &= 0xFC;	//关闭 
     0003 21FC                      1-  314     	MOVIA	0xfc
     0004 10rr                      1-  315     	ANDAR	_PORTB,F
                                    1-  316     	.line	90, "main.c"; 	}
                                    1-  317     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1-  318     ; exit point of _pwmStop
                                    1-  320     ;***
                                    1-  321     ;  pBlock Stats: dbName = C
                                    1-  322     ;***
                                    1-  323     ;has an exit
                                    1-  324     ;; Starting pCode block
                                    1-  325     .segment "code"; module=main, function=_pwmStart
     0000                           1-  327     _pwmStart:
                                    1-  328     ; 2 exit points
                                    1-  329     	.line	78, "main.c"; 	TMR1 = 0x06;							//频率为110K
     0000 2106                      1-  330     	MOVIA	0x06
     0001 00rr                      1-  331     	SFUN	_TMR1
                                    1-  332     	.line	79, "main.c"; 	PWM1DUTY = 0x01;				// 		
     0002 2101                      1-  333     	MOVIA	0x01
     0003 00rr                      1-  334     	SFUN	_PWM1DUTY
                                    1-  335     	.line	80, "main.c"; 	TMRH = 0x00;
     0004 02rr                      1-  336     	CLRR	_TMRH
                                    1-  337     	.line	81, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0005 0200                      1-  338     	CLRA	
     0006 00rr                      1-  339     	SFUN	_T1CR2
                                    1-  340     	.line	82, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     0007 2183                      1-  341     	MOVIA	0x83
     0008 00rr                      1-  342     	SFUN	_T1CR1
                                    1-  343     	.line	83, "main.c"; 	}
                                    1-  344     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1-  345     ; exit point of _pwmStart
                                    1-  347     ;***
                                    1-  348     ;  pBlock Stats: dbName = C
                                    1-  349     ;***
                                    1-  350     ;has an exit
                                    1-  351     ;; Starting pCode block
                                    1-  352     .segment "code"; module=main, function=_pwmOn
     0000                           1-  354     _pwmOn:
                                    1-  355     ; 2 exit points
                                    1-  356     	.line	64, "main.c"; 	BZ3CR = 0x00;	
     0000 0200                      1-  357     	CLRA	
     0001 00rr                      1-  358     	SFUN	_BZ3CR
                                    1-  359     	.line	65, "main.c"; 	TM3RH = 0x00;
     0002 02rr                      1-  360     	CLRR	_TM3RH
                                    1-  361     	.line	66, "main.c"; 	PWM3DUTY = 3;				// 		频率为40K
     0003 2103                      1-  362     	MOVIA	0x03
     0004 00rr                      1-  363     	SFUN	_PWM3DUTY
                                    1-  364     	.line	67, "main.c"; 	TMR3 = 4;
     0005 2104                      1-  365     	MOVIA	0x04
     0006 00rr                      1-  366     	SFUN	_TMR3
                                    1-  367     	.line	68, "main.c"; 	T3CR2 = 0x00;
     0007 0200                      1-  368     	CLRA	
     0008 00rr                      1-  369     	SFUN	_T3CR2
                                    1-  370     	.line	69, "main.c"; 	T3CR2 = 0x08;
     0009 2108                      1-  371     	MOVIA	0x08
     000A 00rr                      1-  372     	SFUN	_T3CR2
                                    1-  373     	.line	70, "main.c"; 	T3CR1 =  C_PWM3_En | C_TMR3_Reload | C_TMR3_En;
     000B 2183                      1-  374     	MOVIA	0x83
     000C 00rr                      1-  375     	SFUN	_T3CR1
                                    1-  376     	.line	71, "main.c"; 	}
                                    1-  377     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1-  378     ; exit point of _pwmOn
                                    1-  381     ;	code size estimation:
                                    1-  382     ;	   97+    8 =   105 instructions (  226 byte)
                                    1-  384     	end
                                    1-  384     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00108_DS_              Label    0000001E
_00110_DS_              Label    00000022
_00116_DS_              Label    00000016
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_CMPCR                  Label    00000000
_FSR                    Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmOn                  Label    00000000
_pwmStart               Label    00000000
_pwmStop                Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000033
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
