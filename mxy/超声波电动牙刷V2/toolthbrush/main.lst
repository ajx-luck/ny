
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_checkAD
                                    1-   97     	extern	_F_wait_eoc
                                    1-   98     	extern	_F_AIN1_Convert
                                    1-   99     	extern	_initAD
                                    1-  100     	extern	_checkLVD
                                    1-  101     	extern	_delay
                                    1-  102     	extern	_keyRead
                                    1-  103     	extern	_KeyScan
                                    1-  104     	extern	_initSys
                                    1-  105     	extern	_Level3Change
                                    1-  106     	extern	_pwmWork
                                    1-  107     	extern	_ledOn
                                    1-  108     	extern	_ledOff
                                    1-  109     	extern	_ledWord
                                    1-  110     	extern	_gotoSleep
                                    1-  111     	extern	_nextorSleep
                                    1-  112     	extern	_lvdLed
                                    1-  113     	extern	_powerLed
                                    1-  114     	extern	_isr
                                    1-  115     	extern	_main
                                    1-  116     	extern	_INTFLAG
                                    1-  117     	extern	_workStep
                                    1-  118     	extern	_saveWorkStep
                                    1-  119     	extern	_intCount
                                    1-  120     	extern	_KeyStatus
                                    1-  121     	extern	_keyCount
                                    1-  122     	extern	_pwmHmax
                                    1-  123     	extern	_pwmLmax
                                    1-  124     	extern	_pwm2Lmax
                                    1-  125     	extern	_pwmwaitTime
                                    1-  126     	extern	_pwmStep
                                    1-  127     	extern	_pwm1L
                                    1-  128     	extern	_pwm2L
                                    1-  129     	extern	_pwmwait
                                    1-  130     	extern	_ledL
                                    1-  131     	extern	_ledH
                                    1-  132     	extern	_ledOffTime
                                    1-  133     	extern	_ledTime
                                    1-  134     	extern	_ledpwmTime
                                    1-  135     	extern	_sleepFlag
                                    1-  136     	extern	_lvdFlag
                                    1-  137     	extern	_lvdTime
                                    1-  138     	extern	_lvdCount
                                    1-  139     	extern	_powerFlag
                                    1-  140     	extern	_powerFullFlag
                                    1-  141     	extern	_threeChangeFlag
                                    1-  142     	extern	_threeStep
                                    1-  143     	extern	_adCount
                                    1-  144     	extern	_count250ms
                                    1-  145     	extern	_count500ms
                                    1-  146     	extern	_count3s
                                    1-  147     	extern	_count1000ms
                                    1-  148     	extern	_R_AIN1_DATA
                                    1-  149     	extern	_R_AIN1_DATA_LB
                                    1-  151     	extern PSAVE
                                    1-  152     	extern SSAVE
                                    1-  153     	extern WSAVE
                                    1-  154     	extern STK12
                                    1-  155     	extern STK11
                                    1-  156     	extern STK10
                                    1-  157     	extern STK09
                                    1-  158     	extern STK08
                                    1-  159     	extern STK07
                                    1-  160     	extern STK06
                                    1-  161     	extern STK05
                                    1-  162     	extern STK04
                                    1-  163     	extern STK03
                                    1-  164     	extern STK02
                                    1-  165     	extern STK01
                                    1-  166     	extern STK00
                                    1-  168     .segment "uninit", 0x20000040
 20000040                           1-  169     PSAVE:
                                    1-  170     	.res 1
 20000041                           1-  171     SSAVE:
                                    1-  172     	.res 1
 20000042                           1-  173     WSAVE:
                                    1-  174     	.res 1
 20000043                           1-  175     STK12:
                                    1-  176     	.res 1
 20000044                           1-  177     STK11:
                                    1-  178     	.res 1
 20000045                           1-  179     STK10:
                                    1-  180     	.res 1
 20000046                           1-  181     STK09:
                                    1-  182     	.res 1
 20000047                           1-  183     STK08:
                                    1-  184     	.res 1
 20000048                           1-  185     STK07:
                                    1-  186     	.res 1
 20000049                           1-  187     STK06:
                                    1-  188     	.res 1
 2000004A                           1-  189     STK05:
                                    1-  190     	.res 1
 2000004B                           1-  191     STK04:
                                    1-  192     	.res 1
 2000004C                           1-  193     STK03:
                                    1-  194     	.res 1
 2000004D                           1-  195     STK02:
                                    1-  196     	.res 1
 2000004E                           1-  197     STK01:
                                    1-  198     	.res 1
 2000004F                           1-  199     STK00:
                                    1-  200     	.res 1
                                    1-  202     ;--------------------------------------------------------
                                    1-  203     ; global definitions
                                    1-  204     ;--------------------------------------------------------
                                    1-  205     .segment "uninit"
     0000                           1-  206     _KeyStatus:
                                    1-  207     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     _R_AIN1_DATA:
                                    1-  212     	.res	2
                                    1-  215     .segment "uninit"
     0000                           1-  216     _R_AIN1_DATA_LB:
                                    1-  217     	.res	1
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     ; absolute symbol definitions
                                    1-  222     ;--------------------------------------------------------
                                    1-  223     ;--------------------------------------------------------
                                    1-  224     ; compiler-defined variables
                                    1-  225     ;--------------------------------------------------------
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x103B:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x103A:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x1033:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x1032:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x1034:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x1035:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1036:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1037:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1038:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x1028:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x1029:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x102A:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x102D:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x1030:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1031:
                                    1-  270     	.res	1
                                    1-  271     ;--------------------------------------------------------
                                    1-  272     ; initialized data
                                    1-  273     ;--------------------------------------------------------
                                    1-  275     .segment "idata"
     0000                           1-  276     _INTFLAG:
     0000 0000                      1-  277     	dw	0x00
                                    1-  281     .segment "idata"
     0000                           1-  282     _workStep:
     0000 0000                      1-  283     	dw	0x00
                                    1-  287     .segment "idata"
     0000                           1-  288     _saveWorkStep:
     0000 0001                      1-  289     	dw	0x01
                                    1-  293     .segment "idata"
     0000                           1-  294     _intCount:
     0000 0000                      1-  295     	dw	0x00
                                    1-  299     .segment "idata"
     0000                           1-  300     _keyCount:
     0000 0000                      1-  301     	dw	0x00
                                    1-  305     .segment "idata"
     0000                           1-  306     _pwmHmax:
     0000 0014                      1-  307     	dw	0x14
                                    1-  311     .segment "idata"
     0000                           1-  312     _pwmLmax:
     0000 0010                      1-  313     	dw	0x10
                                    1-  317     .segment "idata"
     0000                           1-  318     _pwm2Lmax:
     0000 0010                      1-  319     	dw	0x10
                                    1-  323     .segment "idata"
     0000                           1-  324     _pwmwaitTime:
     0000 0002                      1-  325     	dw	0x02
                                    1-  329     .segment "idata"
     0000                           1-  330     _pwmStep:
     0000 0000                      1-  331     	dw	0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _pwm1L:
     0000 rrrr                      1-  337     	dw	_pwmLmax
                                    1-  341     .segment "idata"
     0000                           1-  342     _pwm2L:
     0000 rrrr                      1-  343     	dw	_pwmLmax
                                    1-  347     .segment "idata"
     0000                           1-  348     _pwmwait:
     0000 0000                      1-  349     	dw	0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _ledL:
     0000 000A                      1-  355     	dw	0x0a
                                    1-  359     .segment "idata"
     0000                           1-  360     _ledH:
     0000 005A                      1-  361     	dw	0x5a
                                    1-  365     .segment "idata"
     0000                           1-  366     _ledOffTime:
     0000 0088 0013                 1-  367     	dw	0x88, 0x13
                                    1-  371     .segment "idata"
     0000                           1-  372     _ledTime:
     0000 0006                      1-  373     	dw	0x06
                                    1-  377     .segment "idata"
     0000                           1-  378     _ledpwmTime:
     0000 0032                      1-  379     	dw	0x32
                                    1-  383     .segment "idata"
     0000                           1-  384     _sleepFlag:
     0000 0000                      1-  385     	dw	0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _lvdFlag:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _lvdTime:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _lvdCount:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _powerFlag:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _powerFullFlag:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _threeChangeFlag:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _threeStep:
     0000 0000                      1-  427     	dw	0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _adCount:
     0000 0000                      1-  433     	dw	0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _count250ms:
     0000 0000 0000                 1-  439     	dw	0x00, 0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _count500ms:
     0000 0000 0000                 1-  445     	dw	0x00, 0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _count3s:
     0000 0000 0000                 1-  451     	dw	0x00, 0x00
                                    1-  455     .segment "idata"
     0000                           1-  456     _count1000ms:
     0000 0000 0000                 1-  457     	dw	0x00, 0x00
                                    1-  460     ;--------------------------------------------------------
                                    1-  461     ; overlayable items in internal ram 
                                    1-  462     ;--------------------------------------------------------
                                    1-  463     ;	udata_ovr
                                    1-  464     ;--------------------------------------------------------
                                    1-  465     ; reset vector 
                                    1-  466     ;--------------------------------------------------------
                                    1-  467     ORG	0x0000
     0000 3rrr                      1-  468     	LGOTO	__nyc_ny8_startup
                                    1-  469     ;--------------------------------------------------------
                                    1-  470     ; interrupt and initialization code
                                    1-  471     ;--------------------------------------------------------
                                    1-  472     ORG 0x0008
     0008 3rrr                      1-  473     	lgoto	__sdcc_interrupt
                                    1-  475     .segment "code"
     0000                           1-  476     __sdcc_interrupt:
                                    1-  477     ;***
                                    1-  478     ;  pBlock Stats: dbName = I
                                    1-  479     ;***
                                    1-  480     ;functions called:
                                    1-  481     ;   _pwmWork
                                    1-  482     ;   _ledWord
                                    1-  483     ;   _powerLed
                                    1-  484     ;   _lvdLed
                                    1-  485     ;   _gotoSleep
                                    1-  486     ;   _pwmWork
                                    1-  487     ;   _ledWord
                                    1-  488     ;   _powerLed
                                    1-  489     ;   _lvdLed
                                    1-  490     ;   _gotoSleep
                                    1-  491     ;2 compiler assigned registers:
                                    1-  492     ;   STK00
                                    1-  493     ;   STK01
                                    1-  494     ;; Starting pCode block
     0000                           1-  495     _isr:
                                    1-  496     ; 0 exit points
                                    1-  497     	.line	106, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  498     	MOVAR	WSAVE
     0001 1503                      1-  499     	SWAPR	STATUS,W
     0002 0283                      1-  500     	CLRR	STATUS
     0003 00rr                      1-  501     	MOVAR	SSAVE
     0004 010A                      1-  502     	MOVR	PCHBUF,W
     0005 028A                      1-  503     	CLRR	PCHBUF
     0006 00rr                      1-  504     	MOVAR	PSAVE
     0007 0104                      1-  505     	MOVR	FSR,W
                                    1-  506     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  507     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  508     	MOVR	STK00,W
                                    1-  509     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  510     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  511     	MOVR	STK01,W
                                    1-  512     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  513     	MOVAR	___sdcc_saved_stk01
                                    1-  514     	.line	109, "main.c"; 	if(INTFbits.T1IF)
     0010 09rr                      1-  515     	BTRSS	_INTFbits,3
     0011 3rrr                      1-  516     	LGOTO	_00121_DS_
                                    1-  517     	.line	111, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR0);	// Clear T0IF flag bit	
     0012 21FE                      1-  518     	MOVIA	0xfe
     0013 00rr                      1-  519     	MOVAR	_INTF
                                    1-  520     	.line	112, "main.c"; 	TMR1 = 0x17;							// 0.1ms中断一次 23 * (16*2/8000000) = 0.000092
     0014 2117                      1-  521     	MOVIA	0x17
     0015 00rr                      1-  522     	SFUN	_TMR1
                                    1-  523     	.line	113, "main.c"; 	TMRH = 0x00;
     0016 02rr                      1-  524     	CLRR	_TMRH
                                    1-  525     	.line	114, "main.c"; 	intCount++;
                                    1-  526     	BANKSEL	_intCount
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 05rr                      1-  527     	INCR	_intCount,F
                                    1-  528     	.line	115, "main.c"; 	if(workStep && (!lvdFlag)){
                                    1-  529     	BANKSEL	_workStep
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  530     	MOVR	_workStep,W
     001B 0D03                      1-  531     	BTRSC	STATUS,2
     001C 3rrr                      1-  532     	LGOTO	_00106_DS_
                                    1-  533     	BANKSEL	_lvdFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  534     	MOVR	_lvdFlag,W
     001F 0903                      1-  535     	BTRSS	STATUS,2
     0020 3rrr                      1-  536     	LGOTO	_00106_DS_
                                    1-  537     	.line	116, "main.c"; 	pwmWork();
     0021 2rrr                      1-  538     	LCALL	_pwmWork
                                    1-  539     	.line	117, "main.c"; 	ledWord();
     0022 2rrr                      1-  540     	LCALL	_ledWord
                                    1-  541     	.line	118, "main.c"; 	PORTA &= 0xBF;
     0023 1Frr                      1-  542     	BCR	_PORTA,6
                                    1-  543     	.line	119, "main.c"; 	count3s = 0;
                                    1-  544     	BANKSEL	_count3s
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1-  545     	CLRR	_count3s
     0026 02rr                      1-  546     	CLRR	(_count3s + 1)
     0027                           1-  547     _00106_DS_:
                                    1-  548     	.line	122, "main.c"; 	if(powerFlag)
                                    1-  549     	BANKSEL	_powerFlag
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  550     	MOVR	_powerFlag,W
     0029 0D03                      1-  551     	BTRSC	STATUS,2
     002A 3rrr                      1-  552     	LGOTO	_00116_DS_
                                    1-  553     	.line	124, "main.c"; 	powerLed();
     002B 2rrr                      1-  554     	LCALL	_powerLed
     002C 3rrr                      1-  555     	LGOTO	_00117_DS_
     002D                           1-  556     _00116_DS_:
                                    1-  557     	.line	128, "main.c"; 	if(lvdFlag)
                                    1-  558     	BANKSEL	_lvdFlag
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  559     	MOVR	_lvdFlag,W
     002F 0D03                      1-  560     	BTRSC	STATUS,2
     0030 3rrr                      1-  561     	LGOTO	_00109_DS_
                                    1-  562     	.line	131, "main.c"; 	lvdLed();
     0031 2rrr                      1-  563     	LCALL	_lvdLed
     0032 3rrr                      1-  564     	LGOTO	_00110_DS_
     0033                           1-  565     _00109_DS_:
                                    1-  566     	.line	136, "main.c"; 	lvdTime = 0;
                                    1-  567     	BANKSEL	_lvdTime
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1-  568     	CLRR	_lvdTime
     0035                           1-  569     _00110_DS_:
                                    1-  570     	.line	141, "main.c"; 	if(!workStep)
                                    1-  571     	BANKSEL	_workStep
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1-  572     	MOVR	_workStep,W
     0037 0903                      1-  573     	BTRSS	STATUS,2
     0038 3rrr                      1-  574     	LGOTO	_00117_DS_
                                    1-  575     	.line	143, "main.c"; 	PORTA |= 0x40;
     0039 1Brr                      1-  576     	BSR	_PORTA,6
                                    1-  577     	.line	144, "main.c"; 	count3s++;
                                    1-  578     	BANKSEL	_count3s
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 05rr                      1-  579     	INCR	_count3s,F
     003C 0D03                      1-  580     	BTRSC	STATUS,2
     003D 05rr                      1-  581     	INCR	(_count3s + 1),F
                                    1-  582     	.line	145, "main.c"; 	if(count3s == 30000)
     003E 01rr                      1-  583     	MOVR	_count3s,W
     003F 2430                      1-  584     	XORIA	0x30
     0040 0903                      1-  585     	BTRSS	STATUS,2
     0041 3rrr                      1-  586     	LGOTO	_00117_DS_
     0042 01rr                      1-  587     	MOVR	(_count3s + 1),W
     0043 2475                      1-  588     	XORIA	0x75
     0044 0903                      1-  589     	BTRSS	STATUS,2
     0045 3rrr                      1-  590     	LGOTO	_00117_DS_
                                    1-  591     	.line	147, "main.c"; 	count3s = 0;
     0046 02rr                      1-  592     	CLRR	_count3s
     0047 02rr                      1-  593     	CLRR	(_count3s + 1)
                                    1-  594     	.line	148, "main.c"; 	gotoSleep();
     0048 2rrr                      1-  595     	LCALL	_gotoSleep
     0049                           1-  596     _00117_DS_:
                                    1-  597     	.line	156, "main.c"; 	if(intCount == 100)
                                    1-  598     	BANKSEL	_intCount
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 01rr                      1-  599     	MOVR	_intCount,W
     004B 2464                      1-  600     	XORIA	0x64
     004C 0903                      1-  601     	BTRSS	STATUS,2
     004D 3rrr                      1-  602     	LGOTO	_00121_DS_
                                    1-  603     	.line	158, "main.c"; 	intCount = 0;
     004E 02rr                      1-  604     	CLRR	_intCount
                                    1-  605     	.line	159, "main.c"; 	INTFLAG = 1;
     004F 2101                      1-  606     	MOVIA	0x01
                                    1-  607     	BANKSEL	_INTFLAG
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1-  608     	MOVAR	_INTFLAG
     0052                           1-  609     _00121_DS_:
                                    1-  610     	.line	163, "main.c"; 	if(INTFbits.PABIF)
     0052 08rr                      1-  611     	BTRSS	_INTFbits,1
     0053 3rrr                      1-  612     	LGOTO	_00123_DS_
                                    1-  613     	.line	165, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0054 21FD                      1-  614     	MOVIA	0xfd
     0055 00rr                      1-  615     	MOVAR	_INTF
     0056                           1-  616     _00123_DS_:
                                    1-  617     	.line	170, "main.c"; 	INTF = 0;
     0056 02rr                      1-  618     	CLRR	_INTF
                                    1-  619     	.line	171, "main.c"; 	}
                                    1-  620     	BANKSEL	___sdcc_saved_stk01
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 01rr                      1-  621     	MOVR	___sdcc_saved_stk01,W
     0059 00rr                      1-  622     	MOVAR	STK01
                                    1-  623     	BANKSEL	___sdcc_saved_stk00
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 01rr                      1-  624     	MOVR	___sdcc_saved_stk00,W
     005C 00rr                      1-  625     	MOVAR	STK00
                                    1-  626     	BANKSEL	___sdcc_saved_fsr
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 01rr                      1-  627     	MOVR	___sdcc_saved_fsr,W
     005F 0084                      1-  628     	MOVAR	FSR
     0060 01rr                      1-  629     	MOVR	PSAVE,W
     0061 008A                      1-  630     	MOVAR	PCHBUF
     0062 0283                      1-  631     	CLRR	STATUS
     0063 15rr                      1-  632     	SWAPR	SSAVE,W
     0064 0083                      1-  633     	MOVAR	STATUS
     0065 15rr                      1-  634     	SWAPR	WSAVE,F
     0066 15rr                      1-  635     	SWAPR	WSAVE,W
     0067                           1-  636     END_OF_INTERRUPT:
     0067 0011                      1-  637     	RETIE	
                                    1-  639     ;--------------------------------------------------------
                                    1-  640     ; code
                                    1-  641     ;--------------------------------------------------------
                                    1-  642     ;***
                                    1-  643     ;  pBlock Stats: dbName = M
                                    1-  644     ;***
                                    1-  645     ;has an exit
                                    1-  646     ;functions called:
                                    1-  647     ;   _initSys
                                    1-  648     ;   _gotoSleep
                                    1-  649     ;   _initAD
                                    1-  650     ;   _checkLVD
                                    1-  651     ;   _checkAD
                                    1-  652     ;   _KeyScan
                                    1-  653     ;   _keyRead
                                    1-  654     ;   _nextorSleep
                                    1-  655     ;   _initSys
                                    1-  656     ;   _gotoSleep
                                    1-  657     ;   _initAD
                                    1-  658     ;   _checkLVD
                                    1-  659     ;   _checkAD
                                    1-  660     ;   _KeyScan
                                    1-  661     ;   _keyRead
                                    1-  662     ;   _nextorSleep
                                    1-  663     ;1 compiler assigned register :
                                    1-  664     ;   r0x103A
                                    1-  665     ;; Starting pCode block
                                    1-  666     .segment "code"; module=main, function=_main
     0000                           1-  668     _main:
                                    1-  669     ; 2 exit points
                                    1-  670     	.line	561, "main.c"; 	initSys();
     0000 2rrr                      1-  671     	LCALL	_initSys
                                    1-  672     	.line	562, "main.c"; 	PORTB = 0xFF;
     0001 21FF                      1-  673     	MOVIA	0xff
     0002 00rr                      1-  674     	MOVAR	_PORTB
                                    1-  675     	.line	563, "main.c"; 	PORTA = 0xFF;
     0003 00rr                      1-  676     	MOVAR	_PORTA
                                    1-  677     	.line	564, "main.c"; 	gotoSleep();
     0004 2rrr                      1-  678     	LCALL	_gotoSleep
                                    1-  679     	.line	565, "main.c"; 	initAD();
     0005 2rrr                      1-  680     	LCALL	_initAD
     0006                           1-  681     _00314_DS_:
                                    1-  682     	.line	568, "main.c"; 	CLRWDT();	
     0006 0002                      1-  683     	clrwdt
                                    1-  684     	.line	569, "main.c"; 	if(!INTFLAG)
                                    1-  685     	BANKSEL	_INTFLAG
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1-  686     	MOVR	_INTFLAG,W
     0009 0D03                      1-  687     	BTRSC	STATUS,2
     000A 3rrr                      1-  688     	LGOTO	_00314_DS_
                                    1-  689     	.line	571, "main.c"; 	INTFLAG = 0;
     000B 02rr                      1-  690     	CLRR	_INTFLAG
                                    1-  691     	.line	572, "main.c"; 	if(checkLVD())
     000C 2rrr                      1-  692     	LCALL	_checkLVD
                                    1-  693     	BANKSEL	r0x103A
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1-  694     	MOVAR	r0x103A
     000F 01rr                      1-  695     	MOVR	r0x103A,W
     0010 0D03                      1-  696     	BTRSC	STATUS,2
     0011 3rrr                      1-  697     	LGOTO	_00303_DS_
                                    1-  698     	.line	574, "main.c"; 	if(++lvdCount >= 30)
                                    1-  699     	BANKSEL	_lvdCount
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 05rr                      1-  700     	INCR	_lvdCount,F
                                    1-  701     ;;unsigned compare: left < lit (0x1E=30), size=1
     0014 211E                      1-  702     	MOVIA	0x1e
     0015 04rr                      1-  703     	SUBAR	_lvdCount,W
     0016 0803                      1-  704     	BTRSS	STATUS,0
     0017 3rrr                      1-  705     	LGOTO	_00304_DS_
                                    1-  706     	.line	575, "main.c"; 	lvdFlag = 1;	//电压低电压
     0018 2101                      1-  707     	MOVIA	0x01
                                    1-  708     	BANKSEL	_lvdFlag
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1-  709     	MOVAR	_lvdFlag
     001B 3rrr                      1-  710     	LGOTO	_00304_DS_
     001C                           1-  711     _00303_DS_:
                                    1-  712     	.line	579, "main.c"; 	lvdFlag = 0;	//电压正常
                                    1-  713     	BANKSEL	_lvdFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1-  714     	CLRR	_lvdFlag
                                    1-  715     	.line	580, "main.c"; 	lvdCount = 0;
                                    1-  716     	BANKSEL	_lvdCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 02rr                      1-  717     	CLRR	_lvdCount
     0020                           1-  718     _00304_DS_:
                                    1-  719     	.line	585, "main.c"; 	powerFlag = getbit(PORTB,1);
     0020 01rr                      1-  720     	MOVR	_PORTB,W
     0021 2202                      1-  721     	ANDIA	0x02
     0022 0903                      1-  722     	BTRSS	STATUS,2
     0023 2101                      1-  723     	MOVIA	0x01
                                    1-  724     	BANKSEL	_powerFlag
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1-  725     	MOVAR	_powerFlag
                                    1-  726     	.line	587, "main.c"; 	powerFullFlag = getbit(PORTB,0);
     0026 01rr                      1-  727     	MOVR	_PORTB,W
     0027 2201                      1-  728     	ANDIA	0x01
                                    1-  729     	BANKSEL	_powerFullFlag
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 00rr                      1-  730     	MOVAR	_powerFullFlag
                                    1-  731     	.line	589, "main.c"; 	checkAD();
     002A 2rrr                      1-  732     	LCALL	_checkAD
                                    1-  733     	.line	591, "main.c"; 	KeyStatus = KeyScan() & 0x1F;	// Get PB4 ~ PB0 Key Status
     002B 2rrr                      1-  734     	LCALL	_KeyScan
                                    1-  735     	BANKSEL	r0x103A
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1-  736     	MOVAR	r0x103A
     002E 211F                      1-  737     	MOVIA	0x1f
     002F 10rr                      1-  738     	ANDAR	r0x103A,W
                                    1-  739     	BANKSEL	_KeyStatus
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 00rr                      1-  740     	MOVAR	_KeyStatus
                                    1-  741     	.line	592, "main.c"; 	if(keyRead())
     0032 2rrr                      1-  742     	LCALL	_keyRead
                                    1-  743     	BANKSEL	r0x103A
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1-  744     	MOVAR	r0x103A
     0035 01rr                      1-  745     	MOVR	r0x103A,W
     0036 0D03                      1-  746     	BTRSC	STATUS,2
     0037 3rrr                      1-  747     	LGOTO	_00314_DS_
                                    1-  748     	.line	595, "main.c"; 	nextorSleep();
     0038 2rrr                      1-  749     	LCALL	_nextorSleep
                                    1-  750     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1-  751     	.line	598, "main.c"; 	switch(workStep)
     0039 2101                      1-  752     	MOVIA	0x01
                                    1-  753     	BANKSEL	_workStep
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 04rr                      1-  754     	SUBAR	_workStep,W
     003C 0803                      1-  755     	BTRSS	STATUS,0
     003D 3rrr                      1-  756     	LGOTO	_00314_DS_
                                    1-  757     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  758     ;;unsigned compare: left >= lit (0x6=6), size=1
     003E 2106                      1-  759     	MOVIA	0x06
     003F 04rr                      1-  760     	SUBAR	_workStep,W
     0040 0C03                      1-  761     	BTRSC	STATUS,0
     0041 3rrr                      1-  762     	LGOTO	_00314_DS_
     0042 06rr                      1-  763     	DECR	_workStep,W
                                    1-  764     	BANKSEL	r0x103A
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 00rr                      1-  765     	MOVAR	r0x103A
     0045 21rr                      1-  766     	MOVIA	((_00342_DS_ >> 8) & 0xff)
     0046 008A                      1-  767     	MOVAR	PCHBUF
     0047 01rr                      1-  768     	MOVR	r0x103A,W
     0048 25rr                      1-  769     	ADDIA	_00342_DS_
     0049 0C03                      1-  770     	BTRSC	STATUS,0
     004A 058A                      1-  771     	INCR	PCHBUF,F
     004B 0082                      1-  772     	MOVAR	PCL
     004C                           1-  773     _00342_DS_:
     004C 3rrr                      1-  774     	LGOTO	_00305_DS_
     004D 3rrr                      1-  775     	LGOTO	_00306_DS_
     004E 3rrr                      1-  776     	LGOTO	_00307_DS_
     004F 3rrr                      1-  777     	LGOTO	_00308_DS_
     0050 3rrr                      1-  778     	LGOTO	_00309_DS_
     0051                           1-  779     _00305_DS_:
                                    1-  780     	.line	601, "main.c"; 	pwmwaitTime = 4;
     0051 2104                      1-  781     	MOVIA	0x04
                                    1-  782     	BANKSEL	_pwmwaitTime
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 00rr                      1-  783     	MOVAR	_pwmwaitTime
                                    1-  784     	.line	602, "main.c"; 	pwmLmax = pwm2Lmax = 15;
     0054 210F                      1-  785     	MOVIA	0x0f
                                    1-  786     	BANKSEL	_pwm2Lmax
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 00rr                      1-  787     	MOVAR	_pwm2Lmax
                                    1-  788     	BANKSEL	_pwmLmax
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1-  789     	MOVAR	_pwmLmax
                                    1-  790     	.line	603, "main.c"; 	break;
     0059 3rrr                      1-  791     	LGOTO	_00314_DS_
     005A                           1-  792     _00306_DS_:
                                    1-  793     	.line	605, "main.c"; 	pwmwaitTime = 5;
     005A 2105                      1-  794     	MOVIA	0x05
                                    1-  795     	BANKSEL	_pwmwaitTime
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 00rr                      1-  796     	MOVAR	_pwmwaitTime
                                    1-  797     	.line	606, "main.c"; 	pwmLmax = pwm2Lmax = 11;
     005D 210B                      1-  798     	MOVIA	0x0b
                                    1-  799     	BANKSEL	_pwm2Lmax
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 00rr                      1-  800     	MOVAR	_pwm2Lmax
                                    1-  801     	BANKSEL	_pwmLmax
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 00rr                      1-  802     	MOVAR	_pwmLmax
                                    1-  803     	.line	607, "main.c"; 	break;
     0062 3rrr                      1-  804     	LGOTO	_00314_DS_
     0063                           1-  805     _00307_DS_:
                                    1-  806     	.line	609, "main.c"; 	pwmwaitTime = 6;
     0063 2106                      1-  807     	MOVIA	0x06
                                    1-  808     	BANKSEL	_pwmwaitTime
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 00rr                      1-  809     	MOVAR	_pwmwaitTime
                                    1-  810     	.line	610, "main.c"; 	pwmLmax = pwm2Lmax = 16;
     0066 2110                      1-  811     	MOVIA	0x10
                                    1-  812     	BANKSEL	_pwm2Lmax
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1-  813     	MOVAR	_pwm2Lmax
                                    1-  814     	BANKSEL	_pwmLmax
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 00rr                      1-  815     	MOVAR	_pwmLmax
                                    1-  816     	.line	611, "main.c"; 	break;
     006B 3rrr                      1-  817     	LGOTO	_00314_DS_
     006C                           1-  818     _00308_DS_:
                                    1-  819     	.line	613, "main.c"; 	pwmwaitTime = 7;
     006C 2107                      1-  820     	MOVIA	0x07
                                    1-  821     	BANKSEL	_pwmwaitTime
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 00rr                      1-  822     	MOVAR	_pwmwaitTime
                                    1-  823     	.line	614, "main.c"; 	pwmLmax = pwm2Lmax = 10;
     006F 210A                      1-  824     	MOVIA	0x0a
                                    1-  825     	BANKSEL	_pwm2Lmax
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 00rr                      1-  826     	MOVAR	_pwm2Lmax
                                    1-  827     	BANKSEL	_pwmLmax
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 00rr                      1-  828     	MOVAR	_pwmLmax
                                    1-  829     	.line	615, "main.c"; 	break;
     0074 3rrr                      1-  830     	LGOTO	_00314_DS_
     0075                           1-  831     _00309_DS_:
                                    1-  832     	.line	617, "main.c"; 	pwmwaitTime = 11;
     0075 210B                      1-  833     	MOVIA	0x0b
                                    1-  834     	BANKSEL	_pwmwaitTime
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 00rr                      1-  835     	MOVAR	_pwmwaitTime
                                    1-  836     	.line	618, "main.c"; 	pwmLmax = pwm2Lmax = 8;
     0078 2108                      1-  837     	MOVIA	0x08
                                    1-  838     	BANKSEL	_pwm2Lmax
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 00rr                      1-  839     	MOVAR	_pwm2Lmax
                                    1-  840     	BANKSEL	_pwmLmax
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 00rr                      1-  841     	MOVAR	_pwmLmax
                                    1-  842     	.line	620, "main.c"; 	}
     007D 3rrr                      1-  843     	LGOTO	_00314_DS_
                                    1-  844     	.line	627, "main.c"; 	}
                                    1-  845     	RETURN	
     007E 0010                      3-   26 m1      ret
                                    1-  846     ; exit point of _main
                                    1-  848     ;***
                                    1-  849     ;  pBlock Stats: dbName = C
                                    1-  850     ;***
                                    1-  851     ;has an exit
                                    1-  852     ;functions called:
                                    1-  853     ;   _F_AIN1_Convert
                                    1-  854     ;   _gotoSleep
                                    1-  855     ;   _F_AIN1_Convert
                                    1-  856     ;   _gotoSleep
                                    1-  857     ;4 compiler assigned registers:
                                    1-  858     ;   r0x102E
                                    1-  859     ;   r0x102F
                                    1-  860     ;   r0x1030
                                    1-  861     ;   r0x1031
                                    1-  862     ;; Starting pCode block
                                    1-  863     .segment "code"; module=main, function=_checkAD
     0000                           1-  865     _checkAD:
                                    1-  866     ; 2 exit points
                                    1-  867     	.line	779, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;            
                                    1-  868     	BANKSEL	_R_AIN1_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  869     	CLRR	_R_AIN1_DATA_LB
                                    1-  870     	BANKSEL	_R_AIN1_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  871     	CLRR	_R_AIN1_DATA
     0004 02rr                      1-  872     	CLRR	(_R_AIN1_DATA + 1)
                                    1-  873     	.line	781, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  874     	MOVIA	0x08
     0006 2rrr                      1-  875     	LCALL	_F_AIN1_Convert
                                    1-  876     	.line	783, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  877     	BANKSEL	_R_AIN1_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1-  878     	SWAPR	(_R_AIN1_DATA + 1),W
     0009 22F0                      1-  879     	ANDIA	0xf0
     000A 00rr                      1-  880     	MOVAR	(_R_AIN1_DATA + 1)
     000B 15rr                      1-  881     	SWAPR	_R_AIN1_DATA,W
     000C 00rr                      1-  882     	MOVAR	_R_AIN1_DATA
     000D 220F                      1-  883     	ANDIA	0x0f
     000E 11rr                      1-  884     	IORAR	(_R_AIN1_DATA + 1),F
     000F 12rr                      1-  885     	XORAR	_R_AIN1_DATA,F
                                    1-  886     	.line	785, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  887     	MOVIA	0xf0
                                    1-  888     	BANKSEL	_R_AIN1_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1-  889     	ANDAR	_R_AIN1_DATA_LB,F
                                    1-  890     	.line	787, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  891     	MOVR	_R_AIN1_DATA_LB,W
                                    1-  892     	BANKSEL	r0x1030
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1-  893     	MOVAR	r0x1030
                                    1-  894     ;;1	MOVAR	r0x102E
                                    1-  895     ;;1	CLRR	r0x102F
                                    1-  896     ;;102	MOVR	r0x102E,W
     0016 2100                      1-  897     	MOVIA	0x00
                                    1-  898     	BANKSEL	r0x1031
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1-  899     	MOVAR	r0x1031
                                    1-  900     	BANKSEL	r0x1030
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  901     	MOVR	r0x1030,W
                                    1-  902     	BANKSEL	_R_AIN1_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1-  903     	ADDAR	_R_AIN1_DATA,F
                                    1-  904     	BANKSEL	r0x1031
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  905     	MOVR	r0x1031,W
     001F 0C03                      1-  906     	BTRSC	STATUS,0
     0020 05rr                      1-  907     	INCR	r0x1031,W
     0021 0D03                      1-  908     	BTRSC	STATUS,2
     0022 3rrr                      1-  909     	LGOTO	_00001_DS_
                                    1-  910     	BANKSEL	_R_AIN1_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1-  911     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1-  912     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  913     _00001_DS_:
                                    1-  914     	.line	789, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1-  915     	BCR	STATUS,0
                                    1-  916     	BANKSEL	_R_AIN1_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1-  917     	RRR	(_R_AIN1_DATA + 1),F
     0028 13rr                      1-  918     	RRR	_R_AIN1_DATA,F
                                    1-  919     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  920     	BCR	STATUS,0
     002A 13rr                      1-  921     	RRR	(_R_AIN1_DATA + 1),F
     002B 13rr                      1-  922     	RRR	_R_AIN1_DATA,F
                                    1-  923     ;;shiftRight_Left2ResultLit:5586: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  924     	BCR	STATUS,0
     002D 13rr                      1-  925     	RRR	(_R_AIN1_DATA + 1),F
     002E 13rr                      1-  926     	RRR	_R_AIN1_DATA,F
                                    1-  927     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  928     ;;unsigned compare: left >= lit (0x21D=541), size=2
                                    1-  929     	.line	793, "main.c"; 	if(R_AIN1_DATA > 540)			//电流大于1.2A     (1.2*0.22/2)*4096  = 540
     002F 2102                      1-  930     	MOVIA	0x02
     0030 04rr                      1-  931     	SUBAR	(_R_AIN1_DATA + 1),W
     0031 0903                      1-  932     	BTRSS	STATUS,2
     0032 3rrr                      1-  933     	LGOTO	_00419_DS_
     0033 211D                      1-  934     	MOVIA	0x1d
     0034 04rr                      1-  935     	SUBAR	_R_AIN1_DATA,W
     0035                           1-  936     _00419_DS_:
     0035 0803                      1-  937     	BTRSS	STATUS,0
     0036 3rrr                      1-  938     	LGOTO	_00409_DS_
                                    1-  939     	.line	796, "main.c"; 	if(++adCount >= 20)
                                    1-  940     	BANKSEL	_adCount
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 05rr                      1-  941     	INCR	_adCount,F
                                    1-  942     ;;unsigned compare: left < lit (0x14=20), size=1
     0039 2114                      1-  943     	MOVIA	0x14
     003A 04rr                      1-  944     	SUBAR	_adCount,W
     003B 0803                      1-  945     	BTRSS	STATUS,0
     003C 3rrr                      1-  946     	LGOTO	_00411_DS_
                                    1-  947     	.line	798, "main.c"; 	adCount = 0;
     003D 02rr                      1-  948     	CLRR	_adCount
                                    1-  949     	.line	799, "main.c"; 	gotoSleep();
     003E 2rrr                      1-  950     	LCALL	_gotoSleep
     003F 3rrr                      1-  951     	LGOTO	_00411_DS_
     0040                           1-  952     _00409_DS_:
                                    1-  953     	.line	805, "main.c"; 	adCount = 0;
                                    1-  954     	BANKSEL	_adCount
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 02rr                      1-  955     	CLRR	_adCount
     0042                           1-  956     _00411_DS_:
                                    1-  957     	.line	808, "main.c"; 	}
                                    1-  958     	RETURN	
     0042 0010                      3-   26 m1      ret
                                    1-  959     ; exit point of _checkAD
                                    1-  961     ;***
                                    1-  962     ;  pBlock Stats: dbName = C
                                    1-  963     ;***
                                    1-  964     ;has an exit
                                    1-  965     ;; Starting pCode block
                                    1-  966     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  968     _F_wait_eoc:
                                    1-  969     ; 2 exit points
     0000                           1-  970     _00401_DS_:
                                    1-  971     	.line	768, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  972     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  973     	LGOTO	_00401_DS_
                                    1-  974     	.line	772, "main.c"; 	}
                                    1-  975     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  976     ; exit point of _F_wait_eoc
                                    1-  978     ;***
                                    1-  979     ;  pBlock Stats: dbName = C
                                    1-  980     ;***
                                    1-  981     ;has an exit
                                    1-  982     ;functions called:
                                    1-  983     ;   _F_wait_eoc
                                    1-  984     ;   _F_wait_eoc
                                    1-  985     ;6 compiler assigned registers:
                                    1-  986     ;   r0x1028
                                    1-  987     ;   r0x1029
                                    1-  988     ;   r0x102A
                                    1-  989     ;   r0x102B
                                    1-  990     ;   r0x102C
                                    1-  991     ;   r0x102D
                                    1-  992     ;; Starting pCode block
                                    1-  993     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1-  995     ;local variable name mapping:
     0000                           1-  998     _F_AIN1_Convert:
                                    1-  999     ; 2 exit points
                                    1- 1000     	.line	739, "main.c"; 	void F_AIN1_Convert(char count)
                                    1- 1001     	BANKSEL	r0x1028
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1002     	MOVAR	r0x1028
                                    1- 1003     	.line	742, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
                                    1- 1004     	BANKSEL	_R_AIN1_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1005     	CLRR	_R_AIN1_DATA_LB
                                    1- 1006     	BANKSEL	_R_AIN1_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1007     	CLRR	_R_AIN1_DATA
     0006 02rr                      1- 1008     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1009     	.line	746, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN0(PA0) pad as ADC input
     0007 2191                      1- 1010     	MOVIA	0x91
     0008 00rr                      1- 1011     	MOVAR	_ADMD
                                    1- 1012     	.line	748, "main.c"; 	for(i=1;i<=count;i++)
     0009 2101                      1- 1013     	MOVIA	0x01
                                    1- 1014     	BANKSEL	r0x1029
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1015     	MOVAR	r0x1029
     000C                           1- 1016     _00394_DS_:
                                    1- 1017     	BANKSEL	r0x1029
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 1018     	MOVR	r0x1029,W
                                    1- 1019     	BANKSEL	r0x1028
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 04rr                      1- 1020     	SUBAR	r0x1028,W
     0010 0803                      1- 1021     	BTRSS	STATUS,0
     0011 3rrr                      1- 1022     	LGOTO	_00396_DS_
                                    1- 1023     	.line	752, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0012 1Brr                      1- 1024     	BSR	_ADMDbits,6
                                    1- 1025     	.line	754, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0013 2rrr                      1- 1026     	LCALL	_F_wait_eoc
                                    1- 1027     	.line	756, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0014 210F                      1- 1028     	MOVIA	0x0f
     0015 10rr                      1- 1029     	ANDAR	_ADR,W
                                    1- 1030     ;;3	MOVAR	r0x102A
                                    1- 1031     	BANKSEL	_R_AIN1_DATA_LB
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 03rr                      1- 1032     	ADDAR	_R_AIN1_DATA_LB,F
                                    1- 1033     	.line	758, "main.c"; 	R_AIN1_DATA    += ADD; 
     0018 01rr                      1- 1034     	MOVR	_ADD,W
                                    1- 1035     	BANKSEL	r0x102A
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 1036     	MOVAR	r0x102A
                                    1- 1037     ;;1	CLRR	r0x102B
                                    1- 1038     ;;101	MOVR	r0x102A,W
                                    1- 1039     ;;99	MOVAR	r0x102C
     001B 2100                      1- 1040     	MOVIA	0x00
                                    1- 1041     	BANKSEL	r0x102D
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1- 1042     	MOVAR	r0x102D
                                    1- 1043     ;;100	MOVR	r0x102C,W
                                    1- 1044     	BANKSEL	r0x102A
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1045     	MOVR	r0x102A,W
                                    1- 1046     	BANKSEL	_R_AIN1_DATA
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 03rr                      1- 1047     	ADDAR	_R_AIN1_DATA,F
                                    1- 1048     	BANKSEL	r0x102D
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1049     	MOVR	r0x102D,W
     0024 0C03                      1- 1050     	BTRSC	STATUS,0
     0025 05rr                      1- 1051     	INCR	r0x102D,W
     0026 0D03                      1- 1052     	BTRSC	STATUS,2
     0027 3rrr                      1- 1053     	LGOTO	_00002_DS_
                                    1- 1054     	BANKSEL	_R_AIN1_DATA
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 03rr                      1- 1055     	ADDAR	(_R_AIN1_DATA + 1),F
     002A                           1- 1056     _00002_DS_:
                                    1- 1057     	.line	748, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1058     	BANKSEL	r0x1029
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 05rr                      1- 1059     	INCR	r0x1029,F
     002C 3rrr                      1- 1060     	LGOTO	_00394_DS_
     002D                           1- 1061     _00396_DS_:
                                    1- 1062     	.line	762, "main.c"; 	}
                                    1- 1063     	RETURN	
     002D 0010                      3-   26 m1      ret
                                    1- 1064     ; exit point of _F_AIN1_Convert
                                    1- 1066     ;***
                                    1- 1067     ;  pBlock Stats: dbName = C
                                    1- 1068     ;***
                                    1- 1069     ;has an exit
                                    1- 1070     ;functions called:
                                    1- 1071     ;   _delay
                                    1- 1072     ;   _delay
                                    1- 1073     ;1 compiler assigned register :
                                    1- 1074     ;   STK00
                                    1- 1075     ;; Starting pCode block
                                    1- 1076     .segment "code"; module=main, function=_initAD
     0000                           1- 1078     _initAD:
                                    1- 1079     ; 2 exit points
                                    1- 1080     	.line	697, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA1 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2181                      1- 1081     	MOVIA	0x81
     0001 00rr                      1- 1082     	MOVAR	_ADMD
                                    1- 1083     	.line	703, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 02rr                      1- 1084     	CLRR	_ADVREFH
                                    1- 1085     	.line	717, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1086     	MOVIA	0x10
     0004 00rr                      1- 1087     	MOVAR	_ADR
                                    1- 1088     	.line	721, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1089     	MOVIA	0x03
     0006 00rr                      1- 1090     	MOVAR	_ADCR
                                    1- 1091     	.line	725, "main.c"; 	PACON = C_PA1_AIN1;						// Set AIN0(PA0) as pure ADC input for reduce power consumption (SFR "PACON")
     0007 2102                      1- 1092     	MOVIA	0x02
     0008 00rr                      1- 1093     	MOVAR	_PACON
                                    1- 1094     	.line	727, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 1095     	BSR	_ADMDbits,4
                                    1- 1096     	.line	729, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 1097     	MOVIA	0x64
     000B 00rr                      1- 1098     	MOVAR	STK00
     000C 2100                      1- 1099     	MOVIA	0x00
     000D 2rrr                      1- 1100     	LCALL	_delay
                                    1- 1101     	.line	735, "main.c"; 	}
                                    1- 1102     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1103     ; exit point of _initAD
                                    1- 1105     ;***
                                    1- 1106     ;  pBlock Stats: dbName = C
                                    1- 1107     ;***
                                    1- 1108     ;has an exit
                                    1- 1109     ;functions called:
                                    1- 1110     ;   _delay
                                    1- 1111     ;   _delay
                                    1- 1112     ;3 compiler assigned registers:
                                    1- 1113     ;   STK00
                                    1- 1114     ;   r0x1037
                                    1- 1115     ;   r0x1038
                                    1- 1116     ;; Starting pCode block
                                    1- 1117     .segment "code"; module=main, function=_checkLVD
                                    1- 1119     ;local variable name mapping:
     0000                           1- 1121     _checkLVD:
                                    1- 1122     ; 2 exit points
                                    1- 1123     	.line	677, "main.c"; 	PCON1 = C_LVD_2P4V;
     0000 2108                      1- 1124     	MOVIA	0x08
     0001 000r                      1- 1125     	IOST	_PCON1
                                    1- 1126     	.line	678, "main.c"; 	delay(80);
     0002 2150                      1- 1127     	MOVIA	0x50
     0003 00rr                      1- 1128     	MOVAR	STK00
     0004 2100                      1- 1129     	MOVIA	0x00
     0005 2rrr                      1- 1130     	LCALL	_delay
                                    1- 1131     	.line	679, "main.c"; 	if((PCON1 >> 6)&1)
     0006 001r                      1- 1132     	IOSTR	_PCON1
                                    1- 1133     	BANKSEL	r0x1037
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 1134     	MOVAR	r0x1037
     0009 2240                      1- 1135     	ANDIA	0x40
     000A 0903                      1- 1136     	BTRSS	STATUS,2
     000B 2101                      1- 1137     	MOVIA	0x01
                                    1- 1138     	BANKSEL	r0x1038
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1139     	MOVAR	r0x1038
     000E 01rr                      1- 1140     	MOVR	r0x1038,W
     000F 0D03                      1- 1141     	BTRSC	STATUS,2
     0010 3rrr                      1- 1142     	LGOTO	_00382_DS_
                                    1- 1143     	.line	681, "main.c"; 	lvdFlag = 0;
                                    1- 1144     	BANKSEL	r0x1037
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 02rr                      1- 1145     	CLRR	r0x1037
     0013 3rrr                      1- 1146     	LGOTO	_00383_DS_
     0014                           1- 1147     _00382_DS_:
                                    1- 1148     	.line	685, "main.c"; 	lvdFlag = 1;
     0014 2101                      1- 1149     	MOVIA	0x01
                                    1- 1150     	BANKSEL	r0x1037
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 00rr                      1- 1151     	MOVAR	r0x1037
     0017                           1- 1152     _00383_DS_:
                                    1- 1153     	.line	687, "main.c"; 	return lvdFlag;
                                    1- 1154     	BANKSEL	r0x1037
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1- 1155     	MOVR	r0x1037,W
                                    1- 1156     	.line	688, "main.c"; 	}
                                    1- 1157     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1- 1158     ; exit point of _checkLVD
                                    1- 1160     ;***
                                    1- 1161     ;  pBlock Stats: dbName = C
                                    1- 1162     ;***
                                    1- 1163     ;has an exit
                                    1- 1164     ;6 compiler assigned registers:
                                    1- 1165     ;   r0x1032
                                    1- 1166     ;   STK00
                                    1- 1167     ;   r0x1033
                                    1- 1168     ;   r0x1034
                                    1- 1169     ;   r0x1035
                                    1- 1170     ;   r0x1036
                                    1- 1171     ;; Starting pCode block
                                    1- 1172     .segment "code"; module=main, function=_delay
                                    1- 1174     ;local variable name mapping:
     0000                           1- 1179     _delay:
                                    1- 1180     ; 2 exit points
                                    1- 1181     	.line	662, "main.c"; 	void delay(int count)
                                    1- 1182     	BANKSEL	r0x1032
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1183     	MOVAR	r0x1032
     0002 01rr                      1- 1184     	MOVR	STK00,W
                                    1- 1185     	BANKSEL	r0x1033
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1186     	MOVAR	r0x1033
                                    1- 1187     	.line	665, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1- 1188     	MOVIA	0x01
                                    1- 1189     	BANKSEL	r0x1034
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1190     	MOVAR	r0x1034
                                    1- 1191     	BANKSEL	r0x1035
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 1192     	CLRR	r0x1035
     000A                           1- 1193     _00365_DS_:
                                    1- 1194     	BANKSEL	r0x1032
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1195     	MOVR	r0x1032,W
     000C 2580                      1- 1196     	ADDIA	0x80
                                    1- 1197     	BANKSEL	r0x1036
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1198     	MOVAR	r0x1036
                                    1- 1199     	BANKSEL	r0x1035
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1200     	MOVR	r0x1035,W
     0011 2580                      1- 1201     	ADDIA	0x80
                                    1- 1202     	BANKSEL	r0x1036
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1203     	SUBAR	r0x1036,W
     0014 0903                      1- 1204     	BTRSS	STATUS,2
     0015 3rrr                      1- 1205     	LGOTO	_00376_DS_
                                    1- 1206     	BANKSEL	r0x1034
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1207     	MOVR	r0x1034,W
                                    1- 1208     	BANKSEL	r0x1033
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1- 1209     	SUBAR	r0x1033,W
     001A                           1- 1210     _00376_DS_:
     001A 0803                      1- 1211     	BTRSS	STATUS,0
     001B 3rrr                      1- 1212     	LGOTO	_00367_DS_
                                    1- 1213     	BANKSEL	r0x1034
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 05rr                      1- 1214     	INCR	r0x1034,F
     001E 0903                      1- 1215     	BTRSS	STATUS,2
     001F 3rrr                      1- 1216     	LGOTO	_00003_DS_
                                    1- 1217     	BANKSEL	r0x1035
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 05rr                      1- 1218     	INCR	r0x1035,F
     0022                           1- 1219     _00003_DS_:
     0022 3rrr                      1- 1220     	LGOTO	_00365_DS_
     0023                           1- 1221     _00367_DS_:
                                    1- 1222     	.line	667, "main.c"; 	}
                                    1- 1223     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1- 1224     ; exit point of _delay
                                    1- 1226     ;***
                                    1- 1227     ;  pBlock Stats: dbName = C
                                    1- 1228     ;***
                                    1- 1229     ;has an exit
                                    1- 1230     ;; Starting pCode block
                                    1- 1231     .segment "code"; module=main, function=_keyRead
     0000                           1- 1233     _keyRead:
                                    1- 1234     ; 2 exit points
                                    1- 1235     	.line	644, "main.c"; 	if (KeyStatus & 0x1)
                                    1- 1236     	BANKSEL	_KeyStatus
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 08rr                      1- 1237     	BTRSS	_KeyStatus,0
     0002 3rrr                      1- 1238     	LGOTO	_00356_DS_
                                    1- 1239     	.line	646, "main.c"; 	keyCount++;
                                    1- 1240     	BANKSEL	_keyCount
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 05rr                      1- 1241     	INCR	_keyCount,F
                                    1- 1242     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1- 1243     	.line	647, "main.c"; 	if(keyCount >= 10)
     0005 210A                      1- 1244     	MOVIA	0x0a
     0006 04rr                      1- 1245     	SUBAR	_keyCount,W
     0007 0803                      1- 1246     	BTRSS	STATUS,0
     0008 3rrr                      1- 1247     	LGOTO	_00357_DS_
                                    1- 1248     	.line	648, "main.c"; 	keyCount = 10;
     0009 210A                      1- 1249     	MOVIA	0x0a
     000A 00rr                      1- 1250     	MOVAR	_keyCount
     000B 3rrr                      1- 1251     	LGOTO	_00357_DS_
                                    1- 1252     ;;unsigned compare: left < lit (0xA=10), size=1
     000C                           1- 1253     _00356_DS_:
                                    1- 1254     	.line	652, "main.c"; 	if(keyCount >= 10)
     000C 210A                      1- 1255     	MOVIA	0x0a
                                    1- 1256     	BANKSEL	_keyCount
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 04rr                      1- 1257     	SUBAR	_keyCount,W
     000F 0803                      1- 1258     	BTRSS	STATUS,0
     0010 3rrr                      1- 1259     	LGOTO	_00354_DS_
                                    1- 1260     	.line	654, "main.c"; 	keyCount = 0;
     0011 02rr                      1- 1261     	CLRR	_keyCount
                                    1- 1262     	.line	655, "main.c"; 	return 1;
     0012 2101                      1- 1263     	MOVIA	0x01
     0013 3rrr                      1- 1264     	LGOTO	_00358_DS_
     0014                           1- 1265     _00354_DS_:
                                    1- 1266     	.line	657, "main.c"; 	keyCount = 0;
                                    1- 1267     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 02rr                      1- 1268     	CLRR	_keyCount
     0016                           1- 1269     _00357_DS_:
                                    1- 1270     	.line	659, "main.c"; 	return 0;
     0016 2100                      1- 1271     	MOVIA	0x00
     0017                           1- 1272     _00358_DS_:
                                    1- 1273     	.line	660, "main.c"; 	}
                                    1- 1274     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 1275     ; exit point of _keyRead
                                    1- 1277     ;***
                                    1- 1278     ;  pBlock Stats: dbName = C
                                    1- 1279     ;***
                                    1- 1280     ;has an exit
                                    1- 1281     ;1 compiler assigned register :
                                    1- 1282     ;   r0x1039
                                    1- 1283     ;; Starting pCode block
                                    1- 1284     .segment "code"; module=main, function=_KeyScan
                                    1- 1286     ;local variable name mapping:
     0000                           1- 1288     _KeyScan:
                                    1- 1289     ; 2 exit points
                                    1- 1290     	.line	635, "main.c"; 	KeyStatus = ~PORTA;
     0000 07rr                      1- 1291     	COMR	_PORTA,W
                                    1- 1292     ;;1	MOVAR	r0x1039
                                    1- 1293     	.line	638, "main.c"; 	}
                                    1- 1294     	RETURN	
     0001 0010                      3-   26 m1      ret
                                    1- 1295     ; exit point of _KeyScan
                                    1- 1297     ;***
                                    1- 1298     ;  pBlock Stats: dbName = C
                                    1- 1299     ;***
                                    1- 1300     ;has an exit
                                    1- 1301     ;; Starting pCode block
                                    1- 1302     .segment "code"; module=main, function=_initSys
     0000                           1- 1304     _initSys:
                                    1- 1305     ; 2 exit points
                                    1- 1306     	.line	518, "main.c"; 	IOSTA = C_PA0_Input | C_PA1_Input;	 					//PA0输入模式，其他输出模式
     0000 2103                      1- 1307     	MOVIA	0x03
     0001 000r                      1- 1308     	IOST	_IOSTA
                                    1- 1309     	.line	519, "main.c"; 	IOSTB = C_PB0_Input | C_PB1_Input;		//PB输出模式
     0002 000r                      1- 1310     	IOST	_IOSTB
                                    1- 1311     	.line	520, "main.c"; 	PORTB = 0xFF;                           // PB0、PB1 & PB2 are output High
     0003 21FF                      1- 1312     	MOVIA	0xff
     0004 00rr                      1- 1313     	MOVAR	_PORTB
                                    1- 1314     	.line	521, "main.c"; 	PORTA = 0xFF;						
     0005 00rr                      1- 1315     	MOVAR	_PORTA
                                    1- 1316     	.line	522, "main.c"; 	ABPLCON = 0xDF;							//PB1开启下拉
     0006 21DF                      1- 1317     	MOVIA	0xdf
     0007 00rr                      1- 1318     	MOVAR	_ABPLCON
                                    1- 1319     	.line	523, "main.c"; 	APHCON  = 0xFE;							//PA0开启上拉
     0008 21FE                      1- 1320     	MOVIA	0xfe
     0009 000r                      1- 1321     	IOST	_APHCON
                                    1- 1322     	.line	524, "main.c"; 	BPHCON  = 0x02;							//PB1关闭下拉,PB0打开上拉
     000A 2102                      1- 1323     	MOVIA	0x02
     000B 00rr                      1- 1324     	MOVAR	_BPHCON
                                    1- 1325     	.line	525, "main.c"; 	DISI();
     000C 0013                      1- 1326     	DISI
                                    1- 1327     	.line	527, "main.c"; 	PCON1 = C_TMR0_Dis;						// Disable Timer0
     000D 0200                      1- 1328     	CLRA	
     000E 000r                      1- 1329     	IOST	_PCON1
                                    1- 1330     	.line	535, "main.c"; 	TMRH = 0x00;
     000F 02rr                      1- 1331     	CLRR	_TMRH
                                    1- 1332     	.line	536, "main.c"; 	TMR1 = 0x17;							// Load 0xFF to TMR1 (Initial Timer1 register)
     0010 2117                      1- 1333     	MOVIA	0x17
     0011 00rr                      1- 1334     	SFUN	_TMR1
                                    1- 1335     	.line	538, "main.c"; 	T1CR1 = C_TMR1_Reload | C_TMR1_En;      // Enable Timer1, Initial value reloaded from TMR1, Non-stop mode 
     0012 2103                      1- 1336     	MOVIA	0x03
     0013 00rr                      1- 1337     	SFUN	_T1CR1
                                    1- 1338     	.line	539, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div16;	// Enable Prescaler1, Prescaler1 dividing rate = 1:4, Timer1 clock source is instruction clock
     0014 00rr                      1- 1339     	SFUN	_T1CR2
                                    1- 1340     	.line	542, "main.c"; 	INTE = C_INT_WDT | C_INT_TMR1;	// Enable Timer0、Timer1、WDT overflow interrupt
     0015 2148                      1- 1341     	MOVIA	0x48
     0016 00rr                      1- 1342     	MOVAR	_INTE
                                    1- 1343     	.line	543, "main.c"; 	INTF = 0;
     0017 02rr                      1- 1344     	CLRR	_INTF
                                    1- 1345     	.line	545, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0018 21A8                      1- 1346     	MOVIA	0xa8
     0019 00rr                      1- 1347     	MOVAR	_PCON
                                    1- 1348     	.line	548, "main.c"; 	PCON1 = 0x08;
     001A 2108                      1- 1349     	MOVIA	0x08
     001B 000r                      1- 1350     	IOST	_PCON1
                                    1- 1351     	.line	549, "main.c"; 	ENI();									// Enable all unmasked interrupts										// Enable all unmasked interrupts	
     001C 0004                      1- 1352     	ENI
                                    1- 1353     	.line	551, "main.c"; 	}
                                    1- 1354     	RETURN	
     001D 0010                      3-   26 m1      ret
                                    1- 1355     ; exit point of _initSys
                                    1- 1357     ;***
                                    1- 1358     ;  pBlock Stats: dbName = C
                                    1- 1359     ;***
                                    1- 1360     ;has an exit
                                    1- 1361     ;; Starting pCode block
                                    1- 1362     .segment "code"; module=main, function=_Level3Change
     0000                           1- 1364     _Level3Change:
                                    1- 1365     ; 2 exit points
                                    1- 1366     	.line	419, "main.c"; 	threeStep++;
                                    1- 1367     	BANKSEL	_threeStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1368     	INCR	_threeStep,F
                                    1- 1369     ;;unsigned compare: left < lit (0xC=12), size=1
                                    1- 1370     	.line	420, "main.c"; 	if(threeStep >= 12)
     0002 210C                      1- 1371     	MOVIA	0x0c
     0003 04rr                      1- 1372     	SUBAR	_threeStep,W
     0004 0803                      1- 1373     	BTRSS	STATUS,0
     0005 3rrr                      1- 1374     	LGOTO	_00247_DS_
                                    1- 1375     	.line	422, "main.c"; 	threeStep = 0;
     0006 02rr                      1- 1376     	CLRR	_threeStep
                                    1- 1377     	.line	423, "main.c"; 	threeChangeFlag = ~threeChangeFlag;
                                    1- 1378     	BANKSEL	_threeChangeFlag
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 07rr                      1- 1379     	COMR	_threeChangeFlag,W
     0009 00rr                      1- 1380     	MOVAR	_threeChangeFlag
                                    1- 1381     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1382     ;;unsigned compare: left >= lit (0xC=12), size=1
     000A                           1- 1383     _00247_DS_:
                                    1- 1384     	.line	426, "main.c"; 	switch(threeStep)
     000A 210C                      1- 1385     	MOVIA	0x0c
                                    1- 1386     	BANKSEL	_threeStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1- 1387     	SUBAR	_threeStep,W
     000D 0C03                      1- 1388     	BTRSC	STATUS,0
     000E 3rrr                      1- 1389     	LGOTO	_00260_DS_
     000F 21rr                      1- 1390     	MOVIA	((_00289_DS_ >> 8) & 0xff)
     0010 008A                      1- 1391     	MOVAR	PCHBUF
     0011 01rr                      1- 1392     	MOVR	_threeStep,W
     0012 25rr                      1- 1393     	ADDIA	_00289_DS_
     0013 0C03                      1- 1394     	BTRSC	STATUS,0
     0014 058A                      1- 1395     	INCR	PCHBUF,F
     0015 0082                      1- 1396     	MOVAR	PCL
     0016                           1- 1397     _00289_DS_:
     0016 3rrr                      1- 1398     	LGOTO	_00248_DS_
     0017 3rrr                      1- 1399     	LGOTO	_00249_DS_
     0018 3rrr                      1- 1400     	LGOTO	_00251_DS_
     0019 3rrr                      1- 1401     	LGOTO	_00251_DS_
     001A 3rrr                      1- 1402     	LGOTO	_00253_DS_
     001B 3rrr                      1- 1403     	LGOTO	_00253_DS_
     001C 3rrr                      1- 1404     	LGOTO	_00254_DS_
     001D 3rrr                      1- 1405     	LGOTO	_00255_DS_
     001E 3rrr                      1- 1406     	LGOTO	_00256_DS_
     001F 3rrr                      1- 1407     	LGOTO	_00257_DS_
     0020 3rrr                      1- 1408     	LGOTO	_00258_DS_
     0021 3rrr                      1- 1409     	LGOTO	_00259_DS_
     0022                           1- 1410     _00248_DS_:
                                    1- 1411     	.line	429, "main.c"; 	pwmLmax = 1;
     0022 2101                      1- 1412     	MOVIA	0x01
                                    1- 1413     	BANKSEL	_pwmLmax
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1414     	MOVAR	_pwmLmax
                                    1- 1415     	.line	430, "main.c"; 	pwm2Lmax = 2;
     0025 2102                      1- 1416     	MOVIA	0x02
                                    1- 1417     	BANKSEL	_pwm2Lmax
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1- 1418     	MOVAR	_pwm2Lmax
                                    1- 1419     	.line	431, "main.c"; 	pwmwaitTime = 26;
     0028 211A                      1- 1420     	MOVIA	0x1a
                                    1- 1421     	BANKSEL	_pwmwaitTime
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 00rr                      1- 1422     	MOVAR	_pwmwaitTime
                                    1- 1423     	.line	432, "main.c"; 	break;
     002B 3rrr                      1- 1424     	LGOTO	_00260_DS_
     002C                           1- 1425     _00249_DS_:
                                    1- 1426     	.line	434, "main.c"; 	pwmLmax = 4;
     002C 2104                      1- 1427     	MOVIA	0x04
                                    1- 1428     	BANKSEL	_pwmLmax
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 1429     	MOVAR	_pwmLmax
                                    1- 1430     	.line	435, "main.c"; 	pwm2Lmax = 5;
     002F 2105                      1- 1431     	MOVIA	0x05
                                    1- 1432     	BANKSEL	_pwm2Lmax
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 00rr                      1- 1433     	MOVAR	_pwm2Lmax
                                    1- 1434     	.line	436, "main.c"; 	pwmwaitTime = 24;
     0032 2118                      1- 1435     	MOVIA	0x18
                                    1- 1436     	BANKSEL	_pwmwaitTime
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1- 1437     	MOVAR	_pwmwaitTime
                                    1- 1438     	.line	437, "main.c"; 	break;
     0035 3rrr                      1- 1439     	LGOTO	_00260_DS_
     0036                           1- 1440     _00251_DS_:
                                    1- 1441     	.line	440, "main.c"; 	pwmLmax = 7;
     0036 2107                      1- 1442     	MOVIA	0x07
                                    1- 1443     	BANKSEL	_pwmLmax
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 1444     	MOVAR	_pwmLmax
                                    1- 1445     	.line	441, "main.c"; 	pwm2Lmax = 8;
     0039 2108                      1- 1446     	MOVIA	0x08
                                    1- 1447     	BANKSEL	_pwm2Lmax
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 00rr                      1- 1448     	MOVAR	_pwm2Lmax
                                    1- 1449     	.line	442, "main.c"; 	pwmwaitTime = 12;
     003C 210C                      1- 1450     	MOVIA	0x0c
                                    1- 1451     	BANKSEL	_pwmwaitTime
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 00rr                      1- 1452     	MOVAR	_pwmwaitTime
                                    1- 1453     	.line	443, "main.c"; 	break;
     003F 3rrr                      1- 1454     	LGOTO	_00260_DS_
     0040                           1- 1455     _00253_DS_:
                                    1- 1456     	.line	446, "main.c"; 	pwmLmax = 10;
     0040 210A                      1- 1457     	MOVIA	0x0a
                                    1- 1458     	BANKSEL	_pwmLmax
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 00rr                      1- 1459     	MOVAR	_pwmLmax
                                    1- 1460     	.line	447, "main.c"; 	pwm2Lmax = 8;
     0043 2108                      1- 1461     	MOVIA	0x08
                                    1- 1462     	BANKSEL	_pwm2Lmax
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 00rr                      1- 1463     	MOVAR	_pwm2Lmax
                                    1- 1464     	.line	448, "main.c"; 	pwmwaitTime = 12;
     0046 210C                      1- 1465     	MOVIA	0x0c
                                    1- 1466     	BANKSEL	_pwmwaitTime
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 1467     	MOVAR	_pwmwaitTime
                                    1- 1468     	.line	449, "main.c"; 	break;
     0049 3rrr                      1- 1469     	LGOTO	_00260_DS_
     004A                           1- 1470     _00254_DS_:
                                    1- 1471     	.line	452, "main.c"; 	pwmLmax = 8;
     004A 2108                      1- 1472     	MOVIA	0x08
                                    1- 1473     	BANKSEL	_pwmLmax
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 00rr                      1- 1474     	MOVAR	_pwmLmax
                                    1- 1475     	.line	453, "main.c"; 	pwm2Lmax = 8;
                                    1- 1476     	BANKSEL	_pwm2Lmax
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1- 1477     	MOVAR	_pwm2Lmax
                                    1- 1478     	.line	454, "main.c"; 	pwmwaitTime = 14;
     004F 210E                      1- 1479     	MOVIA	0x0e
                                    1- 1480     	BANKSEL	_pwmwaitTime
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1- 1481     	MOVAR	_pwmwaitTime
                                    1- 1482     	.line	455, "main.c"; 	break;
     0052 3rrr                      1- 1483     	LGOTO	_00260_DS_
     0053                           1- 1484     _00255_DS_:
                                    1- 1485     	.line	457, "main.c"; 	pwmLmax = 8;
     0053 2108                      1- 1486     	MOVIA	0x08
                                    1- 1487     	BANKSEL	_pwmLmax
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 00rr                      1- 1488     	MOVAR	_pwmLmax
                                    1- 1489     	.line	458, "main.c"; 	pwm2Lmax = 8;
                                    1- 1490     	BANKSEL	_pwm2Lmax
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 00rr                      1- 1491     	MOVAR	_pwm2Lmax
                                    1- 1492     	.line	459, "main.c"; 	pwmwaitTime = 14;
     0058 210E                      1- 1493     	MOVIA	0x0e
                                    1- 1494     	BANKSEL	_pwmwaitTime
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 00rr                      1- 1495     	MOVAR	_pwmwaitTime
                                    1- 1496     	.line	460, "main.c"; 	break;
     005B 3rrr                      1- 1497     	LGOTO	_00260_DS_
     005C                           1- 1498     _00256_DS_:
                                    1- 1499     	.line	462, "main.c"; 	pwmLmax = 8;
     005C 2108                      1- 1500     	MOVIA	0x08
                                    1- 1501     	BANKSEL	_pwmLmax
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 00rr                      1- 1502     	MOVAR	_pwmLmax
                                    1- 1503     	.line	463, "main.c"; 	pwm2Lmax = 8;
                                    1- 1504     	BANKSEL	_pwm2Lmax
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 00rr                      1- 1505     	MOVAR	_pwm2Lmax
                                    1- 1506     	.line	464, "main.c"; 	pwmwaitTime = 14;
     0061 210E                      1- 1507     	MOVIA	0x0e
                                    1- 1508     	BANKSEL	_pwmwaitTime
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 00rr                      1- 1509     	MOVAR	_pwmwaitTime
                                    1- 1510     	.line	465, "main.c"; 	break;
     0064 3rrr                      1- 1511     	LGOTO	_00260_DS_
     0065                           1- 1512     _00257_DS_:
                                    1- 1513     	.line	467, "main.c"; 	pwmLmax = 19;
     0065 2113                      1- 1514     	MOVIA	0x13
                                    1- 1515     	BANKSEL	_pwmLmax
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 00rr                      1- 1516     	MOVAR	_pwmLmax
                                    1- 1517     	.line	468, "main.c"; 	pwm2Lmax = 18;
     0068 2112                      1- 1518     	MOVIA	0x12
                                    1- 1519     	BANKSEL	_pwm2Lmax
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 00rr                      1- 1520     	MOVAR	_pwm2Lmax
                                    1- 1521     	.line	469, "main.c"; 	pwmwaitTime = 20;
     006B 2114                      1- 1522     	MOVIA	0x14
                                    1- 1523     	BANKSEL	_pwmwaitTime
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 00rr                      1- 1524     	MOVAR	_pwmwaitTime
                                    1- 1525     	.line	470, "main.c"; 	break;
     006E 3rrr                      1- 1526     	LGOTO	_00260_DS_
     006F                           1- 1527     _00258_DS_:
                                    1- 1528     	.line	472, "main.c"; 	pwmLmax = 14;
     006F 210E                      1- 1529     	MOVIA	0x0e
                                    1- 1530     	BANKSEL	_pwmLmax
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 00rr                      1- 1531     	MOVAR	_pwmLmax
                                    1- 1532     	.line	473, "main.c"; 	pwm2Lmax = 11;
     0072 210B                      1- 1533     	MOVIA	0x0b
                                    1- 1534     	BANKSEL	_pwm2Lmax
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 00rr                      1- 1535     	MOVAR	_pwm2Lmax
                                    1- 1536     	.line	474, "main.c"; 	pwmwaitTime = 20;
     0075 2114                      1- 1537     	MOVIA	0x14
                                    1- 1538     	BANKSEL	_pwmwaitTime
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 00rr                      1- 1539     	MOVAR	_pwmwaitTime
                                    1- 1540     	.line	475, "main.c"; 	break;
     0078 3rrr                      1- 1541     	LGOTO	_00260_DS_
     0079                           1- 1542     _00259_DS_:
                                    1- 1543     	.line	477, "main.c"; 	pwmLmax = 11;
     0079 210B                      1- 1544     	MOVIA	0x0b
                                    1- 1545     	BANKSEL	_pwmLmax
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 00rr                      1- 1546     	MOVAR	_pwmLmax
                                    1- 1547     	.line	478, "main.c"; 	pwm2Lmax = 7;
     007C 2107                      1- 1548     	MOVIA	0x07
                                    1- 1549     	BANKSEL	_pwm2Lmax
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 00rr                      1- 1550     	MOVAR	_pwm2Lmax
                                    1- 1551     	.line	479, "main.c"; 	pwmwaitTime = 34;
     007F 2122                      1- 1552     	MOVIA	0x22
                                    1- 1553     	BANKSEL	_pwmwaitTime
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 00rr                      1- 1554     	MOVAR	_pwmwaitTime
     0082                           1- 1555     _00260_DS_:
                                    1- 1556     	.line	487, "main.c"; 	if(pwmStep)
                                    1- 1557     	BANKSEL	_pwmStep
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 01rr                      1- 1558     	MOVR	_pwmStep,W
     0084 0D03                      1- 1559     	BTRSC	STATUS,2
     0085 3rrr                      1- 1560     	LGOTO	_00268_DS_
                                    1- 1561     	.line	489, "main.c"; 	if(threeChangeFlag)
                                    1- 1562     	BANKSEL	_threeChangeFlag
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 01rr                      1- 1563     	MOVR	_threeChangeFlag,W
     0088 0D03                      1- 1564     	BTRSC	STATUS,2
     0089 3rrr                      1- 1565     	LGOTO	_00262_DS_
                                    1- 1566     	.line	491, "main.c"; 	pwm1L = pwm2Lmax;
                                    1- 1567     	BANKSEL	_pwm2Lmax
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 01rr                      1- 1568     	MOVR	_pwm2Lmax,W
                                    1- 1569     	BANKSEL	_pwm1L
     008C rrrr                      3-   71 m1      .banksel ram_address
     008D 00rr                      1- 1570     	MOVAR	_pwm1L
     008E 3rrr                      1- 1571     	LGOTO	_00263_DS_
     008F                           1- 1572     _00262_DS_:
                                    1- 1573     	.line	495, "main.c"; 	pwm1L = pwmLmax;
                                    1- 1574     	BANKSEL	_pwmLmax
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 01rr                      1- 1575     	MOVR	_pwmLmax,W
                                    1- 1576     	BANKSEL	_pwm1L
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 00rr                      1- 1577     	MOVAR	_pwm1L
     0093                           1- 1578     _00263_DS_:
                                    1- 1579     	.line	497, "main.c"; 	pwmStep = 0;
                                    1- 1580     	BANKSEL	_pwmStep
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 02rr                      1- 1581     	CLRR	_pwmStep
     0095 3rrr                      1- 1582     	LGOTO	_00270_DS_
     0096                           1- 1583     _00268_DS_:
                                    1- 1584     	.line	501, "main.c"; 	if(threeChangeFlag)
                                    1- 1585     	BANKSEL	_threeChangeFlag
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 01rr                      1- 1586     	MOVR	_threeChangeFlag,W
     0098 0D03                      1- 1587     	BTRSC	STATUS,2
     0099 3rrr                      1- 1588     	LGOTO	_00265_DS_
                                    1- 1589     	.line	503, "main.c"; 	pwm2L = pwm2Lmax;
                                    1- 1590     	BANKSEL	_pwm2Lmax
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 01rr                      1- 1591     	MOVR	_pwm2Lmax,W
                                    1- 1592     	BANKSEL	_pwm2L
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 00rr                      1- 1593     	MOVAR	_pwm2L
     009E 3rrr                      1- 1594     	LGOTO	_00266_DS_
     009F                           1- 1595     _00265_DS_:
                                    1- 1596     	.line	507, "main.c"; 	pwm2L = pwmLmax;
                                    1- 1597     	BANKSEL	_pwmLmax
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 01rr                      1- 1598     	MOVR	_pwmLmax,W
                                    1- 1599     	BANKSEL	_pwm2L
     00A1 rrrr                      3-   71 m1      .banksel ram_address
     00A2 00rr                      1- 1600     	MOVAR	_pwm2L
     00A3                           1- 1601     _00266_DS_:
                                    1- 1602     	.line	509, "main.c"; 	pwmStep = 1;
     00A3 2101                      1- 1603     	MOVIA	0x01
                                    1- 1604     	BANKSEL	_pwmStep
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 00rr                      1- 1605     	MOVAR	_pwmStep
     00A6                           1- 1606     _00270_DS_:
                                    1- 1607     	.line	512, "main.c"; 	}
                                    1- 1608     	RETURN	
     00A6 0010                      3-   26 m1      ret
                                    1- 1609     ; exit point of _Level3Change
                                    1- 1611     ;***
                                    1- 1612     ;  pBlock Stats: dbName = C
                                    1- 1613     ;***
                                    1- 1614     ;has an exit
                                    1- 1615     ;functions called:
                                    1- 1616     ;   _Level3Change
                                    1- 1617     ;   _Level3Change
                                    1- 1618     ;; Starting pCode block
                                    1- 1619     .segment "code"; module=main, function=_pwmWork
     0000                           1- 1621     _pwmWork:
                                    1- 1622     ; 2 exit points
                                    1- 1623     	.line	365, "main.c"; 	if(pwm1L)
                                    1- 1624     	BANKSEL	_pwm1L
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1625     	MOVR	_pwm1L,W
     0002 0D03                      1- 1626     	BTRSC	STATUS,2
     0003 3rrr                      1- 1627     	LGOTO	_00239_DS_
                                    1- 1628     	.line	367, "main.c"; 	pwm1L--;
     0004 06rr                      1- 1629     	DECR	_pwm1L,F
                                    1- 1630     	.line	368, "main.c"; 	PORTA &= 0xF7;
     0005 1Drr                      1- 1631     	BCR	_PORTA,3
                                    1- 1632     	.line	369, "main.c"; 	PORTA |= 0x10;
     0006 1Arr                      1- 1633     	BSR	_PORTA,4
                                    1- 1634     	.line	370, "main.c"; 	pwmwait = 0;
                                    1- 1635     	BANKSEL	_pwmwait
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 1636     	CLRR	_pwmwait
                                    1- 1637     	.line	371, "main.c"; 	pwm2L = 0;
                                    1- 1638     	BANKSEL	_pwm2L
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 1639     	CLRR	_pwm2L
     000B 3rrr                      1- 1640     	LGOTO	_00241_DS_
     000C                           1- 1641     _00239_DS_:
                                    1- 1642     	.line	373, "main.c"; 	else if(pwm2L)
                                    1- 1643     	BANKSEL	_pwm2L
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 1644     	MOVR	_pwm2L,W
     000E 0D03                      1- 1645     	BTRSC	STATUS,2
     000F 3rrr                      1- 1646     	LGOTO	_00236_DS_
                                    1- 1647     	.line	376, "main.c"; 	pwm2L--;
     0010 06rr                      1- 1648     	DECR	_pwm2L,F
                                    1- 1649     	.line	377, "main.c"; 	PORTA &= 0xEF;
     0011 1Err                      1- 1650     	BCR	_PORTA,4
                                    1- 1651     	.line	378, "main.c"; 	PORTA |= 0x08;
     0012 19rr                      1- 1652     	BSR	_PORTA,3
                                    1- 1653     	.line	379, "main.c"; 	pwmwait = 0;
                                    1- 1654     	BANKSEL	_pwmwait
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1- 1655     	CLRR	_pwmwait
                                    1- 1656     	.line	380, "main.c"; 	pwm1L = 0;
                                    1- 1657     	BANKSEL	_pwm1L
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 1658     	CLRR	_pwm1L
     0017 3rrr                      1- 1659     	LGOTO	_00241_DS_
     0018                           1- 1660     _00236_DS_:
                                    1- 1661     	.line	384, "main.c"; 	PORTA |= 0x18;
     0018 2118                      1- 1662     	MOVIA	0x18
     0019 11rr                      1- 1663     	IORAR	_PORTA,F
                                    1- 1664     	.line	385, "main.c"; 	if(++pwmwait >= pwmwaitTime)
                                    1- 1665     	BANKSEL	_pwmwait
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 05rr                      1- 1666     	INCR	_pwmwait,F
                                    1- 1667     	BANKSEL	_pwmwaitTime
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 1668     	MOVR	_pwmwaitTime,W
                                    1- 1669     	BANKSEL	_pwmwait
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 1670     	SUBAR	_pwmwait,W
     0020 0803                      1- 1671     	BTRSS	STATUS,0
     0021 3rrr                      1- 1672     	LGOTO	_00241_DS_
                                    1- 1673     	.line	387, "main.c"; 	if(workStep == 3)
                                    1- 1674     	BANKSEL	_workStep
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1675     	MOVR	_workStep,W
     0024 2403                      1- 1676     	XORIA	0x03
     0025 0903                      1- 1677     	BTRSS	STATUS,2
     0026 3rrr                      1- 1678     	LGOTO	_00231_DS_
                                    1- 1679     	.line	389, "main.c"; 	Level3Change();
     0027 2rrr                      1- 1680     	LCALL	_Level3Change
     0028 3rrr                      1- 1681     	LGOTO	_00241_DS_
     0029                           1- 1682     _00231_DS_:
                                    1- 1683     	.line	394, "main.c"; 	if(pwmStep)
                                    1- 1684     	BANKSEL	_pwmStep
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 1685     	MOVR	_pwmStep,W
     002B 0D03                      1- 1686     	BTRSC	STATUS,2
     002C 3rrr                      1- 1687     	LGOTO	_00228_DS_
                                    1- 1688     	.line	396, "main.c"; 	pwm1L = pwmLmax;
                                    1- 1689     	BANKSEL	_pwmLmax
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1- 1690     	MOVR	_pwmLmax,W
                                    1- 1691     	BANKSEL	_pwm1L
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 00rr                      1- 1692     	MOVAR	_pwm1L
                                    1- 1693     	.line	397, "main.c"; 	pwmStep = 0;
                                    1- 1694     	BANKSEL	_pwmStep
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 02rr                      1- 1695     	CLRR	_pwmStep
     0033 3rrr                      1- 1696     	LGOTO	_00241_DS_
     0034                           1- 1697     _00228_DS_:
                                    1- 1698     	.line	401, "main.c"; 	pwm2L = pwm2Lmax;
                                    1- 1699     	BANKSEL	_pwm2Lmax
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1- 1700     	MOVR	_pwm2Lmax,W
                                    1- 1701     	BANKSEL	_pwm2L
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 00rr                      1- 1702     	MOVAR	_pwm2L
                                    1- 1703     	.line	402, "main.c"; 	pwmStep = 1;
     0038 2101                      1- 1704     	MOVIA	0x01
                                    1- 1705     	BANKSEL	_pwmStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 00rr                      1- 1706     	MOVAR	_pwmStep
     003B                           1- 1707     _00241_DS_:
                                    1- 1708     	.line	411, "main.c"; 	}
                                    1- 1709     	RETURN	
     003B 0010                      3-   26 m1      ret
                                    1- 1710     ; exit point of _pwmWork
                                    1- 1712     ;***
                                    1- 1713     ;  pBlock Stats: dbName = C
                                    1- 1714     ;***
                                    1- 1715     ;has an exit
                                    1- 1716     ;; Starting pCode block
                                    1- 1717     .segment "code"; module=main, function=_ledOn
     0000                           1- 1719     _ledOn:
                                    1- 1720     ; 2 exit points
                                    1- 1721     	.line	359, "main.c"; 	PORTB &= 0xF3;
     0000 21F3                      1- 1722     	MOVIA	0xf3
     0001 10rr                      1- 1723     	ANDAR	_PORTB,F
                                    1- 1724     	.line	360, "main.c"; 	PORTA &= 0x5B;
     0002 215B                      1- 1725     	MOVIA	0x5b
     0003 10rr                      1- 1726     	ANDAR	_PORTA,F
                                    1- 1727     	.line	361, "main.c"; 	}
                                    1- 1728     	RETURN	
     0004 0010                      3-   26 m1      ret
                                    1- 1729     ; exit point of _ledOn
                                    1- 1731     ;***
                                    1- 1732     ;  pBlock Stats: dbName = C
                                    1- 1733     ;***
                                    1- 1734     ;has an exit
                                    1- 1735     ;1 compiler assigned register :
                                    1- 1736     ;   r0x103B
                                    1- 1737     ;; Starting pCode block
                                    1- 1738     .segment "code"; module=main, function=_ledOff
     0000                           1- 1740     _ledOff:
                                    1- 1741     ; 2 exit points
                                    1- 1742     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1- 1743     	.line	326, "main.c"; 	switch(workStep)
     0000 2101                      1- 1744     	MOVIA	0x01
                                    1- 1745     	BANKSEL	_workStep
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1746     	SUBAR	_workStep,W
     0003 0803                      1- 1747     	BTRSS	STATUS,0
     0004 3rrr                      1- 1748     	LGOTO	_00208_DS_
                                    1- 1749     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1750     ;;unsigned compare: left >= lit (0x6=6), size=1
     0005 2106                      1- 1751     	MOVIA	0x06
     0006 04rr                      1- 1752     	SUBAR	_workStep,W
     0007 0C03                      1- 1753     	BTRSC	STATUS,0
     0008 3rrr                      1- 1754     	LGOTO	_00208_DS_
     0009 06rr                      1- 1755     	DECR	_workStep,W
                                    1- 1756     	BANKSEL	r0x103B
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1757     	MOVAR	r0x103B
     000C 21rr                      1- 1758     	MOVIA	((_00218_DS_ >> 8) & 0xff)
     000D 008A                      1- 1759     	MOVAR	PCHBUF
     000E 01rr                      1- 1760     	MOVR	r0x103B,W
     000F 25rr                      1- 1761     	ADDIA	_00218_DS_
     0010 0C03                      1- 1762     	BTRSC	STATUS,0
     0011 058A                      1- 1763     	INCR	PCHBUF,F
     0012 0082                      1- 1764     	MOVAR	PCL
     0013                           1- 1765     _00218_DS_:
     0013 3rrr                      1- 1766     	LGOTO	_00202_DS_
     0014 3rrr                      1- 1767     	LGOTO	_00203_DS_
     0015 3rrr                      1- 1768     	LGOTO	_00204_DS_
     0016 3rrr                      1- 1769     	LGOTO	_00205_DS_
     0017 3rrr                      1- 1770     	LGOTO	_00206_DS_
     0018                           1- 1771     _00202_DS_:
                                    1- 1772     	.line	329, "main.c"; 	PORTB &= 0xFB;
     0018 1Drr                      1- 1773     	BCR	_PORTB,2
                                    1- 1774     	.line	330, "main.c"; 	PORTB |= 0x08;
     0019 19rr                      1- 1775     	BSR	_PORTB,3
                                    1- 1776     	.line	331, "main.c"; 	PORTA |= 0xA4;
     001A 21A4                      1- 1777     	MOVIA	0xa4
     001B 11rr                      1- 1778     	IORAR	_PORTA,F
                                    1- 1779     	.line	332, "main.c"; 	break;
     001C 3rrr                      1- 1780     	LGOTO	_00208_DS_
     001D                           1- 1781     _00203_DS_:
                                    1- 1782     	.line	334, "main.c"; 	PORTB &= 0xF7;
     001D 1Drr                      1- 1783     	BCR	_PORTB,3
                                    1- 1784     	.line	335, "main.c"; 	PORTB |= 0x04;
     001E 19rr                      1- 1785     	BSR	_PORTB,2
                                    1- 1786     	.line	336, "main.c"; 	PORTA |= 0xA4;
     001F 21A4                      1- 1787     	MOVIA	0xa4
     0020 11rr                      1- 1788     	IORAR	_PORTA,F
                                    1- 1789     	.line	337, "main.c"; 	break;
     0021 3rrr                      1- 1790     	LGOTO	_00208_DS_
     0022                           1- 1791     _00204_DS_:
                                    1- 1792     	.line	339, "main.c"; 	PORTB |= 0x0C;
     0022 210C                      1- 1793     	MOVIA	0x0c
     0023 11rr                      1- 1794     	IORAR	_PORTB,F
                                    1- 1795     	.line	340, "main.c"; 	PORTA &= 0xFB;
     0024 1Drr                      1- 1796     	BCR	_PORTA,2
                                    1- 1797     	.line	341, "main.c"; 	PORTA |= 0xA0;
     0025 21A0                      1- 1798     	MOVIA	0xa0
     0026 11rr                      1- 1799     	IORAR	_PORTA,F
                                    1- 1800     	.line	342, "main.c"; 	break;
     0027 3rrr                      1- 1801     	LGOTO	_00208_DS_
     0028                           1- 1802     _00205_DS_:
                                    1- 1803     	.line	344, "main.c"; 	PORTB |= 0x0C;
     0028 210C                      1- 1804     	MOVIA	0x0c
     0029 11rr                      1- 1805     	IORAR	_PORTB,F
                                    1- 1806     	.line	345, "main.c"; 	PORTA &= 0xDF;
     002A 1Err                      1- 1807     	BCR	_PORTA,5
                                    1- 1808     	.line	346, "main.c"; 	PORTA |= 0x84;
     002B 2184                      1- 1809     	MOVIA	0x84
     002C 11rr                      1- 1810     	IORAR	_PORTA,F
                                    1- 1811     	.line	347, "main.c"; 	break;
     002D 3rrr                      1- 1812     	LGOTO	_00208_DS_
     002E                           1- 1813     _00206_DS_:
                                    1- 1814     	.line	349, "main.c"; 	PORTB |= 0x0C;
     002E 210C                      1- 1815     	MOVIA	0x0c
     002F 11rr                      1- 1816     	IORAR	_PORTB,F
                                    1- 1817     	.line	350, "main.c"; 	PORTA &= 0x7F;
     0030 1Frr                      1- 1818     	BCR	_PORTA,7
                                    1- 1819     	.line	351, "main.c"; 	PORTA |= 0x24;
     0031 2124                      1- 1820     	MOVIA	0x24
     0032 11rr                      1- 1821     	IORAR	_PORTA,F
     0033                           1- 1822     _00208_DS_:
                                    1- 1823     	.line	355, "main.c"; 	}
                                    1- 1824     	RETURN	
     0033 0010                      3-   26 m1      ret
                                    1- 1825     ; exit point of _ledOff
                                    1- 1827     ;***
                                    1- 1828     ;  pBlock Stats: dbName = C
                                    1- 1829     ;***
                                    1- 1830     ;has an exit
                                    1- 1831     ;functions called:
                                    1- 1832     ;   _ledOff
                                    1- 1833     ;   _ledOn
                                    1- 1834     ;   _ledOff
                                    1- 1835     ;   _ledOff
                                    1- 1836     ;   _ledOff
                                    1- 1837     ;   _ledOn
                                    1- 1838     ;   _ledOff
                                    1- 1839     ;   _ledOff
                                    1- 1840     ;; Starting pCode block
                                    1- 1841     .segment "code"; module=main, function=_ledWord
     0000                           1- 1843     _ledWord:
                                    1- 1844     ; 2 exit points
                                    1- 1845     	.line	276, "main.c"; 	if(ledTime)
                                    1- 1846     	BANKSEL	_ledTime
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1847     	MOVR	_ledTime,W
     0002 0D03                      1- 1848     	BTRSC	STATUS,2
     0003 3rrr                      1- 1849     	LGOTO	_00195_DS_
                                    1- 1850     	.line	279, "main.c"; 	if(ledOffTime)
                                    1- 1851     	BANKSEL	_ledOffTime
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1852     	MOVR	_ledOffTime,W
     0006 11rr                      1- 1853     	IORAR	(_ledOffTime + 1),W
     0007 0D03                      1- 1854     	BTRSC	STATUS,2
     0008 3rrr                      1- 1855     	LGOTO	_00192_DS_
                                    1- 1856     	.line	282, "main.c"; 	ledOff();
     0009 2rrr                      1- 1857     	LCALL	_ledOff
                                    1- 1858     	.line	283, "main.c"; 	ledOffTime--;	//停止闪烁
     000A 21FF                      1- 1859     	MOVIA	0xff
                                    1- 1860     	BANKSEL	_ledOffTime
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 03rr                      1- 1861     	ADDAR	_ledOffTime,F
     000D 0803                      1- 1862     	BTRSS	STATUS,0
     000E 06rr                      1- 1863     	DECR	(_ledOffTime + 1),F
     000F 3rrr                      1- 1864     	LGOTO	_00197_DS_
     0010                           1- 1865     _00192_DS_:
                                    1- 1866     	.line	288, "main.c"; 	if(ledL)
                                    1- 1867     	BANKSEL	_ledL
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1868     	MOVR	_ledL,W
     0012 0D03                      1- 1869     	BTRSC	STATUS,2
     0013 3rrr                      1- 1870     	LGOTO	_00189_DS_
                                    1- 1871     	.line	290, "main.c"; 	ledL--;
     0014 06rr                      1- 1872     	DECR	_ledL,F
                                    1- 1873     	.line	291, "main.c"; 	ledOn();
     0015 2rrr                      1- 1874     	LCALL	_ledOn
                                    1- 1875     	.line	292, "main.c"; 	ledH = ledHmax;
     0016 215A                      1- 1876     	MOVIA	0x5a
                                    1- 1877     	BANKSEL	_ledH
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1878     	MOVAR	_ledH
     0019 3rrr                      1- 1879     	LGOTO	_00197_DS_
     001A                           1- 1880     _00189_DS_:
                                    1- 1881     	.line	296, "main.c"; 	ledH--;
                                    1- 1882     	BANKSEL	_ledH
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 06rr                      1- 1883     	DECR	_ledH,F
                                    1- 1884     	.line	297, "main.c"; 	ledOff();
     001C 2rrr                      1- 1885     	LCALL	_ledOff
                                    1- 1886     	.line	298, "main.c"; 	if(ledH == 0)
                                    1- 1887     	BANKSEL	_ledH
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1888     	MOVR	_ledH,W
     001F 0903                      1- 1889     	BTRSS	STATUS,2
     0020 3rrr                      1- 1890     	LGOTO	_00197_DS_
                                    1- 1891     	.line	300, "main.c"; 	ledL = ledLmax;
     0021 210A                      1- 1892     	MOVIA	0x0a
                                    1- 1893     	BANKSEL	_ledL
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 00rr                      1- 1894     	MOVAR	_ledL
                                    1- 1895     	.line	301, "main.c"; 	ledpwmTime--;
                                    1- 1896     	BANKSEL	_ledpwmTime
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 17rr                      1- 1897     	DECRSZ	_ledpwmTime,F
                                    1- 1898     	.line	302, "main.c"; 	if(ledpwmTime == 0)
     0026 3rrr                      1- 1899     	LGOTO	_00197_DS_
                                    1- 1900     	.line	305, "main.c"; 	ledpwmTime = ledpwmTimemax;
     0027 2132                      1- 1901     	MOVIA	0x32
     0028 00rr                      1- 1902     	MOVAR	_ledpwmTime
                                    1- 1903     	.line	307, "main.c"; 	ledTime--;
                                    1- 1904     	BANKSEL	_ledTime
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 06rr                      1- 1905     	DECR	_ledTime,F
                                    1- 1906     	.line	308, "main.c"; 	ledOffTime = ledOffTimemax;
     002B 2188                      1- 1907     	MOVIA	0x88
                                    1- 1908     	BANKSEL	_ledOffTime
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 1909     	MOVAR	_ledOffTime
     002E 2113                      1- 1910     	MOVIA	0x13
     002F 00rr                      1- 1911     	MOVAR	(_ledOffTime + 1)
     0030 3rrr                      1- 1912     	LGOTO	_00197_DS_
     0031                           1- 1913     _00195_DS_:
                                    1- 1914     	.line	317, "main.c"; 	ledOff();
     0031 2rrr                      1- 1915     	LCALL	_ledOff
     0032                           1- 1916     _00197_DS_:
                                    1- 1917     	.line	319, "main.c"; 	}
                                    1- 1918     	RETURN	
     0032 0010                      3-   26 m1      ret
                                    1- 1919     ; exit point of _ledWord
                                    1- 1921     ;***
                                    1- 1922     ;  pBlock Stats: dbName = C
                                    1- 1923     ;***
                                    1- 1924     ;has an exit
                                    1- 1925     ;functions called:
                                    1- 1926     ;   _initSys
                                    1- 1927     ;   _initSys
                                    1- 1928     ;; Starting pCode block
                                    1- 1929     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1931     _gotoSleep:
                                    1- 1932     ; 2 exit points
                                    1- 1933     	.line	253, "main.c"; 	PORTA = 0xFF;
     0000 21FF                      1- 1934     	MOVIA	0xff
     0001 00rr                      1- 1935     	MOVAR	_PORTA
                                    1- 1936     	.line	254, "main.c"; 	PORTB = 0xFF;
     0002 00rr                      1- 1937     	MOVAR	_PORTB
                                    1- 1938     	.line	255, "main.c"; 	AWUCON = 0x01;
     0003 2101                      1- 1939     	MOVIA	0x01
     0004 00rr                      1- 1940     	MOVAR	_AWUCON
                                    1- 1941     	.line	256, "main.c"; 	BWUCON = 0x03;
     0005 2103                      1- 1942     	MOVIA	0x03
     0006 00rr                      1- 1943     	MOVAR	_BWUCON
                                    1- 1944     	.line	257, "main.c"; 	PACON = 0x00;
     0007 02rr                      1- 1945     	CLRR	_PACON
                                    1- 1946     	.line	258, "main.c"; 	INTE =  C_INT_TMR1 | C_INT_PABKey;
     0008 210A                      1- 1947     	MOVIA	0x0a
     0009 00rr                      1- 1948     	MOVAR	_INTE
                                    1- 1949     	.line	259, "main.c"; 	PCON =  C_LVR_En;	
     000A 2108                      1- 1950     	MOVIA	0x08
     000B 00rr                      1- 1951     	MOVAR	_PCON
                                    1- 1952     	.line	260, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000C 02rr                      1- 1953     	CLRR	_INTF
                                    1- 1954     	.line	261, "main.c"; 	CLRWDT();							// Clear WatchDog
     000D 0002                      1- 1955     	clrwdt
                                    1- 1956     	.line	263, "main.c"; 	UPDATE_REG(PORTA);					// Read PORTB Data buffer
     000E 01rr                      1- 1957     	MOVR	_PORTA,F
                                    1- 1958     	.line	265, "main.c"; 	sleepFlag = 1;
     000F 2101                      1- 1959     	MOVIA	0x01
                                    1- 1960     	BANKSEL	_sleepFlag
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1961     	MOVAR	_sleepFlag
                                    1- 1962     	.line	266, "main.c"; 	SLEEP();
     0012 0001                      1- 1963     	sleep
                                    1- 1964     	.line	267, "main.c"; 	initSys();
     0013 2rrr                      1- 1965     	LCALL	_initSys
                                    1- 1966     	.line	270, "main.c"; 	AWUCON = 0x00;
     0014 02rr                      1- 1967     	CLRR	_AWUCON
                                    1- 1968     	.line	271, "main.c"; 	}
                                    1- 1969     	RETURN	
     0015 0010                      3-   26 m1      ret
                                    1- 1970     ; exit point of _gotoSleep
                                    1- 1972     ;***
                                    1- 1973     ;  pBlock Stats: dbName = C
                                    1- 1974     ;***
                                    1- 1975     ;has an exit
                                    1- 1976     ;functions called:
                                    1- 1977     ;   _gotoSleep
                                    1- 1978     ;   _gotoSleep
                                    1- 1979     ;   _gotoSleep
                                    1- 1980     ;   _gotoSleep
                                    1- 1981     ;; Starting pCode block
                                    1- 1982     .segment "code"; module=main, function=_nextorSleep
     0000                           1- 1984     _nextorSleep:
                                    1- 1985     ; 2 exit points
                                    1- 1986     	.line	215, "main.c"; 	workStep = 0;
                                    1- 1987     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1988     	CLRR	_workStep
                                    1- 1989     	.line	216, "main.c"; 	PORTA = 0xFF;
     0002 21FF                      1- 1990     	MOVIA	0xff
     0003 00rr                      1- 1991     	MOVAR	_PORTA
                                    1- 1992     	.line	217, "main.c"; 	PORTB = 0xFF;
     0004 00rr                      1- 1993     	MOVAR	_PORTB
                                    1- 1994     	.line	218, "main.c"; 	if(sleepFlag || ledTime)
                                    1- 1995     	BANKSEL	_sleepFlag
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 1996     	MOVR	_sleepFlag,W
     0007 0903                      1- 1997     	BTRSS	STATUS,2
     0008 3rrr                      1- 1998     	LGOTO	_00171_DS_
                                    1- 1999     	BANKSEL	_ledTime
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1- 2000     	MOVR	_ledTime,W
     000B 0D03                      1- 2001     	BTRSC	STATUS,2
     000C 3rrr                      1- 2002     	LGOTO	_00172_DS_
     000D                           1- 2003     _00171_DS_:
                                    1- 2004     	.line	220, "main.c"; 	workStep = saveWorkStep;
                                    1- 2005     	BANKSEL	_saveWorkStep
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 2006     	MOVR	_saveWorkStep,W
                                    1- 2007     	BANKSEL	_workStep
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 2008     	MOVAR	_workStep
                                    1- 2009     	.line	221, "main.c"; 	if(!sleepFlag)
                                    1- 2010     	BANKSEL	_sleepFlag
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2011     	MOVR	_sleepFlag,W
     0013 0903                      1- 2012     	BTRSS	STATUS,2
     0014 3rrr                      1- 2013     	LGOTO	_00166_DS_
                                    1- 2014     	.line	223, "main.c"; 	workStep++;
                                    1- 2015     	BANKSEL	_workStep
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1- 2016     	INCR	_workStep,F
     0017 3rrr                      1- 2017     	LGOTO	_00167_DS_
     0018                           1- 2018     _00166_DS_:
                                    1- 2019     	.line	225, "main.c"; 	else if(!workStep)
                                    1- 2020     	BANKSEL	_workStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 2021     	MOVR	_workStep,W
     001A 0D03                      1- 2022     	BTRSC	STATUS,2
                                    1- 2023     	.line	228, "main.c"; 	workStep++;
     001B 05rr                      1- 2024     	INCR	_workStep,F
     001C                           1- 2025     _00167_DS_:
                                    1- 2026     	.line	230, "main.c"; 	sleepFlag = 0;
                                    1- 2027     	BANKSEL	_sleepFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1- 2028     	CLRR	_sleepFlag
                                    1- 2029     	.line	231, "main.c"; 	saveWorkStep = workStep;
                                    1- 2030     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 2031     	MOVR	_workStep,W
                                    1- 2032     	BANKSEL	_saveWorkStep
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 2033     	MOVAR	_saveWorkStep
                                    1- 2034     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 2035     	.line	232, "main.c"; 	if(workStep >= 6)
     0022 2106                      1- 2036     	MOVIA	0x06
                                    1- 2037     	BANKSEL	_workStep
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 04rr                      1- 2038     	SUBAR	_workStep,W
     0025 0803                      1- 2039     	BTRSS	STATUS,0
     0026 3rrr                      1- 2040     	LGOTO	_00169_DS_
                                    1- 2041     	.line	234, "main.c"; 	workStep = 0;
     0027 02rr                      1- 2042     	CLRR	_workStep
                                    1- 2043     	.line	235, "main.c"; 	ledTime = 0;
                                    1- 2044     	BANKSEL	_ledTime
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1- 2045     	CLRR	_ledTime
                                    1- 2046     	.line	236, "main.c"; 	saveWorkStep = 0;
                                    1- 2047     	BANKSEL	_saveWorkStep
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 02rr                      1- 2048     	CLRR	_saveWorkStep
                                    1- 2049     	.line	237, "main.c"; 	gotoSleep();
     002C 2rrr                      1- 2050     	LCALL	_gotoSleep
     002D 3rrr                      1- 2051     	LGOTO	_00175_DS_
     002E                           1- 2052     _00169_DS_:
                                    1- 2053     	.line	241, "main.c"; 	ledTime = ledTimemax;
     002E 2106                      1- 2054     	MOVIA	0x06
                                    1- 2055     	BANKSEL	_ledTime
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 00rr                      1- 2056     	MOVAR	_ledTime
     0031 3rrr                      1- 2057     	LGOTO	_00175_DS_
     0032                           1- 2058     _00172_DS_:
                                    1- 2059     	.line	246, "main.c"; 	gotoSleep();
     0032 2rrr                      1- 2060     	LCALL	_gotoSleep
     0033                           1- 2061     _00175_DS_:
                                    1- 2062     	.line	248, "main.c"; 	}
                                    1- 2063     	RETURN	
     0033 0010                      3-   26 m1      ret
                                    1- 2064     ; exit point of _nextorSleep
                                    1- 2066     ;***
                                    1- 2067     ;  pBlock Stats: dbName = C
                                    1- 2068     ;***
                                    1- 2069     ;has an exit
                                    1- 2070     ;functions called:
                                    1- 2071     ;   _gotoSleep
                                    1- 2072     ;   _gotoSleep
                                    1- 2073     ;; Starting pCode block
                                    1- 2074     .segment "code"; module=main, function=_lvdLed
     0000                           1- 2076     _lvdLed:
                                    1- 2077     ; 2 exit points
                                    1- 2078     	.line	197, "main.c"; 	count250ms++;
                                    1- 2079     	BANKSEL	_count250ms
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 2080     	INCR	_count250ms,F
     0002 0D03                      1- 2081     	BTRSC	STATUS,2
     0003 05rr                      1- 2082     	INCR	(_count250ms + 1),F
                                    1- 2083     ;;unsigned compare: left < lit (0x5DC=1500), size=2
                                    1- 2084     	.line	198, "main.c"; 	if(count250ms >= 1500)
     0004 2105                      1- 2085     	MOVIA	0x05
     0005 04rr                      1- 2086     	SUBAR	(_count250ms + 1),W
     0006 0903                      1- 2087     	BTRSS	STATUS,2
     0007 3rrr                      1- 2088     	LGOTO	_00158_DS_
     0008 21DC                      1- 2089     	MOVIA	0xdc
     0009 04rr                      1- 2090     	SUBAR	_count250ms,W
     000A                           1- 2091     _00158_DS_:
     000A 0803                      1- 2092     	BTRSS	STATUS,0
     000B 3rrr                      1- 2093     	LGOTO	_00150_DS_
                                    1- 2094     	.line	200, "main.c"; 	reversebit(PORTA, 6);
     000C 2140                      1- 2095     	MOVIA	0x40
     000D 12rr                      1- 2096     	XORAR	_PORTA,F
                                    1- 2097     	.line	201, "main.c"; 	count250ms = 0;
                                    1- 2098     	BANKSEL	_count250ms
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 2099     	CLRR	_count250ms
     0010 02rr                      1- 2100     	CLRR	(_count250ms + 1)
                                    1- 2101     	.line	202, "main.c"; 	lvdTime++;
                                    1- 2102     	BANKSEL	_lvdTime
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 05rr                      1- 2103     	INCR	_lvdTime,F
                                    1- 2104     ;;unsigned compare: left < lit (0x1E=30), size=1
                                    1- 2105     	.line	203, "main.c"; 	if(lvdTime >= 30)
     0013 211E                      1- 2106     	MOVIA	0x1e
     0014 04rr                      1- 2107     	SUBAR	_lvdTime,W
     0015 0803                      1- 2108     	BTRSS	STATUS,0
     0016 3rrr                      1- 2109     	LGOTO	_00150_DS_
                                    1- 2110     	.line	205, "main.c"; 	lvdTime = 0;
     0017 02rr                      1- 2111     	CLRR	_lvdTime
                                    1- 2112     	.line	206, "main.c"; 	gotoSleep();
     0018 2rrr                      1- 2113     	LCALL	_gotoSleep
     0019                           1- 2114     _00150_DS_:
                                    1- 2115     	.line	209, "main.c"; 	}
                                    1- 2116     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1- 2117     ; exit point of _lvdLed
                                    1- 2119     ;***
                                    1- 2120     ;  pBlock Stats: dbName = C
                                    1- 2121     ;***
                                    1- 2122     ;has an exit
                                    1- 2123     ;; Starting pCode block
                                    1- 2124     .segment "code"; module=main, function=_powerLed
     0000                           1- 2126     _powerLed:
                                    1- 2127     ; 2 exit points
                                    1- 2128     	.line	176, "main.c"; 	if(powerFullFlag)
                                    1- 2129     	BANKSEL	_powerFullFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2130     	MOVR	_powerFullFlag,W
     0002 0D03                      1- 2131     	BTRSC	STATUS,2
     0003 3rrr                      1- 2132     	LGOTO	_00131_DS_
                                    1- 2133     	.line	179, "main.c"; 	PORTA &= 0xBF;
     0004 1Frr                      1- 2134     	BCR	_PORTA,6
     0005 3rrr                      1- 2135     	LGOTO	_00133_DS_
     0006                           1- 2136     _00131_DS_:
                                    1- 2137     	.line	183, "main.c"; 	count500ms++;
                                    1- 2138     	BANKSEL	_count500ms
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 05rr                      1- 2139     	INCR	_count500ms,F
     0008 0D03                      1- 2140     	BTRSC	STATUS,2
     0009 05rr                      1- 2141     	INCR	(_count500ms + 1),F
                                    1- 2142     ;;unsigned compare: left < lit (0x1388=5000), size=2
                                    1- 2143     	.line	184, "main.c"; 	if(count500ms >= 5000)
     000A 2113                      1- 2144     	MOVIA	0x13
     000B 04rr                      1- 2145     	SUBAR	(_count500ms + 1),W
     000C 0903                      1- 2146     	BTRSS	STATUS,2
     000D 3rrr                      1- 2147     	LGOTO	_00141_DS_
     000E 2188                      1- 2148     	MOVIA	0x88
     000F 04rr                      1- 2149     	SUBAR	_count500ms,W
     0010                           1- 2150     _00141_DS_:
     0010 0803                      1- 2151     	BTRSS	STATUS,0
     0011 3rrr                      1- 2152     	LGOTO	_00133_DS_
                                    1- 2153     	.line	186, "main.c"; 	reversebit(PORTA, 6);
     0012 2140                      1- 2154     	MOVIA	0x40
     0013 12rr                      1- 2155     	XORAR	_PORTA,F
                                    1- 2156     	.line	187, "main.c"; 	count500ms = 0;
                                    1- 2157     	BANKSEL	_count500ms
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 02rr                      1- 2158     	CLRR	_count500ms
     0016 02rr                      1- 2159     	CLRR	(_count500ms + 1)
     0017                           1- 2160     _00133_DS_:
                                    1- 2161     	.line	191, "main.c"; 	}
                                    1- 2162     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 2163     ; exit point of _powerLed
                                    1- 2166     ;	code size estimation:
                                    1- 2167     ;	  742+  191 =   933 instructions ( 2248 byte)
                                    1- 2169     	end
                                    1- 2169     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    00000025
_00002_DS_              Label    0000002A
_00003_DS_              Label    00000022
_00106_DS_              Label    00000027
_00109_DS_              Label    00000033
_00110_DS_              Label    00000035
_00116_DS_              Label    0000002D
_00117_DS_              Label    00000049
_00121_DS_              Label    00000052
_00123_DS_              Label    00000056
_00131_DS_              Label    00000006
_00133_DS_              Label    00000017
_00141_DS_              Label    00000010
_00150_DS_              Label    00000019
_00158_DS_              Label    0000000A
_00166_DS_              Label    00000018
_00167_DS_              Label    0000001C
_00169_DS_              Label    0000002E
_00171_DS_              Label    0000000D
_00172_DS_              Label    00000032
_00175_DS_              Label    00000033
_00189_DS_              Label    0000001A
_00192_DS_              Label    00000010
_00195_DS_              Label    00000031
_00197_DS_              Label    00000032
_00202_DS_              Label    00000018
_00203_DS_              Label    0000001D
_00204_DS_              Label    00000022
_00205_DS_              Label    00000028
_00206_DS_              Label    0000002E
_00208_DS_              Label    00000033
_00218_DS_              Label    00000013
_00228_DS_              Label    00000034
_00231_DS_              Label    00000029
_00236_DS_              Label    00000018
_00239_DS_              Label    0000000C
_00241_DS_              Label    0000003B
_00247_DS_              Label    0000000A
_00248_DS_              Label    00000022
_00249_DS_              Label    0000002C
_00251_DS_              Label    00000036
_00253_DS_              Label    00000040
_00254_DS_              Label    0000004A
_00255_DS_              Label    00000053
_00256_DS_              Label    0000005C
_00257_DS_              Label    00000065
_00258_DS_              Label    0000006F
_00259_DS_              Label    00000079
_00260_DS_              Label    00000082
_00262_DS_              Label    0000008F
_00263_DS_              Label    00000093
_00265_DS_              Label    0000009F
_00266_DS_              Label    000000A3
_00268_DS_              Label    00000096
_00270_DS_              Label    000000A6
_00289_DS_              Label    00000016
_00303_DS_              Label    0000001C
_00304_DS_              Label    00000020
_00305_DS_              Label    00000051
_00306_DS_              Label    0000005A
_00307_DS_              Label    00000063
_00308_DS_              Label    0000006C
_00309_DS_              Label    00000075
_00314_DS_              Label    00000006
_00342_DS_              Label    0000004C
_00354_DS_              Label    00000014
_00356_DS_              Label    0000000C
_00357_DS_              Label    00000016
_00358_DS_              Label    00000017
_00365_DS_              Label    0000000A
_00367_DS_              Label    00000023
_00376_DS_              Label    0000001A
_00382_DS_              Label    00000014
_00383_DS_              Label    00000017
_00394_DS_              Label    0000000C
_00396_DS_              Label    0000002D
_00401_DS_              Label    00000000
_00409_DS_              Label    00000040
_00411_DS_              Label    00000042
_00419_DS_              Label    00000035
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_adCount                Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkAD                Label    00000000
_checkLVD               Label    00000000
_CMPCR                  Label    00000000
_count1000ms            Label    00000000
_count250ms             Label    00000000
_count3s                Label    00000000
_count500ms             Label    00000000
_delay                  Label    00000000
_F_AIN1_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_INTFLAG                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_KeyScan                Label    00000000
_KeyStatus              Label    00000000
_ledH                   Label    00000000
_ledL                   Label    00000000
_ledOff                 Label    00000000
_ledOffTime             Label    00000000
_ledOn                  Label    00000000
_ledpwmTime             Label    00000000
_ledTime                Label    00000000
_ledWord                Label    00000000
_Level3Change           Label    00000000
_lvdCount               Label    00000000
_lvdFlag                Label    00000000
_lvdLed                 Label    00000000
_lvdTime                Label    00000000
_main                   Label    00000000
_nextorSleep            Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_powerFlag              Label    00000000
_powerFullFlag          Label    00000000
_powerLed               Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_pwm1L                  Label    00000000
_PWM2DUTY               Label    00000000
_pwm2L                  Label    00000000
_pwm2Lmax               Label    00000000
_PWM3DUTY               Label    00000000
_pwmHmax                Label    00000000
_pwmLmax                Label    00000000
_pwmStep                Label    00000000
_pwmwait                Label    00000000
_pwmwaitTime            Label    00000000
_pwmWork                Label    00000000
_R_AIN1_DATA            Label    00000000
_R_AIN1_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_saveWorkStep           Label    00000000
_sleepFlag              Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_threeChangeFlag        Label    00000000
_threeStep              Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000067
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102D                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1035                 Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
