
                    Nyquest Technology Co., Ltd.

NYASM 2.25

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A050D,c=on
                                    1-    9     	#include "ny8a050d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTBbits
                                    1-   15     	extern	_PCONbits
                                    1-   16     	extern	_BWUCONbits
                                    1-   17     	extern	_BPLCONbits
                                    1-   18     	extern	_BPHCONbits
                                    1-   19     	extern	_INTEbits
                                    1-   20     	extern	_INTFbits
                                    1-   21     	extern	_INDF
                                    1-   22     	extern	_TMR0
                                    1-   23     	extern	_PCL
                                    1-   24     	extern	_STATUS
                                    1-   25     	extern	_FSR
                                    1-   26     	extern	_PORTB
                                    1-   27     	extern	_PCON
                                    1-   28     	extern	_BWUCON
                                    1-   29     	extern	_PCHBUF
                                    1-   30     	extern	_BPLCON
                                    1-   31     	extern	_BPHCON
                                    1-   32     	extern	_INTE
                                    1-   33     	extern	_INTF
                                    1-   34     	extern	_TBHP
                                    1-   35     	extern	_TBHD
                                    1-   36     	extern	_OSCCR
                                    1-   37     	extern	_IOSTB
                                    1-   38     	extern	_PS0CV
                                    1-   39     	extern	_BODCON
                                    1-   40     	extern	_PCON1
                                    1-   41     	extern	_T0MD
                                    1-   42     	extern	___sdcc_saved_fsr
                                    1-   43     	extern	___sdcc_saved_stk00
                                    1-   44     	extern	___sdcc_saved_stk01
                                    1-   45     	extern	__nyc_ny8_startup
                                    1-   46     ;--------------------------------------------------------
                                    1-   47     ; global declarations
                                    1-   48     ;--------------------------------------------------------
                                    1-   49     	extern	_keyRead
                                    1-   50     	extern	_KeyScan
                                    1-   51     	extern	_Led10
                                    1-   52     	extern	_Led9
                                    1-   53     	extern	_Led8
                                    1-   54     	extern	_Led7
                                    1-   55     	extern	_Led6
                                    1-   56     	extern	_Led5
                                    1-   57     	extern	_Led4
                                    1-   58     	extern	_Led3
                                    1-   59     	extern	_Led2
                                    1-   60     	extern	_Led1
                                    1-   61     	extern	_ledCon
                                    1-   62     	extern	_isr
                                    1-   63     	extern	_main
                                    1-   64     	extern	_delay
                                    1-   65     	extern	_KeyStatus
                                    1-   66     	extern	_intCount
                                    1-   67     	extern	_IntFlag
                                    1-   68     	extern	_keyCount
                                    1-   69     	extern	_workStep
                                    1-   70     	extern	_keyClick
                                    1-   71     	extern	_ledCount
                                    1-   72     	extern	_time
                                    1-   74     	extern PSAVE
                                    1-   75     	extern SSAVE
                                    1-   76     	extern WSAVE
                                    1-   77     	extern STK12
                                    1-   78     	extern STK11
                                    1-   79     	extern STK10
                                    1-   80     	extern STK09
                                    1-   81     	extern STK08
                                    1-   82     	extern STK07
                                    1-   83     	extern STK06
                                    1-   84     	extern STK05
                                    1-   85     	extern STK04
                                    1-   86     	extern STK03
                                    1-   87     	extern STK02
                                    1-   88     	extern STK01
                                    1-   89     	extern STK00
                                    1-   91     .segment "uninit", 0x20000010
 20000010                           1-   92     PSAVE:
                                    1-   93     	.res 1
 20000011                           1-   94     SSAVE:
                                    1-   95     	.res 1
 20000012                           1-   96     WSAVE:
                                    1-   97     	.res 1
 20000013                           1-   98     STK12:
                                    1-   99     	.res 1
 20000014                           1-  100     STK11:
                                    1-  101     	.res 1
 20000015                           1-  102     STK10:
                                    1-  103     	.res 1
 20000016                           1-  104     STK09:
                                    1-  105     	.res 1
 20000017                           1-  106     STK08:
                                    1-  107     	.res 1
 20000018                           1-  108     STK07:
                                    1-  109     	.res 1
 20000019                           1-  110     STK06:
                                    1-  111     	.res 1
 2000001A                           1-  112     STK05:
                                    1-  113     	.res 1
 2000001B                           1-  114     STK04:
                                    1-  115     	.res 1
 2000001C                           1-  116     STK03:
                                    1-  117     	.res 1
 2000001D                           1-  118     STK02:
                                    1-  119     	.res 1
 2000001E                           1-  120     STK01:
                                    1-  121     	.res 1
 2000001F                           1-  122     STK00:
                                    1-  123     	.res 1
                                    1-  125     ;--------------------------------------------------------
                                    1-  126     ; global definitions
                                    1-  127     ;--------------------------------------------------------
                                    1-  128     .segment "uninit"
     0000                           1-  129     _KeyStatus:
                                    1-  130     	.res	1
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     ; absolute symbol definitions
                                    1-  135     ;--------------------------------------------------------
                                    1-  136     ;--------------------------------------------------------
                                    1-  137     ; compiler-defined variables
                                    1-  138     ;--------------------------------------------------------
                                    1-  139     .segment "uninit"
     0000                           1-  140     r0x1011:
                                    1-  141     	.res	1
                                    1-  142     .segment "uninit"
     0000                           1-  143     r0x1010:
                                    1-  144     	.res	1
                                    1-  145     .segment "uninit"
     0000                           1-  146     r0x100C:
                                    1-  147     	.res	1
                                    1-  148     .segment "uninit"
     0000                           1-  149     r0x100B:
                                    1-  150     	.res	1
                                    1-  151     .segment "uninit"
     0000                           1-  152     r0x100D:
                                    1-  153     	.res	1
                                    1-  154     .segment "uninit"
     0000                           1-  155     r0x100E:
                                    1-  156     	.res	1
                                    1-  157     ;--------------------------------------------------------
                                    1-  158     ; initialized data
                                    1-  159     ;--------------------------------------------------------
                                    1-  161     .segment "idata"
     0000                           1-  162     _intCount:
     0000 0000                      1-  163     	dw	0x00
                                    1-  167     .segment "idata"
     0000                           1-  168     _IntFlag:
     0000 0000                      1-  169     	dw	0x00
                                    1-  173     .segment "idata"
     0000                           1-  174     _keyCount:
     0000 0000                      1-  175     	dw	0x00
                                    1-  179     .segment "idata"
     0000                           1-  180     _workStep:
     0000 0001                      1-  181     	dw	0x01
                                    1-  185     .segment "idata"
     0000                           1-  186     _keyClick:
     0000 0000                      1-  187     	dw	0x00
                                    1-  191     .segment "idata"
     0000                           1-  192     _ledCount:
     0000 0000                      1-  193     	dw	0x00
                                    1-  197     .segment "idata"
     0000                           1-  198     _time:
     0000 0000                      1-  199     	dw	0x00
                                    1-  202     ;--------------------------------------------------------
                                    1-  203     ; overlayable items in internal ram 
                                    1-  204     ;--------------------------------------------------------
                                    1-  205     ;	udata_ovr
                                    1-  206     ;--------------------------------------------------------
                                    1-  207     ; reset vector 
                                    1-  208     ;--------------------------------------------------------
                                    1-  209     ORG	0x0000
     0000 3rrr                      1-  210     	LGOTO	__nyc_ny8_startup
                                    1-  211     ;--------------------------------------------------------
                                    1-  212     ; interrupt and initialization code
                                    1-  213     ;--------------------------------------------------------
                                    1-  214     ORG 0x0008
     0008 3rrr                      1-  215     	lgoto	__sdcc_interrupt
                                    1-  217     .segment "code"
     0000                           1-  218     __sdcc_interrupt:
                                    1-  219     ;***
                                    1-  220     ;  pBlock Stats: dbName = I
                                    1-  221     ;***
                                    1-  222     ;2 compiler assigned registers:
                                    1-  223     ;   STK00
                                    1-  224     ;   STK01
                                    1-  225     ;; Starting pCode block
     0000                           1-  226     _isr:
                                    1-  227     ; 0 exit points
                                    1-  228     	.line	44, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  229     	MOVAR	WSAVE
     0001 1503                      1-  230     	SWAPR	STATUS,W
     0002 0283                      1-  231     	CLRR	STATUS
     0003 00rr                      1-  232     	MOVAR	SSAVE
     0004 010A                      1-  233     	MOVR	PCHBUF,W
     0005 028A                      1-  234     	CLRR	PCHBUF
     0006 00rr                      1-  235     	MOVAR	PSAVE
     0007 0104                      1-  236     	MOVR	FSR,W
     0008 00rr                      1-  237     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  238     	MOVR	STK00,W
     000A 00rr                      1-  239     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  240     	MOVR	STK01,W
     000C 00rr                      1-  241     	MOVAR	___sdcc_saved_stk01
                                    1-  242     	.line	47, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  243     	BTRSS	_INTFbits,0
     000E 3rrr                      1-  244     	LGOTO	_00108_DS_
                                    1-  245     	.line	49, "main.c"; 	TMR0 = 55;
     000F 2137                      1-  246     	MOVIA	0x37
     0010 00rr                      1-  247     	MOVAR	_TMR0
                                    1-  248     	.line	50, "main.c"; 	intCount++;
     0011 05rr                      1-  249     	INCR	_intCount,F
                                    1-  250     	.line	51, "main.c"; 	if(intCount == 100)
     0012 01rr                      1-  251     	MOVR	_intCount,W
     0013 2464                      1-  252     	XORIA	0x64
     0014 0903                      1-  253     	BTRSS	STATUS,2
     0015 3rrr                      1-  254     	LGOTO	_00108_DS_
                                    1-  255     	.line	53, "main.c"; 	intCount = 0;
     0016 02rr                      1-  256     	CLRR	_intCount
                                    1-  257     	.line	54, "main.c"; 	IntFlag = 1;
     0017 2101                      1-  258     	MOVIA	0x01
     0018 00rr                      1-  259     	MOVAR	_IntFlag
     0019                           1-  260     _00108_DS_:
                                    1-  261     	.line	58, "main.c"; 	INTF = 0;
     0019 02rr                      1-  262     	CLRR	_INTF
                                    1-  263     	.line	60, "main.c"; 	}
     001A 01rr                      1-  264     	MOVR	___sdcc_saved_stk01,W
     001B 00rr                      1-  265     	MOVAR	STK01
     001C 01rr                      1-  266     	MOVR	___sdcc_saved_stk00,W
     001D 00rr                      1-  267     	MOVAR	STK00
     001E 01rr                      1-  268     	MOVR	___sdcc_saved_fsr,W
     001F 0084                      1-  269     	MOVAR	FSR
     0020 01rr                      1-  270     	MOVR	PSAVE,W
     0021 008A                      1-  271     	MOVAR	PCHBUF
     0022 0283                      1-  272     	CLRR	STATUS
     0023 15rr                      1-  273     	SWAPR	SSAVE,W
     0024 0083                      1-  274     	MOVAR	STATUS
     0025 15rr                      1-  275     	SWAPR	WSAVE,F
     0026 15rr                      1-  276     	SWAPR	WSAVE,W
     0027                           1-  277     END_OF_INTERRUPT:
     0027 0011                      1-  278     	RETIE	
                                    1-  280     ;--------------------------------------------------------
                                    1-  281     ; code
                                    1-  282     ;--------------------------------------------------------
                                    1-  283     ;***
                                    1-  284     ;  pBlock Stats: dbName = M
                                    1-  285     ;***
                                    1-  286     ;has an exit
                                    1-  287     ;functions called:
                                    1-  288     ;   _KeyScan
                                    1-  289     ;   _keyRead
                                    1-  290     ;   _ledCon
                                    1-  291     ;   _KeyScan
                                    1-  292     ;   _keyRead
                                    1-  293     ;   _ledCon
                                    1-  294     ;1 compiler assigned register :
                                    1-  295     ;   r0x1011
                                    1-  296     ;; Starting pCode block
                                    1-  297     .segment "code"; module=main, function=_main
     0000                           1-  299     _main:
                                    1-  300     ; 2 exit points
                                    1-  301     	.line	66, "main.c"; 	IOSTB =   C_PB0_Input;     // Set PB0 & PB1 to input mode,others set to output mode
     0000 2101                      1-  302     	MOVIA	0x01
     0001 000r                      1-  303     	IOST	_IOSTB
                                    1-  304     	.line	67, "main.c"; 	PORTB = 0x00;                           // PB0、PB1 & PB2 are output High
     0002 02rr                      1-  305     	CLRR	_PORTB
                                    1-  306     	.line	68, "main.c"; 	BPLCON = 0xE0;							//PB0拉低
     0003 21E0                      1-  307     	MOVIA	0xe0
     0004 00rr                      1-  308     	MOVAR	_BPLCON
                                    1-  309     	.line	69, "main.c"; 	DISI();
     0005 0013                      1-  310     	DISI
                                    1-  311     	.line	71, "main.c"; 	PCON1 = C_TMR0_Dis;						// Disable Timer0
     0006 0200                      1-  312     	CLRA	
     0007 000r                      1-  313     	IOST	_PCON1
                                    1-  314     	.line	72, "main.c"; 	TMR0 = 55;								// Load 0x00 to TMR0 (Initial Timer0 register)
     0008 2137                      1-  315     	MOVIA	0x37
     0009 00rr                      1-  316     	MOVAR	_TMR0
                                    1-  317     	.line	74, "main.c"; 	T0MD = C_PS0_TMR0 | C_PS0_Div2 ;		// Prescaler0 is assigned to Timer0, Prescaler0 dividing rate = 1:8,clock source is instruction clock
     000A 0200                      1-  318     	CLRA	
     000B 0003                      1-  319     	T0MD	
                                    1-  320     	.line	81, "main.c"; 	INTE = C_INT_TMR0;	// Enable Timer0 interrupt
     000C 2101                      1-  321     	MOVIA	0x01
     000D 00rr                      1-  322     	MOVAR	_INTE
                                    1-  323     	.line	84, "main.c"; 	PCON =  C_LVR_En;				// Enable WDT ,  Enable LVR
     000E 2108                      1-  324     	MOVIA	0x08
     000F 00rr                      1-  325     	MOVAR	_PCON
                                    1-  326     	.line	87, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0010 2101                      1-  327     	MOVIA	0x01
     0011 000r                      1-  328     	IOST	_PCON1
                                    1-  329     	.line	88, "main.c"; 	ENI();									// Enable all unmasked interrupts			
     0012 0004                      1-  330     	ENI
     0013                           1-  331     _00120_DS_:
                                    1-  332     	.line	92, "main.c"; 	CLRWDT();  
     0013 0002                      1-  333     	clrwdt
                                    1-  334     	.line	93, "main.c"; 	if(!IntFlag)
     0014 01rr                      1-  335     	MOVR	_IntFlag,W
     0015 0D03                      1-  336     	BTRSC	STATUS,2
     0016 3rrr                      1-  337     	LGOTO	_00120_DS_
                                    1-  338     	.line	95, "main.c"; 	IntFlag = 0;
     0017 02rr                      1-  339     	CLRR	_IntFlag
                                    1-  340     	.line	97, "main.c"; 	KeyStatus = KeyScan() & 0x1F;
     0018 2rrr                      1-  341     	LCALL	_KeyScan
     0019 00rr                      1-  342     	MOVAR	r0x1011
     001A 211F                      1-  343     	MOVIA	0x1f
     001B 10rr                      1-  344     	ANDAR	r0x1011,W
     001C 00rr                      1-  345     	MOVAR	_KeyStatus
                                    1-  346     	.line	98, "main.c"; 	keyClick = keyRead();
     001D 2rrr                      1-  347     	LCALL	_keyRead
     001E 00rr                      1-  348     	MOVAR	_keyClick
                                    1-  349     	.line	99, "main.c"; 	if(keyClick == 1)
     001F 2401                      1-  350     	XORIA	0x01
     0020 0903                      1-  351     	BTRSS	STATUS,2
     0021 3rrr                      1-  352     	LGOTO	_00118_DS_
                                    1-  353     	.line	101, "main.c"; 	workStep++;
     0022 05rr                      1-  354     	INCR	_workStep,F
                                    1-  355     	.line	102, "main.c"; 	ledCount = 0;
     0023 02rr                      1-  356     	CLRR	_ledCount
                                    1-  357     	.line	103, "main.c"; 	time = 0;
     0024 02rr                      1-  358     	CLRR	_time
                                    1-  359     ;;unsigned compare: left < lit (0xB=11), size=1
                                    1-  360     	.line	104, "main.c"; 	if(workStep >= 11)
     0025 210B                      1-  361     	MOVIA	0x0b
     0026 04rr                      1-  362     	SUBAR	_workStep,W
     0027 0803                      1-  363     	BTRSS	STATUS,0
     0028 3rrr                      1-  364     	LGOTO	_00118_DS_
                                    1-  365     	.line	105, "main.c"; 	workStep = 1;
     0029 2101                      1-  366     	MOVIA	0x01
     002A 00rr                      1-  367     	MOVAR	_workStep
     002B                           1-  368     _00118_DS_:
                                    1-  369     	.line	107, "main.c"; 	ledCon();
     002B 2rrr                      1-  370     	LCALL	_ledCon
     002C 3rrr                      1-  371     	LGOTO	_00120_DS_
                                    1-  372     	.line	109, "main.c"; 	}
                                    1-  373     	RETURN	
     002D 0010                      3-   26 m1      ret
                                    1-  374     ; exit point of _main
                                    1-  376     ;***
                                    1-  377     ;  pBlock Stats: dbName = C
                                    1-  378     ;***
                                    1-  379     ;has an exit
                                    1-  380     ;5 compiler assigned registers:
                                    1-  381     ;   r0x100B
                                    1-  382     ;   STK00
                                    1-  383     ;   r0x100C
                                    1-  384     ;   r0x100D
                                    1-  385     ;   r0x100E
                                    1-  386     ;; Starting pCode block
                                    1-  387     .segment "code"; module=main, function=_delay
                                    1-  389     ;local variable name mapping:
     0000                           1-  394     _delay:
                                    1-  395     ; 2 exit points
                                    1-  396     	.line	248, "main.c"; 	void delay(u16t time)
     0000 00rr                      1-  397     	MOVAR	r0x100B
     0001 01rr                      1-  398     	MOVR	STK00,W
     0002 00rr                      1-  399     	MOVAR	r0x100C
                                    1-  400     	.line	250, "main.c"; 	for(u16t i=0;i<time;i++);
     0003 02rr                      1-  401     	CLRR	r0x100D
     0004 02rr                      1-  402     	CLRR	r0x100E
     0005                           1-  403     _00219_DS_:
     0005 01rr                      1-  404     	MOVR	r0x100B,W
     0006 04rr                      1-  405     	SUBAR	r0x100E,W
     0007 0903                      1-  406     	BTRSS	STATUS,2
     0008 3rrr                      1-  407     	LGOTO	_00230_DS_
     0009 01rr                      1-  408     	MOVR	r0x100C,W
     000A 04rr                      1-  409     	SUBAR	r0x100D,W
     000B                           1-  410     _00230_DS_:
     000B 0C03                      1-  411     	BTRSC	STATUS,0
     000C 3rrr                      1-  412     	LGOTO	_00221_DS_
     000D 05rr                      1-  413     	INCR	r0x100D,F
     000E 0D03                      1-  414     	BTRSC	STATUS,2
     000F 05rr                      1-  415     	INCR	r0x100E,F
     0010 3rrr                      1-  416     	LGOTO	_00219_DS_
     0011                           1-  417     _00221_DS_:
                                    1-  418     	.line	251, "main.c"; 	}
                                    1-  419     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1-  420     ; exit point of _delay
                                    1-  422     ;***
                                    1-  423     ;  pBlock Stats: dbName = C
                                    1-  424     ;***
                                    1-  425     ;has an exit
                                    1-  426     ;; Starting pCode block
                                    1-  427     .segment "code"; module=main, function=_keyRead
     0000                           1-  429     _keyRead:
                                    1-  430     ; 2 exit points
                                    1-  431     	.line	227, "main.c"; 	if (KeyStatus & 0x08)
     0000 09rr                      1-  432     	BTRSS	_KeyStatus,3
     0001 3rrr                      1-  433     	LGOTO	_00210_DS_
                                    1-  434     	.line	229, "main.c"; 	keyCount++;
     0002 05rr                      1-  435     	INCR	_keyCount,F
                                    1-  436     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  437     	.line	230, "main.c"; 	if(keyCount >= 200)
     0003 21C8                      1-  438     	MOVIA	0xc8
     0004 04rr                      1-  439     	SUBAR	_keyCount,W
     0005 0803                      1-  440     	BTRSS	STATUS,0
     0006 3rrr                      1-  441     	LGOTO	_00211_DS_
                                    1-  442     	.line	232, "main.c"; 	keyCount = 200;
     0007 21C8                      1-  443     	MOVIA	0xc8
     0008 00rr                      1-  444     	MOVAR	_keyCount
     0009 3rrr                      1-  445     	LGOTO	_00211_DS_
                                    1-  446     ;;unsigned compare: left < lit (0x8=8), size=1
     000A                           1-  447     _00210_DS_:
                                    1-  448     	.line	238, "main.c"; 	if(keyCount >= 8)
     000A 2108                      1-  449     	MOVIA	0x08
     000B 04rr                      1-  450     	SUBAR	_keyCount,W
     000C 0803                      1-  451     	BTRSS	STATUS,0
     000D 3rrr                      1-  452     	LGOTO	_00208_DS_
                                    1-  453     	.line	240, "main.c"; 	keyCount = 0;
     000E 02rr                      1-  454     	CLRR	_keyCount
                                    1-  455     	.line	241, "main.c"; 	return	1;
     000F 2101                      1-  456     	MOVIA	0x01
     0010 3rrr                      1-  457     	LGOTO	_00212_DS_
     0011                           1-  458     _00208_DS_:
                                    1-  459     	.line	243, "main.c"; 	keyCount = 0;
     0011 02rr                      1-  460     	CLRR	_keyCount
     0012                           1-  461     _00211_DS_:
                                    1-  462     	.line	245, "main.c"; 	return 0;
     0012 2100                      1-  463     	MOVIA	0x00
     0013                           1-  464     _00212_DS_:
                                    1-  465     	.line	246, "main.c"; 	}
                                    1-  466     	RETURN	
     0013 0010                      3-   26 m1      ret
                                    1-  467     ; exit point of _keyRead
                                    1-  469     ;***
                                    1-  470     ;  pBlock Stats: dbName = C
                                    1-  471     ;***
                                    1-  472     ;has an exit
                                    1-  473     ;1 compiler assigned register :
                                    1-  474     ;   r0x100F
                                    1-  475     ;; Starting pCode block
                                    1-  476     .segment "code"; module=main, function=_KeyScan
                                    1-  478     ;local variable name mapping:
     0000                           1-  480     _KeyScan:
                                    1-  481     ; 2 exit points
                                    1-  482     	.line	218, "main.c"; 	KeyStatus = PORTB;
     0000 01rr                      1-  483     	MOVR	_PORTB,W
                                    1-  484     ;;1	MOVAR	r0x100F
                                    1-  485     	.line	221, "main.c"; 	}
                                    1-  486     	RETURN	
     0001 0010                      3-   26 m1      ret
                                    1-  487     ; exit point of _KeyScan
                                    1-  489     ;***
                                    1-  490     ;  pBlock Stats: dbName = C
                                    1-  491     ;***
                                    1-  492     ;has an exit
                                    1-  493     ;; Starting pCode block
                                    1-  494     .segment "code"; module=main, function=_Led10
     0000                           1-  496     _Led10:
                                    1-  497     ; 2 exit points
                                    1-  498     	.line	209, "main.c"; 	PORTB = 0x12;
     0000 2112                      1-  499     	MOVIA	0x12
     0001 00rr                      1-  500     	MOVAR	_PORTB
                                    1-  501     	.line	210, "main.c"; 	}
                                    1-  502     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  503     ; exit point of _Led10
                                    1-  505     ;***
                                    1-  506     ;  pBlock Stats: dbName = C
                                    1-  507     ;***
                                    1-  508     ;has an exit
                                    1-  509     ;; Starting pCode block
                                    1-  510     .segment "code"; module=main, function=_Led9
     0000                           1-  512     _Led9:
                                    1-  513     ; 2 exit points
                                    1-  514     	.line	204, "main.c"; 	PORTB = 0x12;
     0000 2112                      1-  515     	MOVIA	0x12
     0001 00rr                      1-  516     	MOVAR	_PORTB
                                    1-  517     	.line	205, "main.c"; 	}
                                    1-  518     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  519     ; exit point of _Led9
                                    1-  521     ;***
                                    1-  522     ;  pBlock Stats: dbName = C
                                    1-  523     ;***
                                    1-  524     ;has an exit
                                    1-  525     ;; Starting pCode block
                                    1-  526     .segment "code"; module=main, function=_Led8
     0000                           1-  528     _Led8:
                                    1-  529     ; 2 exit points
                                    1-  530     	.line	199, "main.c"; 	PORTB = 0x12;
     0000 2112                      1-  531     	MOVIA	0x12
     0001 00rr                      1-  532     	MOVAR	_PORTB
                                    1-  533     	.line	200, "main.c"; 	}
                                    1-  534     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  535     ; exit point of _Led8
                                    1-  537     ;***
                                    1-  538     ;  pBlock Stats: dbName = C
                                    1-  539     ;***
                                    1-  540     ;has an exit
                                    1-  541     ;; Starting pCode block
                                    1-  542     .segment "code"; module=main, function=_Led7
     0000                           1-  544     _Led7:
                                    1-  545     ; 2 exit points
                                    1-  546     	.line	194, "main.c"; 	PORTB = 0x12;
     0000 2112                      1-  547     	MOVIA	0x12
     0001 00rr                      1-  548     	MOVAR	_PORTB
                                    1-  549     	.line	195, "main.c"; 	}
                                    1-  550     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  551     ; exit point of _Led7
                                    1-  553     ;***
                                    1-  554     ;  pBlock Stats: dbName = C
                                    1-  555     ;***
                                    1-  556     ;has an exit
                                    1-  557     ;; Starting pCode block
                                    1-  558     .segment "code"; module=main, function=_Led6
     0000                           1-  560     _Led6:
                                    1-  561     ; 2 exit points
                                    1-  562     	.line	189, "main.c"; 	PORTB = 0x12;
     0000 2112                      1-  563     	MOVIA	0x12
     0001 00rr                      1-  564     	MOVAR	_PORTB
                                    1-  565     	.line	190, "main.c"; 	}
                                    1-  566     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  567     ; exit point of _Led6
                                    1-  569     ;***
                                    1-  570     ;  pBlock Stats: dbName = C
                                    1-  571     ;***
                                    1-  572     ;has an exit
                                    1-  573     ;; Starting pCode block
                                    1-  574     .segment "code"; module=main, function=_Led5
     0000                           1-  576     _Led5:
                                    1-  577     ; 2 exit points
                                    1-  578     	.line	184, "main.c"; 	PORTB = 0x12;
     0000 2112                      1-  579     	MOVIA	0x12
     0001 00rr                      1-  580     	MOVAR	_PORTB
                                    1-  581     	.line	185, "main.c"; 	}
                                    1-  582     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  583     ; exit point of _Led5
                                    1-  585     ;***
                                    1-  586     ;  pBlock Stats: dbName = C
                                    1-  587     ;***
                                    1-  588     ;has an exit
                                    1-  589     ;; Starting pCode block
                                    1-  590     .segment "code"; module=main, function=_Led4
     0000                           1-  592     _Led4:
                                    1-  593     ; 2 exit points
                                    1-  594     	.line	179, "main.c"; 	PORTB = 0x12;
     0000 2112                      1-  595     	MOVIA	0x12
     0001 00rr                      1-  596     	MOVAR	_PORTB
                                    1-  597     	.line	180, "main.c"; 	}
                                    1-  598     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  599     ; exit point of _Led4
                                    1-  601     ;***
                                    1-  602     ;  pBlock Stats: dbName = C
                                    1-  603     ;***
                                    1-  604     ;has an exit
                                    1-  605     ;; Starting pCode block
                                    1-  606     .segment "code"; module=main, function=_Led3
     0000                           1-  608     _Led3:
                                    1-  609     ; 2 exit points
                                    1-  610     	.line	174, "main.c"; 	PORTB = 0x12;
     0000 2112                      1-  611     	MOVIA	0x12
     0001 00rr                      1-  612     	MOVAR	_PORTB
                                    1-  613     	.line	175, "main.c"; 	}
                                    1-  614     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  615     ; exit point of _Led3
                                    1-  617     ;***
                                    1-  618     ;  pBlock Stats: dbName = C
                                    1-  619     ;***
                                    1-  620     ;has an exit
                                    1-  621     ;; Starting pCode block
                                    1-  622     .segment "code"; module=main, function=_Led2
     0000                           1-  624     _Led2:
                                    1-  625     ; 2 exit points
                                    1-  626     	.line	169, "main.c"; 	PORTB = 0x12;
     0000 2112                      1-  627     	MOVIA	0x12
     0001 00rr                      1-  628     	MOVAR	_PORTB
                                    1-  629     	.line	170, "main.c"; 	}
                                    1-  630     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  631     ; exit point of _Led2
                                    1-  633     ;***
                                    1-  634     ;  pBlock Stats: dbName = C
                                    1-  635     ;***
                                    1-  636     ;has an exit
                                    1-  637     ;; Starting pCode block
                                    1-  638     .segment "code"; module=main, function=_Led1
     0000                           1-  640     _Led1:
                                    1-  641     ; 2 exit points
                                    1-  642     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  643     	.line	152, "main.c"; 	if(ledCount >= 200)
     0000 21C8                      1-  644     	MOVIA	0xc8
     0001 04rr                      1-  645     	SUBAR	_ledCount,W
     0002 0803                      1-  646     	BTRSS	STATUS,0
     0003 3rrr                      1-  647     	LGOTO	_00154_DS_
                                    1-  648     	.line	154, "main.c"; 	ledCount = 0;
     0004 02rr                      1-  649     	CLRR	_ledCount
                                    1-  650     	.line	155, "main.c"; 	time++;
     0005 05rr                      1-  651     	INCR	_time,F
                                    1-  652     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  653     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1-  654     	.line	156, "main.c"; 	if(time > 2)
     0006 2103                      1-  655     	MOVIA	0x03
     0007 04rr                      1-  656     	SUBAR	_time,W
     0008 0C03                      1-  657     	BTRSC	STATUS,0
                                    1-  658     	.line	157, "main.c"; 	return;
     0009 3rrr                      1-  659     	LGOTO	_00160_DS_
     000A                           1-  660     _00154_DS_:
                                    1-  661     	.line	160, "main.c"; 	if(ledCount <100)
     000A 2164                      1-  662     	MOVIA	0x64
     000B 04rr                      1-  663     	SUBAR	_ledCount,W
     000C 0C03                      1-  664     	BTRSC	STATUS,0
     000D 3rrr                      1-  665     	LGOTO	_00158_DS_
                                    1-  666     	.line	161, "main.c"; 	PORTB = 0x02;
     000E 2102                      1-  667     	MOVIA	0x02
     000F 00rr                      1-  668     	MOVAR	_PORTB
     0010 3rrr                      1-  669     	LGOTO	_00160_DS_
                                    1-  670     ;;unsigned compare: left < lit (0xC8=200), size=1
     0011                           1-  671     _00158_DS_:
                                    1-  672     	.line	162, "main.c"; 	else if(ledCount < 200)
     0011 21C8                      1-  673     	MOVIA	0xc8
     0012 04rr                      1-  674     	SUBAR	_ledCount,W
     0013 0C03                      1-  675     	BTRSC	STATUS,0
     0014 3rrr                      1-  676     	LGOTO	_00160_DS_
                                    1-  677     	.line	163, "main.c"; 	PORTB = 0x10;
     0015 2110                      1-  678     	MOVIA	0x10
     0016 00rr                      1-  679     	MOVAR	_PORTB
     0017                           1-  680     _00160_DS_:
                                    1-  681     	.line	165, "main.c"; 	}
                                    1-  682     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1-  683     ; exit point of _Led1
                                    1-  685     ;***
                                    1-  686     ;  pBlock Stats: dbName = C
                                    1-  687     ;***
                                    1-  688     ;has an exit
                                    1-  689     ;functions called:
                                    1-  690     ;   _Led1
                                    1-  691     ;   _Led2
                                    1-  692     ;   _Led3
                                    1-  693     ;   _Led4
                                    1-  694     ;   _Led5
                                    1-  695     ;   _Led6
                                    1-  696     ;   _Led7
                                    1-  697     ;   _Led8
                                    1-  698     ;   _Led9
                                    1-  699     ;   _Led10
                                    1-  700     ;   _Led1
                                    1-  701     ;   _Led2
                                    1-  702     ;   _Led3
                                    1-  703     ;   _Led4
                                    1-  704     ;   _Led5
                                    1-  705     ;   _Led6
                                    1-  706     ;   _Led7
                                    1-  707     ;   _Led8
                                    1-  708     ;   _Led9
                                    1-  709     ;   _Led10
                                    1-  710     ;1 compiler assigned register :
                                    1-  711     ;   r0x1010
                                    1-  712     ;; Starting pCode block
                                    1-  713     .segment "code"; module=main, function=_ledCon
     0000                           1-  715     _ledCon:
                                    1-  716     ; 2 exit points
                                    1-  717     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1-  718     	.line	114, "main.c"; 	switch(workStep)
     0000 2101                      1-  719     	MOVIA	0x01
     0001 04rr                      1-  720     	SUBAR	_workStep,W
     0002 0803                      1-  721     	BTRSS	STATUS,0
     0003 3rrr                      1-  722     	LGOTO	_00135_DS_
                                    1-  723     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  724     ;;unsigned compare: left >= lit (0xB=11), size=1
     0004 210B                      1-  725     	MOVIA	0x0b
     0005 04rr                      1-  726     	SUBAR	_workStep,W
     0006 0C03                      1-  727     	BTRSC	STATUS,0
     0007 3rrr                      1-  728     	LGOTO	_00135_DS_
     0008 06rr                      1-  729     	DECR	_workStep,W
     0009 00rr                      1-  730     	MOVAR	r0x1010
     000A 21rr                      1-  731     	MOVIA	((_00146_DS_ >> 8) & 0xff)
     000B 008A                      1-  732     	MOVAR	PCHBUF
     000C 01rr                      1-  733     	MOVR	r0x1010,W
     000D 25rr                      1-  734     	ADDIA	_00146_DS_
     000E 0C03                      1-  735     	BTRSC	STATUS,0
     000F 058A                      1-  736     	INCR	PCHBUF,F
     0010 0082                      1-  737     	MOVAR	PCL
     0011                           1-  738     _00146_DS_:
     0011 3rrr                      1-  739     	LGOTO	_00125_DS_
     0012 3rrr                      1-  740     	LGOTO	_00126_DS_
     0013 3rrr                      1-  741     	LGOTO	_00127_DS_
     0014 3rrr                      1-  742     	LGOTO	_00128_DS_
     0015 3rrr                      1-  743     	LGOTO	_00129_DS_
     0016 3rrr                      1-  744     	LGOTO	_00130_DS_
     0017 3rrr                      1-  745     	LGOTO	_00131_DS_
     0018 3rrr                      1-  746     	LGOTO	_00132_DS_
     0019 3rrr                      1-  747     	LGOTO	_00133_DS_
     001A 3rrr                      1-  748     	LGOTO	_00134_DS_
     001B                           1-  749     _00125_DS_:
                                    1-  750     	.line	117, "main.c"; 	Led1();
     001B 2rrr                      1-  751     	LCALL	_Led1
                                    1-  752     	.line	118, "main.c"; 	break;
     001C 3rrr                      1-  753     	LGOTO	_00135_DS_
     001D                           1-  754     _00126_DS_:
                                    1-  755     	.line	120, "main.c"; 	Led2();
     001D 2rrr                      1-  756     	LCALL	_Led2
                                    1-  757     	.line	121, "main.c"; 	break;
     001E 3rrr                      1-  758     	LGOTO	_00135_DS_
     001F                           1-  759     _00127_DS_:
                                    1-  760     	.line	123, "main.c"; 	Led3();
     001F 2rrr                      1-  761     	LCALL	_Led3
                                    1-  762     	.line	124, "main.c"; 	break;
     0020 3rrr                      1-  763     	LGOTO	_00135_DS_
     0021                           1-  764     _00128_DS_:
                                    1-  765     	.line	126, "main.c"; 	Led4();
     0021 2rrr                      1-  766     	LCALL	_Led4
                                    1-  767     	.line	127, "main.c"; 	break;
     0022 3rrr                      1-  768     	LGOTO	_00135_DS_
     0023                           1-  769     _00129_DS_:
                                    1-  770     	.line	129, "main.c"; 	Led5();
     0023 2rrr                      1-  771     	LCALL	_Led5
                                    1-  772     	.line	130, "main.c"; 	break;
     0024 3rrr                      1-  773     	LGOTO	_00135_DS_
     0025                           1-  774     _00130_DS_:
                                    1-  775     	.line	132, "main.c"; 	Led6();
     0025 2rrr                      1-  776     	LCALL	_Led6
                                    1-  777     	.line	133, "main.c"; 	break;
     0026 3rrr                      1-  778     	LGOTO	_00135_DS_
     0027                           1-  779     _00131_DS_:
                                    1-  780     	.line	135, "main.c"; 	Led7();
     0027 2rrr                      1-  781     	LCALL	_Led7
                                    1-  782     	.line	136, "main.c"; 	break;
     0028 3rrr                      1-  783     	LGOTO	_00135_DS_
     0029                           1-  784     _00132_DS_:
                                    1-  785     	.line	138, "main.c"; 	Led8();
     0029 2rrr                      1-  786     	LCALL	_Led8
                                    1-  787     	.line	139, "main.c"; 	break;
     002A 3rrr                      1-  788     	LGOTO	_00135_DS_
     002B                           1-  789     _00133_DS_:
                                    1-  790     	.line	141, "main.c"; 	Led9();
     002B 2rrr                      1-  791     	LCALL	_Led9
                                    1-  792     	.line	142, "main.c"; 	break;
     002C 3rrr                      1-  793     	LGOTO	_00135_DS_
     002D                           1-  794     _00134_DS_:
                                    1-  795     	.line	144, "main.c"; 	Led10();
     002D 2rrr                      1-  796     	LCALL	_Led10
     002E                           1-  797     _00135_DS_:
                                    1-  798     	.line	147, "main.c"; 	ledCount++;
     002E 05rr                      1-  799     	INCR	_ledCount,F
                                    1-  800     	.line	148, "main.c"; 	}
                                    1-  801     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1-  802     ; exit point of _ledCon
                                    1-  805     ;	code size estimation:
                                    1-  806     ;	  222+    0 =   222 instructions (  444 byte)
                                    1-  808     	end
                                    1-  808     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 00000006
__PROCESSOR__           Constant 00800503
__sdcc_interrupt        Label    00000000
_00108_DS_              Label    00000019
_00118_DS_              Label    0000002B
_00120_DS_              Label    00000013
_00125_DS_              Label    0000001B
_00126_DS_              Label    0000001D
_00127_DS_              Label    0000001F
_00128_DS_              Label    00000021
_00129_DS_              Label    00000023
_00130_DS_              Label    00000025
_00131_DS_              Label    00000027
_00132_DS_              Label    00000029
_00133_DS_              Label    0000002B
_00134_DS_              Label    0000002D
_00135_DS_              Label    0000002E
_00146_DS_              Label    00000011
_00154_DS_              Label    0000000A
_00158_DS_              Label    00000011
_00160_DS_              Label    00000017
_00208_DS_              Label    00000011
_00210_DS_              Label    0000000A
_00211_DS_              Label    00000012
_00212_DS_              Label    00000013
_00219_DS_              Label    00000005
_00221_DS_              Label    00000011
_00230_DS_              Label    0000000B
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BPLCON                 Label    00000000
_BPLCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_delay                  Label    00000000
_FSR                    Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTB                  Label    00000000
_isr                    Label    00000000
_keyClick               Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_KeyScan                Label    00000000
_KeyStatus              Label    00000000
_Led1                   Label    00000000
_Led10                  Label    00000000
_Led2                   Label    00000000
_Led3                   Label    00000000
_Led4                   Label    00000000
_Led5                   Label    00000000
_Led6                   Label    00000000
_Led7                   Label    00000000
_Led8                   Label    00000000
_Led9                   Label    00000000
_ledCon                 Label    00000000
_ledCount               Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_time                   Label    00000000
_TMR0                   Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    00000027
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x100B                 Label    00000000
r0x100C                 Label    00000000
r0x100D                 Label    00000000
r0x100E                 Label    00000000
r0x1010                 Label    00000000
r0x1011                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a050d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A050D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000001FF
DATA ROM     = 0x00000000 - 0x000001FF
RESERVED MEM = 0x00000200 - 0x00000210
SRAM / SFR   = 0x00000000 - 0x00000000
